// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/requests/commit_offset_request.proto

//go:build !protoopaque

package queuepb

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CommitOffsetRequest stores the offset a consumer has successfully
// processed within a queue or topic.
type CommitOffsetRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Name of the queue or topic.
	QueueName *string `protobuf:"bytes,1,opt,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	// Identifier for the consumer group.
	ConsumerGroup *string `protobuf:"bytes,2,opt,name=consumer_group,json=consumerGroup" json:"consumer_group,omitempty"`
	// Offset that was last processed successfully.
	Offset *int64 `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	// Optional request metadata for tracing and auth.
	Metadata      *proto.RequestMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOffsetRequest) Reset() {
	*x = CommitOffsetRequest{}
	mi := &file_pkg_queue_proto_requests_commit_offset_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOffsetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOffsetRequest) ProtoMessage() {}

func (x *CommitOffsetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_requests_commit_offset_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommitOffsetRequest) GetQueueName() string {
	if x != nil && x.QueueName != nil {
		return *x.QueueName
	}
	return ""
}

func (x *CommitOffsetRequest) GetConsumerGroup() string {
	if x != nil && x.ConsumerGroup != nil {
		return *x.ConsumerGroup
	}
	return ""
}

func (x *CommitOffsetRequest) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *CommitOffsetRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CommitOffsetRequest) SetQueueName(v string) {
	x.QueueName = &v
}

func (x *CommitOffsetRequest) SetConsumerGroup(v string) {
	x.ConsumerGroup = &v
}

func (x *CommitOffsetRequest) SetOffset(v int64) {
	x.Offset = &v
}

func (x *CommitOffsetRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *CommitOffsetRequest) HasQueueName() bool {
	if x == nil {
		return false
	}
	return x.QueueName != nil
}

func (x *CommitOffsetRequest) HasConsumerGroup() bool {
	if x == nil {
		return false
	}
	return x.ConsumerGroup != nil
}

func (x *CommitOffsetRequest) HasOffset() bool {
	if x == nil {
		return false
	}
	return x.Offset != nil
}

func (x *CommitOffsetRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *CommitOffsetRequest) ClearQueueName() {
	x.QueueName = nil
}

func (x *CommitOffsetRequest) ClearConsumerGroup() {
	x.ConsumerGroup = nil
}

func (x *CommitOffsetRequest) ClearOffset() {
	x.Offset = nil
}

func (x *CommitOffsetRequest) ClearMetadata() {
	x.Metadata = nil
}

type CommitOffsetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of the queue or topic.
	QueueName *string
	// Identifier for the consumer group.
	ConsumerGroup *string
	// Offset that was last processed successfully.
	Offset *int64
	// Optional request metadata for tracing and auth.
	Metadata *proto.RequestMetadata
}

func (b0 CommitOffsetRequest_builder) Build() *CommitOffsetRequest {
	m0 := &CommitOffsetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.QueueName = b.QueueName
	x.ConsumerGroup = b.ConsumerGroup
	x.Offset = b.Offset
	x.Metadata = b.Metadata
	return m0
}

var File_pkg_queue_proto_requests_commit_offset_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_requests_commit_offset_request_proto_rawDesc = "" +
	"\n" +
	"4pkg/queue/proto/requests/commit_offset_request.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\x1a\x1dpkg/common/proto/common.proto\"\xb3\x01\n" +
	"\x13CommitOffsetRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12%\n" +
	"\x0econsumer_group\x18\x02 \x01(\tR\rconsumerGroup\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadataB\xcd\x01\n" +
	"\x14com.gcommon.v1.queueB\x18CommitOffsetRequestProtoP\x01Z1github.com/jdfalk/gcommon/pkg/queue/proto;queuepb\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_queue_proto_requests_commit_offset_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_requests_commit_offset_request_proto_goTypes = []any{
	(*CommitOffsetRequest)(nil),   // 0: gcommon.v1.queue.CommitOffsetRequest
	(*proto.RequestMetadata)(nil), // 1: gcommon.v1.common.RequestMetadata
}
var file_pkg_queue_proto_requests_commit_offset_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.CommitOffsetRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_requests_commit_offset_request_proto_init() }
func file_pkg_queue_proto_requests_commit_offset_request_proto_init() {
	if File_pkg_queue_proto_requests_commit_offset_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_requests_commit_offset_request_proto_rawDesc), len(file_pkg_queue_proto_requests_commit_offset_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_requests_commit_offset_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_requests_commit_offset_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_requests_commit_offset_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_requests_commit_offset_request_proto = out.File
	file_pkg_queue_proto_requests_commit_offset_request_proto_goTypes = nil
	file_pkg_queue_proto_requests_commit_offset_request_proto_depIdxs = nil
}
