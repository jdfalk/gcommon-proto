// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/responses/health_check_response.proto

//go:build !protoopaque

package queuepb

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// HealthCheckResponse returns queue service health status.
type HealthCheckResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Overall queue service health.
	Status *proto.HealthStatus `protobuf:"varint,1,opt,name=status,enum=gcommon.v1.common.HealthStatus" json:"status,omitempty"`
	// Whether the queue connection is operational.
	ConnectionOk *bool `protobuf:"varint,2,opt,name=connection_ok,json=connectionOk" json:"connection_ok,omitempty"`
	// Time taken to check the queue health.
	ResponseTime *durationpb.Duration `protobuf:"bytes,3,opt,name=response_time,json=responseTime" json:"response_time,omitempty"`
	// Error information if the check failed.
	Error         *proto.Error `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_pkg_queue_proto_responses_health_check_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_health_check_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HealthCheckResponse) GetStatus() proto.HealthStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return proto.HealthStatus(0)
}

func (x *HealthCheckResponse) GetConnectionOk() bool {
	if x != nil && x.ConnectionOk != nil {
		return *x.ConnectionOk
	}
	return false
}

func (x *HealthCheckResponse) GetResponseTime() *durationpb.Duration {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

func (x *HealthCheckResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *HealthCheckResponse) SetStatus(v proto.HealthStatus) {
	x.Status = &v
}

func (x *HealthCheckResponse) SetConnectionOk(v bool) {
	x.ConnectionOk = &v
}

func (x *HealthCheckResponse) SetResponseTime(v *durationpb.Duration) {
	x.ResponseTime = v
}

func (x *HealthCheckResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *HealthCheckResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *HealthCheckResponse) HasConnectionOk() bool {
	if x == nil {
		return false
	}
	return x.ConnectionOk != nil
}

func (x *HealthCheckResponse) HasResponseTime() bool {
	if x == nil {
		return false
	}
	return x.ResponseTime != nil
}

func (x *HealthCheckResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *HealthCheckResponse) ClearStatus() {
	x.Status = nil
}

func (x *HealthCheckResponse) ClearConnectionOk() {
	x.ConnectionOk = nil
}

func (x *HealthCheckResponse) ClearResponseTime() {
	x.ResponseTime = nil
}

func (x *HealthCheckResponse) ClearError() {
	x.Error = nil
}

type HealthCheckResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Overall queue service health.
	Status *proto.HealthStatus
	// Whether the queue connection is operational.
	ConnectionOk *bool
	// Time taken to check the queue health.
	ResponseTime *durationpb.Duration
	// Error information if the check failed.
	Error *proto.Error
}

func (b0 HealthCheckResponse_builder) Build() *HealthCheckResponse {
	m0 := &HealthCheckResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	x.ConnectionOk = b.ConnectionOk
	x.ResponseTime = b.ResponseTime
	x.Error = b.Error
	return m0
}

var File_pkg_queue_proto_responses_health_check_response_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_responses_health_check_response_proto_rawDesc = "" +
	"\n" +
	"5pkg/queue/proto/responses/health_check_response.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\x1a\x1egoogle/protobuf/duration.proto\x1a*pkg/common/proto/enums/health_status.proto\x1a%pkg/common/proto/messages/error.proto\"\xeb\x01\n" +
	"\x13HealthCheckResponse\x127\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1f.gcommon.v1.common.HealthStatusR\x06status\x12#\n" +
	"\rconnection_ok\x18\x02 \x01(\bR\fconnectionOk\x12B\n" +
	"\rresponse_time\x18\x03 \x01(\v2\x19.google.protobuf.DurationB\x02(\x01R\fresponseTime\x122\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorB\x02(\x01R\x05errorB\xcd\x01\n" +
	"\x14com.gcommon.v1.queueB\x18HealthCheckResponseProtoP\x01Z1github.com/jdfalk/gcommon/pkg/queue/proto;queuepb\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_queue_proto_responses_health_check_response_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_responses_health_check_response_proto_goTypes = []any{
	(*HealthCheckResponse)(nil), // 0: gcommon.v1.queue.HealthCheckResponse
	(proto.HealthStatus)(0),     // 1: gcommon.v1.common.HealthStatus
	(*durationpb.Duration)(nil), // 2: google.protobuf.Duration
	(*proto.Error)(nil),         // 3: gcommon.v1.common.Error
}
var file_pkg_queue_proto_responses_health_check_response_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.HealthCheckResponse.status:type_name -> gcommon.v1.common.HealthStatus
	2, // 1: gcommon.v1.queue.HealthCheckResponse.response_time:type_name -> google.protobuf.Duration
	3, // 2: gcommon.v1.queue.HealthCheckResponse.error:type_name -> gcommon.v1.common.Error
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_responses_health_check_response_proto_init() }
func file_pkg_queue_proto_responses_health_check_response_proto_init() {
	if File_pkg_queue_proto_responses_health_check_response_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_responses_health_check_response_proto_rawDesc), len(file_pkg_queue_proto_responses_health_check_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_responses_health_check_response_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_responses_health_check_response_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_responses_health_check_response_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_responses_health_check_response_proto = out.File
	file_pkg_queue_proto_responses_health_check_response_proto_goTypes = nil
	file_pkg_queue_proto_responses_health_check_response_proto_depIdxs = nil
}
