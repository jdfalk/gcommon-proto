// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/auth/proto/responses/remove_role_response.proto

//go:build !protoopaque

package authpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// RemoveRoleResponse confirms successful role removal from a user.
// Provides information about the removal operation including
// the removed role and removal metadata for audit purposes.
type RemoveRoleResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// User ID from whom the role was removed
	UserId *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// Username of the user
	Username *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// Role that was removed from the user
	Role *Role `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
	// Timestamp when the role was removed
	RemovedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=removed_at,json=removedAt" json:"removed_at,omitempty"`
	// ID of the admin user who performed the removal
	RemovedByUserId *string `protobuf:"bytes,5,opt,name=removed_by_user_id,json=removedByUserId" json:"removed_by_user_id,omitempty"`
	// Username of the admin who performed the removal
	RemovedByUsername *string `protobuf:"bytes,6,opt,name=removed_by_username,json=removedByUsername" json:"removed_by_username,omitempty"`
	// Whether this removal was effective immediately
	EffectiveImmediately *bool `protobuf:"varint,7,opt,name=effective_immediately,json=effectiveImmediately" json:"effective_immediately,omitempty"`
	// Whether the user still has other roles assigned
	HasRemainingRoles *bool `protobuf:"varint,8,opt,name=has_remaining_roles,json=hasRemainingRoles" json:"has_remaining_roles,omitempty"`
	// Count of remaining roles for the user
	RemainingRoleCount *int32 `protobuf:"varint,9,opt,name=remaining_role_count,json=remainingRoleCount" json:"remaining_role_count,omitempty"`
	// Success message describing the removal
	Message       *string `protobuf:"bytes,10,opt,name=message" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRoleResponse) Reset() {
	*x = RemoveRoleResponse{}
	mi := &file_pkg_auth_proto_responses_remove_role_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoleResponse) ProtoMessage() {}

func (x *RemoveRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_proto_responses_remove_role_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RemoveRoleResponse) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *RemoveRoleResponse) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *RemoveRoleResponse) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RemoveRoleResponse) GetRemovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RemovedAt
	}
	return nil
}

func (x *RemoveRoleResponse) GetRemovedByUserId() string {
	if x != nil && x.RemovedByUserId != nil {
		return *x.RemovedByUserId
	}
	return ""
}

func (x *RemoveRoleResponse) GetRemovedByUsername() string {
	if x != nil && x.RemovedByUsername != nil {
		return *x.RemovedByUsername
	}
	return ""
}

func (x *RemoveRoleResponse) GetEffectiveImmediately() bool {
	if x != nil && x.EffectiveImmediately != nil {
		return *x.EffectiveImmediately
	}
	return false
}

func (x *RemoveRoleResponse) GetHasRemainingRoles() bool {
	if x != nil && x.HasRemainingRoles != nil {
		return *x.HasRemainingRoles
	}
	return false
}

func (x *RemoveRoleResponse) GetRemainingRoleCount() int32 {
	if x != nil && x.RemainingRoleCount != nil {
		return *x.RemainingRoleCount
	}
	return 0
}

func (x *RemoveRoleResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *RemoveRoleResponse) SetUserId(v string) {
	x.UserId = &v
}

func (x *RemoveRoleResponse) SetUsername(v string) {
	x.Username = &v
}

func (x *RemoveRoleResponse) SetRole(v *Role) {
	x.Role = v
}

func (x *RemoveRoleResponse) SetRemovedAt(v *timestamppb.Timestamp) {
	x.RemovedAt = v
}

func (x *RemoveRoleResponse) SetRemovedByUserId(v string) {
	x.RemovedByUserId = &v
}

func (x *RemoveRoleResponse) SetRemovedByUsername(v string) {
	x.RemovedByUsername = &v
}

func (x *RemoveRoleResponse) SetEffectiveImmediately(v bool) {
	x.EffectiveImmediately = &v
}

func (x *RemoveRoleResponse) SetHasRemainingRoles(v bool) {
	x.HasRemainingRoles = &v
}

func (x *RemoveRoleResponse) SetRemainingRoleCount(v int32) {
	x.RemainingRoleCount = &v
}

func (x *RemoveRoleResponse) SetMessage(v string) {
	x.Message = &v
}

func (x *RemoveRoleResponse) HasUserId() bool {
	if x == nil {
		return false
	}
	return x.UserId != nil
}

func (x *RemoveRoleResponse) HasUsername() bool {
	if x == nil {
		return false
	}
	return x.Username != nil
}

func (x *RemoveRoleResponse) HasRole() bool {
	if x == nil {
		return false
	}
	return x.Role != nil
}

func (x *RemoveRoleResponse) HasRemovedAt() bool {
	if x == nil {
		return false
	}
	return x.RemovedAt != nil
}

func (x *RemoveRoleResponse) HasRemovedByUserId() bool {
	if x == nil {
		return false
	}
	return x.RemovedByUserId != nil
}

func (x *RemoveRoleResponse) HasRemovedByUsername() bool {
	if x == nil {
		return false
	}
	return x.RemovedByUsername != nil
}

func (x *RemoveRoleResponse) HasEffectiveImmediately() bool {
	if x == nil {
		return false
	}
	return x.EffectiveImmediately != nil
}

func (x *RemoveRoleResponse) HasHasRemainingRoles() bool {
	if x == nil {
		return false
	}
	return x.HasRemainingRoles != nil
}

func (x *RemoveRoleResponse) HasRemainingRoleCount() bool {
	if x == nil {
		return false
	}
	return x.RemainingRoleCount != nil
}

func (x *RemoveRoleResponse) HasMessage() bool {
	if x == nil {
		return false
	}
	return x.Message != nil
}

func (x *RemoveRoleResponse) ClearUserId() {
	x.UserId = nil
}

func (x *RemoveRoleResponse) ClearUsername() {
	x.Username = nil
}

func (x *RemoveRoleResponse) ClearRole() {
	x.Role = nil
}

func (x *RemoveRoleResponse) ClearRemovedAt() {
	x.RemovedAt = nil
}

func (x *RemoveRoleResponse) ClearRemovedByUserId() {
	x.RemovedByUserId = nil
}

func (x *RemoveRoleResponse) ClearRemovedByUsername() {
	x.RemovedByUsername = nil
}

func (x *RemoveRoleResponse) ClearEffectiveImmediately() {
	x.EffectiveImmediately = nil
}

func (x *RemoveRoleResponse) ClearHasRemainingRoles() {
	x.HasRemainingRoles = nil
}

func (x *RemoveRoleResponse) ClearRemainingRoleCount() {
	x.RemainingRoleCount = nil
}

func (x *RemoveRoleResponse) ClearMessage() {
	x.Message = nil
}

type RemoveRoleResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// User ID from whom the role was removed
	UserId *string
	// Username of the user
	Username *string
	// Role that was removed from the user
	Role *Role
	// Timestamp when the role was removed
	RemovedAt *timestamppb.Timestamp
	// ID of the admin user who performed the removal
	RemovedByUserId *string
	// Username of the admin who performed the removal
	RemovedByUsername *string
	// Whether this removal was effective immediately
	EffectiveImmediately *bool
	// Whether the user still has other roles assigned
	HasRemainingRoles *bool
	// Count of remaining roles for the user
	RemainingRoleCount *int32
	// Success message describing the removal
	Message *string
}

func (b0 RemoveRoleResponse_builder) Build() *RemoveRoleResponse {
	m0 := &RemoveRoleResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.UserId = b.UserId
	x.Username = b.Username
	x.Role = b.Role
	x.RemovedAt = b.RemovedAt
	x.RemovedByUserId = b.RemovedByUserId
	x.RemovedByUsername = b.RemovedByUsername
	x.EffectiveImmediately = b.EffectiveImmediately
	x.HasRemainingRoles = b.HasRemainingRoles
	x.RemainingRoleCount = b.RemainingRoleCount
	x.Message = b.Message
	return m0
}

var File_pkg_auth_proto_responses_remove_role_response_proto protoreflect.FileDescriptor

const file_pkg_auth_proto_responses_remove_role_response_proto_rawDesc = "" +
	"\n" +
	"3pkg/auth/proto/responses/remove_role_response.proto\x12\x0fgcommon.v1.auth\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1fpkg/auth/proto/types/role.proto\"\xbd\x03\n" +
	"\x12RemoveRoleResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12)\n" +
	"\x04role\x18\x03 \x01(\v2\x15.gcommon.v1.auth.RoleR\x04role\x129\n" +
	"\n" +
	"removed_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tremovedAt\x12+\n" +
	"\x12removed_by_user_id\x18\x05 \x01(\tR\x0fremovedByUserId\x12.\n" +
	"\x13removed_by_username\x18\x06 \x01(\tR\x11removedByUsername\x123\n" +
	"\x15effective_immediately\x18\a \x01(\bR\x14effectiveImmediately\x12.\n" +
	"\x13has_remaining_roles\x18\b \x01(\bR\x11hasRemainingRoles\x120\n" +
	"\x14remaining_role_count\x18\t \x01(\x05R\x12remainingRoleCount\x12\x18\n" +
	"\amessage\x18\n" +
	" \x01(\tR\amessageB\xc5\x01\n" +
	"\x13com.gcommon.v1.authB\x17RemoveRoleResponseProtoP\x01Z/github.com/jdfalk/gcommon/pkg/auth/proto;authpb\xa2\x02\x03GVA\xaa\x02\x0fGcommon.V1.Auth\xca\x02\x0fGcommon\\V1\\Auth\xe2\x02\x1bGcommon\\V1\\Auth\\GPBMetadata\xea\x02\x11Gcommon::V1::Auth\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_auth_proto_responses_remove_role_response_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_auth_proto_responses_remove_role_response_proto_goTypes = []any{
	(*RemoveRoleResponse)(nil),    // 0: gcommon.v1.auth.RemoveRoleResponse
	(*Role)(nil),                  // 1: gcommon.v1.auth.Role
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_pkg_auth_proto_responses_remove_role_response_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.auth.RemoveRoleResponse.role:type_name -> gcommon.v1.auth.Role
	2, // 1: gcommon.v1.auth.RemoveRoleResponse.removed_at:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_auth_proto_responses_remove_role_response_proto_init() }
func file_pkg_auth_proto_responses_remove_role_response_proto_init() {
	if File_pkg_auth_proto_responses_remove_role_response_proto != nil {
		return
	}
	file_pkg_auth_proto_types_role_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_auth_proto_responses_remove_role_response_proto_rawDesc), len(file_pkg_auth_proto_responses_remove_role_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_auth_proto_responses_remove_role_response_proto_goTypes,
		DependencyIndexes: file_pkg_auth_proto_responses_remove_role_response_proto_depIdxs,
		MessageInfos:      file_pkg_auth_proto_responses_remove_role_response_proto_msgTypes,
	}.Build()
	File_pkg_auth_proto_responses_remove_role_response_proto = out.File
	file_pkg_auth_proto_responses_remove_role_response_proto_goTypes = nil
	file_pkg_auth_proto_responses_remove_role_response_proto_depIdxs = nil
}
