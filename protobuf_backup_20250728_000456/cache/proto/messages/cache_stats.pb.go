// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/cache/proto/messages/cache_stats.proto

//go:build !protoopaque

package cachepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Cache statistics and performance metrics.
// Provides detailed information about cache usage and performance.
type CacheStats struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Total number of cached items
	TotalItems *int64 `protobuf:"varint,1,opt,name=total_items,json=totalItems" json:"total_items,omitempty"`
	// Total cache hits
	CacheHits *int64 `protobuf:"varint,2,opt,name=cache_hits,json=cacheHits" json:"cache_hits,omitempty"`
	// Total cache misses
	CacheMisses *int64 `protobuf:"varint,3,opt,name=cache_misses,json=cacheMisses" json:"cache_misses,omitempty"`
	// Cache hit ratio (0.0 to 1.0)
	HitRatio *float64 `protobuf:"fixed64,4,opt,name=hit_ratio,json=hitRatio" json:"hit_ratio,omitempty"`
	// Memory usage in bytes
	MemoryUsage *int64 `protobuf:"varint,5,opt,name=memory_usage,json=memoryUsage" json:"memory_usage,omitempty"`
	// Maximum memory limit in bytes
	MemoryLimit *int64 `protobuf:"varint,6,opt,name=memory_limit,json=memoryLimit" json:"memory_limit,omitempty"`
	// Number of evicted items
	EvictedItems *int64 `protobuf:"varint,7,opt,name=evicted_items,json=evictedItems" json:"evicted_items,omitempty"`
	// Number of expired items
	ExpiredItems *int64 `protobuf:"varint,8,opt,name=expired_items,json=expiredItems" json:"expired_items,omitempty"`
	// Average access time in milliseconds
	AvgAccessTimeMs *float64 `protobuf:"fixed64,9,opt,name=avg_access_time_ms,json=avgAccessTimeMs" json:"avg_access_time_ms,omitempty"`
	// Last reset timestamp
	LastReset *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_reset,json=lastReset" json:"last_reset,omitempty"`
	// Cache uptime in seconds
	UptimeSeconds *int64 `protobuf:"varint,11,opt,name=uptime_seconds,json=uptimeSeconds" json:"uptime_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CacheStats) Reset() {
	*x = CacheStats{}
	mi := &file_pkg_cache_proto_messages_cache_stats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheStats) ProtoMessage() {}

func (x *CacheStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_cache_proto_messages_cache_stats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CacheStats) GetTotalItems() int64 {
	if x != nil && x.TotalItems != nil {
		return *x.TotalItems
	}
	return 0
}

func (x *CacheStats) GetCacheHits() int64 {
	if x != nil && x.CacheHits != nil {
		return *x.CacheHits
	}
	return 0
}

func (x *CacheStats) GetCacheMisses() int64 {
	if x != nil && x.CacheMisses != nil {
		return *x.CacheMisses
	}
	return 0
}

func (x *CacheStats) GetHitRatio() float64 {
	if x != nil && x.HitRatio != nil {
		return *x.HitRatio
	}
	return 0
}

func (x *CacheStats) GetMemoryUsage() int64 {
	if x != nil && x.MemoryUsage != nil {
		return *x.MemoryUsage
	}
	return 0
}

func (x *CacheStats) GetMemoryLimit() int64 {
	if x != nil && x.MemoryLimit != nil {
		return *x.MemoryLimit
	}
	return 0
}

func (x *CacheStats) GetEvictedItems() int64 {
	if x != nil && x.EvictedItems != nil {
		return *x.EvictedItems
	}
	return 0
}

func (x *CacheStats) GetExpiredItems() int64 {
	if x != nil && x.ExpiredItems != nil {
		return *x.ExpiredItems
	}
	return 0
}

func (x *CacheStats) GetAvgAccessTimeMs() float64 {
	if x != nil && x.AvgAccessTimeMs != nil {
		return *x.AvgAccessTimeMs
	}
	return 0
}

func (x *CacheStats) GetLastReset() *timestamppb.Timestamp {
	if x != nil {
		return x.LastReset
	}
	return nil
}

func (x *CacheStats) GetUptimeSeconds() int64 {
	if x != nil && x.UptimeSeconds != nil {
		return *x.UptimeSeconds
	}
	return 0
}

func (x *CacheStats) SetTotalItems(v int64) {
	x.TotalItems = &v
}

func (x *CacheStats) SetCacheHits(v int64) {
	x.CacheHits = &v
}

func (x *CacheStats) SetCacheMisses(v int64) {
	x.CacheMisses = &v
}

func (x *CacheStats) SetHitRatio(v float64) {
	x.HitRatio = &v
}

func (x *CacheStats) SetMemoryUsage(v int64) {
	x.MemoryUsage = &v
}

func (x *CacheStats) SetMemoryLimit(v int64) {
	x.MemoryLimit = &v
}

func (x *CacheStats) SetEvictedItems(v int64) {
	x.EvictedItems = &v
}

func (x *CacheStats) SetExpiredItems(v int64) {
	x.ExpiredItems = &v
}

func (x *CacheStats) SetAvgAccessTimeMs(v float64) {
	x.AvgAccessTimeMs = &v
}

func (x *CacheStats) SetLastReset(v *timestamppb.Timestamp) {
	x.LastReset = v
}

func (x *CacheStats) SetUptimeSeconds(v int64) {
	x.UptimeSeconds = &v
}

func (x *CacheStats) HasTotalItems() bool {
	if x == nil {
		return false
	}
	return x.TotalItems != nil
}

func (x *CacheStats) HasCacheHits() bool {
	if x == nil {
		return false
	}
	return x.CacheHits != nil
}

func (x *CacheStats) HasCacheMisses() bool {
	if x == nil {
		return false
	}
	return x.CacheMisses != nil
}

func (x *CacheStats) HasHitRatio() bool {
	if x == nil {
		return false
	}
	return x.HitRatio != nil
}

func (x *CacheStats) HasMemoryUsage() bool {
	if x == nil {
		return false
	}
	return x.MemoryUsage != nil
}

func (x *CacheStats) HasMemoryLimit() bool {
	if x == nil {
		return false
	}
	return x.MemoryLimit != nil
}

func (x *CacheStats) HasEvictedItems() bool {
	if x == nil {
		return false
	}
	return x.EvictedItems != nil
}

func (x *CacheStats) HasExpiredItems() bool {
	if x == nil {
		return false
	}
	return x.ExpiredItems != nil
}

func (x *CacheStats) HasAvgAccessTimeMs() bool {
	if x == nil {
		return false
	}
	return x.AvgAccessTimeMs != nil
}

func (x *CacheStats) HasLastReset() bool {
	if x == nil {
		return false
	}
	return x.LastReset != nil
}

func (x *CacheStats) HasUptimeSeconds() bool {
	if x == nil {
		return false
	}
	return x.UptimeSeconds != nil
}

func (x *CacheStats) ClearTotalItems() {
	x.TotalItems = nil
}

func (x *CacheStats) ClearCacheHits() {
	x.CacheHits = nil
}

func (x *CacheStats) ClearCacheMisses() {
	x.CacheMisses = nil
}

func (x *CacheStats) ClearHitRatio() {
	x.HitRatio = nil
}

func (x *CacheStats) ClearMemoryUsage() {
	x.MemoryUsage = nil
}

func (x *CacheStats) ClearMemoryLimit() {
	x.MemoryLimit = nil
}

func (x *CacheStats) ClearEvictedItems() {
	x.EvictedItems = nil
}

func (x *CacheStats) ClearExpiredItems() {
	x.ExpiredItems = nil
}

func (x *CacheStats) ClearAvgAccessTimeMs() {
	x.AvgAccessTimeMs = nil
}

func (x *CacheStats) ClearLastReset() {
	x.LastReset = nil
}

func (x *CacheStats) ClearUptimeSeconds() {
	x.UptimeSeconds = nil
}

type CacheStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total number of cached items
	TotalItems *int64
	// Total cache hits
	CacheHits *int64
	// Total cache misses
	CacheMisses *int64
	// Cache hit ratio (0.0 to 1.0)
	HitRatio *float64
	// Memory usage in bytes
	MemoryUsage *int64
	// Maximum memory limit in bytes
	MemoryLimit *int64
	// Number of evicted items
	EvictedItems *int64
	// Number of expired items
	ExpiredItems *int64
	// Average access time in milliseconds
	AvgAccessTimeMs *float64
	// Last reset timestamp
	LastReset *timestamppb.Timestamp
	// Cache uptime in seconds
	UptimeSeconds *int64
}

func (b0 CacheStats_builder) Build() *CacheStats {
	m0 := &CacheStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.TotalItems = b.TotalItems
	x.CacheHits = b.CacheHits
	x.CacheMisses = b.CacheMisses
	x.HitRatio = b.HitRatio
	x.MemoryUsage = b.MemoryUsage
	x.MemoryLimit = b.MemoryLimit
	x.EvictedItems = b.EvictedItems
	x.ExpiredItems = b.ExpiredItems
	x.AvgAccessTimeMs = b.AvgAccessTimeMs
	x.LastReset = b.LastReset
	x.UptimeSeconds = b.UptimeSeconds
	return m0
}

var File_pkg_cache_proto_messages_cache_stats_proto protoreflect.FileDescriptor

const file_pkg_cache_proto_messages_cache_stats_proto_rawDesc = "" +
	"\n" +
	"*pkg/cache/proto/messages/cache_stats.proto\x12\x10gcommon.v1.cache\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xab\x03\n" +
	"\n" +
	"CacheStats\x12\x1f\n" +
	"\vtotal_items\x18\x01 \x01(\x03R\n" +
	"totalItems\x12\x1d\n" +
	"\n" +
	"cache_hits\x18\x02 \x01(\x03R\tcacheHits\x12!\n" +
	"\fcache_misses\x18\x03 \x01(\x03R\vcacheMisses\x12\x1b\n" +
	"\thit_ratio\x18\x04 \x01(\x01R\bhitRatio\x12!\n" +
	"\fmemory_usage\x18\x05 \x01(\x03R\vmemoryUsage\x12!\n" +
	"\fmemory_limit\x18\x06 \x01(\x03R\vmemoryLimit\x12#\n" +
	"\revicted_items\x18\a \x01(\x03R\fevictedItems\x12#\n" +
	"\rexpired_items\x18\b \x01(\x03R\fexpiredItems\x12+\n" +
	"\x12avg_access_time_ms\x18\t \x01(\x01R\x0favgAccessTimeMs\x129\n" +
	"\n" +
	"last_reset\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tlastReset\x12%\n" +
	"\x0euptime_seconds\x18\v \x01(\x03R\ruptimeSecondsB\xc4\x01\n" +
	"\x14com.gcommon.v1.cacheB\x0fCacheStatsProtoP\x01Z1github.com/jdfalk/gcommon/pkg/cache/proto;cachepb\xa2\x02\x03GVC\xaa\x02\x10Gcommon.V1.Cache\xca\x02\x10Gcommon\\V1\\Cache\xe2\x02\x1cGcommon\\V1\\Cache\\GPBMetadata\xea\x02\x12Gcommon::V1::Cache\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_cache_proto_messages_cache_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_cache_proto_messages_cache_stats_proto_goTypes = []any{
	(*CacheStats)(nil),            // 0: gcommon.v1.cache.CacheStats
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_pkg_cache_proto_messages_cache_stats_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.cache.CacheStats.last_reset:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_cache_proto_messages_cache_stats_proto_init() }
func file_pkg_cache_proto_messages_cache_stats_proto_init() {
	if File_pkg_cache_proto_messages_cache_stats_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_cache_proto_messages_cache_stats_proto_rawDesc), len(file_pkg_cache_proto_messages_cache_stats_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_cache_proto_messages_cache_stats_proto_goTypes,
		DependencyIndexes: file_pkg_cache_proto_messages_cache_stats_proto_depIdxs,
		MessageInfos:      file_pkg_cache_proto_messages_cache_stats_proto_msgTypes,
	}.Build()
	File_pkg_cache_proto_messages_cache_stats_proto = out.File
	file_pkg_cache_proto_messages_cache_stats_proto_goTypes = nil
	file_pkg_cache_proto_messages_cache_stats_proto_depIdxs = nil
}
