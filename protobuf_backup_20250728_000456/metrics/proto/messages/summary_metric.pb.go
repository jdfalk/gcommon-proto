// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/messages/summary_metric.proto

//go:build !protoopaque

package metricspb

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// SummaryQuantile represents a single quantile in a summary.
type SummaryQuantile struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Quantile value (0.0-1.0, e.g., 0.5 for median, 0.95 for 95th percentile)
	Quantile *float64 `protobuf:"fixed64,1,opt,name=quantile" json:"quantile,omitempty"`
	// Value at this quantile
	Value         *float64 `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummaryQuantile) Reset() {
	*x = SummaryQuantile{}
	mi := &file_pkg_metrics_proto_messages_summary_metric_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryQuantile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryQuantile) ProtoMessage() {}

func (x *SummaryQuantile) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_messages_summary_metric_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SummaryQuantile) GetQuantile() float64 {
	if x != nil && x.Quantile != nil {
		return *x.Quantile
	}
	return 0
}

func (x *SummaryQuantile) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *SummaryQuantile) SetQuantile(v float64) {
	x.Quantile = &v
}

func (x *SummaryQuantile) SetValue(v float64) {
	x.Value = &v
}

func (x *SummaryQuantile) HasQuantile() bool {
	if x == nil {
		return false
	}
	return x.Quantile != nil
}

func (x *SummaryQuantile) HasValue() bool {
	if x == nil {
		return false
	}
	return x.Value != nil
}

func (x *SummaryQuantile) ClearQuantile() {
	x.Quantile = nil
}

func (x *SummaryQuantile) ClearValue() {
	x.Value = nil
}

type SummaryQuantile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Quantile value (0.0-1.0, e.g., 0.5 for median, 0.95 for 95th percentile)
	Quantile *float64
	// Value at this quantile
	Value *float64
}

func (b0 SummaryQuantile_builder) Build() *SummaryQuantile {
	m0 := &SummaryQuantile{}
	b, x := &b0, m0
	_, _ = b, x
	x.Quantile = b.Quantile
	x.Value = b.Value
	return m0
}

// *
// SummaryMetric represents a summary distribution with quantiles.
// Used for tracking distributions with pre-calculated quantiles.
type SummaryMetric struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Metric name (e.g., "http_request_duration_seconds")
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Total count of observations
	SampleCount *uint64 `protobuf:"varint,2,opt,name=sample_count,json=sampleCount" json:"sample_count,omitempty"`
	// Sum of all observed values
	SampleSum *float64 `protobuf:"fixed64,3,opt,name=sample_sum,json=sampleSum" json:"sample_sum,omitempty"`
	// Quantiles (e.g., 0.5, 0.9, 0.95, 0.99)
	Quantiles []*SummaryQuantile `protobuf:"bytes,4,rep,name=quantiles" json:"quantiles,omitempty"`
	// Labels for metric dimensions
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Timestamp when metric was recorded
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp" json:"timestamp,omitempty"`
	// Help text describing the metric
	Help *string `protobuf:"bytes,7,opt,name=help" json:"help,omitempty"`
	// Metric unit (e.g., "seconds", "bytes")
	Unit *string `protobuf:"bytes,8,opt,name=unit" json:"unit,omitempty"`
	// Maximum age of observations in the summary
	MaxAge *durationpb.Duration `protobuf:"bytes,9,opt,name=max_age,json=maxAge" json:"max_age,omitempty"`
	// Metadata for request tracing
	Metadata      *proto.RequestMetadata `protobuf:"bytes,10,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummaryMetric) Reset() {
	*x = SummaryMetric{}
	mi := &file_pkg_metrics_proto_messages_summary_metric_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryMetric) ProtoMessage() {}

func (x *SummaryMetric) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_messages_summary_metric_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SummaryMetric) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SummaryMetric) GetSampleCount() uint64 {
	if x != nil && x.SampleCount != nil {
		return *x.SampleCount
	}
	return 0
}

func (x *SummaryMetric) GetSampleSum() float64 {
	if x != nil && x.SampleSum != nil {
		return *x.SampleSum
	}
	return 0
}

func (x *SummaryMetric) GetQuantiles() []*SummaryQuantile {
	if x != nil {
		return x.Quantiles
	}
	return nil
}

func (x *SummaryMetric) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SummaryMetric) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SummaryMetric) GetHelp() string {
	if x != nil && x.Help != nil {
		return *x.Help
	}
	return ""
}

func (x *SummaryMetric) GetUnit() string {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return ""
}

func (x *SummaryMetric) GetMaxAge() *durationpb.Duration {
	if x != nil {
		return x.MaxAge
	}
	return nil
}

func (x *SummaryMetric) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SummaryMetric) SetName(v string) {
	x.Name = &v
}

func (x *SummaryMetric) SetSampleCount(v uint64) {
	x.SampleCount = &v
}

func (x *SummaryMetric) SetSampleSum(v float64) {
	x.SampleSum = &v
}

func (x *SummaryMetric) SetQuantiles(v []*SummaryQuantile) {
	x.Quantiles = v
}

func (x *SummaryMetric) SetLabels(v map[string]string) {
	x.Labels = v
}

func (x *SummaryMetric) SetTimestamp(v *timestamppb.Timestamp) {
	x.Timestamp = v
}

func (x *SummaryMetric) SetHelp(v string) {
	x.Help = &v
}

func (x *SummaryMetric) SetUnit(v string) {
	x.Unit = &v
}

func (x *SummaryMetric) SetMaxAge(v *durationpb.Duration) {
	x.MaxAge = v
}

func (x *SummaryMetric) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *SummaryMetric) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *SummaryMetric) HasSampleCount() bool {
	if x == nil {
		return false
	}
	return x.SampleCount != nil
}

func (x *SummaryMetric) HasSampleSum() bool {
	if x == nil {
		return false
	}
	return x.SampleSum != nil
}

func (x *SummaryMetric) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.Timestamp != nil
}

func (x *SummaryMetric) HasHelp() bool {
	if x == nil {
		return false
	}
	return x.Help != nil
}

func (x *SummaryMetric) HasUnit() bool {
	if x == nil {
		return false
	}
	return x.Unit != nil
}

func (x *SummaryMetric) HasMaxAge() bool {
	if x == nil {
		return false
	}
	return x.MaxAge != nil
}

func (x *SummaryMetric) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *SummaryMetric) ClearName() {
	x.Name = nil
}

func (x *SummaryMetric) ClearSampleCount() {
	x.SampleCount = nil
}

func (x *SummaryMetric) ClearSampleSum() {
	x.SampleSum = nil
}

func (x *SummaryMetric) ClearTimestamp() {
	x.Timestamp = nil
}

func (x *SummaryMetric) ClearHelp() {
	x.Help = nil
}

func (x *SummaryMetric) ClearUnit() {
	x.Unit = nil
}

func (x *SummaryMetric) ClearMaxAge() {
	x.MaxAge = nil
}

func (x *SummaryMetric) ClearMetadata() {
	x.Metadata = nil
}

type SummaryMetric_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Metric name (e.g., "http_request_duration_seconds")
	Name *string
	// Total count of observations
	SampleCount *uint64
	// Sum of all observed values
	SampleSum *float64
	// Quantiles (e.g., 0.5, 0.9, 0.95, 0.99)
	Quantiles []*SummaryQuantile
	// Labels for metric dimensions
	Labels map[string]string
	// Timestamp when metric was recorded
	Timestamp *timestamppb.Timestamp
	// Help text describing the metric
	Help *string
	// Metric unit (e.g., "seconds", "bytes")
	Unit *string
	// Maximum age of observations in the summary
	MaxAge *durationpb.Duration
	// Metadata for request tracing
	Metadata *proto.RequestMetadata
}

func (b0 SummaryMetric_builder) Build() *SummaryMetric {
	m0 := &SummaryMetric{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.SampleCount = b.SampleCount
	x.SampleSum = b.SampleSum
	x.Quantiles = b.Quantiles
	x.Labels = b.Labels
	x.Timestamp = b.Timestamp
	x.Help = b.Help
	x.Unit = b.Unit
	x.MaxAge = b.MaxAge
	x.Metadata = b.Metadata
	return m0
}

var File_pkg_metrics_proto_messages_summary_metric_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_messages_summary_metric_proto_rawDesc = "" +
	"\n" +
	"/pkg/metrics/proto/messages/summary_metric.proto\x12\x12gcommon.v1.metrics\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1dpkg/common/proto/common.proto\"C\n" +
	"\x0fSummaryQuantile\x12\x1a\n" +
	"\bquantile\x18\x01 \x01(\x01R\bquantile\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\"\x80\x04\n" +
	"\rSummaryMetric\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fsample_count\x18\x02 \x01(\x04R\vsampleCount\x12\x1d\n" +
	"\n" +
	"sample_sum\x18\x03 \x01(\x01R\tsampleSum\x12A\n" +
	"\tquantiles\x18\x04 \x03(\v2#.gcommon.v1.metrics.SummaryQuantileR\tquantiles\x12E\n" +
	"\x06labels\x18\x05 \x03(\v2-.gcommon.v1.metrics.SummaryMetric.LabelsEntryR\x06labels\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x12\n" +
	"\x04help\x18\a \x01(\tR\x04help\x12\x12\n" +
	"\x04unit\x18\b \x01(\tR\x04unit\x122\n" +
	"\amax_age\x18\t \x01(\v2\x19.google.protobuf.DurationR\x06maxAge\x12>\n" +
	"\bmetadata\x18\n" +
	" \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xd5\x01\n" +
	"\x16com.gcommon.v1.metricsB\x12SummaryMetricProtoP\x01Z5github.com/jdfalk/gcommon/pkg/metrics/proto;metricspb\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_messages_summary_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_metrics_proto_messages_summary_metric_proto_goTypes = []any{
	(*SummaryQuantile)(nil),       // 0: gcommon.v1.metrics.SummaryQuantile
	(*SummaryMetric)(nil),         // 1: gcommon.v1.metrics.SummaryMetric
	nil,                           // 2: gcommon.v1.metrics.SummaryMetric.LabelsEntry
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 4: google.protobuf.Duration
	(*proto.RequestMetadata)(nil), // 5: gcommon.v1.common.RequestMetadata
}
var file_pkg_metrics_proto_messages_summary_metric_proto_depIdxs = []int32{
	0, // 0: gcommon.v1.metrics.SummaryMetric.quantiles:type_name -> gcommon.v1.metrics.SummaryQuantile
	2, // 1: gcommon.v1.metrics.SummaryMetric.labels:type_name -> gcommon.v1.metrics.SummaryMetric.LabelsEntry
	3, // 2: gcommon.v1.metrics.SummaryMetric.timestamp:type_name -> google.protobuf.Timestamp
	4, // 3: gcommon.v1.metrics.SummaryMetric.max_age:type_name -> google.protobuf.Duration
	5, // 4: gcommon.v1.metrics.SummaryMetric.metadata:type_name -> gcommon.v1.common.RequestMetadata
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_messages_summary_metric_proto_init() }
func file_pkg_metrics_proto_messages_summary_metric_proto_init() {
	if File_pkg_metrics_proto_messages_summary_metric_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_messages_summary_metric_proto_rawDesc), len(file_pkg_metrics_proto_messages_summary_metric_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_messages_summary_metric_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_messages_summary_metric_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_messages_summary_metric_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_messages_summary_metric_proto = out.File
	file_pkg_metrics_proto_messages_summary_metric_proto_goTypes = nil
	file_pkg_metrics_proto_messages_summary_metric_proto_depIdxs = nil
}
