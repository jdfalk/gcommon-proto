// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/messages/gauge_metric.proto

//go:build protoopaque

package metricspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// GaugeMetric represents a value that can go up and down.
// Gauges are used for tracking instantaneous values like memory usage,
// temperature, active connections, or CPU utilization.
type GaugeMetric struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Value       float64                `protobuf:"fixed64,3,opt,name=value"`
	xxx_hidden_Timestamp   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp"`
	xxx_hidden_Description *string                `protobuf:"bytes,5,opt,name=description"`
	xxx_hidden_Labels      map[string]string      `protobuf:"bytes,6,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MinValue    float64                `protobuf:"fixed64,7,opt,name=min_value,json=minValue"`
	xxx_hidden_MaxValue    float64                `protobuf:"fixed64,8,opt,name=max_value,json=maxValue"`
	xxx_hidden_Unit        *string                `protobuf:"bytes,9,opt,name=unit"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GaugeMetric) Reset() {
	*x = GaugeMetric{}
	mi := &file_pkg_metrics_proto_messages_gauge_metric_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GaugeMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GaugeMetric) ProtoMessage() {}

func (x *GaugeMetric) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_messages_gauge_metric_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GaugeMetric) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *GaugeMetric) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GaugeMetric) GetValue() float64 {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return 0
}

func (x *GaugeMetric) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *GaugeMetric) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *GaugeMetric) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *GaugeMetric) GetMinValue() float64 {
	if x != nil {
		return x.xxx_hidden_MinValue
	}
	return 0
}

func (x *GaugeMetric) GetMaxValue() float64 {
	if x != nil {
		return x.xxx_hidden_MaxValue
	}
	return 0
}

func (x *GaugeMetric) GetUnit() string {
	if x != nil {
		if x.xxx_hidden_Unit != nil {
			return *x.xxx_hidden_Unit
		}
		return ""
	}
	return ""
}

func (x *GaugeMetric) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *GaugeMetric) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *GaugeMetric) SetValue(v float64) {
	x.xxx_hidden_Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *GaugeMetric) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *GaugeMetric) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *GaugeMetric) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *GaugeMetric) SetMinValue(v float64) {
	x.xxx_hidden_MinValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *GaugeMetric) SetMaxValue(v float64) {
	x.xxx_hidden_MaxValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *GaugeMetric) SetUnit(v string) {
	x.xxx_hidden_Unit = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *GaugeMetric) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GaugeMetric) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GaugeMetric) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GaugeMetric) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *GaugeMetric) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *GaugeMetric) HasMinValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *GaugeMetric) HasMaxValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *GaugeMetric) HasUnit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *GaugeMetric) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *GaugeMetric) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *GaugeMetric) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Value = 0
}

func (x *GaugeMetric) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *GaugeMetric) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Description = nil
}

func (x *GaugeMetric) ClearMinValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_MinValue = 0
}

func (x *GaugeMetric) ClearMaxValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_MaxValue = 0
}

func (x *GaugeMetric) ClearUnit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Unit = nil
}

type GaugeMetric_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique identifier for this gauge
	Id *string
	// Gauge name/label
	Name *string
	// Current gauge value (can increase or decrease)
	Value *float64
	// Timestamp when this value was recorded
	Timestamp *timestamppb.Timestamp
	// Gauge description/help text
	Description *string
	// Key-value labels for this gauge
	Labels map[string]string
	// Minimum allowed value (constraint)
	MinValue *float64
	// Maximum allowed value (constraint)
	MaxValue *float64
	// Unit of measurement (e.g., "bytes", "percent", "connections")
	Unit *string
}

func (b0 GaugeMetric_builder) Build() *GaugeMetric {
	m0 := &GaugeMetric{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Name = b.Name
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_Value = *b.Value
	}
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_Labels = b.Labels
	if b.MinValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_MinValue = *b.MinValue
	}
	if b.MaxValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_MaxValue = *b.MaxValue
	}
	if b.Unit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_Unit = b.Unit
	}
	return m0
}

var File_pkg_metrics_proto_messages_gauge_metric_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_messages_gauge_metric_proto_rawDesc = "" +
	"\n" +
	"-pkg/metrics/proto/messages/gauge_metric.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf1\x02\n" +
	"\vGaugeMetric\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x01R\x05value\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12C\n" +
	"\x06labels\x18\x06 \x03(\v2+.gcommon.v1.metrics.GaugeMetric.LabelsEntryR\x06labels\x12\x1b\n" +
	"\tmin_value\x18\a \x01(\x01R\bminValue\x12\x1b\n" +
	"\tmax_value\x18\b \x01(\x01R\bmaxValue\x12\x12\n" +
	"\x04unit\x18\t \x01(\tR\x04unit\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xd3\x01\n" +
	"\x16com.gcommon.v1.metricsB\x10GaugeMetricProtoP\x01Z5github.com/jdfalk/gcommon/pkg/metrics/proto;metricspb\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_messages_gauge_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_metrics_proto_messages_gauge_metric_proto_goTypes = []any{
	(*GaugeMetric)(nil),           // 0: gcommon.v1.metrics.GaugeMetric
	nil,                           // 1: gcommon.v1.metrics.GaugeMetric.LabelsEntry
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_pkg_metrics_proto_messages_gauge_metric_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.metrics.GaugeMetric.timestamp:type_name -> google.protobuf.Timestamp
	1, // 1: gcommon.v1.metrics.GaugeMetric.labels:type_name -> gcommon.v1.metrics.GaugeMetric.LabelsEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_messages_gauge_metric_proto_init() }
func file_pkg_metrics_proto_messages_gauge_metric_proto_init() {
	if File_pkg_metrics_proto_messages_gauge_metric_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_messages_gauge_metric_proto_rawDesc), len(file_pkg_metrics_proto_messages_gauge_metric_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_messages_gauge_metric_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_messages_gauge_metric_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_messages_gauge_metric_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_messages_gauge_metric_proto = out.File
	file_pkg_metrics_proto_messages_gauge_metric_proto_goTypes = nil
	file_pkg_metrics_proto_messages_gauge_metric_proto_depIdxs = nil
}
