// filepath: pkg/metrics/proto/requests/get_metric_metadata_request.proto
// file: metrics/proto/requests/get_metric_metadata_request.proto
//
// Request definitions for metrics module
// TODO: Implement actual protobuf definitions
//
edition = "2023";

package gcommon.v1.metrics;

import "google/protobuf/go_features.proto";

option go_package = "github.com/jdfalk/gcommon/pkg/metrics/proto;metricspb";
option features.(pb.go).api_level = API_HYBRID;

/**
 * GetMetricMetadataRequest retrieves metadata for specific metrics.
 */
message GetMetricMetadataRequest {
  // Provider ID to query
  string provider_id = 1;

  // Specific metric names to get metadata for (if empty, get all)
  repeated string metric_names = 2;

  // Namespace to filter by (optional)
  string namespace = 3;

  // Include inactive metrics
  bool include_inactive = 4;

  // Pagination options
  int32 page_size = 5;
  string page_token = 6;

  // Filter by metric type (optional)
  string metric_type = 7;

  // Filter by labels (optional)
  map<string, string> label_filters = 8;

  // Whether to include retention policy information
  bool include_retention_info = 9;

  // Whether to include usage statistics
  bool include_usage_stats = 10;
}
