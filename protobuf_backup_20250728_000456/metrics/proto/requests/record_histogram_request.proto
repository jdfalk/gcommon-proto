// filepath: pkg/metrics/proto/requests/record_histogram_request.proto
// file: metrics/proto/requests/record_histogram_request.proto
//
// Request definitions for metrics module
// TODO: Implement actual protobuf definitions
//
edition = "2023";

package gcommon.v1.metrics;

import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";
import "pkg/common/proto/messages/request_metadata.proto";

option go_package = "github.com/jdfalk/gcommon/pkg/metrics/proto;metricspb";
option features.(pb.go).api_level = API_HYBRID;

/**
 * RecordHistogramRequest is used to record an observation in a histogram metric.
 * Histograms track the distribution of values in configurable buckets.
 */
message RecordHistogramRequest {
  // Metric name (e.g., "request_duration_seconds", "response_size_bytes")
  string name = 1;

  // Value to observe/record in the histogram
  double value = 2;

  // Labels for metric dimensions
  map<string, string> labels = 3;

  // Help text describing the metric
  string help = 4;

  // Metric unit (e.g., "seconds", "bytes", "milliseconds")
  string unit = 5;

  // Histogram bucket configuration (if not already defined)
  repeated double buckets = 6;

  // Optional timestamp when the observation was made
  google.protobuf.Timestamp timestamp = 7;

  // Request metadata for tracing and debugging
  gcommon.v1.common.RequestMetadata metadata = 8;

  // Optional sample weight (for weighted observations)
  double sample_weight = 9;

  // Whether to create the histogram if it doesn't exist
  bool create_if_missing = 10;
}
