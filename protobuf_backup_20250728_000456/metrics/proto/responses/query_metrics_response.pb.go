// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/responses/query_metrics_response.proto

//go:build !protoopaque

package metricspb

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// QueryMetricsResponse contains the results of a metric query.
type QueryMetricsResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status of the query
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Error information if query failed
	Error *proto.Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	// Query results organized as metric series
	Series []*MetricSeries `protobuf:"bytes,3,rep,name=series" json:"series,omitempty"`
	// Query execution statistics
	Statistics *QueryStatistics `protobuf:"bytes,4,opt,name=statistics" json:"statistics,omitempty"`
	// Query execution plan (if requested)
	QueryPlan *QueryPlan `protobuf:"bytes,5,opt,name=query_plan,json=queryPlan" json:"query_plan,omitempty"`
	// Warnings or informational messages about the query
	Warnings []string `protobuf:"bytes,6,rep,name=warnings" json:"warnings,omitempty"`
	// Pagination token for retrieving more results
	NextPageToken *string `protobuf:"bytes,7,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	// Total number of results available (for pagination)
	TotalResults  *int64 `protobuf:"varint,8,opt,name=total_results,json=totalResults" json:"total_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMetricsResponse) Reset() {
	*x = QueryMetricsResponse{}
	mi := &file_pkg_metrics_proto_responses_query_metrics_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMetricsResponse) ProtoMessage() {}

func (x *QueryMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_query_metrics_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryMetricsResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *QueryMetricsResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *QueryMetricsResponse) GetSeries() []*MetricSeries {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *QueryMetricsResponse) GetStatistics() *QueryStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *QueryMetricsResponse) GetQueryPlan() *QueryPlan {
	if x != nil {
		return x.QueryPlan
	}
	return nil
}

func (x *QueryMetricsResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *QueryMetricsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *QueryMetricsResponse) GetTotalResults() int64 {
	if x != nil && x.TotalResults != nil {
		return *x.TotalResults
	}
	return 0
}

func (x *QueryMetricsResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *QueryMetricsResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *QueryMetricsResponse) SetSeries(v []*MetricSeries) {
	x.Series = v
}

func (x *QueryMetricsResponse) SetStatistics(v *QueryStatistics) {
	x.Statistics = v
}

func (x *QueryMetricsResponse) SetQueryPlan(v *QueryPlan) {
	x.QueryPlan = v
}

func (x *QueryMetricsResponse) SetWarnings(v []string) {
	x.Warnings = v
}

func (x *QueryMetricsResponse) SetNextPageToken(v string) {
	x.NextPageToken = &v
}

func (x *QueryMetricsResponse) SetTotalResults(v int64) {
	x.TotalResults = &v
}

func (x *QueryMetricsResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *QueryMetricsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *QueryMetricsResponse) HasStatistics() bool {
	if x == nil {
		return false
	}
	return x.Statistics != nil
}

func (x *QueryMetricsResponse) HasQueryPlan() bool {
	if x == nil {
		return false
	}
	return x.QueryPlan != nil
}

func (x *QueryMetricsResponse) HasNextPageToken() bool {
	if x == nil {
		return false
	}
	return x.NextPageToken != nil
}

func (x *QueryMetricsResponse) HasTotalResults() bool {
	if x == nil {
		return false
	}
	return x.TotalResults != nil
}

func (x *QueryMetricsResponse) ClearSuccess() {
	x.Success = nil
}

func (x *QueryMetricsResponse) ClearError() {
	x.Error = nil
}

func (x *QueryMetricsResponse) ClearStatistics() {
	x.Statistics = nil
}

func (x *QueryMetricsResponse) ClearQueryPlan() {
	x.QueryPlan = nil
}

func (x *QueryMetricsResponse) ClearNextPageToken() {
	x.NextPageToken = nil
}

func (x *QueryMetricsResponse) ClearTotalResults() {
	x.TotalResults = nil
}

type QueryMetricsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status of the query
	Success *bool
	// Error information if query failed
	Error *proto.Error
	// Query results organized as metric series
	Series []*MetricSeries
	// Query execution statistics
	Statistics *QueryStatistics
	// Query execution plan (if requested)
	QueryPlan *QueryPlan
	// Warnings or informational messages about the query
	Warnings []string
	// Pagination token for retrieving more results
	NextPageToken *string
	// Total number of results available (for pagination)
	TotalResults *int64
}

func (b0 QueryMetricsResponse_builder) Build() *QueryMetricsResponse {
	m0 := &QueryMetricsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Error = b.Error
	x.Series = b.Series
	x.Statistics = b.Statistics
	x.QueryPlan = b.QueryPlan
	x.Warnings = b.Warnings
	x.NextPageToken = b.NextPageToken
	x.TotalResults = b.TotalResults
	return m0
}

// *
// QueryStatistics provides information about query execution.
type QueryStatistics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Total execution time
	ExecutionTime *durationpb.Duration `protobuf:"bytes,1,opt,name=execution_time,json=executionTime" json:"execution_time,omitempty"`
	// Number of data points processed
	DataPointsProcessed *int64 `protobuf:"varint,2,opt,name=data_points_processed,json=dataPointsProcessed" json:"data_points_processed,omitempty"`
	// Number of metrics examined
	MetricsExamined *int64 `protobuf:"varint,3,opt,name=metrics_examined,json=metricsExamined" json:"metrics_examined,omitempty"`
	// Number of series returned
	SeriesReturned *int64 `protobuf:"varint,4,opt,name=series_returned,json=seriesReturned" json:"series_returned,omitempty"`
	// Memory used during query execution (bytes)
	MemoryUsedBytes *int64 `protobuf:"varint,5,opt,name=memory_used_bytes,json=memoryUsedBytes" json:"memory_used_bytes,omitempty"`
	// Storage backends queried
	StorageBackendsUsed []string `protobuf:"bytes,6,rep,name=storage_backends_used,json=storageBackendsUsed" json:"storage_backends_used,omitempty"`
	// Cache hit rate (0.0 to 1.0)
	CacheHitRate *float64 `protobuf:"fixed64,7,opt,name=cache_hit_rate,json=cacheHitRate" json:"cache_hit_rate,omitempty"`
	// When the query was executed
	QueryTime     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=query_time,json=queryTime" json:"query_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStatistics) Reset() {
	*x = QueryStatistics{}
	mi := &file_pkg_metrics_proto_responses_query_metrics_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStatistics) ProtoMessage() {}

func (x *QueryStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_query_metrics_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryStatistics) GetExecutionTime() *durationpb.Duration {
	if x != nil {
		return x.ExecutionTime
	}
	return nil
}

func (x *QueryStatistics) GetDataPointsProcessed() int64 {
	if x != nil && x.DataPointsProcessed != nil {
		return *x.DataPointsProcessed
	}
	return 0
}

func (x *QueryStatistics) GetMetricsExamined() int64 {
	if x != nil && x.MetricsExamined != nil {
		return *x.MetricsExamined
	}
	return 0
}

func (x *QueryStatistics) GetSeriesReturned() int64 {
	if x != nil && x.SeriesReturned != nil {
		return *x.SeriesReturned
	}
	return 0
}

func (x *QueryStatistics) GetMemoryUsedBytes() int64 {
	if x != nil && x.MemoryUsedBytes != nil {
		return *x.MemoryUsedBytes
	}
	return 0
}

func (x *QueryStatistics) GetStorageBackendsUsed() []string {
	if x != nil {
		return x.StorageBackendsUsed
	}
	return nil
}

func (x *QueryStatistics) GetCacheHitRate() float64 {
	if x != nil && x.CacheHitRate != nil {
		return *x.CacheHitRate
	}
	return 0
}

func (x *QueryStatistics) GetQueryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.QueryTime
	}
	return nil
}

func (x *QueryStatistics) SetExecutionTime(v *durationpb.Duration) {
	x.ExecutionTime = v
}

func (x *QueryStatistics) SetDataPointsProcessed(v int64) {
	x.DataPointsProcessed = &v
}

func (x *QueryStatistics) SetMetricsExamined(v int64) {
	x.MetricsExamined = &v
}

func (x *QueryStatistics) SetSeriesReturned(v int64) {
	x.SeriesReturned = &v
}

func (x *QueryStatistics) SetMemoryUsedBytes(v int64) {
	x.MemoryUsedBytes = &v
}

func (x *QueryStatistics) SetStorageBackendsUsed(v []string) {
	x.StorageBackendsUsed = v
}

func (x *QueryStatistics) SetCacheHitRate(v float64) {
	x.CacheHitRate = &v
}

func (x *QueryStatistics) SetQueryTime(v *timestamppb.Timestamp) {
	x.QueryTime = v
}

func (x *QueryStatistics) HasExecutionTime() bool {
	if x == nil {
		return false
	}
	return x.ExecutionTime != nil
}

func (x *QueryStatistics) HasDataPointsProcessed() bool {
	if x == nil {
		return false
	}
	return x.DataPointsProcessed != nil
}

func (x *QueryStatistics) HasMetricsExamined() bool {
	if x == nil {
		return false
	}
	return x.MetricsExamined != nil
}

func (x *QueryStatistics) HasSeriesReturned() bool {
	if x == nil {
		return false
	}
	return x.SeriesReturned != nil
}

func (x *QueryStatistics) HasMemoryUsedBytes() bool {
	if x == nil {
		return false
	}
	return x.MemoryUsedBytes != nil
}

func (x *QueryStatistics) HasCacheHitRate() bool {
	if x == nil {
		return false
	}
	return x.CacheHitRate != nil
}

func (x *QueryStatistics) HasQueryTime() bool {
	if x == nil {
		return false
	}
	return x.QueryTime != nil
}

func (x *QueryStatistics) ClearExecutionTime() {
	x.ExecutionTime = nil
}

func (x *QueryStatistics) ClearDataPointsProcessed() {
	x.DataPointsProcessed = nil
}

func (x *QueryStatistics) ClearMetricsExamined() {
	x.MetricsExamined = nil
}

func (x *QueryStatistics) ClearSeriesReturned() {
	x.SeriesReturned = nil
}

func (x *QueryStatistics) ClearMemoryUsedBytes() {
	x.MemoryUsedBytes = nil
}

func (x *QueryStatistics) ClearCacheHitRate() {
	x.CacheHitRate = nil
}

func (x *QueryStatistics) ClearQueryTime() {
	x.QueryTime = nil
}

type QueryStatistics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total execution time
	ExecutionTime *durationpb.Duration
	// Number of data points processed
	DataPointsProcessed *int64
	// Number of metrics examined
	MetricsExamined *int64
	// Number of series returned
	SeriesReturned *int64
	// Memory used during query execution (bytes)
	MemoryUsedBytes *int64
	// Storage backends queried
	StorageBackendsUsed []string
	// Cache hit rate (0.0 to 1.0)
	CacheHitRate *float64
	// When the query was executed
	QueryTime *timestamppb.Timestamp
}

func (b0 QueryStatistics_builder) Build() *QueryStatistics {
	m0 := &QueryStatistics{}
	b, x := &b0, m0
	_, _ = b, x
	x.ExecutionTime = b.ExecutionTime
	x.DataPointsProcessed = b.DataPointsProcessed
	x.MetricsExamined = b.MetricsExamined
	x.SeriesReturned = b.SeriesReturned
	x.MemoryUsedBytes = b.MemoryUsedBytes
	x.StorageBackendsUsed = b.StorageBackendsUsed
	x.CacheHitRate = b.CacheHitRate
	x.QueryTime = b.QueryTime
	return m0
}

var File_pkg_metrics_proto_responses_query_metrics_response_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_responses_query_metrics_response_proto_rawDesc = "" +
	"\n" +
	"8pkg/metrics/proto/responses/query_metrics_response.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a%pkg/common/proto/messages/error.proto\x1a,pkg/metrics/proto/messages/metric_data.proto\x1a-pkg/metrics/proto/messages/metric_query.proto\"\x86\x03\n" +
	"\x14QueryMetricsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\x02 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\x128\n" +
	"\x06series\x18\x03 \x03(\v2 .gcommon.v1.metrics.MetricSeriesR\x06series\x12C\n" +
	"\n" +
	"statistics\x18\x04 \x01(\v2#.gcommon.v1.metrics.QueryStatisticsR\n" +
	"statistics\x12<\n" +
	"\n" +
	"query_plan\x18\x05 \x01(\v2\x1d.gcommon.v1.metrics.QueryPlanR\tqueryPlan\x12\x1a\n" +
	"\bwarnings\x18\x06 \x03(\tR\bwarnings\x12&\n" +
	"\x0fnext_page_token\x18\a \x01(\tR\rnextPageToken\x12#\n" +
	"\rtotal_results\x18\b \x01(\x03R\ftotalResults\"\x9c\x03\n" +
	"\x0fQueryStatistics\x12@\n" +
	"\x0eexecution_time\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\rexecutionTime\x122\n" +
	"\x15data_points_processed\x18\x02 \x01(\x03R\x13dataPointsProcessed\x12)\n" +
	"\x10metrics_examined\x18\x03 \x01(\x03R\x0fmetricsExamined\x12'\n" +
	"\x0fseries_returned\x18\x04 \x01(\x03R\x0eseriesReturned\x12*\n" +
	"\x11memory_used_bytes\x18\x05 \x01(\x03R\x0fmemoryUsedBytes\x122\n" +
	"\x15storage_backends_used\x18\x06 \x03(\tR\x13storageBackendsUsed\x12$\n" +
	"\x0ecache_hit_rate\x18\a \x01(\x01R\fcacheHitRate\x129\n" +
	"\n" +
	"query_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tqueryTimeB\xdc\x01\n" +
	"\x16com.gcommon.v1.metricsB\x19QueryMetricsResponseProtoP\x01Z5github.com/jdfalk/gcommon/pkg/metrics/proto;metricspb\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_responses_query_metrics_response_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_metrics_proto_responses_query_metrics_response_proto_goTypes = []any{
	(*QueryMetricsResponse)(nil),  // 0: gcommon.v1.metrics.QueryMetricsResponse
	(*QueryStatistics)(nil),       // 1: gcommon.v1.metrics.QueryStatistics
	(*proto.Error)(nil),           // 2: gcommon.v1.common.Error
	(*MetricSeries)(nil),          // 3: gcommon.v1.metrics.MetricSeries
	(*QueryPlan)(nil),             // 4: gcommon.v1.metrics.QueryPlan
	(*durationpb.Duration)(nil),   // 5: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_pkg_metrics_proto_responses_query_metrics_response_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.metrics.QueryMetricsResponse.error:type_name -> gcommon.v1.common.Error
	3, // 1: gcommon.v1.metrics.QueryMetricsResponse.series:type_name -> gcommon.v1.metrics.MetricSeries
	1, // 2: gcommon.v1.metrics.QueryMetricsResponse.statistics:type_name -> gcommon.v1.metrics.QueryStatistics
	4, // 3: gcommon.v1.metrics.QueryMetricsResponse.query_plan:type_name -> gcommon.v1.metrics.QueryPlan
	5, // 4: gcommon.v1.metrics.QueryStatistics.execution_time:type_name -> google.protobuf.Duration
	6, // 5: gcommon.v1.metrics.QueryStatistics.query_time:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_responses_query_metrics_response_proto_init() }
func file_pkg_metrics_proto_responses_query_metrics_response_proto_init() {
	if File_pkg_metrics_proto_responses_query_metrics_response_proto != nil {
		return
	}
	file_pkg_metrics_proto_messages_metric_data_proto_init()
	file_pkg_metrics_proto_messages_metric_query_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_responses_query_metrics_response_proto_rawDesc), len(file_pkg_metrics_proto_responses_query_metrics_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_responses_query_metrics_response_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_responses_query_metrics_response_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_responses_query_metrics_response_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_responses_query_metrics_response_proto = out.File
	file_pkg_metrics_proto_responses_query_metrics_response_proto_goTypes = nil
	file_pkg_metrics_proto_responses_query_metrics_response_proto_depIdxs = nil
}
