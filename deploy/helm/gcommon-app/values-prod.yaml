# file: deploy/helm/gcommon-app/values-prod.yaml
# version: 1.1.0
# guid: 2bce0c2d-0ad9-4f64-b2c5-50b26dc5fac0

# Production values for gcommon-app Helm chart
# Optimized for high availability, security, and performance in production.

replicaCount: 3

image:
  repository: gcommon/app
  tag: stable
  pullPolicy: IfNotPresent
  pullSecrets: []

serviceAccount:
  create: true
  name: ""
  annotations: {}

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 10001

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 80
  annotations: {}

resources:
  limits:
    cpu: 1000m
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 70

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: gcommon.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: gcommon-tls
      hosts:
        - gcommon.example.com

config:
  APP_ENV: production
  LOG_LEVEL: warn

secret:
  create: true
  data:
    DATABASE_URL: "postgres://prod:prod@prod-db:5432/proddb"

monitoring:
  prometheus:
    enabled: true
    scrapeInterval: 15s
  logging:
    fluentBit:
      enabled: true
  tracing:
    jaeger:
      enabled: true

nodeSelector: {}

tolerations: []

affinity: {}

extraEnv:
  - name: FEATURE_FLAG_X
    value: "false"
extraVolumes: []
extraVolumeMounts: []

livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 15
  periodSeconds: 5

sidecars:
  - name: security-agent
    image: gcommon/security-agent:latest
    resources:
      limits:
        cpu: 100m
        memory: 64Mi
      requests:
        cpu: 50m
        memory: 32Mi

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    additionalLabels:
      release: monitoring

hpaMetrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 2
    maxUnavailable: 1

podDisruptionBudget:
  enabled: true
  minAvailable: 2

labels:
  environment: production

persistence:
  enabled: true
  size: 10Gi
  storageClass: "fast-storage"

# ------------------------------------------------------------------------
prod:
  monitoring:
    dashboards:
      enabled: true
      grafanaFolder: gcommon
    alertRules:
      cpuHigh: 80
      memoryHigh: 75
  secrets:
    externalManager: vault
    path: secret/data/gcommon
  rateLimiting:
    enabled: true
    requestsPerSecond: 100
  security:
    waf:
      enabled: true
      provider: cloudflare
    ddosProtection:
      provider: aws-shield
    networkPolicies: strict
  disasterRecovery:
    runbooks:
      - docs/dr/runbook-restore.md
      - docs/dr/runbook-failover.md
    automatic: true
  backups:
    validation:
      enabled: true
      schedule: "0 4 * * *"
  onCall:
    runbooks:
      - https://wiki.example.com/runbooks/service-down
      - https://wiki.example.com/runbooks/latency-spike
  multiRegion:
    enabled: true
    regions:
      - us-east-1
      - eu-west-1
    strategy: active-active
  additionalSettings:
    maintenanceWindow: "Sun 02:00-03:00 UTC"
    releaseChannels:
      - stable
      - hotfix
    compliance:
      soc2: true
      pci: true
