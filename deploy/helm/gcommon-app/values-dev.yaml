# file: deploy/helm/gcommon-app/values-dev.yaml
# version: 1.1.0
# guid: 8f0cfc7d-9a32-4f7a-8fa4-d781a229e121

# Development values for gcommon-app Helm chart
# Tailored for local development and testing environments.
# These values prioritize fast startup and minimal resource usage.

replicaCount: 1

image:
  repository: gcommon/app
  tag: dev
  pullPolicy: IfNotPresent
  pullSecrets: []

serviceAccount:
  create: true
  name: ""
  annotations: {}

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 10001

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 80
  annotations: {}

resources:
  limits:
    cpu: 250m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 75
  targetMemoryUtilizationPercentage: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  tls: []

config:
  APP_ENV: development
  LOG_LEVEL: debug

secret:
  create: true
  data:
    DATABASE_URL: "postgres://dev:dev@localhost:5432/devdb"

monitoring:
  prometheus:
    enabled: true
    scrapeInterval: 15s
  logging:
    fluentBit:
      enabled: true
  tracing:
    jaeger:
      enabled: true

nodeSelector: {}

tolerations: []

affinity: {}

# Additional environment variables
extraEnv:
  - name: FEATURE_FLAG_EXAMPLE
    value: "true"

# Extra volumes and mounts
extraVolumes: []
extraVolumeMounts: []

# Liveness and readiness probe settings
livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 15
  periodSeconds: 20
readinessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10

# Sidecars
sidecars:
  - name: debug-sidecar
    image: busybox
    command: ["/bin/sh", "-c", "sleep infinity"]
    resources: {}

# Metrics service for Prometheus
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    additionalLabels: {}

# HPA Metrics
hpaMetrics: []

# Deployment strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Extra labels
labels: {}

# Volume claim template for stateful workloads
persistence:
  enabled: false
  size: 1Gi
  storageClass: ""

# ------------------------------------------------------------------------
dev:
  debug:
    enabled: true
    ports:
      - name: delve
        containerPort: 40000
    tools:
      air: true
      skaffold: true
  featureFlags:
    experimentalAPI: true
    enableHotReload: true
    useLocalCache: false
  mockServices:
    payment:
      enabled: true
      url: http://host.docker.internal:9000
    notification:
      enabled: true
      url: http://host.docker.internal:9001
  environment:
    - name: LOG_LEVEL
      value: debug
    - name: DATABASE_URL
      value: postgres://dev:dev@db:5432/dev?sslmode=disable
    - name: CACHE_URL
      value: redis://cache:6379
    - name: FEATURE_TOGGLE_FILE
      value: /app/config/feature-flags.yaml
  volumes:
    - name: config
      configMap:
        name: gcommon-dev-config
    - name: source
      hostPath:
        path: ../../
        type: Directory
  volumeMounts:
    - name: config
      mountPath: /app/config
    - name: source
      mountPath: /workspace
  cache:
    type: memory
    persistent:
      enabled: false
  databases:
    sqlite:
      enabled: true
      path: /workspace/data/dev.db
  serviceMesh:
    enabled: false
    sidecar:
      image: envoyproxy/envoy:v1.29.0
  ports:
    - name: http
      containerPort: 8080
      hostPort: 8080
  localDirectories:
    - host: ./configs
      container: /app/configs
    - host: ./logs
      container: /app/logs
  skaffold:
    profile: dev
    autoSync: true
  integrationTests:
    insideContainer: true
    command: ["go", "test", "./..."]
  guidance:
    - "Mount local directories using volumes.source"
    - "Run \`skaffold dev\` for rapid iterations"
    - "Use air for hot reloading"
  security:
    enableRBAC: false
    readOnlyFS: false
  webUI:
    enabled: true
    port: 3000
  featureToggles:
    - name: newDashboard
      enabled: false
    - name: experimentalAuth
      enabled: false
  additionalEnv:
    - name: EXTRA_VAR_1
      value: value1
    - name: EXTRA_VAR_2
      value: value2
    - name: EXTRA_VAR_3
      value: value3
    - name: EXTRA_VAR_4
      value: value4
    - name: EXTRA_VAR_5
      value: value5
    - name: EXTRA_VAR_6
      value: value6
    - name: EXTRA_VAR_7
      value: value7
    - name: EXTRA_VAR_8
      value: value8
    - name: EXTRA_VAR_9
      value: value9
    - name: EXTRA_VAR_10
      value: value10
  sampleConfigMap:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: gcommon-dev-config
    data:
      APP_ENV: development
      FEATURE_FLAG_SAMPLE: "true"
  notes:
    - "This section documents development-specific overrides."
    - "Secrets should be loaded from local files using kubectl create secret."
    - "Ensure compliance with security guidelines even in dev environments."
