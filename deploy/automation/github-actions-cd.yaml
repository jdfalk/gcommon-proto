# file: deploy/automation/github-actions-cd.yaml
# version: 1.1.0
# guid: ead52c1a-0b43-4bb7-9880-1a20f8ae2d9e

# GitHub Actions Continuous Deployment workflow template for gcommon applications.
# Supports blue-green and canary strategies with rollback capabilities.

name: gcommon-cd-template

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - deploy/**
      - .github/workflows/deploy.yml

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cluster: [us-east-1, eu-west-1]
    permissions:
      id-token: write
      contents: read
    environment:
      name: production
      url: https://example.com
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to cloud
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      - name: Fetch credentials
        run: az aks get-credentials --resource-group gcommon-${{ matrix.cluster }} --name gcommon-${{ matrix.cluster }}

      - name: Blue-Green Deploy
        run: |
          kubectl apply -f deploy/automation/blue-green.yaml

      - name: Canary Deploy
        run: |
          kubectl apply -f deploy/automation/canary.yaml

      - name: Helm Upgrade
        uses: azure/k8s-deploy@v4
        with:
          action: deploy
          strategy: blue-green
          manifests: |
            deploy/kubernetes/deployment.yaml
            deploy/kubernetes/service.yaml
          helmChart: deploy/helm/gcommon-app
          helmRelease: gcommon-app
          helmValues: deploy/helm/gcommon-app/values-${{ matrix.cluster == 'us-east-1' && 'prod' || 'staging' }}.yaml

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/gcommon-app -n gcommon --timeout=120s

      - name: Run Smoke Tests
        run: |
          curl -fsS http://gcommon-app.gcommon.svc.cluster.local:8080/healthz
          curl -fsS http://gcommon-app.gcommon.svc.cluster.local:8080/metrics

      - name: Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          image-ref: ghcr.io/jdfalk/gcommon-app:latest

      - name: Notify Slack
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {"text": "Deployment succeeded for cluster ${{ matrix.cluster }}"}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Record Deployment Metrics
        run: |
          echo "deployment_cluster{cluster='${{ matrix.cluster }}'} 1" >> metrics.txt
          curl -X POST -H 'Content-Type: text/plain' --data-binary @metrics.txt ${{ secrets.PROMETHEUS_PUSHGATEWAY }}

      - name: Approve Promotion
        if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'
        uses: hmarr/auto-approve-action@v3

      - name: Rollback on Failure
        if: failure()
        run: |
          kubectl rollout undo deployment/gcommon-app -n gcommon
