// file: proto/gcommon/v2/health/messages/liveness_result.proto
// version: 1.0.0
// guid: 3b4c5d6e-7a80-5678-2345-901234567890

edition = "2023";

package health.v2;

import "health/v2/health_status.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/health/v2";

/**
 * LivenessResult represents the result of a liveness check execution.
 * Contains detailed liveness assessment information.
 * Follows 1-1-1 pattern: one message per file.
 */
message LivenessResult {
  // ID of the liveness check that generated this result
  string check_id = 1;

  // Liveness status
  HealthStatus status = 2;

  // Whether the service is alive
  bool alive = 3;

  // When this liveness check was performed
  google.protobuf.Timestamp checked_at = 4;

  // How long the liveness check took
  google.protobuf.Duration duration = 5;

  // Uptime since last restart
  google.protobuf.Timestamp started_at = 6;

  // Response message from the liveness probe
  string response_message = 7;

  // Additional liveness details
  map<string, string> details = 8;
}