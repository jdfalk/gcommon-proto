// file: proto/gcommon/v2/media/media_processing_service.proto
// version: 1.0.1
// guid: 789abcd-ef01-2345-d2e3-f4a5b6c7d8e9

edition = "2023";

package media.v2;

import "media/v2/analyze_media_request.proto";
import "media/v2/analyze_media_response.proto";
import "media/v2/extract_audio_request.proto";
import "media/v2/extract_audio_response.proto";
import "media/v2/extract_subtitles_request.proto";
import "media/v2/extract_subtitles_response.proto";
import "media/v2/get_processing_status_request.proto";
import "media/v2/get_processing_status_response.proto";
import "media/v2/transcode_media_request.proto";
import "media/v2/transcode_media_response.proto";
import "google/protobuf/go_features.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/media/v2";

/**
 * MediaProcessingService provides media transcoding, analysis, and
 * content extraction operations.
 */
service MediaProcessingService {
  // Transcode media to different formats
  rpc TranscodeMedia(TranscodeMediaRequest) returns (TranscodeMediaResponse);

  // Analyze media content for quality, metadata extraction
  rpc AnalyzeMedia(AnalyzeMediaRequest) returns (AnalyzeMediaResponse);

  // Extract audio tracks from media
  rpc ExtractAudio(ExtractAudioRequest) returns (ExtractAudioResponse);

  // Extract subtitle tracks from media
  rpc ExtractSubtitles(ExtractSubtitlesRequest) returns (ExtractSubtitlesResponse);

  // Get processing job status
  rpc GetProcessingStatus(GetProcessingStatusRequest) returns (GetProcessingStatusResponse);
}
