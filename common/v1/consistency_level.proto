// file: proto/gcommon/v1/database/consistency_level.proto
// version: 1.0.1
// guid: 5eaa6727-c2ff-40f4-b746-6782b5b18b05
edition = "2023";

package common.v1;

import "google/protobuf/go_features.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/common/v1";

/**
 * ConsistencyLevel defines the data consistency requirements for database operations.
 * Controls the trade-off between consistency, availability, and partition tolerance.
 */
enum DatabaseConsistencyLevel {
  // Default unspecified consistency level
  DATABASE_CONSISTENCY_LEVEL_UNSPECIFIED = 0;

  // Eventual consistency - may read stale data but eventually consistent
  DATABASE_CONSISTENCY_LEVEL_EVENTUAL = 1;

  // Strong consistency - always reads most recent committed data
  DATABASE_CONSISTENCY_LEVEL_STRONG = 2;

  // Bounded staleness - reads data within specified time bounds
  DATABASE_CONSISTENCY_LEVEL_BOUNDED_STALENESS = 3;
}
