// file: proto/gcommon/v1/database/isolation_level.proto
// version: 1.0.1
// guid: 004cde4c-f6bc-40ff-b341-1408e58e37b6
edition = "2023";

package common.v1;

import "google/protobuf/go_features.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/common";

/**
 * IsolationLevel defines transaction isolation levels controlling concurrent access.
 * Balances data consistency with concurrency performance.
 */
enum DatabaseIsolationLevel {
  // Default unspecified isolation level
  DATABASE_ISOLATION_LEVEL_UNSPECIFIED = 0;

  // Read uncommitted - allows dirty reads, lowest isolation
  DATABASE_ISOLATION_LEVEL_READ_UNCOMMITTED = 1;

  // Read committed - prevents dirty reads, allows non-repeatable reads
  DATABASE_ISOLATION_LEVEL_READ_COMMITTED = 2;

  // Repeatable read - prevents dirty and non-repeatable reads
  DATABASE_ISOLATION_LEVEL_REPEATABLE_READ = 3;

  // Serializable - highest isolation, prevents all phenomena
  DATABASE_ISOLATION_LEVEL_SERIALIZABLE = 4;
}
