// file: proto/gcommon/v1/common/filter_value.proto
// version: 1.0.0
// guid: e873017a-bb7e-4509-bb4b-ba7a2d08bb2b
edition = "2023";

package common.v1;

import "common/v1/filter_operation.proto";
import "common/v1/int64_array.proto";
import "common/v1/string_array.proto";
import "google/protobuf/go_features.proto";
import "buf/validate/validate.proto";


option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/common";

/**
 * Filter value with multiple type support and operation specification.
 * Enables type-safe filtering with various data types and comparison operations.
 *
 * Supports scalar values (string, int, double, bool) and array values
 * for IN/NOT_IN operations, with explicit operation specification.
 */
message FilterValue {
  // The value to filter by (one of the supported types)
  oneof value {
    // String value for text-based filtering
    string string_value = 1 [(buf.validate.field).string.min_len = 1];

    // Integer value for numeric filtering
    int64 int_value = 2 [(buf.validate.field).int64.gte = 0];

    // Double value for floating-point filtering
    double double_value = 3 [(buf.validate.field).double.gte = 0.0];

    // Boolean value for true/false filtering
    bool bool_value = 4;

    // Array of strings for multi-value filtering
    common.v1.StringArray string_array = 5 [lazy = true];

    // Array of integers for multi-value filtering
    common.v1.Int64Array int_array = 6 [lazy = true];
  }

  // Filter operation type (equals, contains, greater than, etc.)
  common.v1.FilterOperation operation = 7;
}
