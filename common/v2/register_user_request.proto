// file: proto/gcommon/v2/common/register_user_request.proto
// version: 1.0.0
// guid: b1c2d3e4-f5a6-7b8c-9d0e-1f2a3b4c5d6e

edition = "2023";

package common.v2;

import "common/v2/request_metadata.proto";
import "google/protobuf/go_features.proto";
import "buf/validate/validate.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/common/v2";

/**
 * Request to register a new user account.
 * Creates a new user with the provided credentials and profile information.
 */
message RegisterUserRequest {
  // Username for the new account (required)
  string username = 1;

  // Email address for the new account (required)
  string email = 2 [ (buf.validate.field).string.email = true ];

  // Password for the new account (required)
  string password = 3;

  // First name of the user
  string first_name = 4 [
      (buf.validate.field).string.min_len = 1,
      (buf.validate.field).string.max_len = 100
    ];

  // Last name of the user
  string last_name = 5 [
      (buf.validate.field).string.min_len = 1,
      (buf.validate.field).string.max_len = 100
    ];

  // Phone number (optional)
  string phone_number = 6;

  // Initial organization to associate user with (optional)
  string organization_id = 7 [
      (buf.validate.field).string.pattern = "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
      (buf.validate.field).required = true
    ];

  // Whether email verification is required
  bool require_email_verification = 8;

  // Invitation token (if registering via invitation)
  string invitation_token = 9;

  // Additional user metadata
  map<string, string> metadata = 10;

  // Request metadata for tracing and correlation
  common.v1.RequestMetadata request_metadata = 11;

  // Terms of service acceptance timestamp
  int64 tos_accepted_at = 12;

  // Privacy policy acceptance timestamp
  int64 privacy_accepted_at = 13;
}
