// file: proto/gcommon/v1/common/config_value.proto
// version: 1.0.0
// guid: 343ca568-969b-4136-953b-7eac76c64553
edition = "2023";

package common.v1;

import "common/v1/value_type.proto";
import "google/protobuf/any.proto";
import "google/protobuf/go_features.proto";
import "buf/validate/validate.proto";


option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/common/v1";

/**
 * Configuration value with type information and metadata.
 * Supports multiple value types with encryption and validation capabilities
 * for secure and type-safe configuration management.
 */
message ConfigValue {
  // The configuration value (one of the supported types)
  oneof value {
    // String value for text configuration
    string string_value = 1 [(buf.validate.field).string.min_len = 1];

    // Integer value for numeric configuration
    int64 int_value = 2 [(buf.validate.field).int64.gte = 0];

    // Double value for floating-point configuration
    double double_value = 3 [(buf.validate.field).double.gte = 0.0];

    // Boolean value for true/false configuration
    bool bool_value = 4;

    // Binary data for complex configuration
    bytes bytes_value = 5;

    // Any protobuf message for structured configuration
    google.protobuf.Any any_value = 6 [lazy = true];
  }

  // Value type for validation and serialization
  common.v1.ValueType type = 7;

  // Whether the value is encrypted at rest
  bool encrypted = 8;

  // Additional metadata about the configuration value
  map<string, string> metadata = 9 [lazy = true];
}
