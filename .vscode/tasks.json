{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Buf Generate with Output",
			"type": "shell",
			"command": "buf generate > buf_generate_output.log 2>&1 && echo 'SUCCESS: buf generate completed' >> buf_generate_output.log || echo 'FAILED: buf generate failed' >> buf_generate_output.log",
			"group": "build",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Buf Generate Module",
			"type": "shell",
			"command": "MODULE=${input:module}; buf generate --path pkg/${MODULE}/proto > buf_generate_${MODULE}.log 2>&1 && echo 'SUCCESS: buf generate completed for ${MODULE}' >> buf_generate_${MODULE}.log || echo 'FAILED: buf generate failed for ${MODULE}' >> buf_generate_${MODULE}.log",
			"group": "build",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Git Add All",
			"type": "shell",
			"command": "git add . > git_add.log 2>&1 && echo 'SUCCESS: git add completed' >> git_add.log || echo 'FAILED: git add failed' >> git_add.log",
			"group": "build",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Git Add Selective",
			"type": "shell",
			"command": "PATTERN='${input:filePattern}'; git add $PATTERN > git_add_selective.log 2>&1 && echo \"SUCCESS: git add completed for pattern: $PATTERN\" >> git_add_selective.log || echo \"FAILED: git add failed for pattern: $PATTERN\" >> git_add_selective.log",
			"group": "build",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Git Commit",
			"type": "shell",
			"command": "MESSAGE='${input:commitMessage}'; git commit -m \"$MESSAGE\" > git_commit.log 2>&1 && echo 'SUCCESS: git commit completed' >> git_commit.log || echo 'FAILED: git commit failed' >> git_commit.log",
			"group": "build",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Git Push",
			"type": "shell",
			"command": "git push > git_push.log 2>&1 && echo 'SUCCESS: git push completed' >> git_push.log || echo 'FAILED: git push failed' >> git_push.log",
			"group": "build",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Git Status",
			"type": "shell",
			"command": "git status --porcelain > git_status.log 2>&1 && echo '--- Git Status Summary ---' >> git_status.log && git status >> git_status.log",
			"group": "build",
			"isBackground": false,
			"problemMatcher": []
		}
	],
	"inputs": [
		{
			"id": "module",
			"description": "Module to generate (e.g., auth, config, metrics)",
			"default": "auth",
			"type": "promptString"
		},
		{
			"id": "commitMessage",
			"description": "Commit message",
			"default": "fix: update protobuf definitions",
			"type": "promptString"
		},
		{
			"id": "filePattern",
			"description": "File pattern to add (e.g., '*.proto', 'pkg/auth/', '**/*.go')",
			"default": "*.proto",
			"type": "promptString"
		}
	]
}
