// file: proto/gcommon/v1/queue/dequeue_response.proto
// version: 1.0.0
// guid: ea8b9c0d-1e2f-3a4b-5c6d-7e8f9a0b1c2d

edition = "2023";

package queue.v1;

import "common/v1/error.proto";
import "common/v1/request_metadata.proto";
import "queue/v1/queue_message.proto";
import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";
import "buf/validate/validate.proto";
// Standard imports
// Common types

// Queue message types

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/queue/";

/**
 * DequeueResponse returns messages retrieved from a queue.
 * Contains message data, delivery metadata, and operation status
 * for consumption and acknowledgment processing.
 *
 * Follows 1-1-1 pattern: one message per file.
 */
message DequeueResponse {
  // Required fields (1-10)

  /**
   * Messages retrieved from the queue.
   * Empty if no messages were available.
   */
  repeated QueueMessage messages = 1;

  /**
   * Indicates whether the dequeue operation was successful.
   */
  bool success = 2;

  // Optional fields (11-50)

  /**
   * Request processing metadata including timing, request ID,
   * and other observability information.
   */
  common.v1.RequestMetadata request_metadata = 11;

  /**
   * Name of the queue messages were retrieved from.
   * Echoed from the request for verification.
   */
  string queue_name = 12 [
      (buf.validate.field).string.min_len = 1,
      (buf.validate.field).string.max_len = 100
    ];

  /**
   * Number of messages that were available but not returned
   * due to max_messages limit.
   */
  int32 messages_remaining = 13;

  /**
   * Approximate number of messages currently in the queue.
   * Useful for monitoring and capacity planning.
   */
  int64 approximate_queue_size = 14;

  /**
   * Consumer ID that was used for this request.
   * Helpful for debugging and load balancing.
   */
  string consumer_id = 15;

  /**
   * Time the request waited for messages (for long polling).
   * Useful for performance monitoring.
   */
  google.protobuf.Timestamp wait_started_at = 16;

  /**
   * Duration the request waited for messages.
   */
  int64 wait_duration_ms = 17;

  /**
   * Indicates if the response was due to wait timeout
   * rather than message availability.
   */
  bool timed_out = 18;

  // Status and error fields (61-70)

  /**
   * Error information if the dequeue operation failed
   * or completed with warnings.
   */
  common.v1.Error error = 61;

  // Timestamps (51-60)

  /**
   * Timestamp when the dequeue operation started.
   */
  google.protobuf.Timestamp operation_started_at = 51;

  /**
   * Timestamp when this response was generated.
   */
  google.protobuf.Timestamp response_generated_at = 52;
}
