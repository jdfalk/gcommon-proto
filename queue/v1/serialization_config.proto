// file: proto/gcommon/v1/queue/serialization_config.proto
// version: 1.0.0
// guid: e5f6a7b8-9c0d-1e2f-3a4b-5c6d7e8f9a0b

edition = "2023";

package queue.v1;

import "common/v1/compression_algorithm.proto";
import "common/v1/serialization_format.proto";
import "queue/v1/format_options.proto";
import "google/protobuf/go_features.proto";
import "buf/validate/validate.proto";


option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/queue/v1";

/**
 * Configuration for message serialization and deserialization.
 */
message SerializationConfig {
  // Default serialization format
  common.v1.SerializationFormat default_format = 1;

  // Supported serialization formats
  repeated common.v1.SerializationFormat supported_formats = 2 [(buf.validate.field).repeated.min_items = 1];

  // Whether to auto-detect format from message headers
  bool auto_detect_format = 3;

  // Default compression algorithm
  common.v1.CompressionAlgorithm default_compression = 4;

  // Supported compression algorithms
  repeated common.v1.CompressionAlgorithm supported_compressions = 5 [(buf.validate.field).repeated.min_items = 1];

  // Whether to auto-detect compression from message headers
  bool auto_detect_compression = 6;

  // Format-specific options
  map<string, FormatOptions> format_options = 7;

  // Whether to validate message format on deserialization
  bool validate_on_deserialize = 8;

  // Maximum message size for serialization
  uint64 max_message_size = 9 [(buf.validate.field).uint64.gte = 0];

  // Whether to enable backwards compatibility mode
  bool backwards_compatible = 10;
}
