// file: proto/gcommon/v2/queue/stream_messages_request.proto
// version: 1.0.0
// guid: 8571acf9-5131-45f6-b0ad-b227ce7f2980

edition = "2023";

package queue.v2;

import "common/v2/ack_level.proto";
import "queue/v2/message_filter.proto";
import "queue/v2/offset_config.proto";
import "queue/v2/stream_config.proto";
import "google/protobuf/go_features.proto";
import "buf/validate/validate.proto";


option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/queuepb/v2";

message StreamMessagesRequest {
  // Topic or queue identifier to stream from
  string topic = 1 [(buf.validate.field).string.min_len = 1];

  // Consumer group ID for coordinated consumption
  string consumer_group_id = 2 [(buf.validate.field).string.min_len = 1];

  // Individual consumer ID within the group
  string consumer_id = 3 [(buf.validate.field).string.min_len = 1];

  // Starting offset configuration
  OffsetConfig offset_config = 4;

  // Maximum number of messages to stream
  int64 max_messages = 5 [(buf.validate.field).int64.gte = 0];

  // Maximum time to keep stream open (milliseconds)
  int32 stream_timeout_ms = 6 [(buf.validate.field).int32.gt = 0];

  // Acknowledgment level required
  common.v2.AckLevel ack_level = 7;

  // Batch size for message delivery
  int32 batch_size = 8 [(buf.validate.field).int32.gte = 0];

  // Message filter criteria
  MessageFilter filter = 9;

  // Auto-acknowledge messages after delivery
  bool auto_acknowledge = 10;

  // Pause stream on error
  bool pause_on_error = 11;

  // Include message metadata in stream
  bool include_metadata = 12;

  // Specific partition IDs to stream from (empty = all partitions)
  repeated int32 partition_ids = 13 [(buf.validate.field).repeated.min_items = 1];

  // Stream configuration options
  StreamConfig stream_config = 14;
}
