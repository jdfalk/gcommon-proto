// file: proto/gcommon/v2/health/messages/health_check.proto
// version: 1.0.0
// guid: 1a2b3c4d-5e6f-7890-abcd-123456789012

edition = "2023";

package health.v2;

import "healthpb/v2/check_type.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";
import "buf/validate/validate.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/healthpb/v2";

/**
 * HealthCheck represents a configuration for a health check.
 * Defines how and when a health check should be performed.
 * Follows 1-1-1 pattern: one message per file.
 */
message HealthCheck {
  // Unique identifier for this health check
  string id = 1 [(buf.validate.field).string.min_len = 1];

  // Human-readable name for the check
  string name = 2 [(buf.validate.field).string.min_len = 1];

  // Type of health check to perform
  CheckType check_type = 3;

  // Service or component name being checked
  string service_name = 4 [(buf.validate.field).string.min_len = 1];

  // Endpoint or resource to check (URL, database connection string, etc.)
  string endpoint = 5;

  // How often to perform this check
  google.protobuf.Duration interval = 6;

  // Maximum time to wait for check completion
  google.protobuf.Duration timeout = 7;

  // Number of consecutive failures before marking as unhealthy
  int32 failure_threshold = 8;

  // Number of consecutive successes before marking as healthy
  int32 success_threshold = 9;

  // Whether this check is currently enabled
  bool enabled = 10;

  // When this check was created
  google.protobuf.Timestamp created_at = 11;

  // When this check was last updated
  google.protobuf.Timestamp updated_at = 12;

  // Additional configuration for the specific check type
  map<string, string> config = 13;

  // Tags for categorizing and filtering checks
  repeated string tags = 14;
}