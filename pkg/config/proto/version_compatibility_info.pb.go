// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: pkg/config/proto/version_compatibility_info.proto

package proto

import (
	_ "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VersionCompatibilityInfo struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BackwardCompatible bool                   `protobuf:"varint,1,opt,name=backward_compatible,json=backwardCompatible"`
	xxx_hidden_ForwardCompatible  bool                   `protobuf:"varint,2,opt,name=forward_compatible,json=forwardCompatible"`
	xxx_hidden_BreakingChanges    []string               `protobuf:"bytes,3,rep,name=breaking_changes,json=breakingChanges"`
	xxx_hidden_Notes              *string                `protobuf:"bytes,4,opt,name=notes"`
	xxx_hidden_MinVersion         *string                `protobuf:"bytes,5,opt,name=min_version,json=minVersion"`
	xxx_hidden_MaxVersion         *string                `protobuf:"bytes,6,opt,name=max_version,json=maxVersion"`
	xxx_hidden_DeprecatedFeatures []string               `protobuf:"bytes,7,rep,name=deprecated_features,json=deprecatedFeatures"`
	xxx_hidden_MigrationGuide     *string                `protobuf:"bytes,8,opt,name=migration_guide,json=migrationGuide"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *VersionCompatibilityInfo) Reset() {
	*x = VersionCompatibilityInfo{}
	mi := &file_pkg_config_proto_version_compatibility_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionCompatibilityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionCompatibilityInfo) ProtoMessage() {}

func (x *VersionCompatibilityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_version_compatibility_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VersionCompatibilityInfo) GetBackwardCompatible() bool {
	if x != nil {
		return x.xxx_hidden_BackwardCompatible
	}
	return false
}

func (x *VersionCompatibilityInfo) GetForwardCompatible() bool {
	if x != nil {
		return x.xxx_hidden_ForwardCompatible
	}
	return false
}

func (x *VersionCompatibilityInfo) GetBreakingChanges() []string {
	if x != nil {
		return x.xxx_hidden_BreakingChanges
	}
	return nil
}

func (x *VersionCompatibilityInfo) GetNotes() string {
	if x != nil {
		if x.xxx_hidden_Notes != nil {
			return *x.xxx_hidden_Notes
		}
		return ""
	}
	return ""
}

func (x *VersionCompatibilityInfo) GetMinVersion() string {
	if x != nil {
		if x.xxx_hidden_MinVersion != nil {
			return *x.xxx_hidden_MinVersion
		}
		return ""
	}
	return ""
}

func (x *VersionCompatibilityInfo) GetMaxVersion() string {
	if x != nil {
		if x.xxx_hidden_MaxVersion != nil {
			return *x.xxx_hidden_MaxVersion
		}
		return ""
	}
	return ""
}

func (x *VersionCompatibilityInfo) GetDeprecatedFeatures() []string {
	if x != nil {
		return x.xxx_hidden_DeprecatedFeatures
	}
	return nil
}

func (x *VersionCompatibilityInfo) GetMigrationGuide() string {
	if x != nil {
		if x.xxx_hidden_MigrationGuide != nil {
			return *x.xxx_hidden_MigrationGuide
		}
		return ""
	}
	return ""
}

func (x *VersionCompatibilityInfo) SetBackwardCompatible(v bool) {
	x.xxx_hidden_BackwardCompatible = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *VersionCompatibilityInfo) SetForwardCompatible(v bool) {
	x.xxx_hidden_ForwardCompatible = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *VersionCompatibilityInfo) SetBreakingChanges(v []string) {
	x.xxx_hidden_BreakingChanges = v
}

func (x *VersionCompatibilityInfo) SetNotes(v string) {
	x.xxx_hidden_Notes = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *VersionCompatibilityInfo) SetMinVersion(v string) {
	x.xxx_hidden_MinVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *VersionCompatibilityInfo) SetMaxVersion(v string) {
	x.xxx_hidden_MaxVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *VersionCompatibilityInfo) SetDeprecatedFeatures(v []string) {
	x.xxx_hidden_DeprecatedFeatures = v
}

func (x *VersionCompatibilityInfo) SetMigrationGuide(v string) {
	x.xxx_hidden_MigrationGuide = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *VersionCompatibilityInfo) HasBackwardCompatible() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VersionCompatibilityInfo) HasForwardCompatible() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VersionCompatibilityInfo) HasNotes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VersionCompatibilityInfo) HasMinVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *VersionCompatibilityInfo) HasMaxVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *VersionCompatibilityInfo) HasMigrationGuide() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *VersionCompatibilityInfo) ClearBackwardCompatible() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BackwardCompatible = false
}

func (x *VersionCompatibilityInfo) ClearForwardCompatible() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ForwardCompatible = false
}

func (x *VersionCompatibilityInfo) ClearNotes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Notes = nil
}

func (x *VersionCompatibilityInfo) ClearMinVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MinVersion = nil
}

func (x *VersionCompatibilityInfo) ClearMaxVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_MaxVersion = nil
}

func (x *VersionCompatibilityInfo) ClearMigrationGuide() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_MigrationGuide = nil
}

type VersionCompatibilityInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Backward compatible
	BackwardCompatible *bool
	// Forward compatible
	ForwardCompatible *bool
	// Breaking changes
	BreakingChanges []string
	// Compatibility notes
	Notes *string
	// Minimum version
	MinVersion *string
	// Maximum version
	MaxVersion *string
	// Deprecated features
	DeprecatedFeatures []string
	// Migration guide
	MigrationGuide *string
}

func (b0 VersionCompatibilityInfo_builder) Build() *VersionCompatibilityInfo {
	m0 := &VersionCompatibilityInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BackwardCompatible != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_BackwardCompatible = *b.BackwardCompatible
	}
	if b.ForwardCompatible != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_ForwardCompatible = *b.ForwardCompatible
	}
	x.xxx_hidden_BreakingChanges = b.BreakingChanges
	if b.Notes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_Notes = b.Notes
	}
	if b.MinVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_MinVersion = b.MinVersion
	}
	if b.MaxVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_MaxVersion = b.MaxVersion
	}
	x.xxx_hidden_DeprecatedFeatures = b.DeprecatedFeatures
	if b.MigrationGuide != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_MigrationGuide = b.MigrationGuide
	}
	return m0
}

var File_pkg_config_proto_version_compatibility_info_proto protoreflect.FileDescriptor

const file_pkg_config_proto_version_compatibility_info_proto_rawDesc = "" +
	"\n" +
	"1pkg/config/proto/version_compatibility_info.proto\x12\x11gcommon.v1.config\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a pkg/common/proto/audit_log.proto\"\xd7\x02\n" +
	"\x18VersionCompatibilityInfo\x12/\n" +
	"\x13backward_compatible\x18\x01 \x01(\bR\x12backwardCompatible\x12-\n" +
	"\x12forward_compatible\x18\x02 \x01(\bR\x11forwardCompatible\x12)\n" +
	"\x10breaking_changes\x18\x03 \x03(\tR\x0fbreakingChanges\x12\x14\n" +
	"\x05notes\x18\x04 \x01(\tR\x05notes\x12\x1f\n" +
	"\vmin_version\x18\x05 \x01(\tR\n" +
	"minVersion\x12\x1f\n" +
	"\vmax_version\x18\x06 \x01(\tR\n" +
	"maxVersion\x12/\n" +
	"\x13deprecated_features\x18\a \x03(\tR\x12deprecatedFeatures\x12'\n" +
	"\x0fmigration_guide\x18\b \x01(\tR\x0emigrationGuideB\xd0\x01\n" +
	"\x15com.gcommon.v1.configB\x1dVersionCompatibilityInfoProtoP\x01Z*github.com/jdfalk/gcommon/pkg/config/proto\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Config\xca\x02\x11Gcommon\\V1\\Config\xe2\x02\x1dGcommon\\V1\\Config\\GPBMetadata\xea\x02\x13Gcommon::V1::Config\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_config_proto_version_compatibility_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_config_proto_version_compatibility_info_proto_goTypes = []any{
	(*VersionCompatibilityInfo)(nil), // 0: gcommon.v1.config.VersionCompatibilityInfo
}
var file_pkg_config_proto_version_compatibility_info_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_config_proto_version_compatibility_info_proto_init() }
func file_pkg_config_proto_version_compatibility_info_proto_init() {
	if File_pkg_config_proto_version_compatibility_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_config_proto_version_compatibility_info_proto_rawDesc), len(file_pkg_config_proto_version_compatibility_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_config_proto_version_compatibility_info_proto_goTypes,
		DependencyIndexes: file_pkg_config_proto_version_compatibility_info_proto_depIdxs,
		MessageInfos:      file_pkg_config_proto_version_compatibility_info_proto_msgTypes,
	}.Build()
	File_pkg_config_proto_version_compatibility_info_proto = out.File
	file_pkg_config_proto_version_compatibility_info_proto_goTypes = nil
	file_pkg_config_proto_version_compatibility_info_proto_depIdxs = nil
}
