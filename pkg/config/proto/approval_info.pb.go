// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/config/proto/approval_info.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApprovalInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether approval was required
	Required *bool `protobuf:"varint,1,opt,name=required" json:"required,omitempty"`
	// Approval status
	Status *ApprovalStatus `protobuf:"varint,2,opt,name=status,enum=gcommon.v1.config.ApprovalStatus" json:"status,omitempty"`
	// User who approved
	ApprovedBy *string `protobuf:"bytes,3,opt,name=approved_by,json=approvedBy" json:"approved_by,omitempty"`
	// Approval timestamp
	ApprovedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=approved_at,json=approvedAt" json:"approved_at,omitempty"`
	// Approval comments
	Comments *string `protobuf:"bytes,5,opt,name=comments" json:"comments,omitempty"`
	// Approval workflow ID
	WorkflowId *string `protobuf:"bytes,6,opt,name=workflow_id,json=workflowId" json:"workflow_id,omitempty"`
	// Approval policy applied
	PolicyName    *string `protobuf:"bytes,7,opt,name=policy_name,json=policyName" json:"policy_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApprovalInfo) Reset() {
	*x = ApprovalInfo{}
	mi := &file_pkg_config_proto_approval_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApprovalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalInfo) ProtoMessage() {}

func (x *ApprovalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_approval_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalInfo.ProtoReflect.Descriptor instead.
func (*ApprovalInfo) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_approval_info_proto_rawDescGZIP(), []int{0}
}

func (x *ApprovalInfo) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *ApprovalInfo) GetStatus() ApprovalStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ApprovalStatus_APPROVAL_STATUS_UNSPECIFIED
}

func (x *ApprovalInfo) GetApprovedBy() string {
	if x != nil && x.ApprovedBy != nil {
		return *x.ApprovedBy
	}
	return ""
}

func (x *ApprovalInfo) GetApprovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

func (x *ApprovalInfo) GetComments() string {
	if x != nil && x.Comments != nil {
		return *x.Comments
	}
	return ""
}

func (x *ApprovalInfo) GetWorkflowId() string {
	if x != nil && x.WorkflowId != nil {
		return *x.WorkflowId
	}
	return ""
}

func (x *ApprovalInfo) GetPolicyName() string {
	if x != nil && x.PolicyName != nil {
		return *x.PolicyName
	}
	return ""
}

var File_pkg_config_proto_approval_info_proto protoreflect.FileDescriptor

const file_pkg_config_proto_approval_info_proto_rawDesc = "" +
	"\n" +
	"$pkg/config/proto/approval_info.proto\x12\x11gcommon.v1.config\x1a\x1fgoogle/protobuf/timestamp.proto\x1a+pkg/config/proto/audit_operation_type.proto\x1a-pkg/config/proto/validation_result_type.proto\x1a*pkg/config/proto/validation_severity.proto\x1a&pkg/config/proto/approval_status.proto\x1a&pkg/config/proto/rollback_method.proto\"\xa1\x02\n" +
	"\fApprovalInfo\x12\x1a\n" +
	"\brequired\x18\x01 \x01(\bR\brequired\x129\n" +
	"\x06status\x18\x02 \x01(\x0e2!.gcommon.v1.config.ApprovalStatusR\x06status\x12\x1f\n" +
	"\vapproved_by\x18\x03 \x01(\tR\n" +
	"approvedBy\x12;\n" +
	"\vapproved_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"approvedAt\x12\x1a\n" +
	"\bcomments\x18\x05 \x01(\tR\bcomments\x12\x1f\n" +
	"\vworkflow_id\x18\x06 \x01(\tR\n" +
	"workflowId\x12\x1f\n" +
	"\vpolicy_name\x18\a \x01(\tR\n" +
	"policyNameB\xbc\x01\n" +
	"\x15com.gcommon.v1.configB\x11ApprovalInfoProtoP\x01Z*github.com/jdfalk/gcommon/pkg/config/proto\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Config\xca\x02\x11Gcommon\\V1\\Config\xe2\x02\x1dGcommon\\V1\\Config\\GPBMetadata\xea\x02\x13Gcommon::V1::Configb\beditionsp\xe8\a"

var (
	file_pkg_config_proto_approval_info_proto_rawDescOnce sync.Once
	file_pkg_config_proto_approval_info_proto_rawDescData []byte
)

func file_pkg_config_proto_approval_info_proto_rawDescGZIP() []byte {
	file_pkg_config_proto_approval_info_proto_rawDescOnce.Do(func() {
		file_pkg_config_proto_approval_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_config_proto_approval_info_proto_rawDesc), len(file_pkg_config_proto_approval_info_proto_rawDesc)))
	})
	return file_pkg_config_proto_approval_info_proto_rawDescData
}

var file_pkg_config_proto_approval_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_config_proto_approval_info_proto_goTypes = []any{
	(*ApprovalInfo)(nil),          // 0: gcommon.v1.config.ApprovalInfo
	(ApprovalStatus)(0),           // 1: gcommon.v1.config.ApprovalStatus
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_pkg_config_proto_approval_info_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.config.ApprovalInfo.status:type_name -> gcommon.v1.config.ApprovalStatus
	2, // 1: gcommon.v1.config.ApprovalInfo.approved_at:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_config_proto_approval_info_proto_init() }
func file_pkg_config_proto_approval_info_proto_init() {
	if File_pkg_config_proto_approval_info_proto != nil {
		return
	}
	file_pkg_config_proto_audit_operation_type_proto_init()
	file_pkg_config_proto_validation_result_type_proto_init()
	file_pkg_config_proto_validation_severity_proto_init()
	file_pkg_config_proto_approval_status_proto_init()
	file_pkg_config_proto_rollback_method_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_config_proto_approval_info_proto_rawDesc), len(file_pkg_config_proto_approval_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_config_proto_approval_info_proto_goTypes,
		DependencyIndexes: file_pkg_config_proto_approval_info_proto_depIdxs,
		MessageInfos:      file_pkg_config_proto_approval_info_proto_msgTypes,
	}.Build()
	File_pkg_config_proto_approval_info_proto = out.File
	file_pkg_config_proto_approval_info_proto_goTypes = nil
	file_pkg_config_proto_approval_info_proto_depIdxs = nil
}
