// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: config.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ChangeType represents the type of configuration change
type ChangeType int32

const (
	ChangeType_CHANGE_TYPE_UNSPECIFIED ChangeType = 0
	ChangeType_CHANGE_TYPE_ADD         ChangeType = 1
	ChangeType_CHANGE_TYPE_UPDATE      ChangeType = 2
	ChangeType_CHANGE_TYPE_DELETE      ChangeType = 3
)

// Enum value maps for ChangeType.
var (
	ChangeType_name = map[int32]string{
		0: "CHANGE_TYPE_UNSPECIFIED",
		1: "CHANGE_TYPE_ADD",
		2: "CHANGE_TYPE_UPDATE",
		3: "CHANGE_TYPE_DELETE",
	}
	ChangeType_value = map[string]int32{
		"CHANGE_TYPE_UNSPECIFIED": 0,
		"CHANGE_TYPE_ADD":         1,
		"CHANGE_TYPE_UPDATE":      2,
		"CHANGE_TYPE_DELETE":      3,
	}
)

func (x ChangeType) Enum() *ChangeType {
	p := new(ChangeType)
	*p = x
	return p
}

func (x ChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[0].Descriptor()
}

func (ChangeType) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[0]
}

func (x ChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeType.Descriptor instead.
func (ChangeType) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

// SourceType represents a configuration source type
type SourceType int32

const (
	SourceType_SOURCE_TYPE_UNSPECIFIED SourceType = 0
	SourceType_SOURCE_TYPE_FILE        SourceType = 1
	SourceType_SOURCE_TYPE_ENV         SourceType = 2
	SourceType_SOURCE_TYPE_REMOTE      SourceType = 3
	SourceType_SOURCE_TYPE_DEFAULTS    SourceType = 4
	SourceType_SOURCE_TYPE_FLAGS       SourceType = 5
)

// Enum value maps for SourceType.
var (
	SourceType_name = map[int32]string{
		0: "SOURCE_TYPE_UNSPECIFIED",
		1: "SOURCE_TYPE_FILE",
		2: "SOURCE_TYPE_ENV",
		3: "SOURCE_TYPE_REMOTE",
		4: "SOURCE_TYPE_DEFAULTS",
		5: "SOURCE_TYPE_FLAGS",
	}
	SourceType_value = map[string]int32{
		"SOURCE_TYPE_UNSPECIFIED": 0,
		"SOURCE_TYPE_FILE":        1,
		"SOURCE_TYPE_ENV":         2,
		"SOURCE_TYPE_REMOTE":      3,
		"SOURCE_TYPE_DEFAULTS":    4,
		"SOURCE_TYPE_FLAGS":       5,
	}
)

func (x SourceType) Enum() *SourceType {
	p := new(SourceType)
	*p = x
	return p
}

func (x SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[1].Descriptor()
}

func (SourceType) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[1]
}

func (x SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceType.Descriptor instead.
func (SourceType) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

// GetRequest contains get request data
type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	DefaultValue  string                 `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"` // Optional default value if key doesn't exist
	TypeHint      string                 `protobuf:"bytes,3,opt,name=type_hint,json=typeHint,proto3" json:"type_hint,omitempty"`             // Optional hint about the value type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetRequest) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *GetRequest) GetTypeHint() string {
	if x != nil {
		return x.TypeHint
	}
	return ""
}

// GetResponse contains get response data
type GetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Can be one of the value types below
	//
	// Types that are valid to be assigned to Value:
	//
	//	*GetResponse_BoolValue
	//	*GetResponse_IntValue
	//	*GetResponse_UintValue
	//	*GetResponse_FloatValue
	//	*GetResponse_StringValue
	//	*GetResponse_BytesValue
	//	*GetResponse_DurationValue
	//	*GetResponse_TimeValue
	Value         isGetResponse_Value `protobuf_oneof:"value"`
	StringSlice   []string            `protobuf:"bytes,9,rep,name=string_slice,json=stringSlice,proto3" json:"string_slice,omitempty"`
	IntSlice      []int64             `protobuf:"varint,10,rep,packed,name=int_slice,json=intSlice,proto3" json:"int_slice,omitempty"`
	Found         bool                `protobuf:"varint,11,opt,name=found,proto3" json:"found,omitempty"` // Whether the key was found
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

func (x *GetResponse) GetValue() isGetResponse_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GetResponse) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*GetResponse_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *GetResponse) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*GetResponse_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *GetResponse) GetUintValue() uint64 {
	if x != nil {
		if x, ok := x.Value.(*GetResponse_UintValue); ok {
			return x.UintValue
		}
	}
	return 0
}

func (x *GetResponse) GetFloatValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*GetResponse_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *GetResponse) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*GetResponse_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *GetResponse) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*GetResponse_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

func (x *GetResponse) GetDurationValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*GetResponse_DurationValue); ok {
			return x.DurationValue
		}
	}
	return 0
}

func (x *GetResponse) GetTimeValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*GetResponse_TimeValue); ok {
			return x.TimeValue
		}
	}
	return 0
}

func (x *GetResponse) GetStringSlice() []string {
	if x != nil {
		return x.StringSlice
	}
	return nil
}

func (x *GetResponse) GetIntSlice() []int64 {
	if x != nil {
		return x.IntSlice
	}
	return nil
}

func (x *GetResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type isGetResponse_Value interface {
	isGetResponse_Value()
}

type GetResponse_BoolValue struct {
	BoolValue bool `protobuf:"varint,1,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type GetResponse_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type GetResponse_UintValue struct {
	UintValue uint64 `protobuf:"varint,3,opt,name=uint_value,json=uintValue,proto3,oneof"`
}

type GetResponse_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,4,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type GetResponse_StringValue struct {
	StringValue string `protobuf:"bytes,5,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type GetResponse_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,6,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type GetResponse_DurationValue struct {
	DurationValue int64 `protobuf:"varint,7,opt,name=duration_value,json=durationValue,proto3,oneof"` // Duration in nanoseconds
}

type GetResponse_TimeValue struct {
	TimeValue int64 `protobuf:"varint,8,opt,name=time_value,json=timeValue,proto3,oneof"` // Time as Unix timestamp
}

func (*GetResponse_BoolValue) isGetResponse_Value() {}

func (*GetResponse_IntValue) isGetResponse_Value() {}

func (*GetResponse_UintValue) isGetResponse_Value() {}

func (*GetResponse_FloatValue) isGetResponse_Value() {}

func (*GetResponse_StringValue) isGetResponse_Value() {}

func (*GetResponse_BytesValue) isGetResponse_Value() {}

func (*GetResponse_DurationValue) isGetResponse_Value() {}

func (*GetResponse_TimeValue) isGetResponse_Value() {}

// SetRequest contains set request data
type SetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Key   string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Can be one of the value types below
	//
	// Types that are valid to be assigned to Value:
	//
	//	*SetRequest_BoolValue
	//	*SetRequest_IntValue
	//	*SetRequest_UintValue
	//	*SetRequest_FloatValue
	//	*SetRequest_StringValue
	//	*SetRequest_BytesValue
	//	*SetRequest_DurationValue
	//	*SetRequest_TimeValue
	Value         isSetRequest_Value `protobuf_oneof:"value"`
	StringSlice   []string           `protobuf:"bytes,10,rep,name=string_slice,json=stringSlice,proto3" json:"string_slice,omitempty"`
	IntSlice      []int64            `protobuf:"varint,11,rep,packed,name=int_slice,json=intSlice,proto3" json:"int_slice,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetRequest) Reset() {
	*x = SetRequest{}
	mi := &file_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequest) ProtoMessage() {}

func (x *SetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequest.ProtoReflect.Descriptor instead.
func (*SetRequest) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{2}
}

func (x *SetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetRequest) GetValue() isSetRequest_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SetRequest) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*SetRequest_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *SetRequest) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*SetRequest_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *SetRequest) GetUintValue() uint64 {
	if x != nil {
		if x, ok := x.Value.(*SetRequest_UintValue); ok {
			return x.UintValue
		}
	}
	return 0
}

func (x *SetRequest) GetFloatValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*SetRequest_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *SetRequest) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*SetRequest_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *SetRequest) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*SetRequest_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

func (x *SetRequest) GetDurationValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*SetRequest_DurationValue); ok {
			return x.DurationValue
		}
	}
	return 0
}

func (x *SetRequest) GetTimeValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*SetRequest_TimeValue); ok {
			return x.TimeValue
		}
	}
	return 0
}

func (x *SetRequest) GetStringSlice() []string {
	if x != nil {
		return x.StringSlice
	}
	return nil
}

func (x *SetRequest) GetIntSlice() []int64 {
	if x != nil {
		return x.IntSlice
	}
	return nil
}

type isSetRequest_Value interface {
	isSetRequest_Value()
}

type SetRequest_BoolValue struct {
	BoolValue bool `protobuf:"varint,2,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type SetRequest_IntValue struct {
	IntValue int64 `protobuf:"varint,3,opt,name=int_value,json=intValue,proto3,oneof"`
}

type SetRequest_UintValue struct {
	UintValue uint64 `protobuf:"varint,4,opt,name=uint_value,json=uintValue,proto3,oneof"`
}

type SetRequest_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,5,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type SetRequest_StringValue struct {
	StringValue string `protobuf:"bytes,6,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type SetRequest_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,7,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type SetRequest_DurationValue struct {
	DurationValue int64 `protobuf:"varint,8,opt,name=duration_value,json=durationValue,proto3,oneof"` // Duration in nanoseconds
}

type SetRequest_TimeValue struct {
	TimeValue int64 `protobuf:"varint,9,opt,name=time_value,json=timeValue,proto3,oneof"` // Time as Unix timestamp
}

func (*SetRequest_BoolValue) isSetRequest_Value() {}

func (*SetRequest_IntValue) isSetRequest_Value() {}

func (*SetRequest_UintValue) isSetRequest_Value() {}

func (*SetRequest_FloatValue) isSetRequest_Value() {}

func (*SetRequest_StringValue) isSetRequest_Value() {}

func (*SetRequest_BytesValue) isSetRequest_Value() {}

func (*SetRequest_DurationValue) isSetRequest_Value() {}

func (*SetRequest_TimeValue) isSetRequest_Value() {}

// SetResponse contains set response data
type SetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetResponse) Reset() {
	*x = SetResponse{}
	mi := &file_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetResponse) ProtoMessage() {}

func (x *SetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetResponse.ProtoReflect.Descriptor instead.
func (*SetResponse) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{3}
}

func (x *SetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// HasRequest contains has request data
type HasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HasRequest) Reset() {
	*x = HasRequest{}
	mi := &file_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasRequest) ProtoMessage() {}

func (x *HasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasRequest.ProtoReflect.Descriptor instead.
func (*HasRequest) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{4}
}

func (x *HasRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// HasResponse contains has response data
type HasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HasResponse) Reset() {
	*x = HasResponse{}
	mi := &file_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasResponse) ProtoMessage() {}

func (x *HasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasResponse.ProtoReflect.Descriptor instead.
func (*HasResponse) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{5}
}

func (x *HasResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// WatchRequest contains watch request data
type WatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchRequest) Reset() {
	*x = WatchRequest{}
	mi := &file_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRequest) ProtoMessage() {}

func (x *WatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRequest.ProtoReflect.Descriptor instead.
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{6}
}

func (x *WatchRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// WatchResponse contains watch response data
type WatchResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Key   string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Can be one of the value types below
	//
	// Types that are valid to be assigned to Value:
	//
	//	*WatchResponse_BoolValue
	//	*WatchResponse_IntValue
	//	*WatchResponse_UintValue
	//	*WatchResponse_FloatValue
	//	*WatchResponse_StringValue
	//	*WatchResponse_BytesValue
	//	*WatchResponse_DurationValue
	//	*WatchResponse_TimeValue
	Value         isWatchResponse_Value `protobuf_oneof:"value"`
	StringSlice   []string              `protobuf:"bytes,10,rep,name=string_slice,json=stringSlice,proto3" json:"string_slice,omitempty"`
	IntSlice      []int64               `protobuf:"varint,11,rep,packed,name=int_slice,json=intSlice,proto3" json:"int_slice,omitempty"`
	ChangeType    ChangeType            `protobuf:"varint,12,opt,name=change_type,json=changeType,proto3,enum=config.ChangeType" json:"change_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchResponse) Reset() {
	*x = WatchResponse{}
	mi := &file_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchResponse) ProtoMessage() {}

func (x *WatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchResponse.ProtoReflect.Descriptor instead.
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{7}
}

func (x *WatchResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WatchResponse) GetValue() isWatchResponse_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *WatchResponse) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*WatchResponse_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *WatchResponse) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*WatchResponse_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *WatchResponse) GetUintValue() uint64 {
	if x != nil {
		if x, ok := x.Value.(*WatchResponse_UintValue); ok {
			return x.UintValue
		}
	}
	return 0
}

func (x *WatchResponse) GetFloatValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*WatchResponse_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *WatchResponse) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*WatchResponse_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *WatchResponse) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*WatchResponse_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

func (x *WatchResponse) GetDurationValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*WatchResponse_DurationValue); ok {
			return x.DurationValue
		}
	}
	return 0
}

func (x *WatchResponse) GetTimeValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*WatchResponse_TimeValue); ok {
			return x.TimeValue
		}
	}
	return 0
}

func (x *WatchResponse) GetStringSlice() []string {
	if x != nil {
		return x.StringSlice
	}
	return nil
}

func (x *WatchResponse) GetIntSlice() []int64 {
	if x != nil {
		return x.IntSlice
	}
	return nil
}

func (x *WatchResponse) GetChangeType() ChangeType {
	if x != nil {
		return x.ChangeType
	}
	return ChangeType_CHANGE_TYPE_UNSPECIFIED
}

type isWatchResponse_Value interface {
	isWatchResponse_Value()
}

type WatchResponse_BoolValue struct {
	BoolValue bool `protobuf:"varint,2,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type WatchResponse_IntValue struct {
	IntValue int64 `protobuf:"varint,3,opt,name=int_value,json=intValue,proto3,oneof"`
}

type WatchResponse_UintValue struct {
	UintValue uint64 `protobuf:"varint,4,opt,name=uint_value,json=uintValue,proto3,oneof"`
}

type WatchResponse_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,5,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type WatchResponse_StringValue struct {
	StringValue string `protobuf:"bytes,6,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type WatchResponse_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,7,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type WatchResponse_DurationValue struct {
	DurationValue int64 `protobuf:"varint,8,opt,name=duration_value,json=durationValue,proto3,oneof"` // Duration in nanoseconds
}

type WatchResponse_TimeValue struct {
	TimeValue int64 `protobuf:"varint,9,opt,name=time_value,json=timeValue,proto3,oneof"` // Time as Unix timestamp
}

func (*WatchResponse_BoolValue) isWatchResponse_Value() {}

func (*WatchResponse_IntValue) isWatchResponse_Value() {}

func (*WatchResponse_UintValue) isWatchResponse_Value() {}

func (*WatchResponse_FloatValue) isWatchResponse_Value() {}

func (*WatchResponse_StringValue) isWatchResponse_Value() {}

func (*WatchResponse_BytesValue) isWatchResponse_Value() {}

func (*WatchResponse_DurationValue) isWatchResponse_Value() {}

func (*WatchResponse_TimeValue) isWatchResponse_Value() {}

// AllSettingsRequest contains all settings request data
type AllSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefix        string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"` // Optional prefix to filter settings
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllSettingsRequest) Reset() {
	*x = AllSettingsRequest{}
	mi := &file_config_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllSettingsRequest) ProtoMessage() {}

func (x *AllSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllSettingsRequest.ProtoReflect.Descriptor instead.
func (*AllSettingsRequest) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{8}
}

func (x *AllSettingsRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

// AllSettingsResponse contains all settings response data
type AllSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Settings      map[string][]byte      `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Raw JSON for settings
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllSettingsResponse) Reset() {
	*x = AllSettingsResponse{}
	mi := &file_config_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllSettingsResponse) ProtoMessage() {}

func (x *AllSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllSettingsResponse.ProtoReflect.Descriptor instead.
func (*AllSettingsResponse) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{9}
}

func (x *AllSettingsResponse) GetSettings() map[string][]byte {
	if x != nil {
		return x.Settings
	}
	return nil
}

// AllKeysRequest contains all keys request data
type AllKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefix        string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"` // Optional prefix to filter keys
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllKeysRequest) Reset() {
	*x = AllKeysRequest{}
	mi := &file_config_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllKeysRequest) ProtoMessage() {}

func (x *AllKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllKeysRequest.ProtoReflect.Descriptor instead.
func (*AllKeysRequest) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{10}
}

func (x *AllKeysRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

// AllKeysResponse contains all keys response data
type AllKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllKeysResponse) Reset() {
	*x = AllKeysResponse{}
	mi := &file_config_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllKeysResponse) ProtoMessage() {}

func (x *AllKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllKeysResponse.ProtoReflect.Descriptor instead.
func (*AllKeysResponse) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{11}
}

func (x *AllKeysResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

// ConfigSource represents a configuration source
type ConfigSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          SourceType             `protobuf:"varint,2,opt,name=type,proto3,enum=config.SourceType" json:"type,omitempty"`
	Location      string                 `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Watch         bool                   `protobuf:"varint,4,opt,name=watch,proto3" json:"watch,omitempty"`
	Priority      int32                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigSource) Reset() {
	*x = ConfigSource{}
	mi := &file_config_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSource) ProtoMessage() {}

func (x *ConfigSource) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSource.ProtoReflect.Descriptor instead.
func (*ConfigSource) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigSource) GetType() SourceType {
	if x != nil {
		return x.Type
	}
	return SourceType_SOURCE_TYPE_UNSPECIFIED
}

func (x *ConfigSource) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ConfigSource) GetWatch() bool {
	if x != nil {
		return x.Watch
	}
	return false
}

func (x *ConfigSource) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

var File_config_proto protoreflect.FileDescriptor

const file_config_proto_rawDesc = "" +
	"\n" +
	"\fconfig.proto\x12\x06config\"`\n" +
	"\n" +
	"GetRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12#\n" +
	"\rdefault_value\x18\x02 \x01(\tR\fdefaultValue\x12\x1b\n" +
	"\ttype_hint\x18\x03 \x01(\tR\btypeHint\"\x82\x03\n" +
	"\vGetResponse\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x01 \x01(\bH\x00R\tboolValue\x12\x1d\n" +
	"\tint_value\x18\x02 \x01(\x03H\x00R\bintValue\x12\x1f\n" +
	"\n" +
	"uint_value\x18\x03 \x01(\x04H\x00R\tuintValue\x12!\n" +
	"\vfloat_value\x18\x04 \x01(\x01H\x00R\n" +
	"floatValue\x12#\n" +
	"\fstring_value\x18\x05 \x01(\tH\x00R\vstringValue\x12!\n" +
	"\vbytes_value\x18\x06 \x01(\fH\x00R\n" +
	"bytesValue\x12'\n" +
	"\x0eduration_value\x18\a \x01(\x03H\x00R\rdurationValue\x12\x1f\n" +
	"\n" +
	"time_value\x18\b \x01(\x03H\x00R\ttimeValue\x12!\n" +
	"\fstring_slice\x18\t \x03(\tR\vstringSlice\x12\x1b\n" +
	"\tint_slice\x18\n" +
	" \x03(\x03R\bintSlice\x12\x14\n" +
	"\x05found\x18\v \x01(\bR\x05foundB\a\n" +
	"\x05value\"\xfd\x02\n" +
	"\n" +
	"SetRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x02 \x01(\bH\x00R\tboolValue\x12\x1d\n" +
	"\tint_value\x18\x03 \x01(\x03H\x00R\bintValue\x12\x1f\n" +
	"\n" +
	"uint_value\x18\x04 \x01(\x04H\x00R\tuintValue\x12!\n" +
	"\vfloat_value\x18\x05 \x01(\x01H\x00R\n" +
	"floatValue\x12#\n" +
	"\fstring_value\x18\x06 \x01(\tH\x00R\vstringValue\x12!\n" +
	"\vbytes_value\x18\a \x01(\fH\x00R\n" +
	"bytesValue\x12'\n" +
	"\x0eduration_value\x18\b \x01(\x03H\x00R\rdurationValue\x12\x1f\n" +
	"\n" +
	"time_value\x18\t \x01(\x03H\x00R\ttimeValue\x12!\n" +
	"\fstring_slice\x18\n" +
	" \x03(\tR\vstringSlice\x12\x1b\n" +
	"\tint_slice\x18\v \x03(\x03R\bintSliceB\a\n" +
	"\x05value\"'\n" +
	"\vSetResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x1e\n" +
	"\n" +
	"HasRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"%\n" +
	"\vHasResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\" \n" +
	"\fWatchRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"\xb5\x03\n" +
	"\rWatchResponse\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x02 \x01(\bH\x00R\tboolValue\x12\x1d\n" +
	"\tint_value\x18\x03 \x01(\x03H\x00R\bintValue\x12\x1f\n" +
	"\n" +
	"uint_value\x18\x04 \x01(\x04H\x00R\tuintValue\x12!\n" +
	"\vfloat_value\x18\x05 \x01(\x01H\x00R\n" +
	"floatValue\x12#\n" +
	"\fstring_value\x18\x06 \x01(\tH\x00R\vstringValue\x12!\n" +
	"\vbytes_value\x18\a \x01(\fH\x00R\n" +
	"bytesValue\x12'\n" +
	"\x0eduration_value\x18\b \x01(\x03H\x00R\rdurationValue\x12\x1f\n" +
	"\n" +
	"time_value\x18\t \x01(\x03H\x00R\ttimeValue\x12!\n" +
	"\fstring_slice\x18\n" +
	" \x03(\tR\vstringSlice\x12\x1b\n" +
	"\tint_slice\x18\v \x03(\x03R\bintSlice\x123\n" +
	"\vchange_type\x18\f \x01(\x0e2\x12.config.ChangeTypeR\n" +
	"changeTypeB\a\n" +
	"\x05value\",\n" +
	"\x12AllSettingsRequest\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\"\x99\x01\n" +
	"\x13AllSettingsResponse\x12E\n" +
	"\bsettings\x18\x01 \x03(\v2).config.AllSettingsResponse.SettingsEntryR\bsettings\x1a;\n" +
	"\rSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"(\n" +
	"\x0eAllKeysRequest\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\"%\n" +
	"\x0fAllKeysResponse\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\"\x98\x01\n" +
	"\fConfigSource\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12&\n" +
	"\x04type\x18\x02 \x01(\x0e2\x12.config.SourceTypeR\x04type\x12\x1a\n" +
	"\blocation\x18\x03 \x01(\tR\blocation\x12\x14\n" +
	"\x05watch\x18\x04 \x01(\bR\x05watch\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority*n\n" +
	"\n" +
	"ChangeType\x12\x1b\n" +
	"\x17CHANGE_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fCHANGE_TYPE_ADD\x10\x01\x12\x16\n" +
	"\x12CHANGE_TYPE_UPDATE\x10\x02\x12\x16\n" +
	"\x12CHANGE_TYPE_DELETE\x10\x03*\x9d\x01\n" +
	"\n" +
	"SourceType\x12\x1b\n" +
	"\x17SOURCE_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10SOURCE_TYPE_FILE\x10\x01\x12\x13\n" +
	"\x0fSOURCE_TYPE_ENV\x10\x02\x12\x16\n" +
	"\x12SOURCE_TYPE_REMOTE\x10\x03\x12\x18\n" +
	"\x14SOURCE_TYPE_DEFAULTS\x10\x04\x12\x15\n" +
	"\x11SOURCE_TYPE_FLAGS\x10\x052\xdb\x02\n" +
	"\rConfigService\x12.\n" +
	"\x03Get\x12\x12.config.GetRequest\x1a\x13.config.GetResponse\x12.\n" +
	"\x03Set\x12\x12.config.SetRequest\x1a\x13.config.SetResponse\x12.\n" +
	"\x03Has\x12\x12.config.HasRequest\x1a\x13.config.HasResponse\x126\n" +
	"\x05Watch\x12\x14.config.WatchRequest\x1a\x15.config.WatchResponse0\x01\x12F\n" +
	"\vAllSettings\x12\x1a.config.AllSettingsRequest\x1a\x1b.config.AllSettingsResponse\x12:\n" +
	"\aAllKeys\x12\x16.config.AllKeysRequest\x1a\x17.config.AllKeysResponseB,Z*github.com/jdfalk/gcommon/pkg/config/protob\x06proto3"

var (
	file_config_proto_rawDescOnce sync.Once
	file_config_proto_rawDescData []byte
)

func file_config_proto_rawDescGZIP() []byte {
	file_config_proto_rawDescOnce.Do(func() {
		file_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_proto_rawDesc), len(file_config_proto_rawDesc)))
	})
	return file_config_proto_rawDescData
}

var file_config_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_config_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_config_proto_goTypes = []any{
	(ChangeType)(0),             // 0: config.ChangeType
	(SourceType)(0),             // 1: config.SourceType
	(*GetRequest)(nil),          // 2: config.GetRequest
	(*GetResponse)(nil),         // 3: config.GetResponse
	(*SetRequest)(nil),          // 4: config.SetRequest
	(*SetResponse)(nil),         // 5: config.SetResponse
	(*HasRequest)(nil),          // 6: config.HasRequest
	(*HasResponse)(nil),         // 7: config.HasResponse
	(*WatchRequest)(nil),        // 8: config.WatchRequest
	(*WatchResponse)(nil),       // 9: config.WatchResponse
	(*AllSettingsRequest)(nil),  // 10: config.AllSettingsRequest
	(*AllSettingsResponse)(nil), // 11: config.AllSettingsResponse
	(*AllKeysRequest)(nil),      // 12: config.AllKeysRequest
	(*AllKeysResponse)(nil),     // 13: config.AllKeysResponse
	(*ConfigSource)(nil),        // 14: config.ConfigSource
	nil,                         // 15: config.AllSettingsResponse.SettingsEntry
}
var file_config_proto_depIdxs = []int32{
	0,  // 0: config.WatchResponse.change_type:type_name -> config.ChangeType
	15, // 1: config.AllSettingsResponse.settings:type_name -> config.AllSettingsResponse.SettingsEntry
	1,  // 2: config.ConfigSource.type:type_name -> config.SourceType
	2,  // 3: config.ConfigService.Get:input_type -> config.GetRequest
	4,  // 4: config.ConfigService.Set:input_type -> config.SetRequest
	6,  // 5: config.ConfigService.Has:input_type -> config.HasRequest
	8,  // 6: config.ConfigService.Watch:input_type -> config.WatchRequest
	10, // 7: config.ConfigService.AllSettings:input_type -> config.AllSettingsRequest
	12, // 8: config.ConfigService.AllKeys:input_type -> config.AllKeysRequest
	3,  // 9: config.ConfigService.Get:output_type -> config.GetResponse
	5,  // 10: config.ConfigService.Set:output_type -> config.SetResponse
	7,  // 11: config.ConfigService.Has:output_type -> config.HasResponse
	9,  // 12: config.ConfigService.Watch:output_type -> config.WatchResponse
	11, // 13: config.ConfigService.AllSettings:output_type -> config.AllSettingsResponse
	13, // 14: config.ConfigService.AllKeys:output_type -> config.AllKeysResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_config_proto_init() }
func file_config_proto_init() {
	if File_config_proto != nil {
		return
	}
	file_config_proto_msgTypes[1].OneofWrappers = []any{
		(*GetResponse_BoolValue)(nil),
		(*GetResponse_IntValue)(nil),
		(*GetResponse_UintValue)(nil),
		(*GetResponse_FloatValue)(nil),
		(*GetResponse_StringValue)(nil),
		(*GetResponse_BytesValue)(nil),
		(*GetResponse_DurationValue)(nil),
		(*GetResponse_TimeValue)(nil),
	}
	file_config_proto_msgTypes[2].OneofWrappers = []any{
		(*SetRequest_BoolValue)(nil),
		(*SetRequest_IntValue)(nil),
		(*SetRequest_UintValue)(nil),
		(*SetRequest_FloatValue)(nil),
		(*SetRequest_StringValue)(nil),
		(*SetRequest_BytesValue)(nil),
		(*SetRequest_DurationValue)(nil),
		(*SetRequest_TimeValue)(nil),
	}
	file_config_proto_msgTypes[7].OneofWrappers = []any{
		(*WatchResponse_BoolValue)(nil),
		(*WatchResponse_IntValue)(nil),
		(*WatchResponse_UintValue)(nil),
		(*WatchResponse_FloatValue)(nil),
		(*WatchResponse_StringValue)(nil),
		(*WatchResponse_BytesValue)(nil),
		(*WatchResponse_DurationValue)(nil),
		(*WatchResponse_TimeValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_proto_rawDesc), len(file_config_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_config_proto_goTypes,
		DependencyIndexes: file_config_proto_depIdxs,
		EnumInfos:         file_config_proto_enumTypes,
		MessageInfos:      file_config_proto_msgTypes,
	}.Build()
	File_config_proto = out.File
	file_config_proto_goTypes = nil
	file_config_proto_depIdxs = nil
}
