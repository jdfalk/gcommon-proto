// file: pkg/config/proto/messages/config_secret.proto
// version: 1.0.0
// guid: 0a1b2c3d-4e5f-6a7b-8c9d-0e1f2a3b4c5d

edition = "2023";

package gcommon.v1.config;

import "google/protobuf/timestamp.proto";

import "pkg/common/proto/messages/error.proto";

option go_package = "../../../../pkg/config/proto;configpb";

// ConfigSecret represents a secret configuration value
message ConfigSecret {
  // Unique identifier for the secret
  string secret_id = 1;

  // Configuration key this secret applies to
  string config_key = 2;

  // Secret name/label
  string name = 3;

  // Secret description
  string description = 4;

  // Secret type
  SecretType type = 5;

  // Secret category
  string category = 6;

  // Environment this secret applies to
  string environment = 7;

  // Service this secret applies to
  string service = 8;

  // Component this secret applies to
  string component = 9;

  // Encrypted secret value
  string encrypted_value = 10;

  // Encryption algorithm used
  string encryption_algorithm = 11;

  // Encryption key ID
  string encryption_key_id = 12;

  // Encryption key version
  string encryption_key_version = 13;

  // Secret version
  string version = 14;

  // Whether the secret is active
  bool active = 15;

  // Secret expiration time
  google.protobuf.Timestamp expires_at = 16;

  // Secret rotation settings
  RotationSettings rotation = 17;

  // Secret access control
  AccessControl access_control = 18;

  // Secret audit settings
  SecretAuditSettings audit_settings = 19;

  // Secret backup settings
  SecretBackupSettings backup_settings = 20;

  // Secret monitoring settings
  MonitoringSettings monitoring_settings = 21;

  // Secret compliance settings
  ComplianceSettings compliance_settings = 22;

  // Secret metadata
  map<string, string> metadata = 23;

  // Secret tags
  repeated string tags = 24;

  // Creation timestamp
  google.protobuf.Timestamp created_at = 25;

  // Last update timestamp
  google.protobuf.Timestamp updated_at = 26;

  // Last access timestamp
  google.protobuf.Timestamp last_accessed_at = 27;

  // User who created the secret
  string created_by = 28;

  // User who last updated the secret
  string updated_by = 29;

  // User who last accessed the secret
  string last_accessed_by = 30;

  // Secret status
  SecretStatus status = 31;

  // Error information if status is ERROR
  gcommon.v1.common.Error error = 32;

  // Secret validation results
  repeated SecretValidationResult validation_results = 33;

  // Secret usage statistics
  UsageStatistics usage_statistics = 34;
}

// SecretType represents the type of secret
enum SecretType {
  SECRET_TYPE_UNSPECIFIED = 0;
  SECRET_TYPE_PASSWORD = 1;
  SECRET_TYPE_API_KEY = 2;
  SECRET_TYPE_TOKEN = 3;
  SECRET_TYPE_CERTIFICATE = 4;
  SECRET_TYPE_PRIVATE_KEY = 5;
  SECRET_TYPE_PUBLIC_KEY = 6;
  SECRET_TYPE_OAUTH_CLIENT_SECRET = 7;
  SECRET_TYPE_DATABASE_PASSWORD = 8;
  SECRET_TYPE_CONNECTION_STRING = 9;
  SECRET_TYPE_ENCRYPTION_KEY = 10;
  SECRET_TYPE_SIGNING_KEY = 11;
  SECRET_TYPE_SSH_KEY = 12;
  SECRET_TYPE_TLS_CERTIFICATE = 13;
  SECRET_TYPE_JWT_SECRET = 14;
  SECRET_TYPE_WEBHOOK_SECRET = 15;
  SECRET_TYPE_CUSTOM = 16;
}

// RotationSettings represents secret rotation settings
message RotationSettings {
  // Whether rotation is enabled
  bool enabled = 1;

  // Rotation frequency
  RotationFrequency frequency = 2;

  // Rotation schedule (cron expression)
  string schedule = 3;

  // Grace period before old secret expires
  int32 grace_period_days = 4;

  // Whether to automatically rotate
  bool auto_rotate = 5;

  // Rotation notification settings
  repeated string notification_recipients = 6;

  // Rotation workflow
  string workflow = 7;

  // Last rotation timestamp
  google.protobuf.Timestamp last_rotated_at = 8;

  // Next rotation timestamp
  google.protobuf.Timestamp next_rotation_at = 9;

  // Rotation history
  repeated RotationEvent rotation_history = 10;
}

// RotationFrequency represents secret rotation frequency
enum RotationFrequency {
  ROTATION_FREQUENCY_UNSPECIFIED = 0;
  ROTATION_FREQUENCY_MANUAL = 1;
  ROTATION_FREQUENCY_DAILY = 2;
  ROTATION_FREQUENCY_WEEKLY = 3;
  ROTATION_FREQUENCY_MONTHLY = 4;
  ROTATION_FREQUENCY_QUARTERLY = 5;
  ROTATION_FREQUENCY_YEARLY = 6;
  ROTATION_FREQUENCY_ON_EXPIRY = 7;
}

// RotationEvent represents a secret rotation event
message RotationEvent {
  // Rotation timestamp
  google.protobuf.Timestamp timestamp = 1;

  // User who initiated the rotation
  string initiated_by = 2;

  // Rotation reason
  string reason = 3;

  // Rotation method
  string method = 4;

  // Rotation success
  bool success = 5;

  // Rotation error
  string error = 6;

  // Old secret version
  string old_version = 7;

  // New secret version
  string new_version = 8;

  // Rotation metadata
  map<string, string> metadata = 9;
}

// AccessControl represents access control settings for secrets
message AccessControl {
  // Access policy
  string policy = 1;

  // Allowed users
  repeated string allowed_users = 2;

  // Allowed roles
  repeated string allowed_roles = 3;

  // Allowed services
  repeated string allowed_services = 4;

  // Allowed environments
  repeated string allowed_environments = 5;

  // Access restrictions
  repeated AccessRestriction restrictions = 6;

  // Maximum access count
  int32 max_access_count = 7;

  // Access rate limits
  RateLimits rate_limits = 8;

  // Access approval required
  bool approval_required = 9;

  // Access audit enabled
  bool audit_enabled = 10;
}

// AccessRestriction represents an access restriction
message AccessRestriction {
  // Restriction type
  RestrictionType type = 1;

  // Restriction value
  string value = 2;

  // Restriction operator
  string operator = 3;

  // Restriction reason
  string reason = 4;
}

// RestrictionType represents the type of access restriction
enum RestrictionType {
  RESTRICTION_TYPE_UNSPECIFIED = 0;
  RESTRICTION_TYPE_IP_ADDRESS = 1;
  RESTRICTION_TYPE_TIME_RANGE = 2;
  RESTRICTION_TYPE_LOCATION = 3;
  RESTRICTION_TYPE_USER_AGENT = 4;
  RESTRICTION_TYPE_CUSTOM = 5;
}

// RateLimits represents rate limiting settings
message RateLimits {
  // Requests per minute
  int32 requests_per_minute = 1;

  // Requests per hour
  int32 requests_per_hour = 2;

  // Requests per day
  int32 requests_per_day = 3;

  // Burst allowance
  int32 burst_allowance = 4;

  // Rate limit window in seconds
  int32 window_seconds = 5;
}

// SecretAuditSettings represents audit settings for secrets
message SecretAuditSettings {
  // Whether audit logging is enabled
  bool enabled = 1;

  // Audit log level
  SecretAuditLevel level = 2;

  // Audit log retention period in days
  int32 retention_days = 3;

  // Whether to log access events
  bool log_access = 4;

  // Whether to log rotation events
  bool log_rotation = 5;

  // Whether to log modification events
  bool log_modification = 6;

  // External audit destinations
  repeated string destinations = 7;

  // Audit log format
  string format = 8;

  // Additional audit metadata
  map<string, string> metadata = 9;
}

// SecretAuditLevel represents the level of secret audit logging
enum SecretAuditLevel {
  SECRET_AUDIT_LEVEL_UNSPECIFIED = 0;
  SECRET_AUDIT_LEVEL_NONE = 1;
  SECRET_AUDIT_LEVEL_MINIMAL = 2;
  SECRET_AUDIT_LEVEL_STANDARD = 3;
  SECRET_AUDIT_LEVEL_DETAILED = 4;
  SECRET_AUDIT_LEVEL_VERBOSE = 5;
}

// SecretBackupSettings represents backup settings for secrets
message SecretBackupSettings {
  // Whether backup is enabled
  bool enabled = 1;

  // Backup frequency
  SecretBackupFrequency frequency = 2;

  // Backup retention period in days
  int32 retention_days = 3;

  // Backup storage location
  string storage_location = 4;

  // Backup encryption
  bool encrypted = 5;

  // Backup compression
  bool compressed = 6;

  // Backup metadata
  map<string, string> metadata = 7;

  // Last backup timestamp
  google.protobuf.Timestamp last_backup_at = 8;
}

// SecretBackupFrequency represents backup frequency for secrets
enum SecretBackupFrequency {
  SECRET_BACKUP_FREQUENCY_UNSPECIFIED = 0;
  SECRET_BACKUP_FREQUENCY_MANUAL = 1;
  SECRET_BACKUP_FREQUENCY_HOURLY = 2;
  SECRET_BACKUP_FREQUENCY_DAILY = 3;
  SECRET_BACKUP_FREQUENCY_WEEKLY = 4;
  SECRET_BACKUP_FREQUENCY_MONTHLY = 5;
  SECRET_BACKUP_FREQUENCY_ON_CHANGE = 6;
}

// MonitoringSettings represents monitoring settings for secrets
message MonitoringSettings {
  // Whether monitoring is enabled
  bool enabled = 1;

  // Monitoring alerts
  repeated MonitoringAlert alerts = 2;

  // Monitoring metrics
  repeated string metrics = 3;

  // Monitoring dashboard
  string dashboard = 4;

  // Monitoring retention period in days
  int32 retention_days = 5;
}

// MonitoringAlert represents a monitoring alert
message MonitoringAlert {
  // Alert type
  AlertType type = 1;

  // Alert condition
  string condition = 2;

  // Alert threshold
  string threshold = 3;

  // Alert recipients
  repeated string recipients = 4;

  // Alert severity
  AlertSeverity severity = 5;

  // Alert enabled
  bool enabled = 6;
}

// AlertType represents the type of monitoring alert
enum AlertType {
  ALERT_TYPE_UNSPECIFIED = 0;
  ALERT_TYPE_EXPIRATION = 1;
  ALERT_TYPE_ACCESS_ANOMALY = 2;
  ALERT_TYPE_FAILED_ACCESS = 3;
  ALERT_TYPE_ROTATION_FAILURE = 4;
  ALERT_TYPE_BACKUP_FAILURE = 5;
  ALERT_TYPE_COMPLIANCE_VIOLATION = 6;
  ALERT_TYPE_SECURITY_INCIDENT = 7;
}

// AlertSeverity represents the severity of an alert
enum AlertSeverity {
  ALERT_SEVERITY_UNSPECIFIED = 0;
  ALERT_SEVERITY_LOW = 1;
  ALERT_SEVERITY_MEDIUM = 2;
  ALERT_SEVERITY_HIGH = 3;
  ALERT_SEVERITY_CRITICAL = 4;
}

// ComplianceSettings represents compliance settings for secrets
message ComplianceSettings {
  // Compliance frameworks
  repeated string frameworks = 1;

  // Compliance policies
  repeated string policies = 2;

  // Compliance audits
  repeated ComplianceAudit audits = 3;

  // Compliance reporting
  ComplianceReporting reporting = 4;

  // Compliance validation
  bool validation_enabled = 5;

  // Compliance metadata
  map<string, string> metadata = 6;
}

// ComplianceAudit represents a compliance audit
message ComplianceAudit {
  // Audit name
  string name = 1;

  // Audit framework
  string framework = 2;

  // Audit frequency
  string frequency = 3;

  // Audit enabled
  bool enabled = 4;

  // Last audit timestamp
  google.protobuf.Timestamp last_audit_at = 5;

  // Next audit timestamp
  google.protobuf.Timestamp next_audit_at = 6;
}

// ComplianceReporting represents compliance reporting settings
message ComplianceReporting {
  // Reporting enabled
  bool enabled = 1;

  // Reporting frequency
  string frequency = 2;

  // Reporting recipients
  repeated string recipients = 3;

  // Reporting format
  string format = 4;

  // Reporting template
  string template = 5;
}

// SecretStatus represents the status of a secret
enum SecretStatus {
  SECRET_STATUS_UNSPECIFIED = 0;
  SECRET_STATUS_ACTIVE = 1;
  SECRET_STATUS_INACTIVE = 2;
  SECRET_STATUS_EXPIRED = 3;
  SECRET_STATUS_ROTATED = 4;
  SECRET_STATUS_COMPROMISED = 5;
  SECRET_STATUS_DELETED = 6;
  SECRET_STATUS_ERROR = 7;
}

// SecretValidationResult represents validation results for a secret
message SecretValidationResult {
  // Validation name
  string name = 1;

  // Validation result
  SecretValidationResultType result = 2;

  // Validation message
  string message = 3;

  // Validation severity
  SecretValidationSeverity severity = 4;

  // Validation timestamp
  google.protobuf.Timestamp timestamp = 5;

  // Validation details
  map<string, string> details = 6;
}

// SecretValidationResultType represents the result of secret validation
enum SecretValidationResultType {
  SECRET_VALIDATION_RESULT_TYPE_UNSPECIFIED = 0;
  SECRET_VALIDATION_RESULT_TYPE_PASS = 1;
  SECRET_VALIDATION_RESULT_TYPE_FAIL = 2;
  SECRET_VALIDATION_RESULT_TYPE_WARNING = 3;
  SECRET_VALIDATION_RESULT_TYPE_SKIP = 4;
}

// SecretValidationSeverity represents the severity of secret validation
enum SecretValidationSeverity {
  SECRET_VALIDATION_SEVERITY_UNSPECIFIED = 0;
  SECRET_VALIDATION_SEVERITY_INFO = 1;
  SECRET_VALIDATION_SEVERITY_WARNING = 2;
  SECRET_VALIDATION_SEVERITY_ERROR = 3;
  SECRET_VALIDATION_SEVERITY_CRITICAL = 4;
}

// UsageStatistics represents usage statistics for a secret
message UsageStatistics {
  // Total access count
  int64 total_access_count = 1;

  // Access count in last 24 hours
  int64 access_count_24h = 2;

  // Access count in last 7 days
  int64 access_count_7d = 3;

  // Access count in last 30 days
  int64 access_count_30d = 4;

  // Unique users count
  int64 unique_users_count = 5;

  // Unique services count
  int64 unique_services_count = 6;

  // Average access frequency per day
  double avg_access_frequency = 7;

  // Peak access timestamp
  google.protobuf.Timestamp peak_access_at = 8;

  // Peak access count
  int64 peak_access_count = 9;

  // Usage trends
  repeated UsageTrend trends = 10;
}

// UsageTrend represents a usage trend
message UsageTrend {
  // Trend period
  string period = 1;

  // Trend value
  double value = 2;

  // Trend change
  double change = 3;

  // Trend timestamp
  google.protobuf.Timestamp timestamp = 4;
}
