// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/config/proto/messages/config_metadata.proto

package configpb

import (
	pb "../../../../pkg/common/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ConfigDataType represents the data type of a configuration value
type ConfigDataType int32

const (
	ConfigDataType_CONFIG_DATA_TYPE_UNSPECIFIED ConfigDataType = 0
	ConfigDataType_CONFIG_DATA_TYPE_STRING      ConfigDataType = 1
	ConfigDataType_CONFIG_DATA_TYPE_INTEGER     ConfigDataType = 2
	ConfigDataType_CONFIG_DATA_TYPE_FLOAT       ConfigDataType = 3
	ConfigDataType_CONFIG_DATA_TYPE_BOOLEAN     ConfigDataType = 4
	ConfigDataType_CONFIG_DATA_TYPE_ENUM        ConfigDataType = 5
	ConfigDataType_CONFIG_DATA_TYPE_LIST        ConfigDataType = 6
	ConfigDataType_CONFIG_DATA_TYPE_MAP         ConfigDataType = 7
	ConfigDataType_CONFIG_DATA_TYPE_JSON        ConfigDataType = 8
	ConfigDataType_CONFIG_DATA_TYPE_YAML        ConfigDataType = 9
	ConfigDataType_CONFIG_DATA_TYPE_URL         ConfigDataType = 10
	ConfigDataType_CONFIG_DATA_TYPE_EMAIL       ConfigDataType = 11
	ConfigDataType_CONFIG_DATA_TYPE_PASSWORD    ConfigDataType = 12
	ConfigDataType_CONFIG_DATA_TYPE_CERTIFICATE ConfigDataType = 13
	ConfigDataType_CONFIG_DATA_TYPE_PRIVATE_KEY ConfigDataType = 14
	ConfigDataType_CONFIG_DATA_TYPE_PUBLIC_KEY  ConfigDataType = 15
	ConfigDataType_CONFIG_DATA_TYPE_DURATION    ConfigDataType = 16
	ConfigDataType_CONFIG_DATA_TYPE_TIMESTAMP   ConfigDataType = 17
	ConfigDataType_CONFIG_DATA_TYPE_REGEX       ConfigDataType = 18
	ConfigDataType_CONFIG_DATA_TYPE_IPV4        ConfigDataType = 19
	ConfigDataType_CONFIG_DATA_TYPE_IPV6        ConfigDataType = 20
	ConfigDataType_CONFIG_DATA_TYPE_CIDR        ConfigDataType = 21
	ConfigDataType_CONFIG_DATA_TYPE_PORT        ConfigDataType = 22
	ConfigDataType_CONFIG_DATA_TYPE_UUID        ConfigDataType = 23
	ConfigDataType_CONFIG_DATA_TYPE_BASE64      ConfigDataType = 24
	ConfigDataType_CONFIG_DATA_TYPE_HEX         ConfigDataType = 25
)

// Enum value maps for ConfigDataType.
var (
	ConfigDataType_name = map[int32]string{
		0:  "CONFIG_DATA_TYPE_UNSPECIFIED",
		1:  "CONFIG_DATA_TYPE_STRING",
		2:  "CONFIG_DATA_TYPE_INTEGER",
		3:  "CONFIG_DATA_TYPE_FLOAT",
		4:  "CONFIG_DATA_TYPE_BOOLEAN",
		5:  "CONFIG_DATA_TYPE_ENUM",
		6:  "CONFIG_DATA_TYPE_LIST",
		7:  "CONFIG_DATA_TYPE_MAP",
		8:  "CONFIG_DATA_TYPE_JSON",
		9:  "CONFIG_DATA_TYPE_YAML",
		10: "CONFIG_DATA_TYPE_URL",
		11: "CONFIG_DATA_TYPE_EMAIL",
		12: "CONFIG_DATA_TYPE_PASSWORD",
		13: "CONFIG_DATA_TYPE_CERTIFICATE",
		14: "CONFIG_DATA_TYPE_PRIVATE_KEY",
		15: "CONFIG_DATA_TYPE_PUBLIC_KEY",
		16: "CONFIG_DATA_TYPE_DURATION",
		17: "CONFIG_DATA_TYPE_TIMESTAMP",
		18: "CONFIG_DATA_TYPE_REGEX",
		19: "CONFIG_DATA_TYPE_IPV4",
		20: "CONFIG_DATA_TYPE_IPV6",
		21: "CONFIG_DATA_TYPE_CIDR",
		22: "CONFIG_DATA_TYPE_PORT",
		23: "CONFIG_DATA_TYPE_UUID",
		24: "CONFIG_DATA_TYPE_BASE64",
		25: "CONFIG_DATA_TYPE_HEX",
	}
	ConfigDataType_value = map[string]int32{
		"CONFIG_DATA_TYPE_UNSPECIFIED": 0,
		"CONFIG_DATA_TYPE_STRING":      1,
		"CONFIG_DATA_TYPE_INTEGER":     2,
		"CONFIG_DATA_TYPE_FLOAT":       3,
		"CONFIG_DATA_TYPE_BOOLEAN":     4,
		"CONFIG_DATA_TYPE_ENUM":        5,
		"CONFIG_DATA_TYPE_LIST":        6,
		"CONFIG_DATA_TYPE_MAP":         7,
		"CONFIG_DATA_TYPE_JSON":        8,
		"CONFIG_DATA_TYPE_YAML":        9,
		"CONFIG_DATA_TYPE_URL":         10,
		"CONFIG_DATA_TYPE_EMAIL":       11,
		"CONFIG_DATA_TYPE_PASSWORD":    12,
		"CONFIG_DATA_TYPE_CERTIFICATE": 13,
		"CONFIG_DATA_TYPE_PRIVATE_KEY": 14,
		"CONFIG_DATA_TYPE_PUBLIC_KEY":  15,
		"CONFIG_DATA_TYPE_DURATION":    16,
		"CONFIG_DATA_TYPE_TIMESTAMP":   17,
		"CONFIG_DATA_TYPE_REGEX":       18,
		"CONFIG_DATA_TYPE_IPV4":        19,
		"CONFIG_DATA_TYPE_IPV6":        20,
		"CONFIG_DATA_TYPE_CIDR":        21,
		"CONFIG_DATA_TYPE_PORT":        22,
		"CONFIG_DATA_TYPE_UUID":        23,
		"CONFIG_DATA_TYPE_BASE64":      24,
		"CONFIG_DATA_TYPE_HEX":         25,
	}
)

func (x ConfigDataType) Enum() *ConfigDataType {
	p := new(ConfigDataType)
	*p = x
	return p
}

func (x ConfigDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_metadata_proto_enumTypes[0].Descriptor()
}

func (ConfigDataType) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_metadata_proto_enumTypes[0]
}

func (x ConfigDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigDataType.Descriptor instead.
func (ConfigDataType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{0}
}

// DeprecationLevel represents the level of deprecation
type DeprecationLevel int32

const (
	DeprecationLevel_DEPRECATION_LEVEL_UNSPECIFIED DeprecationLevel = 0
	DeprecationLevel_DEPRECATION_LEVEL_SOFT        DeprecationLevel = 1 // Soft deprecation (warning)
	DeprecationLevel_DEPRECATION_LEVEL_HARD        DeprecationLevel = 2 // Hard deprecation (error)
	DeprecationLevel_DEPRECATION_LEVEL_REMOVAL     DeprecationLevel = 3 // Scheduled for removal
)

// Enum value maps for DeprecationLevel.
var (
	DeprecationLevel_name = map[int32]string{
		0: "DEPRECATION_LEVEL_UNSPECIFIED",
		1: "DEPRECATION_LEVEL_SOFT",
		2: "DEPRECATION_LEVEL_HARD",
		3: "DEPRECATION_LEVEL_REMOVAL",
	}
	DeprecationLevel_value = map[string]int32{
		"DEPRECATION_LEVEL_UNSPECIFIED": 0,
		"DEPRECATION_LEVEL_SOFT":        1,
		"DEPRECATION_LEVEL_HARD":        2,
		"DEPRECATION_LEVEL_REMOVAL":     3,
	}
)

func (x DeprecationLevel) Enum() *DeprecationLevel {
	p := new(DeprecationLevel)
	*p = x
	return p
}

func (x DeprecationLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeprecationLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_metadata_proto_enumTypes[1].Descriptor()
}

func (DeprecationLevel) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_metadata_proto_enumTypes[1]
}

func (x DeprecationLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeprecationLevel.Descriptor instead.
func (DeprecationLevel) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{1}
}

// AuditLevel represents the level of audit logging
type AuditLevel int32

const (
	AuditLevel_AUDIT_LEVEL_UNSPECIFIED AuditLevel = 0
	AuditLevel_AUDIT_LEVEL_NONE        AuditLevel = 1
	AuditLevel_AUDIT_LEVEL_MINIMAL     AuditLevel = 2
	AuditLevel_AUDIT_LEVEL_STANDARD    AuditLevel = 3
	AuditLevel_AUDIT_LEVEL_DETAILED    AuditLevel = 4
	AuditLevel_AUDIT_LEVEL_VERBOSE     AuditLevel = 5
)

// Enum value maps for AuditLevel.
var (
	AuditLevel_name = map[int32]string{
		0: "AUDIT_LEVEL_UNSPECIFIED",
		1: "AUDIT_LEVEL_NONE",
		2: "AUDIT_LEVEL_MINIMAL",
		3: "AUDIT_LEVEL_STANDARD",
		4: "AUDIT_LEVEL_DETAILED",
		5: "AUDIT_LEVEL_VERBOSE",
	}
	AuditLevel_value = map[string]int32{
		"AUDIT_LEVEL_UNSPECIFIED": 0,
		"AUDIT_LEVEL_NONE":        1,
		"AUDIT_LEVEL_MINIMAL":     2,
		"AUDIT_LEVEL_STANDARD":    3,
		"AUDIT_LEVEL_DETAILED":    4,
		"AUDIT_LEVEL_VERBOSE":     5,
	}
)

func (x AuditLevel) Enum() *AuditLevel {
	p := new(AuditLevel)
	*p = x
	return p
}

func (x AuditLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_metadata_proto_enumTypes[2].Descriptor()
}

func (AuditLevel) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_metadata_proto_enumTypes[2]
}

func (x AuditLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditLevel.Descriptor instead.
func (AuditLevel) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{2}
}

// ChannelType represents the type of notification channel
type ChannelType int32

const (
	ChannelType_CHANNEL_TYPE_UNSPECIFIED ChannelType = 0
	ChannelType_CHANNEL_TYPE_EMAIL       ChannelType = 1
	ChannelType_CHANNEL_TYPE_SLACK       ChannelType = 2
	ChannelType_CHANNEL_TYPE_WEBHOOK     ChannelType = 3
	ChannelType_CHANNEL_TYPE_SMS         ChannelType = 4
	ChannelType_CHANNEL_TYPE_PAGERDUTY   ChannelType = 5
	ChannelType_CHANNEL_TYPE_TEAMS       ChannelType = 6
	ChannelType_CHANNEL_TYPE_DISCORD     ChannelType = 7
	ChannelType_CHANNEL_TYPE_JIRA        ChannelType = 8
)

// Enum value maps for ChannelType.
var (
	ChannelType_name = map[int32]string{
		0: "CHANNEL_TYPE_UNSPECIFIED",
		1: "CHANNEL_TYPE_EMAIL",
		2: "CHANNEL_TYPE_SLACK",
		3: "CHANNEL_TYPE_WEBHOOK",
		4: "CHANNEL_TYPE_SMS",
		5: "CHANNEL_TYPE_PAGERDUTY",
		6: "CHANNEL_TYPE_TEAMS",
		7: "CHANNEL_TYPE_DISCORD",
		8: "CHANNEL_TYPE_JIRA",
	}
	ChannelType_value = map[string]int32{
		"CHANNEL_TYPE_UNSPECIFIED": 0,
		"CHANNEL_TYPE_EMAIL":       1,
		"CHANNEL_TYPE_SLACK":       2,
		"CHANNEL_TYPE_WEBHOOK":     3,
		"CHANNEL_TYPE_SMS":         4,
		"CHANNEL_TYPE_PAGERDUTY":   5,
		"CHANNEL_TYPE_TEAMS":       6,
		"CHANNEL_TYPE_DISCORD":     7,
		"CHANNEL_TYPE_JIRA":        8,
	}
)

func (x ChannelType) Enum() *ChannelType {
	p := new(ChannelType)
	*p = x
	return p
}

func (x ChannelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_metadata_proto_enumTypes[3].Descriptor()
}

func (ChannelType) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_metadata_proto_enumTypes[3]
}

func (x ChannelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelType.Descriptor instead.
func (ChannelType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{3}
}

// NotificationTrigger represents a notification trigger
type NotificationTrigger int32

const (
	NotificationTrigger_NOTIFICATION_TRIGGER_UNSPECIFIED NotificationTrigger = 0
	NotificationTrigger_NOTIFICATION_TRIGGER_CHANGE      NotificationTrigger = 1
	NotificationTrigger_NOTIFICATION_TRIGGER_DELETE      NotificationTrigger = 2
	NotificationTrigger_NOTIFICATION_TRIGGER_ERROR       NotificationTrigger = 3
	NotificationTrigger_NOTIFICATION_TRIGGER_APPROVAL    NotificationTrigger = 4
	NotificationTrigger_NOTIFICATION_TRIGGER_DEPLOYMENT  NotificationTrigger = 5
	NotificationTrigger_NOTIFICATION_TRIGGER_ROLLBACK    NotificationTrigger = 6
	NotificationTrigger_NOTIFICATION_TRIGGER_SCHEDULE    NotificationTrigger = 7
)

// Enum value maps for NotificationTrigger.
var (
	NotificationTrigger_name = map[int32]string{
		0: "NOTIFICATION_TRIGGER_UNSPECIFIED",
		1: "NOTIFICATION_TRIGGER_CHANGE",
		2: "NOTIFICATION_TRIGGER_DELETE",
		3: "NOTIFICATION_TRIGGER_ERROR",
		4: "NOTIFICATION_TRIGGER_APPROVAL",
		5: "NOTIFICATION_TRIGGER_DEPLOYMENT",
		6: "NOTIFICATION_TRIGGER_ROLLBACK",
		7: "NOTIFICATION_TRIGGER_SCHEDULE",
	}
	NotificationTrigger_value = map[string]int32{
		"NOTIFICATION_TRIGGER_UNSPECIFIED": 0,
		"NOTIFICATION_TRIGGER_CHANGE":      1,
		"NOTIFICATION_TRIGGER_DELETE":      2,
		"NOTIFICATION_TRIGGER_ERROR":       3,
		"NOTIFICATION_TRIGGER_APPROVAL":    4,
		"NOTIFICATION_TRIGGER_DEPLOYMENT":  5,
		"NOTIFICATION_TRIGGER_ROLLBACK":    6,
		"NOTIFICATION_TRIGGER_SCHEDULE":    7,
	}
)

func (x NotificationTrigger) Enum() *NotificationTrigger {
	p := new(NotificationTrigger)
	*p = x
	return p
}

func (x NotificationTrigger) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationTrigger) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_metadata_proto_enumTypes[4].Descriptor()
}

func (NotificationTrigger) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_metadata_proto_enumTypes[4]
}

func (x NotificationTrigger) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationTrigger.Descriptor instead.
func (NotificationTrigger) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{4}
}

// BackupFrequency represents backup frequency
type BackupFrequency int32

const (
	BackupFrequency_BACKUP_FREQUENCY_UNSPECIFIED BackupFrequency = 0
	BackupFrequency_BACKUP_FREQUENCY_MANUAL      BackupFrequency = 1
	BackupFrequency_BACKUP_FREQUENCY_HOURLY      BackupFrequency = 2
	BackupFrequency_BACKUP_FREQUENCY_DAILY       BackupFrequency = 3
	BackupFrequency_BACKUP_FREQUENCY_WEEKLY      BackupFrequency = 4
	BackupFrequency_BACKUP_FREQUENCY_MONTHLY     BackupFrequency = 5
	BackupFrequency_BACKUP_FREQUENCY_ON_CHANGE   BackupFrequency = 6
)

// Enum value maps for BackupFrequency.
var (
	BackupFrequency_name = map[int32]string{
		0: "BACKUP_FREQUENCY_UNSPECIFIED",
		1: "BACKUP_FREQUENCY_MANUAL",
		2: "BACKUP_FREQUENCY_HOURLY",
		3: "BACKUP_FREQUENCY_DAILY",
		4: "BACKUP_FREQUENCY_WEEKLY",
		5: "BACKUP_FREQUENCY_MONTHLY",
		6: "BACKUP_FREQUENCY_ON_CHANGE",
	}
	BackupFrequency_value = map[string]int32{
		"BACKUP_FREQUENCY_UNSPECIFIED": 0,
		"BACKUP_FREQUENCY_MANUAL":      1,
		"BACKUP_FREQUENCY_HOURLY":      2,
		"BACKUP_FREQUENCY_DAILY":       3,
		"BACKUP_FREQUENCY_WEEKLY":      4,
		"BACKUP_FREQUENCY_MONTHLY":     5,
		"BACKUP_FREQUENCY_ON_CHANGE":   6,
	}
)

func (x BackupFrequency) Enum() *BackupFrequency {
	p := new(BackupFrequency)
	*p = x
	return p
}

func (x BackupFrequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackupFrequency) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_metadata_proto_enumTypes[5].Descriptor()
}

func (BackupFrequency) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_metadata_proto_enumTypes[5]
}

func (x BackupFrequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackupFrequency.Descriptor instead.
func (BackupFrequency) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{5}
}

// MetadataStatus represents the status of metadata
type MetadataStatus int32

const (
	MetadataStatus_METADATA_STATUS_UNSPECIFIED MetadataStatus = 0
	MetadataStatus_METADATA_STATUS_ACTIVE      MetadataStatus = 1
	MetadataStatus_METADATA_STATUS_INACTIVE    MetadataStatus = 2
	MetadataStatus_METADATA_STATUS_DRAFT       MetadataStatus = 3
	MetadataStatus_METADATA_STATUS_DEPRECATED  MetadataStatus = 4
	MetadataStatus_METADATA_STATUS_DELETED     MetadataStatus = 5
	MetadataStatus_METADATA_STATUS_ERROR       MetadataStatus = 6
)

// Enum value maps for MetadataStatus.
var (
	MetadataStatus_name = map[int32]string{
		0: "METADATA_STATUS_UNSPECIFIED",
		1: "METADATA_STATUS_ACTIVE",
		2: "METADATA_STATUS_INACTIVE",
		3: "METADATA_STATUS_DRAFT",
		4: "METADATA_STATUS_DEPRECATED",
		5: "METADATA_STATUS_DELETED",
		6: "METADATA_STATUS_ERROR",
	}
	MetadataStatus_value = map[string]int32{
		"METADATA_STATUS_UNSPECIFIED": 0,
		"METADATA_STATUS_ACTIVE":      1,
		"METADATA_STATUS_INACTIVE":    2,
		"METADATA_STATUS_DRAFT":       3,
		"METADATA_STATUS_DEPRECATED":  4,
		"METADATA_STATUS_DELETED":     5,
		"METADATA_STATUS_ERROR":       6,
	}
)

func (x MetadataStatus) Enum() *MetadataStatus {
	p := new(MetadataStatus)
	*p = x
	return p
}

func (x MetadataStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetadataStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_metadata_proto_enumTypes[6].Descriptor()
}

func (MetadataStatus) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_metadata_proto_enumTypes[6]
}

func (x MetadataStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetadataStatus.Descriptor instead.
func (MetadataStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{6}
}

// ConfigMetadata represents metadata about configuration items
type ConfigMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the metadata
	MetadataId *string `protobuf:"bytes,1,opt,name=metadata_id,json=metadataId" json:"metadata_id,omitempty"`
	// Configuration key this metadata applies to
	ConfigKey *string `protobuf:"bytes,2,opt,name=config_key,json=configKey" json:"config_key,omitempty"`
	// Display name for the configuration
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// Description of the configuration
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// Category/group for the configuration
	Category *string `protobuf:"bytes,5,opt,name=category" json:"category,omitempty"`
	// Subcategory for the configuration
	Subcategory *string `protobuf:"bytes,6,opt,name=subcategory" json:"subcategory,omitempty"`
	// Tags for categorization and search
	Tags []string `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	// Data type of the configuration value
	DataType *ConfigDataType `protobuf:"varint,8,opt,name=data_type,json=dataType,enum=gcommon.v1.config.ConfigDataType" json:"data_type,omitempty"`
	// Whether this configuration is required
	Required *bool `protobuf:"varint,9,opt,name=required" json:"required,omitempty"`
	// Whether this configuration is sensitive
	Sensitive *bool `protobuf:"varint,10,opt,name=sensitive" json:"sensitive,omitempty"`
	// Whether this configuration is encrypted
	Encrypted *bool `protobuf:"varint,11,opt,name=encrypted" json:"encrypted,omitempty"`
	// Whether this configuration is read-only
	ReadOnly *bool `protobuf:"varint,12,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	// Default value for the configuration
	DefaultValue *string `protobuf:"bytes,13,opt,name=default_value,json=defaultValue" json:"default_value,omitempty"`
	// Allowed values (for enumeration types)
	AllowedValues []string `protobuf:"bytes,14,rep,name=allowed_values,json=allowedValues" json:"allowed_values,omitempty"`
	// Minimum value (for numeric types)
	MinValue *string `protobuf:"bytes,15,opt,name=min_value,json=minValue" json:"min_value,omitempty"`
	// Maximum value (for numeric types)
	MaxValue *string `protobuf:"bytes,16,opt,name=max_value,json=maxValue" json:"max_value,omitempty"`
	// Validation pattern (regex for string types)
	ValidationPattern *string `protobuf:"bytes,17,opt,name=validation_pattern,json=validationPattern" json:"validation_pattern,omitempty"`
	// Validation message for invalid values
	ValidationMessage *string `protobuf:"bytes,18,opt,name=validation_message,json=validationMessage" json:"validation_message,omitempty"`
	// Format hint for the value
	FormatHint *string `protobuf:"bytes,19,opt,name=format_hint,json=formatHint" json:"format_hint,omitempty"`
	// Examples of valid values
	Examples []string `protobuf:"bytes,20,rep,name=examples" json:"examples,omitempty"`
	// Documentation URL
	DocumentationUrl *string `protobuf:"bytes,21,opt,name=documentation_url,json=documentationUrl" json:"documentation_url,omitempty"`
	// Source of the configuration
	Source *string `protobuf:"bytes,22,opt,name=source" json:"source,omitempty"`
	// Owner of the configuration
	Owner *string `protobuf:"bytes,23,opt,name=owner" json:"owner,omitempty"`
	// Contact information for the owner
	Contact *string `protobuf:"bytes,24,opt,name=contact" json:"contact,omitempty"`
	// Environment applicability
	Environments []string `protobuf:"bytes,25,rep,name=environments" json:"environments,omitempty"`
	// Service applicability
	Services []string `protobuf:"bytes,26,rep,name=services" json:"services,omitempty"`
	// Component applicability
	Components []string `protobuf:"bytes,27,rep,name=components" json:"components,omitempty"`
	// Deprecation information
	Deprecation *DeprecationInfo `protobuf:"bytes,28,opt,name=deprecation" json:"deprecation,omitempty"`
	// Change approval requirements
	ApprovalRequirement *ApprovalRequirement `protobuf:"bytes,29,opt,name=approval_requirement,json=approvalRequirement" json:"approval_requirement,omitempty"`
	// Audit settings
	AuditSettings *AuditSettings `protobuf:"bytes,30,opt,name=audit_settings,json=auditSettings" json:"audit_settings,omitempty"`
	// Notification settings
	NotificationSettings *NotificationSettings `protobuf:"bytes,31,opt,name=notification_settings,json=notificationSettings" json:"notification_settings,omitempty"`
	// Backup settings
	BackupSettings *BackupSettings `protobuf:"bytes,32,opt,name=backup_settings,json=backupSettings" json:"backup_settings,omitempty"`
	// Versioning settings
	VersioningSettings *VersioningSettings `protobuf:"bytes,33,opt,name=versioning_settings,json=versioningSettings" json:"versioning_settings,omitempty"`
	// Additional metadata
	Metadata map[string]string `protobuf:"bytes,34,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Creation timestamp
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,35,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last update timestamp
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,36,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	// User who created the metadata
	CreatedBy *string `protobuf:"bytes,37,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	// User who last updated the metadata
	UpdatedBy *string `protobuf:"bytes,38,opt,name=updated_by,json=updatedBy" json:"updated_by,omitempty"`
	// Metadata version
	Version *string `protobuf:"bytes,39,opt,name=version" json:"version,omitempty"`
	// Status of the metadata
	Status *MetadataStatus `protobuf:"varint,40,opt,name=status,enum=gcommon.v1.config.MetadataStatus" json:"status,omitempty"`
	// Error information if status is ERROR
	Error         *pb.Error `protobuf:"bytes,41,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigMetadata) Reset() {
	*x = ConfigMetadata{}
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMetadata) ProtoMessage() {}

func (x *ConfigMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMetadata.ProtoReflect.Descriptor instead.
func (*ConfigMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigMetadata) GetMetadataId() string {
	if x != nil && x.MetadataId != nil {
		return *x.MetadataId
	}
	return ""
}

func (x *ConfigMetadata) GetConfigKey() string {
	if x != nil && x.ConfigKey != nil {
		return *x.ConfigKey
	}
	return ""
}

func (x *ConfigMetadata) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *ConfigMetadata) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ConfigMetadata) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *ConfigMetadata) GetSubcategory() string {
	if x != nil && x.Subcategory != nil {
		return *x.Subcategory
	}
	return ""
}

func (x *ConfigMetadata) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ConfigMetadata) GetDataType() ConfigDataType {
	if x != nil && x.DataType != nil {
		return *x.DataType
	}
	return ConfigDataType_CONFIG_DATA_TYPE_UNSPECIFIED
}

func (x *ConfigMetadata) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *ConfigMetadata) GetSensitive() bool {
	if x != nil && x.Sensitive != nil {
		return *x.Sensitive
	}
	return false
}

func (x *ConfigMetadata) GetEncrypted() bool {
	if x != nil && x.Encrypted != nil {
		return *x.Encrypted
	}
	return false
}

func (x *ConfigMetadata) GetReadOnly() bool {
	if x != nil && x.ReadOnly != nil {
		return *x.ReadOnly
	}
	return false
}

func (x *ConfigMetadata) GetDefaultValue() string {
	if x != nil && x.DefaultValue != nil {
		return *x.DefaultValue
	}
	return ""
}

func (x *ConfigMetadata) GetAllowedValues() []string {
	if x != nil {
		return x.AllowedValues
	}
	return nil
}

func (x *ConfigMetadata) GetMinValue() string {
	if x != nil && x.MinValue != nil {
		return *x.MinValue
	}
	return ""
}

func (x *ConfigMetadata) GetMaxValue() string {
	if x != nil && x.MaxValue != nil {
		return *x.MaxValue
	}
	return ""
}

func (x *ConfigMetadata) GetValidationPattern() string {
	if x != nil && x.ValidationPattern != nil {
		return *x.ValidationPattern
	}
	return ""
}

func (x *ConfigMetadata) GetValidationMessage() string {
	if x != nil && x.ValidationMessage != nil {
		return *x.ValidationMessage
	}
	return ""
}

func (x *ConfigMetadata) GetFormatHint() string {
	if x != nil && x.FormatHint != nil {
		return *x.FormatHint
	}
	return ""
}

func (x *ConfigMetadata) GetExamples() []string {
	if x != nil {
		return x.Examples
	}
	return nil
}

func (x *ConfigMetadata) GetDocumentationUrl() string {
	if x != nil && x.DocumentationUrl != nil {
		return *x.DocumentationUrl
	}
	return ""
}

func (x *ConfigMetadata) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *ConfigMetadata) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *ConfigMetadata) GetContact() string {
	if x != nil && x.Contact != nil {
		return *x.Contact
	}
	return ""
}

func (x *ConfigMetadata) GetEnvironments() []string {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *ConfigMetadata) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *ConfigMetadata) GetComponents() []string {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *ConfigMetadata) GetDeprecation() *DeprecationInfo {
	if x != nil {
		return x.Deprecation
	}
	return nil
}

func (x *ConfigMetadata) GetApprovalRequirement() *ApprovalRequirement {
	if x != nil {
		return x.ApprovalRequirement
	}
	return nil
}

func (x *ConfigMetadata) GetAuditSettings() *AuditSettings {
	if x != nil {
		return x.AuditSettings
	}
	return nil
}

func (x *ConfigMetadata) GetNotificationSettings() *NotificationSettings {
	if x != nil {
		return x.NotificationSettings
	}
	return nil
}

func (x *ConfigMetadata) GetBackupSettings() *BackupSettings {
	if x != nil {
		return x.BackupSettings
	}
	return nil
}

func (x *ConfigMetadata) GetVersioningSettings() *VersioningSettings {
	if x != nil {
		return x.VersioningSettings
	}
	return nil
}

func (x *ConfigMetadata) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ConfigMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ConfigMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ConfigMetadata) GetCreatedBy() string {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return ""
}

func (x *ConfigMetadata) GetUpdatedBy() string {
	if x != nil && x.UpdatedBy != nil {
		return *x.UpdatedBy
	}
	return ""
}

func (x *ConfigMetadata) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ConfigMetadata) GetStatus() MetadataStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return MetadataStatus_METADATA_STATUS_UNSPECIFIED
}

func (x *ConfigMetadata) GetError() *pb.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// DeprecationInfo represents deprecation information for a configuration
type DeprecationInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the configuration is deprecated
	Deprecated *bool `protobuf:"varint,1,opt,name=deprecated" json:"deprecated,omitempty"`
	// Deprecation reason
	Reason *string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	// Deprecation date
	DeprecatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=deprecated_at,json=deprecatedAt" json:"deprecated_at,omitempty"`
	// Replacement configuration key
	ReplacementKey *string `protobuf:"bytes,4,opt,name=replacement_key,json=replacementKey" json:"replacement_key,omitempty"`
	// Removal date
	RemovalDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=removal_date,json=removalDate" json:"removal_date,omitempty"`
	// Migration guide
	MigrationGuide *string `protobuf:"bytes,6,opt,name=migration_guide,json=migrationGuide" json:"migration_guide,omitempty"`
	// Deprecation level
	Level         *DeprecationLevel `protobuf:"varint,7,opt,name=level,enum=gcommon.v1.config.DeprecationLevel" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeprecationInfo) Reset() {
	*x = DeprecationInfo{}
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeprecationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeprecationInfo) ProtoMessage() {}

func (x *DeprecationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeprecationInfo.ProtoReflect.Descriptor instead.
func (*DeprecationInfo) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *DeprecationInfo) GetDeprecated() bool {
	if x != nil && x.Deprecated != nil {
		return *x.Deprecated
	}
	return false
}

func (x *DeprecationInfo) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *DeprecationInfo) GetDeprecatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeprecatedAt
	}
	return nil
}

func (x *DeprecationInfo) GetReplacementKey() string {
	if x != nil && x.ReplacementKey != nil {
		return *x.ReplacementKey
	}
	return ""
}

func (x *DeprecationInfo) GetRemovalDate() *timestamppb.Timestamp {
	if x != nil {
		return x.RemovalDate
	}
	return nil
}

func (x *DeprecationInfo) GetMigrationGuide() string {
	if x != nil && x.MigrationGuide != nil {
		return *x.MigrationGuide
	}
	return ""
}

func (x *DeprecationInfo) GetLevel() DeprecationLevel {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return DeprecationLevel_DEPRECATION_LEVEL_UNSPECIFIED
}

// ApprovalRequirement represents approval requirements for configuration changes
type ApprovalRequirement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether approval is required
	Required *bool `protobuf:"varint,1,opt,name=required" json:"required,omitempty"`
	// Number of approvals required
	ApprovalCount *int32 `protobuf:"varint,2,opt,name=approval_count,json=approvalCount" json:"approval_count,omitempty"`
	// Required approver roles
	ApproverRoles []string `protobuf:"bytes,3,rep,name=approver_roles,json=approverRoles" json:"approver_roles,omitempty"`
	// Required approver users
	ApproverUsers []string `protobuf:"bytes,4,rep,name=approver_users,json=approverUsers" json:"approver_users,omitempty"`
	// Approval policy
	Policy *string `protobuf:"bytes,5,opt,name=policy" json:"policy,omitempty"`
	// Approval workflow
	Workflow *string `protobuf:"bytes,6,opt,name=workflow" json:"workflow,omitempty"`
	// Auto-approval conditions
	AutoApprovalConditions []string `protobuf:"bytes,7,rep,name=auto_approval_conditions,json=autoApprovalConditions" json:"auto_approval_conditions,omitempty"`
	// Approval timeout
	ApprovalTimeoutHours *int32 `protobuf:"varint,8,opt,name=approval_timeout_hours,json=approvalTimeoutHours" json:"approval_timeout_hours,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ApprovalRequirement) Reset() {
	*x = ApprovalRequirement{}
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApprovalRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalRequirement) ProtoMessage() {}

func (x *ApprovalRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalRequirement.ProtoReflect.Descriptor instead.
func (*ApprovalRequirement) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{2}
}

func (x *ApprovalRequirement) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *ApprovalRequirement) GetApprovalCount() int32 {
	if x != nil && x.ApprovalCount != nil {
		return *x.ApprovalCount
	}
	return 0
}

func (x *ApprovalRequirement) GetApproverRoles() []string {
	if x != nil {
		return x.ApproverRoles
	}
	return nil
}

func (x *ApprovalRequirement) GetApproverUsers() []string {
	if x != nil {
		return x.ApproverUsers
	}
	return nil
}

func (x *ApprovalRequirement) GetPolicy() string {
	if x != nil && x.Policy != nil {
		return *x.Policy
	}
	return ""
}

func (x *ApprovalRequirement) GetWorkflow() string {
	if x != nil && x.Workflow != nil {
		return *x.Workflow
	}
	return ""
}

func (x *ApprovalRequirement) GetAutoApprovalConditions() []string {
	if x != nil {
		return x.AutoApprovalConditions
	}
	return nil
}

func (x *ApprovalRequirement) GetApprovalTimeoutHours() int32 {
	if x != nil && x.ApprovalTimeoutHours != nil {
		return *x.ApprovalTimeoutHours
	}
	return 0
}

// AuditSettings represents audit settings for configuration changes
type AuditSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether audit logging is enabled
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Audit log level
	Level *AuditLevel `protobuf:"varint,2,opt,name=level,enum=gcommon.v1.config.AuditLevel" json:"level,omitempty"`
	// Audit log retention period in days
	RetentionDays *int32 `protobuf:"varint,3,opt,name=retention_days,json=retentionDays" json:"retention_days,omitempty"`
	// Whether to include sensitive data in audit logs
	IncludeSensitiveData *bool `protobuf:"varint,4,opt,name=include_sensitive_data,json=includeSensitiveData" json:"include_sensitive_data,omitempty"`
	// External audit destinations
	Destinations []string `protobuf:"bytes,5,rep,name=destinations" json:"destinations,omitempty"`
	// Audit log format
	Format *string `protobuf:"bytes,6,opt,name=format" json:"format,omitempty"`
	// Additional audit metadata
	Metadata      map[string]string `protobuf:"bytes,7,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditSettings) Reset() {
	*x = AuditSettings{}
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditSettings) ProtoMessage() {}

func (x *AuditSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditSettings.ProtoReflect.Descriptor instead.
func (*AuditSettings) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{3}
}

func (x *AuditSettings) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *AuditSettings) GetLevel() AuditLevel {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return AuditLevel_AUDIT_LEVEL_UNSPECIFIED
}

func (x *AuditSettings) GetRetentionDays() int32 {
	if x != nil && x.RetentionDays != nil {
		return *x.RetentionDays
	}
	return 0
}

func (x *AuditSettings) GetIncludeSensitiveData() bool {
	if x != nil && x.IncludeSensitiveData != nil {
		return *x.IncludeSensitiveData
	}
	return false
}

func (x *AuditSettings) GetDestinations() []string {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *AuditSettings) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *AuditSettings) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// NotificationSettings represents notification settings for configuration changes
type NotificationSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether notifications are enabled
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Notification channels
	Channels []*NotificationChannel `protobuf:"bytes,2,rep,name=channels" json:"channels,omitempty"`
	// Notification triggers
	Triggers []NotificationTrigger `protobuf:"varint,3,rep,packed,name=triggers,enum=gcommon.v1.config.NotificationTrigger" json:"triggers,omitempty"`
	// Notification template
	Template *string `protobuf:"bytes,4,opt,name=template" json:"template,omitempty"`
	// Notification recipients
	Recipients []string `protobuf:"bytes,5,rep,name=recipients" json:"recipients,omitempty"`
	// Notification delay in minutes
	DelayMinutes *int32 `protobuf:"varint,6,opt,name=delay_minutes,json=delayMinutes" json:"delay_minutes,omitempty"`
	// Notification batching settings
	Batching      *BatchingSettings `protobuf:"bytes,7,opt,name=batching" json:"batching,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationSettings) Reset() {
	*x = NotificationSettings{}
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettings) ProtoMessage() {}

func (x *NotificationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettings.ProtoReflect.Descriptor instead.
func (*NotificationSettings) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{4}
}

func (x *NotificationSettings) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *NotificationSettings) GetChannels() []*NotificationChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *NotificationSettings) GetTriggers() []NotificationTrigger {
	if x != nil {
		return x.Triggers
	}
	return nil
}

func (x *NotificationSettings) GetTemplate() string {
	if x != nil && x.Template != nil {
		return *x.Template
	}
	return ""
}

func (x *NotificationSettings) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *NotificationSettings) GetDelayMinutes() int32 {
	if x != nil && x.DelayMinutes != nil {
		return *x.DelayMinutes
	}
	return 0
}

func (x *NotificationSettings) GetBatching() *BatchingSettings {
	if x != nil {
		return x.Batching
	}
	return nil
}

// NotificationChannel represents a notification channel
type NotificationChannel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Channel type
	Type *ChannelType `protobuf:"varint,1,opt,name=type,enum=gcommon.v1.config.ChannelType" json:"type,omitempty"`
	// Channel configuration
	Config map[string]string `protobuf:"bytes,2,rep,name=config" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Whether channel is enabled
	Enabled *bool `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	// Channel priority
	Priority      *int32 `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationChannel) Reset() {
	*x = NotificationChannel{}
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationChannel) ProtoMessage() {}

func (x *NotificationChannel) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationChannel.ProtoReflect.Descriptor instead.
func (*NotificationChannel) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{5}
}

func (x *NotificationChannel) GetType() ChannelType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ChannelType_CHANNEL_TYPE_UNSPECIFIED
}

func (x *NotificationChannel) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *NotificationChannel) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *NotificationChannel) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

// BatchingSettings represents notification batching settings
type BatchingSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether batching is enabled
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Batch size
	BatchSize *int32 `protobuf:"varint,2,opt,name=batch_size,json=batchSize" json:"batch_size,omitempty"`
	// Batch timeout in minutes
	TimeoutMinutes *int32 `protobuf:"varint,3,opt,name=timeout_minutes,json=timeoutMinutes" json:"timeout_minutes,omitempty"`
	// Batch grouping key
	GroupingKey   *string `protobuf:"bytes,4,opt,name=grouping_key,json=groupingKey" json:"grouping_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchingSettings) Reset() {
	*x = BatchingSettings{}
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchingSettings) ProtoMessage() {}

func (x *BatchingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchingSettings.ProtoReflect.Descriptor instead.
func (*BatchingSettings) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{6}
}

func (x *BatchingSettings) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *BatchingSettings) GetBatchSize() int32 {
	if x != nil && x.BatchSize != nil {
		return *x.BatchSize
	}
	return 0
}

func (x *BatchingSettings) GetTimeoutMinutes() int32 {
	if x != nil && x.TimeoutMinutes != nil {
		return *x.TimeoutMinutes
	}
	return 0
}

func (x *BatchingSettings) GetGroupingKey() string {
	if x != nil && x.GroupingKey != nil {
		return *x.GroupingKey
	}
	return ""
}

// BackupSettings represents backup settings for configuration
type BackupSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether backup is enabled
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Backup frequency
	Frequency *BackupFrequency `protobuf:"varint,2,opt,name=frequency,enum=gcommon.v1.config.BackupFrequency" json:"frequency,omitempty"`
	// Backup retention period in days
	RetentionDays *int32 `protobuf:"varint,3,opt,name=retention_days,json=retentionDays" json:"retention_days,omitempty"`
	// Backup storage location
	StorageLocation *string `protobuf:"bytes,4,opt,name=storage_location,json=storageLocation" json:"storage_location,omitempty"`
	// Backup encryption
	Encrypted *bool `protobuf:"varint,5,opt,name=encrypted" json:"encrypted,omitempty"`
	// Backup compression
	Compressed *bool `protobuf:"varint,6,opt,name=compressed" json:"compressed,omitempty"`
	// Backup metadata
	Metadata      map[string]string `protobuf:"bytes,7,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupSettings) Reset() {
	*x = BackupSettings{}
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupSettings) ProtoMessage() {}

func (x *BackupSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupSettings.ProtoReflect.Descriptor instead.
func (*BackupSettings) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{7}
}

func (x *BackupSettings) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *BackupSettings) GetFrequency() BackupFrequency {
	if x != nil && x.Frequency != nil {
		return *x.Frequency
	}
	return BackupFrequency_BACKUP_FREQUENCY_UNSPECIFIED
}

func (x *BackupSettings) GetRetentionDays() int32 {
	if x != nil && x.RetentionDays != nil {
		return *x.RetentionDays
	}
	return 0
}

func (x *BackupSettings) GetStorageLocation() string {
	if x != nil && x.StorageLocation != nil {
		return *x.StorageLocation
	}
	return ""
}

func (x *BackupSettings) GetEncrypted() bool {
	if x != nil && x.Encrypted != nil {
		return *x.Encrypted
	}
	return false
}

func (x *BackupSettings) GetCompressed() bool {
	if x != nil && x.Compressed != nil {
		return *x.Compressed
	}
	return false
}

func (x *BackupSettings) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// VersioningSettings represents versioning settings for configuration
type VersioningSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether versioning is enabled
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Maximum number of versions to keep
	MaxVersions *int32 `protobuf:"varint,2,opt,name=max_versions,json=maxVersions" json:"max_versions,omitempty"`
	// Version retention period in days
	RetentionDays *int32 `protobuf:"varint,3,opt,name=retention_days,json=retentionDays" json:"retention_days,omitempty"`
	// Whether to create versions on change
	VersionOnChange *bool `protobuf:"varint,4,opt,name=version_on_change,json=versionOnChange" json:"version_on_change,omitempty"`
	// Whether to create versions on schedule
	VersionOnSchedule *bool `protobuf:"varint,5,opt,name=version_on_schedule,json=versionOnSchedule" json:"version_on_schedule,omitempty"`
	// Versioning schedule
	Schedule *string `protobuf:"bytes,6,opt,name=schedule" json:"schedule,omitempty"`
	// Version metadata
	Metadata      map[string]string `protobuf:"bytes,7,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersioningSettings) Reset() {
	*x = VersioningSettings{}
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersioningSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersioningSettings) ProtoMessage() {}

func (x *VersioningSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_metadata_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersioningSettings.ProtoReflect.Descriptor instead.
func (*VersioningSettings) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP(), []int{8}
}

func (x *VersioningSettings) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *VersioningSettings) GetMaxVersions() int32 {
	if x != nil && x.MaxVersions != nil {
		return *x.MaxVersions
	}
	return 0
}

func (x *VersioningSettings) GetRetentionDays() int32 {
	if x != nil && x.RetentionDays != nil {
		return *x.RetentionDays
	}
	return 0
}

func (x *VersioningSettings) GetVersionOnChange() bool {
	if x != nil && x.VersionOnChange != nil {
		return *x.VersionOnChange
	}
	return false
}

func (x *VersioningSettings) GetVersionOnSchedule() bool {
	if x != nil && x.VersionOnSchedule != nil {
		return *x.VersionOnSchedule
	}
	return false
}

func (x *VersioningSettings) GetSchedule() string {
	if x != nil && x.Schedule != nil {
		return *x.Schedule
	}
	return ""
}

func (x *VersioningSettings) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_pkg_config_proto_messages_config_metadata_proto protoreflect.FileDescriptor

const file_pkg_config_proto_messages_config_metadata_proto_rawDesc = "" +
	"\n" +
	"/pkg/config/proto/messages/config_metadata.proto\x12\x11gcommon.v1.config\x1a\x1fgoogle/protobuf/timestamp.proto\x1a%pkg/common/proto/messages/error.proto\"\xc1\x0e\n" +
	"\x0eConfigMetadata\x12\x1f\n" +
	"\vmetadata_id\x18\x01 \x01(\tR\n" +
	"metadataId\x12\x1d\n" +
	"\n" +
	"config_key\x18\x02 \x01(\tR\tconfigKey\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x05 \x01(\tR\bcategory\x12 \n" +
	"\vsubcategory\x18\x06 \x01(\tR\vsubcategory\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12>\n" +
	"\tdata_type\x18\b \x01(\x0e2!.gcommon.v1.config.ConfigDataTypeR\bdataType\x12\x1a\n" +
	"\brequired\x18\t \x01(\bR\brequired\x12\x1c\n" +
	"\tsensitive\x18\n" +
	" \x01(\bR\tsensitive\x12\x1c\n" +
	"\tencrypted\x18\v \x01(\bR\tencrypted\x12\x1b\n" +
	"\tread_only\x18\f \x01(\bR\breadOnly\x12#\n" +
	"\rdefault_value\x18\r \x01(\tR\fdefaultValue\x12%\n" +
	"\x0eallowed_values\x18\x0e \x03(\tR\rallowedValues\x12\x1b\n" +
	"\tmin_value\x18\x0f \x01(\tR\bminValue\x12\x1b\n" +
	"\tmax_value\x18\x10 \x01(\tR\bmaxValue\x12-\n" +
	"\x12validation_pattern\x18\x11 \x01(\tR\x11validationPattern\x12-\n" +
	"\x12validation_message\x18\x12 \x01(\tR\x11validationMessage\x12\x1f\n" +
	"\vformat_hint\x18\x13 \x01(\tR\n" +
	"formatHint\x12\x1a\n" +
	"\bexamples\x18\x14 \x03(\tR\bexamples\x12+\n" +
	"\x11documentation_url\x18\x15 \x01(\tR\x10documentationUrl\x12\x16\n" +
	"\x06source\x18\x16 \x01(\tR\x06source\x12\x14\n" +
	"\x05owner\x18\x17 \x01(\tR\x05owner\x12\x18\n" +
	"\acontact\x18\x18 \x01(\tR\acontact\x12\"\n" +
	"\fenvironments\x18\x19 \x03(\tR\fenvironments\x12\x1a\n" +
	"\bservices\x18\x1a \x03(\tR\bservices\x12\x1e\n" +
	"\n" +
	"components\x18\x1b \x03(\tR\n" +
	"components\x12D\n" +
	"\vdeprecation\x18\x1c \x01(\v2\".gcommon.v1.config.DeprecationInfoR\vdeprecation\x12Y\n" +
	"\x14approval_requirement\x18\x1d \x01(\v2&.gcommon.v1.config.ApprovalRequirementR\x13approvalRequirement\x12G\n" +
	"\x0eaudit_settings\x18\x1e \x01(\v2 .gcommon.v1.config.AuditSettingsR\rauditSettings\x12\\\n" +
	"\x15notification_settings\x18\x1f \x01(\v2'.gcommon.v1.config.NotificationSettingsR\x14notificationSettings\x12J\n" +
	"\x0fbackup_settings\x18  \x01(\v2!.gcommon.v1.config.BackupSettingsR\x0ebackupSettings\x12V\n" +
	"\x13versioning_settings\x18! \x01(\v2%.gcommon.v1.config.VersioningSettingsR\x12versioningSettings\x12K\n" +
	"\bmetadata\x18\" \x03(\v2/.gcommon.v1.config.ConfigMetadata.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18# \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18$ \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18% \x01(\tR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"updated_by\x18& \x01(\tR\tupdatedBy\x12\x18\n" +
	"\aversion\x18' \x01(\tR\aversion\x129\n" +
	"\x06status\x18( \x01(\x0e2!.gcommon.v1.config.MetadataStatusR\x06status\x12.\n" +
	"\x05error\x18) \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd6\x02\n" +
	"\x0fDeprecationInfo\x12\x1e\n" +
	"\n" +
	"deprecated\x18\x01 \x01(\bR\n" +
	"deprecated\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12?\n" +
	"\rdeprecated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\fdeprecatedAt\x12'\n" +
	"\x0freplacement_key\x18\x04 \x01(\tR\x0ereplacementKey\x12=\n" +
	"\fremoval_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vremovalDate\x12'\n" +
	"\x0fmigration_guide\x18\x06 \x01(\tR\x0emigrationGuide\x129\n" +
	"\x05level\x18\a \x01(\x0e2#.gcommon.v1.config.DeprecationLevelR\x05level\"\xca\x02\n" +
	"\x13ApprovalRequirement\x12\x1a\n" +
	"\brequired\x18\x01 \x01(\bR\brequired\x12%\n" +
	"\x0eapproval_count\x18\x02 \x01(\x05R\rapprovalCount\x12%\n" +
	"\x0eapprover_roles\x18\x03 \x03(\tR\rapproverRoles\x12%\n" +
	"\x0eapprover_users\x18\x04 \x03(\tR\rapproverUsers\x12\x16\n" +
	"\x06policy\x18\x05 \x01(\tR\x06policy\x12\x1a\n" +
	"\bworkflow\x18\x06 \x01(\tR\bworkflow\x128\n" +
	"\x18auto_approval_conditions\x18\a \x03(\tR\x16autoApprovalConditions\x124\n" +
	"\x16approval_timeout_hours\x18\b \x01(\x05R\x14approvalTimeoutHours\"\x80\x03\n" +
	"\rAuditSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x123\n" +
	"\x05level\x18\x02 \x01(\x0e2\x1d.gcommon.v1.config.AuditLevelR\x05level\x12%\n" +
	"\x0eretention_days\x18\x03 \x01(\x05R\rretentionDays\x124\n" +
	"\x16include_sensitive_data\x18\x04 \x01(\bR\x14includeSensitiveData\x12\"\n" +
	"\fdestinations\x18\x05 \x03(\tR\fdestinations\x12\x16\n" +
	"\x06format\x18\x06 \x01(\tR\x06format\x12J\n" +
	"\bmetadata\x18\a \x03(\v2..gcommon.v1.config.AuditSettings.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xda\x02\n" +
	"\x14NotificationSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12B\n" +
	"\bchannels\x18\x02 \x03(\v2&.gcommon.v1.config.NotificationChannelR\bchannels\x12B\n" +
	"\btriggers\x18\x03 \x03(\x0e2&.gcommon.v1.config.NotificationTriggerR\btriggers\x12\x1a\n" +
	"\btemplate\x18\x04 \x01(\tR\btemplate\x12\x1e\n" +
	"\n" +
	"recipients\x18\x05 \x03(\tR\n" +
	"recipients\x12#\n" +
	"\rdelay_minutes\x18\x06 \x01(\x05R\fdelayMinutes\x12?\n" +
	"\bbatching\x18\a \x01(\v2#.gcommon.v1.config.BatchingSettingsR\bbatching\"\x86\x02\n" +
	"\x13NotificationChannel\x122\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1e.gcommon.v1.config.ChannelTypeR\x04type\x12J\n" +
	"\x06config\x18\x02 \x03(\v22.gcommon.v1.config.NotificationChannel.ConfigEntryR\x06config\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x05R\bpriority\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x97\x01\n" +
	"\x10BatchingSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x02 \x01(\x05R\tbatchSize\x12'\n" +
	"\x0ftimeout_minutes\x18\x03 \x01(\x05R\x0etimeoutMinutes\x12!\n" +
	"\fgrouping_key\x18\x04 \x01(\tR\vgroupingKey\"\x86\x03\n" +
	"\x0eBackupSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12@\n" +
	"\tfrequency\x18\x02 \x01(\x0e2\".gcommon.v1.config.BackupFrequencyR\tfrequency\x12%\n" +
	"\x0eretention_days\x18\x03 \x01(\x05R\rretentionDays\x12)\n" +
	"\x10storage_location\x18\x04 \x01(\tR\x0fstorageLocation\x12\x1c\n" +
	"\tencrypted\x18\x05 \x01(\bR\tencrypted\x12\x1e\n" +
	"\n" +
	"compressed\x18\x06 \x01(\bR\n" +
	"compressed\x12K\n" +
	"\bmetadata\x18\a \x03(\v2/.gcommon.v1.config.BackupSettings.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfe\x02\n" +
	"\x12VersioningSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12!\n" +
	"\fmax_versions\x18\x02 \x01(\x05R\vmaxVersions\x12%\n" +
	"\x0eretention_days\x18\x03 \x01(\x05R\rretentionDays\x12*\n" +
	"\x11version_on_change\x18\x04 \x01(\bR\x0fversionOnChange\x12.\n" +
	"\x13version_on_schedule\x18\x05 \x01(\bR\x11versionOnSchedule\x12\x1a\n" +
	"\bschedule\x18\x06 \x01(\tR\bschedule\x12O\n" +
	"\bmetadata\x18\a \x03(\v23.gcommon.v1.config.VersioningSettings.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\x80\x06\n" +
	"\x0eConfigDataType\x12 \n" +
	"\x1cCONFIG_DATA_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17CONFIG_DATA_TYPE_STRING\x10\x01\x12\x1c\n" +
	"\x18CONFIG_DATA_TYPE_INTEGER\x10\x02\x12\x1a\n" +
	"\x16CONFIG_DATA_TYPE_FLOAT\x10\x03\x12\x1c\n" +
	"\x18CONFIG_DATA_TYPE_BOOLEAN\x10\x04\x12\x19\n" +
	"\x15CONFIG_DATA_TYPE_ENUM\x10\x05\x12\x19\n" +
	"\x15CONFIG_DATA_TYPE_LIST\x10\x06\x12\x18\n" +
	"\x14CONFIG_DATA_TYPE_MAP\x10\a\x12\x19\n" +
	"\x15CONFIG_DATA_TYPE_JSON\x10\b\x12\x19\n" +
	"\x15CONFIG_DATA_TYPE_YAML\x10\t\x12\x18\n" +
	"\x14CONFIG_DATA_TYPE_URL\x10\n" +
	"\x12\x1a\n" +
	"\x16CONFIG_DATA_TYPE_EMAIL\x10\v\x12\x1d\n" +
	"\x19CONFIG_DATA_TYPE_PASSWORD\x10\f\x12 \n" +
	"\x1cCONFIG_DATA_TYPE_CERTIFICATE\x10\r\x12 \n" +
	"\x1cCONFIG_DATA_TYPE_PRIVATE_KEY\x10\x0e\x12\x1f\n" +
	"\x1bCONFIG_DATA_TYPE_PUBLIC_KEY\x10\x0f\x12\x1d\n" +
	"\x19CONFIG_DATA_TYPE_DURATION\x10\x10\x12\x1e\n" +
	"\x1aCONFIG_DATA_TYPE_TIMESTAMP\x10\x11\x12\x1a\n" +
	"\x16CONFIG_DATA_TYPE_REGEX\x10\x12\x12\x19\n" +
	"\x15CONFIG_DATA_TYPE_IPV4\x10\x13\x12\x19\n" +
	"\x15CONFIG_DATA_TYPE_IPV6\x10\x14\x12\x19\n" +
	"\x15CONFIG_DATA_TYPE_CIDR\x10\x15\x12\x19\n" +
	"\x15CONFIG_DATA_TYPE_PORT\x10\x16\x12\x19\n" +
	"\x15CONFIG_DATA_TYPE_UUID\x10\x17\x12\x1b\n" +
	"\x17CONFIG_DATA_TYPE_BASE64\x10\x18\x12\x18\n" +
	"\x14CONFIG_DATA_TYPE_HEX\x10\x19*\x8c\x01\n" +
	"\x10DeprecationLevel\x12!\n" +
	"\x1dDEPRECATION_LEVEL_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16DEPRECATION_LEVEL_SOFT\x10\x01\x12\x1a\n" +
	"\x16DEPRECATION_LEVEL_HARD\x10\x02\x12\x1d\n" +
	"\x19DEPRECATION_LEVEL_REMOVAL\x10\x03*\xa5\x01\n" +
	"\n" +
	"AuditLevel\x12\x1b\n" +
	"\x17AUDIT_LEVEL_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10AUDIT_LEVEL_NONE\x10\x01\x12\x17\n" +
	"\x13AUDIT_LEVEL_MINIMAL\x10\x02\x12\x18\n" +
	"\x14AUDIT_LEVEL_STANDARD\x10\x03\x12\x18\n" +
	"\x14AUDIT_LEVEL_DETAILED\x10\x04\x12\x17\n" +
	"\x13AUDIT_LEVEL_VERBOSE\x10\x05*\xf0\x01\n" +
	"\vChannelType\x12\x1c\n" +
	"\x18CHANNEL_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12CHANNEL_TYPE_EMAIL\x10\x01\x12\x16\n" +
	"\x12CHANNEL_TYPE_SLACK\x10\x02\x12\x18\n" +
	"\x14CHANNEL_TYPE_WEBHOOK\x10\x03\x12\x14\n" +
	"\x10CHANNEL_TYPE_SMS\x10\x04\x12\x1a\n" +
	"\x16CHANNEL_TYPE_PAGERDUTY\x10\x05\x12\x16\n" +
	"\x12CHANNEL_TYPE_TEAMS\x10\x06\x12\x18\n" +
	"\x14CHANNEL_TYPE_DISCORD\x10\a\x12\x15\n" +
	"\x11CHANNEL_TYPE_JIRA\x10\b*\xab\x02\n" +
	"\x13NotificationTrigger\x12$\n" +
	" NOTIFICATION_TRIGGER_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bNOTIFICATION_TRIGGER_CHANGE\x10\x01\x12\x1f\n" +
	"\x1bNOTIFICATION_TRIGGER_DELETE\x10\x02\x12\x1e\n" +
	"\x1aNOTIFICATION_TRIGGER_ERROR\x10\x03\x12!\n" +
	"\x1dNOTIFICATION_TRIGGER_APPROVAL\x10\x04\x12#\n" +
	"\x1fNOTIFICATION_TRIGGER_DEPLOYMENT\x10\x05\x12!\n" +
	"\x1dNOTIFICATION_TRIGGER_ROLLBACK\x10\x06\x12!\n" +
	"\x1dNOTIFICATION_TRIGGER_SCHEDULE\x10\a*\xe4\x01\n" +
	"\x0fBackupFrequency\x12 \n" +
	"\x1cBACKUP_FREQUENCY_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17BACKUP_FREQUENCY_MANUAL\x10\x01\x12\x1b\n" +
	"\x17BACKUP_FREQUENCY_HOURLY\x10\x02\x12\x1a\n" +
	"\x16BACKUP_FREQUENCY_DAILY\x10\x03\x12\x1b\n" +
	"\x17BACKUP_FREQUENCY_WEEKLY\x10\x04\x12\x1c\n" +
	"\x18BACKUP_FREQUENCY_MONTHLY\x10\x05\x12\x1e\n" +
	"\x1aBACKUP_FREQUENCY_ON_CHANGE\x10\x06*\xde\x01\n" +
	"\x0eMetadataStatus\x12\x1f\n" +
	"\x1bMETADATA_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16METADATA_STATUS_ACTIVE\x10\x01\x12\x1c\n" +
	"\x18METADATA_STATUS_INACTIVE\x10\x02\x12\x19\n" +
	"\x15METADATA_STATUS_DRAFT\x10\x03\x12\x1e\n" +
	"\x1aMETADATA_STATUS_DEPRECATED\x10\x04\x12\x1b\n" +
	"\x17METADATA_STATUS_DELETED\x10\x05\x12\x19\n" +
	"\x15METADATA_STATUS_ERROR\x10\x06B\xb6\x01\n" +
	"\x15com.gcommon.v1.configB\x13ConfigMetadataProtoP\x01Z\"../../../../pkg/config/pb;configpb\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Config\xca\x02\x11Gcommon\\V1\\Config\xe2\x02\x1dGcommon\\V1\\Config\\GPBMetadata\xea\x02\x13Gcommon::V1::Configb\beditionsp\xe8\a"

var (
	file_pkg_config_proto_messages_config_metadata_proto_rawDescOnce sync.Once
	file_pkg_config_proto_messages_config_metadata_proto_rawDescData []byte
)

func file_pkg_config_proto_messages_config_metadata_proto_rawDescGZIP() []byte {
	file_pkg_config_proto_messages_config_metadata_proto_rawDescOnce.Do(func() {
		file_pkg_config_proto_messages_config_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_config_proto_messages_config_metadata_proto_rawDesc), len(file_pkg_config_proto_messages_config_metadata_proto_rawDesc)))
	})
	return file_pkg_config_proto_messages_config_metadata_proto_rawDescData
}

var file_pkg_config_proto_messages_config_metadata_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_pkg_config_proto_messages_config_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_pkg_config_proto_messages_config_metadata_proto_goTypes = []any{
	(ConfigDataType)(0),           // 0: gcommon.v1.config.ConfigDataType
	(DeprecationLevel)(0),         // 1: gcommon.v1.config.DeprecationLevel
	(AuditLevel)(0),               // 2: gcommon.v1.config.AuditLevel
	(ChannelType)(0),              // 3: gcommon.v1.config.ChannelType
	(NotificationTrigger)(0),      // 4: gcommon.v1.config.NotificationTrigger
	(BackupFrequency)(0),          // 5: gcommon.v1.config.BackupFrequency
	(MetadataStatus)(0),           // 6: gcommon.v1.config.MetadataStatus
	(*ConfigMetadata)(nil),        // 7: gcommon.v1.config.ConfigMetadata
	(*DeprecationInfo)(nil),       // 8: gcommon.v1.config.DeprecationInfo
	(*ApprovalRequirement)(nil),   // 9: gcommon.v1.config.ApprovalRequirement
	(*AuditSettings)(nil),         // 10: gcommon.v1.config.AuditSettings
	(*NotificationSettings)(nil),  // 11: gcommon.v1.config.NotificationSettings
	(*NotificationChannel)(nil),   // 12: gcommon.v1.config.NotificationChannel
	(*BatchingSettings)(nil),      // 13: gcommon.v1.config.BatchingSettings
	(*BackupSettings)(nil),        // 14: gcommon.v1.config.BackupSettings
	(*VersioningSettings)(nil),    // 15: gcommon.v1.config.VersioningSettings
	nil,                           // 16: gcommon.v1.config.ConfigMetadata.MetadataEntry
	nil,                           // 17: gcommon.v1.config.AuditSettings.MetadataEntry
	nil,                           // 18: gcommon.v1.config.NotificationChannel.ConfigEntry
	nil,                           // 19: gcommon.v1.config.BackupSettings.MetadataEntry
	nil,                           // 20: gcommon.v1.config.VersioningSettings.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 21: google.protobuf.Timestamp
	(*pb.Error)(nil),              // 22: gcommon.v1.common.Error
}
var file_pkg_config_proto_messages_config_metadata_proto_depIdxs = []int32{
	0,  // 0: gcommon.v1.config.ConfigMetadata.data_type:type_name -> gcommon.v1.config.ConfigDataType
	8,  // 1: gcommon.v1.config.ConfigMetadata.deprecation:type_name -> gcommon.v1.config.DeprecationInfo
	9,  // 2: gcommon.v1.config.ConfigMetadata.approval_requirement:type_name -> gcommon.v1.config.ApprovalRequirement
	10, // 3: gcommon.v1.config.ConfigMetadata.audit_settings:type_name -> gcommon.v1.config.AuditSettings
	11, // 4: gcommon.v1.config.ConfigMetadata.notification_settings:type_name -> gcommon.v1.config.NotificationSettings
	14, // 5: gcommon.v1.config.ConfigMetadata.backup_settings:type_name -> gcommon.v1.config.BackupSettings
	15, // 6: gcommon.v1.config.ConfigMetadata.versioning_settings:type_name -> gcommon.v1.config.VersioningSettings
	16, // 7: gcommon.v1.config.ConfigMetadata.metadata:type_name -> gcommon.v1.config.ConfigMetadata.MetadataEntry
	21, // 8: gcommon.v1.config.ConfigMetadata.created_at:type_name -> google.protobuf.Timestamp
	21, // 9: gcommon.v1.config.ConfigMetadata.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 10: gcommon.v1.config.ConfigMetadata.status:type_name -> gcommon.v1.config.MetadataStatus
	22, // 11: gcommon.v1.config.ConfigMetadata.error:type_name -> gcommon.v1.common.Error
	21, // 12: gcommon.v1.config.DeprecationInfo.deprecated_at:type_name -> google.protobuf.Timestamp
	21, // 13: gcommon.v1.config.DeprecationInfo.removal_date:type_name -> google.protobuf.Timestamp
	1,  // 14: gcommon.v1.config.DeprecationInfo.level:type_name -> gcommon.v1.config.DeprecationLevel
	2,  // 15: gcommon.v1.config.AuditSettings.level:type_name -> gcommon.v1.config.AuditLevel
	17, // 16: gcommon.v1.config.AuditSettings.metadata:type_name -> gcommon.v1.config.AuditSettings.MetadataEntry
	12, // 17: gcommon.v1.config.NotificationSettings.channels:type_name -> gcommon.v1.config.NotificationChannel
	4,  // 18: gcommon.v1.config.NotificationSettings.triggers:type_name -> gcommon.v1.config.NotificationTrigger
	13, // 19: gcommon.v1.config.NotificationSettings.batching:type_name -> gcommon.v1.config.BatchingSettings
	3,  // 20: gcommon.v1.config.NotificationChannel.type:type_name -> gcommon.v1.config.ChannelType
	18, // 21: gcommon.v1.config.NotificationChannel.config:type_name -> gcommon.v1.config.NotificationChannel.ConfigEntry
	5,  // 22: gcommon.v1.config.BackupSettings.frequency:type_name -> gcommon.v1.config.BackupFrequency
	19, // 23: gcommon.v1.config.BackupSettings.metadata:type_name -> gcommon.v1.config.BackupSettings.MetadataEntry
	20, // 24: gcommon.v1.config.VersioningSettings.metadata:type_name -> gcommon.v1.config.VersioningSettings.MetadataEntry
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_pkg_config_proto_messages_config_metadata_proto_init() }
func file_pkg_config_proto_messages_config_metadata_proto_init() {
	if File_pkg_config_proto_messages_config_metadata_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_config_proto_messages_config_metadata_proto_rawDesc), len(file_pkg_config_proto_messages_config_metadata_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_config_proto_messages_config_metadata_proto_goTypes,
		DependencyIndexes: file_pkg_config_proto_messages_config_metadata_proto_depIdxs,
		EnumInfos:         file_pkg_config_proto_messages_config_metadata_proto_enumTypes,
		MessageInfos:      file_pkg_config_proto_messages_config_metadata_proto_msgTypes,
	}.Build()
	File_pkg_config_proto_messages_config_metadata_proto = out.File
	file_pkg_config_proto_messages_config_metadata_proto_goTypes = nil
	file_pkg_config_proto_messages_config_metadata_proto_depIdxs = nil
}
