// file: pkg/config/proto/messages/config_audit_log.proto
// version: 1.0.0
// guid: 5b6c7d8e-9f0a-1b2c-3d4e-5f6a7b8c9d0e

edition = "2023";

package gcommon.v1.config;

import "google/protobuf/timestamp.proto";
import "pkg/common/proto/messages/request_metadata.proto";
import "pkg/common/proto/messages/error.proto";

option go_package = "github.com/jdfalk/gcommon/pkg/config/proto;configpb";

// ConfigAuditLog represents a configuration change audit entry
message ConfigAuditLog {
  // Unique identifier for the audit entry
  string audit_id = 1;

  // Timestamp when the change occurred
  google.protobuf.Timestamp timestamp = 2;

  // User who made the change
  string user_id = 3;

  // User's display name
  string user_name = 4;

  // Source of the change (web UI, API, CLI, etc.)
  string source = 5;

  // IP address of the client
  string client_ip = 6;

  // User agent information
  string user_agent = 7;

  // Session ID
  string session_id = 8;

  // Request ID for tracing
  string request_id = 9;

  // Type of operation performed
  AuditOperationType operation_type = 10;

  // Configuration key that was changed
  string config_key = 11;

  // Previous value (for updates and deletes)
  string old_value = 12;

  // New value (for creates and updates)
  string new_value = 13;

  // Environment where the change occurred
  string environment = 14;

  // Namespace or scope
  string namespace = 15;

  // Configuration version before change
  string version_before = 16;

  // Configuration version after change
  string version_after = 17;

  // Reason for the change
  string reason = 18;

  // Change category
  string category = 19;

  // Tags associated with the change
  repeated string tags = 20;

  // Additional metadata
  map<string, string> metadata = 21;

  // Success status of the operation
  bool success = 22;

  // Error information if operation failed
  gcommon.v1.common.Error error = 23;

  // Duration of the operation
  int64 duration_ms = 24;

  // Size of the change in bytes
  int64 change_size_bytes = 25;

  // Validation results
  repeated ValidationResult validation_results = 26;

  // Approval information (for gated changes)
  ApprovalInfo approval_info = 27;

  // Rollback information (if this is a rollback)
  RollbackInfo rollback_info = 28;

  // Related audit entries
  repeated string related_audit_ids = 29;

  // Checksum of the change
  string checksum = 30;
}

// AuditOperationType represents the type of configuration operation
enum AuditOperationType {
  AUDIT_OPERATION_TYPE_UNSPECIFIED = 0;
  AUDIT_OPERATION_TYPE_CREATE = 1;
  AUDIT_OPERATION_TYPE_UPDATE = 2;
  AUDIT_OPERATION_TYPE_DELETE = 3;
  AUDIT_OPERATION_TYPE_BULK_CREATE = 4;
  AUDIT_OPERATION_TYPE_BULK_UPDATE = 5;
  AUDIT_OPERATION_TYPE_BULK_DELETE = 6;
  AUDIT_OPERATION_TYPE_IMPORT = 7;
  AUDIT_OPERATION_TYPE_EXPORT = 8;
  AUDIT_OPERATION_TYPE_BACKUP = 9;
  AUDIT_OPERATION_TYPE_RESTORE = 10;
  AUDIT_OPERATION_TYPE_ROLLBACK = 11;
  AUDIT_OPERATION_TYPE_VALIDATE = 12;
  AUDIT_OPERATION_TYPE_SYNC = 13;
}

// ValidationResult represents the result of a validation check
message ValidationResult {
  // Validation rule name
  string rule_name = 1;

  // Validation result
  ValidationResultType result = 2;

  // Validation message
  string message = 3;

  // Severity level
  ValidationSeverity severity = 4;

  // Field that was validated
  string field = 5;

  // Additional context
  map<string, string> context = 6;
}

// ValidationResultType represents the result of validation
enum ValidationResultType {
  VALIDATION_RESULT_TYPE_UNSPECIFIED = 0;
  VALIDATION_RESULT_TYPE_PASS = 1;
  VALIDATION_RESULT_TYPE_FAIL = 2;
  VALIDATION_RESULT_TYPE_WARNING = 3;
  VALIDATION_RESULT_TYPE_SKIP = 4;
}

// ValidationSeverity represents the severity of validation issues
enum ValidationSeverity {
  VALIDATION_SEVERITY_UNSPECIFIED = 0;
  VALIDATION_SEVERITY_INFO = 1;
  VALIDATION_SEVERITY_WARNING = 2;
  VALIDATION_SEVERITY_ERROR = 3;
  VALIDATION_SEVERITY_CRITICAL = 4;
}

// ApprovalInfo represents approval information for gated changes
message ApprovalInfo {
  // Whether approval was required
  bool required = 1;

  // Approval status
  ApprovalStatus status = 2;

  // User who approved
  string approved_by = 3;

  // Approval timestamp
  google.protobuf.Timestamp approved_at = 4;

  // Approval comments
  string comments = 5;

  // Approval workflow ID
  string workflow_id = 6;

  // Approval policy applied
  string policy_name = 7;
}

// ApprovalStatus represents the approval status
enum ApprovalStatus {
  APPROVAL_STATUS_UNSPECIFIED = 0;
  APPROVAL_STATUS_PENDING = 1;
  APPROVAL_STATUS_APPROVED = 2;
  APPROVAL_STATUS_REJECTED = 3;
  APPROVAL_STATUS_CANCELLED = 4;
  APPROVAL_STATUS_EXPIRED = 5;
}

// RollbackInfo represents rollback information
message RollbackInfo {
  // Original audit entry being rolled back
  string original_audit_id = 1;

  // Rollback reason
  string reason = 2;

  // Rollback method
  RollbackMethod method = 3;

  // Target version for rollback
  string target_version = 4;

  // Whether rollback was automatic
  bool automatic = 5;
}

// RollbackMethod represents how the rollback was performed
enum RollbackMethod {
  ROLLBACK_METHOD_UNSPECIFIED = 0;
  ROLLBACK_METHOD_VALUE_RESTORE = 1;
  ROLLBACK_METHOD_VERSION_RESTORE = 2;
  ROLLBACK_METHOD_SNAPSHOT_RESTORE = 3;
  ROLLBACK_METHOD_MANUAL = 4;
}
