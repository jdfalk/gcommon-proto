// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/config/proto/messages/config_version.proto

package configpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// VersionStatus represents the status of a version
type VersionStatus int32

const (
	VersionStatus_VERSION_STATUS_UNSPECIFIED VersionStatus = 0
	VersionStatus_VERSION_STATUS_DRAFT       VersionStatus = 1
	VersionStatus_VERSION_STATUS_PENDING     VersionStatus = 2
	VersionStatus_VERSION_STATUS_ACTIVE      VersionStatus = 3
	VersionStatus_VERSION_STATUS_DEPRECATED  VersionStatus = 4
	VersionStatus_VERSION_STATUS_ARCHIVED    VersionStatus = 5
	VersionStatus_VERSION_STATUS_DELETED     VersionStatus = 6
	VersionStatus_VERSION_STATUS_FAILED      VersionStatus = 7
	VersionStatus_VERSION_STATUS_CANCELLED   VersionStatus = 8
)

// Enum value maps for VersionStatus.
var (
	VersionStatus_name = map[int32]string{
		0: "VERSION_STATUS_UNSPECIFIED",
		1: "VERSION_STATUS_DRAFT",
		2: "VERSION_STATUS_PENDING",
		3: "VERSION_STATUS_ACTIVE",
		4: "VERSION_STATUS_DEPRECATED",
		5: "VERSION_STATUS_ARCHIVED",
		6: "VERSION_STATUS_DELETED",
		7: "VERSION_STATUS_FAILED",
		8: "VERSION_STATUS_CANCELLED",
	}
	VersionStatus_value = map[string]int32{
		"VERSION_STATUS_UNSPECIFIED": 0,
		"VERSION_STATUS_DRAFT":       1,
		"VERSION_STATUS_PENDING":     2,
		"VERSION_STATUS_ACTIVE":      3,
		"VERSION_STATUS_DEPRECATED":  4,
		"VERSION_STATUS_ARCHIVED":    5,
		"VERSION_STATUS_DELETED":     6,
		"VERSION_STATUS_FAILED":      7,
		"VERSION_STATUS_CANCELLED":   8,
	}
)

func (x VersionStatus) Enum() *VersionStatus {
	p := new(VersionStatus)
	*p = x
	return p
}

func (x VersionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_version_proto_enumTypes[0].Descriptor()
}

func (VersionStatus) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_version_proto_enumTypes[0]
}

func (x VersionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionStatus.Descriptor instead.
func (VersionStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{0}
}

// VersionType represents the type of version
type VersionType int32

const (
	VersionType_VERSION_TYPE_UNSPECIFIED VersionType = 0
	VersionType_VERSION_TYPE_MAJOR       VersionType = 1
	VersionType_VERSION_TYPE_MINOR       VersionType = 2
	VersionType_VERSION_TYPE_PATCH       VersionType = 3
	VersionType_VERSION_TYPE_HOTFIX      VersionType = 4
	VersionType_VERSION_TYPE_PRERELEASE  VersionType = 5
	VersionType_VERSION_TYPE_SNAPSHOT    VersionType = 6
	VersionType_VERSION_TYPE_BRANCH      VersionType = 7
	VersionType_VERSION_TYPE_TAG         VersionType = 8
)

// Enum value maps for VersionType.
var (
	VersionType_name = map[int32]string{
		0: "VERSION_TYPE_UNSPECIFIED",
		1: "VERSION_TYPE_MAJOR",
		2: "VERSION_TYPE_MINOR",
		3: "VERSION_TYPE_PATCH",
		4: "VERSION_TYPE_HOTFIX",
		5: "VERSION_TYPE_PRERELEASE",
		6: "VERSION_TYPE_SNAPSHOT",
		7: "VERSION_TYPE_BRANCH",
		8: "VERSION_TYPE_TAG",
	}
	VersionType_value = map[string]int32{
		"VERSION_TYPE_UNSPECIFIED": 0,
		"VERSION_TYPE_MAJOR":       1,
		"VERSION_TYPE_MINOR":       2,
		"VERSION_TYPE_PATCH":       3,
		"VERSION_TYPE_HOTFIX":      4,
		"VERSION_TYPE_PRERELEASE":  5,
		"VERSION_TYPE_SNAPSHOT":    6,
		"VERSION_TYPE_BRANCH":      7,
		"VERSION_TYPE_TAG":         8,
	}
)

func (x VersionType) Enum() *VersionType {
	p := new(VersionType)
	*p = x
	return p
}

func (x VersionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_version_proto_enumTypes[1].Descriptor()
}

func (VersionType) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_version_proto_enumTypes[1]
}

func (x VersionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionType.Descriptor instead.
func (VersionType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{1}
}

// VersionDeploymentStatus represents the status of a deployment
type VersionDeploymentStatus int32

const (
	VersionDeploymentStatus_VERSION_DEPLOYMENT_STATUS_UNSPECIFIED VersionDeploymentStatus = 0
	VersionDeploymentStatus_VERSION_DEPLOYMENT_STATUS_PENDING     VersionDeploymentStatus = 1
	VersionDeploymentStatus_VERSION_DEPLOYMENT_STATUS_IN_PROGRESS VersionDeploymentStatus = 2
	VersionDeploymentStatus_VERSION_DEPLOYMENT_STATUS_SUCCESS     VersionDeploymentStatus = 3
	VersionDeploymentStatus_VERSION_DEPLOYMENT_STATUS_FAILED      VersionDeploymentStatus = 4
	VersionDeploymentStatus_VERSION_DEPLOYMENT_STATUS_ROLLED_BACK VersionDeploymentStatus = 5
	VersionDeploymentStatus_VERSION_DEPLOYMENT_STATUS_CANCELLED   VersionDeploymentStatus = 6
)

// Enum value maps for VersionDeploymentStatus.
var (
	VersionDeploymentStatus_name = map[int32]string{
		0: "VERSION_DEPLOYMENT_STATUS_UNSPECIFIED",
		1: "VERSION_DEPLOYMENT_STATUS_PENDING",
		2: "VERSION_DEPLOYMENT_STATUS_IN_PROGRESS",
		3: "VERSION_DEPLOYMENT_STATUS_SUCCESS",
		4: "VERSION_DEPLOYMENT_STATUS_FAILED",
		5: "VERSION_DEPLOYMENT_STATUS_ROLLED_BACK",
		6: "VERSION_DEPLOYMENT_STATUS_CANCELLED",
	}
	VersionDeploymentStatus_value = map[string]int32{
		"VERSION_DEPLOYMENT_STATUS_UNSPECIFIED": 0,
		"VERSION_DEPLOYMENT_STATUS_PENDING":     1,
		"VERSION_DEPLOYMENT_STATUS_IN_PROGRESS": 2,
		"VERSION_DEPLOYMENT_STATUS_SUCCESS":     3,
		"VERSION_DEPLOYMENT_STATUS_FAILED":      4,
		"VERSION_DEPLOYMENT_STATUS_ROLLED_BACK": 5,
		"VERSION_DEPLOYMENT_STATUS_CANCELLED":   6,
	}
)

func (x VersionDeploymentStatus) Enum() *VersionDeploymentStatus {
	p := new(VersionDeploymentStatus)
	*p = x
	return p
}

func (x VersionDeploymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionDeploymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_version_proto_enumTypes[2].Descriptor()
}

func (VersionDeploymentStatus) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_version_proto_enumTypes[2]
}

func (x VersionDeploymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionDeploymentStatus.Descriptor instead.
func (VersionDeploymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{2}
}

// VersionHealthStatus represents the health status of a deployment
type VersionHealthStatus int32

const (
	VersionHealthStatus_VERSION_HEALTH_STATUS_UNSPECIFIED VersionHealthStatus = 0
	VersionHealthStatus_VERSION_HEALTH_STATUS_HEALTHY     VersionHealthStatus = 1
	VersionHealthStatus_VERSION_HEALTH_STATUS_DEGRADED    VersionHealthStatus = 2
	VersionHealthStatus_VERSION_HEALTH_STATUS_UNHEALTHY   VersionHealthStatus = 3
	VersionHealthStatus_VERSION_HEALTH_STATUS_UNKNOWN     VersionHealthStatus = 4
)

// Enum value maps for VersionHealthStatus.
var (
	VersionHealthStatus_name = map[int32]string{
		0: "VERSION_HEALTH_STATUS_UNSPECIFIED",
		1: "VERSION_HEALTH_STATUS_HEALTHY",
		2: "VERSION_HEALTH_STATUS_DEGRADED",
		3: "VERSION_HEALTH_STATUS_UNHEALTHY",
		4: "VERSION_HEALTH_STATUS_UNKNOWN",
	}
	VersionHealthStatus_value = map[string]int32{
		"VERSION_HEALTH_STATUS_UNSPECIFIED": 0,
		"VERSION_HEALTH_STATUS_HEALTHY":     1,
		"VERSION_HEALTH_STATUS_DEGRADED":    2,
		"VERSION_HEALTH_STATUS_UNHEALTHY":   3,
		"VERSION_HEALTH_STATUS_UNKNOWN":     4,
	}
)

func (x VersionHealthStatus) Enum() *VersionHealthStatus {
	p := new(VersionHealthStatus)
	*p = x
	return p
}

func (x VersionHealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionHealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_version_proto_enumTypes[3].Descriptor()
}

func (VersionHealthStatus) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_version_proto_enumTypes[3]
}

func (x VersionHealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionHealthStatus.Descriptor instead.
func (VersionHealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{3}
}

// VersionDependencyType represents the type of dependency
type VersionDependencyType int32

const (
	VersionDependencyType_VERSION_DEPENDENCY_TYPE_UNSPECIFIED VersionDependencyType = 0
	VersionDependencyType_VERSION_DEPENDENCY_TYPE_RUNTIME     VersionDependencyType = 1
	VersionDependencyType_VERSION_DEPENDENCY_TYPE_BUILD       VersionDependencyType = 2
	VersionDependencyType_VERSION_DEPENDENCY_TYPE_TEST        VersionDependencyType = 3
	VersionDependencyType_VERSION_DEPENDENCY_TYPE_DEV         VersionDependencyType = 4
	VersionDependencyType_VERSION_DEPENDENCY_TYPE_PEER        VersionDependencyType = 5
	VersionDependencyType_VERSION_DEPENDENCY_TYPE_OPTIONAL    VersionDependencyType = 6
)

// Enum value maps for VersionDependencyType.
var (
	VersionDependencyType_name = map[int32]string{
		0: "VERSION_DEPENDENCY_TYPE_UNSPECIFIED",
		1: "VERSION_DEPENDENCY_TYPE_RUNTIME",
		2: "VERSION_DEPENDENCY_TYPE_BUILD",
		3: "VERSION_DEPENDENCY_TYPE_TEST",
		4: "VERSION_DEPENDENCY_TYPE_DEV",
		5: "VERSION_DEPENDENCY_TYPE_PEER",
		6: "VERSION_DEPENDENCY_TYPE_OPTIONAL",
	}
	VersionDependencyType_value = map[string]int32{
		"VERSION_DEPENDENCY_TYPE_UNSPECIFIED": 0,
		"VERSION_DEPENDENCY_TYPE_RUNTIME":     1,
		"VERSION_DEPENDENCY_TYPE_BUILD":       2,
		"VERSION_DEPENDENCY_TYPE_TEST":        3,
		"VERSION_DEPENDENCY_TYPE_DEV":         4,
		"VERSION_DEPENDENCY_TYPE_PEER":        5,
		"VERSION_DEPENDENCY_TYPE_OPTIONAL":    6,
	}
)

func (x VersionDependencyType) Enum() *VersionDependencyType {
	p := new(VersionDependencyType)
	*p = x
	return p
}

func (x VersionDependencyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionDependencyType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_config_proto_messages_config_version_proto_enumTypes[4].Descriptor()
}

func (VersionDependencyType) Type() protoreflect.EnumType {
	return &file_pkg_config_proto_messages_config_version_proto_enumTypes[4]
}

func (x VersionDependencyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionDependencyType.Descriptor instead.
func (VersionDependencyType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{4}
}

// ConfigVersion represents a version of configuration
type ConfigVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the version
	VersionId *string `protobuf:"bytes,1,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	// Version number (semantic version)
	Version *string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// Version name/label
	Name *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// Version description
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// Creation timestamp
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// User who created the version
	CreatedBy *string `protobuf:"bytes,6,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	// Environment this version applies to
	Environment *string `protobuf:"bytes,7,opt,name=environment" json:"environment,omitempty"`
	// Version status
	Status *VersionStatus `protobuf:"varint,8,opt,name=status,enum=gcommon.v1.config.VersionStatus" json:"status,omitempty"`
	// Version type
	Type *VersionType `protobuf:"varint,9,opt,name=type,enum=gcommon.v1.config.VersionType" json:"type,omitempty"`
	// Parent version (for branches)
	ParentVersionId *string `protobuf:"bytes,10,opt,name=parent_version_id,json=parentVersionId" json:"parent_version_id,omitempty"`
	// Child versions
	ChildVersionIds []string `protobuf:"bytes,11,rep,name=child_version_ids,json=childVersionIds" json:"child_version_ids,omitempty"`
	// Version tags
	Tags []string `protobuf:"bytes,12,rep,name=tags" json:"tags,omitempty"`
	// Version metadata
	Metadata map[string]string `protobuf:"bytes,13,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Configuration changes in this version
	Changes []*ConfigChange `protobuf:"bytes,14,rep,name=changes" json:"changes,omitempty"`
	// Version checksum
	Checksum *string `protobuf:"bytes,15,opt,name=checksum" json:"checksum,omitempty"`
	// Version size in bytes
	SizeBytes *int64 `protobuf:"varint,16,opt,name=size_bytes,json=sizeBytes" json:"size_bytes,omitempty"`
	// Version approval status
	ApprovalStatus *ApprovalStatus `protobuf:"varint,17,opt,name=approval_status,json=approvalStatus,enum=gcommon.v1.config.ApprovalStatus" json:"approval_status,omitempty"`
	// Version approval info
	ApprovalInfo *ApprovalInfo `protobuf:"bytes,18,opt,name=approval_info,json=approvalInfo" json:"approval_info,omitempty"`
	// Version deployment info
	DeploymentInfo *VersionDeploymentInfo `protobuf:"bytes,19,opt,name=deployment_info,json=deploymentInfo" json:"deployment_info,omitempty"`
	// Version validation results
	ValidationResults []*ValidationResult `protobuf:"bytes,20,rep,name=validation_results,json=validationResults" json:"validation_results,omitempty"`
	// Version quality metrics
	QualityMetrics *VersionQualityMetrics `protobuf:"bytes,21,opt,name=quality_metrics,json=qualityMetrics" json:"quality_metrics,omitempty"`
	// Version dependencies
	Dependencies []*VersionDependency `protobuf:"bytes,22,rep,name=dependencies" json:"dependencies,omitempty"`
	// Version compatibility info
	CompatibilityInfo *VersionCompatibilityInfo `protobuf:"bytes,23,opt,name=compatibility_info,json=compatibilityInfo" json:"compatibility_info,omitempty"`
	// Version promotion history
	PromotionHistory []*VersionPromotionEvent `protobuf:"bytes,24,rep,name=promotion_history,json=promotionHistory" json:"promotion_history,omitempty"`
	// Version artifacts
	Artifacts []*VersionArtifact `protobuf:"bytes,25,rep,name=artifacts" json:"artifacts,omitempty"`
	// Version documentation
	Documentation *string `protobuf:"bytes,26,opt,name=documentation" json:"documentation,omitempty"`
	// Version changelog
	Changelog *string `protobuf:"bytes,27,opt,name=changelog" json:"changelog,omitempty"`
	// Version release notes
	ReleaseNotes  *string `protobuf:"bytes,28,opt,name=release_notes,json=releaseNotes" json:"release_notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigVersion) Reset() {
	*x = ConfigVersion{}
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigVersion) ProtoMessage() {}

func (x *ConfigVersion) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigVersion.ProtoReflect.Descriptor instead.
func (*ConfigVersion) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigVersion) GetVersionId() string {
	if x != nil && x.VersionId != nil {
		return *x.VersionId
	}
	return ""
}

func (x *ConfigVersion) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ConfigVersion) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ConfigVersion) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ConfigVersion) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ConfigVersion) GetCreatedBy() string {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return ""
}

func (x *ConfigVersion) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *ConfigVersion) GetStatus() VersionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return VersionStatus_VERSION_STATUS_UNSPECIFIED
}

func (x *ConfigVersion) GetType() VersionType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return VersionType_VERSION_TYPE_UNSPECIFIED
}

func (x *ConfigVersion) GetParentVersionId() string {
	if x != nil && x.ParentVersionId != nil {
		return *x.ParentVersionId
	}
	return ""
}

func (x *ConfigVersion) GetChildVersionIds() []string {
	if x != nil {
		return x.ChildVersionIds
	}
	return nil
}

func (x *ConfigVersion) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ConfigVersion) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ConfigVersion) GetChanges() []*ConfigChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *ConfigVersion) GetChecksum() string {
	if x != nil && x.Checksum != nil {
		return *x.Checksum
	}
	return ""
}

func (x *ConfigVersion) GetSizeBytes() int64 {
	if x != nil && x.SizeBytes != nil {
		return *x.SizeBytes
	}
	return 0
}

func (x *ConfigVersion) GetApprovalStatus() ApprovalStatus {
	if x != nil && x.ApprovalStatus != nil {
		return *x.ApprovalStatus
	}
	return ApprovalStatus_APPROVAL_STATUS_UNSPECIFIED
}

func (x *ConfigVersion) GetApprovalInfo() *ApprovalInfo {
	if x != nil {
		return x.ApprovalInfo
	}
	return nil
}

func (x *ConfigVersion) GetDeploymentInfo() *VersionDeploymentInfo {
	if x != nil {
		return x.DeploymentInfo
	}
	return nil
}

func (x *ConfigVersion) GetValidationResults() []*ValidationResult {
	if x != nil {
		return x.ValidationResults
	}
	return nil
}

func (x *ConfigVersion) GetQualityMetrics() *VersionQualityMetrics {
	if x != nil {
		return x.QualityMetrics
	}
	return nil
}

func (x *ConfigVersion) GetDependencies() []*VersionDependency {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *ConfigVersion) GetCompatibilityInfo() *VersionCompatibilityInfo {
	if x != nil {
		return x.CompatibilityInfo
	}
	return nil
}

func (x *ConfigVersion) GetPromotionHistory() []*VersionPromotionEvent {
	if x != nil {
		return x.PromotionHistory
	}
	return nil
}

func (x *ConfigVersion) GetArtifacts() []*VersionArtifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *ConfigVersion) GetDocumentation() string {
	if x != nil && x.Documentation != nil {
		return *x.Documentation
	}
	return ""
}

func (x *ConfigVersion) GetChangelog() string {
	if x != nil && x.Changelog != nil {
		return *x.Changelog
	}
	return ""
}

func (x *ConfigVersion) GetReleaseNotes() string {
	if x != nil && x.ReleaseNotes != nil {
		return *x.ReleaseNotes
	}
	return ""
}

// VersionDeploymentInfo represents deployment information for a version
type VersionDeploymentInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deployment status
	Status *VersionDeploymentStatus `protobuf:"varint,1,opt,name=status,enum=gcommon.v1.config.VersionDeploymentStatus" json:"status,omitempty"`
	// Deployment timestamp
	DeployedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=deployed_at,json=deployedAt" json:"deployed_at,omitempty"`
	// Deployment environment
	Environment *string `protobuf:"bytes,3,opt,name=environment" json:"environment,omitempty"`
	// Deployment method
	Method *string `protobuf:"bytes,4,opt,name=method" json:"method,omitempty"`
	// Deployment user
	DeployedBy *string `protobuf:"bytes,5,opt,name=deployed_by,json=deployedBy" json:"deployed_by,omitempty"`
	// Deployment configuration
	Config map[string]string `protobuf:"bytes,6,rep,name=config" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Deployment artifacts
	Artifacts []string `protobuf:"bytes,7,rep,name=artifacts" json:"artifacts,omitempty"`
	// Deployment health
	Health *VersionHealthStatus `protobuf:"varint,8,opt,name=health,enum=gcommon.v1.config.VersionHealthStatus" json:"health,omitempty"`
	// Deployment metrics
	Metrics       map[string]float64 `protobuf:"bytes,9,rep,name=metrics" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionDeploymentInfo) Reset() {
	*x = VersionDeploymentInfo{}
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionDeploymentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionDeploymentInfo) ProtoMessage() {}

func (x *VersionDeploymentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionDeploymentInfo.ProtoReflect.Descriptor instead.
func (*VersionDeploymentInfo) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{1}
}

func (x *VersionDeploymentInfo) GetStatus() VersionDeploymentStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return VersionDeploymentStatus_VERSION_DEPLOYMENT_STATUS_UNSPECIFIED
}

func (x *VersionDeploymentInfo) GetDeployedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeployedAt
	}
	return nil
}

func (x *VersionDeploymentInfo) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *VersionDeploymentInfo) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *VersionDeploymentInfo) GetDeployedBy() string {
	if x != nil && x.DeployedBy != nil {
		return *x.DeployedBy
	}
	return ""
}

func (x *VersionDeploymentInfo) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *VersionDeploymentInfo) GetArtifacts() []string {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *VersionDeploymentInfo) GetHealth() VersionHealthStatus {
	if x != nil && x.Health != nil {
		return *x.Health
	}
	return VersionHealthStatus_VERSION_HEALTH_STATUS_UNSPECIFIED
}

func (x *VersionDeploymentInfo) GetMetrics() map[string]float64 {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// VersionQualityMetrics represents quality metrics for a version
type VersionQualityMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Code quality score
	QualityScore *float64 `protobuf:"fixed64,1,opt,name=quality_score,json=qualityScore" json:"quality_score,omitempty"`
	// Test coverage
	TestCoverage *float64 `protobuf:"fixed64,2,opt,name=test_coverage,json=testCoverage" json:"test_coverage,omitempty"`
	// Security score
	SecurityScore *float64 `protobuf:"fixed64,3,opt,name=security_score,json=securityScore" json:"security_score,omitempty"`
	// Performance score
	PerformanceScore *float64 `protobuf:"fixed64,4,opt,name=performance_score,json=performanceScore" json:"performance_score,omitempty"`
	// Complexity score
	ComplexityScore *float64 `protobuf:"fixed64,5,opt,name=complexity_score,json=complexityScore" json:"complexity_score,omitempty"`
	// Technical debt score
	TechnicalDebtScore *float64 `protobuf:"fixed64,6,opt,name=technical_debt_score,json=technicalDebtScore" json:"technical_debt_score,omitempty"`
	// Quality gate status
	QualityGatePassed *bool `protobuf:"varint,7,opt,name=quality_gate_passed,json=qualityGatePassed" json:"quality_gate_passed,omitempty"`
	// Quality issues
	Issues []*VersionQualityIssue `protobuf:"bytes,8,rep,name=issues" json:"issues,omitempty"`
	// Quality metrics timestamp
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=timestamp" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionQualityMetrics) Reset() {
	*x = VersionQualityMetrics{}
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionQualityMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionQualityMetrics) ProtoMessage() {}

func (x *VersionQualityMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionQualityMetrics.ProtoReflect.Descriptor instead.
func (*VersionQualityMetrics) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{2}
}

func (x *VersionQualityMetrics) GetQualityScore() float64 {
	if x != nil && x.QualityScore != nil {
		return *x.QualityScore
	}
	return 0
}

func (x *VersionQualityMetrics) GetTestCoverage() float64 {
	if x != nil && x.TestCoverage != nil {
		return *x.TestCoverage
	}
	return 0
}

func (x *VersionQualityMetrics) GetSecurityScore() float64 {
	if x != nil && x.SecurityScore != nil {
		return *x.SecurityScore
	}
	return 0
}

func (x *VersionQualityMetrics) GetPerformanceScore() float64 {
	if x != nil && x.PerformanceScore != nil {
		return *x.PerformanceScore
	}
	return 0
}

func (x *VersionQualityMetrics) GetComplexityScore() float64 {
	if x != nil && x.ComplexityScore != nil {
		return *x.ComplexityScore
	}
	return 0
}

func (x *VersionQualityMetrics) GetTechnicalDebtScore() float64 {
	if x != nil && x.TechnicalDebtScore != nil {
		return *x.TechnicalDebtScore
	}
	return 0
}

func (x *VersionQualityMetrics) GetQualityGatePassed() bool {
	if x != nil && x.QualityGatePassed != nil {
		return *x.QualityGatePassed
	}
	return false
}

func (x *VersionQualityMetrics) GetIssues() []*VersionQualityIssue {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *VersionQualityMetrics) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// VersionQualityIssue represents a quality issue
type VersionQualityIssue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Issue type
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Issue severity
	Severity *string `protobuf:"bytes,2,opt,name=severity" json:"severity,omitempty"`
	// Issue description
	Description *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// Issue location
	Location *string `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	// Issue rule
	Rule *string `protobuf:"bytes,5,opt,name=rule" json:"rule,omitempty"`
	// Issue fix suggestion
	FixSuggestion *string `protobuf:"bytes,6,opt,name=fix_suggestion,json=fixSuggestion" json:"fix_suggestion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionQualityIssue) Reset() {
	*x = VersionQualityIssue{}
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionQualityIssue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionQualityIssue) ProtoMessage() {}

func (x *VersionQualityIssue) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionQualityIssue.ProtoReflect.Descriptor instead.
func (*VersionQualityIssue) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{3}
}

func (x *VersionQualityIssue) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *VersionQualityIssue) GetSeverity() string {
	if x != nil && x.Severity != nil {
		return *x.Severity
	}
	return ""
}

func (x *VersionQualityIssue) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *VersionQualityIssue) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *VersionQualityIssue) GetRule() string {
	if x != nil && x.Rule != nil {
		return *x.Rule
	}
	return ""
}

func (x *VersionQualityIssue) GetFixSuggestion() string {
	if x != nil && x.FixSuggestion != nil {
		return *x.FixSuggestion
	}
	return ""
}

// VersionDependency represents a dependency between versions
type VersionDependency struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dependency name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Dependency version
	Version *string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// Dependency type
	Type *VersionDependencyType `protobuf:"varint,3,opt,name=type,enum=gcommon.v1.config.VersionDependencyType" json:"type,omitempty"`
	// Dependency scope
	Scope *string `protobuf:"bytes,4,opt,name=scope" json:"scope,omitempty"`
	// Dependency optional
	Optional *bool `protobuf:"varint,5,opt,name=optional" json:"optional,omitempty"`
	// Dependency constraints
	Constraints []string `protobuf:"bytes,6,rep,name=constraints" json:"constraints,omitempty"`
	// Dependency metadata
	Metadata      map[string]string `protobuf:"bytes,7,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionDependency) Reset() {
	*x = VersionDependency{}
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionDependency) ProtoMessage() {}

func (x *VersionDependency) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionDependency.ProtoReflect.Descriptor instead.
func (*VersionDependency) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{4}
}

func (x *VersionDependency) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VersionDependency) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *VersionDependency) GetType() VersionDependencyType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return VersionDependencyType_VERSION_DEPENDENCY_TYPE_UNSPECIFIED
}

func (x *VersionDependency) GetScope() string {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return ""
}

func (x *VersionDependency) GetOptional() bool {
	if x != nil && x.Optional != nil {
		return *x.Optional
	}
	return false
}

func (x *VersionDependency) GetConstraints() []string {
	if x != nil {
		return x.Constraints
	}
	return nil
}

func (x *VersionDependency) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// VersionCompatibilityInfo represents compatibility information for a version
type VersionCompatibilityInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Backward compatible
	BackwardCompatible *bool `protobuf:"varint,1,opt,name=backward_compatible,json=backwardCompatible" json:"backward_compatible,omitempty"`
	// Forward compatible
	ForwardCompatible *bool `protobuf:"varint,2,opt,name=forward_compatible,json=forwardCompatible" json:"forward_compatible,omitempty"`
	// Breaking changes
	BreakingChanges []string `protobuf:"bytes,3,rep,name=breaking_changes,json=breakingChanges" json:"breaking_changes,omitempty"`
	// Compatibility notes
	Notes *string `protobuf:"bytes,4,opt,name=notes" json:"notes,omitempty"`
	// Minimum version
	MinVersion *string `protobuf:"bytes,5,opt,name=min_version,json=minVersion" json:"min_version,omitempty"`
	// Maximum version
	MaxVersion *string `protobuf:"bytes,6,opt,name=max_version,json=maxVersion" json:"max_version,omitempty"`
	// Deprecated features
	DeprecatedFeatures []string `protobuf:"bytes,7,rep,name=deprecated_features,json=deprecatedFeatures" json:"deprecated_features,omitempty"`
	// Migration guide
	MigrationGuide *string `protobuf:"bytes,8,opt,name=migration_guide,json=migrationGuide" json:"migration_guide,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VersionCompatibilityInfo) Reset() {
	*x = VersionCompatibilityInfo{}
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionCompatibilityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionCompatibilityInfo) ProtoMessage() {}

func (x *VersionCompatibilityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionCompatibilityInfo.ProtoReflect.Descriptor instead.
func (*VersionCompatibilityInfo) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{5}
}

func (x *VersionCompatibilityInfo) GetBackwardCompatible() bool {
	if x != nil && x.BackwardCompatible != nil {
		return *x.BackwardCompatible
	}
	return false
}

func (x *VersionCompatibilityInfo) GetForwardCompatible() bool {
	if x != nil && x.ForwardCompatible != nil {
		return *x.ForwardCompatible
	}
	return false
}

func (x *VersionCompatibilityInfo) GetBreakingChanges() []string {
	if x != nil {
		return x.BreakingChanges
	}
	return nil
}

func (x *VersionCompatibilityInfo) GetNotes() string {
	if x != nil && x.Notes != nil {
		return *x.Notes
	}
	return ""
}

func (x *VersionCompatibilityInfo) GetMinVersion() string {
	if x != nil && x.MinVersion != nil {
		return *x.MinVersion
	}
	return ""
}

func (x *VersionCompatibilityInfo) GetMaxVersion() string {
	if x != nil && x.MaxVersion != nil {
		return *x.MaxVersion
	}
	return ""
}

func (x *VersionCompatibilityInfo) GetDeprecatedFeatures() []string {
	if x != nil {
		return x.DeprecatedFeatures
	}
	return nil
}

func (x *VersionCompatibilityInfo) GetMigrationGuide() string {
	if x != nil && x.MigrationGuide != nil {
		return *x.MigrationGuide
	}
	return ""
}

// VersionPromotionEvent represents a promotion event in version history
type VersionPromotionEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Source environment
	SourceEnvironment *string `protobuf:"bytes,1,opt,name=source_environment,json=sourceEnvironment" json:"source_environment,omitempty"`
	// Target environment
	TargetEnvironment *string `protobuf:"bytes,2,opt,name=target_environment,json=targetEnvironment" json:"target_environment,omitempty"`
	// Promotion timestamp
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
	// Promotion user
	PromotedBy *string `protobuf:"bytes,4,opt,name=promoted_by,json=promotedBy" json:"promoted_by,omitempty"`
	// Promotion reason
	Reason *string `protobuf:"bytes,5,opt,name=reason" json:"reason,omitempty"`
	// Promotion method
	Method *string `protobuf:"bytes,6,opt,name=method" json:"method,omitempty"`
	// Promotion success
	Success *bool `protobuf:"varint,7,opt,name=success" json:"success,omitempty"`
	// Promotion error
	Error *string `protobuf:"bytes,8,opt,name=error" json:"error,omitempty"`
	// Promotion metadata
	Metadata      map[string]string `protobuf:"bytes,9,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionPromotionEvent) Reset() {
	*x = VersionPromotionEvent{}
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionPromotionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionPromotionEvent) ProtoMessage() {}

func (x *VersionPromotionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionPromotionEvent.ProtoReflect.Descriptor instead.
func (*VersionPromotionEvent) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{6}
}

func (x *VersionPromotionEvent) GetSourceEnvironment() string {
	if x != nil && x.SourceEnvironment != nil {
		return *x.SourceEnvironment
	}
	return ""
}

func (x *VersionPromotionEvent) GetTargetEnvironment() string {
	if x != nil && x.TargetEnvironment != nil {
		return *x.TargetEnvironment
	}
	return ""
}

func (x *VersionPromotionEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VersionPromotionEvent) GetPromotedBy() string {
	if x != nil && x.PromotedBy != nil {
		return *x.PromotedBy
	}
	return ""
}

func (x *VersionPromotionEvent) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *VersionPromotionEvent) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *VersionPromotionEvent) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *VersionPromotionEvent) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *VersionPromotionEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// VersionArtifact represents an artifact associated with a version
type VersionArtifact struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Artifact name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Artifact type
	Type *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// Artifact path
	Path *string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	// Artifact size
	Size *int64 `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	// Artifact checksum
	Checksum *string `protobuf:"bytes,5,opt,name=checksum" json:"checksum,omitempty"`
	// Artifact metadata
	Metadata map[string]string `protobuf:"bytes,6,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Artifact timestamp
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionArtifact) Reset() {
	*x = VersionArtifact{}
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionArtifact) ProtoMessage() {}

func (x *VersionArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_version_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionArtifact.ProtoReflect.Descriptor instead.
func (*VersionArtifact) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_messages_config_version_proto_rawDescGZIP(), []int{7}
}

func (x *VersionArtifact) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VersionArtifact) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *VersionArtifact) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *VersionArtifact) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *VersionArtifact) GetChecksum() string {
	if x != nil && x.Checksum != nil {
		return *x.Checksum
	}
	return ""
}

func (x *VersionArtifact) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VersionArtifact) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_pkg_config_proto_messages_config_version_proto protoreflect.FileDescriptor

const file_pkg_config_proto_messages_config_version_proto_rawDesc = "" +
	"\n" +
	".pkg/config/proto/messages/config_version.proto\x12\x11gcommon.v1.config\x1a\x1fgoogle/protobuf/timestamp.proto\x1a-pkg/config/proto/messages/config_change.proto\x1a0pkg/config/proto/messages/config_audit_log.proto\"\x87\f\n" +
	"\rConfigVersion\x12\x1d\n" +
	"\n" +
	"version_id\x18\x01 \x01(\tR\tversionId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\x06 \x01(\tR\tcreatedBy\x12 \n" +
	"\venvironment\x18\a \x01(\tR\venvironment\x128\n" +
	"\x06status\x18\b \x01(\x0e2 .gcommon.v1.config.VersionStatusR\x06status\x122\n" +
	"\x04type\x18\t \x01(\x0e2\x1e.gcommon.v1.config.VersionTypeR\x04type\x12*\n" +
	"\x11parent_version_id\x18\n" +
	" \x01(\tR\x0fparentVersionId\x12*\n" +
	"\x11child_version_ids\x18\v \x03(\tR\x0fchildVersionIds\x12\x12\n" +
	"\x04tags\x18\f \x03(\tR\x04tags\x12J\n" +
	"\bmetadata\x18\r \x03(\v2..gcommon.v1.config.ConfigVersion.MetadataEntryR\bmetadata\x129\n" +
	"\achanges\x18\x0e \x03(\v2\x1f.gcommon.v1.config.ConfigChangeR\achanges\x12\x1a\n" +
	"\bchecksum\x18\x0f \x01(\tR\bchecksum\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x10 \x01(\x03R\tsizeBytes\x12J\n" +
	"\x0fapproval_status\x18\x11 \x01(\x0e2!.gcommon.v1.config.ApprovalStatusR\x0eapprovalStatus\x12D\n" +
	"\rapproval_info\x18\x12 \x01(\v2\x1f.gcommon.v1.config.ApprovalInfoR\fapprovalInfo\x12Q\n" +
	"\x0fdeployment_info\x18\x13 \x01(\v2(.gcommon.v1.config.VersionDeploymentInfoR\x0edeploymentInfo\x12R\n" +
	"\x12validation_results\x18\x14 \x03(\v2#.gcommon.v1.config.ValidationResultR\x11validationResults\x12Q\n" +
	"\x0fquality_metrics\x18\x15 \x01(\v2(.gcommon.v1.config.VersionQualityMetricsR\x0equalityMetrics\x12H\n" +
	"\fdependencies\x18\x16 \x03(\v2$.gcommon.v1.config.VersionDependencyR\fdependencies\x12Z\n" +
	"\x12compatibility_info\x18\x17 \x01(\v2+.gcommon.v1.config.VersionCompatibilityInfoR\x11compatibilityInfo\x12U\n" +
	"\x11promotion_history\x18\x18 \x03(\v2(.gcommon.v1.config.VersionPromotionEventR\x10promotionHistory\x12@\n" +
	"\tartifacts\x18\x19 \x03(\v2\".gcommon.v1.config.VersionArtifactR\tartifacts\x12$\n" +
	"\rdocumentation\x18\x1a \x01(\tR\rdocumentation\x12\x1c\n" +
	"\tchangelog\x18\x1b \x01(\tR\tchangelog\x12#\n" +
	"\rrelease_notes\x18\x1c \x01(\tR\freleaseNotes\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe7\x04\n" +
	"\x15VersionDeploymentInfo\x12B\n" +
	"\x06status\x18\x01 \x01(\x0e2*.gcommon.v1.config.VersionDeploymentStatusR\x06status\x12;\n" +
	"\vdeployed_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"deployedAt\x12 \n" +
	"\venvironment\x18\x03 \x01(\tR\venvironment\x12\x16\n" +
	"\x06method\x18\x04 \x01(\tR\x06method\x12\x1f\n" +
	"\vdeployed_by\x18\x05 \x01(\tR\n" +
	"deployedBy\x12L\n" +
	"\x06config\x18\x06 \x03(\v24.gcommon.v1.config.VersionDeploymentInfo.ConfigEntryR\x06config\x12\x1c\n" +
	"\tartifacts\x18\a \x03(\tR\tartifacts\x12>\n" +
	"\x06health\x18\b \x01(\x0e2&.gcommon.v1.config.VersionHealthStatusR\x06health\x12O\n" +
	"\ametrics\x18\t \x03(\v25.gcommon.v1.config.VersionDeploymentInfo.MetricsEntryR\ametrics\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xbc\x03\n" +
	"\x15VersionQualityMetrics\x12#\n" +
	"\rquality_score\x18\x01 \x01(\x01R\fqualityScore\x12#\n" +
	"\rtest_coverage\x18\x02 \x01(\x01R\ftestCoverage\x12%\n" +
	"\x0esecurity_score\x18\x03 \x01(\x01R\rsecurityScore\x12+\n" +
	"\x11performance_score\x18\x04 \x01(\x01R\x10performanceScore\x12)\n" +
	"\x10complexity_score\x18\x05 \x01(\x01R\x0fcomplexityScore\x120\n" +
	"\x14technical_debt_score\x18\x06 \x01(\x01R\x12technicalDebtScore\x12.\n" +
	"\x13quality_gate_passed\x18\a \x01(\bR\x11qualityGatePassed\x12>\n" +
	"\x06issues\x18\b \x03(\v2&.gcommon.v1.config.VersionQualityIssueR\x06issues\x128\n" +
	"\ttimestamp\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xbe\x01\n" +
	"\x13VersionQualityIssue\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x1a\n" +
	"\bseverity\x18\x02 \x01(\tR\bseverity\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocation\x12\x12\n" +
	"\x04rule\x18\x05 \x01(\tR\x04rule\x12%\n" +
	"\x0efix_suggestion\x18\x06 \x01(\tR\rfixSuggestion\"\xe0\x02\n" +
	"\x11VersionDependency\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12<\n" +
	"\x04type\x18\x03 \x01(\x0e2(.gcommon.v1.config.VersionDependencyTypeR\x04type\x12\x14\n" +
	"\x05scope\x18\x04 \x01(\tR\x05scope\x12\x1a\n" +
	"\boptional\x18\x05 \x01(\bR\boptional\x12 \n" +
	"\vconstraints\x18\x06 \x03(\tR\vconstraints\x12N\n" +
	"\bmetadata\x18\a \x03(\v22.gcommon.v1.config.VersionDependency.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x02\n" +
	"\x18VersionCompatibilityInfo\x12/\n" +
	"\x13backward_compatible\x18\x01 \x01(\bR\x12backwardCompatible\x12-\n" +
	"\x12forward_compatible\x18\x02 \x01(\bR\x11forwardCompatible\x12)\n" +
	"\x10breaking_changes\x18\x03 \x03(\tR\x0fbreakingChanges\x12\x14\n" +
	"\x05notes\x18\x04 \x01(\tR\x05notes\x12\x1f\n" +
	"\vmin_version\x18\x05 \x01(\tR\n" +
	"minVersion\x12\x1f\n" +
	"\vmax_version\x18\x06 \x01(\tR\n" +
	"maxVersion\x12/\n" +
	"\x13deprecated_features\x18\a \x03(\tR\x12deprecatedFeatures\x12'\n" +
	"\x0fmigration_guide\x18\b \x01(\tR\x0emigrationGuide\"\xc1\x03\n" +
	"\x15VersionPromotionEvent\x12-\n" +
	"\x12source_environment\x18\x01 \x01(\tR\x11sourceEnvironment\x12-\n" +
	"\x12target_environment\x18\x02 \x01(\tR\x11targetEnvironment\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1f\n" +
	"\vpromoted_by\x18\x04 \x01(\tR\n" +
	"promotedBy\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12\x16\n" +
	"\x06method\x18\x06 \x01(\tR\x06method\x12\x18\n" +
	"\asuccess\x18\a \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\b \x01(\tR\x05error\x12R\n" +
	"\bmetadata\x18\t \x03(\v26.gcommon.v1.config.VersionPromotionEvent.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc2\x02\n" +
	"\x0fVersionArtifact\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x1a\n" +
	"\bchecksum\x18\x05 \x01(\tR\bchecksum\x12L\n" +
	"\bmetadata\x18\x06 \x03(\v20.gcommon.v1.config.VersionArtifact.MetadataEntryR\bmetadata\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\x91\x02\n" +
	"\rVersionStatus\x12\x1e\n" +
	"\x1aVERSION_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14VERSION_STATUS_DRAFT\x10\x01\x12\x1a\n" +
	"\x16VERSION_STATUS_PENDING\x10\x02\x12\x19\n" +
	"\x15VERSION_STATUS_ACTIVE\x10\x03\x12\x1d\n" +
	"\x19VERSION_STATUS_DEPRECATED\x10\x04\x12\x1b\n" +
	"\x17VERSION_STATUS_ARCHIVED\x10\x05\x12\x1a\n" +
	"\x16VERSION_STATUS_DELETED\x10\x06\x12\x19\n" +
	"\x15VERSION_STATUS_FAILED\x10\a\x12\x1c\n" +
	"\x18VERSION_STATUS_CANCELLED\x10\b*\xf3\x01\n" +
	"\vVersionType\x12\x1c\n" +
	"\x18VERSION_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12VERSION_TYPE_MAJOR\x10\x01\x12\x16\n" +
	"\x12VERSION_TYPE_MINOR\x10\x02\x12\x16\n" +
	"\x12VERSION_TYPE_PATCH\x10\x03\x12\x17\n" +
	"\x13VERSION_TYPE_HOTFIX\x10\x04\x12\x1b\n" +
	"\x17VERSION_TYPE_PRERELEASE\x10\x05\x12\x19\n" +
	"\x15VERSION_TYPE_SNAPSHOT\x10\x06\x12\x17\n" +
	"\x13VERSION_TYPE_BRANCH\x10\a\x12\x14\n" +
	"\x10VERSION_TYPE_TAG\x10\b*\xb7\x02\n" +
	"\x17VersionDeploymentStatus\x12)\n" +
	"%VERSION_DEPLOYMENT_STATUS_UNSPECIFIED\x10\x00\x12%\n" +
	"!VERSION_DEPLOYMENT_STATUS_PENDING\x10\x01\x12)\n" +
	"%VERSION_DEPLOYMENT_STATUS_IN_PROGRESS\x10\x02\x12%\n" +
	"!VERSION_DEPLOYMENT_STATUS_SUCCESS\x10\x03\x12$\n" +
	" VERSION_DEPLOYMENT_STATUS_FAILED\x10\x04\x12)\n" +
	"%VERSION_DEPLOYMENT_STATUS_ROLLED_BACK\x10\x05\x12'\n" +
	"#VERSION_DEPLOYMENT_STATUS_CANCELLED\x10\x06*\xcb\x01\n" +
	"\x13VersionHealthStatus\x12%\n" +
	"!VERSION_HEALTH_STATUS_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dVERSION_HEALTH_STATUS_HEALTHY\x10\x01\x12\"\n" +
	"\x1eVERSION_HEALTH_STATUS_DEGRADED\x10\x02\x12#\n" +
	"\x1fVERSION_HEALTH_STATUS_UNHEALTHY\x10\x03\x12!\n" +
	"\x1dVERSION_HEALTH_STATUS_UNKNOWN\x10\x04*\x93\x02\n" +
	"\x15VersionDependencyType\x12'\n" +
	"#VERSION_DEPENDENCY_TYPE_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fVERSION_DEPENDENCY_TYPE_RUNTIME\x10\x01\x12!\n" +
	"\x1dVERSION_DEPENDENCY_TYPE_BUILD\x10\x02\x12 \n" +
	"\x1cVERSION_DEPENDENCY_TYPE_TEST\x10\x03\x12\x1f\n" +
	"\x1bVERSION_DEPENDENCY_TYPE_DEV\x10\x04\x12 \n" +
	"\x1cVERSION_DEPENDENCY_TYPE_PEER\x10\x05\x12$\n" +
	" VERSION_DEPENDENCY_TYPE_OPTIONAL\x10\x06B\xb5\x01\n" +
	"\x15com.gcommon.v1.configB\x12ConfigVersionProtoP\x01Z\"../../../../pkg/config/pb;configpb\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Config\xca\x02\x11Gcommon\\V1\\Config\xe2\x02\x1dGcommon\\V1\\Config\\GPBMetadata\xea\x02\x13Gcommon::V1::Configb\beditionsp\xe8\a"

var (
	file_pkg_config_proto_messages_config_version_proto_rawDescOnce sync.Once
	file_pkg_config_proto_messages_config_version_proto_rawDescData []byte
)

func file_pkg_config_proto_messages_config_version_proto_rawDescGZIP() []byte {
	file_pkg_config_proto_messages_config_version_proto_rawDescOnce.Do(func() {
		file_pkg_config_proto_messages_config_version_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_config_proto_messages_config_version_proto_rawDesc), len(file_pkg_config_proto_messages_config_version_proto_rawDesc)))
	})
	return file_pkg_config_proto_messages_config_version_proto_rawDescData
}

var file_pkg_config_proto_messages_config_version_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_pkg_config_proto_messages_config_version_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_pkg_config_proto_messages_config_version_proto_goTypes = []any{
	(VersionStatus)(0),               // 0: gcommon.v1.config.VersionStatus
	(VersionType)(0),                 // 1: gcommon.v1.config.VersionType
	(VersionDeploymentStatus)(0),     // 2: gcommon.v1.config.VersionDeploymentStatus
	(VersionHealthStatus)(0),         // 3: gcommon.v1.config.VersionHealthStatus
	(VersionDependencyType)(0),       // 4: gcommon.v1.config.VersionDependencyType
	(*ConfigVersion)(nil),            // 5: gcommon.v1.config.ConfigVersion
	(*VersionDeploymentInfo)(nil),    // 6: gcommon.v1.config.VersionDeploymentInfo
	(*VersionQualityMetrics)(nil),    // 7: gcommon.v1.config.VersionQualityMetrics
	(*VersionQualityIssue)(nil),      // 8: gcommon.v1.config.VersionQualityIssue
	(*VersionDependency)(nil),        // 9: gcommon.v1.config.VersionDependency
	(*VersionCompatibilityInfo)(nil), // 10: gcommon.v1.config.VersionCompatibilityInfo
	(*VersionPromotionEvent)(nil),    // 11: gcommon.v1.config.VersionPromotionEvent
	(*VersionArtifact)(nil),          // 12: gcommon.v1.config.VersionArtifact
	nil,                              // 13: gcommon.v1.config.ConfigVersion.MetadataEntry
	nil,                              // 14: gcommon.v1.config.VersionDeploymentInfo.ConfigEntry
	nil,                              // 15: gcommon.v1.config.VersionDeploymentInfo.MetricsEntry
	nil,                              // 16: gcommon.v1.config.VersionDependency.MetadataEntry
	nil,                              // 17: gcommon.v1.config.VersionPromotionEvent.MetadataEntry
	nil,                              // 18: gcommon.v1.config.VersionArtifact.MetadataEntry
	(*timestamppb.Timestamp)(nil),    // 19: google.protobuf.Timestamp
	(*ConfigChange)(nil),             // 20: gcommon.v1.config.ConfigChange
	(ApprovalStatus)(0),              // 21: gcommon.v1.config.ApprovalStatus
	(*ApprovalInfo)(nil),             // 22: gcommon.v1.config.ApprovalInfo
	(*ValidationResult)(nil),         // 23: gcommon.v1.config.ValidationResult
}
var file_pkg_config_proto_messages_config_version_proto_depIdxs = []int32{
	19, // 0: gcommon.v1.config.ConfigVersion.created_at:type_name -> google.protobuf.Timestamp
	0,  // 1: gcommon.v1.config.ConfigVersion.status:type_name -> gcommon.v1.config.VersionStatus
	1,  // 2: gcommon.v1.config.ConfigVersion.type:type_name -> gcommon.v1.config.VersionType
	13, // 3: gcommon.v1.config.ConfigVersion.metadata:type_name -> gcommon.v1.config.ConfigVersion.MetadataEntry
	20, // 4: gcommon.v1.config.ConfigVersion.changes:type_name -> gcommon.v1.config.ConfigChange
	21, // 5: gcommon.v1.config.ConfigVersion.approval_status:type_name -> gcommon.v1.config.ApprovalStatus
	22, // 6: gcommon.v1.config.ConfigVersion.approval_info:type_name -> gcommon.v1.config.ApprovalInfo
	6,  // 7: gcommon.v1.config.ConfigVersion.deployment_info:type_name -> gcommon.v1.config.VersionDeploymentInfo
	23, // 8: gcommon.v1.config.ConfigVersion.validation_results:type_name -> gcommon.v1.config.ValidationResult
	7,  // 9: gcommon.v1.config.ConfigVersion.quality_metrics:type_name -> gcommon.v1.config.VersionQualityMetrics
	9,  // 10: gcommon.v1.config.ConfigVersion.dependencies:type_name -> gcommon.v1.config.VersionDependency
	10, // 11: gcommon.v1.config.ConfigVersion.compatibility_info:type_name -> gcommon.v1.config.VersionCompatibilityInfo
	11, // 12: gcommon.v1.config.ConfigVersion.promotion_history:type_name -> gcommon.v1.config.VersionPromotionEvent
	12, // 13: gcommon.v1.config.ConfigVersion.artifacts:type_name -> gcommon.v1.config.VersionArtifact
	2,  // 14: gcommon.v1.config.VersionDeploymentInfo.status:type_name -> gcommon.v1.config.VersionDeploymentStatus
	19, // 15: gcommon.v1.config.VersionDeploymentInfo.deployed_at:type_name -> google.protobuf.Timestamp
	14, // 16: gcommon.v1.config.VersionDeploymentInfo.config:type_name -> gcommon.v1.config.VersionDeploymentInfo.ConfigEntry
	3,  // 17: gcommon.v1.config.VersionDeploymentInfo.health:type_name -> gcommon.v1.config.VersionHealthStatus
	15, // 18: gcommon.v1.config.VersionDeploymentInfo.metrics:type_name -> gcommon.v1.config.VersionDeploymentInfo.MetricsEntry
	8,  // 19: gcommon.v1.config.VersionQualityMetrics.issues:type_name -> gcommon.v1.config.VersionQualityIssue
	19, // 20: gcommon.v1.config.VersionQualityMetrics.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 21: gcommon.v1.config.VersionDependency.type:type_name -> gcommon.v1.config.VersionDependencyType
	16, // 22: gcommon.v1.config.VersionDependency.metadata:type_name -> gcommon.v1.config.VersionDependency.MetadataEntry
	19, // 23: gcommon.v1.config.VersionPromotionEvent.timestamp:type_name -> google.protobuf.Timestamp
	17, // 24: gcommon.v1.config.VersionPromotionEvent.metadata:type_name -> gcommon.v1.config.VersionPromotionEvent.MetadataEntry
	18, // 25: gcommon.v1.config.VersionArtifact.metadata:type_name -> gcommon.v1.config.VersionArtifact.MetadataEntry
	19, // 26: gcommon.v1.config.VersionArtifact.timestamp:type_name -> google.protobuf.Timestamp
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_pkg_config_proto_messages_config_version_proto_init() }
func file_pkg_config_proto_messages_config_version_proto_init() {
	if File_pkg_config_proto_messages_config_version_proto != nil {
		return
	}
	file_pkg_config_proto_messages_config_change_proto_init()
	file_pkg_config_proto_messages_config_audit_log_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_config_proto_messages_config_version_proto_rawDesc), len(file_pkg_config_proto_messages_config_version_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_config_proto_messages_config_version_proto_goTypes,
		DependencyIndexes: file_pkg_config_proto_messages_config_version_proto_depIdxs,
		EnumInfos:         file_pkg_config_proto_messages_config_version_proto_enumTypes,
		MessageInfos:      file_pkg_config_proto_messages_config_version_proto_msgTypes,
	}.Build()
	File_pkg_config_proto_messages_config_version_proto = out.File
	file_pkg_config_proto_messages_config_version_proto_goTypes = nil
	file_pkg_config_proto_messages_config_version_proto_depIdxs = nil
}
