// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/config/proto/messages/config_watch.proto

//go:build protoopaque

package configpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Represents a configuration watch event.
// Notifies about configuration changes in real-time.
type ConfigWatch struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_WatchId     *string                `protobuf:"bytes,1,opt,name=watch_id,json=watchId"`
	xxx_hidden_KeyPattern  *string                `protobuf:"bytes,2,opt,name=key_pattern,json=keyPattern"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_WatchType   *string                `protobuf:"bytes,4,opt,name=watch_type,json=watchType"`
	xxx_hidden_CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt"`
	xxx_hidden_CreatedBy   *string                `protobuf:"bytes,6,opt,name=created_by,json=createdBy"`
	xxx_hidden_Options     map[string]string      `protobuf:"bytes,7,rep,name=options" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Active      bool                   `protobuf:"varint,8,opt,name=active"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ConfigWatch) Reset() {
	*x = ConfigWatch{}
	mi := &file_pkg_config_proto_messages_config_watch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigWatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigWatch) ProtoMessage() {}

func (x *ConfigWatch) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_watch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConfigWatch) GetWatchId() string {
	if x != nil {
		if x.xxx_hidden_WatchId != nil {
			return *x.xxx_hidden_WatchId
		}
		return ""
	}
	return ""
}

func (x *ConfigWatch) GetKeyPattern() string {
	if x != nil {
		if x.xxx_hidden_KeyPattern != nil {
			return *x.xxx_hidden_KeyPattern
		}
		return ""
	}
	return ""
}

func (x *ConfigWatch) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ConfigWatch) GetWatchType() string {
	if x != nil {
		if x.xxx_hidden_WatchType != nil {
			return *x.xxx_hidden_WatchType
		}
		return ""
	}
	return ""
}

func (x *ConfigWatch) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *ConfigWatch) GetCreatedBy() string {
	if x != nil {
		if x.xxx_hidden_CreatedBy != nil {
			return *x.xxx_hidden_CreatedBy
		}
		return ""
	}
	return ""
}

func (x *ConfigWatch) GetOptions() map[string]string {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *ConfigWatch) GetActive() bool {
	if x != nil {
		return x.xxx_hidden_Active
	}
	return false
}

func (x *ConfigWatch) SetWatchId(v string) {
	x.xxx_hidden_WatchId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *ConfigWatch) SetKeyPattern(v string) {
	x.xxx_hidden_KeyPattern = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *ConfigWatch) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *ConfigWatch) SetWatchType(v string) {
	x.xxx_hidden_WatchType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *ConfigWatch) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *ConfigWatch) SetCreatedBy(v string) {
	x.xxx_hidden_CreatedBy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *ConfigWatch) SetOptions(v map[string]string) {
	x.xxx_hidden_Options = v
}

func (x *ConfigWatch) SetActive(v bool) {
	x.xxx_hidden_Active = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *ConfigWatch) HasWatchId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConfigWatch) HasKeyPattern() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ConfigWatch) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ConfigWatch) HasWatchType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ConfigWatch) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *ConfigWatch) HasCreatedBy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ConfigWatch) HasActive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ConfigWatch) ClearWatchId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_WatchId = nil
}

func (x *ConfigWatch) ClearKeyPattern() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_KeyPattern = nil
}

func (x *ConfigWatch) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *ConfigWatch) ClearWatchType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_WatchType = nil
}

func (x *ConfigWatch) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *ConfigWatch) ClearCreatedBy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_CreatedBy = nil
}

func (x *ConfigWatch) ClearActive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Active = false
}

type ConfigWatch_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Watch session identifier
	WatchId *string
	// Configuration key pattern being watched
	KeyPattern *string
	// Configuration namespace or section
	Namespace *string
	// Type of watch (KEY_CHANGE, NAMESPACE_CHANGE, ALL_CHANGES)
	WatchType *string
	// Timestamp when watch was created
	CreatedAt *timestamppb.Timestamp
	// User or service that created the watch
	CreatedBy *string
	// Watch configuration options
	Options map[string]string
	// Whether the watch is currently active
	Active *bool
}

func (b0 ConfigWatch_builder) Build() *ConfigWatch {
	m0 := &ConfigWatch{}
	b, x := &b0, m0
	_, _ = b, x
	if b.WatchId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_WatchId = b.WatchId
	}
	if b.KeyPattern != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_KeyPattern = b.KeyPattern
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.WatchType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_WatchType = b.WatchType
	}
	x.xxx_hidden_CreatedAt = b.CreatedAt
	if b.CreatedBy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_CreatedBy = b.CreatedBy
	}
	x.xxx_hidden_Options = b.Options
	if b.Active != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_Active = *b.Active
	}
	return m0
}

// *
// Represents a configuration change event from a watch.
type ConfigWatchEvent struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_WatchId     *string                `protobuf:"bytes,1,opt,name=watch_id,json=watchId"`
	xxx_hidden_Key         *string                `protobuf:"bytes,2,opt,name=key"`
	xxx_hidden_OldValue    *anypb.Any             `protobuf:"bytes,3,opt,name=old_value,json=oldValue"`
	xxx_hidden_NewValue    *anypb.Any             `protobuf:"bytes,4,opt,name=new_value,json=newValue"`
	xxx_hidden_ChangeType  *string                `protobuf:"bytes,5,opt,name=change_type,json=changeType"`
	xxx_hidden_Timestamp   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,7,opt,name=namespace"`
	xxx_hidden_Metadata    map[string]string      `protobuf:"bytes,8,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ConfigWatchEvent) Reset() {
	*x = ConfigWatchEvent{}
	mi := &file_pkg_config_proto_messages_config_watch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigWatchEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigWatchEvent) ProtoMessage() {}

func (x *ConfigWatchEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_messages_config_watch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConfigWatchEvent) GetWatchId() string {
	if x != nil {
		if x.xxx_hidden_WatchId != nil {
			return *x.xxx_hidden_WatchId
		}
		return ""
	}
	return ""
}

func (x *ConfigWatchEvent) GetKey() string {
	if x != nil {
		if x.xxx_hidden_Key != nil {
			return *x.xxx_hidden_Key
		}
		return ""
	}
	return ""
}

func (x *ConfigWatchEvent) GetOldValue() *anypb.Any {
	if x != nil {
		return x.xxx_hidden_OldValue
	}
	return nil
}

func (x *ConfigWatchEvent) GetNewValue() *anypb.Any {
	if x != nil {
		return x.xxx_hidden_NewValue
	}
	return nil
}

func (x *ConfigWatchEvent) GetChangeType() string {
	if x != nil {
		if x.xxx_hidden_ChangeType != nil {
			return *x.xxx_hidden_ChangeType
		}
		return ""
	}
	return ""
}

func (x *ConfigWatchEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *ConfigWatchEvent) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ConfigWatchEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ConfigWatchEvent) SetWatchId(v string) {
	x.xxx_hidden_WatchId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *ConfigWatchEvent) SetKey(v string) {
	x.xxx_hidden_Key = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *ConfigWatchEvent) SetOldValue(v *anypb.Any) {
	x.xxx_hidden_OldValue = v
}

func (x *ConfigWatchEvent) SetNewValue(v *anypb.Any) {
	x.xxx_hidden_NewValue = v
}

func (x *ConfigWatchEvent) SetChangeType(v string) {
	x.xxx_hidden_ChangeType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *ConfigWatchEvent) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *ConfigWatchEvent) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *ConfigWatchEvent) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *ConfigWatchEvent) HasWatchId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConfigWatchEvent) HasKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ConfigWatchEvent) HasOldValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OldValue != nil
}

func (x *ConfigWatchEvent) HasNewValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_NewValue != nil
}

func (x *ConfigWatchEvent) HasChangeType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ConfigWatchEvent) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *ConfigWatchEvent) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ConfigWatchEvent) ClearWatchId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_WatchId = nil
}

func (x *ConfigWatchEvent) ClearKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Key = nil
}

func (x *ConfigWatchEvent) ClearOldValue() {
	x.xxx_hidden_OldValue = nil
}

func (x *ConfigWatchEvent) ClearNewValue() {
	x.xxx_hidden_NewValue = nil
}

func (x *ConfigWatchEvent) ClearChangeType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ChangeType = nil
}

func (x *ConfigWatchEvent) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *ConfigWatchEvent) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Namespace = nil
}

type ConfigWatchEvent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Watch session identifier
	WatchId *string
	// Configuration key that changed
	Key *string
	// Previous value (if any)
	OldValue *anypb.Any
	// New value
	NewValue *anypb.Any
	// Type of change (CREATE, UPDATE, DELETE)
	ChangeType *string
	// Timestamp of the change
	Timestamp *timestamppb.Timestamp
	// Configuration namespace or section
	Namespace *string
	// Additional event metadata
	Metadata map[string]string
}

func (b0 ConfigWatchEvent_builder) Build() *ConfigWatchEvent {
	m0 := &ConfigWatchEvent{}
	b, x := &b0, m0
	_, _ = b, x
	if b.WatchId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_WatchId = b.WatchId
	}
	if b.Key != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_Key = b.Key
	}
	x.xxx_hidden_OldValue = b.OldValue
	x.xxx_hidden_NewValue = b.NewValue
	if b.ChangeType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_ChangeType = b.ChangeType
	}
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

var File_pkg_config_proto_messages_config_watch_proto protoreflect.FileDescriptor

const file_pkg_config_proto_messages_config_watch_proto_rawDesc = "" +
	"\n" +
	",pkg/config/proto/messages/config_watch.proto\x12\x11gcommon.v1.config\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\"\xfb\x02\n" +
	"\vConfigWatch\x12\x19\n" +
	"\bwatch_id\x18\x01 \x01(\tR\awatchId\x12\x1f\n" +
	"\vkey_pattern\x18\x02 \x01(\tR\n" +
	"keyPattern\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x1d\n" +
	"\n" +
	"watch_type\x18\x04 \x01(\tR\twatchType\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\x06 \x01(\tR\tcreatedBy\x12E\n" +
	"\aoptions\x18\a \x03(\v2+.gcommon.v1.config.ConfigWatch.OptionsEntryR\aoptions\x12\x16\n" +
	"\x06active\x18\b \x01(\bR\x06active\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaa\x03\n" +
	"\x10ConfigWatchEvent\x12\x19\n" +
	"\bwatch_id\x18\x01 \x01(\tR\awatchId\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x121\n" +
	"\told_value\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\boldValue\x121\n" +
	"\tnew_value\x18\x04 \x01(\v2\x14.google.protobuf.AnyR\bnewValue\x12\x1f\n" +
	"\vchange_type\x18\x05 \x01(\tR\n" +
	"changeType\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1c\n" +
	"\tnamespace\x18\a \x01(\tR\tnamespace\x12M\n" +
	"\bmetadata\x18\b \x03(\v21.gcommon.v1.config.ConfigWatchEvent.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xbb\x01\n" +
	"\x15com.gcommon.v1.configB\x10ConfigWatchProtoP\x01Z\"../../../../pkg/config/pb;configpb\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Config\xca\x02\x11Gcommon\\V1\\Config\xe2\x02\x1dGcommon\\V1\\Config\\GPBMetadata\xea\x02\x13Gcommon::V1::Config\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_config_proto_messages_config_watch_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_config_proto_messages_config_watch_proto_goTypes = []any{
	(*ConfigWatch)(nil),           // 0: gcommon.v1.config.ConfigWatch
	(*ConfigWatchEvent)(nil),      // 1: gcommon.v1.config.ConfigWatchEvent
	nil,                           // 2: gcommon.v1.config.ConfigWatch.OptionsEntry
	nil,                           // 3: gcommon.v1.config.ConfigWatchEvent.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 5: google.protobuf.Any
}
var file_pkg_config_proto_messages_config_watch_proto_depIdxs = []int32{
	4, // 0: gcommon.v1.config.ConfigWatch.created_at:type_name -> google.protobuf.Timestamp
	2, // 1: gcommon.v1.config.ConfigWatch.options:type_name -> gcommon.v1.config.ConfigWatch.OptionsEntry
	5, // 2: gcommon.v1.config.ConfigWatchEvent.old_value:type_name -> google.protobuf.Any
	5, // 3: gcommon.v1.config.ConfigWatchEvent.new_value:type_name -> google.protobuf.Any
	4, // 4: gcommon.v1.config.ConfigWatchEvent.timestamp:type_name -> google.protobuf.Timestamp
	3, // 5: gcommon.v1.config.ConfigWatchEvent.metadata:type_name -> gcommon.v1.config.ConfigWatchEvent.MetadataEntry
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_config_proto_messages_config_watch_proto_init() }
func file_pkg_config_proto_messages_config_watch_proto_init() {
	if File_pkg_config_proto_messages_config_watch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_config_proto_messages_config_watch_proto_rawDesc), len(file_pkg_config_proto_messages_config_watch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_config_proto_messages_config_watch_proto_goTypes,
		DependencyIndexes: file_pkg_config_proto_messages_config_watch_proto_depIdxs,
		MessageInfos:      file_pkg_config_proto_messages_config_watch_proto_msgTypes,
	}.Build()
	File_pkg_config_proto_messages_config_watch_proto = out.File
	file_pkg_config_proto_messages_config_watch_proto_goTypes = nil
	file_pkg_config_proto_messages_config_watch_proto_depIdxs = nil
}
