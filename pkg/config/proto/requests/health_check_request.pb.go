// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/config/proto/requests/health_check_request.proto

//go:build !protoopaque

package configpb

import (
	proto "../../../../pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// HealthCheckRequest verifies the health of the configuration service.
type HealthCheckRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Target namespace to check
	Namespace *string `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_pkg_config_proto_requests_health_check_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_requests_health_check_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HealthCheckRequest) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *HealthCheckRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *HealthCheckRequest) SetNamespace(v string) {
	x.Namespace = &v
}

func (x *HealthCheckRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *HealthCheckRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return x.Namespace != nil
}

func (x *HealthCheckRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *HealthCheckRequest) ClearNamespace() {
	x.Namespace = nil
}

func (x *HealthCheckRequest) ClearMetadata() {
	x.Metadata = nil
}

type HealthCheckRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Target namespace to check
	Namespace *string
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 HealthCheckRequest_builder) Build() *HealthCheckRequest {
	m0 := &HealthCheckRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Namespace = b.Namespace
	x.Metadata = b.Metadata
	return m0
}

var File_pkg_config_proto_requests_health_check_request_proto protoreflect.FileDescriptor

const file_pkg_config_proto_requests_health_check_request_proto_rawDesc = "" +
	"\n" +
	"4pkg/config/proto/requests/health_check_request.proto\x12\x11gcommon.v1.config\x1a!google/protobuf/go_features.proto\x1a0pkg/common/proto/messages/request_metadata.proto\"r\n" +
	"\x12HealthCheckRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadataB\xc5\x01\n" +
	"\x15com.gcommon.v1.configB\x17HealthCheckRequestProtoP\x01Z%../../../../pkg/config/proto;configpb\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Config\xca\x02\x11Gcommon\\V1\\Config\xe2\x02\x1dGcommon\\V1\\Config\\GPBMetadata\xea\x02\x13Gcommon::V1::Config\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_config_proto_requests_health_check_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_config_proto_requests_health_check_request_proto_goTypes = []any{
	(*HealthCheckRequest)(nil),    // 0: gcommon.v1.config.HealthCheckRequest
	(*proto.RequestMetadata)(nil), // 1: gcommon.v1.common.RequestMetadata
}
var file_pkg_config_proto_requests_health_check_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.config.HealthCheckRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_config_proto_requests_health_check_request_proto_init() }
func file_pkg_config_proto_requests_health_check_request_proto_init() {
	if File_pkg_config_proto_requests_health_check_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_config_proto_requests_health_check_request_proto_rawDesc), len(file_pkg_config_proto_requests_health_check_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_config_proto_requests_health_check_request_proto_goTypes,
		DependencyIndexes: file_pkg_config_proto_requests_health_check_request_proto_depIdxs,
		MessageInfos:      file_pkg_config_proto_requests_health_check_request_proto_msgTypes,
	}.Build()
	File_pkg_config_proto_requests_health_check_request_proto = out.File
	file_pkg_config_proto_requests_health_check_request_proto_goTypes = nil
	file_pkg_config_proto_requests_health_check_request_proto_depIdxs = nil
}
