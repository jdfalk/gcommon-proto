// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: pkg/config/proto/batching_settings.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchingSettings struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled        bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_BatchSize      int32                  `protobuf:"varint,2,opt,name=batch_size,json=batchSize"`
	xxx_hidden_TimeoutMinutes int32                  `protobuf:"varint,3,opt,name=timeout_minutes,json=timeoutMinutes"`
	xxx_hidden_GroupingKey    *string                `protobuf:"bytes,4,opt,name=grouping_key,json=groupingKey"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *BatchingSettings) Reset() {
	*x = BatchingSettings{}
	mi := &file_pkg_config_proto_batching_settings_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchingSettings) ProtoMessage() {}

func (x *BatchingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_batching_settings_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatchingSettings) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *BatchingSettings) GetBatchSize() int32 {
	if x != nil {
		return x.xxx_hidden_BatchSize
	}
	return 0
}

func (x *BatchingSettings) GetTimeoutMinutes() int32 {
	if x != nil {
		return x.xxx_hidden_TimeoutMinutes
	}
	return 0
}

func (x *BatchingSettings) GetGroupingKey() string {
	if x != nil {
		if x.xxx_hidden_GroupingKey != nil {
			return *x.xxx_hidden_GroupingKey
		}
		return ""
	}
	return ""
}

func (x *BatchingSettings) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *BatchingSettings) SetBatchSize(v int32) {
	x.xxx_hidden_BatchSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *BatchingSettings) SetTimeoutMinutes(v int32) {
	x.xxx_hidden_TimeoutMinutes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *BatchingSettings) SetGroupingKey(v string) {
	x.xxx_hidden_GroupingKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *BatchingSettings) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BatchingSettings) HasBatchSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *BatchingSettings) HasTimeoutMinutes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *BatchingSettings) HasGroupingKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *BatchingSettings) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *BatchingSettings) ClearBatchSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_BatchSize = 0
}

func (x *BatchingSettings) ClearTimeoutMinutes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TimeoutMinutes = 0
}

func (x *BatchingSettings) ClearGroupingKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_GroupingKey = nil
}

type BatchingSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether batching is enabled
	Enabled *bool
	// Batch size
	BatchSize *int32
	// Batch timeout in minutes
	TimeoutMinutes *int32
	// Batch grouping key
	GroupingKey *string
}

func (b0 BatchingSettings_builder) Build() *BatchingSettings {
	m0 := &BatchingSettings{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.BatchSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_BatchSize = *b.BatchSize
	}
	if b.TimeoutMinutes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_TimeoutMinutes = *b.TimeoutMinutes
	}
	if b.GroupingKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_GroupingKey = b.GroupingKey
	}
	return m0
}

var File_pkg_config_proto_batching_settings_proto protoreflect.FileDescriptor

const file_pkg_config_proto_batching_settings_proto_rawDesc = "" +
	"\n" +
	"(pkg/config/proto/batching_settings.proto\x12\x11gcommon.v1.config\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\"pkg/config/proto/audit_level.proto\x1a'pkg/config/proto/backup_frequency.proto\x1a#pkg/config/proto/channel_type.proto\x1a'pkg/config/proto/config_data_type.proto\x1a(pkg/config/proto/deprecation_level.proto\x1a&pkg/config/proto/metadata_status.proto\x1a+pkg/config/proto/notification_trigger.proto\"\x97\x01\n" +
	"\x10BatchingSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x02 \x01(\x05R\tbatchSize\x12'\n" +
	"\x0ftimeout_minutes\x18\x03 \x01(\x05R\x0etimeoutMinutes\x12!\n" +
	"\fgrouping_key\x18\x04 \x01(\tR\vgroupingKeyB\xc8\x01\n" +
	"\x15com.gcommon.v1.configB\x15BatchingSettingsProtoP\x01Z*github.com/jdfalk/gcommon/pkg/config/proto\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Config\xca\x02\x11Gcommon\\V1\\Config\xe2\x02\x1dGcommon\\V1\\Config\\GPBMetadata\xea\x02\x13Gcommon::V1::Config\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_config_proto_batching_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_config_proto_batching_settings_proto_goTypes = []any{
	(*BatchingSettings)(nil), // 0: gcommon.v1.config.BatchingSettings
}
var file_pkg_config_proto_batching_settings_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_config_proto_batching_settings_proto_init() }
func file_pkg_config_proto_batching_settings_proto_init() {
	if File_pkg_config_proto_batching_settings_proto != nil {
		return
	}
	file_pkg_config_proto_audit_level_proto_init()
	file_pkg_config_proto_backup_frequency_proto_init()
	file_pkg_config_proto_channel_type_proto_init()
	file_pkg_config_proto_config_data_type_proto_init()
	file_pkg_config_proto_deprecation_level_proto_init()
	file_pkg_config_proto_metadata_status_proto_init()
	file_pkg_config_proto_notification_trigger_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_config_proto_batching_settings_proto_rawDesc), len(file_pkg_config_proto_batching_settings_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_config_proto_batching_settings_proto_goTypes,
		DependencyIndexes: file_pkg_config_proto_batching_settings_proto_depIdxs,
		MessageInfos:      file_pkg_config_proto_batching_settings_proto_msgTypes,
	}.Build()
	File_pkg_config_proto_batching_settings_proto = out.File
	file_pkg_config_proto_batching_settings_proto_goTypes = nil
	file_pkg_config_proto_batching_settings_proto_depIdxs = nil
}
