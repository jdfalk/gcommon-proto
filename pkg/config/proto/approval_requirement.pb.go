// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/config/proto/approval_requirement.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApprovalRequirement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether approval is required
	Required *bool `protobuf:"varint,1,opt,name=required" json:"required,omitempty"`
	// Number of approvals required
	ApprovalCount *int32 `protobuf:"varint,2,opt,name=approval_count,json=approvalCount" json:"approval_count,omitempty"`
	// Required approver roles
	ApproverRoles []string `protobuf:"bytes,3,rep,name=approver_roles,json=approverRoles" json:"approver_roles,omitempty"`
	// Required approver users
	ApproverUsers []string `protobuf:"bytes,4,rep,name=approver_users,json=approverUsers" json:"approver_users,omitempty"`
	// Approval policy
	Policy *string `protobuf:"bytes,5,opt,name=policy" json:"policy,omitempty"`
	// Approval workflow
	Workflow *string `protobuf:"bytes,6,opt,name=workflow" json:"workflow,omitempty"`
	// Auto-approval conditions
	AutoApprovalConditions []string `protobuf:"bytes,7,rep,name=auto_approval_conditions,json=autoApprovalConditions" json:"auto_approval_conditions,omitempty"`
	// Approval timeout
	ApprovalTimeoutHours *int32 `protobuf:"varint,8,opt,name=approval_timeout_hours,json=approvalTimeoutHours" json:"approval_timeout_hours,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ApprovalRequirement) Reset() {
	*x = ApprovalRequirement{}
	mi := &file_pkg_config_proto_approval_requirement_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApprovalRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalRequirement) ProtoMessage() {}

func (x *ApprovalRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_config_proto_approval_requirement_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalRequirement.ProtoReflect.Descriptor instead.
func (*ApprovalRequirement) Descriptor() ([]byte, []int) {
	return file_pkg_config_proto_approval_requirement_proto_rawDescGZIP(), []int{0}
}

func (x *ApprovalRequirement) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *ApprovalRequirement) GetApprovalCount() int32 {
	if x != nil && x.ApprovalCount != nil {
		return *x.ApprovalCount
	}
	return 0
}

func (x *ApprovalRequirement) GetApproverRoles() []string {
	if x != nil {
		return x.ApproverRoles
	}
	return nil
}

func (x *ApprovalRequirement) GetApproverUsers() []string {
	if x != nil {
		return x.ApproverUsers
	}
	return nil
}

func (x *ApprovalRequirement) GetPolicy() string {
	if x != nil && x.Policy != nil {
		return *x.Policy
	}
	return ""
}

func (x *ApprovalRequirement) GetWorkflow() string {
	if x != nil && x.Workflow != nil {
		return *x.Workflow
	}
	return ""
}

func (x *ApprovalRequirement) GetAutoApprovalConditions() []string {
	if x != nil {
		return x.AutoApprovalConditions
	}
	return nil
}

func (x *ApprovalRequirement) GetApprovalTimeoutHours() int32 {
	if x != nil && x.ApprovalTimeoutHours != nil {
		return *x.ApprovalTimeoutHours
	}
	return 0
}

var File_pkg_config_proto_approval_requirement_proto protoreflect.FileDescriptor

const file_pkg_config_proto_approval_requirement_proto_rawDesc = "" +
	"\n" +
	"+pkg/config/proto/approval_requirement.proto\x12\x11gcommon.v1.config\x1a\x1fgoogle/protobuf/timestamp.proto\x1a'pkg/config/proto/config_data_type.proto\x1a(pkg/config/proto/deprecation_level.proto\x1a\"pkg/config/proto/audit_level.proto\x1a#pkg/config/proto/channel_type.proto\x1a+pkg/config/proto/notification_trigger.proto\x1a'pkg/config/proto/backup_frequency.proto\x1a&pkg/config/proto/metadata_status.proto\"\xca\x02\n" +
	"\x13ApprovalRequirement\x12\x1a\n" +
	"\brequired\x18\x01 \x01(\bR\brequired\x12%\n" +
	"\x0eapproval_count\x18\x02 \x01(\x05R\rapprovalCount\x12%\n" +
	"\x0eapprover_roles\x18\x03 \x03(\tR\rapproverRoles\x12%\n" +
	"\x0eapprover_users\x18\x04 \x03(\tR\rapproverUsers\x12\x16\n" +
	"\x06policy\x18\x05 \x01(\tR\x06policy\x12\x1a\n" +
	"\bworkflow\x18\x06 \x01(\tR\bworkflow\x128\n" +
	"\x18auto_approval_conditions\x18\a \x03(\tR\x16autoApprovalConditions\x124\n" +
	"\x16approval_timeout_hours\x18\b \x01(\x05R\x14approvalTimeoutHoursB\xc3\x01\n" +
	"\x15com.gcommon.v1.configB\x18ApprovalRequirementProtoP\x01Z*github.com/jdfalk/gcommon/pkg/config/proto\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Config\xca\x02\x11Gcommon\\V1\\Config\xe2\x02\x1dGcommon\\V1\\Config\\GPBMetadata\xea\x02\x13Gcommon::V1::Configb\beditionsp\xe8\a"

var (
	file_pkg_config_proto_approval_requirement_proto_rawDescOnce sync.Once
	file_pkg_config_proto_approval_requirement_proto_rawDescData []byte
)

func file_pkg_config_proto_approval_requirement_proto_rawDescGZIP() []byte {
	file_pkg_config_proto_approval_requirement_proto_rawDescOnce.Do(func() {
		file_pkg_config_proto_approval_requirement_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_config_proto_approval_requirement_proto_rawDesc), len(file_pkg_config_proto_approval_requirement_proto_rawDesc)))
	})
	return file_pkg_config_proto_approval_requirement_proto_rawDescData
}

var file_pkg_config_proto_approval_requirement_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_config_proto_approval_requirement_proto_goTypes = []any{
	(*ApprovalRequirement)(nil), // 0: gcommon.v1.config.ApprovalRequirement
}
var file_pkg_config_proto_approval_requirement_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_config_proto_approval_requirement_proto_init() }
func file_pkg_config_proto_approval_requirement_proto_init() {
	if File_pkg_config_proto_approval_requirement_proto != nil {
		return
	}
	file_pkg_config_proto_config_data_type_proto_init()
	file_pkg_config_proto_deprecation_level_proto_init()
	file_pkg_config_proto_audit_level_proto_init()
	file_pkg_config_proto_channel_type_proto_init()
	file_pkg_config_proto_notification_trigger_proto_init()
	file_pkg_config_proto_backup_frequency_proto_init()
	file_pkg_config_proto_metadata_status_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_config_proto_approval_requirement_proto_rawDesc), len(file_pkg_config_proto_approval_requirement_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_config_proto_approval_requirement_proto_goTypes,
		DependencyIndexes: file_pkg_config_proto_approval_requirement_proto_depIdxs,
		MessageInfos:      file_pkg_config_proto_approval_requirement_proto_msgTypes,
	}.Build()
	File_pkg_config_proto_approval_requirement_proto = out.File
	file_pkg_config_proto_approval_requirement_proto_goTypes = nil
	file_pkg_config_proto_approval_requirement_proto_depIdxs = nil
}
