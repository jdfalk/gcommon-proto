// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/web/proto/file_upload.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FileUpload message definition.
type FileUpload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the uploaded file
	FileName *string `protobuf:"bytes,1,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	// MIME type of the file
	ContentType *MimeType `protobuf:"bytes,2,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	// Raw file bytes
	Data []byte `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	// Destination path on server
	Destination   *string `protobuf:"bytes,4,opt,name=destination" json:"destination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUpload) Reset() {
	*x = FileUpload{}
	mi := &file_pkg_web_proto_file_upload_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUpload) ProtoMessage() {}

func (x *FileUpload) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_file_upload_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUpload.ProtoReflect.Descriptor instead.
func (*FileUpload) Descriptor() ([]byte, []int) {
	return file_pkg_web_proto_file_upload_proto_rawDescGZIP(), []int{0}
}

func (x *FileUpload) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *FileUpload) GetContentType() *MimeType {
	if x != nil {
		return x.ContentType
	}
	return nil
}

func (x *FileUpload) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileUpload) GetDestination() string {
	if x != nil && x.Destination != nil {
		return *x.Destination
	}
	return ""
}

var File_pkg_web_proto_file_upload_proto protoreflect.FileDescriptor

const file_pkg_web_proto_file_upload_proto_rawDesc = "" +
	"\n" +
	"\x1fpkg/web/proto/file_upload.proto\x12\x0egcommon.v1.web\x1a\x1dpkg/web/proto/mime_type.proto\"\x9c\x01\n" +
	"\n" +
	"FileUpload\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12;\n" +
	"\fcontent_type\x18\x02 \x01(\v2\x18.gcommon.v1.web.MimeTypeR\vcontentType\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12 \n" +
	"\vdestination\x18\x04 \x01(\tR\vdestinationB\xa8\x01\n" +
	"\x12com.gcommon.v1.webB\x0fFileUploadProtoP\x01Z'github.com/jdfalk/gcommon/pkg/web/proto\xa2\x02\x03GVW\xaa\x02\x0eGcommon.V1.Web\xca\x02\x0eGcommon\\V1\\Web\xe2\x02\x1aGcommon\\V1\\Web\\GPBMetadata\xea\x02\x10Gcommon::V1::Webb\beditionsp\xe8\a"

var (
	file_pkg_web_proto_file_upload_proto_rawDescOnce sync.Once
	file_pkg_web_proto_file_upload_proto_rawDescData []byte
)

func file_pkg_web_proto_file_upload_proto_rawDescGZIP() []byte {
	file_pkg_web_proto_file_upload_proto_rawDescOnce.Do(func() {
		file_pkg_web_proto_file_upload_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_web_proto_file_upload_proto_rawDesc), len(file_pkg_web_proto_file_upload_proto_rawDesc)))
	})
	return file_pkg_web_proto_file_upload_proto_rawDescData
}

var file_pkg_web_proto_file_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_web_proto_file_upload_proto_goTypes = []any{
	(*FileUpload)(nil), // 0: gcommon.v1.web.FileUpload
	(*MimeType)(nil),   // 1: gcommon.v1.web.MimeType
}
var file_pkg_web_proto_file_upload_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.web.FileUpload.content_type:type_name -> gcommon.v1.web.MimeType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_web_proto_file_upload_proto_init() }
func file_pkg_web_proto_file_upload_proto_init() {
	if File_pkg_web_proto_file_upload_proto != nil {
		return
	}
	file_pkg_web_proto_mime_type_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_web_proto_file_upload_proto_rawDesc), len(file_pkg_web_proto_file_upload_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_web_proto_file_upload_proto_goTypes,
		DependencyIndexes: file_pkg_web_proto_file_upload_proto_depIdxs,
		MessageInfos:      file_pkg_web_proto_file_upload_proto_msgTypes,
	}.Build()
	File_pkg_web_proto_file_upload_proto = out.File
	file_pkg_web_proto_file_upload_proto_goTypes = nil
	file_pkg_web_proto_file_upload_proto_depIdxs = nil
}
