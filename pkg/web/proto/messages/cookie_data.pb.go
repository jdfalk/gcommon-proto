// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/web/proto/messages/cookie_data.proto

//go:build !protoopaque

package webpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CookieData struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Cookie name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Cookie value
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	// Cookie path
	Path *string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	// Cookie domain
	Domain *string `protobuf:"bytes,4,opt,name=domain" json:"domain,omitempty"`
	// Expiration timestamp
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
	// Whether cookie is HTTP only
	HttpOnly *bool `protobuf:"varint,6,opt,name=http_only,json=httpOnly" json:"http_only,omitempty"`
	// Whether cookie is Secure
	Secure *bool `protobuf:"varint,7,opt,name=secure" json:"secure,omitempty"`
	// SameSite policy
	SameSite      *CookieSameSite `protobuf:"varint,8,opt,name=same_site,json=sameSite,enum=gcommon.v1.web.CookieSameSite" json:"same_site,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CookieData) Reset() {
	*x = CookieData{}
	mi := &file_pkg_web_proto_messages_cookie_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CookieData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CookieData) ProtoMessage() {}

func (x *CookieData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_messages_cookie_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CookieData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CookieData) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *CookieData) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *CookieData) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *CookieData) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *CookieData) GetHttpOnly() bool {
	if x != nil && x.HttpOnly != nil {
		return *x.HttpOnly
	}
	return false
}

func (x *CookieData) GetSecure() bool {
	if x != nil && x.Secure != nil {
		return *x.Secure
	}
	return false
}

func (x *CookieData) GetSameSite() CookieSameSite {
	if x != nil && x.SameSite != nil {
		return *x.SameSite
	}
	return CookieSameSite_COOKIE_SAME_SITE_UNSPECIFIED
}

func (x *CookieData) SetName(v string) {
	x.Name = &v
}

func (x *CookieData) SetValue(v string) {
	x.Value = &v
}

func (x *CookieData) SetPath(v string) {
	x.Path = &v
}

func (x *CookieData) SetDomain(v string) {
	x.Domain = &v
}

func (x *CookieData) SetExpiresAt(v *timestamppb.Timestamp) {
	x.ExpiresAt = v
}

func (x *CookieData) SetHttpOnly(v bool) {
	x.HttpOnly = &v
}

func (x *CookieData) SetSecure(v bool) {
	x.Secure = &v
}

func (x *CookieData) SetSameSite(v CookieSameSite) {
	x.SameSite = &v
}

func (x *CookieData) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *CookieData) HasValue() bool {
	if x == nil {
		return false
	}
	return x.Value != nil
}

func (x *CookieData) HasPath() bool {
	if x == nil {
		return false
	}
	return x.Path != nil
}

func (x *CookieData) HasDomain() bool {
	if x == nil {
		return false
	}
	return x.Domain != nil
}

func (x *CookieData) HasExpiresAt() bool {
	if x == nil {
		return false
	}
	return x.ExpiresAt != nil
}

func (x *CookieData) HasHttpOnly() bool {
	if x == nil {
		return false
	}
	return x.HttpOnly != nil
}

func (x *CookieData) HasSecure() bool {
	if x == nil {
		return false
	}
	return x.Secure != nil
}

func (x *CookieData) HasSameSite() bool {
	if x == nil {
		return false
	}
	return x.SameSite != nil
}

func (x *CookieData) ClearName() {
	x.Name = nil
}

func (x *CookieData) ClearValue() {
	x.Value = nil
}

func (x *CookieData) ClearPath() {
	x.Path = nil
}

func (x *CookieData) ClearDomain() {
	x.Domain = nil
}

func (x *CookieData) ClearExpiresAt() {
	x.ExpiresAt = nil
}

func (x *CookieData) ClearHttpOnly() {
	x.HttpOnly = nil
}

func (x *CookieData) ClearSecure() {
	x.Secure = nil
}

func (x *CookieData) ClearSameSite() {
	x.SameSite = nil
}

type CookieData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Cookie name
	Name *string
	// Cookie value
	Value *string
	// Cookie path
	Path *string
	// Cookie domain
	Domain *string
	// Expiration timestamp
	ExpiresAt *timestamppb.Timestamp
	// Whether cookie is HTTP only
	HttpOnly *bool
	// Whether cookie is Secure
	Secure *bool
	// SameSite policy
	SameSite *CookieSameSite
}

func (b0 CookieData_builder) Build() *CookieData {
	m0 := &CookieData{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Value = b.Value
	x.Path = b.Path
	x.Domain = b.Domain
	x.ExpiresAt = b.ExpiresAt
	x.HttpOnly = b.HttpOnly
	x.Secure = b.Secure
	x.SameSite = b.SameSite
	return m0
}

var File_pkg_web_proto_messages_cookie_data_proto protoreflect.FileDescriptor

const file_pkg_web_proto_messages_cookie_data_proto_rawDesc = "" +
	"\n" +
	"(pkg/web/proto/messages/cookie_data.proto\x12\x0egcommon.v1.web\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a*pkg/web/proto/enums/cookie_same_site.proto\"\x8f\x02\n" +
	"\n" +
	"CookieData\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x16\n" +
	"\x06domain\x18\x04 \x01(\tR\x06domain\x129\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12\x1b\n" +
	"\thttp_only\x18\x06 \x01(\bR\bhttpOnly\x12\x16\n" +
	"\x06secure\x18\a \x01(\bR\x06secure\x12;\n" +
	"\tsame_site\x18\b \x01(\x0e2\x1e.gcommon.v1.web.CookieSameSiteR\bsameSiteB\xa5\x01\n" +
	"\x12com.gcommon.v1.webB\x0fCookieDataProtoP\x01Z\x1c../../../../pkg/web/pb;webpb\xa2\x02\x03GVW\xaa\x02\x0eGcommon.V1.Web\xca\x02\x0eGcommon\\V1\\Web\xe2\x02\x1aGcommon\\V1\\Web\\GPBMetadata\xea\x02\x10Gcommon::V1::Web\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_web_proto_messages_cookie_data_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_web_proto_messages_cookie_data_proto_goTypes = []any{
	(*CookieData)(nil),            // 0: gcommon.v1.web.CookieData
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
	(CookieSameSite)(0),           // 2: gcommon.v1.web.CookieSameSite
}
var file_pkg_web_proto_messages_cookie_data_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.web.CookieData.expires_at:type_name -> google.protobuf.Timestamp
	2, // 1: gcommon.v1.web.CookieData.same_site:type_name -> gcommon.v1.web.CookieSameSite
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_web_proto_messages_cookie_data_proto_init() }
func file_pkg_web_proto_messages_cookie_data_proto_init() {
	if File_pkg_web_proto_messages_cookie_data_proto != nil {
		return
	}
	file_pkg_web_proto_enums_cookie_same_site_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_web_proto_messages_cookie_data_proto_rawDesc), len(file_pkg_web_proto_messages_cookie_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_web_proto_messages_cookie_data_proto_goTypes,
		DependencyIndexes: file_pkg_web_proto_messages_cookie_data_proto_depIdxs,
		MessageInfos:      file_pkg_web_proto_messages_cookie_data_proto_msgTypes,
	}.Build()
	File_pkg_web_proto_messages_cookie_data_proto = out.File
	file_pkg_web_proto_messages_cookie_data_proto_goTypes = nil
	file_pkg_web_proto_messages_cookie_data_proto_depIdxs = nil
}
