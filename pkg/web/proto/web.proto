// file: pkg/web/proto/web.proto
edition = "2023";

package gcommon.v1.web;


import "google/protobuf/go_features.proto";

option go_package = "github.com/jdfalk/gcommon/pkg/web/proto;webpb";
option features.(pb.go).api_level = API_HYBRID;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/any.proto";
import "google/protobuf/field_mask.proto";
import "pkg/common/proto/common.proto";

// WebService provides HTTP server and web framework functionality
service WebService {
  // Create an HTTP server
  rpc CreateServer(CreateServerRequest) returns (CreateServerResponse);

  // Start a server
  rpc StartServer(StartServerRequest) returns (StartServerResponse);

  // Stop a server
  rpc StopServer(StopServerRequest) returns (StopServerResponse);

  // Get server status
  rpc GetServerStatus(GetServerStatusRequest) returns (GetServerStatusResponse);

  // List servers
  rpc ListServers(ListServersRequest) returns (ListServersResponse);

  // Register a route
  rpc RegisterRoute(RegisterRouteRequest) returns (RegisterRouteResponse);

  // Unregister a route
  rpc UnregisterRoute(UnregisterRouteRequest) returns (UnregisterRouteResponse);

  // List routes
  rpc ListRoutes(ListRoutesRequest) returns (ListRoutesResponse);

  // Add middleware
  rpc AddMiddleware(AddMiddlewareRequest) returns (AddMiddlewareResponse);

  // Remove middleware
  rpc RemoveMiddleware(RemoveMiddlewareRequest) returns (RemoveMiddlewareResponse);

  // List middleware
  rpc ListMiddleware(ListMiddlewareRequest) returns (ListMiddlewareResponse);

  // Get server metrics
  rpc GetServerMetrics(GetServerMetricsRequest) returns (GetServerMetricsResponse);

  // Get route metrics
  rpc GetRouteMetrics(GetRouteMetricsRequest) returns (GetRouteMetricsResponse);

  // Handle HTTP request
  rpc HandleRequest(HandleRequestRequest) returns (HandleRequestResponse);

  // Stream server events
  rpc StreamServerEvents(StreamServerEventsRequest) returns (stream ServerEvent);
}

// WebAdminService provides web server administration
service WebAdminService {
  // Configure global settings
  rpc ConfigureGlobal(ConfigureGlobalRequest) returns (ConfigureGlobalResponse);

  // Update server configuration
  rpc UpdateServerConfig(UpdateServerConfigRequest) returns (UpdateServerConfigResponse);

  // Get server logs
  rpc GetServerLogs(GetServerLogsRequest) returns (GetServerLogsResponse);

  // Get access logs
  rpc GetAccessLogs(GetAccessLogsRequest) returns (GetAccessLogsResponse);

  // Reload server configuration
  rpc ReloadServerConfig(ReloadServerConfigRequest) returns (ReloadServerConfigResponse);

  // Get SSL certificate info
  rpc GetSSLCertificateInfo(GetSSLCertificateInfoRequest) returns (GetSSLCertificateInfoResponse);

  // Update SSL certificate
  rpc UpdateSSLCertificate(UpdateSSLCertificateRequest) returns (UpdateSSLCertificateResponse);

  // Get server health
  rpc GetServerHealth(GetServerHealthRequest) returns (GetServerHealthResponse);

  // Export server configuration
  rpc ExportServerConfig(ExportServerConfigRequest) returns (ExportServerConfigResponse);

  // Import server configuration
  rpc ImportServerConfig(ImportServerConfigRequest) returns (ImportServerConfigResponse);
}

// Create server request
message CreateServerRequest {
  // Server configuration
  ServerConfig config = 1;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 2;
}

// Server configuration
message ServerConfig {
  // Server name
  string name = 1;

  // Server address
  string address = 2;

  // Server port
  int32 port = 3;

  // TLS configuration
  TLSConfig tls_config = 4;

  // HTTP configuration
  HTTPConfig http_config = 5;

  // Timeout configuration
  TimeoutConfig timeout_config = 6;

  // Security configuration
  SecurityConfig security_config = 7;

  // Middleware configurations
  repeated MiddlewareConfig middleware = 8;

  // Static file serving
  StaticFileConfig static_config = 9;

  // Server attributes
  map<string, string> attributes = 10;
}

// TLS configuration
message TLSConfig {
  // Enable TLS
  bool enabled = 1;

  // Certificate file path
  string cert_file = 2;

  // Private key file path
  string key_file = 3;

  // CA certificate file path
  string ca_file = 4;

  // Minimum TLS version
  string min_version = 5;

  // Maximum TLS version
  string max_version = 6;

  // Cipher suites
  repeated string cipher_suites = 7;

  // Client certificate verification
  ClientCertVerification client_cert_verification = 8;

  // Certificate auto-renewal
  bool auto_renewal = 9;
}

// Client certificate verification enumeration
enum ClientCertVerification {
  CLIENT_CERT_VERIFICATION_UNSPECIFIED = 0;
  CLIENT_CERT_VERIFICATION_NONE = 1;
  CLIENT_CERT_VERIFICATION_REQUEST = 2;
  CLIENT_CERT_VERIFICATION_REQUIRE = 3;
}

// HTTP configuration
message HTTPConfig {
  // Maximum header size
  int32 max_header_size_bytes = 1;

  // Maximum body size
  int64 max_body_size_bytes = 2;

  // Enable HTTP/2
  bool enable_http2 = 3;

  // Enable compression
  bool enable_compression = 4;

  // Compression level
  int32 compression_level = 5;

  // Compression types
  repeated string compression_types = 6;

  // CORS configuration
  CORSConfig cors_config = 7;

  // Request ID header
  string request_id_header = 8;

  // Enable keep-alive
  bool enable_keep_alive = 9;

  // Keep-alive timeout
  google.protobuf.Duration keep_alive_timeout = 10;
}

// CORS configuration
message CORSConfig {
  // Enable CORS
  bool enabled = 1;

  // Allowed origins
  repeated string allowed_origins = 2;

  // Allowed methods
  repeated string allowed_methods = 3;

  // Allowed headers
  repeated string allowed_headers = 4;

  // Exposed headers
  repeated string exposed_headers = 5;

  // Allow credentials
  bool allow_credentials = 6;

  // Max age
  google.protobuf.Duration max_age = 7;
}

// Timeout configuration
message TimeoutConfig {
  // Read timeout
  google.protobuf.Duration read_timeout = 1;

  // Write timeout
  google.protobuf.Duration write_timeout = 2;

  // Idle timeout
  google.protobuf.Duration idle_timeout = 3;

  // Request timeout
  google.protobuf.Duration request_timeout = 4;

  // Shutdown timeout
  google.protobuf.Duration shutdown_timeout = 5;
}

// Security configuration
message SecurityConfig {
  // Rate limiting
  RateLimitConfig rate_limit = 1;

  // IP filtering
  IPFilterConfig ip_filter = 2;

  // Authentication configuration
  AuthenticationConfig authentication = 3;

  // Security headers
  SecurityHeadersConfig security_headers = 4;

  // Request validation
  RequestValidationConfig request_validation = 5;
}

// Rate limiting configuration
message RateLimitConfig {
  // Enable rate limiting
  bool enabled = 1;

  // Requests per second
  int32 requests_per_second = 2;

  // Burst size
  int32 burst_size = 3;

  // Rate limit strategy
  RateLimitStrategy strategy = 4;

  // Rate limit key extractor
  string key_extractor = 5;

  // Skip conditions
  repeated string skip_conditions = 6;
}

// Rate limit strategy enumeration
enum RateLimitStrategy {
  RATE_LIMIT_STRATEGY_UNSPECIFIED = 0;
  RATE_LIMIT_STRATEGY_TOKEN_BUCKET = 1;
  RATE_LIMIT_STRATEGY_FIXED_WINDOW = 2;
  RATE_LIMIT_STRATEGY_SLIDING_WINDOW = 3;
  RATE_LIMIT_STRATEGY_LEAKY_BUCKET = 4;
}

// IP filtering configuration
message IPFilterConfig {
  // Enable IP filtering
  bool enabled = 1;

  // Allowed IP addresses/ranges
  repeated string allowed_ips = 2;

  // Blocked IP addresses/ranges
  repeated string blocked_ips = 3;

  // Filter mode
  IPFilterMode mode = 4;

  // Trusted proxies
  repeated string trusted_proxies = 5;
}

// IP filter mode enumeration
enum IPFilterMode {
  IP_FILTER_MODE_UNSPECIFIED = 0;
  IP_FILTER_MODE_WHITELIST = 1;
  IP_FILTER_MODE_BLACKLIST = 2;
}

// Authentication configuration
message AuthenticationConfig {
  // Enable authentication
  bool enabled = 1;

  // Authentication schemes
  repeated AuthScheme schemes = 2;

  // Default scheme
  string default_scheme = 3;

  // Skip paths
  repeated string skip_paths = 4;

  // JWT configuration
  JWTConfig jwt_config = 5;

  // Basic auth configuration
  BasicAuthConfig basic_auth_config = 6;
}

// Authentication scheme
message AuthScheme {
  // Scheme name
  string name = 1;

  // Scheme type
  AuthSchemeType type = 2;

  // Scheme configuration
  google.protobuf.Any config = 3;

  // Enabled status
  bool enabled = 4;
}

// Authentication scheme type enumeration
enum AuthSchemeType {
  AUTH_SCHEME_TYPE_UNSPECIFIED = 0;
  AUTH_SCHEME_TYPE_BASIC = 1;
  AUTH_SCHEME_TYPE_BEARER = 2;
  AUTH_SCHEME_TYPE_JWT = 3;
  AUTH_SCHEME_TYPE_API_KEY = 4;
  AUTH_SCHEME_TYPE_OAUTH2 = 5;
}

// JWT configuration
message JWTConfig {
  // Secret key
  string secret = 1;

  // Public key
  string public_key = 2;

  // Algorithm
  string algorithm = 3;

  // Issuer
  string issuer = 4;

  // Audience
  repeated string audience = 5;

  // Token expiration
  google.protobuf.Duration expiration = 6;

  // Claims mapping
  map<string, string> claims_mapping = 7;
}

// Basic authentication configuration
message BasicAuthConfig {
  // Realm
  string realm = 1;

  // User credentials
  map<string, string> users = 2;

  // Password hash algorithm
  string hash_algorithm = 3;
}

// Security headers configuration
message SecurityHeadersConfig {
  // Enable security headers
  bool enabled = 1;

  // Content Security Policy
  string content_security_policy = 2;

  // X-Frame-Options
  string x_frame_options = 3;

  // X-Content-Type-Options
  string x_content_type_options = 4;

  // X-XSS-Protection
  string x_xss_protection = 5;

  // Strict-Transport-Security
  string strict_transport_security = 6;

  // Referrer-Policy
  string referrer_policy = 7;

  // Custom headers
  map<string, string> custom_headers = 8;
}

// Request validation configuration
message RequestValidationConfig {
  // Enable request validation
  bool enabled = 1;

  // Maximum request size
  int64 max_request_size_bytes = 2;

  // Allowed content types
  repeated string allowed_content_types = 3;

  // Validate JSON schema
  bool validate_json_schema = 4;

  // JSON schema definitions
  map<string, string> json_schemas = 5;

  // Custom validators
  repeated string custom_validators = 6;
}

// Middleware configuration
message MiddlewareConfig {
  // Middleware name
  string name = 1;

  // Middleware type
  MiddlewareType type = 2;

  // Middleware order/priority
  int32 order = 3;

  // Middleware configuration
  google.protobuf.Any config = 4;

  // Enabled status
  bool enabled = 5;

  // Apply to paths
  repeated string paths = 6;

  // Skip paths
  repeated string skip_paths = 7;
}

// Middleware type enumeration
enum MiddlewareType {
  MIDDLEWARE_TYPE_UNSPECIFIED = 0;
  MIDDLEWARE_TYPE_LOGGING = 1;
  MIDDLEWARE_TYPE_AUTHENTICATION = 2;
  MIDDLEWARE_TYPE_AUTHORIZATION = 3;
  MIDDLEWARE_TYPE_RATE_LIMITING = 4;
  MIDDLEWARE_TYPE_COMPRESSION = 5;
  MIDDLEWARE_TYPE_CORS = 6;
  MIDDLEWARE_TYPE_SECURITY_HEADERS = 7;
  MIDDLEWARE_TYPE_REQUEST_VALIDATION = 8;
  MIDDLEWARE_TYPE_RESPONSE_TRANSFORMATION = 9;
  MIDDLEWARE_TYPE_CUSTOM = 10;
}

// Static file configuration
message StaticFileConfig {
  // Enable static file serving
  bool enabled = 1;

  // Static file directory
  string directory = 2;

  // URL prefix
  string url_prefix = 3;

  // Index files
  repeated string index_files = 4;

  // Enable directory browsing
  bool enable_directory_browsing = 5;

  // Cache control header
  string cache_control = 6;

  // File compression
  bool enable_compression = 7;
}

// Create server response
message CreateServerResponse {
  // Success status
  bool success = 1;

  // Server information
  ServerInfo server = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Server information
message ServerInfo {
  // Server ID
  string server_id = 1;

  // Server configuration
  ServerConfig config = 2;

  // Server status
  ServerStatus status = 3;

  // Server statistics
  ServerStats stats = 4;

  // Creation time
  google.protobuf.Timestamp created_at = 5;

  // Last updated time
  google.protobuf.Timestamp updated_at = 6;
}

// Server status enumeration
enum ServerStatus {
  SERVER_STATUS_UNSPECIFIED = 0;
  SERVER_STATUS_CREATED = 1;
  SERVER_STATUS_STARTING = 2;
  SERVER_STATUS_RUNNING = 3;
  SERVER_STATUS_STOPPING = 4;
  SERVER_STATUS_STOPPED = 5;
  SERVER_STATUS_ERROR = 6;
}

// Server statistics
message ServerStats {
  // Total requests handled
  int64 total_requests = 1;

  // Active connections
  int32 active_connections = 2;

  // Requests per second
  double requests_per_second = 3;

  // Average response time
  google.protobuf.Duration avg_response_time = 4;

  // Error count
  int64 error_count = 5;

  // Bytes sent
  int64 bytes_sent = 6;

  // Bytes received
  int64 bytes_received = 7;

  // Uptime
  google.protobuf.Duration uptime = 8;
}

// Start server request
message StartServerRequest {
  // Server ID
  string server_id = 1;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 2;
}

// Start server response
message StartServerResponse {
  // Success status
  bool success = 1;

  // Server status
  ServerStatus status = 2;

  // Listen address
  string listen_address = 3;

  // Error information
  gcommon.v1.common.Error error = 4;
}

// Stop server request
message StopServerRequest {
  // Server ID
  string server_id = 1;

  // Graceful shutdown timeout
  google.protobuf.Duration graceful_timeout = 2;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 3;
}

// Stop server response
message StopServerResponse {
  // Success status
  bool success = 1;

  // Server status
  ServerStatus status = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Get server status request
message GetServerStatusRequest {
  // Server ID
  string server_id = 1;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 2;
}

// Get server status response
message GetServerStatusResponse {
  // Server information
  ServerInfo server = 1;

  // Error information
  gcommon.v1.common.Error error = 2;
}

// List servers request
message ListServersRequest {
  // Status filter
  ServerStatus status = 1;

  // Name pattern filter
  string name_pattern = 2;

  // Pagination options
  gcommon.v1.common.Pagination pagination = 3;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 4;
}

// List servers response
message ListServersResponse {
  // Server information
  repeated ServerInfo servers = 1;

  // Pagination information
  gcommon.v1.common.Pagination pagination = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Register route request
message RegisterRouteRequest {
  // Server ID
  string server_id = 1;

  // Route configuration
  RouteConfig route = 2;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 3;
}

// Route configuration
message RouteConfig {
  // Route name
  string name = 1;

  // HTTP method
  string method = 2;

  // Route path
  string path = 3;

  // Handler configuration
  HandlerConfig handler = 4;

  // Route middleware
  repeated MiddlewareConfig middleware = 5;

  // Route attributes
  map<string, string> attributes = 6;

  // Route timeout
  google.protobuf.Duration timeout = 7;

  // Enable caching
  bool enable_caching = 8;

  // Cache TTL
  google.protobuf.Duration cache_ttl = 9;
}

// Handler configuration
message HandlerConfig {
  // Handler type
  HandlerType type = 1;

  // Handler configuration
  google.protobuf.Any config = 2;

  // Handler target (URL, function name, etc.)
  string target = 3;

  // Handler options
  map<string, string> options = 4;
}

// Handler type enumeration
enum HandlerType {
  HANDLER_TYPE_UNSPECIFIED = 0;
  HANDLER_TYPE_STATIC = 1;
  HANDLER_TYPE_PROXY = 2;
  HANDLER_TYPE_FUNCTION = 3;
  HANDLER_TYPE_REDIRECT = 4;
  HANDLER_TYPE_TEMPLATE = 5;
  HANDLER_TYPE_WEBSOCKET = 6;
  HANDLER_TYPE_GRPC = 7;
}

// Register route response
message RegisterRouteResponse {
  // Success status
  bool success = 1;

  // Route information
  RouteInfo route = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Route information
message RouteInfo {
  // Route ID
  string route_id = 1;

  // Route configuration
  RouteConfig config = 2;

  // Route statistics
  RouteStats stats = 3;

  // Creation time
  google.protobuf.Timestamp created_at = 4;

  // Last updated time
  google.protobuf.Timestamp updated_at = 5;
}

// Route statistics
message RouteStats {
  // Total requests
  int64 total_requests = 1;

  // Success count
  int64 success_count = 2;

  // Error count
  int64 error_count = 3;

  // Average response time
  google.protobuf.Duration avg_response_time = 4;

  // Response time percentiles
  ResponseTimePercentiles response_time_percentiles = 5;

  // Status code distribution
  map<string, int64> status_codes = 6;

  // Last request time
  google.protobuf.Timestamp last_request_time = 7;
}

// Response time percentiles
message ResponseTimePercentiles {
  // 50th percentile
  google.protobuf.Duration p50 = 1;

  // 90th percentile
  google.protobuf.Duration p90 = 2;

  // 95th percentile
  google.protobuf.Duration p95 = 3;

  // 99th percentile
  google.protobuf.Duration p99 = 4;
}

// Unregister route request
message UnregisterRouteRequest {
  // Server ID
  string server_id = 1;

  // Route ID
  string route_id = 2;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 3;
}

// Unregister route response
message UnregisterRouteResponse {
  // Success status
  bool success = 1;

  // Error information
  gcommon.v1.common.Error error = 2;
}

// List routes request
message ListRoutesRequest {
  // Server ID
  string server_id = 1;

  // Method filter
  string method = 2;

  // Path pattern filter
  string path_pattern = 3;

  // Pagination options
  gcommon.v1.common.Pagination pagination = 4;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 5;
}

// List routes response
message ListRoutesResponse {
  // Route information
  repeated RouteInfo routes = 1;

  // Pagination information
  gcommon.v1.common.Pagination pagination = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Add middleware request
message AddMiddlewareRequest {
  // Server ID
  string server_id = 1;

  // Middleware configuration
  MiddlewareConfig middleware = 2;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 3;
}

// Add middleware response
message AddMiddlewareResponse {
  // Success status
  bool success = 1;

  // Middleware information
  MiddlewareInfo middleware = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Middleware information
message MiddlewareInfo {
  // Middleware ID
  string middleware_id = 1;

  // Middleware configuration
  MiddlewareConfig config = 2;

  // Middleware statistics
  MiddlewareStats stats = 3;

  // Creation time
  google.protobuf.Timestamp created_at = 4;

  // Last updated time
  google.protobuf.Timestamp updated_at = 5;
}

// Middleware statistics
message MiddlewareStats {
  // Total executions
  int64 total_executions = 1;

  // Success count
  int64 success_count = 2;

  // Error count
  int64 error_count = 3;

  // Average execution time
  google.protobuf.Duration avg_execution_time = 4;

  // Last execution time
  google.protobuf.Timestamp last_execution_time = 5;
}

// Remove middleware request
message RemoveMiddlewareRequest {
  // Server ID
  string server_id = 1;

  // Middleware ID
  string middleware_id = 2;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 3;
}

// Remove middleware response
message RemoveMiddlewareResponse {
  // Success status
  bool success = 1;

  // Error information
  gcommon.v1.common.Error error = 2;
}

// List middleware request
message ListMiddlewareRequest {
  // Server ID
  string server_id = 1;

  // Type filter
  MiddlewareType type = 2;

  // Enabled status filter
  bool enabled = 3;

  // Pagination options
  gcommon.v1.common.Pagination pagination = 4;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 5;
}

// List middleware response
message ListMiddlewareResponse {
  // Middleware information
  repeated MiddlewareInfo middleware = 1;

  // Pagination information
  gcommon.v1.common.Pagination pagination = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Get server metrics request
message GetServerMetricsRequest {
  // Server ID
  string server_id = 1;

  // Metric types to include
  repeated ServerMetricType metric_types = 2;

  // Time range
  google.protobuf.Timestamp start_time = 3;
  google.protobuf.Timestamp end_time = 4;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 5;
}

// Server metric type enumeration
enum ServerMetricType {
  SERVER_METRIC_TYPE_UNSPECIFIED = 0;
  SERVER_METRIC_TYPE_REQUESTS = 1;
  SERVER_METRIC_TYPE_RESPONSE_TIME = 2;
  SERVER_METRIC_TYPE_CONNECTIONS = 3;
  SERVER_METRIC_TYPE_ERRORS = 4;
  SERVER_METRIC_TYPE_THROUGHPUT = 5;
}

// Get server metrics response
message GetServerMetricsResponse {
  // Server metrics
  ServerMetrics metrics = 1;

  // Error information
  gcommon.v1.common.Error error = 2;
}

// Server metrics
message ServerMetrics {
  // Server ID
  string server_id = 1;

  // Request metrics
  RequestMetrics request_metrics = 2;

  // Response metrics
  ResponseMetrics response_metrics = 3;

  // Connection metrics
  ConnectionMetrics connection_metrics = 4;

  // Error metrics
  ErrorMetrics error_metrics = 5;

  // Resource metrics
  ResourceMetrics resource_metrics = 6;
}

// Request metrics
message RequestMetrics {
  // Total requests
  int64 total_requests = 1;

  // Requests per second
  double requests_per_second = 2;

  // Request rate trend
  repeated DataPoint request_rate_trend = 3;

  // Request size distribution
  SizeDistribution request_size_distribution = 4;

  // HTTP method distribution
  map<string, int64> method_distribution = 5;
}

// Response metrics
message ResponseMetrics {
  // Average response time
  google.protobuf.Duration avg_response_time = 1;

  // Response time percentiles
  ResponseTimePercentiles response_time_percentiles = 2;

  // Response time trend
  repeated DataPoint response_time_trend = 3;

  // Response size distribution
  SizeDistribution response_size_distribution = 4;

  // Status code distribution
  map<string, int64> status_code_distribution = 5;
}

// Connection metrics
message ConnectionMetrics {
  // Active connections
  int32 active_connections = 1;

  // Total connections
  int64 total_connections = 2;

  // Connection rate
  double connections_per_second = 3;

  // Connection duration distribution
  DurationDistribution connection_duration_distribution = 4;

  // Connection state distribution
  map<string, int32> connection_state_distribution = 5;
}

// Error metrics
message ErrorMetrics {
  // Total errors
  int64 total_errors = 1;

  // Error rate
  double error_rate = 2;

  // Error trend
  repeated DataPoint error_trend = 3;

  // Error type distribution
  map<string, int64> error_type_distribution = 4;

  // Recent errors
  repeated RecentError recent_errors = 5;
}

// Resource metrics
message ResourceMetrics {
  // CPU usage percentage
  double cpu_usage_percent = 1;

  // Memory usage in bytes
  int64 memory_usage_bytes = 2;

  // Memory usage percentage
  double memory_usage_percent = 3;

  // Goroutine count
  int32 goroutine_count = 4;

  // GC statistics
  GCStats gc_stats = 5;
}

// GC statistics
message GCStats {
  // Number of GC cycles
  int64 num_gc = 1;

  // Total GC pause time
  google.protobuf.Duration total_pause_time = 2;

  // Average GC pause time
  google.protobuf.Duration avg_pause_time = 3;

  // Memory allocated
  int64 memory_allocated = 4;

  // Memory released
  int64 memory_released = 5;
}

// Data point for trends
message DataPoint {
  // Timestamp
  google.protobuf.Timestamp timestamp = 1;

  // Value
  double value = 2;
}

// Size distribution
message SizeDistribution {
  // Minimum size
  int64 min_size = 1;

  // Maximum size
  int64 max_size = 2;

  // Average size
  double avg_size = 3;

  // Size buckets
  repeated SizeBucket size_buckets = 4;
}

// Size bucket
message SizeBucket {
  // Upper bound
  int64 upper_bound = 1;

  // Count
  int64 count = 2;
}

// Duration distribution
message DurationDistribution {
  // Minimum duration
  google.protobuf.Duration min_duration = 1;

  // Maximum duration
  google.protobuf.Duration max_duration = 2;

  // Average duration
  google.protobuf.Duration avg_duration = 3;

  // Duration buckets
  repeated DurationBucket duration_buckets = 4;
}

// Duration bucket
message DurationBucket {
  // Upper bound
  google.protobuf.Duration upper_bound = 1;

  // Count
  int64 count = 2;
}

// Recent error
message RecentError {
  // Error message
  string message = 1;

  // Error type
  string type = 2;

  // Count
  int32 count = 3;

  // Last occurrence
  google.protobuf.Timestamp last_occurrence = 4;

  // Request path
  string request_path = 5;

  // Status code
  int32 status_code = 6;
}

// Get route metrics request
message GetRouteMetricsRequest {
  // Server ID
  string server_id = 1;

  // Route ID
  string route_id = 2;

  // Time range
  google.protobuf.Timestamp start_time = 3;
  google.protobuf.Timestamp end_time = 4;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 5;
}

// Get route metrics response
message GetRouteMetricsResponse {
  // Route metrics
  RouteMetrics metrics = 1;

  // Error information
  gcommon.v1.common.Error error = 2;
}

// Route metrics
message RouteMetrics {
  // Route ID
  string route_id = 1;

  // Route path
  string route_path = 2;

  // Request metrics
  RequestMetrics request_metrics = 3;

  // Response metrics
  ResponseMetrics response_metrics = 4;

  // Error metrics
  ErrorMetrics error_metrics = 5;

  // Performance metrics
  PerformanceMetrics performance_metrics = 6;
}

// Performance metrics
message PerformanceMetrics {
  // Throughput (requests per second)
  double throughput = 1;

  // Latency percentiles
  ResponseTimePercentiles latency_percentiles = 2;

  // Cache hit rate
  double cache_hit_rate = 3;

  // Cache miss rate
  double cache_miss_rate = 4;

  // Database query time
  google.protobuf.Duration avg_db_query_time = 5;
}

// Handle request request
message HandleRequestRequest {
  // Server ID
  string server_id = 1;

  // HTTP request
  HTTPRequest request = 2;

  // Request context
  RequestContext context = 3;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 4;
}

// HTTP request
message HTTPRequest {
  // HTTP method
  string method = 1;

  // Request URL
  string url = 2;

  // Request path
  string path = 3;

  // Query parameters
  map<string, string> query_params = 4;

  // HTTP headers
  map<string, string> headers = 5;

  // Request body
  bytes body = 6;

  // Content type
  string content_type = 7;

  // Content length
  int64 content_length = 8;

  // Remote address
  string remote_addr = 9;

  // User agent
  string user_agent = 10;

  // Request ID
  string request_id = 11;
}

// Request context
message RequestContext {
  // User information
  UserInfo user = 1;

  // Session information
  SessionInfo session = 2;

  // Request tracing
  TracingInfo tracing = 3;

  // Request attributes
  map<string, string> attributes = 4;

  // Request timestamp
  google.protobuf.Timestamp timestamp = 5;
}

// User information
message UserInfo {
  // User ID
  string user_id = 1;

  // Username
  string username = 2;

  // User roles
  repeated string roles = 3;

  // User permissions
  repeated string permissions = 4;

  // User attributes
  map<string, string> attributes = 5;
}

// Session information
message SessionInfo {
  // Session ID
  string session_id = 1;

  // Session data
  map<string, string> data = 2;

  // Session creation time
  google.protobuf.Timestamp created_at = 3;

  // Session expiration time
  google.protobuf.Timestamp expires_at = 4;
}

// Tracing information
message TracingInfo {
  // Trace ID
  string trace_id = 1;

  // Span ID
  string span_id = 2;

  // Parent span ID
  string parent_span_id = 3;

  // Sampling decision
  bool sampled = 4;

  // Trace flags
  int32 trace_flags = 5;
}

// Handle request response
message HandleRequestResponse {
  // HTTP response
  HTTPResponse response = 1;

  // Processing time
  google.protobuf.Duration processing_time = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// HTTP response
message HTTPResponse {
  // Status code
  int32 status_code = 1;

  // Status message
  string status_message = 2;

  // Response headers
  map<string, string> headers = 3;

  // Response body
  bytes body = 4;

  // Content type
  string content_type = 5;

  // Content length
  int64 content_length = 6;
}

// Stream server events request
message StreamServerEventsRequest {
  // Server ID
  string server_id = 1;

  // Event types to stream
  repeated ServerEventType event_types = 2;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 3;
}

// Server event type enumeration
enum ServerEventType {
  SERVER_EVENT_TYPE_UNSPECIFIED = 0;
  SERVER_EVENT_TYPE_REQUEST = 1;
  SERVER_EVENT_TYPE_RESPONSE = 2;
  SERVER_EVENT_TYPE_ERROR = 3;
  SERVER_EVENT_TYPE_CONNECTION = 4;
  SERVER_EVENT_TYPE_STATUS_CHANGE = 5;
}

// Server event
message ServerEvent {
  // Event ID
  string event_id = 1;

  // Event type
  ServerEventType event_type = 2;

  // Event timestamp
  google.protobuf.Timestamp timestamp = 3;

  // Server ID
  string server_id = 4;

  // Event data
  google.protobuf.Any event_data = 5;

  // Event attributes
  map<string, string> attributes = 6;
}

// Admin service messages
message ConfigureGlobalRequest {
  // Global configuration
  GlobalConfig config = 1;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 2;
}

// Global configuration
message GlobalConfig {
  // Default server configuration
  ServerConfig default_server_config = 1;

  // Global security settings
  GlobalSecurityConfig security = 2;

  // Global logging settings
  GlobalLoggingConfig logging = 3;

  // Global monitoring settings
  GlobalMonitoringConfig monitoring = 4;

  // Resource limits
  ResourceLimits resource_limits = 5;
}

// Global security configuration
message GlobalSecurityConfig {
  // Default TLS settings
  TLSConfig default_tls = 1;

  // Security policy
  SecurityPolicy security_policy = 2;

  // Certificate management
  CertificateManagement certificate_management = 3;
}

// Security policy
message SecurityPolicy {
  // Minimum TLS version
  string min_tls_version = 1;

  // Required cipher suites
  repeated string required_cipher_suites = 2;

  // Security headers enforcement
  bool enforce_security_headers = 3;

  // Content type validation
  bool validate_content_types = 4;
}

// Certificate management
message CertificateManagement {
  // Auto-renewal enabled
  bool auto_renewal_enabled = 1;

  // Certificate authority
  string certificate_authority = 2;

  // Renewal threshold
  google.protobuf.Duration renewal_threshold = 3;

  // Certificate storage
  string certificate_storage = 4;
}

// Global logging configuration
message GlobalLoggingConfig {
  // Default log level
  string default_log_level = 1;

  // Access log format
  string access_log_format = 2;

  // Error log format
  string error_log_format = 3;

  // Log rotation
  LogRotationConfig log_rotation = 4;
}

// Log rotation configuration
message LogRotationConfig {
  // Rotation size
  int64 rotation_size_bytes = 1;

  // Rotation interval
  google.protobuf.Duration rotation_interval = 2;

  // Keep files
  int32 keep_files = 3;

  // Compression enabled
  bool compression_enabled = 4;
}

// Global monitoring configuration
message GlobalMonitoringConfig {
  // Metrics collection interval
  google.protobuf.Duration metrics_interval = 1;

  // Health check interval
  google.protobuf.Duration health_check_interval = 2;

  // Performance monitoring
  bool performance_monitoring_enabled = 3;

  // Distributed tracing
  bool distributed_tracing_enabled = 4;
}

// Resource limits
message ResourceLimits {
  // Maximum servers
  int32 max_servers = 1;

  // Maximum routes per server
  int32 max_routes_per_server = 2;

  // Maximum connections per server
  int32 max_connections_per_server = 3;

  // Memory limit per server
  int64 memory_limit_per_server_bytes = 4;

  // CPU limit per server
  double cpu_limit_per_server_cores = 5;
}

// Configure global response
message ConfigureGlobalResponse {
  // Success status
  bool success = 1;

  // Applied configuration
  GlobalConfig config = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Update server config request
message UpdateServerConfigRequest {
  // Server ID
  string server_id = 1;

  // Updated configuration
  ServerConfig config = 2;

  // Field mask for partial updates
  google.protobuf.FieldMask update_mask = 3;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 4;
}

// Update server config response
message UpdateServerConfigResponse {
  // Success status
  bool success = 1;

  // Updated server information
  ServerInfo server = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Get server logs request
message GetServerLogsRequest {
  // Server ID
  string server_id = 1;

  // Log level filter
  string log_level = 2;

  // Time range
  google.protobuf.Timestamp start_time = 3;
  google.protobuf.Timestamp end_time = 4;

  // Log message filter
  string message_filter = 5;

  // Pagination options
  gcommon.v1.common.Pagination pagination = 6;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 7;
}

// Get server logs response
message GetServerLogsResponse {
  // Log entries
  repeated LogEntry log_entries = 1;

  // Pagination information
  gcommon.v1.common.Pagination pagination = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Log entry
message LogEntry {
  // Timestamp
  google.protobuf.Timestamp timestamp = 1;

  // Log level
  string level = 2;

  // Log message
  string message = 3;

  // Logger name
  string logger = 4;

  // Additional fields
  map<string, string> fields = 5;
}

// Get access logs request
message GetAccessLogsRequest {
  // Server ID
  string server_id = 1;

  // Time range
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;

  // Status code filter
  int32 status_code = 4;

  // Path filter
  string path_filter = 5;

  // Method filter
  string method_filter = 6;

  // Pagination options
  gcommon.v1.common.Pagination pagination = 7;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 8;
}

// Get access logs response
message GetAccessLogsResponse {
  // Access log entries
  repeated AccessLogEntry access_logs = 1;

  // Pagination information
  gcommon.v1.common.Pagination pagination = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Access log entry
message AccessLogEntry {
  // Timestamp
  google.protobuf.Timestamp timestamp = 1;

  // Remote address
  string remote_addr = 2;

  // HTTP method
  string method = 3;

  // Request path
  string path = 4;

  // Status code
  int32 status_code = 5;

  // Response size
  int64 response_size = 6;

  // Response time
  google.protobuf.Duration response_time = 7;

  // User agent
  string user_agent = 8;

  // Referer
  string referer = 9;

  // Request ID
  string request_id = 10;
}

// Reload server config request
message ReloadServerConfigRequest {
  // Server ID
  string server_id = 1;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 2;
}

// Reload server config response
message ReloadServerConfigResponse {
  // Success status
  bool success = 1;

  // Reloaded configuration
  ServerConfig config = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Get SSL certificate info request
message GetSSLCertificateInfoRequest {
  // Server ID
  string server_id = 1;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 2;
}

// Get SSL certificate info response
message GetSSLCertificateInfoResponse {
  // Certificate information
  CertificateInfo certificate = 1;

  // Error information
  gcommon.v1.common.Error error = 2;
}

// Certificate information
message CertificateInfo {
  // Certificate subject
  string subject = 1;

  // Certificate issuer
  string issuer = 2;

  // Not before date
  google.protobuf.Timestamp not_before = 3;

  // Not after date
  google.protobuf.Timestamp not_after = 4;

  // Serial number
  string serial_number = 5;

  // Subject alternative names
  repeated string san = 6;

  // Certificate fingerprint
  string fingerprint = 7;

  // Certificate chain length
  int32 chain_length = 8;
}

// Update SSL certificate request
message UpdateSSLCertificateRequest {
  // Server ID
  string server_id = 1;

  // Certificate data
  string certificate_data = 2;

  // Private key data
  string private_key_data = 3;

  // CA certificate data
  string ca_certificate_data = 4;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 5;
}

// Update SSL certificate response
message UpdateSSLCertificateResponse {
  // Success status
  bool success = 1;

  // Updated certificate information
  CertificateInfo certificate = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Get server health request
message GetServerHealthRequest {
  // Server ID
  string server_id = 1;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 2;
}

// Get server health response
message GetServerHealthResponse {
  // Server health status
  ServerHealthStatus health = 1;

  // Error information
  gcommon.v1.common.Error error = 2;
}

// Server health status
message ServerHealthStatus {
  // Overall health
  HealthStatus overall_health = 1;

  // Component health checks
  repeated ComponentHealth component_health = 2;

  // Last health check time
  google.protobuf.Timestamp last_check_time = 3;

  // Health check duration
  google.protobuf.Duration check_duration = 4;
}

// Component health
message ComponentHealth {
  // Component name
  string component = 1;

  // Health status
  HealthStatus status = 2;

  // Health message
  string message = 3;

  // Last check time
  google.protobuf.Timestamp last_check_time = 4;
}

// Health status enumeration
enum HealthStatus {
  HEALTH_STATUS_UNSPECIFIED = 0;
  HEALTH_STATUS_HEALTHY = 1;
  HEALTH_STATUS_DEGRADED = 2;
  HEALTH_STATUS_UNHEALTHY = 3;
}

// Export server config request
message ExportServerConfigRequest {
  // Server ID
  string server_id = 1;

  // Export format
  ConfigExportFormat format = 2;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 3;
}

// Config export format enumeration
enum ConfigExportFormat {
  CONFIG_EXPORT_FORMAT_UNSPECIFIED = 0;
  CONFIG_EXPORT_FORMAT_JSON = 1;
  CONFIG_EXPORT_FORMAT_YAML = 2;
  CONFIG_EXPORT_FORMAT_TOML = 3;
}

// Export server config response
message ExportServerConfigResponse {
  // Exported configuration data
  string config_data = 1;

  // Export format used
  ConfigExportFormat format = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}

// Import server config request
message ImportServerConfigRequest {
  // Server ID
  string server_id = 1;

  // Configuration data
  string config_data = 2;

  // Import format
  ConfigExportFormat format = 3;

  // Merge strategy
  ConfigMergeStrategy merge_strategy = 4;

  // Request metadata
  gcommon.v1.common.RequestMetadata metadata = 5;
}

// Config merge strategy enumeration
enum ConfigMergeStrategy {
  CONFIG_MERGE_STRATEGY_UNSPECIFIED = 0;
  CONFIG_MERGE_STRATEGY_REPLACE = 1;
  CONFIG_MERGE_STRATEGY_MERGE = 2;
  CONFIG_MERGE_STRATEGY_UPDATE = 3;
}

// Import server config response
message ImportServerConfigResponse {
  // Success status
  bool success = 1;

  // Imported server information
  ServerInfo server = 2;

  // Error information
  gcommon.v1.common.Error error = 3;
}
