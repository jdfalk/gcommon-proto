// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/web/proto/web.proto

//go:build !protoopaque

package proto

import (
	_ "github.com/jdfalk/gcommon/pkg/common/proto"
	messages "github.com/jdfalk/gcommon/pkg/common/proto/messages"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Client certificate verification enumeration
type ClientCertVerification int32

const (
	ClientCertVerification_CLIENT_CERT_VERIFICATION_UNSPECIFIED ClientCertVerification = 0
	ClientCertVerification_CLIENT_CERT_VERIFICATION_NONE        ClientCertVerification = 1
	ClientCertVerification_CLIENT_CERT_VERIFICATION_REQUEST     ClientCertVerification = 2
	ClientCertVerification_CLIENT_CERT_VERIFICATION_REQUIRE     ClientCertVerification = 3
)

// Enum value maps for ClientCertVerification.
var (
	ClientCertVerification_name = map[int32]string{
		0: "CLIENT_CERT_VERIFICATION_UNSPECIFIED",
		1: "CLIENT_CERT_VERIFICATION_NONE",
		2: "CLIENT_CERT_VERIFICATION_REQUEST",
		3: "CLIENT_CERT_VERIFICATION_REQUIRE",
	}
	ClientCertVerification_value = map[string]int32{
		"CLIENT_CERT_VERIFICATION_UNSPECIFIED": 0,
		"CLIENT_CERT_VERIFICATION_NONE":        1,
		"CLIENT_CERT_VERIFICATION_REQUEST":     2,
		"CLIENT_CERT_VERIFICATION_REQUIRE":     3,
	}
)

func (x ClientCertVerification) Enum() *ClientCertVerification {
	p := new(ClientCertVerification)
	*p = x
	return p
}

func (x ClientCertVerification) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientCertVerification) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[0].Descriptor()
}

func (ClientCertVerification) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[0]
}

func (x ClientCertVerification) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Rate limit strategy enumeration
type RateLimitStrategy int32

const (
	RateLimitStrategy_RATE_LIMIT_STRATEGY_UNSPECIFIED    RateLimitStrategy = 0
	RateLimitStrategy_RATE_LIMIT_STRATEGY_TOKEN_BUCKET   RateLimitStrategy = 1
	RateLimitStrategy_RATE_LIMIT_STRATEGY_FIXED_WINDOW   RateLimitStrategy = 2
	RateLimitStrategy_RATE_LIMIT_STRATEGY_SLIDING_WINDOW RateLimitStrategy = 3
	RateLimitStrategy_RATE_LIMIT_STRATEGY_LEAKY_BUCKET   RateLimitStrategy = 4
)

// Enum value maps for RateLimitStrategy.
var (
	RateLimitStrategy_name = map[int32]string{
		0: "RATE_LIMIT_STRATEGY_UNSPECIFIED",
		1: "RATE_LIMIT_STRATEGY_TOKEN_BUCKET",
		2: "RATE_LIMIT_STRATEGY_FIXED_WINDOW",
		3: "RATE_LIMIT_STRATEGY_SLIDING_WINDOW",
		4: "RATE_LIMIT_STRATEGY_LEAKY_BUCKET",
	}
	RateLimitStrategy_value = map[string]int32{
		"RATE_LIMIT_STRATEGY_UNSPECIFIED":    0,
		"RATE_LIMIT_STRATEGY_TOKEN_BUCKET":   1,
		"RATE_LIMIT_STRATEGY_FIXED_WINDOW":   2,
		"RATE_LIMIT_STRATEGY_SLIDING_WINDOW": 3,
		"RATE_LIMIT_STRATEGY_LEAKY_BUCKET":   4,
	}
)

func (x RateLimitStrategy) Enum() *RateLimitStrategy {
	p := new(RateLimitStrategy)
	*p = x
	return p
}

func (x RateLimitStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateLimitStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[1].Descriptor()
}

func (RateLimitStrategy) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[1]
}

func (x RateLimitStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// IP filter mode enumeration
type IPFilterMode int32

const (
	IPFilterMode_IP_FILTER_MODE_UNSPECIFIED IPFilterMode = 0
	IPFilterMode_IP_FILTER_MODE_WHITELIST   IPFilterMode = 1
	IPFilterMode_IP_FILTER_MODE_BLACKLIST   IPFilterMode = 2
)

// Enum value maps for IPFilterMode.
var (
	IPFilterMode_name = map[int32]string{
		0: "IP_FILTER_MODE_UNSPECIFIED",
		1: "IP_FILTER_MODE_WHITELIST",
		2: "IP_FILTER_MODE_BLACKLIST",
	}
	IPFilterMode_value = map[string]int32{
		"IP_FILTER_MODE_UNSPECIFIED": 0,
		"IP_FILTER_MODE_WHITELIST":   1,
		"IP_FILTER_MODE_BLACKLIST":   2,
	}
)

func (x IPFilterMode) Enum() *IPFilterMode {
	p := new(IPFilterMode)
	*p = x
	return p
}

func (x IPFilterMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IPFilterMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[2].Descriptor()
}

func (IPFilterMode) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[2]
}

func (x IPFilterMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Authentication scheme type enumeration
type AuthSchemeType int32

const (
	AuthSchemeType_AUTH_SCHEME_TYPE_UNSPECIFIED AuthSchemeType = 0
	AuthSchemeType_AUTH_SCHEME_TYPE_BASIC       AuthSchemeType = 1
	AuthSchemeType_AUTH_SCHEME_TYPE_BEARER      AuthSchemeType = 2
	AuthSchemeType_AUTH_SCHEME_TYPE_JWT         AuthSchemeType = 3
	AuthSchemeType_AUTH_SCHEME_TYPE_API_KEY     AuthSchemeType = 4
	AuthSchemeType_AUTH_SCHEME_TYPE_OAUTH2      AuthSchemeType = 5
)

// Enum value maps for AuthSchemeType.
var (
	AuthSchemeType_name = map[int32]string{
		0: "AUTH_SCHEME_TYPE_UNSPECIFIED",
		1: "AUTH_SCHEME_TYPE_BASIC",
		2: "AUTH_SCHEME_TYPE_BEARER",
		3: "AUTH_SCHEME_TYPE_JWT",
		4: "AUTH_SCHEME_TYPE_API_KEY",
		5: "AUTH_SCHEME_TYPE_OAUTH2",
	}
	AuthSchemeType_value = map[string]int32{
		"AUTH_SCHEME_TYPE_UNSPECIFIED": 0,
		"AUTH_SCHEME_TYPE_BASIC":       1,
		"AUTH_SCHEME_TYPE_BEARER":      2,
		"AUTH_SCHEME_TYPE_JWT":         3,
		"AUTH_SCHEME_TYPE_API_KEY":     4,
		"AUTH_SCHEME_TYPE_OAUTH2":      5,
	}
)

func (x AuthSchemeType) Enum() *AuthSchemeType {
	p := new(AuthSchemeType)
	*p = x
	return p
}

func (x AuthSchemeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthSchemeType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[3].Descriptor()
}

func (AuthSchemeType) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[3]
}

func (x AuthSchemeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Middleware type enumeration
type MiddlewareType int32

const (
	MiddlewareType_MIDDLEWARE_TYPE_UNSPECIFIED             MiddlewareType = 0
	MiddlewareType_MIDDLEWARE_TYPE_LOGGING                 MiddlewareType = 1
	MiddlewareType_MIDDLEWARE_TYPE_AUTHENTICATION          MiddlewareType = 2
	MiddlewareType_MIDDLEWARE_TYPE_AUTHORIZATION           MiddlewareType = 3
	MiddlewareType_MIDDLEWARE_TYPE_RATE_LIMITING           MiddlewareType = 4
	MiddlewareType_MIDDLEWARE_TYPE_COMPRESSION             MiddlewareType = 5
	MiddlewareType_MIDDLEWARE_TYPE_CORS                    MiddlewareType = 6
	MiddlewareType_MIDDLEWARE_TYPE_SECURITY_HEADERS        MiddlewareType = 7
	MiddlewareType_MIDDLEWARE_TYPE_REQUEST_VALIDATION      MiddlewareType = 8
	MiddlewareType_MIDDLEWARE_TYPE_RESPONSE_TRANSFORMATION MiddlewareType = 9
	MiddlewareType_MIDDLEWARE_TYPE_CUSTOM                  MiddlewareType = 10
)

// Enum value maps for MiddlewareType.
var (
	MiddlewareType_name = map[int32]string{
		0:  "MIDDLEWARE_TYPE_UNSPECIFIED",
		1:  "MIDDLEWARE_TYPE_LOGGING",
		2:  "MIDDLEWARE_TYPE_AUTHENTICATION",
		3:  "MIDDLEWARE_TYPE_AUTHORIZATION",
		4:  "MIDDLEWARE_TYPE_RATE_LIMITING",
		5:  "MIDDLEWARE_TYPE_COMPRESSION",
		6:  "MIDDLEWARE_TYPE_CORS",
		7:  "MIDDLEWARE_TYPE_SECURITY_HEADERS",
		8:  "MIDDLEWARE_TYPE_REQUEST_VALIDATION",
		9:  "MIDDLEWARE_TYPE_RESPONSE_TRANSFORMATION",
		10: "MIDDLEWARE_TYPE_CUSTOM",
	}
	MiddlewareType_value = map[string]int32{
		"MIDDLEWARE_TYPE_UNSPECIFIED":             0,
		"MIDDLEWARE_TYPE_LOGGING":                 1,
		"MIDDLEWARE_TYPE_AUTHENTICATION":          2,
		"MIDDLEWARE_TYPE_AUTHORIZATION":           3,
		"MIDDLEWARE_TYPE_RATE_LIMITING":           4,
		"MIDDLEWARE_TYPE_COMPRESSION":             5,
		"MIDDLEWARE_TYPE_CORS":                    6,
		"MIDDLEWARE_TYPE_SECURITY_HEADERS":        7,
		"MIDDLEWARE_TYPE_REQUEST_VALIDATION":      8,
		"MIDDLEWARE_TYPE_RESPONSE_TRANSFORMATION": 9,
		"MIDDLEWARE_TYPE_CUSTOM":                  10,
	}
)

func (x MiddlewareType) Enum() *MiddlewareType {
	p := new(MiddlewareType)
	*p = x
	return p
}

func (x MiddlewareType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MiddlewareType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[4].Descriptor()
}

func (MiddlewareType) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[4]
}

func (x MiddlewareType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Server status enumeration
type ServerStatus int32

const (
	ServerStatus_SERVER_STATUS_UNSPECIFIED ServerStatus = 0
	ServerStatus_SERVER_STATUS_CREATED     ServerStatus = 1
	ServerStatus_SERVER_STATUS_STARTING    ServerStatus = 2
	ServerStatus_SERVER_STATUS_RUNNING     ServerStatus = 3
	ServerStatus_SERVER_STATUS_STOPPING    ServerStatus = 4
	ServerStatus_SERVER_STATUS_STOPPED     ServerStatus = 5
	ServerStatus_SERVER_STATUS_ERROR       ServerStatus = 6
)

// Enum value maps for ServerStatus.
var (
	ServerStatus_name = map[int32]string{
		0: "SERVER_STATUS_UNSPECIFIED",
		1: "SERVER_STATUS_CREATED",
		2: "SERVER_STATUS_STARTING",
		3: "SERVER_STATUS_RUNNING",
		4: "SERVER_STATUS_STOPPING",
		5: "SERVER_STATUS_STOPPED",
		6: "SERVER_STATUS_ERROR",
	}
	ServerStatus_value = map[string]int32{
		"SERVER_STATUS_UNSPECIFIED": 0,
		"SERVER_STATUS_CREATED":     1,
		"SERVER_STATUS_STARTING":    2,
		"SERVER_STATUS_RUNNING":     3,
		"SERVER_STATUS_STOPPING":    4,
		"SERVER_STATUS_STOPPED":     5,
		"SERVER_STATUS_ERROR":       6,
	}
)

func (x ServerStatus) Enum() *ServerStatus {
	p := new(ServerStatus)
	*p = x
	return p
}

func (x ServerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[5].Descriptor()
}

func (ServerStatus) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[5]
}

func (x ServerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Handler type enumeration
type HandlerType int32

const (
	HandlerType_HANDLER_TYPE_UNSPECIFIED HandlerType = 0
	HandlerType_HANDLER_TYPE_STATIC      HandlerType = 1
	HandlerType_HANDLER_TYPE_PROXY       HandlerType = 2
	HandlerType_HANDLER_TYPE_FUNCTION    HandlerType = 3
	HandlerType_HANDLER_TYPE_REDIRECT    HandlerType = 4
	HandlerType_HANDLER_TYPE_TEMPLATE    HandlerType = 5
	HandlerType_HANDLER_TYPE_WEBSOCKET   HandlerType = 6
	HandlerType_HANDLER_TYPE_GRPC        HandlerType = 7
)

// Enum value maps for HandlerType.
var (
	HandlerType_name = map[int32]string{
		0: "HANDLER_TYPE_UNSPECIFIED",
		1: "HANDLER_TYPE_STATIC",
		2: "HANDLER_TYPE_PROXY",
		3: "HANDLER_TYPE_FUNCTION",
		4: "HANDLER_TYPE_REDIRECT",
		5: "HANDLER_TYPE_TEMPLATE",
		6: "HANDLER_TYPE_WEBSOCKET",
		7: "HANDLER_TYPE_GRPC",
	}
	HandlerType_value = map[string]int32{
		"HANDLER_TYPE_UNSPECIFIED": 0,
		"HANDLER_TYPE_STATIC":      1,
		"HANDLER_TYPE_PROXY":       2,
		"HANDLER_TYPE_FUNCTION":    3,
		"HANDLER_TYPE_REDIRECT":    4,
		"HANDLER_TYPE_TEMPLATE":    5,
		"HANDLER_TYPE_WEBSOCKET":   6,
		"HANDLER_TYPE_GRPC":        7,
	}
)

func (x HandlerType) Enum() *HandlerType {
	p := new(HandlerType)
	*p = x
	return p
}

func (x HandlerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HandlerType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[6].Descriptor()
}

func (HandlerType) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[6]
}

func (x HandlerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Server metric type enumeration
type ServerMetricType int32

const (
	ServerMetricType_SERVER_METRIC_TYPE_UNSPECIFIED   ServerMetricType = 0
	ServerMetricType_SERVER_METRIC_TYPE_REQUESTS      ServerMetricType = 1
	ServerMetricType_SERVER_METRIC_TYPE_RESPONSE_TIME ServerMetricType = 2
	ServerMetricType_SERVER_METRIC_TYPE_CONNECTIONS   ServerMetricType = 3
	ServerMetricType_SERVER_METRIC_TYPE_ERRORS        ServerMetricType = 4
	ServerMetricType_SERVER_METRIC_TYPE_THROUGHPUT    ServerMetricType = 5
)

// Enum value maps for ServerMetricType.
var (
	ServerMetricType_name = map[int32]string{
		0: "SERVER_METRIC_TYPE_UNSPECIFIED",
		1: "SERVER_METRIC_TYPE_REQUESTS",
		2: "SERVER_METRIC_TYPE_RESPONSE_TIME",
		3: "SERVER_METRIC_TYPE_CONNECTIONS",
		4: "SERVER_METRIC_TYPE_ERRORS",
		5: "SERVER_METRIC_TYPE_THROUGHPUT",
	}
	ServerMetricType_value = map[string]int32{
		"SERVER_METRIC_TYPE_UNSPECIFIED":   0,
		"SERVER_METRIC_TYPE_REQUESTS":      1,
		"SERVER_METRIC_TYPE_RESPONSE_TIME": 2,
		"SERVER_METRIC_TYPE_CONNECTIONS":   3,
		"SERVER_METRIC_TYPE_ERRORS":        4,
		"SERVER_METRIC_TYPE_THROUGHPUT":    5,
	}
)

func (x ServerMetricType) Enum() *ServerMetricType {
	p := new(ServerMetricType)
	*p = x
	return p
}

func (x ServerMetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerMetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[7].Descriptor()
}

func (ServerMetricType) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[7]
}

func (x ServerMetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Server event type enumeration
type ServerEventType int32

const (
	ServerEventType_SERVER_EVENT_TYPE_UNSPECIFIED   ServerEventType = 0
	ServerEventType_SERVER_EVENT_TYPE_REQUEST       ServerEventType = 1
	ServerEventType_SERVER_EVENT_TYPE_RESPONSE      ServerEventType = 2
	ServerEventType_SERVER_EVENT_TYPE_ERROR         ServerEventType = 3
	ServerEventType_SERVER_EVENT_TYPE_CONNECTION    ServerEventType = 4
	ServerEventType_SERVER_EVENT_TYPE_STATUS_CHANGE ServerEventType = 5
)

// Enum value maps for ServerEventType.
var (
	ServerEventType_name = map[int32]string{
		0: "SERVER_EVENT_TYPE_UNSPECIFIED",
		1: "SERVER_EVENT_TYPE_REQUEST",
		2: "SERVER_EVENT_TYPE_RESPONSE",
		3: "SERVER_EVENT_TYPE_ERROR",
		4: "SERVER_EVENT_TYPE_CONNECTION",
		5: "SERVER_EVENT_TYPE_STATUS_CHANGE",
	}
	ServerEventType_value = map[string]int32{
		"SERVER_EVENT_TYPE_UNSPECIFIED":   0,
		"SERVER_EVENT_TYPE_REQUEST":       1,
		"SERVER_EVENT_TYPE_RESPONSE":      2,
		"SERVER_EVENT_TYPE_ERROR":         3,
		"SERVER_EVENT_TYPE_CONNECTION":    4,
		"SERVER_EVENT_TYPE_STATUS_CHANGE": 5,
	}
)

func (x ServerEventType) Enum() *ServerEventType {
	p := new(ServerEventType)
	*p = x
	return p
}

func (x ServerEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[8].Descriptor()
}

func (ServerEventType) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[8]
}

func (x ServerEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Health status enumeration
type HealthStatus int32

const (
	HealthStatus_HEALTH_STATUS_UNSPECIFIED HealthStatus = 0
	HealthStatus_HEALTH_STATUS_HEALTHY     HealthStatus = 1
	HealthStatus_HEALTH_STATUS_DEGRADED    HealthStatus = 2
	HealthStatus_HEALTH_STATUS_UNHEALTHY   HealthStatus = 3
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "HEALTH_STATUS_UNSPECIFIED",
		1: "HEALTH_STATUS_HEALTHY",
		2: "HEALTH_STATUS_DEGRADED",
		3: "HEALTH_STATUS_UNHEALTHY",
	}
	HealthStatus_value = map[string]int32{
		"HEALTH_STATUS_UNSPECIFIED": 0,
		"HEALTH_STATUS_HEALTHY":     1,
		"HEALTH_STATUS_DEGRADED":    2,
		"HEALTH_STATUS_UNHEALTHY":   3,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[9].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[9]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Config export format enumeration
type ConfigExportFormat int32

const (
	ConfigExportFormat_CONFIG_EXPORT_FORMAT_UNSPECIFIED ConfigExportFormat = 0
	ConfigExportFormat_CONFIG_EXPORT_FORMAT_JSON        ConfigExportFormat = 1
	ConfigExportFormat_CONFIG_EXPORT_FORMAT_YAML        ConfigExportFormat = 2
	ConfigExportFormat_CONFIG_EXPORT_FORMAT_TOML        ConfigExportFormat = 3
)

// Enum value maps for ConfigExportFormat.
var (
	ConfigExportFormat_name = map[int32]string{
		0: "CONFIG_EXPORT_FORMAT_UNSPECIFIED",
		1: "CONFIG_EXPORT_FORMAT_JSON",
		2: "CONFIG_EXPORT_FORMAT_YAML",
		3: "CONFIG_EXPORT_FORMAT_TOML",
	}
	ConfigExportFormat_value = map[string]int32{
		"CONFIG_EXPORT_FORMAT_UNSPECIFIED": 0,
		"CONFIG_EXPORT_FORMAT_JSON":        1,
		"CONFIG_EXPORT_FORMAT_YAML":        2,
		"CONFIG_EXPORT_FORMAT_TOML":        3,
	}
)

func (x ConfigExportFormat) Enum() *ConfigExportFormat {
	p := new(ConfigExportFormat)
	*p = x
	return p
}

func (x ConfigExportFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigExportFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[10].Descriptor()
}

func (ConfigExportFormat) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[10]
}

func (x ConfigExportFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Config merge strategy enumeration
type ConfigMergeStrategy int32

const (
	ConfigMergeStrategy_CONFIG_MERGE_STRATEGY_UNSPECIFIED ConfigMergeStrategy = 0
	ConfigMergeStrategy_CONFIG_MERGE_STRATEGY_REPLACE     ConfigMergeStrategy = 1
	ConfigMergeStrategy_CONFIG_MERGE_STRATEGY_MERGE       ConfigMergeStrategy = 2
	ConfigMergeStrategy_CONFIG_MERGE_STRATEGY_UPDATE      ConfigMergeStrategy = 3
)

// Enum value maps for ConfigMergeStrategy.
var (
	ConfigMergeStrategy_name = map[int32]string{
		0: "CONFIG_MERGE_STRATEGY_UNSPECIFIED",
		1: "CONFIG_MERGE_STRATEGY_REPLACE",
		2: "CONFIG_MERGE_STRATEGY_MERGE",
		3: "CONFIG_MERGE_STRATEGY_UPDATE",
	}
	ConfigMergeStrategy_value = map[string]int32{
		"CONFIG_MERGE_STRATEGY_UNSPECIFIED": 0,
		"CONFIG_MERGE_STRATEGY_REPLACE":     1,
		"CONFIG_MERGE_STRATEGY_MERGE":       2,
		"CONFIG_MERGE_STRATEGY_UPDATE":      3,
	}
)

func (x ConfigMergeStrategy) Enum() *ConfigMergeStrategy {
	p := new(ConfigMergeStrategy)
	*p = x
	return p
}

func (x ConfigMergeStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigMergeStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_web_proto_web_proto_enumTypes[11].Descriptor()
}

func (ConfigMergeStrategy) Type() protoreflect.EnumType {
	return &file_pkg_web_proto_web_proto_enumTypes[11]
}

func (x ConfigMergeStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Create server request
type CreateServerRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server configuration
	Config *ServerConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateServerRequest) Reset() {
	*x = CreateServerRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerRequest) ProtoMessage() {}

func (x *CreateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateServerRequest) GetConfig() *ServerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateServerRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateServerRequest) SetConfig(v *ServerConfig) {
	x.Config = v
}

func (x *CreateServerRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *CreateServerRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *CreateServerRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *CreateServerRequest) ClearConfig() {
	x.Config = nil
}

func (x *CreateServerRequest) ClearMetadata() {
	x.Metadata = nil
}

type CreateServerRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server configuration
	Config *ServerConfig
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 CreateServerRequest_builder) Build() *CreateServerRequest {
	m0 := &CreateServerRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Config = b.Config
	x.Metadata = b.Metadata
	return m0
}

// Server configuration
type ServerConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Server address
	Address *string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	// Server port
	Port *int32 `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	// TLS configuration
	TlsConfig *TLSConfig `protobuf:"bytes,4,opt,name=tls_config,json=tlsConfig" json:"tls_config,omitempty"`
	// HTTP configuration
	HttpConfig *HTTPConfig `protobuf:"bytes,5,opt,name=http_config,json=httpConfig" json:"http_config,omitempty"`
	// Timeout configuration
	TimeoutConfig *TimeoutConfig `protobuf:"bytes,6,opt,name=timeout_config,json=timeoutConfig" json:"timeout_config,omitempty"`
	// Security configuration
	SecurityConfig *SecurityConfig `protobuf:"bytes,7,opt,name=security_config,json=securityConfig" json:"security_config,omitempty"`
	// Middleware configurations
	Middleware []*MiddlewareConfig `protobuf:"bytes,8,rep,name=middleware" json:"middleware,omitempty"`
	// Static file serving
	StaticConfig *StaticFileConfig `protobuf:"bytes,9,opt,name=static_config,json=staticConfig" json:"static_config,omitempty"`
	// Server attributes
	Attributes    map[string]string `protobuf:"bytes,10,rep,name=attributes" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerConfig) Reset() {
	*x = ServerConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig) ProtoMessage() {}

func (x *ServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServerConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ServerConfig) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *ServerConfig) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *ServerConfig) GetTlsConfig() *TLSConfig {
	if x != nil {
		return x.TlsConfig
	}
	return nil
}

func (x *ServerConfig) GetHttpConfig() *HTTPConfig {
	if x != nil {
		return x.HttpConfig
	}
	return nil
}

func (x *ServerConfig) GetTimeoutConfig() *TimeoutConfig {
	if x != nil {
		return x.TimeoutConfig
	}
	return nil
}

func (x *ServerConfig) GetSecurityConfig() *SecurityConfig {
	if x != nil {
		return x.SecurityConfig
	}
	return nil
}

func (x *ServerConfig) GetMiddleware() []*MiddlewareConfig {
	if x != nil {
		return x.Middleware
	}
	return nil
}

func (x *ServerConfig) GetStaticConfig() *StaticFileConfig {
	if x != nil {
		return x.StaticConfig
	}
	return nil
}

func (x *ServerConfig) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ServerConfig) SetName(v string) {
	x.Name = &v
}

func (x *ServerConfig) SetAddress(v string) {
	x.Address = &v
}

func (x *ServerConfig) SetPort(v int32) {
	x.Port = &v
}

func (x *ServerConfig) SetTlsConfig(v *TLSConfig) {
	x.TlsConfig = v
}

func (x *ServerConfig) SetHttpConfig(v *HTTPConfig) {
	x.HttpConfig = v
}

func (x *ServerConfig) SetTimeoutConfig(v *TimeoutConfig) {
	x.TimeoutConfig = v
}

func (x *ServerConfig) SetSecurityConfig(v *SecurityConfig) {
	x.SecurityConfig = v
}

func (x *ServerConfig) SetMiddleware(v []*MiddlewareConfig) {
	x.Middleware = v
}

func (x *ServerConfig) SetStaticConfig(v *StaticFileConfig) {
	x.StaticConfig = v
}

func (x *ServerConfig) SetAttributes(v map[string]string) {
	x.Attributes = v
}

func (x *ServerConfig) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *ServerConfig) HasAddress() bool {
	if x == nil {
		return false
	}
	return x.Address != nil
}

func (x *ServerConfig) HasPort() bool {
	if x == nil {
		return false
	}
	return x.Port != nil
}

func (x *ServerConfig) HasTlsConfig() bool {
	if x == nil {
		return false
	}
	return x.TlsConfig != nil
}

func (x *ServerConfig) HasHttpConfig() bool {
	if x == nil {
		return false
	}
	return x.HttpConfig != nil
}

func (x *ServerConfig) HasTimeoutConfig() bool {
	if x == nil {
		return false
	}
	return x.TimeoutConfig != nil
}

func (x *ServerConfig) HasSecurityConfig() bool {
	if x == nil {
		return false
	}
	return x.SecurityConfig != nil
}

func (x *ServerConfig) HasStaticConfig() bool {
	if x == nil {
		return false
	}
	return x.StaticConfig != nil
}

func (x *ServerConfig) ClearName() {
	x.Name = nil
}

func (x *ServerConfig) ClearAddress() {
	x.Address = nil
}

func (x *ServerConfig) ClearPort() {
	x.Port = nil
}

func (x *ServerConfig) ClearTlsConfig() {
	x.TlsConfig = nil
}

func (x *ServerConfig) ClearHttpConfig() {
	x.HttpConfig = nil
}

func (x *ServerConfig) ClearTimeoutConfig() {
	x.TimeoutConfig = nil
}

func (x *ServerConfig) ClearSecurityConfig() {
	x.SecurityConfig = nil
}

func (x *ServerConfig) ClearStaticConfig() {
	x.StaticConfig = nil
}

type ServerConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server name
	Name *string
	// Server address
	Address *string
	// Server port
	Port *int32
	// TLS configuration
	TlsConfig *TLSConfig
	// HTTP configuration
	HttpConfig *HTTPConfig
	// Timeout configuration
	TimeoutConfig *TimeoutConfig
	// Security configuration
	SecurityConfig *SecurityConfig
	// Middleware configurations
	Middleware []*MiddlewareConfig
	// Static file serving
	StaticConfig *StaticFileConfig
	// Server attributes
	Attributes map[string]string
}

func (b0 ServerConfig_builder) Build() *ServerConfig {
	m0 := &ServerConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Address = b.Address
	x.Port = b.Port
	x.TlsConfig = b.TlsConfig
	x.HttpConfig = b.HttpConfig
	x.TimeoutConfig = b.TimeoutConfig
	x.SecurityConfig = b.SecurityConfig
	x.Middleware = b.Middleware
	x.StaticConfig = b.StaticConfig
	x.Attributes = b.Attributes
	return m0
}

// TLS configuration
type TLSConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Enable TLS
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Certificate file path
	CertFile *string `protobuf:"bytes,2,opt,name=cert_file,json=certFile" json:"cert_file,omitempty"`
	// Private key file path
	KeyFile *string `protobuf:"bytes,3,opt,name=key_file,json=keyFile" json:"key_file,omitempty"`
	// CA certificate file path
	CaFile *string `protobuf:"bytes,4,opt,name=ca_file,json=caFile" json:"ca_file,omitempty"`
	// Minimum TLS version
	MinVersion *string `protobuf:"bytes,5,opt,name=min_version,json=minVersion" json:"min_version,omitempty"`
	// Maximum TLS version
	MaxVersion *string `protobuf:"bytes,6,opt,name=max_version,json=maxVersion" json:"max_version,omitempty"`
	// Cipher suites
	CipherSuites []string `protobuf:"bytes,7,rep,name=cipher_suites,json=cipherSuites" json:"cipher_suites,omitempty"`
	// Client certificate verification
	ClientCertVerification *ClientCertVerification `protobuf:"varint,8,opt,name=client_cert_verification,json=clientCertVerification,enum=gcommon.v1.web.ClientCertVerification" json:"client_cert_verification,omitempty"`
	// Certificate auto-renewal
	AutoRenewal   *bool `protobuf:"varint,9,opt,name=auto_renewal,json=autoRenewal" json:"auto_renewal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSConfig) Reset() {
	*x = TLSConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfig) ProtoMessage() {}

func (x *TLSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TLSConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *TLSConfig) GetCertFile() string {
	if x != nil && x.CertFile != nil {
		return *x.CertFile
	}
	return ""
}

func (x *TLSConfig) GetKeyFile() string {
	if x != nil && x.KeyFile != nil {
		return *x.KeyFile
	}
	return ""
}

func (x *TLSConfig) GetCaFile() string {
	if x != nil && x.CaFile != nil {
		return *x.CaFile
	}
	return ""
}

func (x *TLSConfig) GetMinVersion() string {
	if x != nil && x.MinVersion != nil {
		return *x.MinVersion
	}
	return ""
}

func (x *TLSConfig) GetMaxVersion() string {
	if x != nil && x.MaxVersion != nil {
		return *x.MaxVersion
	}
	return ""
}

func (x *TLSConfig) GetCipherSuites() []string {
	if x != nil {
		return x.CipherSuites
	}
	return nil
}

func (x *TLSConfig) GetClientCertVerification() ClientCertVerification {
	if x != nil && x.ClientCertVerification != nil {
		return *x.ClientCertVerification
	}
	return ClientCertVerification_CLIENT_CERT_VERIFICATION_UNSPECIFIED
}

func (x *TLSConfig) GetAutoRenewal() bool {
	if x != nil && x.AutoRenewal != nil {
		return *x.AutoRenewal
	}
	return false
}

func (x *TLSConfig) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *TLSConfig) SetCertFile(v string) {
	x.CertFile = &v
}

func (x *TLSConfig) SetKeyFile(v string) {
	x.KeyFile = &v
}

func (x *TLSConfig) SetCaFile(v string) {
	x.CaFile = &v
}

func (x *TLSConfig) SetMinVersion(v string) {
	x.MinVersion = &v
}

func (x *TLSConfig) SetMaxVersion(v string) {
	x.MaxVersion = &v
}

func (x *TLSConfig) SetCipherSuites(v []string) {
	x.CipherSuites = v
}

func (x *TLSConfig) SetClientCertVerification(v ClientCertVerification) {
	x.ClientCertVerification = &v
}

func (x *TLSConfig) SetAutoRenewal(v bool) {
	x.AutoRenewal = &v
}

func (x *TLSConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *TLSConfig) HasCertFile() bool {
	if x == nil {
		return false
	}
	return x.CertFile != nil
}

func (x *TLSConfig) HasKeyFile() bool {
	if x == nil {
		return false
	}
	return x.KeyFile != nil
}

func (x *TLSConfig) HasCaFile() bool {
	if x == nil {
		return false
	}
	return x.CaFile != nil
}

func (x *TLSConfig) HasMinVersion() bool {
	if x == nil {
		return false
	}
	return x.MinVersion != nil
}

func (x *TLSConfig) HasMaxVersion() bool {
	if x == nil {
		return false
	}
	return x.MaxVersion != nil
}

func (x *TLSConfig) HasClientCertVerification() bool {
	if x == nil {
		return false
	}
	return x.ClientCertVerification != nil
}

func (x *TLSConfig) HasAutoRenewal() bool {
	if x == nil {
		return false
	}
	return x.AutoRenewal != nil
}

func (x *TLSConfig) ClearEnabled() {
	x.Enabled = nil
}

func (x *TLSConfig) ClearCertFile() {
	x.CertFile = nil
}

func (x *TLSConfig) ClearKeyFile() {
	x.KeyFile = nil
}

func (x *TLSConfig) ClearCaFile() {
	x.CaFile = nil
}

func (x *TLSConfig) ClearMinVersion() {
	x.MinVersion = nil
}

func (x *TLSConfig) ClearMaxVersion() {
	x.MaxVersion = nil
}

func (x *TLSConfig) ClearClientCertVerification() {
	x.ClientCertVerification = nil
}

func (x *TLSConfig) ClearAutoRenewal() {
	x.AutoRenewal = nil
}

type TLSConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable TLS
	Enabled *bool
	// Certificate file path
	CertFile *string
	// Private key file path
	KeyFile *string
	// CA certificate file path
	CaFile *string
	// Minimum TLS version
	MinVersion *string
	// Maximum TLS version
	MaxVersion *string
	// Cipher suites
	CipherSuites []string
	// Client certificate verification
	ClientCertVerification *ClientCertVerification
	// Certificate auto-renewal
	AutoRenewal *bool
}

func (b0 TLSConfig_builder) Build() *TLSConfig {
	m0 := &TLSConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Enabled = b.Enabled
	x.CertFile = b.CertFile
	x.KeyFile = b.KeyFile
	x.CaFile = b.CaFile
	x.MinVersion = b.MinVersion
	x.MaxVersion = b.MaxVersion
	x.CipherSuites = b.CipherSuites
	x.ClientCertVerification = b.ClientCertVerification
	x.AutoRenewal = b.AutoRenewal
	return m0
}

// HTTP configuration
type HTTPConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Maximum header size
	MaxHeaderSizeBytes *int32 `protobuf:"varint,1,opt,name=max_header_size_bytes,json=maxHeaderSizeBytes" json:"max_header_size_bytes,omitempty"`
	// Maximum body size
	MaxBodySizeBytes *int64 `protobuf:"varint,2,opt,name=max_body_size_bytes,json=maxBodySizeBytes" json:"max_body_size_bytes,omitempty"`
	// Enable HTTP/2
	EnableHttp2 *bool `protobuf:"varint,3,opt,name=enable_http2,json=enableHttp2" json:"enable_http2,omitempty"`
	// Enable compression
	EnableCompression *bool `protobuf:"varint,4,opt,name=enable_compression,json=enableCompression" json:"enable_compression,omitempty"`
	// Compression level
	CompressionLevel *int32 `protobuf:"varint,5,opt,name=compression_level,json=compressionLevel" json:"compression_level,omitempty"`
	// Compression types
	CompressionTypes []string `protobuf:"bytes,6,rep,name=compression_types,json=compressionTypes" json:"compression_types,omitempty"`
	// CORS configuration
	CorsConfig *CORSConfig `protobuf:"bytes,7,opt,name=cors_config,json=corsConfig" json:"cors_config,omitempty"`
	// Request ID header
	RequestIdHeader *string `protobuf:"bytes,8,opt,name=request_id_header,json=requestIdHeader" json:"request_id_header,omitempty"`
	// Enable keep-alive
	EnableKeepAlive *bool `protobuf:"varint,9,opt,name=enable_keep_alive,json=enableKeepAlive" json:"enable_keep_alive,omitempty"`
	// Keep-alive timeout
	KeepAliveTimeout *durationpb.Duration `protobuf:"bytes,10,opt,name=keep_alive_timeout,json=keepAliveTimeout" json:"keep_alive_timeout,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HTTPConfig) Reset() {
	*x = HTTPConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPConfig) ProtoMessage() {}

func (x *HTTPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HTTPConfig) GetMaxHeaderSizeBytes() int32 {
	if x != nil && x.MaxHeaderSizeBytes != nil {
		return *x.MaxHeaderSizeBytes
	}
	return 0
}

func (x *HTTPConfig) GetMaxBodySizeBytes() int64 {
	if x != nil && x.MaxBodySizeBytes != nil {
		return *x.MaxBodySizeBytes
	}
	return 0
}

func (x *HTTPConfig) GetEnableHttp2() bool {
	if x != nil && x.EnableHttp2 != nil {
		return *x.EnableHttp2
	}
	return false
}

func (x *HTTPConfig) GetEnableCompression() bool {
	if x != nil && x.EnableCompression != nil {
		return *x.EnableCompression
	}
	return false
}

func (x *HTTPConfig) GetCompressionLevel() int32 {
	if x != nil && x.CompressionLevel != nil {
		return *x.CompressionLevel
	}
	return 0
}

func (x *HTTPConfig) GetCompressionTypes() []string {
	if x != nil {
		return x.CompressionTypes
	}
	return nil
}

func (x *HTTPConfig) GetCorsConfig() *CORSConfig {
	if x != nil {
		return x.CorsConfig
	}
	return nil
}

func (x *HTTPConfig) GetRequestIdHeader() string {
	if x != nil && x.RequestIdHeader != nil {
		return *x.RequestIdHeader
	}
	return ""
}

func (x *HTTPConfig) GetEnableKeepAlive() bool {
	if x != nil && x.EnableKeepAlive != nil {
		return *x.EnableKeepAlive
	}
	return false
}

func (x *HTTPConfig) GetKeepAliveTimeout() *durationpb.Duration {
	if x != nil {
		return x.KeepAliveTimeout
	}
	return nil
}

func (x *HTTPConfig) SetMaxHeaderSizeBytes(v int32) {
	x.MaxHeaderSizeBytes = &v
}

func (x *HTTPConfig) SetMaxBodySizeBytes(v int64) {
	x.MaxBodySizeBytes = &v
}

func (x *HTTPConfig) SetEnableHttp2(v bool) {
	x.EnableHttp2 = &v
}

func (x *HTTPConfig) SetEnableCompression(v bool) {
	x.EnableCompression = &v
}

func (x *HTTPConfig) SetCompressionLevel(v int32) {
	x.CompressionLevel = &v
}

func (x *HTTPConfig) SetCompressionTypes(v []string) {
	x.CompressionTypes = v
}

func (x *HTTPConfig) SetCorsConfig(v *CORSConfig) {
	x.CorsConfig = v
}

func (x *HTTPConfig) SetRequestIdHeader(v string) {
	x.RequestIdHeader = &v
}

func (x *HTTPConfig) SetEnableKeepAlive(v bool) {
	x.EnableKeepAlive = &v
}

func (x *HTTPConfig) SetKeepAliveTimeout(v *durationpb.Duration) {
	x.KeepAliveTimeout = v
}

func (x *HTTPConfig) HasMaxHeaderSizeBytes() bool {
	if x == nil {
		return false
	}
	return x.MaxHeaderSizeBytes != nil
}

func (x *HTTPConfig) HasMaxBodySizeBytes() bool {
	if x == nil {
		return false
	}
	return x.MaxBodySizeBytes != nil
}

func (x *HTTPConfig) HasEnableHttp2() bool {
	if x == nil {
		return false
	}
	return x.EnableHttp2 != nil
}

func (x *HTTPConfig) HasEnableCompression() bool {
	if x == nil {
		return false
	}
	return x.EnableCompression != nil
}

func (x *HTTPConfig) HasCompressionLevel() bool {
	if x == nil {
		return false
	}
	return x.CompressionLevel != nil
}

func (x *HTTPConfig) HasCorsConfig() bool {
	if x == nil {
		return false
	}
	return x.CorsConfig != nil
}

func (x *HTTPConfig) HasRequestIdHeader() bool {
	if x == nil {
		return false
	}
	return x.RequestIdHeader != nil
}

func (x *HTTPConfig) HasEnableKeepAlive() bool {
	if x == nil {
		return false
	}
	return x.EnableKeepAlive != nil
}

func (x *HTTPConfig) HasKeepAliveTimeout() bool {
	if x == nil {
		return false
	}
	return x.KeepAliveTimeout != nil
}

func (x *HTTPConfig) ClearMaxHeaderSizeBytes() {
	x.MaxHeaderSizeBytes = nil
}

func (x *HTTPConfig) ClearMaxBodySizeBytes() {
	x.MaxBodySizeBytes = nil
}

func (x *HTTPConfig) ClearEnableHttp2() {
	x.EnableHttp2 = nil
}

func (x *HTTPConfig) ClearEnableCompression() {
	x.EnableCompression = nil
}

func (x *HTTPConfig) ClearCompressionLevel() {
	x.CompressionLevel = nil
}

func (x *HTTPConfig) ClearCorsConfig() {
	x.CorsConfig = nil
}

func (x *HTTPConfig) ClearRequestIdHeader() {
	x.RequestIdHeader = nil
}

func (x *HTTPConfig) ClearEnableKeepAlive() {
	x.EnableKeepAlive = nil
}

func (x *HTTPConfig) ClearKeepAliveTimeout() {
	x.KeepAliveTimeout = nil
}

type HTTPConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum header size
	MaxHeaderSizeBytes *int32
	// Maximum body size
	MaxBodySizeBytes *int64
	// Enable HTTP/2
	EnableHttp2 *bool
	// Enable compression
	EnableCompression *bool
	// Compression level
	CompressionLevel *int32
	// Compression types
	CompressionTypes []string
	// CORS configuration
	CorsConfig *CORSConfig
	// Request ID header
	RequestIdHeader *string
	// Enable keep-alive
	EnableKeepAlive *bool
	// Keep-alive timeout
	KeepAliveTimeout *durationpb.Duration
}

func (b0 HTTPConfig_builder) Build() *HTTPConfig {
	m0 := &HTTPConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.MaxHeaderSizeBytes = b.MaxHeaderSizeBytes
	x.MaxBodySizeBytes = b.MaxBodySizeBytes
	x.EnableHttp2 = b.EnableHttp2
	x.EnableCompression = b.EnableCompression
	x.CompressionLevel = b.CompressionLevel
	x.CompressionTypes = b.CompressionTypes
	x.CorsConfig = b.CorsConfig
	x.RequestIdHeader = b.RequestIdHeader
	x.EnableKeepAlive = b.EnableKeepAlive
	x.KeepAliveTimeout = b.KeepAliveTimeout
	return m0
}

// CORS configuration
type CORSConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Enable CORS
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Allowed origins
	AllowedOrigins []string `protobuf:"bytes,2,rep,name=allowed_origins,json=allowedOrigins" json:"allowed_origins,omitempty"`
	// Allowed methods
	AllowedMethods []string `protobuf:"bytes,3,rep,name=allowed_methods,json=allowedMethods" json:"allowed_methods,omitempty"`
	// Allowed headers
	AllowedHeaders []string `protobuf:"bytes,4,rep,name=allowed_headers,json=allowedHeaders" json:"allowed_headers,omitempty"`
	// Exposed headers
	ExposedHeaders []string `protobuf:"bytes,5,rep,name=exposed_headers,json=exposedHeaders" json:"exposed_headers,omitempty"`
	// Allow credentials
	AllowCredentials *bool `protobuf:"varint,6,opt,name=allow_credentials,json=allowCredentials" json:"allow_credentials,omitempty"`
	// Max age
	MaxAge        *durationpb.Duration `protobuf:"bytes,7,opt,name=max_age,json=maxAge" json:"max_age,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CORSConfig) Reset() {
	*x = CORSConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CORSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CORSConfig) ProtoMessage() {}

func (x *CORSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CORSConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *CORSConfig) GetAllowedOrigins() []string {
	if x != nil {
		return x.AllowedOrigins
	}
	return nil
}

func (x *CORSConfig) GetAllowedMethods() []string {
	if x != nil {
		return x.AllowedMethods
	}
	return nil
}

func (x *CORSConfig) GetAllowedHeaders() []string {
	if x != nil {
		return x.AllowedHeaders
	}
	return nil
}

func (x *CORSConfig) GetExposedHeaders() []string {
	if x != nil {
		return x.ExposedHeaders
	}
	return nil
}

func (x *CORSConfig) GetAllowCredentials() bool {
	if x != nil && x.AllowCredentials != nil {
		return *x.AllowCredentials
	}
	return false
}

func (x *CORSConfig) GetMaxAge() *durationpb.Duration {
	if x != nil {
		return x.MaxAge
	}
	return nil
}

func (x *CORSConfig) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *CORSConfig) SetAllowedOrigins(v []string) {
	x.AllowedOrigins = v
}

func (x *CORSConfig) SetAllowedMethods(v []string) {
	x.AllowedMethods = v
}

func (x *CORSConfig) SetAllowedHeaders(v []string) {
	x.AllowedHeaders = v
}

func (x *CORSConfig) SetExposedHeaders(v []string) {
	x.ExposedHeaders = v
}

func (x *CORSConfig) SetAllowCredentials(v bool) {
	x.AllowCredentials = &v
}

func (x *CORSConfig) SetMaxAge(v *durationpb.Duration) {
	x.MaxAge = v
}

func (x *CORSConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *CORSConfig) HasAllowCredentials() bool {
	if x == nil {
		return false
	}
	return x.AllowCredentials != nil
}

func (x *CORSConfig) HasMaxAge() bool {
	if x == nil {
		return false
	}
	return x.MaxAge != nil
}

func (x *CORSConfig) ClearEnabled() {
	x.Enabled = nil
}

func (x *CORSConfig) ClearAllowCredentials() {
	x.AllowCredentials = nil
}

func (x *CORSConfig) ClearMaxAge() {
	x.MaxAge = nil
}

type CORSConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable CORS
	Enabled *bool
	// Allowed origins
	AllowedOrigins []string
	// Allowed methods
	AllowedMethods []string
	// Allowed headers
	AllowedHeaders []string
	// Exposed headers
	ExposedHeaders []string
	// Allow credentials
	AllowCredentials *bool
	// Max age
	MaxAge *durationpb.Duration
}

func (b0 CORSConfig_builder) Build() *CORSConfig {
	m0 := &CORSConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Enabled = b.Enabled
	x.AllowedOrigins = b.AllowedOrigins
	x.AllowedMethods = b.AllowedMethods
	x.AllowedHeaders = b.AllowedHeaders
	x.ExposedHeaders = b.ExposedHeaders
	x.AllowCredentials = b.AllowCredentials
	x.MaxAge = b.MaxAge
	return m0
}

// Timeout configuration
type TimeoutConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Read timeout
	ReadTimeout *durationpb.Duration `protobuf:"bytes,1,opt,name=read_timeout,json=readTimeout" json:"read_timeout,omitempty"`
	// Write timeout
	WriteTimeout *durationpb.Duration `protobuf:"bytes,2,opt,name=write_timeout,json=writeTimeout" json:"write_timeout,omitempty"`
	// Idle timeout
	IdleTimeout *durationpb.Duration `protobuf:"bytes,3,opt,name=idle_timeout,json=idleTimeout" json:"idle_timeout,omitempty"`
	// Request timeout
	RequestTimeout *durationpb.Duration `protobuf:"bytes,4,opt,name=request_timeout,json=requestTimeout" json:"request_timeout,omitempty"`
	// Shutdown timeout
	ShutdownTimeout *durationpb.Duration `protobuf:"bytes,5,opt,name=shutdown_timeout,json=shutdownTimeout" json:"shutdown_timeout,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TimeoutConfig) Reset() {
	*x = TimeoutConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeoutConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutConfig) ProtoMessage() {}

func (x *TimeoutConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TimeoutConfig) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *TimeoutConfig) GetWriteTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

func (x *TimeoutConfig) GetIdleTimeout() *durationpb.Duration {
	if x != nil {
		return x.IdleTimeout
	}
	return nil
}

func (x *TimeoutConfig) GetRequestTimeout() *durationpb.Duration {
	if x != nil {
		return x.RequestTimeout
	}
	return nil
}

func (x *TimeoutConfig) GetShutdownTimeout() *durationpb.Duration {
	if x != nil {
		return x.ShutdownTimeout
	}
	return nil
}

func (x *TimeoutConfig) SetReadTimeout(v *durationpb.Duration) {
	x.ReadTimeout = v
}

func (x *TimeoutConfig) SetWriteTimeout(v *durationpb.Duration) {
	x.WriteTimeout = v
}

func (x *TimeoutConfig) SetIdleTimeout(v *durationpb.Duration) {
	x.IdleTimeout = v
}

func (x *TimeoutConfig) SetRequestTimeout(v *durationpb.Duration) {
	x.RequestTimeout = v
}

func (x *TimeoutConfig) SetShutdownTimeout(v *durationpb.Duration) {
	x.ShutdownTimeout = v
}

func (x *TimeoutConfig) HasReadTimeout() bool {
	if x == nil {
		return false
	}
	return x.ReadTimeout != nil
}

func (x *TimeoutConfig) HasWriteTimeout() bool {
	if x == nil {
		return false
	}
	return x.WriteTimeout != nil
}

func (x *TimeoutConfig) HasIdleTimeout() bool {
	if x == nil {
		return false
	}
	return x.IdleTimeout != nil
}

func (x *TimeoutConfig) HasRequestTimeout() bool {
	if x == nil {
		return false
	}
	return x.RequestTimeout != nil
}

func (x *TimeoutConfig) HasShutdownTimeout() bool {
	if x == nil {
		return false
	}
	return x.ShutdownTimeout != nil
}

func (x *TimeoutConfig) ClearReadTimeout() {
	x.ReadTimeout = nil
}

func (x *TimeoutConfig) ClearWriteTimeout() {
	x.WriteTimeout = nil
}

func (x *TimeoutConfig) ClearIdleTimeout() {
	x.IdleTimeout = nil
}

func (x *TimeoutConfig) ClearRequestTimeout() {
	x.RequestTimeout = nil
}

func (x *TimeoutConfig) ClearShutdownTimeout() {
	x.ShutdownTimeout = nil
}

type TimeoutConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Read timeout
	ReadTimeout *durationpb.Duration
	// Write timeout
	WriteTimeout *durationpb.Duration
	// Idle timeout
	IdleTimeout *durationpb.Duration
	// Request timeout
	RequestTimeout *durationpb.Duration
	// Shutdown timeout
	ShutdownTimeout *durationpb.Duration
}

func (b0 TimeoutConfig_builder) Build() *TimeoutConfig {
	m0 := &TimeoutConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.ReadTimeout = b.ReadTimeout
	x.WriteTimeout = b.WriteTimeout
	x.IdleTimeout = b.IdleTimeout
	x.RequestTimeout = b.RequestTimeout
	x.ShutdownTimeout = b.ShutdownTimeout
	return m0
}

// Security configuration
type SecurityConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Rate limiting
	RateLimit *RateLimitConfig `protobuf:"bytes,1,opt,name=rate_limit,json=rateLimit" json:"rate_limit,omitempty"`
	// IP filtering
	IpFilter *IPFilterConfig `protobuf:"bytes,2,opt,name=ip_filter,json=ipFilter" json:"ip_filter,omitempty"`
	// Authentication configuration
	Authentication *AuthenticationConfig `protobuf:"bytes,3,opt,name=authentication" json:"authentication,omitempty"`
	// Security headers
	SecurityHeaders *SecurityHeadersConfig `protobuf:"bytes,4,opt,name=security_headers,json=securityHeaders" json:"security_headers,omitempty"`
	// Request validation
	RequestValidation *RequestValidationConfig `protobuf:"bytes,5,opt,name=request_validation,json=requestValidation" json:"request_validation,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SecurityConfig) Reset() {
	*x = SecurityConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityConfig) ProtoMessage() {}

func (x *SecurityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SecurityConfig) GetRateLimit() *RateLimitConfig {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

func (x *SecurityConfig) GetIpFilter() *IPFilterConfig {
	if x != nil {
		return x.IpFilter
	}
	return nil
}

func (x *SecurityConfig) GetAuthentication() *AuthenticationConfig {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *SecurityConfig) GetSecurityHeaders() *SecurityHeadersConfig {
	if x != nil {
		return x.SecurityHeaders
	}
	return nil
}

func (x *SecurityConfig) GetRequestValidation() *RequestValidationConfig {
	if x != nil {
		return x.RequestValidation
	}
	return nil
}

func (x *SecurityConfig) SetRateLimit(v *RateLimitConfig) {
	x.RateLimit = v
}

func (x *SecurityConfig) SetIpFilter(v *IPFilterConfig) {
	x.IpFilter = v
}

func (x *SecurityConfig) SetAuthentication(v *AuthenticationConfig) {
	x.Authentication = v
}

func (x *SecurityConfig) SetSecurityHeaders(v *SecurityHeadersConfig) {
	x.SecurityHeaders = v
}

func (x *SecurityConfig) SetRequestValidation(v *RequestValidationConfig) {
	x.RequestValidation = v
}

func (x *SecurityConfig) HasRateLimit() bool {
	if x == nil {
		return false
	}
	return x.RateLimit != nil
}

func (x *SecurityConfig) HasIpFilter() bool {
	if x == nil {
		return false
	}
	return x.IpFilter != nil
}

func (x *SecurityConfig) HasAuthentication() bool {
	if x == nil {
		return false
	}
	return x.Authentication != nil
}

func (x *SecurityConfig) HasSecurityHeaders() bool {
	if x == nil {
		return false
	}
	return x.SecurityHeaders != nil
}

func (x *SecurityConfig) HasRequestValidation() bool {
	if x == nil {
		return false
	}
	return x.RequestValidation != nil
}

func (x *SecurityConfig) ClearRateLimit() {
	x.RateLimit = nil
}

func (x *SecurityConfig) ClearIpFilter() {
	x.IpFilter = nil
}

func (x *SecurityConfig) ClearAuthentication() {
	x.Authentication = nil
}

func (x *SecurityConfig) ClearSecurityHeaders() {
	x.SecurityHeaders = nil
}

func (x *SecurityConfig) ClearRequestValidation() {
	x.RequestValidation = nil
}

type SecurityConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Rate limiting
	RateLimit *RateLimitConfig
	// IP filtering
	IpFilter *IPFilterConfig
	// Authentication configuration
	Authentication *AuthenticationConfig
	// Security headers
	SecurityHeaders *SecurityHeadersConfig
	// Request validation
	RequestValidation *RequestValidationConfig
}

func (b0 SecurityConfig_builder) Build() *SecurityConfig {
	m0 := &SecurityConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.RateLimit = b.RateLimit
	x.IpFilter = b.IpFilter
	x.Authentication = b.Authentication
	x.SecurityHeaders = b.SecurityHeaders
	x.RequestValidation = b.RequestValidation
	return m0
}

// Rate limiting configuration
type RateLimitConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Enable rate limiting
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Requests per second
	RequestsPerSecond *int32 `protobuf:"varint,2,opt,name=requests_per_second,json=requestsPerSecond" json:"requests_per_second,omitempty"`
	// Burst size
	BurstSize *int32 `protobuf:"varint,3,opt,name=burst_size,json=burstSize" json:"burst_size,omitempty"`
	// Rate limit strategy
	Strategy *RateLimitStrategy `protobuf:"varint,4,opt,name=strategy,enum=gcommon.v1.web.RateLimitStrategy" json:"strategy,omitempty"`
	// Rate limit key extractor
	KeyExtractor *string `protobuf:"bytes,5,opt,name=key_extractor,json=keyExtractor" json:"key_extractor,omitempty"`
	// Skip conditions
	SkipConditions []string `protobuf:"bytes,6,rep,name=skip_conditions,json=skipConditions" json:"skip_conditions,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RateLimitConfig) Reset() {
	*x = RateLimitConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitConfig) ProtoMessage() {}

func (x *RateLimitConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RateLimitConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *RateLimitConfig) GetRequestsPerSecond() int32 {
	if x != nil && x.RequestsPerSecond != nil {
		return *x.RequestsPerSecond
	}
	return 0
}

func (x *RateLimitConfig) GetBurstSize() int32 {
	if x != nil && x.BurstSize != nil {
		return *x.BurstSize
	}
	return 0
}

func (x *RateLimitConfig) GetStrategy() RateLimitStrategy {
	if x != nil && x.Strategy != nil {
		return *x.Strategy
	}
	return RateLimitStrategy_RATE_LIMIT_STRATEGY_UNSPECIFIED
}

func (x *RateLimitConfig) GetKeyExtractor() string {
	if x != nil && x.KeyExtractor != nil {
		return *x.KeyExtractor
	}
	return ""
}

func (x *RateLimitConfig) GetSkipConditions() []string {
	if x != nil {
		return x.SkipConditions
	}
	return nil
}

func (x *RateLimitConfig) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *RateLimitConfig) SetRequestsPerSecond(v int32) {
	x.RequestsPerSecond = &v
}

func (x *RateLimitConfig) SetBurstSize(v int32) {
	x.BurstSize = &v
}

func (x *RateLimitConfig) SetStrategy(v RateLimitStrategy) {
	x.Strategy = &v
}

func (x *RateLimitConfig) SetKeyExtractor(v string) {
	x.KeyExtractor = &v
}

func (x *RateLimitConfig) SetSkipConditions(v []string) {
	x.SkipConditions = v
}

func (x *RateLimitConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *RateLimitConfig) HasRequestsPerSecond() bool {
	if x == nil {
		return false
	}
	return x.RequestsPerSecond != nil
}

func (x *RateLimitConfig) HasBurstSize() bool {
	if x == nil {
		return false
	}
	return x.BurstSize != nil
}

func (x *RateLimitConfig) HasStrategy() bool {
	if x == nil {
		return false
	}
	return x.Strategy != nil
}

func (x *RateLimitConfig) HasKeyExtractor() bool {
	if x == nil {
		return false
	}
	return x.KeyExtractor != nil
}

func (x *RateLimitConfig) ClearEnabled() {
	x.Enabled = nil
}

func (x *RateLimitConfig) ClearRequestsPerSecond() {
	x.RequestsPerSecond = nil
}

func (x *RateLimitConfig) ClearBurstSize() {
	x.BurstSize = nil
}

func (x *RateLimitConfig) ClearStrategy() {
	x.Strategy = nil
}

func (x *RateLimitConfig) ClearKeyExtractor() {
	x.KeyExtractor = nil
}

type RateLimitConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable rate limiting
	Enabled *bool
	// Requests per second
	RequestsPerSecond *int32
	// Burst size
	BurstSize *int32
	// Rate limit strategy
	Strategy *RateLimitStrategy
	// Rate limit key extractor
	KeyExtractor *string
	// Skip conditions
	SkipConditions []string
}

func (b0 RateLimitConfig_builder) Build() *RateLimitConfig {
	m0 := &RateLimitConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Enabled = b.Enabled
	x.RequestsPerSecond = b.RequestsPerSecond
	x.BurstSize = b.BurstSize
	x.Strategy = b.Strategy
	x.KeyExtractor = b.KeyExtractor
	x.SkipConditions = b.SkipConditions
	return m0
}

// IP filtering configuration
type IPFilterConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Enable IP filtering
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Allowed IP addresses/ranges
	AllowedIps []string `protobuf:"bytes,2,rep,name=allowed_ips,json=allowedIps" json:"allowed_ips,omitempty"`
	// Blocked IP addresses/ranges
	BlockedIps []string `protobuf:"bytes,3,rep,name=blocked_ips,json=blockedIps" json:"blocked_ips,omitempty"`
	// Filter mode
	Mode *IPFilterMode `protobuf:"varint,4,opt,name=mode,enum=gcommon.v1.web.IPFilterMode" json:"mode,omitempty"`
	// Trusted proxies
	TrustedProxies []string `protobuf:"bytes,5,rep,name=trusted_proxies,json=trustedProxies" json:"trusted_proxies,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *IPFilterConfig) Reset() {
	*x = IPFilterConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPFilterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPFilterConfig) ProtoMessage() {}

func (x *IPFilterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IPFilterConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *IPFilterConfig) GetAllowedIps() []string {
	if x != nil {
		return x.AllowedIps
	}
	return nil
}

func (x *IPFilterConfig) GetBlockedIps() []string {
	if x != nil {
		return x.BlockedIps
	}
	return nil
}

func (x *IPFilterConfig) GetMode() IPFilterMode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return IPFilterMode_IP_FILTER_MODE_UNSPECIFIED
}

func (x *IPFilterConfig) GetTrustedProxies() []string {
	if x != nil {
		return x.TrustedProxies
	}
	return nil
}

func (x *IPFilterConfig) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *IPFilterConfig) SetAllowedIps(v []string) {
	x.AllowedIps = v
}

func (x *IPFilterConfig) SetBlockedIps(v []string) {
	x.BlockedIps = v
}

func (x *IPFilterConfig) SetMode(v IPFilterMode) {
	x.Mode = &v
}

func (x *IPFilterConfig) SetTrustedProxies(v []string) {
	x.TrustedProxies = v
}

func (x *IPFilterConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *IPFilterConfig) HasMode() bool {
	if x == nil {
		return false
	}
	return x.Mode != nil
}

func (x *IPFilterConfig) ClearEnabled() {
	x.Enabled = nil
}

func (x *IPFilterConfig) ClearMode() {
	x.Mode = nil
}

type IPFilterConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable IP filtering
	Enabled *bool
	// Allowed IP addresses/ranges
	AllowedIps []string
	// Blocked IP addresses/ranges
	BlockedIps []string
	// Filter mode
	Mode *IPFilterMode
	// Trusted proxies
	TrustedProxies []string
}

func (b0 IPFilterConfig_builder) Build() *IPFilterConfig {
	m0 := &IPFilterConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Enabled = b.Enabled
	x.AllowedIps = b.AllowedIps
	x.BlockedIps = b.BlockedIps
	x.Mode = b.Mode
	x.TrustedProxies = b.TrustedProxies
	return m0
}

// Authentication configuration
type AuthenticationConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Enable authentication
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Authentication schemes
	Schemes []*AuthScheme `protobuf:"bytes,2,rep,name=schemes" json:"schemes,omitempty"`
	// Default scheme
	DefaultScheme *string `protobuf:"bytes,3,opt,name=default_scheme,json=defaultScheme" json:"default_scheme,omitempty"`
	// Skip paths
	SkipPaths []string `protobuf:"bytes,4,rep,name=skip_paths,json=skipPaths" json:"skip_paths,omitempty"`
	// JWT configuration
	JwtConfig *JWTConfig `protobuf:"bytes,5,opt,name=jwt_config,json=jwtConfig" json:"jwt_config,omitempty"`
	// Basic auth configuration
	BasicAuthConfig *BasicAuthConfig `protobuf:"bytes,6,opt,name=basic_auth_config,json=basicAuthConfig" json:"basic_auth_config,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AuthenticationConfig) Reset() {
	*x = AuthenticationConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationConfig) ProtoMessage() {}

func (x *AuthenticationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthenticationConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *AuthenticationConfig) GetSchemes() []*AuthScheme {
	if x != nil {
		return x.Schemes
	}
	return nil
}

func (x *AuthenticationConfig) GetDefaultScheme() string {
	if x != nil && x.DefaultScheme != nil {
		return *x.DefaultScheme
	}
	return ""
}

func (x *AuthenticationConfig) GetSkipPaths() []string {
	if x != nil {
		return x.SkipPaths
	}
	return nil
}

func (x *AuthenticationConfig) GetJwtConfig() *JWTConfig {
	if x != nil {
		return x.JwtConfig
	}
	return nil
}

func (x *AuthenticationConfig) GetBasicAuthConfig() *BasicAuthConfig {
	if x != nil {
		return x.BasicAuthConfig
	}
	return nil
}

func (x *AuthenticationConfig) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *AuthenticationConfig) SetSchemes(v []*AuthScheme) {
	x.Schemes = v
}

func (x *AuthenticationConfig) SetDefaultScheme(v string) {
	x.DefaultScheme = &v
}

func (x *AuthenticationConfig) SetSkipPaths(v []string) {
	x.SkipPaths = v
}

func (x *AuthenticationConfig) SetJwtConfig(v *JWTConfig) {
	x.JwtConfig = v
}

func (x *AuthenticationConfig) SetBasicAuthConfig(v *BasicAuthConfig) {
	x.BasicAuthConfig = v
}

func (x *AuthenticationConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *AuthenticationConfig) HasDefaultScheme() bool {
	if x == nil {
		return false
	}
	return x.DefaultScheme != nil
}

func (x *AuthenticationConfig) HasJwtConfig() bool {
	if x == nil {
		return false
	}
	return x.JwtConfig != nil
}

func (x *AuthenticationConfig) HasBasicAuthConfig() bool {
	if x == nil {
		return false
	}
	return x.BasicAuthConfig != nil
}

func (x *AuthenticationConfig) ClearEnabled() {
	x.Enabled = nil
}

func (x *AuthenticationConfig) ClearDefaultScheme() {
	x.DefaultScheme = nil
}

func (x *AuthenticationConfig) ClearJwtConfig() {
	x.JwtConfig = nil
}

func (x *AuthenticationConfig) ClearBasicAuthConfig() {
	x.BasicAuthConfig = nil
}

type AuthenticationConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable authentication
	Enabled *bool
	// Authentication schemes
	Schemes []*AuthScheme
	// Default scheme
	DefaultScheme *string
	// Skip paths
	SkipPaths []string
	// JWT configuration
	JwtConfig *JWTConfig
	// Basic auth configuration
	BasicAuthConfig *BasicAuthConfig
}

func (b0 AuthenticationConfig_builder) Build() *AuthenticationConfig {
	m0 := &AuthenticationConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Enabled = b.Enabled
	x.Schemes = b.Schemes
	x.DefaultScheme = b.DefaultScheme
	x.SkipPaths = b.SkipPaths
	x.JwtConfig = b.JwtConfig
	x.BasicAuthConfig = b.BasicAuthConfig
	return m0
}

// Authentication scheme
type AuthScheme struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Scheme name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Scheme type
	Type *AuthSchemeType `protobuf:"varint,2,opt,name=type,enum=gcommon.v1.web.AuthSchemeType" json:"type,omitempty"`
	// Scheme configuration
	Config *anypb.Any `protobuf:"bytes,3,opt,name=config" json:"config,omitempty"`
	// Enabled status
	Enabled       *bool `protobuf:"varint,4,opt,name=enabled" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthScheme) Reset() {
	*x = AuthScheme{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthScheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthScheme) ProtoMessage() {}

func (x *AuthScheme) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthScheme) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AuthScheme) GetType() AuthSchemeType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return AuthSchemeType_AUTH_SCHEME_TYPE_UNSPECIFIED
}

func (x *AuthScheme) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *AuthScheme) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *AuthScheme) SetName(v string) {
	x.Name = &v
}

func (x *AuthScheme) SetType(v AuthSchemeType) {
	x.Type = &v
}

func (x *AuthScheme) SetConfig(v *anypb.Any) {
	x.Config = v
}

func (x *AuthScheme) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *AuthScheme) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *AuthScheme) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *AuthScheme) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *AuthScheme) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *AuthScheme) ClearName() {
	x.Name = nil
}

func (x *AuthScheme) ClearType() {
	x.Type = nil
}

func (x *AuthScheme) ClearConfig() {
	x.Config = nil
}

func (x *AuthScheme) ClearEnabled() {
	x.Enabled = nil
}

type AuthScheme_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Scheme name
	Name *string
	// Scheme type
	Type *AuthSchemeType
	// Scheme configuration
	Config *anypb.Any
	// Enabled status
	Enabled *bool
}

func (b0 AuthScheme_builder) Build() *AuthScheme {
	m0 := &AuthScheme{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Type = b.Type
	x.Config = b.Config
	x.Enabled = b.Enabled
	return m0
}

// JWT configuration
type JWTConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Secret key
	Secret *string `protobuf:"bytes,1,opt,name=secret" json:"secret,omitempty"`
	// Public key
	PublicKey *string `protobuf:"bytes,2,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	// Algorithm
	Algorithm *string `protobuf:"bytes,3,opt,name=algorithm" json:"algorithm,omitempty"`
	// Issuer
	Issuer *string `protobuf:"bytes,4,opt,name=issuer" json:"issuer,omitempty"`
	// Audience
	Audience []string `protobuf:"bytes,5,rep,name=audience" json:"audience,omitempty"`
	// Token expiration
	Expiration *durationpb.Duration `protobuf:"bytes,6,opt,name=expiration" json:"expiration,omitempty"`
	// Claims mapping
	ClaimsMapping map[string]string `protobuf:"bytes,7,rep,name=claims_mapping,json=claimsMapping" json:"claims_mapping,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JWTConfig) Reset() {
	*x = JWTConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JWTConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTConfig) ProtoMessage() {}

func (x *JWTConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JWTConfig) GetSecret() string {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return ""
}

func (x *JWTConfig) GetPublicKey() string {
	if x != nil && x.PublicKey != nil {
		return *x.PublicKey
	}
	return ""
}

func (x *JWTConfig) GetAlgorithm() string {
	if x != nil && x.Algorithm != nil {
		return *x.Algorithm
	}
	return ""
}

func (x *JWTConfig) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *JWTConfig) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *JWTConfig) GetExpiration() *durationpb.Duration {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *JWTConfig) GetClaimsMapping() map[string]string {
	if x != nil {
		return x.ClaimsMapping
	}
	return nil
}

func (x *JWTConfig) SetSecret(v string) {
	x.Secret = &v
}

func (x *JWTConfig) SetPublicKey(v string) {
	x.PublicKey = &v
}

func (x *JWTConfig) SetAlgorithm(v string) {
	x.Algorithm = &v
}

func (x *JWTConfig) SetIssuer(v string) {
	x.Issuer = &v
}

func (x *JWTConfig) SetAudience(v []string) {
	x.Audience = v
}

func (x *JWTConfig) SetExpiration(v *durationpb.Duration) {
	x.Expiration = v
}

func (x *JWTConfig) SetClaimsMapping(v map[string]string) {
	x.ClaimsMapping = v
}

func (x *JWTConfig) HasSecret() bool {
	if x == nil {
		return false
	}
	return x.Secret != nil
}

func (x *JWTConfig) HasPublicKey() bool {
	if x == nil {
		return false
	}
	return x.PublicKey != nil
}

func (x *JWTConfig) HasAlgorithm() bool {
	if x == nil {
		return false
	}
	return x.Algorithm != nil
}

func (x *JWTConfig) HasIssuer() bool {
	if x == nil {
		return false
	}
	return x.Issuer != nil
}

func (x *JWTConfig) HasExpiration() bool {
	if x == nil {
		return false
	}
	return x.Expiration != nil
}

func (x *JWTConfig) ClearSecret() {
	x.Secret = nil
}

func (x *JWTConfig) ClearPublicKey() {
	x.PublicKey = nil
}

func (x *JWTConfig) ClearAlgorithm() {
	x.Algorithm = nil
}

func (x *JWTConfig) ClearIssuer() {
	x.Issuer = nil
}

func (x *JWTConfig) ClearExpiration() {
	x.Expiration = nil
}

type JWTConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Secret key
	Secret *string
	// Public key
	PublicKey *string
	// Algorithm
	Algorithm *string
	// Issuer
	Issuer *string
	// Audience
	Audience []string
	// Token expiration
	Expiration *durationpb.Duration
	// Claims mapping
	ClaimsMapping map[string]string
}

func (b0 JWTConfig_builder) Build() *JWTConfig {
	m0 := &JWTConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Secret = b.Secret
	x.PublicKey = b.PublicKey
	x.Algorithm = b.Algorithm
	x.Issuer = b.Issuer
	x.Audience = b.Audience
	x.Expiration = b.Expiration
	x.ClaimsMapping = b.ClaimsMapping
	return m0
}

// Basic authentication configuration
type BasicAuthConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Realm
	Realm *string `protobuf:"bytes,1,opt,name=realm" json:"realm,omitempty"`
	// User credentials
	Users map[string]string `protobuf:"bytes,2,rep,name=users" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Password hash algorithm
	HashAlgorithm *string `protobuf:"bytes,3,opt,name=hash_algorithm,json=hashAlgorithm" json:"hash_algorithm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BasicAuthConfig) Reset() {
	*x = BasicAuthConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BasicAuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicAuthConfig) ProtoMessage() {}

func (x *BasicAuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BasicAuthConfig) GetRealm() string {
	if x != nil && x.Realm != nil {
		return *x.Realm
	}
	return ""
}

func (x *BasicAuthConfig) GetUsers() map[string]string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *BasicAuthConfig) GetHashAlgorithm() string {
	if x != nil && x.HashAlgorithm != nil {
		return *x.HashAlgorithm
	}
	return ""
}

func (x *BasicAuthConfig) SetRealm(v string) {
	x.Realm = &v
}

func (x *BasicAuthConfig) SetUsers(v map[string]string) {
	x.Users = v
}

func (x *BasicAuthConfig) SetHashAlgorithm(v string) {
	x.HashAlgorithm = &v
}

func (x *BasicAuthConfig) HasRealm() bool {
	if x == nil {
		return false
	}
	return x.Realm != nil
}

func (x *BasicAuthConfig) HasHashAlgorithm() bool {
	if x == nil {
		return false
	}
	return x.HashAlgorithm != nil
}

func (x *BasicAuthConfig) ClearRealm() {
	x.Realm = nil
}

func (x *BasicAuthConfig) ClearHashAlgorithm() {
	x.HashAlgorithm = nil
}

type BasicAuthConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Realm
	Realm *string
	// User credentials
	Users map[string]string
	// Password hash algorithm
	HashAlgorithm *string
}

func (b0 BasicAuthConfig_builder) Build() *BasicAuthConfig {
	m0 := &BasicAuthConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Realm = b.Realm
	x.Users = b.Users
	x.HashAlgorithm = b.HashAlgorithm
	return m0
}

// Security headers configuration
type SecurityHeadersConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Enable security headers
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Content Security Policy
	ContentSecurityPolicy *string `protobuf:"bytes,2,opt,name=content_security_policy,json=contentSecurityPolicy" json:"content_security_policy,omitempty"`
	// X-Frame-Options
	XFrameOptions *string `protobuf:"bytes,3,opt,name=x_frame_options,json=xFrameOptions" json:"x_frame_options,omitempty"`
	// X-Content-Type-Options
	XContentTypeOptions *string `protobuf:"bytes,4,opt,name=x_content_type_options,json=xContentTypeOptions" json:"x_content_type_options,omitempty"`
	// X-XSS-Protection
	XXssProtection *string `protobuf:"bytes,5,opt,name=x_xss_protection,json=xXssProtection" json:"x_xss_protection,omitempty"`
	// Strict-Transport-Security
	StrictTransportSecurity *string `protobuf:"bytes,6,opt,name=strict_transport_security,json=strictTransportSecurity" json:"strict_transport_security,omitempty"`
	// Referrer-Policy
	ReferrerPolicy *string `protobuf:"bytes,7,opt,name=referrer_policy,json=referrerPolicy" json:"referrer_policy,omitempty"`
	// Custom headers
	CustomHeaders map[string]string `protobuf:"bytes,8,rep,name=custom_headers,json=customHeaders" json:"custom_headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityHeadersConfig) Reset() {
	*x = SecurityHeadersConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityHeadersConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityHeadersConfig) ProtoMessage() {}

func (x *SecurityHeadersConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SecurityHeadersConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *SecurityHeadersConfig) GetContentSecurityPolicy() string {
	if x != nil && x.ContentSecurityPolicy != nil {
		return *x.ContentSecurityPolicy
	}
	return ""
}

func (x *SecurityHeadersConfig) GetXFrameOptions() string {
	if x != nil && x.XFrameOptions != nil {
		return *x.XFrameOptions
	}
	return ""
}

func (x *SecurityHeadersConfig) GetXContentTypeOptions() string {
	if x != nil && x.XContentTypeOptions != nil {
		return *x.XContentTypeOptions
	}
	return ""
}

func (x *SecurityHeadersConfig) GetXXssProtection() string {
	if x != nil && x.XXssProtection != nil {
		return *x.XXssProtection
	}
	return ""
}

func (x *SecurityHeadersConfig) GetStrictTransportSecurity() string {
	if x != nil && x.StrictTransportSecurity != nil {
		return *x.StrictTransportSecurity
	}
	return ""
}

func (x *SecurityHeadersConfig) GetReferrerPolicy() string {
	if x != nil && x.ReferrerPolicy != nil {
		return *x.ReferrerPolicy
	}
	return ""
}

func (x *SecurityHeadersConfig) GetCustomHeaders() map[string]string {
	if x != nil {
		return x.CustomHeaders
	}
	return nil
}

func (x *SecurityHeadersConfig) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *SecurityHeadersConfig) SetContentSecurityPolicy(v string) {
	x.ContentSecurityPolicy = &v
}

func (x *SecurityHeadersConfig) SetXFrameOptions(v string) {
	x.XFrameOptions = &v
}

func (x *SecurityHeadersConfig) SetXContentTypeOptions(v string) {
	x.XContentTypeOptions = &v
}

func (x *SecurityHeadersConfig) SetXXssProtection(v string) {
	x.XXssProtection = &v
}

func (x *SecurityHeadersConfig) SetStrictTransportSecurity(v string) {
	x.StrictTransportSecurity = &v
}

func (x *SecurityHeadersConfig) SetReferrerPolicy(v string) {
	x.ReferrerPolicy = &v
}

func (x *SecurityHeadersConfig) SetCustomHeaders(v map[string]string) {
	x.CustomHeaders = v
}

func (x *SecurityHeadersConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *SecurityHeadersConfig) HasContentSecurityPolicy() bool {
	if x == nil {
		return false
	}
	return x.ContentSecurityPolicy != nil
}

func (x *SecurityHeadersConfig) HasXFrameOptions() bool {
	if x == nil {
		return false
	}
	return x.XFrameOptions != nil
}

func (x *SecurityHeadersConfig) HasXContentTypeOptions() bool {
	if x == nil {
		return false
	}
	return x.XContentTypeOptions != nil
}

func (x *SecurityHeadersConfig) HasXXssProtection() bool {
	if x == nil {
		return false
	}
	return x.XXssProtection != nil
}

func (x *SecurityHeadersConfig) HasStrictTransportSecurity() bool {
	if x == nil {
		return false
	}
	return x.StrictTransportSecurity != nil
}

func (x *SecurityHeadersConfig) HasReferrerPolicy() bool {
	if x == nil {
		return false
	}
	return x.ReferrerPolicy != nil
}

func (x *SecurityHeadersConfig) ClearEnabled() {
	x.Enabled = nil
}

func (x *SecurityHeadersConfig) ClearContentSecurityPolicy() {
	x.ContentSecurityPolicy = nil
}

func (x *SecurityHeadersConfig) ClearXFrameOptions() {
	x.XFrameOptions = nil
}

func (x *SecurityHeadersConfig) ClearXContentTypeOptions() {
	x.XContentTypeOptions = nil
}

func (x *SecurityHeadersConfig) ClearXXssProtection() {
	x.XXssProtection = nil
}

func (x *SecurityHeadersConfig) ClearStrictTransportSecurity() {
	x.StrictTransportSecurity = nil
}

func (x *SecurityHeadersConfig) ClearReferrerPolicy() {
	x.ReferrerPolicy = nil
}

type SecurityHeadersConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable security headers
	Enabled *bool
	// Content Security Policy
	ContentSecurityPolicy *string
	// X-Frame-Options
	XFrameOptions *string
	// X-Content-Type-Options
	XContentTypeOptions *string
	// X-XSS-Protection
	XXssProtection *string
	// Strict-Transport-Security
	StrictTransportSecurity *string
	// Referrer-Policy
	ReferrerPolicy *string
	// Custom headers
	CustomHeaders map[string]string
}

func (b0 SecurityHeadersConfig_builder) Build() *SecurityHeadersConfig {
	m0 := &SecurityHeadersConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Enabled = b.Enabled
	x.ContentSecurityPolicy = b.ContentSecurityPolicy
	x.XFrameOptions = b.XFrameOptions
	x.XContentTypeOptions = b.XContentTypeOptions
	x.XXssProtection = b.XXssProtection
	x.StrictTransportSecurity = b.StrictTransportSecurity
	x.ReferrerPolicy = b.ReferrerPolicy
	x.CustomHeaders = b.CustomHeaders
	return m0
}

// Request validation configuration
type RequestValidationConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Enable request validation
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Maximum request size
	MaxRequestSizeBytes *int64 `protobuf:"varint,2,opt,name=max_request_size_bytes,json=maxRequestSizeBytes" json:"max_request_size_bytes,omitempty"`
	// Allowed content types
	AllowedContentTypes []string `protobuf:"bytes,3,rep,name=allowed_content_types,json=allowedContentTypes" json:"allowed_content_types,omitempty"`
	// Validate JSON schema
	ValidateJsonSchema *bool `protobuf:"varint,4,opt,name=validate_json_schema,json=validateJsonSchema" json:"validate_json_schema,omitempty"`
	// JSON schema definitions
	JsonSchemas map[string]string `protobuf:"bytes,5,rep,name=json_schemas,json=jsonSchemas" json:"json_schemas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Custom validators
	CustomValidators []string `protobuf:"bytes,6,rep,name=custom_validators,json=customValidators" json:"custom_validators,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RequestValidationConfig) Reset() {
	*x = RequestValidationConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestValidationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestValidationConfig) ProtoMessage() {}

func (x *RequestValidationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RequestValidationConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *RequestValidationConfig) GetMaxRequestSizeBytes() int64 {
	if x != nil && x.MaxRequestSizeBytes != nil {
		return *x.MaxRequestSizeBytes
	}
	return 0
}

func (x *RequestValidationConfig) GetAllowedContentTypes() []string {
	if x != nil {
		return x.AllowedContentTypes
	}
	return nil
}

func (x *RequestValidationConfig) GetValidateJsonSchema() bool {
	if x != nil && x.ValidateJsonSchema != nil {
		return *x.ValidateJsonSchema
	}
	return false
}

func (x *RequestValidationConfig) GetJsonSchemas() map[string]string {
	if x != nil {
		return x.JsonSchemas
	}
	return nil
}

func (x *RequestValidationConfig) GetCustomValidators() []string {
	if x != nil {
		return x.CustomValidators
	}
	return nil
}

func (x *RequestValidationConfig) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *RequestValidationConfig) SetMaxRequestSizeBytes(v int64) {
	x.MaxRequestSizeBytes = &v
}

func (x *RequestValidationConfig) SetAllowedContentTypes(v []string) {
	x.AllowedContentTypes = v
}

func (x *RequestValidationConfig) SetValidateJsonSchema(v bool) {
	x.ValidateJsonSchema = &v
}

func (x *RequestValidationConfig) SetJsonSchemas(v map[string]string) {
	x.JsonSchemas = v
}

func (x *RequestValidationConfig) SetCustomValidators(v []string) {
	x.CustomValidators = v
}

func (x *RequestValidationConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *RequestValidationConfig) HasMaxRequestSizeBytes() bool {
	if x == nil {
		return false
	}
	return x.MaxRequestSizeBytes != nil
}

func (x *RequestValidationConfig) HasValidateJsonSchema() bool {
	if x == nil {
		return false
	}
	return x.ValidateJsonSchema != nil
}

func (x *RequestValidationConfig) ClearEnabled() {
	x.Enabled = nil
}

func (x *RequestValidationConfig) ClearMaxRequestSizeBytes() {
	x.MaxRequestSizeBytes = nil
}

func (x *RequestValidationConfig) ClearValidateJsonSchema() {
	x.ValidateJsonSchema = nil
}

type RequestValidationConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable request validation
	Enabled *bool
	// Maximum request size
	MaxRequestSizeBytes *int64
	// Allowed content types
	AllowedContentTypes []string
	// Validate JSON schema
	ValidateJsonSchema *bool
	// JSON schema definitions
	JsonSchemas map[string]string
	// Custom validators
	CustomValidators []string
}

func (b0 RequestValidationConfig_builder) Build() *RequestValidationConfig {
	m0 := &RequestValidationConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Enabled = b.Enabled
	x.MaxRequestSizeBytes = b.MaxRequestSizeBytes
	x.AllowedContentTypes = b.AllowedContentTypes
	x.ValidateJsonSchema = b.ValidateJsonSchema
	x.JsonSchemas = b.JsonSchemas
	x.CustomValidators = b.CustomValidators
	return m0
}

// Middleware configuration
type MiddlewareConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Middleware name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Middleware type
	Type *MiddlewareType `protobuf:"varint,2,opt,name=type,enum=gcommon.v1.web.MiddlewareType" json:"type,omitempty"`
	// Middleware order/priority
	Order *int32 `protobuf:"varint,3,opt,name=order" json:"order,omitempty"`
	// Middleware configuration
	Config *anypb.Any `protobuf:"bytes,4,opt,name=config" json:"config,omitempty"`
	// Enabled status
	Enabled *bool `protobuf:"varint,5,opt,name=enabled" json:"enabled,omitempty"`
	// Apply to paths
	Paths []string `protobuf:"bytes,6,rep,name=paths" json:"paths,omitempty"`
	// Skip paths
	SkipPaths     []string `protobuf:"bytes,7,rep,name=skip_paths,json=skipPaths" json:"skip_paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiddlewareConfig) Reset() {
	*x = MiddlewareConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiddlewareConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddlewareConfig) ProtoMessage() {}

func (x *MiddlewareConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MiddlewareConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MiddlewareConfig) GetType() MiddlewareType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MiddlewareType_MIDDLEWARE_TYPE_UNSPECIFIED
}

func (x *MiddlewareConfig) GetOrder() int32 {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return 0
}

func (x *MiddlewareConfig) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *MiddlewareConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *MiddlewareConfig) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *MiddlewareConfig) GetSkipPaths() []string {
	if x != nil {
		return x.SkipPaths
	}
	return nil
}

func (x *MiddlewareConfig) SetName(v string) {
	x.Name = &v
}

func (x *MiddlewareConfig) SetType(v MiddlewareType) {
	x.Type = &v
}

func (x *MiddlewareConfig) SetOrder(v int32) {
	x.Order = &v
}

func (x *MiddlewareConfig) SetConfig(v *anypb.Any) {
	x.Config = v
}

func (x *MiddlewareConfig) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *MiddlewareConfig) SetPaths(v []string) {
	x.Paths = v
}

func (x *MiddlewareConfig) SetSkipPaths(v []string) {
	x.SkipPaths = v
}

func (x *MiddlewareConfig) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *MiddlewareConfig) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *MiddlewareConfig) HasOrder() bool {
	if x == nil {
		return false
	}
	return x.Order != nil
}

func (x *MiddlewareConfig) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *MiddlewareConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *MiddlewareConfig) ClearName() {
	x.Name = nil
}

func (x *MiddlewareConfig) ClearType() {
	x.Type = nil
}

func (x *MiddlewareConfig) ClearOrder() {
	x.Order = nil
}

func (x *MiddlewareConfig) ClearConfig() {
	x.Config = nil
}

func (x *MiddlewareConfig) ClearEnabled() {
	x.Enabled = nil
}

type MiddlewareConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Middleware name
	Name *string
	// Middleware type
	Type *MiddlewareType
	// Middleware order/priority
	Order *int32
	// Middleware configuration
	Config *anypb.Any
	// Enabled status
	Enabled *bool
	// Apply to paths
	Paths []string
	// Skip paths
	SkipPaths []string
}

func (b0 MiddlewareConfig_builder) Build() *MiddlewareConfig {
	m0 := &MiddlewareConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Type = b.Type
	x.Order = b.Order
	x.Config = b.Config
	x.Enabled = b.Enabled
	x.Paths = b.Paths
	x.SkipPaths = b.SkipPaths
	return m0
}

// Static file configuration
type StaticFileConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Enable static file serving
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Static file directory
	Directory *string `protobuf:"bytes,2,opt,name=directory" json:"directory,omitempty"`
	// URL prefix
	UrlPrefix *string `protobuf:"bytes,3,opt,name=url_prefix,json=urlPrefix" json:"url_prefix,omitempty"`
	// Index files
	IndexFiles []string `protobuf:"bytes,4,rep,name=index_files,json=indexFiles" json:"index_files,omitempty"`
	// Enable directory browsing
	EnableDirectoryBrowsing *bool `protobuf:"varint,5,opt,name=enable_directory_browsing,json=enableDirectoryBrowsing" json:"enable_directory_browsing,omitempty"`
	// Cache control header
	CacheControl *string `protobuf:"bytes,6,opt,name=cache_control,json=cacheControl" json:"cache_control,omitempty"`
	// File compression
	EnableCompression *bool `protobuf:"varint,7,opt,name=enable_compression,json=enableCompression" json:"enable_compression,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StaticFileConfig) Reset() {
	*x = StaticFileConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticFileConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticFileConfig) ProtoMessage() {}

func (x *StaticFileConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StaticFileConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *StaticFileConfig) GetDirectory() string {
	if x != nil && x.Directory != nil {
		return *x.Directory
	}
	return ""
}

func (x *StaticFileConfig) GetUrlPrefix() string {
	if x != nil && x.UrlPrefix != nil {
		return *x.UrlPrefix
	}
	return ""
}

func (x *StaticFileConfig) GetIndexFiles() []string {
	if x != nil {
		return x.IndexFiles
	}
	return nil
}

func (x *StaticFileConfig) GetEnableDirectoryBrowsing() bool {
	if x != nil && x.EnableDirectoryBrowsing != nil {
		return *x.EnableDirectoryBrowsing
	}
	return false
}

func (x *StaticFileConfig) GetCacheControl() string {
	if x != nil && x.CacheControl != nil {
		return *x.CacheControl
	}
	return ""
}

func (x *StaticFileConfig) GetEnableCompression() bool {
	if x != nil && x.EnableCompression != nil {
		return *x.EnableCompression
	}
	return false
}

func (x *StaticFileConfig) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *StaticFileConfig) SetDirectory(v string) {
	x.Directory = &v
}

func (x *StaticFileConfig) SetUrlPrefix(v string) {
	x.UrlPrefix = &v
}

func (x *StaticFileConfig) SetIndexFiles(v []string) {
	x.IndexFiles = v
}

func (x *StaticFileConfig) SetEnableDirectoryBrowsing(v bool) {
	x.EnableDirectoryBrowsing = &v
}

func (x *StaticFileConfig) SetCacheControl(v string) {
	x.CacheControl = &v
}

func (x *StaticFileConfig) SetEnableCompression(v bool) {
	x.EnableCompression = &v
}

func (x *StaticFileConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *StaticFileConfig) HasDirectory() bool {
	if x == nil {
		return false
	}
	return x.Directory != nil
}

func (x *StaticFileConfig) HasUrlPrefix() bool {
	if x == nil {
		return false
	}
	return x.UrlPrefix != nil
}

func (x *StaticFileConfig) HasEnableDirectoryBrowsing() bool {
	if x == nil {
		return false
	}
	return x.EnableDirectoryBrowsing != nil
}

func (x *StaticFileConfig) HasCacheControl() bool {
	if x == nil {
		return false
	}
	return x.CacheControl != nil
}

func (x *StaticFileConfig) HasEnableCompression() bool {
	if x == nil {
		return false
	}
	return x.EnableCompression != nil
}

func (x *StaticFileConfig) ClearEnabled() {
	x.Enabled = nil
}

func (x *StaticFileConfig) ClearDirectory() {
	x.Directory = nil
}

func (x *StaticFileConfig) ClearUrlPrefix() {
	x.UrlPrefix = nil
}

func (x *StaticFileConfig) ClearEnableDirectoryBrowsing() {
	x.EnableDirectoryBrowsing = nil
}

func (x *StaticFileConfig) ClearCacheControl() {
	x.CacheControl = nil
}

func (x *StaticFileConfig) ClearEnableCompression() {
	x.EnableCompression = nil
}

type StaticFileConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable static file serving
	Enabled *bool
	// Static file directory
	Directory *string
	// URL prefix
	UrlPrefix *string
	// Index files
	IndexFiles []string
	// Enable directory browsing
	EnableDirectoryBrowsing *bool
	// Cache control header
	CacheControl *string
	// File compression
	EnableCompression *bool
}

func (b0 StaticFileConfig_builder) Build() *StaticFileConfig {
	m0 := &StaticFileConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Enabled = b.Enabled
	x.Directory = b.Directory
	x.UrlPrefix = b.UrlPrefix
	x.IndexFiles = b.IndexFiles
	x.EnableDirectoryBrowsing = b.EnableDirectoryBrowsing
	x.CacheControl = b.CacheControl
	x.EnableCompression = b.EnableCompression
	return m0
}

// Create server response
type CreateServerResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Server information
	Server *ServerInfo `protobuf:"bytes,2,opt,name=server" json:"server,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateServerResponse) Reset() {
	*x = CreateServerResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerResponse) ProtoMessage() {}

func (x *CreateServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateServerResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *CreateServerResponse) GetServer() *ServerInfo {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *CreateServerResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CreateServerResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *CreateServerResponse) SetServer(v *ServerInfo) {
	x.Server = v
}

func (x *CreateServerResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *CreateServerResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *CreateServerResponse) HasServer() bool {
	if x == nil {
		return false
	}
	return x.Server != nil
}

func (x *CreateServerResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *CreateServerResponse) ClearSuccess() {
	x.Success = nil
}

func (x *CreateServerResponse) ClearServer() {
	x.Server = nil
}

func (x *CreateServerResponse) ClearError() {
	x.Error = nil
}

type CreateServerResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Server information
	Server *ServerInfo
	// Error information
	Error *messages.Error
}

func (b0 CreateServerResponse_builder) Build() *CreateServerResponse {
	m0 := &CreateServerResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Server = b.Server
	x.Error = b.Error
	return m0
}

// Server information
type ServerInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Server configuration
	Config *ServerConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Server status
	Status *ServerStatus `protobuf:"varint,3,opt,name=status,enum=gcommon.v1.web.ServerStatus" json:"status,omitempty"`
	// Server statistics
	Stats *ServerStats `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
	// Creation time
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last updated time
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServerInfo) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *ServerInfo) GetConfig() *ServerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ServerInfo) GetStatus() ServerStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ServerStatus_SERVER_STATUS_UNSPECIFIED
}

func (x *ServerInfo) GetStats() *ServerStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ServerInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ServerInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ServerInfo) SetServerId(v string) {
	x.ServerId = &v
}

func (x *ServerInfo) SetConfig(v *ServerConfig) {
	x.Config = v
}

func (x *ServerInfo) SetStatus(v ServerStatus) {
	x.Status = &v
}

func (x *ServerInfo) SetStats(v *ServerStats) {
	x.Stats = v
}

func (x *ServerInfo) SetCreatedAt(v *timestamppb.Timestamp) {
	x.CreatedAt = v
}

func (x *ServerInfo) SetUpdatedAt(v *timestamppb.Timestamp) {
	x.UpdatedAt = v
}

func (x *ServerInfo) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *ServerInfo) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *ServerInfo) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *ServerInfo) HasStats() bool {
	if x == nil {
		return false
	}
	return x.Stats != nil
}

func (x *ServerInfo) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.CreatedAt != nil
}

func (x *ServerInfo) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return x.UpdatedAt != nil
}

func (x *ServerInfo) ClearServerId() {
	x.ServerId = nil
}

func (x *ServerInfo) ClearConfig() {
	x.Config = nil
}

func (x *ServerInfo) ClearStatus() {
	x.Status = nil
}

func (x *ServerInfo) ClearStats() {
	x.Stats = nil
}

func (x *ServerInfo) ClearCreatedAt() {
	x.CreatedAt = nil
}

func (x *ServerInfo) ClearUpdatedAt() {
	x.UpdatedAt = nil
}

type ServerInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Server configuration
	Config *ServerConfig
	// Server status
	Status *ServerStatus
	// Server statistics
	Stats *ServerStats
	// Creation time
	CreatedAt *timestamppb.Timestamp
	// Last updated time
	UpdatedAt *timestamppb.Timestamp
}

func (b0 ServerInfo_builder) Build() *ServerInfo {
	m0 := &ServerInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Config = b.Config
	x.Status = b.Status
	x.Stats = b.Stats
	x.CreatedAt = b.CreatedAt
	x.UpdatedAt = b.UpdatedAt
	return m0
}

// Server statistics
type ServerStats struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Total requests handled
	TotalRequests *int64 `protobuf:"varint,1,opt,name=total_requests,json=totalRequests" json:"total_requests,omitempty"`
	// Active connections
	ActiveConnections *int32 `protobuf:"varint,2,opt,name=active_connections,json=activeConnections" json:"active_connections,omitempty"`
	// Requests per second
	RequestsPerSecond *float64 `protobuf:"fixed64,3,opt,name=requests_per_second,json=requestsPerSecond" json:"requests_per_second,omitempty"`
	// Average response time
	AvgResponseTime *durationpb.Duration `protobuf:"bytes,4,opt,name=avg_response_time,json=avgResponseTime" json:"avg_response_time,omitempty"`
	// Error count
	ErrorCount *int64 `protobuf:"varint,5,opt,name=error_count,json=errorCount" json:"error_count,omitempty"`
	// Bytes sent
	BytesSent *int64 `protobuf:"varint,6,opt,name=bytes_sent,json=bytesSent" json:"bytes_sent,omitempty"`
	// Bytes received
	BytesReceived *int64 `protobuf:"varint,7,opt,name=bytes_received,json=bytesReceived" json:"bytes_received,omitempty"`
	// Uptime
	Uptime        *durationpb.Duration `protobuf:"bytes,8,opt,name=uptime" json:"uptime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerStats) Reset() {
	*x = ServerStats{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStats) ProtoMessage() {}

func (x *ServerStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServerStats) GetTotalRequests() int64 {
	if x != nil && x.TotalRequests != nil {
		return *x.TotalRequests
	}
	return 0
}

func (x *ServerStats) GetActiveConnections() int32 {
	if x != nil && x.ActiveConnections != nil {
		return *x.ActiveConnections
	}
	return 0
}

func (x *ServerStats) GetRequestsPerSecond() float64 {
	if x != nil && x.RequestsPerSecond != nil {
		return *x.RequestsPerSecond
	}
	return 0
}

func (x *ServerStats) GetAvgResponseTime() *durationpb.Duration {
	if x != nil {
		return x.AvgResponseTime
	}
	return nil
}

func (x *ServerStats) GetErrorCount() int64 {
	if x != nil && x.ErrorCount != nil {
		return *x.ErrorCount
	}
	return 0
}

func (x *ServerStats) GetBytesSent() int64 {
	if x != nil && x.BytesSent != nil {
		return *x.BytesSent
	}
	return 0
}

func (x *ServerStats) GetBytesReceived() int64 {
	if x != nil && x.BytesReceived != nil {
		return *x.BytesReceived
	}
	return 0
}

func (x *ServerStats) GetUptime() *durationpb.Duration {
	if x != nil {
		return x.Uptime
	}
	return nil
}

func (x *ServerStats) SetTotalRequests(v int64) {
	x.TotalRequests = &v
}

func (x *ServerStats) SetActiveConnections(v int32) {
	x.ActiveConnections = &v
}

func (x *ServerStats) SetRequestsPerSecond(v float64) {
	x.RequestsPerSecond = &v
}

func (x *ServerStats) SetAvgResponseTime(v *durationpb.Duration) {
	x.AvgResponseTime = v
}

func (x *ServerStats) SetErrorCount(v int64) {
	x.ErrorCount = &v
}

func (x *ServerStats) SetBytesSent(v int64) {
	x.BytesSent = &v
}

func (x *ServerStats) SetBytesReceived(v int64) {
	x.BytesReceived = &v
}

func (x *ServerStats) SetUptime(v *durationpb.Duration) {
	x.Uptime = v
}

func (x *ServerStats) HasTotalRequests() bool {
	if x == nil {
		return false
	}
	return x.TotalRequests != nil
}

func (x *ServerStats) HasActiveConnections() bool {
	if x == nil {
		return false
	}
	return x.ActiveConnections != nil
}

func (x *ServerStats) HasRequestsPerSecond() bool {
	if x == nil {
		return false
	}
	return x.RequestsPerSecond != nil
}

func (x *ServerStats) HasAvgResponseTime() bool {
	if x == nil {
		return false
	}
	return x.AvgResponseTime != nil
}

func (x *ServerStats) HasErrorCount() bool {
	if x == nil {
		return false
	}
	return x.ErrorCount != nil
}

func (x *ServerStats) HasBytesSent() bool {
	if x == nil {
		return false
	}
	return x.BytesSent != nil
}

func (x *ServerStats) HasBytesReceived() bool {
	if x == nil {
		return false
	}
	return x.BytesReceived != nil
}

func (x *ServerStats) HasUptime() bool {
	if x == nil {
		return false
	}
	return x.Uptime != nil
}

func (x *ServerStats) ClearTotalRequests() {
	x.TotalRequests = nil
}

func (x *ServerStats) ClearActiveConnections() {
	x.ActiveConnections = nil
}

func (x *ServerStats) ClearRequestsPerSecond() {
	x.RequestsPerSecond = nil
}

func (x *ServerStats) ClearAvgResponseTime() {
	x.AvgResponseTime = nil
}

func (x *ServerStats) ClearErrorCount() {
	x.ErrorCount = nil
}

func (x *ServerStats) ClearBytesSent() {
	x.BytesSent = nil
}

func (x *ServerStats) ClearBytesReceived() {
	x.BytesReceived = nil
}

func (x *ServerStats) ClearUptime() {
	x.Uptime = nil
}

type ServerStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total requests handled
	TotalRequests *int64
	// Active connections
	ActiveConnections *int32
	// Requests per second
	RequestsPerSecond *float64
	// Average response time
	AvgResponseTime *durationpb.Duration
	// Error count
	ErrorCount *int64
	// Bytes sent
	BytesSent *int64
	// Bytes received
	BytesReceived *int64
	// Uptime
	Uptime *durationpb.Duration
}

func (b0 ServerStats_builder) Build() *ServerStats {
	m0 := &ServerStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.TotalRequests = b.TotalRequests
	x.ActiveConnections = b.ActiveConnections
	x.RequestsPerSecond = b.RequestsPerSecond
	x.AvgResponseTime = b.AvgResponseTime
	x.ErrorCount = b.ErrorCount
	x.BytesSent = b.BytesSent
	x.BytesReceived = b.BytesReceived
	x.Uptime = b.Uptime
	return m0
}

// Start server request
type StartServerRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartServerRequest) Reset() {
	*x = StartServerRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServerRequest) ProtoMessage() {}

func (x *StartServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StartServerRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *StartServerRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StartServerRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *StartServerRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *StartServerRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *StartServerRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *StartServerRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *StartServerRequest) ClearMetadata() {
	x.Metadata = nil
}

type StartServerRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 StartServerRequest_builder) Build() *StartServerRequest {
	m0 := &StartServerRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Metadata = b.Metadata
	return m0
}

// Start server response
type StartServerResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Server status
	Status *ServerStatus `protobuf:"varint,2,opt,name=status,enum=gcommon.v1.web.ServerStatus" json:"status,omitempty"`
	// Listen address
	ListenAddress *string `protobuf:"bytes,3,opt,name=listen_address,json=listenAddress" json:"listen_address,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartServerResponse) Reset() {
	*x = StartServerResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServerResponse) ProtoMessage() {}

func (x *StartServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StartServerResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *StartServerResponse) GetStatus() ServerStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ServerStatus_SERVER_STATUS_UNSPECIFIED
}

func (x *StartServerResponse) GetListenAddress() string {
	if x != nil && x.ListenAddress != nil {
		return *x.ListenAddress
	}
	return ""
}

func (x *StartServerResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *StartServerResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *StartServerResponse) SetStatus(v ServerStatus) {
	x.Status = &v
}

func (x *StartServerResponse) SetListenAddress(v string) {
	x.ListenAddress = &v
}

func (x *StartServerResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *StartServerResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *StartServerResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *StartServerResponse) HasListenAddress() bool {
	if x == nil {
		return false
	}
	return x.ListenAddress != nil
}

func (x *StartServerResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *StartServerResponse) ClearSuccess() {
	x.Success = nil
}

func (x *StartServerResponse) ClearStatus() {
	x.Status = nil
}

func (x *StartServerResponse) ClearListenAddress() {
	x.ListenAddress = nil
}

func (x *StartServerResponse) ClearError() {
	x.Error = nil
}

type StartServerResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Server status
	Status *ServerStatus
	// Listen address
	ListenAddress *string
	// Error information
	Error *messages.Error
}

func (b0 StartServerResponse_builder) Build() *StartServerResponse {
	m0 := &StartServerResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Status = b.Status
	x.ListenAddress = b.ListenAddress
	x.Error = b.Error
	return m0
}

// Stop server request
type StopServerRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Graceful shutdown timeout
	GracefulTimeout *durationpb.Duration `protobuf:"bytes,2,opt,name=graceful_timeout,json=gracefulTimeout" json:"graceful_timeout,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopServerRequest) Reset() {
	*x = StopServerRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerRequest) ProtoMessage() {}

func (x *StopServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StopServerRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *StopServerRequest) GetGracefulTimeout() *durationpb.Duration {
	if x != nil {
		return x.GracefulTimeout
	}
	return nil
}

func (x *StopServerRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StopServerRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *StopServerRequest) SetGracefulTimeout(v *durationpb.Duration) {
	x.GracefulTimeout = v
}

func (x *StopServerRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *StopServerRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *StopServerRequest) HasGracefulTimeout() bool {
	if x == nil {
		return false
	}
	return x.GracefulTimeout != nil
}

func (x *StopServerRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *StopServerRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *StopServerRequest) ClearGracefulTimeout() {
	x.GracefulTimeout = nil
}

func (x *StopServerRequest) ClearMetadata() {
	x.Metadata = nil
}

type StopServerRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Graceful shutdown timeout
	GracefulTimeout *durationpb.Duration
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 StopServerRequest_builder) Build() *StopServerRequest {
	m0 := &StopServerRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.GracefulTimeout = b.GracefulTimeout
	x.Metadata = b.Metadata
	return m0
}

// Stop server response
type StopServerResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Server status
	Status *ServerStatus `protobuf:"varint,2,opt,name=status,enum=gcommon.v1.web.ServerStatus" json:"status,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopServerResponse) Reset() {
	*x = StopServerResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerResponse) ProtoMessage() {}

func (x *StopServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StopServerResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *StopServerResponse) GetStatus() ServerStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ServerStatus_SERVER_STATUS_UNSPECIFIED
}

func (x *StopServerResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *StopServerResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *StopServerResponse) SetStatus(v ServerStatus) {
	x.Status = &v
}

func (x *StopServerResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *StopServerResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *StopServerResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *StopServerResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *StopServerResponse) ClearSuccess() {
	x.Success = nil
}

func (x *StopServerResponse) ClearStatus() {
	x.Status = nil
}

func (x *StopServerResponse) ClearError() {
	x.Error = nil
}

type StopServerResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Server status
	Status *ServerStatus
	// Error information
	Error *messages.Error
}

func (b0 StopServerResponse_builder) Build() *StopServerResponse {
	m0 := &StopServerResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Status = b.Status
	x.Error = b.Error
	return m0
}

// Get server status request
type GetServerStatusRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerStatusRequest) Reset() {
	*x = GetServerStatusRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerStatusRequest) ProtoMessage() {}

func (x *GetServerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetServerStatusRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *GetServerStatusRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetServerStatusRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *GetServerStatusRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *GetServerStatusRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *GetServerStatusRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetServerStatusRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *GetServerStatusRequest) ClearMetadata() {
	x.Metadata = nil
}

type GetServerStatusRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 GetServerStatusRequest_builder) Build() *GetServerStatusRequest {
	m0 := &GetServerStatusRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Metadata = b.Metadata
	return m0
}

// Get server status response
type GetServerStatusResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server information
	Server *ServerInfo `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerStatusResponse) Reset() {
	*x = GetServerStatusResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerStatusResponse) ProtoMessage() {}

func (x *GetServerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetServerStatusResponse) GetServer() *ServerInfo {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *GetServerStatusResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetServerStatusResponse) SetServer(v *ServerInfo) {
	x.Server = v
}

func (x *GetServerStatusResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *GetServerStatusResponse) HasServer() bool {
	if x == nil {
		return false
	}
	return x.Server != nil
}

func (x *GetServerStatusResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *GetServerStatusResponse) ClearServer() {
	x.Server = nil
}

func (x *GetServerStatusResponse) ClearError() {
	x.Error = nil
}

type GetServerStatusResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server information
	Server *ServerInfo
	// Error information
	Error *messages.Error
}

func (b0 GetServerStatusResponse_builder) Build() *GetServerStatusResponse {
	m0 := &GetServerStatusResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Server = b.Server
	x.Error = b.Error
	return m0
}

// List servers request
type ListServersRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Status filter
	Status *ServerStatus `protobuf:"varint,1,opt,name=status,enum=gcommon.v1.web.ServerStatus" json:"status,omitempty"`
	// Name pattern filter
	NamePattern *string `protobuf:"bytes,2,opt,name=name_pattern,json=namePattern" json:"name_pattern,omitempty"`
	// Pagination options
	Pagination *messages.Pagination `protobuf:"bytes,3,opt,name=pagination" json:"pagination,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersRequest) Reset() {
	*x = ListServersRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersRequest) ProtoMessage() {}

func (x *ListServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListServersRequest) GetStatus() ServerStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ServerStatus_SERVER_STATUS_UNSPECIFIED
}

func (x *ListServersRequest) GetNamePattern() string {
	if x != nil && x.NamePattern != nil {
		return *x.NamePattern
	}
	return ""
}

func (x *ListServersRequest) GetPagination() *messages.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListServersRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ListServersRequest) SetStatus(v ServerStatus) {
	x.Status = &v
}

func (x *ListServersRequest) SetNamePattern(v string) {
	x.NamePattern = &v
}

func (x *ListServersRequest) SetPagination(v *messages.Pagination) {
	x.Pagination = v
}

func (x *ListServersRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *ListServersRequest) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *ListServersRequest) HasNamePattern() bool {
	if x == nil {
		return false
	}
	return x.NamePattern != nil
}

func (x *ListServersRequest) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *ListServersRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *ListServersRequest) ClearStatus() {
	x.Status = nil
}

func (x *ListServersRequest) ClearNamePattern() {
	x.NamePattern = nil
}

func (x *ListServersRequest) ClearPagination() {
	x.Pagination = nil
}

func (x *ListServersRequest) ClearMetadata() {
	x.Metadata = nil
}

type ListServersRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Status filter
	Status *ServerStatus
	// Name pattern filter
	NamePattern *string
	// Pagination options
	Pagination *messages.Pagination
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 ListServersRequest_builder) Build() *ListServersRequest {
	m0 := &ListServersRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	x.NamePattern = b.NamePattern
	x.Pagination = b.Pagination
	x.Metadata = b.Metadata
	return m0
}

// List servers response
type ListServersResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server information
	Servers []*ServerInfo `protobuf:"bytes,1,rep,name=servers" json:"servers,omitempty"`
	// Pagination information
	Pagination *messages.Pagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersResponse) Reset() {
	*x = ListServersResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersResponse) ProtoMessage() {}

func (x *ListServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListServersResponse) GetServers() []*ServerInfo {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *ListServersResponse) GetPagination() *messages.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListServersResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ListServersResponse) SetServers(v []*ServerInfo) {
	x.Servers = v
}

func (x *ListServersResponse) SetPagination(v *messages.Pagination) {
	x.Pagination = v
}

func (x *ListServersResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *ListServersResponse) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *ListServersResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *ListServersResponse) ClearPagination() {
	x.Pagination = nil
}

func (x *ListServersResponse) ClearError() {
	x.Error = nil
}

type ListServersResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server information
	Servers []*ServerInfo
	// Pagination information
	Pagination *messages.Pagination
	// Error information
	Error *messages.Error
}

func (b0 ListServersResponse_builder) Build() *ListServersResponse {
	m0 := &ListServersResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Servers = b.Servers
	x.Pagination = b.Pagination
	x.Error = b.Error
	return m0
}

// Register route request
type RegisterRouteRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Route configuration
	Route *RouteConfig `protobuf:"bytes,2,opt,name=route" json:"route,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRouteRequest) Reset() {
	*x = RegisterRouteRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRouteRequest) ProtoMessage() {}

func (x *RegisterRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterRouteRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *RegisterRouteRequest) GetRoute() *RouteConfig {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *RegisterRouteRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegisterRouteRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *RegisterRouteRequest) SetRoute(v *RouteConfig) {
	x.Route = v
}

func (x *RegisterRouteRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *RegisterRouteRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *RegisterRouteRequest) HasRoute() bool {
	if x == nil {
		return false
	}
	return x.Route != nil
}

func (x *RegisterRouteRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *RegisterRouteRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *RegisterRouteRequest) ClearRoute() {
	x.Route = nil
}

func (x *RegisterRouteRequest) ClearMetadata() {
	x.Metadata = nil
}

type RegisterRouteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Route configuration
	Route *RouteConfig
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 RegisterRouteRequest_builder) Build() *RegisterRouteRequest {
	m0 := &RegisterRouteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Route = b.Route
	x.Metadata = b.Metadata
	return m0
}

// Route configuration
type RouteConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Route name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// HTTP method
	Method *string `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
	// Route path
	Path *string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	// Handler configuration
	Handler *HandlerConfig `protobuf:"bytes,4,opt,name=handler" json:"handler,omitempty"`
	// Route middleware
	Middleware []*MiddlewareConfig `protobuf:"bytes,5,rep,name=middleware" json:"middleware,omitempty"`
	// Route attributes
	Attributes map[string]string `protobuf:"bytes,6,rep,name=attributes" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Route timeout
	Timeout *durationpb.Duration `protobuf:"bytes,7,opt,name=timeout" json:"timeout,omitempty"`
	// Enable caching
	EnableCaching *bool `protobuf:"varint,8,opt,name=enable_caching,json=enableCaching" json:"enable_caching,omitempty"`
	// Cache TTL
	CacheTtl      *durationpb.Duration `protobuf:"bytes,9,opt,name=cache_ttl,json=cacheTtl" json:"cache_ttl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteConfig) Reset() {
	*x = RouteConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteConfig) ProtoMessage() {}

func (x *RouteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RouteConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RouteConfig) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *RouteConfig) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *RouteConfig) GetHandler() *HandlerConfig {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *RouteConfig) GetMiddleware() []*MiddlewareConfig {
	if x != nil {
		return x.Middleware
	}
	return nil
}

func (x *RouteConfig) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *RouteConfig) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *RouteConfig) GetEnableCaching() bool {
	if x != nil && x.EnableCaching != nil {
		return *x.EnableCaching
	}
	return false
}

func (x *RouteConfig) GetCacheTtl() *durationpb.Duration {
	if x != nil {
		return x.CacheTtl
	}
	return nil
}

func (x *RouteConfig) SetName(v string) {
	x.Name = &v
}

func (x *RouteConfig) SetMethod(v string) {
	x.Method = &v
}

func (x *RouteConfig) SetPath(v string) {
	x.Path = &v
}

func (x *RouteConfig) SetHandler(v *HandlerConfig) {
	x.Handler = v
}

func (x *RouteConfig) SetMiddleware(v []*MiddlewareConfig) {
	x.Middleware = v
}

func (x *RouteConfig) SetAttributes(v map[string]string) {
	x.Attributes = v
}

func (x *RouteConfig) SetTimeout(v *durationpb.Duration) {
	x.Timeout = v
}

func (x *RouteConfig) SetEnableCaching(v bool) {
	x.EnableCaching = &v
}

func (x *RouteConfig) SetCacheTtl(v *durationpb.Duration) {
	x.CacheTtl = v
}

func (x *RouteConfig) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *RouteConfig) HasMethod() bool {
	if x == nil {
		return false
	}
	return x.Method != nil
}

func (x *RouteConfig) HasPath() bool {
	if x == nil {
		return false
	}
	return x.Path != nil
}

func (x *RouteConfig) HasHandler() bool {
	if x == nil {
		return false
	}
	return x.Handler != nil
}

func (x *RouteConfig) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.Timeout != nil
}

func (x *RouteConfig) HasEnableCaching() bool {
	if x == nil {
		return false
	}
	return x.EnableCaching != nil
}

func (x *RouteConfig) HasCacheTtl() bool {
	if x == nil {
		return false
	}
	return x.CacheTtl != nil
}

func (x *RouteConfig) ClearName() {
	x.Name = nil
}

func (x *RouteConfig) ClearMethod() {
	x.Method = nil
}

func (x *RouteConfig) ClearPath() {
	x.Path = nil
}

func (x *RouteConfig) ClearHandler() {
	x.Handler = nil
}

func (x *RouteConfig) ClearTimeout() {
	x.Timeout = nil
}

func (x *RouteConfig) ClearEnableCaching() {
	x.EnableCaching = nil
}

func (x *RouteConfig) ClearCacheTtl() {
	x.CacheTtl = nil
}

type RouteConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Route name
	Name *string
	// HTTP method
	Method *string
	// Route path
	Path *string
	// Handler configuration
	Handler *HandlerConfig
	// Route middleware
	Middleware []*MiddlewareConfig
	// Route attributes
	Attributes map[string]string
	// Route timeout
	Timeout *durationpb.Duration
	// Enable caching
	EnableCaching *bool
	// Cache TTL
	CacheTtl *durationpb.Duration
}

func (b0 RouteConfig_builder) Build() *RouteConfig {
	m0 := &RouteConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Method = b.Method
	x.Path = b.Path
	x.Handler = b.Handler
	x.Middleware = b.Middleware
	x.Attributes = b.Attributes
	x.Timeout = b.Timeout
	x.EnableCaching = b.EnableCaching
	x.CacheTtl = b.CacheTtl
	return m0
}

// Handler configuration
type HandlerConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Handler type
	Type *HandlerType `protobuf:"varint,1,opt,name=type,enum=gcommon.v1.web.HandlerType" json:"type,omitempty"`
	// Handler configuration
	Config *anypb.Any `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Handler target (URL, function name, etc.)
	Target *string `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	// Handler options
	Options       map[string]string `protobuf:"bytes,4,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandlerConfig) Reset() {
	*x = HandlerConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandlerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandlerConfig) ProtoMessage() {}

func (x *HandlerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HandlerConfig) GetType() HandlerType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return HandlerType_HANDLER_TYPE_UNSPECIFIED
}

func (x *HandlerConfig) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *HandlerConfig) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *HandlerConfig) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *HandlerConfig) SetType(v HandlerType) {
	x.Type = &v
}

func (x *HandlerConfig) SetConfig(v *anypb.Any) {
	x.Config = v
}

func (x *HandlerConfig) SetTarget(v string) {
	x.Target = &v
}

func (x *HandlerConfig) SetOptions(v map[string]string) {
	x.Options = v
}

func (x *HandlerConfig) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *HandlerConfig) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *HandlerConfig) HasTarget() bool {
	if x == nil {
		return false
	}
	return x.Target != nil
}

func (x *HandlerConfig) ClearType() {
	x.Type = nil
}

func (x *HandlerConfig) ClearConfig() {
	x.Config = nil
}

func (x *HandlerConfig) ClearTarget() {
	x.Target = nil
}

type HandlerConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Handler type
	Type *HandlerType
	// Handler configuration
	Config *anypb.Any
	// Handler target (URL, function name, etc.)
	Target *string
	// Handler options
	Options map[string]string
}

func (b0 HandlerConfig_builder) Build() *HandlerConfig {
	m0 := &HandlerConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Type = b.Type
	x.Config = b.Config
	x.Target = b.Target
	x.Options = b.Options
	return m0
}

// Register route response
type RegisterRouteResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Route information
	Route *RouteInfo `protobuf:"bytes,2,opt,name=route" json:"route,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRouteResponse) Reset() {
	*x = RegisterRouteResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRouteResponse) ProtoMessage() {}

func (x *RegisterRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterRouteResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *RegisterRouteResponse) GetRoute() *RouteInfo {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *RegisterRouteResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RegisterRouteResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *RegisterRouteResponse) SetRoute(v *RouteInfo) {
	x.Route = v
}

func (x *RegisterRouteResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *RegisterRouteResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *RegisterRouteResponse) HasRoute() bool {
	if x == nil {
		return false
	}
	return x.Route != nil
}

func (x *RegisterRouteResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *RegisterRouteResponse) ClearSuccess() {
	x.Success = nil
}

func (x *RegisterRouteResponse) ClearRoute() {
	x.Route = nil
}

func (x *RegisterRouteResponse) ClearError() {
	x.Error = nil
}

type RegisterRouteResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Route information
	Route *RouteInfo
	// Error information
	Error *messages.Error
}

func (b0 RegisterRouteResponse_builder) Build() *RegisterRouteResponse {
	m0 := &RegisterRouteResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Route = b.Route
	x.Error = b.Error
	return m0
}

// Route information
type RouteInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Route ID
	RouteId *string `protobuf:"bytes,1,opt,name=route_id,json=routeId" json:"route_id,omitempty"`
	// Route configuration
	Config *RouteConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Route statistics
	Stats *RouteStats `protobuf:"bytes,3,opt,name=stats" json:"stats,omitempty"`
	// Creation time
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last updated time
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteInfo) Reset() {
	*x = RouteInfo{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteInfo) ProtoMessage() {}

func (x *RouteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RouteInfo) GetRouteId() string {
	if x != nil && x.RouteId != nil {
		return *x.RouteId
	}
	return ""
}

func (x *RouteInfo) GetConfig() *RouteConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *RouteInfo) GetStats() *RouteStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *RouteInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RouteInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *RouteInfo) SetRouteId(v string) {
	x.RouteId = &v
}

func (x *RouteInfo) SetConfig(v *RouteConfig) {
	x.Config = v
}

func (x *RouteInfo) SetStats(v *RouteStats) {
	x.Stats = v
}

func (x *RouteInfo) SetCreatedAt(v *timestamppb.Timestamp) {
	x.CreatedAt = v
}

func (x *RouteInfo) SetUpdatedAt(v *timestamppb.Timestamp) {
	x.UpdatedAt = v
}

func (x *RouteInfo) HasRouteId() bool {
	if x == nil {
		return false
	}
	return x.RouteId != nil
}

func (x *RouteInfo) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *RouteInfo) HasStats() bool {
	if x == nil {
		return false
	}
	return x.Stats != nil
}

func (x *RouteInfo) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.CreatedAt != nil
}

func (x *RouteInfo) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return x.UpdatedAt != nil
}

func (x *RouteInfo) ClearRouteId() {
	x.RouteId = nil
}

func (x *RouteInfo) ClearConfig() {
	x.Config = nil
}

func (x *RouteInfo) ClearStats() {
	x.Stats = nil
}

func (x *RouteInfo) ClearCreatedAt() {
	x.CreatedAt = nil
}

func (x *RouteInfo) ClearUpdatedAt() {
	x.UpdatedAt = nil
}

type RouteInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Route ID
	RouteId *string
	// Route configuration
	Config *RouteConfig
	// Route statistics
	Stats *RouteStats
	// Creation time
	CreatedAt *timestamppb.Timestamp
	// Last updated time
	UpdatedAt *timestamppb.Timestamp
}

func (b0 RouteInfo_builder) Build() *RouteInfo {
	m0 := &RouteInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.RouteId = b.RouteId
	x.Config = b.Config
	x.Stats = b.Stats
	x.CreatedAt = b.CreatedAt
	x.UpdatedAt = b.UpdatedAt
	return m0
}

// Route statistics
type RouteStats struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Total requests
	TotalRequests *int64 `protobuf:"varint,1,opt,name=total_requests,json=totalRequests" json:"total_requests,omitempty"`
	// Success count
	SuccessCount *int64 `protobuf:"varint,2,opt,name=success_count,json=successCount" json:"success_count,omitempty"`
	// Error count
	ErrorCount *int64 `protobuf:"varint,3,opt,name=error_count,json=errorCount" json:"error_count,omitempty"`
	// Average response time
	AvgResponseTime *durationpb.Duration `protobuf:"bytes,4,opt,name=avg_response_time,json=avgResponseTime" json:"avg_response_time,omitempty"`
	// Response time percentiles
	ResponseTimePercentiles *ResponseTimePercentiles `protobuf:"bytes,5,opt,name=response_time_percentiles,json=responseTimePercentiles" json:"response_time_percentiles,omitempty"`
	// Status code distribution
	StatusCodes map[string]int64 `protobuf:"bytes,6,rep,name=status_codes,json=statusCodes" json:"status_codes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Last request time
	LastRequestTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_request_time,json=lastRequestTime" json:"last_request_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RouteStats) Reset() {
	*x = RouteStats{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteStats) ProtoMessage() {}

func (x *RouteStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RouteStats) GetTotalRequests() int64 {
	if x != nil && x.TotalRequests != nil {
		return *x.TotalRequests
	}
	return 0
}

func (x *RouteStats) GetSuccessCount() int64 {
	if x != nil && x.SuccessCount != nil {
		return *x.SuccessCount
	}
	return 0
}

func (x *RouteStats) GetErrorCount() int64 {
	if x != nil && x.ErrorCount != nil {
		return *x.ErrorCount
	}
	return 0
}

func (x *RouteStats) GetAvgResponseTime() *durationpb.Duration {
	if x != nil {
		return x.AvgResponseTime
	}
	return nil
}

func (x *RouteStats) GetResponseTimePercentiles() *ResponseTimePercentiles {
	if x != nil {
		return x.ResponseTimePercentiles
	}
	return nil
}

func (x *RouteStats) GetStatusCodes() map[string]int64 {
	if x != nil {
		return x.StatusCodes
	}
	return nil
}

func (x *RouteStats) GetLastRequestTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRequestTime
	}
	return nil
}

func (x *RouteStats) SetTotalRequests(v int64) {
	x.TotalRequests = &v
}

func (x *RouteStats) SetSuccessCount(v int64) {
	x.SuccessCount = &v
}

func (x *RouteStats) SetErrorCount(v int64) {
	x.ErrorCount = &v
}

func (x *RouteStats) SetAvgResponseTime(v *durationpb.Duration) {
	x.AvgResponseTime = v
}

func (x *RouteStats) SetResponseTimePercentiles(v *ResponseTimePercentiles) {
	x.ResponseTimePercentiles = v
}

func (x *RouteStats) SetStatusCodes(v map[string]int64) {
	x.StatusCodes = v
}

func (x *RouteStats) SetLastRequestTime(v *timestamppb.Timestamp) {
	x.LastRequestTime = v
}

func (x *RouteStats) HasTotalRequests() bool {
	if x == nil {
		return false
	}
	return x.TotalRequests != nil
}

func (x *RouteStats) HasSuccessCount() bool {
	if x == nil {
		return false
	}
	return x.SuccessCount != nil
}

func (x *RouteStats) HasErrorCount() bool {
	if x == nil {
		return false
	}
	return x.ErrorCount != nil
}

func (x *RouteStats) HasAvgResponseTime() bool {
	if x == nil {
		return false
	}
	return x.AvgResponseTime != nil
}

func (x *RouteStats) HasResponseTimePercentiles() bool {
	if x == nil {
		return false
	}
	return x.ResponseTimePercentiles != nil
}

func (x *RouteStats) HasLastRequestTime() bool {
	if x == nil {
		return false
	}
	return x.LastRequestTime != nil
}

func (x *RouteStats) ClearTotalRequests() {
	x.TotalRequests = nil
}

func (x *RouteStats) ClearSuccessCount() {
	x.SuccessCount = nil
}

func (x *RouteStats) ClearErrorCount() {
	x.ErrorCount = nil
}

func (x *RouteStats) ClearAvgResponseTime() {
	x.AvgResponseTime = nil
}

func (x *RouteStats) ClearResponseTimePercentiles() {
	x.ResponseTimePercentiles = nil
}

func (x *RouteStats) ClearLastRequestTime() {
	x.LastRequestTime = nil
}

type RouteStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total requests
	TotalRequests *int64
	// Success count
	SuccessCount *int64
	// Error count
	ErrorCount *int64
	// Average response time
	AvgResponseTime *durationpb.Duration
	// Response time percentiles
	ResponseTimePercentiles *ResponseTimePercentiles
	// Status code distribution
	StatusCodes map[string]int64
	// Last request time
	LastRequestTime *timestamppb.Timestamp
}

func (b0 RouteStats_builder) Build() *RouteStats {
	m0 := &RouteStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.TotalRequests = b.TotalRequests
	x.SuccessCount = b.SuccessCount
	x.ErrorCount = b.ErrorCount
	x.AvgResponseTime = b.AvgResponseTime
	x.ResponseTimePercentiles = b.ResponseTimePercentiles
	x.StatusCodes = b.StatusCodes
	x.LastRequestTime = b.LastRequestTime
	return m0
}

// Response time percentiles
type ResponseTimePercentiles struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// 50th percentile
	P50 *durationpb.Duration `protobuf:"bytes,1,opt,name=p50" json:"p50,omitempty"`
	// 90th percentile
	P90 *durationpb.Duration `protobuf:"bytes,2,opt,name=p90" json:"p90,omitempty"`
	// 95th percentile
	P95 *durationpb.Duration `protobuf:"bytes,3,opt,name=p95" json:"p95,omitempty"`
	// 99th percentile
	P99           *durationpb.Duration `protobuf:"bytes,4,opt,name=p99" json:"p99,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseTimePercentiles) Reset() {
	*x = ResponseTimePercentiles{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseTimePercentiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseTimePercentiles) ProtoMessage() {}

func (x *ResponseTimePercentiles) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResponseTimePercentiles) GetP50() *durationpb.Duration {
	if x != nil {
		return x.P50
	}
	return nil
}

func (x *ResponseTimePercentiles) GetP90() *durationpb.Duration {
	if x != nil {
		return x.P90
	}
	return nil
}

func (x *ResponseTimePercentiles) GetP95() *durationpb.Duration {
	if x != nil {
		return x.P95
	}
	return nil
}

func (x *ResponseTimePercentiles) GetP99() *durationpb.Duration {
	if x != nil {
		return x.P99
	}
	return nil
}

func (x *ResponseTimePercentiles) SetP50(v *durationpb.Duration) {
	x.P50 = v
}

func (x *ResponseTimePercentiles) SetP90(v *durationpb.Duration) {
	x.P90 = v
}

func (x *ResponseTimePercentiles) SetP95(v *durationpb.Duration) {
	x.P95 = v
}

func (x *ResponseTimePercentiles) SetP99(v *durationpb.Duration) {
	x.P99 = v
}

func (x *ResponseTimePercentiles) HasP50() bool {
	if x == nil {
		return false
	}
	return x.P50 != nil
}

func (x *ResponseTimePercentiles) HasP90() bool {
	if x == nil {
		return false
	}
	return x.P90 != nil
}

func (x *ResponseTimePercentiles) HasP95() bool {
	if x == nil {
		return false
	}
	return x.P95 != nil
}

func (x *ResponseTimePercentiles) HasP99() bool {
	if x == nil {
		return false
	}
	return x.P99 != nil
}

func (x *ResponseTimePercentiles) ClearP50() {
	x.P50 = nil
}

func (x *ResponseTimePercentiles) ClearP90() {
	x.P90 = nil
}

func (x *ResponseTimePercentiles) ClearP95() {
	x.P95 = nil
}

func (x *ResponseTimePercentiles) ClearP99() {
	x.P99 = nil
}

type ResponseTimePercentiles_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// 50th percentile
	P50 *durationpb.Duration
	// 90th percentile
	P90 *durationpb.Duration
	// 95th percentile
	P95 *durationpb.Duration
	// 99th percentile
	P99 *durationpb.Duration
}

func (b0 ResponseTimePercentiles_builder) Build() *ResponseTimePercentiles {
	m0 := &ResponseTimePercentiles{}
	b, x := &b0, m0
	_, _ = b, x
	x.P50 = b.P50
	x.P90 = b.P90
	x.P95 = b.P95
	x.P99 = b.P99
	return m0
}

// Unregister route request
type UnregisterRouteRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Route ID
	RouteId *string `protobuf:"bytes,2,opt,name=route_id,json=routeId" json:"route_id,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterRouteRequest) Reset() {
	*x = UnregisterRouteRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterRouteRequest) ProtoMessage() {}

func (x *UnregisterRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UnregisterRouteRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *UnregisterRouteRequest) GetRouteId() string {
	if x != nil && x.RouteId != nil {
		return *x.RouteId
	}
	return ""
}

func (x *UnregisterRouteRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UnregisterRouteRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *UnregisterRouteRequest) SetRouteId(v string) {
	x.RouteId = &v
}

func (x *UnregisterRouteRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *UnregisterRouteRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *UnregisterRouteRequest) HasRouteId() bool {
	if x == nil {
		return false
	}
	return x.RouteId != nil
}

func (x *UnregisterRouteRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *UnregisterRouteRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *UnregisterRouteRequest) ClearRouteId() {
	x.RouteId = nil
}

func (x *UnregisterRouteRequest) ClearMetadata() {
	x.Metadata = nil
}

type UnregisterRouteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Route ID
	RouteId *string
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 UnregisterRouteRequest_builder) Build() *UnregisterRouteRequest {
	m0 := &UnregisterRouteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.RouteId = b.RouteId
	x.Metadata = b.Metadata
	return m0
}

// Unregister route response
type UnregisterRouteResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterRouteResponse) Reset() {
	*x = UnregisterRouteResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterRouteResponse) ProtoMessage() {}

func (x *UnregisterRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UnregisterRouteResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *UnregisterRouteResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UnregisterRouteResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *UnregisterRouteResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *UnregisterRouteResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *UnregisterRouteResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *UnregisterRouteResponse) ClearSuccess() {
	x.Success = nil
}

func (x *UnregisterRouteResponse) ClearError() {
	x.Error = nil
}

type UnregisterRouteResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Error information
	Error *messages.Error
}

func (b0 UnregisterRouteResponse_builder) Build() *UnregisterRouteResponse {
	m0 := &UnregisterRouteResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Error = b.Error
	return m0
}

// List routes request
type ListRoutesRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Method filter
	Method *string `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
	// Path pattern filter
	PathPattern *string `protobuf:"bytes,3,opt,name=path_pattern,json=pathPattern" json:"path_pattern,omitempty"`
	// Pagination options
	Pagination *messages.Pagination `protobuf:"bytes,4,opt,name=pagination" json:"pagination,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRoutesRequest) Reset() {
	*x = ListRoutesRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesRequest) ProtoMessage() {}

func (x *ListRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListRoutesRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *ListRoutesRequest) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *ListRoutesRequest) GetPathPattern() string {
	if x != nil && x.PathPattern != nil {
		return *x.PathPattern
	}
	return ""
}

func (x *ListRoutesRequest) GetPagination() *messages.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListRoutesRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ListRoutesRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *ListRoutesRequest) SetMethod(v string) {
	x.Method = &v
}

func (x *ListRoutesRequest) SetPathPattern(v string) {
	x.PathPattern = &v
}

func (x *ListRoutesRequest) SetPagination(v *messages.Pagination) {
	x.Pagination = v
}

func (x *ListRoutesRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *ListRoutesRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *ListRoutesRequest) HasMethod() bool {
	if x == nil {
		return false
	}
	return x.Method != nil
}

func (x *ListRoutesRequest) HasPathPattern() bool {
	if x == nil {
		return false
	}
	return x.PathPattern != nil
}

func (x *ListRoutesRequest) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *ListRoutesRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *ListRoutesRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *ListRoutesRequest) ClearMethod() {
	x.Method = nil
}

func (x *ListRoutesRequest) ClearPathPattern() {
	x.PathPattern = nil
}

func (x *ListRoutesRequest) ClearPagination() {
	x.Pagination = nil
}

func (x *ListRoutesRequest) ClearMetadata() {
	x.Metadata = nil
}

type ListRoutesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Method filter
	Method *string
	// Path pattern filter
	PathPattern *string
	// Pagination options
	Pagination *messages.Pagination
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 ListRoutesRequest_builder) Build() *ListRoutesRequest {
	m0 := &ListRoutesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Method = b.Method
	x.PathPattern = b.PathPattern
	x.Pagination = b.Pagination
	x.Metadata = b.Metadata
	return m0
}

// List routes response
type ListRoutesResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Route information
	Routes []*RouteInfo `protobuf:"bytes,1,rep,name=routes" json:"routes,omitempty"`
	// Pagination information
	Pagination *messages.Pagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRoutesResponse) Reset() {
	*x = ListRoutesResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesResponse) ProtoMessage() {}

func (x *ListRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListRoutesResponse) GetRoutes() []*RouteInfo {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *ListRoutesResponse) GetPagination() *messages.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListRoutesResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ListRoutesResponse) SetRoutes(v []*RouteInfo) {
	x.Routes = v
}

func (x *ListRoutesResponse) SetPagination(v *messages.Pagination) {
	x.Pagination = v
}

func (x *ListRoutesResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *ListRoutesResponse) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *ListRoutesResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *ListRoutesResponse) ClearPagination() {
	x.Pagination = nil
}

func (x *ListRoutesResponse) ClearError() {
	x.Error = nil
}

type ListRoutesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Route information
	Routes []*RouteInfo
	// Pagination information
	Pagination *messages.Pagination
	// Error information
	Error *messages.Error
}

func (b0 ListRoutesResponse_builder) Build() *ListRoutesResponse {
	m0 := &ListRoutesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Routes = b.Routes
	x.Pagination = b.Pagination
	x.Error = b.Error
	return m0
}

// Add middleware request
type AddMiddlewareRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Middleware configuration
	Middleware *MiddlewareConfig `protobuf:"bytes,2,opt,name=middleware" json:"middleware,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMiddlewareRequest) Reset() {
	*x = AddMiddlewareRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMiddlewareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMiddlewareRequest) ProtoMessage() {}

func (x *AddMiddlewareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddMiddlewareRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *AddMiddlewareRequest) GetMiddleware() *MiddlewareConfig {
	if x != nil {
		return x.Middleware
	}
	return nil
}

func (x *AddMiddlewareRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AddMiddlewareRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *AddMiddlewareRequest) SetMiddleware(v *MiddlewareConfig) {
	x.Middleware = v
}

func (x *AddMiddlewareRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *AddMiddlewareRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *AddMiddlewareRequest) HasMiddleware() bool {
	if x == nil {
		return false
	}
	return x.Middleware != nil
}

func (x *AddMiddlewareRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *AddMiddlewareRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *AddMiddlewareRequest) ClearMiddleware() {
	x.Middleware = nil
}

func (x *AddMiddlewareRequest) ClearMetadata() {
	x.Metadata = nil
}

type AddMiddlewareRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Middleware configuration
	Middleware *MiddlewareConfig
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 AddMiddlewareRequest_builder) Build() *AddMiddlewareRequest {
	m0 := &AddMiddlewareRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Middleware = b.Middleware
	x.Metadata = b.Metadata
	return m0
}

// Add middleware response
type AddMiddlewareResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Middleware information
	Middleware *MiddlewareInfo `protobuf:"bytes,2,opt,name=middleware" json:"middleware,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMiddlewareResponse) Reset() {
	*x = AddMiddlewareResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMiddlewareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMiddlewareResponse) ProtoMessage() {}

func (x *AddMiddlewareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddMiddlewareResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *AddMiddlewareResponse) GetMiddleware() *MiddlewareInfo {
	if x != nil {
		return x.Middleware
	}
	return nil
}

func (x *AddMiddlewareResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AddMiddlewareResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *AddMiddlewareResponse) SetMiddleware(v *MiddlewareInfo) {
	x.Middleware = v
}

func (x *AddMiddlewareResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *AddMiddlewareResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *AddMiddlewareResponse) HasMiddleware() bool {
	if x == nil {
		return false
	}
	return x.Middleware != nil
}

func (x *AddMiddlewareResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *AddMiddlewareResponse) ClearSuccess() {
	x.Success = nil
}

func (x *AddMiddlewareResponse) ClearMiddleware() {
	x.Middleware = nil
}

func (x *AddMiddlewareResponse) ClearError() {
	x.Error = nil
}

type AddMiddlewareResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Middleware information
	Middleware *MiddlewareInfo
	// Error information
	Error *messages.Error
}

func (b0 AddMiddlewareResponse_builder) Build() *AddMiddlewareResponse {
	m0 := &AddMiddlewareResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Middleware = b.Middleware
	x.Error = b.Error
	return m0
}

// Middleware information
type MiddlewareInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Middleware ID
	MiddlewareId *string `protobuf:"bytes,1,opt,name=middleware_id,json=middlewareId" json:"middleware_id,omitempty"`
	// Middleware configuration
	Config *MiddlewareConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Middleware statistics
	Stats *MiddlewareStats `protobuf:"bytes,3,opt,name=stats" json:"stats,omitempty"`
	// Creation time
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last updated time
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiddlewareInfo) Reset() {
	*x = MiddlewareInfo{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiddlewareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddlewareInfo) ProtoMessage() {}

func (x *MiddlewareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MiddlewareInfo) GetMiddlewareId() string {
	if x != nil && x.MiddlewareId != nil {
		return *x.MiddlewareId
	}
	return ""
}

func (x *MiddlewareInfo) GetConfig() *MiddlewareConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *MiddlewareInfo) GetStats() *MiddlewareStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *MiddlewareInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MiddlewareInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MiddlewareInfo) SetMiddlewareId(v string) {
	x.MiddlewareId = &v
}

func (x *MiddlewareInfo) SetConfig(v *MiddlewareConfig) {
	x.Config = v
}

func (x *MiddlewareInfo) SetStats(v *MiddlewareStats) {
	x.Stats = v
}

func (x *MiddlewareInfo) SetCreatedAt(v *timestamppb.Timestamp) {
	x.CreatedAt = v
}

func (x *MiddlewareInfo) SetUpdatedAt(v *timestamppb.Timestamp) {
	x.UpdatedAt = v
}

func (x *MiddlewareInfo) HasMiddlewareId() bool {
	if x == nil {
		return false
	}
	return x.MiddlewareId != nil
}

func (x *MiddlewareInfo) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *MiddlewareInfo) HasStats() bool {
	if x == nil {
		return false
	}
	return x.Stats != nil
}

func (x *MiddlewareInfo) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.CreatedAt != nil
}

func (x *MiddlewareInfo) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return x.UpdatedAt != nil
}

func (x *MiddlewareInfo) ClearMiddlewareId() {
	x.MiddlewareId = nil
}

func (x *MiddlewareInfo) ClearConfig() {
	x.Config = nil
}

func (x *MiddlewareInfo) ClearStats() {
	x.Stats = nil
}

func (x *MiddlewareInfo) ClearCreatedAt() {
	x.CreatedAt = nil
}

func (x *MiddlewareInfo) ClearUpdatedAt() {
	x.UpdatedAt = nil
}

type MiddlewareInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Middleware ID
	MiddlewareId *string
	// Middleware configuration
	Config *MiddlewareConfig
	// Middleware statistics
	Stats *MiddlewareStats
	// Creation time
	CreatedAt *timestamppb.Timestamp
	// Last updated time
	UpdatedAt *timestamppb.Timestamp
}

func (b0 MiddlewareInfo_builder) Build() *MiddlewareInfo {
	m0 := &MiddlewareInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.MiddlewareId = b.MiddlewareId
	x.Config = b.Config
	x.Stats = b.Stats
	x.CreatedAt = b.CreatedAt
	x.UpdatedAt = b.UpdatedAt
	return m0
}

// Middleware statistics
type MiddlewareStats struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Total executions
	TotalExecutions *int64 `protobuf:"varint,1,opt,name=total_executions,json=totalExecutions" json:"total_executions,omitempty"`
	// Success count
	SuccessCount *int64 `protobuf:"varint,2,opt,name=success_count,json=successCount" json:"success_count,omitempty"`
	// Error count
	ErrorCount *int64 `protobuf:"varint,3,opt,name=error_count,json=errorCount" json:"error_count,omitempty"`
	// Average execution time
	AvgExecutionTime *durationpb.Duration `protobuf:"bytes,4,opt,name=avg_execution_time,json=avgExecutionTime" json:"avg_execution_time,omitempty"`
	// Last execution time
	LastExecutionTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_execution_time,json=lastExecutionTime" json:"last_execution_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MiddlewareStats) Reset() {
	*x = MiddlewareStats{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiddlewareStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddlewareStats) ProtoMessage() {}

func (x *MiddlewareStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MiddlewareStats) GetTotalExecutions() int64 {
	if x != nil && x.TotalExecutions != nil {
		return *x.TotalExecutions
	}
	return 0
}

func (x *MiddlewareStats) GetSuccessCount() int64 {
	if x != nil && x.SuccessCount != nil {
		return *x.SuccessCount
	}
	return 0
}

func (x *MiddlewareStats) GetErrorCount() int64 {
	if x != nil && x.ErrorCount != nil {
		return *x.ErrorCount
	}
	return 0
}

func (x *MiddlewareStats) GetAvgExecutionTime() *durationpb.Duration {
	if x != nil {
		return x.AvgExecutionTime
	}
	return nil
}

func (x *MiddlewareStats) GetLastExecutionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastExecutionTime
	}
	return nil
}

func (x *MiddlewareStats) SetTotalExecutions(v int64) {
	x.TotalExecutions = &v
}

func (x *MiddlewareStats) SetSuccessCount(v int64) {
	x.SuccessCount = &v
}

func (x *MiddlewareStats) SetErrorCount(v int64) {
	x.ErrorCount = &v
}

func (x *MiddlewareStats) SetAvgExecutionTime(v *durationpb.Duration) {
	x.AvgExecutionTime = v
}

func (x *MiddlewareStats) SetLastExecutionTime(v *timestamppb.Timestamp) {
	x.LastExecutionTime = v
}

func (x *MiddlewareStats) HasTotalExecutions() bool {
	if x == nil {
		return false
	}
	return x.TotalExecutions != nil
}

func (x *MiddlewareStats) HasSuccessCount() bool {
	if x == nil {
		return false
	}
	return x.SuccessCount != nil
}

func (x *MiddlewareStats) HasErrorCount() bool {
	if x == nil {
		return false
	}
	return x.ErrorCount != nil
}

func (x *MiddlewareStats) HasAvgExecutionTime() bool {
	if x == nil {
		return false
	}
	return x.AvgExecutionTime != nil
}

func (x *MiddlewareStats) HasLastExecutionTime() bool {
	if x == nil {
		return false
	}
	return x.LastExecutionTime != nil
}

func (x *MiddlewareStats) ClearTotalExecutions() {
	x.TotalExecutions = nil
}

func (x *MiddlewareStats) ClearSuccessCount() {
	x.SuccessCount = nil
}

func (x *MiddlewareStats) ClearErrorCount() {
	x.ErrorCount = nil
}

func (x *MiddlewareStats) ClearAvgExecutionTime() {
	x.AvgExecutionTime = nil
}

func (x *MiddlewareStats) ClearLastExecutionTime() {
	x.LastExecutionTime = nil
}

type MiddlewareStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total executions
	TotalExecutions *int64
	// Success count
	SuccessCount *int64
	// Error count
	ErrorCount *int64
	// Average execution time
	AvgExecutionTime *durationpb.Duration
	// Last execution time
	LastExecutionTime *timestamppb.Timestamp
}

func (b0 MiddlewareStats_builder) Build() *MiddlewareStats {
	m0 := &MiddlewareStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.TotalExecutions = b.TotalExecutions
	x.SuccessCount = b.SuccessCount
	x.ErrorCount = b.ErrorCount
	x.AvgExecutionTime = b.AvgExecutionTime
	x.LastExecutionTime = b.LastExecutionTime
	return m0
}

// Remove middleware request
type RemoveMiddlewareRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Middleware ID
	MiddlewareId *string `protobuf:"bytes,2,opt,name=middleware_id,json=middlewareId" json:"middleware_id,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveMiddlewareRequest) Reset() {
	*x = RemoveMiddlewareRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveMiddlewareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMiddlewareRequest) ProtoMessage() {}

func (x *RemoveMiddlewareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RemoveMiddlewareRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *RemoveMiddlewareRequest) GetMiddlewareId() string {
	if x != nil && x.MiddlewareId != nil {
		return *x.MiddlewareId
	}
	return ""
}

func (x *RemoveMiddlewareRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RemoveMiddlewareRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *RemoveMiddlewareRequest) SetMiddlewareId(v string) {
	x.MiddlewareId = &v
}

func (x *RemoveMiddlewareRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *RemoveMiddlewareRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *RemoveMiddlewareRequest) HasMiddlewareId() bool {
	if x == nil {
		return false
	}
	return x.MiddlewareId != nil
}

func (x *RemoveMiddlewareRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *RemoveMiddlewareRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *RemoveMiddlewareRequest) ClearMiddlewareId() {
	x.MiddlewareId = nil
}

func (x *RemoveMiddlewareRequest) ClearMetadata() {
	x.Metadata = nil
}

type RemoveMiddlewareRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Middleware ID
	MiddlewareId *string
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 RemoveMiddlewareRequest_builder) Build() *RemoveMiddlewareRequest {
	m0 := &RemoveMiddlewareRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.MiddlewareId = b.MiddlewareId
	x.Metadata = b.Metadata
	return m0
}

// Remove middleware response
type RemoveMiddlewareResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveMiddlewareResponse) Reset() {
	*x = RemoveMiddlewareResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveMiddlewareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMiddlewareResponse) ProtoMessage() {}

func (x *RemoveMiddlewareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RemoveMiddlewareResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *RemoveMiddlewareResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RemoveMiddlewareResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *RemoveMiddlewareResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *RemoveMiddlewareResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *RemoveMiddlewareResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *RemoveMiddlewareResponse) ClearSuccess() {
	x.Success = nil
}

func (x *RemoveMiddlewareResponse) ClearError() {
	x.Error = nil
}

type RemoveMiddlewareResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Error information
	Error *messages.Error
}

func (b0 RemoveMiddlewareResponse_builder) Build() *RemoveMiddlewareResponse {
	m0 := &RemoveMiddlewareResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Error = b.Error
	return m0
}

// List middleware request
type ListMiddlewareRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Type filter
	Type *MiddlewareType `protobuf:"varint,2,opt,name=type,enum=gcommon.v1.web.MiddlewareType" json:"type,omitempty"`
	// Enabled status filter
	Enabled *bool `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	// Pagination options
	Pagination *messages.Pagination `protobuf:"bytes,4,opt,name=pagination" json:"pagination,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMiddlewareRequest) Reset() {
	*x = ListMiddlewareRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMiddlewareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMiddlewareRequest) ProtoMessage() {}

func (x *ListMiddlewareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListMiddlewareRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *ListMiddlewareRequest) GetType() MiddlewareType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MiddlewareType_MIDDLEWARE_TYPE_UNSPECIFIED
}

func (x *ListMiddlewareRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ListMiddlewareRequest) GetPagination() *messages.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListMiddlewareRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ListMiddlewareRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *ListMiddlewareRequest) SetType(v MiddlewareType) {
	x.Type = &v
}

func (x *ListMiddlewareRequest) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *ListMiddlewareRequest) SetPagination(v *messages.Pagination) {
	x.Pagination = v
}

func (x *ListMiddlewareRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *ListMiddlewareRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *ListMiddlewareRequest) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *ListMiddlewareRequest) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *ListMiddlewareRequest) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *ListMiddlewareRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *ListMiddlewareRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *ListMiddlewareRequest) ClearType() {
	x.Type = nil
}

func (x *ListMiddlewareRequest) ClearEnabled() {
	x.Enabled = nil
}

func (x *ListMiddlewareRequest) ClearPagination() {
	x.Pagination = nil
}

func (x *ListMiddlewareRequest) ClearMetadata() {
	x.Metadata = nil
}

type ListMiddlewareRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Type filter
	Type *MiddlewareType
	// Enabled status filter
	Enabled *bool
	// Pagination options
	Pagination *messages.Pagination
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 ListMiddlewareRequest_builder) Build() *ListMiddlewareRequest {
	m0 := &ListMiddlewareRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Type = b.Type
	x.Enabled = b.Enabled
	x.Pagination = b.Pagination
	x.Metadata = b.Metadata
	return m0
}

// List middleware response
type ListMiddlewareResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Middleware information
	Middleware []*MiddlewareInfo `protobuf:"bytes,1,rep,name=middleware" json:"middleware,omitempty"`
	// Pagination information
	Pagination *messages.Pagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMiddlewareResponse) Reset() {
	*x = ListMiddlewareResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMiddlewareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMiddlewareResponse) ProtoMessage() {}

func (x *ListMiddlewareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListMiddlewareResponse) GetMiddleware() []*MiddlewareInfo {
	if x != nil {
		return x.Middleware
	}
	return nil
}

func (x *ListMiddlewareResponse) GetPagination() *messages.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListMiddlewareResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ListMiddlewareResponse) SetMiddleware(v []*MiddlewareInfo) {
	x.Middleware = v
}

func (x *ListMiddlewareResponse) SetPagination(v *messages.Pagination) {
	x.Pagination = v
}

func (x *ListMiddlewareResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *ListMiddlewareResponse) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *ListMiddlewareResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *ListMiddlewareResponse) ClearPagination() {
	x.Pagination = nil
}

func (x *ListMiddlewareResponse) ClearError() {
	x.Error = nil
}

type ListMiddlewareResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Middleware information
	Middleware []*MiddlewareInfo
	// Pagination information
	Pagination *messages.Pagination
	// Error information
	Error *messages.Error
}

func (b0 ListMiddlewareResponse_builder) Build() *ListMiddlewareResponse {
	m0 := &ListMiddlewareResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Middleware = b.Middleware
	x.Pagination = b.Pagination
	x.Error = b.Error
	return m0
}

// Get server metrics request
type GetServerMetricsRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Metric types to include
	MetricTypes []ServerMetricType `protobuf:"varint,2,rep,packed,name=metric_types,json=metricTypes,enum=gcommon.v1.web.ServerMetricType" json:"metric_types,omitempty"`
	// Time range
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerMetricsRequest) Reset() {
	*x = GetServerMetricsRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerMetricsRequest) ProtoMessage() {}

func (x *GetServerMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetServerMetricsRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *GetServerMetricsRequest) GetMetricTypes() []ServerMetricType {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

func (x *GetServerMetricsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetServerMetricsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetServerMetricsRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetServerMetricsRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *GetServerMetricsRequest) SetMetricTypes(v []ServerMetricType) {
	x.MetricTypes = v
}

func (x *GetServerMetricsRequest) SetStartTime(v *timestamppb.Timestamp) {
	x.StartTime = v
}

func (x *GetServerMetricsRequest) SetEndTime(v *timestamppb.Timestamp) {
	x.EndTime = v
}

func (x *GetServerMetricsRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *GetServerMetricsRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *GetServerMetricsRequest) HasStartTime() bool {
	if x == nil {
		return false
	}
	return x.StartTime != nil
}

func (x *GetServerMetricsRequest) HasEndTime() bool {
	if x == nil {
		return false
	}
	return x.EndTime != nil
}

func (x *GetServerMetricsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetServerMetricsRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *GetServerMetricsRequest) ClearStartTime() {
	x.StartTime = nil
}

func (x *GetServerMetricsRequest) ClearEndTime() {
	x.EndTime = nil
}

func (x *GetServerMetricsRequest) ClearMetadata() {
	x.Metadata = nil
}

type GetServerMetricsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Metric types to include
	MetricTypes []ServerMetricType
	// Time range
	StartTime *timestamppb.Timestamp
	EndTime   *timestamppb.Timestamp
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 GetServerMetricsRequest_builder) Build() *GetServerMetricsRequest {
	m0 := &GetServerMetricsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.MetricTypes = b.MetricTypes
	x.StartTime = b.StartTime
	x.EndTime = b.EndTime
	x.Metadata = b.Metadata
	return m0
}

// Get server metrics response
type GetServerMetricsResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server metrics
	Metrics *ServerMetrics `protobuf:"bytes,1,opt,name=metrics" json:"metrics,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerMetricsResponse) Reset() {
	*x = GetServerMetricsResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerMetricsResponse) ProtoMessage() {}

func (x *GetServerMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetServerMetricsResponse) GetMetrics() *ServerMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetServerMetricsResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetServerMetricsResponse) SetMetrics(v *ServerMetrics) {
	x.Metrics = v
}

func (x *GetServerMetricsResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *GetServerMetricsResponse) HasMetrics() bool {
	if x == nil {
		return false
	}
	return x.Metrics != nil
}

func (x *GetServerMetricsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *GetServerMetricsResponse) ClearMetrics() {
	x.Metrics = nil
}

func (x *GetServerMetricsResponse) ClearError() {
	x.Error = nil
}

type GetServerMetricsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server metrics
	Metrics *ServerMetrics
	// Error information
	Error *messages.Error
}

func (b0 GetServerMetricsResponse_builder) Build() *GetServerMetricsResponse {
	m0 := &GetServerMetricsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Metrics = b.Metrics
	x.Error = b.Error
	return m0
}

// Server metrics
type ServerMetrics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Request metrics
	RequestMetrics *RequestMetrics `protobuf:"bytes,2,opt,name=request_metrics,json=requestMetrics" json:"request_metrics,omitempty"`
	// Response metrics
	ResponseMetrics *ResponseMetrics `protobuf:"bytes,3,opt,name=response_metrics,json=responseMetrics" json:"response_metrics,omitempty"`
	// Connection metrics
	ConnectionMetrics *ConnectionMetrics `protobuf:"bytes,4,opt,name=connection_metrics,json=connectionMetrics" json:"connection_metrics,omitempty"`
	// Error metrics
	ErrorMetrics *ErrorMetrics `protobuf:"bytes,5,opt,name=error_metrics,json=errorMetrics" json:"error_metrics,omitempty"`
	// Resource metrics
	ResourceMetrics *ResourceMetrics `protobuf:"bytes,6,opt,name=resource_metrics,json=resourceMetrics" json:"resource_metrics,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ServerMetrics) Reset() {
	*x = ServerMetrics{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMetrics) ProtoMessage() {}

func (x *ServerMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServerMetrics) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *ServerMetrics) GetRequestMetrics() *RequestMetrics {
	if x != nil {
		return x.RequestMetrics
	}
	return nil
}

func (x *ServerMetrics) GetResponseMetrics() *ResponseMetrics {
	if x != nil {
		return x.ResponseMetrics
	}
	return nil
}

func (x *ServerMetrics) GetConnectionMetrics() *ConnectionMetrics {
	if x != nil {
		return x.ConnectionMetrics
	}
	return nil
}

func (x *ServerMetrics) GetErrorMetrics() *ErrorMetrics {
	if x != nil {
		return x.ErrorMetrics
	}
	return nil
}

func (x *ServerMetrics) GetResourceMetrics() *ResourceMetrics {
	if x != nil {
		return x.ResourceMetrics
	}
	return nil
}

func (x *ServerMetrics) SetServerId(v string) {
	x.ServerId = &v
}

func (x *ServerMetrics) SetRequestMetrics(v *RequestMetrics) {
	x.RequestMetrics = v
}

func (x *ServerMetrics) SetResponseMetrics(v *ResponseMetrics) {
	x.ResponseMetrics = v
}

func (x *ServerMetrics) SetConnectionMetrics(v *ConnectionMetrics) {
	x.ConnectionMetrics = v
}

func (x *ServerMetrics) SetErrorMetrics(v *ErrorMetrics) {
	x.ErrorMetrics = v
}

func (x *ServerMetrics) SetResourceMetrics(v *ResourceMetrics) {
	x.ResourceMetrics = v
}

func (x *ServerMetrics) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *ServerMetrics) HasRequestMetrics() bool {
	if x == nil {
		return false
	}
	return x.RequestMetrics != nil
}

func (x *ServerMetrics) HasResponseMetrics() bool {
	if x == nil {
		return false
	}
	return x.ResponseMetrics != nil
}

func (x *ServerMetrics) HasConnectionMetrics() bool {
	if x == nil {
		return false
	}
	return x.ConnectionMetrics != nil
}

func (x *ServerMetrics) HasErrorMetrics() bool {
	if x == nil {
		return false
	}
	return x.ErrorMetrics != nil
}

func (x *ServerMetrics) HasResourceMetrics() bool {
	if x == nil {
		return false
	}
	return x.ResourceMetrics != nil
}

func (x *ServerMetrics) ClearServerId() {
	x.ServerId = nil
}

func (x *ServerMetrics) ClearRequestMetrics() {
	x.RequestMetrics = nil
}

func (x *ServerMetrics) ClearResponseMetrics() {
	x.ResponseMetrics = nil
}

func (x *ServerMetrics) ClearConnectionMetrics() {
	x.ConnectionMetrics = nil
}

func (x *ServerMetrics) ClearErrorMetrics() {
	x.ErrorMetrics = nil
}

func (x *ServerMetrics) ClearResourceMetrics() {
	x.ResourceMetrics = nil
}

type ServerMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Request metrics
	RequestMetrics *RequestMetrics
	// Response metrics
	ResponseMetrics *ResponseMetrics
	// Connection metrics
	ConnectionMetrics *ConnectionMetrics
	// Error metrics
	ErrorMetrics *ErrorMetrics
	// Resource metrics
	ResourceMetrics *ResourceMetrics
}

func (b0 ServerMetrics_builder) Build() *ServerMetrics {
	m0 := &ServerMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.RequestMetrics = b.RequestMetrics
	x.ResponseMetrics = b.ResponseMetrics
	x.ConnectionMetrics = b.ConnectionMetrics
	x.ErrorMetrics = b.ErrorMetrics
	x.ResourceMetrics = b.ResourceMetrics
	return m0
}

// Request metrics
type RequestMetrics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Total requests
	TotalRequests *int64 `protobuf:"varint,1,opt,name=total_requests,json=totalRequests" json:"total_requests,omitempty"`
	// Requests per second
	RequestsPerSecond *float64 `protobuf:"fixed64,2,opt,name=requests_per_second,json=requestsPerSecond" json:"requests_per_second,omitempty"`
	// Request rate trend
	RequestRateTrend []*DataPoint `protobuf:"bytes,3,rep,name=request_rate_trend,json=requestRateTrend" json:"request_rate_trend,omitempty"`
	// Request size distribution
	RequestSizeDistribution *SizeDistribution `protobuf:"bytes,4,opt,name=request_size_distribution,json=requestSizeDistribution" json:"request_size_distribution,omitempty"`
	// HTTP method distribution
	MethodDistribution map[string]int64 `protobuf:"bytes,5,rep,name=method_distribution,json=methodDistribution" json:"method_distribution,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RequestMetrics) Reset() {
	*x = RequestMetrics{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMetrics) ProtoMessage() {}

func (x *RequestMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RequestMetrics) GetTotalRequests() int64 {
	if x != nil && x.TotalRequests != nil {
		return *x.TotalRequests
	}
	return 0
}

func (x *RequestMetrics) GetRequestsPerSecond() float64 {
	if x != nil && x.RequestsPerSecond != nil {
		return *x.RequestsPerSecond
	}
	return 0
}

func (x *RequestMetrics) GetRequestRateTrend() []*DataPoint {
	if x != nil {
		return x.RequestRateTrend
	}
	return nil
}

func (x *RequestMetrics) GetRequestSizeDistribution() *SizeDistribution {
	if x != nil {
		return x.RequestSizeDistribution
	}
	return nil
}

func (x *RequestMetrics) GetMethodDistribution() map[string]int64 {
	if x != nil {
		return x.MethodDistribution
	}
	return nil
}

func (x *RequestMetrics) SetTotalRequests(v int64) {
	x.TotalRequests = &v
}

func (x *RequestMetrics) SetRequestsPerSecond(v float64) {
	x.RequestsPerSecond = &v
}

func (x *RequestMetrics) SetRequestRateTrend(v []*DataPoint) {
	x.RequestRateTrend = v
}

func (x *RequestMetrics) SetRequestSizeDistribution(v *SizeDistribution) {
	x.RequestSizeDistribution = v
}

func (x *RequestMetrics) SetMethodDistribution(v map[string]int64) {
	x.MethodDistribution = v
}

func (x *RequestMetrics) HasTotalRequests() bool {
	if x == nil {
		return false
	}
	return x.TotalRequests != nil
}

func (x *RequestMetrics) HasRequestsPerSecond() bool {
	if x == nil {
		return false
	}
	return x.RequestsPerSecond != nil
}

func (x *RequestMetrics) HasRequestSizeDistribution() bool {
	if x == nil {
		return false
	}
	return x.RequestSizeDistribution != nil
}

func (x *RequestMetrics) ClearTotalRequests() {
	x.TotalRequests = nil
}

func (x *RequestMetrics) ClearRequestsPerSecond() {
	x.RequestsPerSecond = nil
}

func (x *RequestMetrics) ClearRequestSizeDistribution() {
	x.RequestSizeDistribution = nil
}

type RequestMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total requests
	TotalRequests *int64
	// Requests per second
	RequestsPerSecond *float64
	// Request rate trend
	RequestRateTrend []*DataPoint
	// Request size distribution
	RequestSizeDistribution *SizeDistribution
	// HTTP method distribution
	MethodDistribution map[string]int64
}

func (b0 RequestMetrics_builder) Build() *RequestMetrics {
	m0 := &RequestMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.TotalRequests = b.TotalRequests
	x.RequestsPerSecond = b.RequestsPerSecond
	x.RequestRateTrend = b.RequestRateTrend
	x.RequestSizeDistribution = b.RequestSizeDistribution
	x.MethodDistribution = b.MethodDistribution
	return m0
}

// Response metrics
type ResponseMetrics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Average response time
	AvgResponseTime *durationpb.Duration `protobuf:"bytes,1,opt,name=avg_response_time,json=avgResponseTime" json:"avg_response_time,omitempty"`
	// Response time percentiles
	ResponseTimePercentiles *ResponseTimePercentiles `protobuf:"bytes,2,opt,name=response_time_percentiles,json=responseTimePercentiles" json:"response_time_percentiles,omitempty"`
	// Response time trend
	ResponseTimeTrend []*DataPoint `protobuf:"bytes,3,rep,name=response_time_trend,json=responseTimeTrend" json:"response_time_trend,omitempty"`
	// Response size distribution
	ResponseSizeDistribution *SizeDistribution `protobuf:"bytes,4,opt,name=response_size_distribution,json=responseSizeDistribution" json:"response_size_distribution,omitempty"`
	// Status code distribution
	StatusCodeDistribution map[string]int64 `protobuf:"bytes,5,rep,name=status_code_distribution,json=statusCodeDistribution" json:"status_code_distribution,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ResponseMetrics) Reset() {
	*x = ResponseMetrics{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMetrics) ProtoMessage() {}

func (x *ResponseMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResponseMetrics) GetAvgResponseTime() *durationpb.Duration {
	if x != nil {
		return x.AvgResponseTime
	}
	return nil
}

func (x *ResponseMetrics) GetResponseTimePercentiles() *ResponseTimePercentiles {
	if x != nil {
		return x.ResponseTimePercentiles
	}
	return nil
}

func (x *ResponseMetrics) GetResponseTimeTrend() []*DataPoint {
	if x != nil {
		return x.ResponseTimeTrend
	}
	return nil
}

func (x *ResponseMetrics) GetResponseSizeDistribution() *SizeDistribution {
	if x != nil {
		return x.ResponseSizeDistribution
	}
	return nil
}

func (x *ResponseMetrics) GetStatusCodeDistribution() map[string]int64 {
	if x != nil {
		return x.StatusCodeDistribution
	}
	return nil
}

func (x *ResponseMetrics) SetAvgResponseTime(v *durationpb.Duration) {
	x.AvgResponseTime = v
}

func (x *ResponseMetrics) SetResponseTimePercentiles(v *ResponseTimePercentiles) {
	x.ResponseTimePercentiles = v
}

func (x *ResponseMetrics) SetResponseTimeTrend(v []*DataPoint) {
	x.ResponseTimeTrend = v
}

func (x *ResponseMetrics) SetResponseSizeDistribution(v *SizeDistribution) {
	x.ResponseSizeDistribution = v
}

func (x *ResponseMetrics) SetStatusCodeDistribution(v map[string]int64) {
	x.StatusCodeDistribution = v
}

func (x *ResponseMetrics) HasAvgResponseTime() bool {
	if x == nil {
		return false
	}
	return x.AvgResponseTime != nil
}

func (x *ResponseMetrics) HasResponseTimePercentiles() bool {
	if x == nil {
		return false
	}
	return x.ResponseTimePercentiles != nil
}

func (x *ResponseMetrics) HasResponseSizeDistribution() bool {
	if x == nil {
		return false
	}
	return x.ResponseSizeDistribution != nil
}

func (x *ResponseMetrics) ClearAvgResponseTime() {
	x.AvgResponseTime = nil
}

func (x *ResponseMetrics) ClearResponseTimePercentiles() {
	x.ResponseTimePercentiles = nil
}

func (x *ResponseMetrics) ClearResponseSizeDistribution() {
	x.ResponseSizeDistribution = nil
}

type ResponseMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Average response time
	AvgResponseTime *durationpb.Duration
	// Response time percentiles
	ResponseTimePercentiles *ResponseTimePercentiles
	// Response time trend
	ResponseTimeTrend []*DataPoint
	// Response size distribution
	ResponseSizeDistribution *SizeDistribution
	// Status code distribution
	StatusCodeDistribution map[string]int64
}

func (b0 ResponseMetrics_builder) Build() *ResponseMetrics {
	m0 := &ResponseMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.AvgResponseTime = b.AvgResponseTime
	x.ResponseTimePercentiles = b.ResponseTimePercentiles
	x.ResponseTimeTrend = b.ResponseTimeTrend
	x.ResponseSizeDistribution = b.ResponseSizeDistribution
	x.StatusCodeDistribution = b.StatusCodeDistribution
	return m0
}

// Connection metrics
type ConnectionMetrics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Active connections
	ActiveConnections *int32 `protobuf:"varint,1,opt,name=active_connections,json=activeConnections" json:"active_connections,omitempty"`
	// Total connections
	TotalConnections *int64 `protobuf:"varint,2,opt,name=total_connections,json=totalConnections" json:"total_connections,omitempty"`
	// Connection rate
	ConnectionsPerSecond *float64 `protobuf:"fixed64,3,opt,name=connections_per_second,json=connectionsPerSecond" json:"connections_per_second,omitempty"`
	// Connection duration distribution
	ConnectionDurationDistribution *DurationDistribution `protobuf:"bytes,4,opt,name=connection_duration_distribution,json=connectionDurationDistribution" json:"connection_duration_distribution,omitempty"`
	// Connection state distribution
	ConnectionStateDistribution map[string]int32 `protobuf:"bytes,5,rep,name=connection_state_distribution,json=connectionStateDistribution" json:"connection_state_distribution,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ConnectionMetrics) Reset() {
	*x = ConnectionMetrics{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionMetrics) ProtoMessage() {}

func (x *ConnectionMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConnectionMetrics) GetActiveConnections() int32 {
	if x != nil && x.ActiveConnections != nil {
		return *x.ActiveConnections
	}
	return 0
}

func (x *ConnectionMetrics) GetTotalConnections() int64 {
	if x != nil && x.TotalConnections != nil {
		return *x.TotalConnections
	}
	return 0
}

func (x *ConnectionMetrics) GetConnectionsPerSecond() float64 {
	if x != nil && x.ConnectionsPerSecond != nil {
		return *x.ConnectionsPerSecond
	}
	return 0
}

func (x *ConnectionMetrics) GetConnectionDurationDistribution() *DurationDistribution {
	if x != nil {
		return x.ConnectionDurationDistribution
	}
	return nil
}

func (x *ConnectionMetrics) GetConnectionStateDistribution() map[string]int32 {
	if x != nil {
		return x.ConnectionStateDistribution
	}
	return nil
}

func (x *ConnectionMetrics) SetActiveConnections(v int32) {
	x.ActiveConnections = &v
}

func (x *ConnectionMetrics) SetTotalConnections(v int64) {
	x.TotalConnections = &v
}

func (x *ConnectionMetrics) SetConnectionsPerSecond(v float64) {
	x.ConnectionsPerSecond = &v
}

func (x *ConnectionMetrics) SetConnectionDurationDistribution(v *DurationDistribution) {
	x.ConnectionDurationDistribution = v
}

func (x *ConnectionMetrics) SetConnectionStateDistribution(v map[string]int32) {
	x.ConnectionStateDistribution = v
}

func (x *ConnectionMetrics) HasActiveConnections() bool {
	if x == nil {
		return false
	}
	return x.ActiveConnections != nil
}

func (x *ConnectionMetrics) HasTotalConnections() bool {
	if x == nil {
		return false
	}
	return x.TotalConnections != nil
}

func (x *ConnectionMetrics) HasConnectionsPerSecond() bool {
	if x == nil {
		return false
	}
	return x.ConnectionsPerSecond != nil
}

func (x *ConnectionMetrics) HasConnectionDurationDistribution() bool {
	if x == nil {
		return false
	}
	return x.ConnectionDurationDistribution != nil
}

func (x *ConnectionMetrics) ClearActiveConnections() {
	x.ActiveConnections = nil
}

func (x *ConnectionMetrics) ClearTotalConnections() {
	x.TotalConnections = nil
}

func (x *ConnectionMetrics) ClearConnectionsPerSecond() {
	x.ConnectionsPerSecond = nil
}

func (x *ConnectionMetrics) ClearConnectionDurationDistribution() {
	x.ConnectionDurationDistribution = nil
}

type ConnectionMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Active connections
	ActiveConnections *int32
	// Total connections
	TotalConnections *int64
	// Connection rate
	ConnectionsPerSecond *float64
	// Connection duration distribution
	ConnectionDurationDistribution *DurationDistribution
	// Connection state distribution
	ConnectionStateDistribution map[string]int32
}

func (b0 ConnectionMetrics_builder) Build() *ConnectionMetrics {
	m0 := &ConnectionMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.ActiveConnections = b.ActiveConnections
	x.TotalConnections = b.TotalConnections
	x.ConnectionsPerSecond = b.ConnectionsPerSecond
	x.ConnectionDurationDistribution = b.ConnectionDurationDistribution
	x.ConnectionStateDistribution = b.ConnectionStateDistribution
	return m0
}

// Error metrics
type ErrorMetrics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Total errors
	TotalErrors *int64 `protobuf:"varint,1,opt,name=total_errors,json=totalErrors" json:"total_errors,omitempty"`
	// Error rate
	ErrorRate *float64 `protobuf:"fixed64,2,opt,name=error_rate,json=errorRate" json:"error_rate,omitempty"`
	// Error trend
	ErrorTrend []*DataPoint `protobuf:"bytes,3,rep,name=error_trend,json=errorTrend" json:"error_trend,omitempty"`
	// Error type distribution
	ErrorTypeDistribution map[string]int64 `protobuf:"bytes,4,rep,name=error_type_distribution,json=errorTypeDistribution" json:"error_type_distribution,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Recent errors
	RecentErrors  []*RecentError `protobuf:"bytes,5,rep,name=recent_errors,json=recentErrors" json:"recent_errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorMetrics) Reset() {
	*x = ErrorMetrics{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMetrics) ProtoMessage() {}

func (x *ErrorMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorMetrics) GetTotalErrors() int64 {
	if x != nil && x.TotalErrors != nil {
		return *x.TotalErrors
	}
	return 0
}

func (x *ErrorMetrics) GetErrorRate() float64 {
	if x != nil && x.ErrorRate != nil {
		return *x.ErrorRate
	}
	return 0
}

func (x *ErrorMetrics) GetErrorTrend() []*DataPoint {
	if x != nil {
		return x.ErrorTrend
	}
	return nil
}

func (x *ErrorMetrics) GetErrorTypeDistribution() map[string]int64 {
	if x != nil {
		return x.ErrorTypeDistribution
	}
	return nil
}

func (x *ErrorMetrics) GetRecentErrors() []*RecentError {
	if x != nil {
		return x.RecentErrors
	}
	return nil
}

func (x *ErrorMetrics) SetTotalErrors(v int64) {
	x.TotalErrors = &v
}

func (x *ErrorMetrics) SetErrorRate(v float64) {
	x.ErrorRate = &v
}

func (x *ErrorMetrics) SetErrorTrend(v []*DataPoint) {
	x.ErrorTrend = v
}

func (x *ErrorMetrics) SetErrorTypeDistribution(v map[string]int64) {
	x.ErrorTypeDistribution = v
}

func (x *ErrorMetrics) SetRecentErrors(v []*RecentError) {
	x.RecentErrors = v
}

func (x *ErrorMetrics) HasTotalErrors() bool {
	if x == nil {
		return false
	}
	return x.TotalErrors != nil
}

func (x *ErrorMetrics) HasErrorRate() bool {
	if x == nil {
		return false
	}
	return x.ErrorRate != nil
}

func (x *ErrorMetrics) ClearTotalErrors() {
	x.TotalErrors = nil
}

func (x *ErrorMetrics) ClearErrorRate() {
	x.ErrorRate = nil
}

type ErrorMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total errors
	TotalErrors *int64
	// Error rate
	ErrorRate *float64
	// Error trend
	ErrorTrend []*DataPoint
	// Error type distribution
	ErrorTypeDistribution map[string]int64
	// Recent errors
	RecentErrors []*RecentError
}

func (b0 ErrorMetrics_builder) Build() *ErrorMetrics {
	m0 := &ErrorMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.TotalErrors = b.TotalErrors
	x.ErrorRate = b.ErrorRate
	x.ErrorTrend = b.ErrorTrend
	x.ErrorTypeDistribution = b.ErrorTypeDistribution
	x.RecentErrors = b.RecentErrors
	return m0
}

// Resource metrics
type ResourceMetrics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// CPU usage percentage
	CpuUsagePercent *float64 `protobuf:"fixed64,1,opt,name=cpu_usage_percent,json=cpuUsagePercent" json:"cpu_usage_percent,omitempty"`
	// Memory usage in bytes
	MemoryUsageBytes *int64 `protobuf:"varint,2,opt,name=memory_usage_bytes,json=memoryUsageBytes" json:"memory_usage_bytes,omitempty"`
	// Memory usage percentage
	MemoryUsagePercent *float64 `protobuf:"fixed64,3,opt,name=memory_usage_percent,json=memoryUsagePercent" json:"memory_usage_percent,omitempty"`
	// Goroutine count
	GoroutineCount *int32 `protobuf:"varint,4,opt,name=goroutine_count,json=goroutineCount" json:"goroutine_count,omitempty"`
	// GC statistics
	GcStats       *GCStats `protobuf:"bytes,5,opt,name=gc_stats,json=gcStats" json:"gc_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceMetrics) Reset() {
	*x = ResourceMetrics{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceMetrics) ProtoMessage() {}

func (x *ResourceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResourceMetrics) GetCpuUsagePercent() float64 {
	if x != nil && x.CpuUsagePercent != nil {
		return *x.CpuUsagePercent
	}
	return 0
}

func (x *ResourceMetrics) GetMemoryUsageBytes() int64 {
	if x != nil && x.MemoryUsageBytes != nil {
		return *x.MemoryUsageBytes
	}
	return 0
}

func (x *ResourceMetrics) GetMemoryUsagePercent() float64 {
	if x != nil && x.MemoryUsagePercent != nil {
		return *x.MemoryUsagePercent
	}
	return 0
}

func (x *ResourceMetrics) GetGoroutineCount() int32 {
	if x != nil && x.GoroutineCount != nil {
		return *x.GoroutineCount
	}
	return 0
}

func (x *ResourceMetrics) GetGcStats() *GCStats {
	if x != nil {
		return x.GcStats
	}
	return nil
}

func (x *ResourceMetrics) SetCpuUsagePercent(v float64) {
	x.CpuUsagePercent = &v
}

func (x *ResourceMetrics) SetMemoryUsageBytes(v int64) {
	x.MemoryUsageBytes = &v
}

func (x *ResourceMetrics) SetMemoryUsagePercent(v float64) {
	x.MemoryUsagePercent = &v
}

func (x *ResourceMetrics) SetGoroutineCount(v int32) {
	x.GoroutineCount = &v
}

func (x *ResourceMetrics) SetGcStats(v *GCStats) {
	x.GcStats = v
}

func (x *ResourceMetrics) HasCpuUsagePercent() bool {
	if x == nil {
		return false
	}
	return x.CpuUsagePercent != nil
}

func (x *ResourceMetrics) HasMemoryUsageBytes() bool {
	if x == nil {
		return false
	}
	return x.MemoryUsageBytes != nil
}

func (x *ResourceMetrics) HasMemoryUsagePercent() bool {
	if x == nil {
		return false
	}
	return x.MemoryUsagePercent != nil
}

func (x *ResourceMetrics) HasGoroutineCount() bool {
	if x == nil {
		return false
	}
	return x.GoroutineCount != nil
}

func (x *ResourceMetrics) HasGcStats() bool {
	if x == nil {
		return false
	}
	return x.GcStats != nil
}

func (x *ResourceMetrics) ClearCpuUsagePercent() {
	x.CpuUsagePercent = nil
}

func (x *ResourceMetrics) ClearMemoryUsageBytes() {
	x.MemoryUsageBytes = nil
}

func (x *ResourceMetrics) ClearMemoryUsagePercent() {
	x.MemoryUsagePercent = nil
}

func (x *ResourceMetrics) ClearGoroutineCount() {
	x.GoroutineCount = nil
}

func (x *ResourceMetrics) ClearGcStats() {
	x.GcStats = nil
}

type ResourceMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// CPU usage percentage
	CpuUsagePercent *float64
	// Memory usage in bytes
	MemoryUsageBytes *int64
	// Memory usage percentage
	MemoryUsagePercent *float64
	// Goroutine count
	GoroutineCount *int32
	// GC statistics
	GcStats *GCStats
}

func (b0 ResourceMetrics_builder) Build() *ResourceMetrics {
	m0 := &ResourceMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.CpuUsagePercent = b.CpuUsagePercent
	x.MemoryUsageBytes = b.MemoryUsageBytes
	x.MemoryUsagePercent = b.MemoryUsagePercent
	x.GoroutineCount = b.GoroutineCount
	x.GcStats = b.GcStats
	return m0
}

// GC statistics
type GCStats struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Number of GC cycles
	NumGc *int64 `protobuf:"varint,1,opt,name=num_gc,json=numGc" json:"num_gc,omitempty"`
	// Total GC pause time
	TotalPauseTime *durationpb.Duration `protobuf:"bytes,2,opt,name=total_pause_time,json=totalPauseTime" json:"total_pause_time,omitempty"`
	// Average GC pause time
	AvgPauseTime *durationpb.Duration `protobuf:"bytes,3,opt,name=avg_pause_time,json=avgPauseTime" json:"avg_pause_time,omitempty"`
	// Memory allocated
	MemoryAllocated *int64 `protobuf:"varint,4,opt,name=memory_allocated,json=memoryAllocated" json:"memory_allocated,omitempty"`
	// Memory released
	MemoryReleased *int64 `protobuf:"varint,5,opt,name=memory_released,json=memoryReleased" json:"memory_released,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GCStats) Reset() {
	*x = GCStats{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GCStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCStats) ProtoMessage() {}

func (x *GCStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GCStats) GetNumGc() int64 {
	if x != nil && x.NumGc != nil {
		return *x.NumGc
	}
	return 0
}

func (x *GCStats) GetTotalPauseTime() *durationpb.Duration {
	if x != nil {
		return x.TotalPauseTime
	}
	return nil
}

func (x *GCStats) GetAvgPauseTime() *durationpb.Duration {
	if x != nil {
		return x.AvgPauseTime
	}
	return nil
}

func (x *GCStats) GetMemoryAllocated() int64 {
	if x != nil && x.MemoryAllocated != nil {
		return *x.MemoryAllocated
	}
	return 0
}

func (x *GCStats) GetMemoryReleased() int64 {
	if x != nil && x.MemoryReleased != nil {
		return *x.MemoryReleased
	}
	return 0
}

func (x *GCStats) SetNumGc(v int64) {
	x.NumGc = &v
}

func (x *GCStats) SetTotalPauseTime(v *durationpb.Duration) {
	x.TotalPauseTime = v
}

func (x *GCStats) SetAvgPauseTime(v *durationpb.Duration) {
	x.AvgPauseTime = v
}

func (x *GCStats) SetMemoryAllocated(v int64) {
	x.MemoryAllocated = &v
}

func (x *GCStats) SetMemoryReleased(v int64) {
	x.MemoryReleased = &v
}

func (x *GCStats) HasNumGc() bool {
	if x == nil {
		return false
	}
	return x.NumGc != nil
}

func (x *GCStats) HasTotalPauseTime() bool {
	if x == nil {
		return false
	}
	return x.TotalPauseTime != nil
}

func (x *GCStats) HasAvgPauseTime() bool {
	if x == nil {
		return false
	}
	return x.AvgPauseTime != nil
}

func (x *GCStats) HasMemoryAllocated() bool {
	if x == nil {
		return false
	}
	return x.MemoryAllocated != nil
}

func (x *GCStats) HasMemoryReleased() bool {
	if x == nil {
		return false
	}
	return x.MemoryReleased != nil
}

func (x *GCStats) ClearNumGc() {
	x.NumGc = nil
}

func (x *GCStats) ClearTotalPauseTime() {
	x.TotalPauseTime = nil
}

func (x *GCStats) ClearAvgPauseTime() {
	x.AvgPauseTime = nil
}

func (x *GCStats) ClearMemoryAllocated() {
	x.MemoryAllocated = nil
}

func (x *GCStats) ClearMemoryReleased() {
	x.MemoryReleased = nil
}

type GCStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Number of GC cycles
	NumGc *int64
	// Total GC pause time
	TotalPauseTime *durationpb.Duration
	// Average GC pause time
	AvgPauseTime *durationpb.Duration
	// Memory allocated
	MemoryAllocated *int64
	// Memory released
	MemoryReleased *int64
}

func (b0 GCStats_builder) Build() *GCStats {
	m0 := &GCStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.NumGc = b.NumGc
	x.TotalPauseTime = b.TotalPauseTime
	x.AvgPauseTime = b.AvgPauseTime
	x.MemoryAllocated = b.MemoryAllocated
	x.MemoryReleased = b.MemoryReleased
	return m0
}

// Data point for trends
type DataPoint struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Timestamp
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	// Value
	Value         *float64 `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DataPoint) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *DataPoint) SetTimestamp(v *timestamppb.Timestamp) {
	x.Timestamp = v
}

func (x *DataPoint) SetValue(v float64) {
	x.Value = &v
}

func (x *DataPoint) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.Timestamp != nil
}

func (x *DataPoint) HasValue() bool {
	if x == nil {
		return false
	}
	return x.Value != nil
}

func (x *DataPoint) ClearTimestamp() {
	x.Timestamp = nil
}

func (x *DataPoint) ClearValue() {
	x.Value = nil
}

type DataPoint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Timestamp
	Timestamp *timestamppb.Timestamp
	// Value
	Value *float64
}

func (b0 DataPoint_builder) Build() *DataPoint {
	m0 := &DataPoint{}
	b, x := &b0, m0
	_, _ = b, x
	x.Timestamp = b.Timestamp
	x.Value = b.Value
	return m0
}

// Size distribution
type SizeDistribution struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Minimum size
	MinSize *int64 `protobuf:"varint,1,opt,name=min_size,json=minSize" json:"min_size,omitempty"`
	// Maximum size
	MaxSize *int64 `protobuf:"varint,2,opt,name=max_size,json=maxSize" json:"max_size,omitempty"`
	// Average size
	AvgSize *float64 `protobuf:"fixed64,3,opt,name=avg_size,json=avgSize" json:"avg_size,omitempty"`
	// Size buckets
	SizeBuckets   []*SizeBucket `protobuf:"bytes,4,rep,name=size_buckets,json=sizeBuckets" json:"size_buckets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SizeDistribution) Reset() {
	*x = SizeDistribution{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SizeDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeDistribution) ProtoMessage() {}

func (x *SizeDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SizeDistribution) GetMinSize() int64 {
	if x != nil && x.MinSize != nil {
		return *x.MinSize
	}
	return 0
}

func (x *SizeDistribution) GetMaxSize() int64 {
	if x != nil && x.MaxSize != nil {
		return *x.MaxSize
	}
	return 0
}

func (x *SizeDistribution) GetAvgSize() float64 {
	if x != nil && x.AvgSize != nil {
		return *x.AvgSize
	}
	return 0
}

func (x *SizeDistribution) GetSizeBuckets() []*SizeBucket {
	if x != nil {
		return x.SizeBuckets
	}
	return nil
}

func (x *SizeDistribution) SetMinSize(v int64) {
	x.MinSize = &v
}

func (x *SizeDistribution) SetMaxSize(v int64) {
	x.MaxSize = &v
}

func (x *SizeDistribution) SetAvgSize(v float64) {
	x.AvgSize = &v
}

func (x *SizeDistribution) SetSizeBuckets(v []*SizeBucket) {
	x.SizeBuckets = v
}

func (x *SizeDistribution) HasMinSize() bool {
	if x == nil {
		return false
	}
	return x.MinSize != nil
}

func (x *SizeDistribution) HasMaxSize() bool {
	if x == nil {
		return false
	}
	return x.MaxSize != nil
}

func (x *SizeDistribution) HasAvgSize() bool {
	if x == nil {
		return false
	}
	return x.AvgSize != nil
}

func (x *SizeDistribution) ClearMinSize() {
	x.MinSize = nil
}

func (x *SizeDistribution) ClearMaxSize() {
	x.MaxSize = nil
}

func (x *SizeDistribution) ClearAvgSize() {
	x.AvgSize = nil
}

type SizeDistribution_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Minimum size
	MinSize *int64
	// Maximum size
	MaxSize *int64
	// Average size
	AvgSize *float64
	// Size buckets
	SizeBuckets []*SizeBucket
}

func (b0 SizeDistribution_builder) Build() *SizeDistribution {
	m0 := &SizeDistribution{}
	b, x := &b0, m0
	_, _ = b, x
	x.MinSize = b.MinSize
	x.MaxSize = b.MaxSize
	x.AvgSize = b.AvgSize
	x.SizeBuckets = b.SizeBuckets
	return m0
}

// Size bucket
type SizeBucket struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Upper bound
	UpperBound *int64 `protobuf:"varint,1,opt,name=upper_bound,json=upperBound" json:"upper_bound,omitempty"`
	// Count
	Count         *int64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SizeBucket) Reset() {
	*x = SizeBucket{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SizeBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeBucket) ProtoMessage() {}

func (x *SizeBucket) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SizeBucket) GetUpperBound() int64 {
	if x != nil && x.UpperBound != nil {
		return *x.UpperBound
	}
	return 0
}

func (x *SizeBucket) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *SizeBucket) SetUpperBound(v int64) {
	x.UpperBound = &v
}

func (x *SizeBucket) SetCount(v int64) {
	x.Count = &v
}

func (x *SizeBucket) HasUpperBound() bool {
	if x == nil {
		return false
	}
	return x.UpperBound != nil
}

func (x *SizeBucket) HasCount() bool {
	if x == nil {
		return false
	}
	return x.Count != nil
}

func (x *SizeBucket) ClearUpperBound() {
	x.UpperBound = nil
}

func (x *SizeBucket) ClearCount() {
	x.Count = nil
}

type SizeBucket_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Upper bound
	UpperBound *int64
	// Count
	Count *int64
}

func (b0 SizeBucket_builder) Build() *SizeBucket {
	m0 := &SizeBucket{}
	b, x := &b0, m0
	_, _ = b, x
	x.UpperBound = b.UpperBound
	x.Count = b.Count
	return m0
}

// Duration distribution
type DurationDistribution struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Minimum duration
	MinDuration *durationpb.Duration `protobuf:"bytes,1,opt,name=min_duration,json=minDuration" json:"min_duration,omitempty"`
	// Maximum duration
	MaxDuration *durationpb.Duration `protobuf:"bytes,2,opt,name=max_duration,json=maxDuration" json:"max_duration,omitempty"`
	// Average duration
	AvgDuration *durationpb.Duration `protobuf:"bytes,3,opt,name=avg_duration,json=avgDuration" json:"avg_duration,omitempty"`
	// Duration buckets
	DurationBuckets []*DurationBucket `protobuf:"bytes,4,rep,name=duration_buckets,json=durationBuckets" json:"duration_buckets,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DurationDistribution) Reset() {
	*x = DurationDistribution{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DurationDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DurationDistribution) ProtoMessage() {}

func (x *DurationDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DurationDistribution) GetMinDuration() *durationpb.Duration {
	if x != nil {
		return x.MinDuration
	}
	return nil
}

func (x *DurationDistribution) GetMaxDuration() *durationpb.Duration {
	if x != nil {
		return x.MaxDuration
	}
	return nil
}

func (x *DurationDistribution) GetAvgDuration() *durationpb.Duration {
	if x != nil {
		return x.AvgDuration
	}
	return nil
}

func (x *DurationDistribution) GetDurationBuckets() []*DurationBucket {
	if x != nil {
		return x.DurationBuckets
	}
	return nil
}

func (x *DurationDistribution) SetMinDuration(v *durationpb.Duration) {
	x.MinDuration = v
}

func (x *DurationDistribution) SetMaxDuration(v *durationpb.Duration) {
	x.MaxDuration = v
}

func (x *DurationDistribution) SetAvgDuration(v *durationpb.Duration) {
	x.AvgDuration = v
}

func (x *DurationDistribution) SetDurationBuckets(v []*DurationBucket) {
	x.DurationBuckets = v
}

func (x *DurationDistribution) HasMinDuration() bool {
	if x == nil {
		return false
	}
	return x.MinDuration != nil
}

func (x *DurationDistribution) HasMaxDuration() bool {
	if x == nil {
		return false
	}
	return x.MaxDuration != nil
}

func (x *DurationDistribution) HasAvgDuration() bool {
	if x == nil {
		return false
	}
	return x.AvgDuration != nil
}

func (x *DurationDistribution) ClearMinDuration() {
	x.MinDuration = nil
}

func (x *DurationDistribution) ClearMaxDuration() {
	x.MaxDuration = nil
}

func (x *DurationDistribution) ClearAvgDuration() {
	x.AvgDuration = nil
}

type DurationDistribution_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Minimum duration
	MinDuration *durationpb.Duration
	// Maximum duration
	MaxDuration *durationpb.Duration
	// Average duration
	AvgDuration *durationpb.Duration
	// Duration buckets
	DurationBuckets []*DurationBucket
}

func (b0 DurationDistribution_builder) Build() *DurationDistribution {
	m0 := &DurationDistribution{}
	b, x := &b0, m0
	_, _ = b, x
	x.MinDuration = b.MinDuration
	x.MaxDuration = b.MaxDuration
	x.AvgDuration = b.AvgDuration
	x.DurationBuckets = b.DurationBuckets
	return m0
}

// Duration bucket
type DurationBucket struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Upper bound
	UpperBound *durationpb.Duration `protobuf:"bytes,1,opt,name=upper_bound,json=upperBound" json:"upper_bound,omitempty"`
	// Count
	Count         *int64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DurationBucket) Reset() {
	*x = DurationBucket{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DurationBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DurationBucket) ProtoMessage() {}

func (x *DurationBucket) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DurationBucket) GetUpperBound() *durationpb.Duration {
	if x != nil {
		return x.UpperBound
	}
	return nil
}

func (x *DurationBucket) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *DurationBucket) SetUpperBound(v *durationpb.Duration) {
	x.UpperBound = v
}

func (x *DurationBucket) SetCount(v int64) {
	x.Count = &v
}

func (x *DurationBucket) HasUpperBound() bool {
	if x == nil {
		return false
	}
	return x.UpperBound != nil
}

func (x *DurationBucket) HasCount() bool {
	if x == nil {
		return false
	}
	return x.Count != nil
}

func (x *DurationBucket) ClearUpperBound() {
	x.UpperBound = nil
}

func (x *DurationBucket) ClearCount() {
	x.Count = nil
}

type DurationBucket_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Upper bound
	UpperBound *durationpb.Duration
	// Count
	Count *int64
}

func (b0 DurationBucket_builder) Build() *DurationBucket {
	m0 := &DurationBucket{}
	b, x := &b0, m0
	_, _ = b, x
	x.UpperBound = b.UpperBound
	x.Count = b.Count
	return m0
}

// Recent error
type RecentError struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Error message
	Message *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	// Error type
	Type *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// Count
	Count *int32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	// Last occurrence
	LastOccurrence *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_occurrence,json=lastOccurrence" json:"last_occurrence,omitempty"`
	// Request path
	RequestPath *string `protobuf:"bytes,5,opt,name=request_path,json=requestPath" json:"request_path,omitempty"`
	// Status code
	StatusCode    *int32 `protobuf:"varint,6,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecentError) Reset() {
	*x = RecentError{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecentError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentError) ProtoMessage() {}

func (x *RecentError) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RecentError) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *RecentError) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *RecentError) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *RecentError) GetLastOccurrence() *timestamppb.Timestamp {
	if x != nil {
		return x.LastOccurrence
	}
	return nil
}

func (x *RecentError) GetRequestPath() string {
	if x != nil && x.RequestPath != nil {
		return *x.RequestPath
	}
	return ""
}

func (x *RecentError) GetStatusCode() int32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *RecentError) SetMessage(v string) {
	x.Message = &v
}

func (x *RecentError) SetType(v string) {
	x.Type = &v
}

func (x *RecentError) SetCount(v int32) {
	x.Count = &v
}

func (x *RecentError) SetLastOccurrence(v *timestamppb.Timestamp) {
	x.LastOccurrence = v
}

func (x *RecentError) SetRequestPath(v string) {
	x.RequestPath = &v
}

func (x *RecentError) SetStatusCode(v int32) {
	x.StatusCode = &v
}

func (x *RecentError) HasMessage() bool {
	if x == nil {
		return false
	}
	return x.Message != nil
}

func (x *RecentError) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *RecentError) HasCount() bool {
	if x == nil {
		return false
	}
	return x.Count != nil
}

func (x *RecentError) HasLastOccurrence() bool {
	if x == nil {
		return false
	}
	return x.LastOccurrence != nil
}

func (x *RecentError) HasRequestPath() bool {
	if x == nil {
		return false
	}
	return x.RequestPath != nil
}

func (x *RecentError) HasStatusCode() bool {
	if x == nil {
		return false
	}
	return x.StatusCode != nil
}

func (x *RecentError) ClearMessage() {
	x.Message = nil
}

func (x *RecentError) ClearType() {
	x.Type = nil
}

func (x *RecentError) ClearCount() {
	x.Count = nil
}

func (x *RecentError) ClearLastOccurrence() {
	x.LastOccurrence = nil
}

func (x *RecentError) ClearRequestPath() {
	x.RequestPath = nil
}

func (x *RecentError) ClearStatusCode() {
	x.StatusCode = nil
}

type RecentError_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Error message
	Message *string
	// Error type
	Type *string
	// Count
	Count *int32
	// Last occurrence
	LastOccurrence *timestamppb.Timestamp
	// Request path
	RequestPath *string
	// Status code
	StatusCode *int32
}

func (b0 RecentError_builder) Build() *RecentError {
	m0 := &RecentError{}
	b, x := &b0, m0
	_, _ = b, x
	x.Message = b.Message
	x.Type = b.Type
	x.Count = b.Count
	x.LastOccurrence = b.LastOccurrence
	x.RequestPath = b.RequestPath
	x.StatusCode = b.StatusCode
	return m0
}

// Get route metrics request
type GetRouteMetricsRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Route ID
	RouteId *string `protobuf:"bytes,2,opt,name=route_id,json=routeId" json:"route_id,omitempty"`
	// Time range
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRouteMetricsRequest) Reset() {
	*x = GetRouteMetricsRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRouteMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteMetricsRequest) ProtoMessage() {}

func (x *GetRouteMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetRouteMetricsRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *GetRouteMetricsRequest) GetRouteId() string {
	if x != nil && x.RouteId != nil {
		return *x.RouteId
	}
	return ""
}

func (x *GetRouteMetricsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetRouteMetricsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetRouteMetricsRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetRouteMetricsRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *GetRouteMetricsRequest) SetRouteId(v string) {
	x.RouteId = &v
}

func (x *GetRouteMetricsRequest) SetStartTime(v *timestamppb.Timestamp) {
	x.StartTime = v
}

func (x *GetRouteMetricsRequest) SetEndTime(v *timestamppb.Timestamp) {
	x.EndTime = v
}

func (x *GetRouteMetricsRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *GetRouteMetricsRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *GetRouteMetricsRequest) HasRouteId() bool {
	if x == nil {
		return false
	}
	return x.RouteId != nil
}

func (x *GetRouteMetricsRequest) HasStartTime() bool {
	if x == nil {
		return false
	}
	return x.StartTime != nil
}

func (x *GetRouteMetricsRequest) HasEndTime() bool {
	if x == nil {
		return false
	}
	return x.EndTime != nil
}

func (x *GetRouteMetricsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetRouteMetricsRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *GetRouteMetricsRequest) ClearRouteId() {
	x.RouteId = nil
}

func (x *GetRouteMetricsRequest) ClearStartTime() {
	x.StartTime = nil
}

func (x *GetRouteMetricsRequest) ClearEndTime() {
	x.EndTime = nil
}

func (x *GetRouteMetricsRequest) ClearMetadata() {
	x.Metadata = nil
}

type GetRouteMetricsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Route ID
	RouteId *string
	// Time range
	StartTime *timestamppb.Timestamp
	EndTime   *timestamppb.Timestamp
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 GetRouteMetricsRequest_builder) Build() *GetRouteMetricsRequest {
	m0 := &GetRouteMetricsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.RouteId = b.RouteId
	x.StartTime = b.StartTime
	x.EndTime = b.EndTime
	x.Metadata = b.Metadata
	return m0
}

// Get route metrics response
type GetRouteMetricsResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Route metrics
	Metrics *RouteMetrics `protobuf:"bytes,1,opt,name=metrics" json:"metrics,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRouteMetricsResponse) Reset() {
	*x = GetRouteMetricsResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRouteMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteMetricsResponse) ProtoMessage() {}

func (x *GetRouteMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetRouteMetricsResponse) GetMetrics() *RouteMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetRouteMetricsResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetRouteMetricsResponse) SetMetrics(v *RouteMetrics) {
	x.Metrics = v
}

func (x *GetRouteMetricsResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *GetRouteMetricsResponse) HasMetrics() bool {
	if x == nil {
		return false
	}
	return x.Metrics != nil
}

func (x *GetRouteMetricsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *GetRouteMetricsResponse) ClearMetrics() {
	x.Metrics = nil
}

func (x *GetRouteMetricsResponse) ClearError() {
	x.Error = nil
}

type GetRouteMetricsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Route metrics
	Metrics *RouteMetrics
	// Error information
	Error *messages.Error
}

func (b0 GetRouteMetricsResponse_builder) Build() *GetRouteMetricsResponse {
	m0 := &GetRouteMetricsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Metrics = b.Metrics
	x.Error = b.Error
	return m0
}

// Route metrics
type RouteMetrics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Route ID
	RouteId *string `protobuf:"bytes,1,opt,name=route_id,json=routeId" json:"route_id,omitempty"`
	// Route path
	RoutePath *string `protobuf:"bytes,2,opt,name=route_path,json=routePath" json:"route_path,omitempty"`
	// Request metrics
	RequestMetrics *RequestMetrics `protobuf:"bytes,3,opt,name=request_metrics,json=requestMetrics" json:"request_metrics,omitempty"`
	// Response metrics
	ResponseMetrics *ResponseMetrics `protobuf:"bytes,4,opt,name=response_metrics,json=responseMetrics" json:"response_metrics,omitempty"`
	// Error metrics
	ErrorMetrics *ErrorMetrics `protobuf:"bytes,5,opt,name=error_metrics,json=errorMetrics" json:"error_metrics,omitempty"`
	// Performance metrics
	PerformanceMetrics *PerformanceMetrics `protobuf:"bytes,6,opt,name=performance_metrics,json=performanceMetrics" json:"performance_metrics,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RouteMetrics) Reset() {
	*x = RouteMetrics{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteMetrics) ProtoMessage() {}

func (x *RouteMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RouteMetrics) GetRouteId() string {
	if x != nil && x.RouteId != nil {
		return *x.RouteId
	}
	return ""
}

func (x *RouteMetrics) GetRoutePath() string {
	if x != nil && x.RoutePath != nil {
		return *x.RoutePath
	}
	return ""
}

func (x *RouteMetrics) GetRequestMetrics() *RequestMetrics {
	if x != nil {
		return x.RequestMetrics
	}
	return nil
}

func (x *RouteMetrics) GetResponseMetrics() *ResponseMetrics {
	if x != nil {
		return x.ResponseMetrics
	}
	return nil
}

func (x *RouteMetrics) GetErrorMetrics() *ErrorMetrics {
	if x != nil {
		return x.ErrorMetrics
	}
	return nil
}

func (x *RouteMetrics) GetPerformanceMetrics() *PerformanceMetrics {
	if x != nil {
		return x.PerformanceMetrics
	}
	return nil
}

func (x *RouteMetrics) SetRouteId(v string) {
	x.RouteId = &v
}

func (x *RouteMetrics) SetRoutePath(v string) {
	x.RoutePath = &v
}

func (x *RouteMetrics) SetRequestMetrics(v *RequestMetrics) {
	x.RequestMetrics = v
}

func (x *RouteMetrics) SetResponseMetrics(v *ResponseMetrics) {
	x.ResponseMetrics = v
}

func (x *RouteMetrics) SetErrorMetrics(v *ErrorMetrics) {
	x.ErrorMetrics = v
}

func (x *RouteMetrics) SetPerformanceMetrics(v *PerformanceMetrics) {
	x.PerformanceMetrics = v
}

func (x *RouteMetrics) HasRouteId() bool {
	if x == nil {
		return false
	}
	return x.RouteId != nil
}

func (x *RouteMetrics) HasRoutePath() bool {
	if x == nil {
		return false
	}
	return x.RoutePath != nil
}

func (x *RouteMetrics) HasRequestMetrics() bool {
	if x == nil {
		return false
	}
	return x.RequestMetrics != nil
}

func (x *RouteMetrics) HasResponseMetrics() bool {
	if x == nil {
		return false
	}
	return x.ResponseMetrics != nil
}

func (x *RouteMetrics) HasErrorMetrics() bool {
	if x == nil {
		return false
	}
	return x.ErrorMetrics != nil
}

func (x *RouteMetrics) HasPerformanceMetrics() bool {
	if x == nil {
		return false
	}
	return x.PerformanceMetrics != nil
}

func (x *RouteMetrics) ClearRouteId() {
	x.RouteId = nil
}

func (x *RouteMetrics) ClearRoutePath() {
	x.RoutePath = nil
}

func (x *RouteMetrics) ClearRequestMetrics() {
	x.RequestMetrics = nil
}

func (x *RouteMetrics) ClearResponseMetrics() {
	x.ResponseMetrics = nil
}

func (x *RouteMetrics) ClearErrorMetrics() {
	x.ErrorMetrics = nil
}

func (x *RouteMetrics) ClearPerformanceMetrics() {
	x.PerformanceMetrics = nil
}

type RouteMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Route ID
	RouteId *string
	// Route path
	RoutePath *string
	// Request metrics
	RequestMetrics *RequestMetrics
	// Response metrics
	ResponseMetrics *ResponseMetrics
	// Error metrics
	ErrorMetrics *ErrorMetrics
	// Performance metrics
	PerformanceMetrics *PerformanceMetrics
}

func (b0 RouteMetrics_builder) Build() *RouteMetrics {
	m0 := &RouteMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.RouteId = b.RouteId
	x.RoutePath = b.RoutePath
	x.RequestMetrics = b.RequestMetrics
	x.ResponseMetrics = b.ResponseMetrics
	x.ErrorMetrics = b.ErrorMetrics
	x.PerformanceMetrics = b.PerformanceMetrics
	return m0
}

// Performance metrics
type PerformanceMetrics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Throughput (requests per second)
	Throughput *float64 `protobuf:"fixed64,1,opt,name=throughput" json:"throughput,omitempty"`
	// Latency percentiles
	LatencyPercentiles *ResponseTimePercentiles `protobuf:"bytes,2,opt,name=latency_percentiles,json=latencyPercentiles" json:"latency_percentiles,omitempty"`
	// Cache hit rate
	CacheHitRate *float64 `protobuf:"fixed64,3,opt,name=cache_hit_rate,json=cacheHitRate" json:"cache_hit_rate,omitempty"`
	// Cache miss rate
	CacheMissRate *float64 `protobuf:"fixed64,4,opt,name=cache_miss_rate,json=cacheMissRate" json:"cache_miss_rate,omitempty"`
	// Database query time
	AvgDbQueryTime *durationpb.Duration `protobuf:"bytes,5,opt,name=avg_db_query_time,json=avgDbQueryTime" json:"avg_db_query_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PerformanceMetrics) Reset() {
	*x = PerformanceMetrics{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceMetrics) ProtoMessage() {}

func (x *PerformanceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PerformanceMetrics) GetThroughput() float64 {
	if x != nil && x.Throughput != nil {
		return *x.Throughput
	}
	return 0
}

func (x *PerformanceMetrics) GetLatencyPercentiles() *ResponseTimePercentiles {
	if x != nil {
		return x.LatencyPercentiles
	}
	return nil
}

func (x *PerformanceMetrics) GetCacheHitRate() float64 {
	if x != nil && x.CacheHitRate != nil {
		return *x.CacheHitRate
	}
	return 0
}

func (x *PerformanceMetrics) GetCacheMissRate() float64 {
	if x != nil && x.CacheMissRate != nil {
		return *x.CacheMissRate
	}
	return 0
}

func (x *PerformanceMetrics) GetAvgDbQueryTime() *durationpb.Duration {
	if x != nil {
		return x.AvgDbQueryTime
	}
	return nil
}

func (x *PerformanceMetrics) SetThroughput(v float64) {
	x.Throughput = &v
}

func (x *PerformanceMetrics) SetLatencyPercentiles(v *ResponseTimePercentiles) {
	x.LatencyPercentiles = v
}

func (x *PerformanceMetrics) SetCacheHitRate(v float64) {
	x.CacheHitRate = &v
}

func (x *PerformanceMetrics) SetCacheMissRate(v float64) {
	x.CacheMissRate = &v
}

func (x *PerformanceMetrics) SetAvgDbQueryTime(v *durationpb.Duration) {
	x.AvgDbQueryTime = v
}

func (x *PerformanceMetrics) HasThroughput() bool {
	if x == nil {
		return false
	}
	return x.Throughput != nil
}

func (x *PerformanceMetrics) HasLatencyPercentiles() bool {
	if x == nil {
		return false
	}
	return x.LatencyPercentiles != nil
}

func (x *PerformanceMetrics) HasCacheHitRate() bool {
	if x == nil {
		return false
	}
	return x.CacheHitRate != nil
}

func (x *PerformanceMetrics) HasCacheMissRate() bool {
	if x == nil {
		return false
	}
	return x.CacheMissRate != nil
}

func (x *PerformanceMetrics) HasAvgDbQueryTime() bool {
	if x == nil {
		return false
	}
	return x.AvgDbQueryTime != nil
}

func (x *PerformanceMetrics) ClearThroughput() {
	x.Throughput = nil
}

func (x *PerformanceMetrics) ClearLatencyPercentiles() {
	x.LatencyPercentiles = nil
}

func (x *PerformanceMetrics) ClearCacheHitRate() {
	x.CacheHitRate = nil
}

func (x *PerformanceMetrics) ClearCacheMissRate() {
	x.CacheMissRate = nil
}

func (x *PerformanceMetrics) ClearAvgDbQueryTime() {
	x.AvgDbQueryTime = nil
}

type PerformanceMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Throughput (requests per second)
	Throughput *float64
	// Latency percentiles
	LatencyPercentiles *ResponseTimePercentiles
	// Cache hit rate
	CacheHitRate *float64
	// Cache miss rate
	CacheMissRate *float64
	// Database query time
	AvgDbQueryTime *durationpb.Duration
}

func (b0 PerformanceMetrics_builder) Build() *PerformanceMetrics {
	m0 := &PerformanceMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.Throughput = b.Throughput
	x.LatencyPercentiles = b.LatencyPercentiles
	x.CacheHitRate = b.CacheHitRate
	x.CacheMissRate = b.CacheMissRate
	x.AvgDbQueryTime = b.AvgDbQueryTime
	return m0
}

// Handle request request
type HandleRequestRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// HTTP request
	Request *HTTPRequest `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
	// Request context
	Context *RequestContext `protobuf:"bytes,3,opt,name=context" json:"context,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleRequestRequest) Reset() {
	*x = HandleRequestRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRequestRequest) ProtoMessage() {}

func (x *HandleRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HandleRequestRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *HandleRequestRequest) GetRequest() *HTTPRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *HandleRequestRequest) GetContext() *RequestContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *HandleRequestRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *HandleRequestRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *HandleRequestRequest) SetRequest(v *HTTPRequest) {
	x.Request = v
}

func (x *HandleRequestRequest) SetContext(v *RequestContext) {
	x.Context = v
}

func (x *HandleRequestRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *HandleRequestRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *HandleRequestRequest) HasRequest() bool {
	if x == nil {
		return false
	}
	return x.Request != nil
}

func (x *HandleRequestRequest) HasContext() bool {
	if x == nil {
		return false
	}
	return x.Context != nil
}

func (x *HandleRequestRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *HandleRequestRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *HandleRequestRequest) ClearRequest() {
	x.Request = nil
}

func (x *HandleRequestRequest) ClearContext() {
	x.Context = nil
}

func (x *HandleRequestRequest) ClearMetadata() {
	x.Metadata = nil
}

type HandleRequestRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// HTTP request
	Request *HTTPRequest
	// Request context
	Context *RequestContext
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 HandleRequestRequest_builder) Build() *HandleRequestRequest {
	m0 := &HandleRequestRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Request = b.Request
	x.Context = b.Context
	x.Metadata = b.Metadata
	return m0
}

// HTTP request
type HTTPRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// HTTP method
	Method *string `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	// Request URL
	Url *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	// Request path
	Path *string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	// Query parameters
	QueryParams map[string]string `protobuf:"bytes,4,rep,name=query_params,json=queryParams" json:"query_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// HTTP headers
	Headers map[string]string `protobuf:"bytes,5,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Request body
	Body []byte `protobuf:"bytes,6,opt,name=body" json:"body,omitempty"`
	// Content type
	ContentType *string `protobuf:"bytes,7,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	// Content length
	ContentLength *int64 `protobuf:"varint,8,opt,name=content_length,json=contentLength" json:"content_length,omitempty"`
	// Remote address
	RemoteAddr *string `protobuf:"bytes,9,opt,name=remote_addr,json=remoteAddr" json:"remote_addr,omitempty"`
	// User agent
	UserAgent *string `protobuf:"bytes,10,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// Request ID
	RequestId     *string `protobuf:"bytes,11,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPRequest) Reset() {
	*x = HTTPRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPRequest) ProtoMessage() {}

func (x *HTTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HTTPRequest) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *HTTPRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *HTTPRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *HTTPRequest) GetQueryParams() map[string]string {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

func (x *HTTPRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HTTPRequest) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

func (x *HTTPRequest) GetContentLength() int64 {
	if x != nil && x.ContentLength != nil {
		return *x.ContentLength
	}
	return 0
}

func (x *HTTPRequest) GetRemoteAddr() string {
	if x != nil && x.RemoteAddr != nil {
		return *x.RemoteAddr
	}
	return ""
}

func (x *HTTPRequest) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *HTTPRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *HTTPRequest) SetMethod(v string) {
	x.Method = &v
}

func (x *HTTPRequest) SetUrl(v string) {
	x.Url = &v
}

func (x *HTTPRequest) SetPath(v string) {
	x.Path = &v
}

func (x *HTTPRequest) SetQueryParams(v map[string]string) {
	x.QueryParams = v
}

func (x *HTTPRequest) SetHeaders(v map[string]string) {
	x.Headers = v
}

func (x *HTTPRequest) SetBody(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.Body = v
}

func (x *HTTPRequest) SetContentType(v string) {
	x.ContentType = &v
}

func (x *HTTPRequest) SetContentLength(v int64) {
	x.ContentLength = &v
}

func (x *HTTPRequest) SetRemoteAddr(v string) {
	x.RemoteAddr = &v
}

func (x *HTTPRequest) SetUserAgent(v string) {
	x.UserAgent = &v
}

func (x *HTTPRequest) SetRequestId(v string) {
	x.RequestId = &v
}

func (x *HTTPRequest) HasMethod() bool {
	if x == nil {
		return false
	}
	return x.Method != nil
}

func (x *HTTPRequest) HasUrl() bool {
	if x == nil {
		return false
	}
	return x.Url != nil
}

func (x *HTTPRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return x.Path != nil
}

func (x *HTTPRequest) HasBody() bool {
	if x == nil {
		return false
	}
	return x.Body != nil
}

func (x *HTTPRequest) HasContentType() bool {
	if x == nil {
		return false
	}
	return x.ContentType != nil
}

func (x *HTTPRequest) HasContentLength() bool {
	if x == nil {
		return false
	}
	return x.ContentLength != nil
}

func (x *HTTPRequest) HasRemoteAddr() bool {
	if x == nil {
		return false
	}
	return x.RemoteAddr != nil
}

func (x *HTTPRequest) HasUserAgent() bool {
	if x == nil {
		return false
	}
	return x.UserAgent != nil
}

func (x *HTTPRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return x.RequestId != nil
}

func (x *HTTPRequest) ClearMethod() {
	x.Method = nil
}

func (x *HTTPRequest) ClearUrl() {
	x.Url = nil
}

func (x *HTTPRequest) ClearPath() {
	x.Path = nil
}

func (x *HTTPRequest) ClearBody() {
	x.Body = nil
}

func (x *HTTPRequest) ClearContentType() {
	x.ContentType = nil
}

func (x *HTTPRequest) ClearContentLength() {
	x.ContentLength = nil
}

func (x *HTTPRequest) ClearRemoteAddr() {
	x.RemoteAddr = nil
}

func (x *HTTPRequest) ClearUserAgent() {
	x.UserAgent = nil
}

func (x *HTTPRequest) ClearRequestId() {
	x.RequestId = nil
}

type HTTPRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// HTTP method
	Method *string
	// Request URL
	Url *string
	// Request path
	Path *string
	// Query parameters
	QueryParams map[string]string
	// HTTP headers
	Headers map[string]string
	// Request body
	Body []byte
	// Content type
	ContentType *string
	// Content length
	ContentLength *int64
	// Remote address
	RemoteAddr *string
	// User agent
	UserAgent *string
	// Request ID
	RequestId *string
}

func (b0 HTTPRequest_builder) Build() *HTTPRequest {
	m0 := &HTTPRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Method = b.Method
	x.Url = b.Url
	x.Path = b.Path
	x.QueryParams = b.QueryParams
	x.Headers = b.Headers
	x.Body = b.Body
	x.ContentType = b.ContentType
	x.ContentLength = b.ContentLength
	x.RemoteAddr = b.RemoteAddr
	x.UserAgent = b.UserAgent
	x.RequestId = b.RequestId
	return m0
}

// Request context
type RequestContext struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// User information
	User *UserInfo `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	// Session information
	Session *SessionInfo `protobuf:"bytes,2,opt,name=session" json:"session,omitempty"`
	// Request tracing
	Tracing *TracingInfo `protobuf:"bytes,3,opt,name=tracing" json:"tracing,omitempty"`
	// Request attributes
	Attributes map[string]string `protobuf:"bytes,4,rep,name=attributes" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Request timestamp
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestContext) Reset() {
	*x = RequestContext{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestContext) ProtoMessage() {}

func (x *RequestContext) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RequestContext) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RequestContext) GetSession() *SessionInfo {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *RequestContext) GetTracing() *TracingInfo {
	if x != nil {
		return x.Tracing
	}
	return nil
}

func (x *RequestContext) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *RequestContext) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *RequestContext) SetUser(v *UserInfo) {
	x.User = v
}

func (x *RequestContext) SetSession(v *SessionInfo) {
	x.Session = v
}

func (x *RequestContext) SetTracing(v *TracingInfo) {
	x.Tracing = v
}

func (x *RequestContext) SetAttributes(v map[string]string) {
	x.Attributes = v
}

func (x *RequestContext) SetTimestamp(v *timestamppb.Timestamp) {
	x.Timestamp = v
}

func (x *RequestContext) HasUser() bool {
	if x == nil {
		return false
	}
	return x.User != nil
}

func (x *RequestContext) HasSession() bool {
	if x == nil {
		return false
	}
	return x.Session != nil
}

func (x *RequestContext) HasTracing() bool {
	if x == nil {
		return false
	}
	return x.Tracing != nil
}

func (x *RequestContext) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.Timestamp != nil
}

func (x *RequestContext) ClearUser() {
	x.User = nil
}

func (x *RequestContext) ClearSession() {
	x.Session = nil
}

func (x *RequestContext) ClearTracing() {
	x.Tracing = nil
}

func (x *RequestContext) ClearTimestamp() {
	x.Timestamp = nil
}

type RequestContext_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// User information
	User *UserInfo
	// Session information
	Session *SessionInfo
	// Request tracing
	Tracing *TracingInfo
	// Request attributes
	Attributes map[string]string
	// Request timestamp
	Timestamp *timestamppb.Timestamp
}

func (b0 RequestContext_builder) Build() *RequestContext {
	m0 := &RequestContext{}
	b, x := &b0, m0
	_, _ = b, x
	x.User = b.User
	x.Session = b.Session
	x.Tracing = b.Tracing
	x.Attributes = b.Attributes
	x.Timestamp = b.Timestamp
	return m0
}

// User information
type UserInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// User ID
	UserId *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// Username
	Username *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// User roles
	Roles []string `protobuf:"bytes,3,rep,name=roles" json:"roles,omitempty"`
	// User permissions
	Permissions []string `protobuf:"bytes,4,rep,name=permissions" json:"permissions,omitempty"`
	// User attributes
	Attributes    map[string]string `protobuf:"bytes,5,rep,name=attributes" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UserInfo) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *UserInfo) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *UserInfo) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserInfo) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *UserInfo) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *UserInfo) SetUserId(v string) {
	x.UserId = &v
}

func (x *UserInfo) SetUsername(v string) {
	x.Username = &v
}

func (x *UserInfo) SetRoles(v []string) {
	x.Roles = v
}

func (x *UserInfo) SetPermissions(v []string) {
	x.Permissions = v
}

func (x *UserInfo) SetAttributes(v map[string]string) {
	x.Attributes = v
}

func (x *UserInfo) HasUserId() bool {
	if x == nil {
		return false
	}
	return x.UserId != nil
}

func (x *UserInfo) HasUsername() bool {
	if x == nil {
		return false
	}
	return x.Username != nil
}

func (x *UserInfo) ClearUserId() {
	x.UserId = nil
}

func (x *UserInfo) ClearUsername() {
	x.Username = nil
}

type UserInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// User ID
	UserId *string
	// Username
	Username *string
	// User roles
	Roles []string
	// User permissions
	Permissions []string
	// User attributes
	Attributes map[string]string
}

func (b0 UserInfo_builder) Build() *UserInfo {
	m0 := &UserInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.UserId = b.UserId
	x.Username = b.Username
	x.Roles = b.Roles
	x.Permissions = b.Permissions
	x.Attributes = b.Attributes
	return m0
}

// Session information
type SessionInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Session ID
	SessionId *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	// Session data
	Data map[string]string `protobuf:"bytes,2,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Session creation time
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Session expiration time
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SessionInfo) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *SessionInfo) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SessionInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SessionInfo) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *SessionInfo) SetSessionId(v string) {
	x.SessionId = &v
}

func (x *SessionInfo) SetData(v map[string]string) {
	x.Data = v
}

func (x *SessionInfo) SetCreatedAt(v *timestamppb.Timestamp) {
	x.CreatedAt = v
}

func (x *SessionInfo) SetExpiresAt(v *timestamppb.Timestamp) {
	x.ExpiresAt = v
}

func (x *SessionInfo) HasSessionId() bool {
	if x == nil {
		return false
	}
	return x.SessionId != nil
}

func (x *SessionInfo) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.CreatedAt != nil
}

func (x *SessionInfo) HasExpiresAt() bool {
	if x == nil {
		return false
	}
	return x.ExpiresAt != nil
}

func (x *SessionInfo) ClearSessionId() {
	x.SessionId = nil
}

func (x *SessionInfo) ClearCreatedAt() {
	x.CreatedAt = nil
}

func (x *SessionInfo) ClearExpiresAt() {
	x.ExpiresAt = nil
}

type SessionInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session ID
	SessionId *string
	// Session data
	Data map[string]string
	// Session creation time
	CreatedAt *timestamppb.Timestamp
	// Session expiration time
	ExpiresAt *timestamppb.Timestamp
}

func (b0 SessionInfo_builder) Build() *SessionInfo {
	m0 := &SessionInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.SessionId = b.SessionId
	x.Data = b.Data
	x.CreatedAt = b.CreatedAt
	x.ExpiresAt = b.ExpiresAt
	return m0
}

// Tracing information
type TracingInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Trace ID
	TraceId *string `protobuf:"bytes,1,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	// Span ID
	SpanId *string `protobuf:"bytes,2,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	// Parent span ID
	ParentSpanId *string `protobuf:"bytes,3,opt,name=parent_span_id,json=parentSpanId" json:"parent_span_id,omitempty"`
	// Sampling decision
	Sampled *bool `protobuf:"varint,4,opt,name=sampled" json:"sampled,omitempty"`
	// Trace flags
	TraceFlags    *int32 `protobuf:"varint,5,opt,name=trace_flags,json=traceFlags" json:"trace_flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TracingInfo) Reset() {
	*x = TracingInfo{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracingInfo) ProtoMessage() {}

func (x *TracingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TracingInfo) GetTraceId() string {
	if x != nil && x.TraceId != nil {
		return *x.TraceId
	}
	return ""
}

func (x *TracingInfo) GetSpanId() string {
	if x != nil && x.SpanId != nil {
		return *x.SpanId
	}
	return ""
}

func (x *TracingInfo) GetParentSpanId() string {
	if x != nil && x.ParentSpanId != nil {
		return *x.ParentSpanId
	}
	return ""
}

func (x *TracingInfo) GetSampled() bool {
	if x != nil && x.Sampled != nil {
		return *x.Sampled
	}
	return false
}

func (x *TracingInfo) GetTraceFlags() int32 {
	if x != nil && x.TraceFlags != nil {
		return *x.TraceFlags
	}
	return 0
}

func (x *TracingInfo) SetTraceId(v string) {
	x.TraceId = &v
}

func (x *TracingInfo) SetSpanId(v string) {
	x.SpanId = &v
}

func (x *TracingInfo) SetParentSpanId(v string) {
	x.ParentSpanId = &v
}

func (x *TracingInfo) SetSampled(v bool) {
	x.Sampled = &v
}

func (x *TracingInfo) SetTraceFlags(v int32) {
	x.TraceFlags = &v
}

func (x *TracingInfo) HasTraceId() bool {
	if x == nil {
		return false
	}
	return x.TraceId != nil
}

func (x *TracingInfo) HasSpanId() bool {
	if x == nil {
		return false
	}
	return x.SpanId != nil
}

func (x *TracingInfo) HasParentSpanId() bool {
	if x == nil {
		return false
	}
	return x.ParentSpanId != nil
}

func (x *TracingInfo) HasSampled() bool {
	if x == nil {
		return false
	}
	return x.Sampled != nil
}

func (x *TracingInfo) HasTraceFlags() bool {
	if x == nil {
		return false
	}
	return x.TraceFlags != nil
}

func (x *TracingInfo) ClearTraceId() {
	x.TraceId = nil
}

func (x *TracingInfo) ClearSpanId() {
	x.SpanId = nil
}

func (x *TracingInfo) ClearParentSpanId() {
	x.ParentSpanId = nil
}

func (x *TracingInfo) ClearSampled() {
	x.Sampled = nil
}

func (x *TracingInfo) ClearTraceFlags() {
	x.TraceFlags = nil
}

type TracingInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Trace ID
	TraceId *string
	// Span ID
	SpanId *string
	// Parent span ID
	ParentSpanId *string
	// Sampling decision
	Sampled *bool
	// Trace flags
	TraceFlags *int32
}

func (b0 TracingInfo_builder) Build() *TracingInfo {
	m0 := &TracingInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.TraceId = b.TraceId
	x.SpanId = b.SpanId
	x.ParentSpanId = b.ParentSpanId
	x.Sampled = b.Sampled
	x.TraceFlags = b.TraceFlags
	return m0
}

// Handle request response
type HandleRequestResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// HTTP response
	Response *HTTPResponse `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	// Processing time
	ProcessingTime *durationpb.Duration `protobuf:"bytes,2,opt,name=processing_time,json=processingTime" json:"processing_time,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleRequestResponse) Reset() {
	*x = HandleRequestResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRequestResponse) ProtoMessage() {}

func (x *HandleRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HandleRequestResponse) GetResponse() *HTTPResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *HandleRequestResponse) GetProcessingTime() *durationpb.Duration {
	if x != nil {
		return x.ProcessingTime
	}
	return nil
}

func (x *HandleRequestResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *HandleRequestResponse) SetResponse(v *HTTPResponse) {
	x.Response = v
}

func (x *HandleRequestResponse) SetProcessingTime(v *durationpb.Duration) {
	x.ProcessingTime = v
}

func (x *HandleRequestResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *HandleRequestResponse) HasResponse() bool {
	if x == nil {
		return false
	}
	return x.Response != nil
}

func (x *HandleRequestResponse) HasProcessingTime() bool {
	if x == nil {
		return false
	}
	return x.ProcessingTime != nil
}

func (x *HandleRequestResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *HandleRequestResponse) ClearResponse() {
	x.Response = nil
}

func (x *HandleRequestResponse) ClearProcessingTime() {
	x.ProcessingTime = nil
}

func (x *HandleRequestResponse) ClearError() {
	x.Error = nil
}

type HandleRequestResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// HTTP response
	Response *HTTPResponse
	// Processing time
	ProcessingTime *durationpb.Duration
	// Error information
	Error *messages.Error
}

func (b0 HandleRequestResponse_builder) Build() *HandleRequestResponse {
	m0 := &HandleRequestResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Response = b.Response
	x.ProcessingTime = b.ProcessingTime
	x.Error = b.Error
	return m0
}

// HTTP response
type HTTPResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Status code
	StatusCode *int32 `protobuf:"varint,1,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	// Status message
	StatusMessage *string `protobuf:"bytes,2,opt,name=status_message,json=statusMessage" json:"status_message,omitempty"`
	// Response headers
	Headers map[string]string `protobuf:"bytes,3,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Response body
	Body []byte `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
	// Content type
	ContentType *string `protobuf:"bytes,5,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	// Content length
	ContentLength *int64 `protobuf:"varint,6,opt,name=content_length,json=contentLength" json:"content_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPResponse) Reset() {
	*x = HTTPResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPResponse) ProtoMessage() {}

func (x *HTTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HTTPResponse) GetStatusCode() int32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *HTTPResponse) GetStatusMessage() string {
	if x != nil && x.StatusMessage != nil {
		return *x.StatusMessage
	}
	return ""
}

func (x *HTTPResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HTTPResponse) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

func (x *HTTPResponse) GetContentLength() int64 {
	if x != nil && x.ContentLength != nil {
		return *x.ContentLength
	}
	return 0
}

func (x *HTTPResponse) SetStatusCode(v int32) {
	x.StatusCode = &v
}

func (x *HTTPResponse) SetStatusMessage(v string) {
	x.StatusMessage = &v
}

func (x *HTTPResponse) SetHeaders(v map[string]string) {
	x.Headers = v
}

func (x *HTTPResponse) SetBody(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.Body = v
}

func (x *HTTPResponse) SetContentType(v string) {
	x.ContentType = &v
}

func (x *HTTPResponse) SetContentLength(v int64) {
	x.ContentLength = &v
}

func (x *HTTPResponse) HasStatusCode() bool {
	if x == nil {
		return false
	}
	return x.StatusCode != nil
}

func (x *HTTPResponse) HasStatusMessage() bool {
	if x == nil {
		return false
	}
	return x.StatusMessage != nil
}

func (x *HTTPResponse) HasBody() bool {
	if x == nil {
		return false
	}
	return x.Body != nil
}

func (x *HTTPResponse) HasContentType() bool {
	if x == nil {
		return false
	}
	return x.ContentType != nil
}

func (x *HTTPResponse) HasContentLength() bool {
	if x == nil {
		return false
	}
	return x.ContentLength != nil
}

func (x *HTTPResponse) ClearStatusCode() {
	x.StatusCode = nil
}

func (x *HTTPResponse) ClearStatusMessage() {
	x.StatusMessage = nil
}

func (x *HTTPResponse) ClearBody() {
	x.Body = nil
}

func (x *HTTPResponse) ClearContentType() {
	x.ContentType = nil
}

func (x *HTTPResponse) ClearContentLength() {
	x.ContentLength = nil
}

type HTTPResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Status code
	StatusCode *int32
	// Status message
	StatusMessage *string
	// Response headers
	Headers map[string]string
	// Response body
	Body []byte
	// Content type
	ContentType *string
	// Content length
	ContentLength *int64
}

func (b0 HTTPResponse_builder) Build() *HTTPResponse {
	m0 := &HTTPResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.StatusCode = b.StatusCode
	x.StatusMessage = b.StatusMessage
	x.Headers = b.Headers
	x.Body = b.Body
	x.ContentType = b.ContentType
	x.ContentLength = b.ContentLength
	return m0
}

// Stream server events request
type StreamServerEventsRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Event types to stream
	EventTypes []ServerEventType `protobuf:"varint,2,rep,packed,name=event_types,json=eventTypes,enum=gcommon.v1.web.ServerEventType" json:"event_types,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamServerEventsRequest) Reset() {
	*x = StreamServerEventsRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamServerEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServerEventsRequest) ProtoMessage() {}

func (x *StreamServerEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamServerEventsRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *StreamServerEventsRequest) GetEventTypes() []ServerEventType {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *StreamServerEventsRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StreamServerEventsRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *StreamServerEventsRequest) SetEventTypes(v []ServerEventType) {
	x.EventTypes = v
}

func (x *StreamServerEventsRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *StreamServerEventsRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *StreamServerEventsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *StreamServerEventsRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *StreamServerEventsRequest) ClearMetadata() {
	x.Metadata = nil
}

type StreamServerEventsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Event types to stream
	EventTypes []ServerEventType
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 StreamServerEventsRequest_builder) Build() *StreamServerEventsRequest {
	m0 := &StreamServerEventsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.EventTypes = b.EventTypes
	x.Metadata = b.Metadata
	return m0
}

// Server event
type ServerEvent struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Event ID
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	// Event type
	EventType *ServerEventType `protobuf:"varint,2,opt,name=event_type,json=eventType,enum=gcommon.v1.web.ServerEventType" json:"event_type,omitempty"`
	// Event timestamp
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
	// Server ID
	ServerId *string `protobuf:"bytes,4,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Event data
	EventData *anypb.Any `protobuf:"bytes,5,opt,name=event_data,json=eventData" json:"event_data,omitempty"`
	// Event attributes
	Attributes    map[string]string `protobuf:"bytes,6,rep,name=attributes" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerEvent) Reset() {
	*x = ServerEvent{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerEvent) ProtoMessage() {}

func (x *ServerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServerEvent) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *ServerEvent) GetEventType() ServerEventType {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return ServerEventType_SERVER_EVENT_TYPE_UNSPECIFIED
}

func (x *ServerEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ServerEvent) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *ServerEvent) GetEventData() *anypb.Any {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *ServerEvent) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ServerEvent) SetEventId(v string) {
	x.EventId = &v
}

func (x *ServerEvent) SetEventType(v ServerEventType) {
	x.EventType = &v
}

func (x *ServerEvent) SetTimestamp(v *timestamppb.Timestamp) {
	x.Timestamp = v
}

func (x *ServerEvent) SetServerId(v string) {
	x.ServerId = &v
}

func (x *ServerEvent) SetEventData(v *anypb.Any) {
	x.EventData = v
}

func (x *ServerEvent) SetAttributes(v map[string]string) {
	x.Attributes = v
}

func (x *ServerEvent) HasEventId() bool {
	if x == nil {
		return false
	}
	return x.EventId != nil
}

func (x *ServerEvent) HasEventType() bool {
	if x == nil {
		return false
	}
	return x.EventType != nil
}

func (x *ServerEvent) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.Timestamp != nil
}

func (x *ServerEvent) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *ServerEvent) HasEventData() bool {
	if x == nil {
		return false
	}
	return x.EventData != nil
}

func (x *ServerEvent) ClearEventId() {
	x.EventId = nil
}

func (x *ServerEvent) ClearEventType() {
	x.EventType = nil
}

func (x *ServerEvent) ClearTimestamp() {
	x.Timestamp = nil
}

func (x *ServerEvent) ClearServerId() {
	x.ServerId = nil
}

func (x *ServerEvent) ClearEventData() {
	x.EventData = nil
}

type ServerEvent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Event ID
	EventId *string
	// Event type
	EventType *ServerEventType
	// Event timestamp
	Timestamp *timestamppb.Timestamp
	// Server ID
	ServerId *string
	// Event data
	EventData *anypb.Any
	// Event attributes
	Attributes map[string]string
}

func (b0 ServerEvent_builder) Build() *ServerEvent {
	m0 := &ServerEvent{}
	b, x := &b0, m0
	_, _ = b, x
	x.EventId = b.EventId
	x.EventType = b.EventType
	x.Timestamp = b.Timestamp
	x.ServerId = b.ServerId
	x.EventData = b.EventData
	x.Attributes = b.Attributes
	return m0
}

// Admin service messages
type ConfigureGlobalRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Global configuration
	Config *GlobalConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureGlobalRequest) Reset() {
	*x = ConfigureGlobalRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureGlobalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureGlobalRequest) ProtoMessage() {}

func (x *ConfigureGlobalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConfigureGlobalRequest) GetConfig() *GlobalConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigureGlobalRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ConfigureGlobalRequest) SetConfig(v *GlobalConfig) {
	x.Config = v
}

func (x *ConfigureGlobalRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *ConfigureGlobalRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *ConfigureGlobalRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *ConfigureGlobalRequest) ClearConfig() {
	x.Config = nil
}

func (x *ConfigureGlobalRequest) ClearMetadata() {
	x.Metadata = nil
}

type ConfigureGlobalRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Global configuration
	Config *GlobalConfig
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 ConfigureGlobalRequest_builder) Build() *ConfigureGlobalRequest {
	m0 := &ConfigureGlobalRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Config = b.Config
	x.Metadata = b.Metadata
	return m0
}

// Global configuration
type GlobalConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Default server configuration
	DefaultServerConfig *ServerConfig `protobuf:"bytes,1,opt,name=default_server_config,json=defaultServerConfig" json:"default_server_config,omitempty"`
	// Global security settings
	Security *GlobalSecurityConfig `protobuf:"bytes,2,opt,name=security" json:"security,omitempty"`
	// Global logging settings
	Logging *GlobalLoggingConfig `protobuf:"bytes,3,opt,name=logging" json:"logging,omitempty"`
	// Global monitoring settings
	Monitoring *GlobalMonitoringConfig `protobuf:"bytes,4,opt,name=monitoring" json:"monitoring,omitempty"`
	// Resource limits
	ResourceLimits *ResourceLimits `protobuf:"bytes,5,opt,name=resource_limits,json=resourceLimits" json:"resource_limits,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GlobalConfig) Reset() {
	*x = GlobalConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalConfig) ProtoMessage() {}

func (x *GlobalConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GlobalConfig) GetDefaultServerConfig() *ServerConfig {
	if x != nil {
		return x.DefaultServerConfig
	}
	return nil
}

func (x *GlobalConfig) GetSecurity() *GlobalSecurityConfig {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *GlobalConfig) GetLogging() *GlobalLoggingConfig {
	if x != nil {
		return x.Logging
	}
	return nil
}

func (x *GlobalConfig) GetMonitoring() *GlobalMonitoringConfig {
	if x != nil {
		return x.Monitoring
	}
	return nil
}

func (x *GlobalConfig) GetResourceLimits() *ResourceLimits {
	if x != nil {
		return x.ResourceLimits
	}
	return nil
}

func (x *GlobalConfig) SetDefaultServerConfig(v *ServerConfig) {
	x.DefaultServerConfig = v
}

func (x *GlobalConfig) SetSecurity(v *GlobalSecurityConfig) {
	x.Security = v
}

func (x *GlobalConfig) SetLogging(v *GlobalLoggingConfig) {
	x.Logging = v
}

func (x *GlobalConfig) SetMonitoring(v *GlobalMonitoringConfig) {
	x.Monitoring = v
}

func (x *GlobalConfig) SetResourceLimits(v *ResourceLimits) {
	x.ResourceLimits = v
}

func (x *GlobalConfig) HasDefaultServerConfig() bool {
	if x == nil {
		return false
	}
	return x.DefaultServerConfig != nil
}

func (x *GlobalConfig) HasSecurity() bool {
	if x == nil {
		return false
	}
	return x.Security != nil
}

func (x *GlobalConfig) HasLogging() bool {
	if x == nil {
		return false
	}
	return x.Logging != nil
}

func (x *GlobalConfig) HasMonitoring() bool {
	if x == nil {
		return false
	}
	return x.Monitoring != nil
}

func (x *GlobalConfig) HasResourceLimits() bool {
	if x == nil {
		return false
	}
	return x.ResourceLimits != nil
}

func (x *GlobalConfig) ClearDefaultServerConfig() {
	x.DefaultServerConfig = nil
}

func (x *GlobalConfig) ClearSecurity() {
	x.Security = nil
}

func (x *GlobalConfig) ClearLogging() {
	x.Logging = nil
}

func (x *GlobalConfig) ClearMonitoring() {
	x.Monitoring = nil
}

func (x *GlobalConfig) ClearResourceLimits() {
	x.ResourceLimits = nil
}

type GlobalConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Default server configuration
	DefaultServerConfig *ServerConfig
	// Global security settings
	Security *GlobalSecurityConfig
	// Global logging settings
	Logging *GlobalLoggingConfig
	// Global monitoring settings
	Monitoring *GlobalMonitoringConfig
	// Resource limits
	ResourceLimits *ResourceLimits
}

func (b0 GlobalConfig_builder) Build() *GlobalConfig {
	m0 := &GlobalConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.DefaultServerConfig = b.DefaultServerConfig
	x.Security = b.Security
	x.Logging = b.Logging
	x.Monitoring = b.Monitoring
	x.ResourceLimits = b.ResourceLimits
	return m0
}

// Global security configuration
type GlobalSecurityConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Default TLS settings
	DefaultTls *TLSConfig `protobuf:"bytes,1,opt,name=default_tls,json=defaultTls" json:"default_tls,omitempty"`
	// Security policy
	SecurityPolicy *SecurityPolicy `protobuf:"bytes,2,opt,name=security_policy,json=securityPolicy" json:"security_policy,omitempty"`
	// Certificate management
	CertificateManagement *CertificateManagement `protobuf:"bytes,3,opt,name=certificate_management,json=certificateManagement" json:"certificate_management,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GlobalSecurityConfig) Reset() {
	*x = GlobalSecurityConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalSecurityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSecurityConfig) ProtoMessage() {}

func (x *GlobalSecurityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GlobalSecurityConfig) GetDefaultTls() *TLSConfig {
	if x != nil {
		return x.DefaultTls
	}
	return nil
}

func (x *GlobalSecurityConfig) GetSecurityPolicy() *SecurityPolicy {
	if x != nil {
		return x.SecurityPolicy
	}
	return nil
}

func (x *GlobalSecurityConfig) GetCertificateManagement() *CertificateManagement {
	if x != nil {
		return x.CertificateManagement
	}
	return nil
}

func (x *GlobalSecurityConfig) SetDefaultTls(v *TLSConfig) {
	x.DefaultTls = v
}

func (x *GlobalSecurityConfig) SetSecurityPolicy(v *SecurityPolicy) {
	x.SecurityPolicy = v
}

func (x *GlobalSecurityConfig) SetCertificateManagement(v *CertificateManagement) {
	x.CertificateManagement = v
}

func (x *GlobalSecurityConfig) HasDefaultTls() bool {
	if x == nil {
		return false
	}
	return x.DefaultTls != nil
}

func (x *GlobalSecurityConfig) HasSecurityPolicy() bool {
	if x == nil {
		return false
	}
	return x.SecurityPolicy != nil
}

func (x *GlobalSecurityConfig) HasCertificateManagement() bool {
	if x == nil {
		return false
	}
	return x.CertificateManagement != nil
}

func (x *GlobalSecurityConfig) ClearDefaultTls() {
	x.DefaultTls = nil
}

func (x *GlobalSecurityConfig) ClearSecurityPolicy() {
	x.SecurityPolicy = nil
}

func (x *GlobalSecurityConfig) ClearCertificateManagement() {
	x.CertificateManagement = nil
}

type GlobalSecurityConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Default TLS settings
	DefaultTls *TLSConfig
	// Security policy
	SecurityPolicy *SecurityPolicy
	// Certificate management
	CertificateManagement *CertificateManagement
}

func (b0 GlobalSecurityConfig_builder) Build() *GlobalSecurityConfig {
	m0 := &GlobalSecurityConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.DefaultTls = b.DefaultTls
	x.SecurityPolicy = b.SecurityPolicy
	x.CertificateManagement = b.CertificateManagement
	return m0
}

// Security policy
type SecurityPolicy struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Minimum TLS version
	MinTlsVersion *string `protobuf:"bytes,1,opt,name=min_tls_version,json=minTlsVersion" json:"min_tls_version,omitempty"`
	// Required cipher suites
	RequiredCipherSuites []string `protobuf:"bytes,2,rep,name=required_cipher_suites,json=requiredCipherSuites" json:"required_cipher_suites,omitempty"`
	// Security headers enforcement
	EnforceSecurityHeaders *bool `protobuf:"varint,3,opt,name=enforce_security_headers,json=enforceSecurityHeaders" json:"enforce_security_headers,omitempty"`
	// Content type validation
	ValidateContentTypes *bool `protobuf:"varint,4,opt,name=validate_content_types,json=validateContentTypes" json:"validate_content_types,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SecurityPolicy) Reset() {
	*x = SecurityPolicy{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityPolicy) ProtoMessage() {}

func (x *SecurityPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SecurityPolicy) GetMinTlsVersion() string {
	if x != nil && x.MinTlsVersion != nil {
		return *x.MinTlsVersion
	}
	return ""
}

func (x *SecurityPolicy) GetRequiredCipherSuites() []string {
	if x != nil {
		return x.RequiredCipherSuites
	}
	return nil
}

func (x *SecurityPolicy) GetEnforceSecurityHeaders() bool {
	if x != nil && x.EnforceSecurityHeaders != nil {
		return *x.EnforceSecurityHeaders
	}
	return false
}

func (x *SecurityPolicy) GetValidateContentTypes() bool {
	if x != nil && x.ValidateContentTypes != nil {
		return *x.ValidateContentTypes
	}
	return false
}

func (x *SecurityPolicy) SetMinTlsVersion(v string) {
	x.MinTlsVersion = &v
}

func (x *SecurityPolicy) SetRequiredCipherSuites(v []string) {
	x.RequiredCipherSuites = v
}

func (x *SecurityPolicy) SetEnforceSecurityHeaders(v bool) {
	x.EnforceSecurityHeaders = &v
}

func (x *SecurityPolicy) SetValidateContentTypes(v bool) {
	x.ValidateContentTypes = &v
}

func (x *SecurityPolicy) HasMinTlsVersion() bool {
	if x == nil {
		return false
	}
	return x.MinTlsVersion != nil
}

func (x *SecurityPolicy) HasEnforceSecurityHeaders() bool {
	if x == nil {
		return false
	}
	return x.EnforceSecurityHeaders != nil
}

func (x *SecurityPolicy) HasValidateContentTypes() bool {
	if x == nil {
		return false
	}
	return x.ValidateContentTypes != nil
}

func (x *SecurityPolicy) ClearMinTlsVersion() {
	x.MinTlsVersion = nil
}

func (x *SecurityPolicy) ClearEnforceSecurityHeaders() {
	x.EnforceSecurityHeaders = nil
}

func (x *SecurityPolicy) ClearValidateContentTypes() {
	x.ValidateContentTypes = nil
}

type SecurityPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Minimum TLS version
	MinTlsVersion *string
	// Required cipher suites
	RequiredCipherSuites []string
	// Security headers enforcement
	EnforceSecurityHeaders *bool
	// Content type validation
	ValidateContentTypes *bool
}

func (b0 SecurityPolicy_builder) Build() *SecurityPolicy {
	m0 := &SecurityPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	x.MinTlsVersion = b.MinTlsVersion
	x.RequiredCipherSuites = b.RequiredCipherSuites
	x.EnforceSecurityHeaders = b.EnforceSecurityHeaders
	x.ValidateContentTypes = b.ValidateContentTypes
	return m0
}

// Certificate management
type CertificateManagement struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Auto-renewal enabled
	AutoRenewalEnabled *bool `protobuf:"varint,1,opt,name=auto_renewal_enabled,json=autoRenewalEnabled" json:"auto_renewal_enabled,omitempty"`
	// Certificate authority
	CertificateAuthority *string `protobuf:"bytes,2,opt,name=certificate_authority,json=certificateAuthority" json:"certificate_authority,omitempty"`
	// Renewal threshold
	RenewalThreshold *durationpb.Duration `protobuf:"bytes,3,opt,name=renewal_threshold,json=renewalThreshold" json:"renewal_threshold,omitempty"`
	// Certificate storage
	CertificateStorage *string `protobuf:"bytes,4,opt,name=certificate_storage,json=certificateStorage" json:"certificate_storage,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CertificateManagement) Reset() {
	*x = CertificateManagement{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateManagement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateManagement) ProtoMessage() {}

func (x *CertificateManagement) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CertificateManagement) GetAutoRenewalEnabled() bool {
	if x != nil && x.AutoRenewalEnabled != nil {
		return *x.AutoRenewalEnabled
	}
	return false
}

func (x *CertificateManagement) GetCertificateAuthority() string {
	if x != nil && x.CertificateAuthority != nil {
		return *x.CertificateAuthority
	}
	return ""
}

func (x *CertificateManagement) GetRenewalThreshold() *durationpb.Duration {
	if x != nil {
		return x.RenewalThreshold
	}
	return nil
}

func (x *CertificateManagement) GetCertificateStorage() string {
	if x != nil && x.CertificateStorage != nil {
		return *x.CertificateStorage
	}
	return ""
}

func (x *CertificateManagement) SetAutoRenewalEnabled(v bool) {
	x.AutoRenewalEnabled = &v
}

func (x *CertificateManagement) SetCertificateAuthority(v string) {
	x.CertificateAuthority = &v
}

func (x *CertificateManagement) SetRenewalThreshold(v *durationpb.Duration) {
	x.RenewalThreshold = v
}

func (x *CertificateManagement) SetCertificateStorage(v string) {
	x.CertificateStorage = &v
}

func (x *CertificateManagement) HasAutoRenewalEnabled() bool {
	if x == nil {
		return false
	}
	return x.AutoRenewalEnabled != nil
}

func (x *CertificateManagement) HasCertificateAuthority() bool {
	if x == nil {
		return false
	}
	return x.CertificateAuthority != nil
}

func (x *CertificateManagement) HasRenewalThreshold() bool {
	if x == nil {
		return false
	}
	return x.RenewalThreshold != nil
}

func (x *CertificateManagement) HasCertificateStorage() bool {
	if x == nil {
		return false
	}
	return x.CertificateStorage != nil
}

func (x *CertificateManagement) ClearAutoRenewalEnabled() {
	x.AutoRenewalEnabled = nil
}

func (x *CertificateManagement) ClearCertificateAuthority() {
	x.CertificateAuthority = nil
}

func (x *CertificateManagement) ClearRenewalThreshold() {
	x.RenewalThreshold = nil
}

func (x *CertificateManagement) ClearCertificateStorage() {
	x.CertificateStorage = nil
}

type CertificateManagement_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Auto-renewal enabled
	AutoRenewalEnabled *bool
	// Certificate authority
	CertificateAuthority *string
	// Renewal threshold
	RenewalThreshold *durationpb.Duration
	// Certificate storage
	CertificateStorage *string
}

func (b0 CertificateManagement_builder) Build() *CertificateManagement {
	m0 := &CertificateManagement{}
	b, x := &b0, m0
	_, _ = b, x
	x.AutoRenewalEnabled = b.AutoRenewalEnabled
	x.CertificateAuthority = b.CertificateAuthority
	x.RenewalThreshold = b.RenewalThreshold
	x.CertificateStorage = b.CertificateStorage
	return m0
}

// Global logging configuration
type GlobalLoggingConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Default log level
	DefaultLogLevel *string `protobuf:"bytes,1,opt,name=default_log_level,json=defaultLogLevel" json:"default_log_level,omitempty"`
	// Access log format
	AccessLogFormat *string `protobuf:"bytes,2,opt,name=access_log_format,json=accessLogFormat" json:"access_log_format,omitempty"`
	// Error log format
	ErrorLogFormat *string `protobuf:"bytes,3,opt,name=error_log_format,json=errorLogFormat" json:"error_log_format,omitempty"`
	// Log rotation
	LogRotation   *LogRotationConfig `protobuf:"bytes,4,opt,name=log_rotation,json=logRotation" json:"log_rotation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalLoggingConfig) Reset() {
	*x = GlobalLoggingConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalLoggingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalLoggingConfig) ProtoMessage() {}

func (x *GlobalLoggingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GlobalLoggingConfig) GetDefaultLogLevel() string {
	if x != nil && x.DefaultLogLevel != nil {
		return *x.DefaultLogLevel
	}
	return ""
}

func (x *GlobalLoggingConfig) GetAccessLogFormat() string {
	if x != nil && x.AccessLogFormat != nil {
		return *x.AccessLogFormat
	}
	return ""
}

func (x *GlobalLoggingConfig) GetErrorLogFormat() string {
	if x != nil && x.ErrorLogFormat != nil {
		return *x.ErrorLogFormat
	}
	return ""
}

func (x *GlobalLoggingConfig) GetLogRotation() *LogRotationConfig {
	if x != nil {
		return x.LogRotation
	}
	return nil
}

func (x *GlobalLoggingConfig) SetDefaultLogLevel(v string) {
	x.DefaultLogLevel = &v
}

func (x *GlobalLoggingConfig) SetAccessLogFormat(v string) {
	x.AccessLogFormat = &v
}

func (x *GlobalLoggingConfig) SetErrorLogFormat(v string) {
	x.ErrorLogFormat = &v
}

func (x *GlobalLoggingConfig) SetLogRotation(v *LogRotationConfig) {
	x.LogRotation = v
}

func (x *GlobalLoggingConfig) HasDefaultLogLevel() bool {
	if x == nil {
		return false
	}
	return x.DefaultLogLevel != nil
}

func (x *GlobalLoggingConfig) HasAccessLogFormat() bool {
	if x == nil {
		return false
	}
	return x.AccessLogFormat != nil
}

func (x *GlobalLoggingConfig) HasErrorLogFormat() bool {
	if x == nil {
		return false
	}
	return x.ErrorLogFormat != nil
}

func (x *GlobalLoggingConfig) HasLogRotation() bool {
	if x == nil {
		return false
	}
	return x.LogRotation != nil
}

func (x *GlobalLoggingConfig) ClearDefaultLogLevel() {
	x.DefaultLogLevel = nil
}

func (x *GlobalLoggingConfig) ClearAccessLogFormat() {
	x.AccessLogFormat = nil
}

func (x *GlobalLoggingConfig) ClearErrorLogFormat() {
	x.ErrorLogFormat = nil
}

func (x *GlobalLoggingConfig) ClearLogRotation() {
	x.LogRotation = nil
}

type GlobalLoggingConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Default log level
	DefaultLogLevel *string
	// Access log format
	AccessLogFormat *string
	// Error log format
	ErrorLogFormat *string
	// Log rotation
	LogRotation *LogRotationConfig
}

func (b0 GlobalLoggingConfig_builder) Build() *GlobalLoggingConfig {
	m0 := &GlobalLoggingConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.DefaultLogLevel = b.DefaultLogLevel
	x.AccessLogFormat = b.AccessLogFormat
	x.ErrorLogFormat = b.ErrorLogFormat
	x.LogRotation = b.LogRotation
	return m0
}

// Log rotation configuration
type LogRotationConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Rotation size
	RotationSizeBytes *int64 `protobuf:"varint,1,opt,name=rotation_size_bytes,json=rotationSizeBytes" json:"rotation_size_bytes,omitempty"`
	// Rotation interval
	RotationInterval *durationpb.Duration `protobuf:"bytes,2,opt,name=rotation_interval,json=rotationInterval" json:"rotation_interval,omitempty"`
	// Keep files
	KeepFiles *int32 `protobuf:"varint,3,opt,name=keep_files,json=keepFiles" json:"keep_files,omitempty"`
	// Compression enabled
	CompressionEnabled *bool `protobuf:"varint,4,opt,name=compression_enabled,json=compressionEnabled" json:"compression_enabled,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LogRotationConfig) Reset() {
	*x = LogRotationConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRotationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRotationConfig) ProtoMessage() {}

func (x *LogRotationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogRotationConfig) GetRotationSizeBytes() int64 {
	if x != nil && x.RotationSizeBytes != nil {
		return *x.RotationSizeBytes
	}
	return 0
}

func (x *LogRotationConfig) GetRotationInterval() *durationpb.Duration {
	if x != nil {
		return x.RotationInterval
	}
	return nil
}

func (x *LogRotationConfig) GetKeepFiles() int32 {
	if x != nil && x.KeepFiles != nil {
		return *x.KeepFiles
	}
	return 0
}

func (x *LogRotationConfig) GetCompressionEnabled() bool {
	if x != nil && x.CompressionEnabled != nil {
		return *x.CompressionEnabled
	}
	return false
}

func (x *LogRotationConfig) SetRotationSizeBytes(v int64) {
	x.RotationSizeBytes = &v
}

func (x *LogRotationConfig) SetRotationInterval(v *durationpb.Duration) {
	x.RotationInterval = v
}

func (x *LogRotationConfig) SetKeepFiles(v int32) {
	x.KeepFiles = &v
}

func (x *LogRotationConfig) SetCompressionEnabled(v bool) {
	x.CompressionEnabled = &v
}

func (x *LogRotationConfig) HasRotationSizeBytes() bool {
	if x == nil {
		return false
	}
	return x.RotationSizeBytes != nil
}

func (x *LogRotationConfig) HasRotationInterval() bool {
	if x == nil {
		return false
	}
	return x.RotationInterval != nil
}

func (x *LogRotationConfig) HasKeepFiles() bool {
	if x == nil {
		return false
	}
	return x.KeepFiles != nil
}

func (x *LogRotationConfig) HasCompressionEnabled() bool {
	if x == nil {
		return false
	}
	return x.CompressionEnabled != nil
}

func (x *LogRotationConfig) ClearRotationSizeBytes() {
	x.RotationSizeBytes = nil
}

func (x *LogRotationConfig) ClearRotationInterval() {
	x.RotationInterval = nil
}

func (x *LogRotationConfig) ClearKeepFiles() {
	x.KeepFiles = nil
}

func (x *LogRotationConfig) ClearCompressionEnabled() {
	x.CompressionEnabled = nil
}

type LogRotationConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Rotation size
	RotationSizeBytes *int64
	// Rotation interval
	RotationInterval *durationpb.Duration
	// Keep files
	KeepFiles *int32
	// Compression enabled
	CompressionEnabled *bool
}

func (b0 LogRotationConfig_builder) Build() *LogRotationConfig {
	m0 := &LogRotationConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.RotationSizeBytes = b.RotationSizeBytes
	x.RotationInterval = b.RotationInterval
	x.KeepFiles = b.KeepFiles
	x.CompressionEnabled = b.CompressionEnabled
	return m0
}

// Global monitoring configuration
type GlobalMonitoringConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Metrics collection interval
	MetricsInterval *durationpb.Duration `protobuf:"bytes,1,opt,name=metrics_interval,json=metricsInterval" json:"metrics_interval,omitempty"`
	// Health check interval
	HealthCheckInterval *durationpb.Duration `protobuf:"bytes,2,opt,name=health_check_interval,json=healthCheckInterval" json:"health_check_interval,omitempty"`
	// Performance monitoring
	PerformanceMonitoringEnabled *bool `protobuf:"varint,3,opt,name=performance_monitoring_enabled,json=performanceMonitoringEnabled" json:"performance_monitoring_enabled,omitempty"`
	// Distributed tracing
	DistributedTracingEnabled *bool `protobuf:"varint,4,opt,name=distributed_tracing_enabled,json=distributedTracingEnabled" json:"distributed_tracing_enabled,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GlobalMonitoringConfig) Reset() {
	*x = GlobalMonitoringConfig{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalMonitoringConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalMonitoringConfig) ProtoMessage() {}

func (x *GlobalMonitoringConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GlobalMonitoringConfig) GetMetricsInterval() *durationpb.Duration {
	if x != nil {
		return x.MetricsInterval
	}
	return nil
}

func (x *GlobalMonitoringConfig) GetHealthCheckInterval() *durationpb.Duration {
	if x != nil {
		return x.HealthCheckInterval
	}
	return nil
}

func (x *GlobalMonitoringConfig) GetPerformanceMonitoringEnabled() bool {
	if x != nil && x.PerformanceMonitoringEnabled != nil {
		return *x.PerformanceMonitoringEnabled
	}
	return false
}

func (x *GlobalMonitoringConfig) GetDistributedTracingEnabled() bool {
	if x != nil && x.DistributedTracingEnabled != nil {
		return *x.DistributedTracingEnabled
	}
	return false
}

func (x *GlobalMonitoringConfig) SetMetricsInterval(v *durationpb.Duration) {
	x.MetricsInterval = v
}

func (x *GlobalMonitoringConfig) SetHealthCheckInterval(v *durationpb.Duration) {
	x.HealthCheckInterval = v
}

func (x *GlobalMonitoringConfig) SetPerformanceMonitoringEnabled(v bool) {
	x.PerformanceMonitoringEnabled = &v
}

func (x *GlobalMonitoringConfig) SetDistributedTracingEnabled(v bool) {
	x.DistributedTracingEnabled = &v
}

func (x *GlobalMonitoringConfig) HasMetricsInterval() bool {
	if x == nil {
		return false
	}
	return x.MetricsInterval != nil
}

func (x *GlobalMonitoringConfig) HasHealthCheckInterval() bool {
	if x == nil {
		return false
	}
	return x.HealthCheckInterval != nil
}

func (x *GlobalMonitoringConfig) HasPerformanceMonitoringEnabled() bool {
	if x == nil {
		return false
	}
	return x.PerformanceMonitoringEnabled != nil
}

func (x *GlobalMonitoringConfig) HasDistributedTracingEnabled() bool {
	if x == nil {
		return false
	}
	return x.DistributedTracingEnabled != nil
}

func (x *GlobalMonitoringConfig) ClearMetricsInterval() {
	x.MetricsInterval = nil
}

func (x *GlobalMonitoringConfig) ClearHealthCheckInterval() {
	x.HealthCheckInterval = nil
}

func (x *GlobalMonitoringConfig) ClearPerformanceMonitoringEnabled() {
	x.PerformanceMonitoringEnabled = nil
}

func (x *GlobalMonitoringConfig) ClearDistributedTracingEnabled() {
	x.DistributedTracingEnabled = nil
}

type GlobalMonitoringConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Metrics collection interval
	MetricsInterval *durationpb.Duration
	// Health check interval
	HealthCheckInterval *durationpb.Duration
	// Performance monitoring
	PerformanceMonitoringEnabled *bool
	// Distributed tracing
	DistributedTracingEnabled *bool
}

func (b0 GlobalMonitoringConfig_builder) Build() *GlobalMonitoringConfig {
	m0 := &GlobalMonitoringConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.MetricsInterval = b.MetricsInterval
	x.HealthCheckInterval = b.HealthCheckInterval
	x.PerformanceMonitoringEnabled = b.PerformanceMonitoringEnabled
	x.DistributedTracingEnabled = b.DistributedTracingEnabled
	return m0
}

// Resource limits
type ResourceLimits struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Maximum servers
	MaxServers *int32 `protobuf:"varint,1,opt,name=max_servers,json=maxServers" json:"max_servers,omitempty"`
	// Maximum routes per server
	MaxRoutesPerServer *int32 `protobuf:"varint,2,opt,name=max_routes_per_server,json=maxRoutesPerServer" json:"max_routes_per_server,omitempty"`
	// Maximum connections per server
	MaxConnectionsPerServer *int32 `protobuf:"varint,3,opt,name=max_connections_per_server,json=maxConnectionsPerServer" json:"max_connections_per_server,omitempty"`
	// Memory limit per server
	MemoryLimitPerServerBytes *int64 `protobuf:"varint,4,opt,name=memory_limit_per_server_bytes,json=memoryLimitPerServerBytes" json:"memory_limit_per_server_bytes,omitempty"`
	// CPU limit per server
	CpuLimitPerServerCores *float64 `protobuf:"fixed64,5,opt,name=cpu_limit_per_server_cores,json=cpuLimitPerServerCores" json:"cpu_limit_per_server_cores,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ResourceLimits) Reset() {
	*x = ResourceLimits{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimits) ProtoMessage() {}

func (x *ResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResourceLimits) GetMaxServers() int32 {
	if x != nil && x.MaxServers != nil {
		return *x.MaxServers
	}
	return 0
}

func (x *ResourceLimits) GetMaxRoutesPerServer() int32 {
	if x != nil && x.MaxRoutesPerServer != nil {
		return *x.MaxRoutesPerServer
	}
	return 0
}

func (x *ResourceLimits) GetMaxConnectionsPerServer() int32 {
	if x != nil && x.MaxConnectionsPerServer != nil {
		return *x.MaxConnectionsPerServer
	}
	return 0
}

func (x *ResourceLimits) GetMemoryLimitPerServerBytes() int64 {
	if x != nil && x.MemoryLimitPerServerBytes != nil {
		return *x.MemoryLimitPerServerBytes
	}
	return 0
}

func (x *ResourceLimits) GetCpuLimitPerServerCores() float64 {
	if x != nil && x.CpuLimitPerServerCores != nil {
		return *x.CpuLimitPerServerCores
	}
	return 0
}

func (x *ResourceLimits) SetMaxServers(v int32) {
	x.MaxServers = &v
}

func (x *ResourceLimits) SetMaxRoutesPerServer(v int32) {
	x.MaxRoutesPerServer = &v
}

func (x *ResourceLimits) SetMaxConnectionsPerServer(v int32) {
	x.MaxConnectionsPerServer = &v
}

func (x *ResourceLimits) SetMemoryLimitPerServerBytes(v int64) {
	x.MemoryLimitPerServerBytes = &v
}

func (x *ResourceLimits) SetCpuLimitPerServerCores(v float64) {
	x.CpuLimitPerServerCores = &v
}

func (x *ResourceLimits) HasMaxServers() bool {
	if x == nil {
		return false
	}
	return x.MaxServers != nil
}

func (x *ResourceLimits) HasMaxRoutesPerServer() bool {
	if x == nil {
		return false
	}
	return x.MaxRoutesPerServer != nil
}

func (x *ResourceLimits) HasMaxConnectionsPerServer() bool {
	if x == nil {
		return false
	}
	return x.MaxConnectionsPerServer != nil
}

func (x *ResourceLimits) HasMemoryLimitPerServerBytes() bool {
	if x == nil {
		return false
	}
	return x.MemoryLimitPerServerBytes != nil
}

func (x *ResourceLimits) HasCpuLimitPerServerCores() bool {
	if x == nil {
		return false
	}
	return x.CpuLimitPerServerCores != nil
}

func (x *ResourceLimits) ClearMaxServers() {
	x.MaxServers = nil
}

func (x *ResourceLimits) ClearMaxRoutesPerServer() {
	x.MaxRoutesPerServer = nil
}

func (x *ResourceLimits) ClearMaxConnectionsPerServer() {
	x.MaxConnectionsPerServer = nil
}

func (x *ResourceLimits) ClearMemoryLimitPerServerBytes() {
	x.MemoryLimitPerServerBytes = nil
}

func (x *ResourceLimits) ClearCpuLimitPerServerCores() {
	x.CpuLimitPerServerCores = nil
}

type ResourceLimits_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum servers
	MaxServers *int32
	// Maximum routes per server
	MaxRoutesPerServer *int32
	// Maximum connections per server
	MaxConnectionsPerServer *int32
	// Memory limit per server
	MemoryLimitPerServerBytes *int64
	// CPU limit per server
	CpuLimitPerServerCores *float64
}

func (b0 ResourceLimits_builder) Build() *ResourceLimits {
	m0 := &ResourceLimits{}
	b, x := &b0, m0
	_, _ = b, x
	x.MaxServers = b.MaxServers
	x.MaxRoutesPerServer = b.MaxRoutesPerServer
	x.MaxConnectionsPerServer = b.MaxConnectionsPerServer
	x.MemoryLimitPerServerBytes = b.MemoryLimitPerServerBytes
	x.CpuLimitPerServerCores = b.CpuLimitPerServerCores
	return m0
}

// Configure global response
type ConfigureGlobalResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Applied configuration
	Config *GlobalConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureGlobalResponse) Reset() {
	*x = ConfigureGlobalResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureGlobalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureGlobalResponse) ProtoMessage() {}

func (x *ConfigureGlobalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConfigureGlobalResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ConfigureGlobalResponse) GetConfig() *GlobalConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigureGlobalResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ConfigureGlobalResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *ConfigureGlobalResponse) SetConfig(v *GlobalConfig) {
	x.Config = v
}

func (x *ConfigureGlobalResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *ConfigureGlobalResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *ConfigureGlobalResponse) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *ConfigureGlobalResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *ConfigureGlobalResponse) ClearSuccess() {
	x.Success = nil
}

func (x *ConfigureGlobalResponse) ClearConfig() {
	x.Config = nil
}

func (x *ConfigureGlobalResponse) ClearError() {
	x.Error = nil
}

type ConfigureGlobalResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Applied configuration
	Config *GlobalConfig
	// Error information
	Error *messages.Error
}

func (b0 ConfigureGlobalResponse_builder) Build() *ConfigureGlobalResponse {
	m0 := &ConfigureGlobalResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Config = b.Config
	x.Error = b.Error
	return m0
}

// Update server config request
type UpdateServerConfigRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Updated configuration
	Config *ServerConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Field mask for partial updates
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServerConfigRequest) Reset() {
	*x = UpdateServerConfigRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServerConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerConfigRequest) ProtoMessage() {}

func (x *UpdateServerConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateServerConfigRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *UpdateServerConfigRequest) GetConfig() *ServerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *UpdateServerConfigRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateServerConfigRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateServerConfigRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *UpdateServerConfigRequest) SetConfig(v *ServerConfig) {
	x.Config = v
}

func (x *UpdateServerConfigRequest) SetUpdateMask(v *fieldmaskpb.FieldMask) {
	x.UpdateMask = v
}

func (x *UpdateServerConfigRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *UpdateServerConfigRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *UpdateServerConfigRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *UpdateServerConfigRequest) HasUpdateMask() bool {
	if x == nil {
		return false
	}
	return x.UpdateMask != nil
}

func (x *UpdateServerConfigRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *UpdateServerConfigRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *UpdateServerConfigRequest) ClearConfig() {
	x.Config = nil
}

func (x *UpdateServerConfigRequest) ClearUpdateMask() {
	x.UpdateMask = nil
}

func (x *UpdateServerConfigRequest) ClearMetadata() {
	x.Metadata = nil
}

type UpdateServerConfigRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Updated configuration
	Config *ServerConfig
	// Field mask for partial updates
	UpdateMask *fieldmaskpb.FieldMask
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 UpdateServerConfigRequest_builder) Build() *UpdateServerConfigRequest {
	m0 := &UpdateServerConfigRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Config = b.Config
	x.UpdateMask = b.UpdateMask
	x.Metadata = b.Metadata
	return m0
}

// Update server config response
type UpdateServerConfigResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Updated server information
	Server *ServerInfo `protobuf:"bytes,2,opt,name=server" json:"server,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServerConfigResponse) Reset() {
	*x = UpdateServerConfigResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServerConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerConfigResponse) ProtoMessage() {}

func (x *UpdateServerConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateServerConfigResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *UpdateServerConfigResponse) GetServer() *ServerInfo {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *UpdateServerConfigResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UpdateServerConfigResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *UpdateServerConfigResponse) SetServer(v *ServerInfo) {
	x.Server = v
}

func (x *UpdateServerConfigResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *UpdateServerConfigResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *UpdateServerConfigResponse) HasServer() bool {
	if x == nil {
		return false
	}
	return x.Server != nil
}

func (x *UpdateServerConfigResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *UpdateServerConfigResponse) ClearSuccess() {
	x.Success = nil
}

func (x *UpdateServerConfigResponse) ClearServer() {
	x.Server = nil
}

func (x *UpdateServerConfigResponse) ClearError() {
	x.Error = nil
}

type UpdateServerConfigResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Updated server information
	Server *ServerInfo
	// Error information
	Error *messages.Error
}

func (b0 UpdateServerConfigResponse_builder) Build() *UpdateServerConfigResponse {
	m0 := &UpdateServerConfigResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Server = b.Server
	x.Error = b.Error
	return m0
}

// Get server logs request
type GetServerLogsRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Log level filter
	LogLevel *string `protobuf:"bytes,2,opt,name=log_level,json=logLevel" json:"log_level,omitempty"`
	// Time range
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	// Log message filter
	MessageFilter *string `protobuf:"bytes,5,opt,name=message_filter,json=messageFilter" json:"message_filter,omitempty"`
	// Pagination options
	Pagination *messages.Pagination `protobuf:"bytes,6,opt,name=pagination" json:"pagination,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,7,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerLogsRequest) Reset() {
	*x = GetServerLogsRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerLogsRequest) ProtoMessage() {}

func (x *GetServerLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetServerLogsRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *GetServerLogsRequest) GetLogLevel() string {
	if x != nil && x.LogLevel != nil {
		return *x.LogLevel
	}
	return ""
}

func (x *GetServerLogsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetServerLogsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetServerLogsRequest) GetMessageFilter() string {
	if x != nil && x.MessageFilter != nil {
		return *x.MessageFilter
	}
	return ""
}

func (x *GetServerLogsRequest) GetPagination() *messages.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetServerLogsRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetServerLogsRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *GetServerLogsRequest) SetLogLevel(v string) {
	x.LogLevel = &v
}

func (x *GetServerLogsRequest) SetStartTime(v *timestamppb.Timestamp) {
	x.StartTime = v
}

func (x *GetServerLogsRequest) SetEndTime(v *timestamppb.Timestamp) {
	x.EndTime = v
}

func (x *GetServerLogsRequest) SetMessageFilter(v string) {
	x.MessageFilter = &v
}

func (x *GetServerLogsRequest) SetPagination(v *messages.Pagination) {
	x.Pagination = v
}

func (x *GetServerLogsRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *GetServerLogsRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *GetServerLogsRequest) HasLogLevel() bool {
	if x == nil {
		return false
	}
	return x.LogLevel != nil
}

func (x *GetServerLogsRequest) HasStartTime() bool {
	if x == nil {
		return false
	}
	return x.StartTime != nil
}

func (x *GetServerLogsRequest) HasEndTime() bool {
	if x == nil {
		return false
	}
	return x.EndTime != nil
}

func (x *GetServerLogsRequest) HasMessageFilter() bool {
	if x == nil {
		return false
	}
	return x.MessageFilter != nil
}

func (x *GetServerLogsRequest) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *GetServerLogsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetServerLogsRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *GetServerLogsRequest) ClearLogLevel() {
	x.LogLevel = nil
}

func (x *GetServerLogsRequest) ClearStartTime() {
	x.StartTime = nil
}

func (x *GetServerLogsRequest) ClearEndTime() {
	x.EndTime = nil
}

func (x *GetServerLogsRequest) ClearMessageFilter() {
	x.MessageFilter = nil
}

func (x *GetServerLogsRequest) ClearPagination() {
	x.Pagination = nil
}

func (x *GetServerLogsRequest) ClearMetadata() {
	x.Metadata = nil
}

type GetServerLogsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Log level filter
	LogLevel *string
	// Time range
	StartTime *timestamppb.Timestamp
	EndTime   *timestamppb.Timestamp
	// Log message filter
	MessageFilter *string
	// Pagination options
	Pagination *messages.Pagination
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 GetServerLogsRequest_builder) Build() *GetServerLogsRequest {
	m0 := &GetServerLogsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.LogLevel = b.LogLevel
	x.StartTime = b.StartTime
	x.EndTime = b.EndTime
	x.MessageFilter = b.MessageFilter
	x.Pagination = b.Pagination
	x.Metadata = b.Metadata
	return m0
}

// Get server logs response
type GetServerLogsResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Log entries
	LogEntries []*LogEntry `protobuf:"bytes,1,rep,name=log_entries,json=logEntries" json:"log_entries,omitempty"`
	// Pagination information
	Pagination *messages.Pagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerLogsResponse) Reset() {
	*x = GetServerLogsResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerLogsResponse) ProtoMessage() {}

func (x *GetServerLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetServerLogsResponse) GetLogEntries() []*LogEntry {
	if x != nil {
		return x.LogEntries
	}
	return nil
}

func (x *GetServerLogsResponse) GetPagination() *messages.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetServerLogsResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetServerLogsResponse) SetLogEntries(v []*LogEntry) {
	x.LogEntries = v
}

func (x *GetServerLogsResponse) SetPagination(v *messages.Pagination) {
	x.Pagination = v
}

func (x *GetServerLogsResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *GetServerLogsResponse) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *GetServerLogsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *GetServerLogsResponse) ClearPagination() {
	x.Pagination = nil
}

func (x *GetServerLogsResponse) ClearError() {
	x.Error = nil
}

type GetServerLogsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Log entries
	LogEntries []*LogEntry
	// Pagination information
	Pagination *messages.Pagination
	// Error information
	Error *messages.Error
}

func (b0 GetServerLogsResponse_builder) Build() *GetServerLogsResponse {
	m0 := &GetServerLogsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.LogEntries = b.LogEntries
	x.Pagination = b.Pagination
	x.Error = b.Error
	return m0
}

// Log entry
type LogEntry struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Timestamp
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	// Log level
	Level *string `protobuf:"bytes,2,opt,name=level" json:"level,omitempty"`
	// Log message
	Message *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	// Logger name
	Logger *string `protobuf:"bytes,4,opt,name=logger" json:"logger,omitempty"`
	// Additional fields
	Fields        map[string]string `protobuf:"bytes,5,rep,name=fields" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LogEntry) GetLevel() string {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return ""
}

func (x *LogEntry) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *LogEntry) GetLogger() string {
	if x != nil && x.Logger != nil {
		return *x.Logger
	}
	return ""
}

func (x *LogEntry) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *LogEntry) SetTimestamp(v *timestamppb.Timestamp) {
	x.Timestamp = v
}

func (x *LogEntry) SetLevel(v string) {
	x.Level = &v
}

func (x *LogEntry) SetMessage(v string) {
	x.Message = &v
}

func (x *LogEntry) SetLogger(v string) {
	x.Logger = &v
}

func (x *LogEntry) SetFields(v map[string]string) {
	x.Fields = v
}

func (x *LogEntry) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.Timestamp != nil
}

func (x *LogEntry) HasLevel() bool {
	if x == nil {
		return false
	}
	return x.Level != nil
}

func (x *LogEntry) HasMessage() bool {
	if x == nil {
		return false
	}
	return x.Message != nil
}

func (x *LogEntry) HasLogger() bool {
	if x == nil {
		return false
	}
	return x.Logger != nil
}

func (x *LogEntry) ClearTimestamp() {
	x.Timestamp = nil
}

func (x *LogEntry) ClearLevel() {
	x.Level = nil
}

func (x *LogEntry) ClearMessage() {
	x.Message = nil
}

func (x *LogEntry) ClearLogger() {
	x.Logger = nil
}

type LogEntry_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Timestamp
	Timestamp *timestamppb.Timestamp
	// Log level
	Level *string
	// Log message
	Message *string
	// Logger name
	Logger *string
	// Additional fields
	Fields map[string]string
}

func (b0 LogEntry_builder) Build() *LogEntry {
	m0 := &LogEntry{}
	b, x := &b0, m0
	_, _ = b, x
	x.Timestamp = b.Timestamp
	x.Level = b.Level
	x.Message = b.Message
	x.Logger = b.Logger
	x.Fields = b.Fields
	return m0
}

// Get access logs request
type GetAccessLogsRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Time range
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	// Status code filter
	StatusCode *int32 `protobuf:"varint,4,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	// Path filter
	PathFilter *string `protobuf:"bytes,5,opt,name=path_filter,json=pathFilter" json:"path_filter,omitempty"`
	// Method filter
	MethodFilter *string `protobuf:"bytes,6,opt,name=method_filter,json=methodFilter" json:"method_filter,omitempty"`
	// Pagination options
	Pagination *messages.Pagination `protobuf:"bytes,7,opt,name=pagination" json:"pagination,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,8,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccessLogsRequest) Reset() {
	*x = GetAccessLogsRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccessLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessLogsRequest) ProtoMessage() {}

func (x *GetAccessLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetAccessLogsRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *GetAccessLogsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetAccessLogsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetAccessLogsRequest) GetStatusCode() int32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *GetAccessLogsRequest) GetPathFilter() string {
	if x != nil && x.PathFilter != nil {
		return *x.PathFilter
	}
	return ""
}

func (x *GetAccessLogsRequest) GetMethodFilter() string {
	if x != nil && x.MethodFilter != nil {
		return *x.MethodFilter
	}
	return ""
}

func (x *GetAccessLogsRequest) GetPagination() *messages.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAccessLogsRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetAccessLogsRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *GetAccessLogsRequest) SetStartTime(v *timestamppb.Timestamp) {
	x.StartTime = v
}

func (x *GetAccessLogsRequest) SetEndTime(v *timestamppb.Timestamp) {
	x.EndTime = v
}

func (x *GetAccessLogsRequest) SetStatusCode(v int32) {
	x.StatusCode = &v
}

func (x *GetAccessLogsRequest) SetPathFilter(v string) {
	x.PathFilter = &v
}

func (x *GetAccessLogsRequest) SetMethodFilter(v string) {
	x.MethodFilter = &v
}

func (x *GetAccessLogsRequest) SetPagination(v *messages.Pagination) {
	x.Pagination = v
}

func (x *GetAccessLogsRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *GetAccessLogsRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *GetAccessLogsRequest) HasStartTime() bool {
	if x == nil {
		return false
	}
	return x.StartTime != nil
}

func (x *GetAccessLogsRequest) HasEndTime() bool {
	if x == nil {
		return false
	}
	return x.EndTime != nil
}

func (x *GetAccessLogsRequest) HasStatusCode() bool {
	if x == nil {
		return false
	}
	return x.StatusCode != nil
}

func (x *GetAccessLogsRequest) HasPathFilter() bool {
	if x == nil {
		return false
	}
	return x.PathFilter != nil
}

func (x *GetAccessLogsRequest) HasMethodFilter() bool {
	if x == nil {
		return false
	}
	return x.MethodFilter != nil
}

func (x *GetAccessLogsRequest) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *GetAccessLogsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetAccessLogsRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *GetAccessLogsRequest) ClearStartTime() {
	x.StartTime = nil
}

func (x *GetAccessLogsRequest) ClearEndTime() {
	x.EndTime = nil
}

func (x *GetAccessLogsRequest) ClearStatusCode() {
	x.StatusCode = nil
}

func (x *GetAccessLogsRequest) ClearPathFilter() {
	x.PathFilter = nil
}

func (x *GetAccessLogsRequest) ClearMethodFilter() {
	x.MethodFilter = nil
}

func (x *GetAccessLogsRequest) ClearPagination() {
	x.Pagination = nil
}

func (x *GetAccessLogsRequest) ClearMetadata() {
	x.Metadata = nil
}

type GetAccessLogsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Time range
	StartTime *timestamppb.Timestamp
	EndTime   *timestamppb.Timestamp
	// Status code filter
	StatusCode *int32
	// Path filter
	PathFilter *string
	// Method filter
	MethodFilter *string
	// Pagination options
	Pagination *messages.Pagination
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 GetAccessLogsRequest_builder) Build() *GetAccessLogsRequest {
	m0 := &GetAccessLogsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.StartTime = b.StartTime
	x.EndTime = b.EndTime
	x.StatusCode = b.StatusCode
	x.PathFilter = b.PathFilter
	x.MethodFilter = b.MethodFilter
	x.Pagination = b.Pagination
	x.Metadata = b.Metadata
	return m0
}

// Get access logs response
type GetAccessLogsResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Access log entries
	AccessLogs []*AccessLogEntry `protobuf:"bytes,1,rep,name=access_logs,json=accessLogs" json:"access_logs,omitempty"`
	// Pagination information
	Pagination *messages.Pagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccessLogsResponse) Reset() {
	*x = GetAccessLogsResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccessLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessLogsResponse) ProtoMessage() {}

func (x *GetAccessLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetAccessLogsResponse) GetAccessLogs() []*AccessLogEntry {
	if x != nil {
		return x.AccessLogs
	}
	return nil
}

func (x *GetAccessLogsResponse) GetPagination() *messages.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAccessLogsResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAccessLogsResponse) SetAccessLogs(v []*AccessLogEntry) {
	x.AccessLogs = v
}

func (x *GetAccessLogsResponse) SetPagination(v *messages.Pagination) {
	x.Pagination = v
}

func (x *GetAccessLogsResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *GetAccessLogsResponse) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *GetAccessLogsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *GetAccessLogsResponse) ClearPagination() {
	x.Pagination = nil
}

func (x *GetAccessLogsResponse) ClearError() {
	x.Error = nil
}

type GetAccessLogsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Access log entries
	AccessLogs []*AccessLogEntry
	// Pagination information
	Pagination *messages.Pagination
	// Error information
	Error *messages.Error
}

func (b0 GetAccessLogsResponse_builder) Build() *GetAccessLogsResponse {
	m0 := &GetAccessLogsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.AccessLogs = b.AccessLogs
	x.Pagination = b.Pagination
	x.Error = b.Error
	return m0
}

// Access log entry
type AccessLogEntry struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Timestamp
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	// Remote address
	RemoteAddr *string `protobuf:"bytes,2,opt,name=remote_addr,json=remoteAddr" json:"remote_addr,omitempty"`
	// HTTP method
	Method *string `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
	// Request path
	Path *string `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
	// Status code
	StatusCode *int32 `protobuf:"varint,5,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	// Response size
	ResponseSize *int64 `protobuf:"varint,6,opt,name=response_size,json=responseSize" json:"response_size,omitempty"`
	// Response time
	ResponseTime *durationpb.Duration `protobuf:"bytes,7,opt,name=response_time,json=responseTime" json:"response_time,omitempty"`
	// User agent
	UserAgent *string `protobuf:"bytes,8,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// Referer
	Referer *string `protobuf:"bytes,9,opt,name=referer" json:"referer,omitempty"`
	// Request ID
	RequestId     *string `protobuf:"bytes,10,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessLogEntry) Reset() {
	*x = AccessLogEntry{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessLogEntry) ProtoMessage() {}

func (x *AccessLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AccessLogEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AccessLogEntry) GetRemoteAddr() string {
	if x != nil && x.RemoteAddr != nil {
		return *x.RemoteAddr
	}
	return ""
}

func (x *AccessLogEntry) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *AccessLogEntry) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *AccessLogEntry) GetStatusCode() int32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *AccessLogEntry) GetResponseSize() int64 {
	if x != nil && x.ResponseSize != nil {
		return *x.ResponseSize
	}
	return 0
}

func (x *AccessLogEntry) GetResponseTime() *durationpb.Duration {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

func (x *AccessLogEntry) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *AccessLogEntry) GetReferer() string {
	if x != nil && x.Referer != nil {
		return *x.Referer
	}
	return ""
}

func (x *AccessLogEntry) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *AccessLogEntry) SetTimestamp(v *timestamppb.Timestamp) {
	x.Timestamp = v
}

func (x *AccessLogEntry) SetRemoteAddr(v string) {
	x.RemoteAddr = &v
}

func (x *AccessLogEntry) SetMethod(v string) {
	x.Method = &v
}

func (x *AccessLogEntry) SetPath(v string) {
	x.Path = &v
}

func (x *AccessLogEntry) SetStatusCode(v int32) {
	x.StatusCode = &v
}

func (x *AccessLogEntry) SetResponseSize(v int64) {
	x.ResponseSize = &v
}

func (x *AccessLogEntry) SetResponseTime(v *durationpb.Duration) {
	x.ResponseTime = v
}

func (x *AccessLogEntry) SetUserAgent(v string) {
	x.UserAgent = &v
}

func (x *AccessLogEntry) SetReferer(v string) {
	x.Referer = &v
}

func (x *AccessLogEntry) SetRequestId(v string) {
	x.RequestId = &v
}

func (x *AccessLogEntry) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.Timestamp != nil
}

func (x *AccessLogEntry) HasRemoteAddr() bool {
	if x == nil {
		return false
	}
	return x.RemoteAddr != nil
}

func (x *AccessLogEntry) HasMethod() bool {
	if x == nil {
		return false
	}
	return x.Method != nil
}

func (x *AccessLogEntry) HasPath() bool {
	if x == nil {
		return false
	}
	return x.Path != nil
}

func (x *AccessLogEntry) HasStatusCode() bool {
	if x == nil {
		return false
	}
	return x.StatusCode != nil
}

func (x *AccessLogEntry) HasResponseSize() bool {
	if x == nil {
		return false
	}
	return x.ResponseSize != nil
}

func (x *AccessLogEntry) HasResponseTime() bool {
	if x == nil {
		return false
	}
	return x.ResponseTime != nil
}

func (x *AccessLogEntry) HasUserAgent() bool {
	if x == nil {
		return false
	}
	return x.UserAgent != nil
}

func (x *AccessLogEntry) HasReferer() bool {
	if x == nil {
		return false
	}
	return x.Referer != nil
}

func (x *AccessLogEntry) HasRequestId() bool {
	if x == nil {
		return false
	}
	return x.RequestId != nil
}

func (x *AccessLogEntry) ClearTimestamp() {
	x.Timestamp = nil
}

func (x *AccessLogEntry) ClearRemoteAddr() {
	x.RemoteAddr = nil
}

func (x *AccessLogEntry) ClearMethod() {
	x.Method = nil
}

func (x *AccessLogEntry) ClearPath() {
	x.Path = nil
}

func (x *AccessLogEntry) ClearStatusCode() {
	x.StatusCode = nil
}

func (x *AccessLogEntry) ClearResponseSize() {
	x.ResponseSize = nil
}

func (x *AccessLogEntry) ClearResponseTime() {
	x.ResponseTime = nil
}

func (x *AccessLogEntry) ClearUserAgent() {
	x.UserAgent = nil
}

func (x *AccessLogEntry) ClearReferer() {
	x.Referer = nil
}

func (x *AccessLogEntry) ClearRequestId() {
	x.RequestId = nil
}

type AccessLogEntry_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Timestamp
	Timestamp *timestamppb.Timestamp
	// Remote address
	RemoteAddr *string
	// HTTP method
	Method *string
	// Request path
	Path *string
	// Status code
	StatusCode *int32
	// Response size
	ResponseSize *int64
	// Response time
	ResponseTime *durationpb.Duration
	// User agent
	UserAgent *string
	// Referer
	Referer *string
	// Request ID
	RequestId *string
}

func (b0 AccessLogEntry_builder) Build() *AccessLogEntry {
	m0 := &AccessLogEntry{}
	b, x := &b0, m0
	_, _ = b, x
	x.Timestamp = b.Timestamp
	x.RemoteAddr = b.RemoteAddr
	x.Method = b.Method
	x.Path = b.Path
	x.StatusCode = b.StatusCode
	x.ResponseSize = b.ResponseSize
	x.ResponseTime = b.ResponseTime
	x.UserAgent = b.UserAgent
	x.Referer = b.Referer
	x.RequestId = b.RequestId
	return m0
}

// Reload server config request
type ReloadServerConfigRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReloadServerConfigRequest) Reset() {
	*x = ReloadServerConfigRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReloadServerConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadServerConfigRequest) ProtoMessage() {}

func (x *ReloadServerConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReloadServerConfigRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *ReloadServerConfigRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ReloadServerConfigRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *ReloadServerConfigRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *ReloadServerConfigRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *ReloadServerConfigRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *ReloadServerConfigRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *ReloadServerConfigRequest) ClearMetadata() {
	x.Metadata = nil
}

type ReloadServerConfigRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 ReloadServerConfigRequest_builder) Build() *ReloadServerConfigRequest {
	m0 := &ReloadServerConfigRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Metadata = b.Metadata
	return m0
}

// Reload server config response
type ReloadServerConfigResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Reloaded configuration
	Config *ServerConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReloadServerConfigResponse) Reset() {
	*x = ReloadServerConfigResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReloadServerConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadServerConfigResponse) ProtoMessage() {}

func (x *ReloadServerConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReloadServerConfigResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ReloadServerConfigResponse) GetConfig() *ServerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ReloadServerConfigResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ReloadServerConfigResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *ReloadServerConfigResponse) SetConfig(v *ServerConfig) {
	x.Config = v
}

func (x *ReloadServerConfigResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *ReloadServerConfigResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *ReloadServerConfigResponse) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *ReloadServerConfigResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *ReloadServerConfigResponse) ClearSuccess() {
	x.Success = nil
}

func (x *ReloadServerConfigResponse) ClearConfig() {
	x.Config = nil
}

func (x *ReloadServerConfigResponse) ClearError() {
	x.Error = nil
}

type ReloadServerConfigResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Reloaded configuration
	Config *ServerConfig
	// Error information
	Error *messages.Error
}

func (b0 ReloadServerConfigResponse_builder) Build() *ReloadServerConfigResponse {
	m0 := &ReloadServerConfigResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Config = b.Config
	x.Error = b.Error
	return m0
}

// Get SSL certificate info request
type GetSSLCertificateInfoRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSSLCertificateInfoRequest) Reset() {
	*x = GetSSLCertificateInfoRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSSLCertificateInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSSLCertificateInfoRequest) ProtoMessage() {}

func (x *GetSSLCertificateInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetSSLCertificateInfoRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *GetSSLCertificateInfoRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetSSLCertificateInfoRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *GetSSLCertificateInfoRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *GetSSLCertificateInfoRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *GetSSLCertificateInfoRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetSSLCertificateInfoRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *GetSSLCertificateInfoRequest) ClearMetadata() {
	x.Metadata = nil
}

type GetSSLCertificateInfoRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 GetSSLCertificateInfoRequest_builder) Build() *GetSSLCertificateInfoRequest {
	m0 := &GetSSLCertificateInfoRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Metadata = b.Metadata
	return m0
}

// Get SSL certificate info response
type GetSSLCertificateInfoResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Certificate information
	Certificate *CertificateInfo `protobuf:"bytes,1,opt,name=certificate" json:"certificate,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSSLCertificateInfoResponse) Reset() {
	*x = GetSSLCertificateInfoResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSSLCertificateInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSSLCertificateInfoResponse) ProtoMessage() {}

func (x *GetSSLCertificateInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetSSLCertificateInfoResponse) GetCertificate() *CertificateInfo {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *GetSSLCertificateInfoResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetSSLCertificateInfoResponse) SetCertificate(v *CertificateInfo) {
	x.Certificate = v
}

func (x *GetSSLCertificateInfoResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *GetSSLCertificateInfoResponse) HasCertificate() bool {
	if x == nil {
		return false
	}
	return x.Certificate != nil
}

func (x *GetSSLCertificateInfoResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *GetSSLCertificateInfoResponse) ClearCertificate() {
	x.Certificate = nil
}

func (x *GetSSLCertificateInfoResponse) ClearError() {
	x.Error = nil
}

type GetSSLCertificateInfoResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Certificate information
	Certificate *CertificateInfo
	// Error information
	Error *messages.Error
}

func (b0 GetSSLCertificateInfoResponse_builder) Build() *GetSSLCertificateInfoResponse {
	m0 := &GetSSLCertificateInfoResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Certificate = b.Certificate
	x.Error = b.Error
	return m0
}

// Certificate information
type CertificateInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Certificate subject
	Subject *string `protobuf:"bytes,1,opt,name=subject" json:"subject,omitempty"`
	// Certificate issuer
	Issuer *string `protobuf:"bytes,2,opt,name=issuer" json:"issuer,omitempty"`
	// Not before date
	NotBefore *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=not_before,json=notBefore" json:"not_before,omitempty"`
	// Not after date
	NotAfter *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=not_after,json=notAfter" json:"not_after,omitempty"`
	// Serial number
	SerialNumber *string `protobuf:"bytes,5,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	// Subject alternative names
	San []string `protobuf:"bytes,6,rep,name=san" json:"san,omitempty"`
	// Certificate fingerprint
	Fingerprint *string `protobuf:"bytes,7,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// Certificate chain length
	ChainLength   *int32 `protobuf:"varint,8,opt,name=chain_length,json=chainLength" json:"chain_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CertificateInfo) Reset() {
	*x = CertificateInfo{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateInfo) ProtoMessage() {}

func (x *CertificateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CertificateInfo) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *CertificateInfo) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *CertificateInfo) GetNotBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.NotBefore
	}
	return nil
}

func (x *CertificateInfo) GetNotAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.NotAfter
	}
	return nil
}

func (x *CertificateInfo) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *CertificateInfo) GetSan() []string {
	if x != nil {
		return x.San
	}
	return nil
}

func (x *CertificateInfo) GetFingerprint() string {
	if x != nil && x.Fingerprint != nil {
		return *x.Fingerprint
	}
	return ""
}

func (x *CertificateInfo) GetChainLength() int32 {
	if x != nil && x.ChainLength != nil {
		return *x.ChainLength
	}
	return 0
}

func (x *CertificateInfo) SetSubject(v string) {
	x.Subject = &v
}

func (x *CertificateInfo) SetIssuer(v string) {
	x.Issuer = &v
}

func (x *CertificateInfo) SetNotBefore(v *timestamppb.Timestamp) {
	x.NotBefore = v
}

func (x *CertificateInfo) SetNotAfter(v *timestamppb.Timestamp) {
	x.NotAfter = v
}

func (x *CertificateInfo) SetSerialNumber(v string) {
	x.SerialNumber = &v
}

func (x *CertificateInfo) SetSan(v []string) {
	x.San = v
}

func (x *CertificateInfo) SetFingerprint(v string) {
	x.Fingerprint = &v
}

func (x *CertificateInfo) SetChainLength(v int32) {
	x.ChainLength = &v
}

func (x *CertificateInfo) HasSubject() bool {
	if x == nil {
		return false
	}
	return x.Subject != nil
}

func (x *CertificateInfo) HasIssuer() bool {
	if x == nil {
		return false
	}
	return x.Issuer != nil
}

func (x *CertificateInfo) HasNotBefore() bool {
	if x == nil {
		return false
	}
	return x.NotBefore != nil
}

func (x *CertificateInfo) HasNotAfter() bool {
	if x == nil {
		return false
	}
	return x.NotAfter != nil
}

func (x *CertificateInfo) HasSerialNumber() bool {
	if x == nil {
		return false
	}
	return x.SerialNumber != nil
}

func (x *CertificateInfo) HasFingerprint() bool {
	if x == nil {
		return false
	}
	return x.Fingerprint != nil
}

func (x *CertificateInfo) HasChainLength() bool {
	if x == nil {
		return false
	}
	return x.ChainLength != nil
}

func (x *CertificateInfo) ClearSubject() {
	x.Subject = nil
}

func (x *CertificateInfo) ClearIssuer() {
	x.Issuer = nil
}

func (x *CertificateInfo) ClearNotBefore() {
	x.NotBefore = nil
}

func (x *CertificateInfo) ClearNotAfter() {
	x.NotAfter = nil
}

func (x *CertificateInfo) ClearSerialNumber() {
	x.SerialNumber = nil
}

func (x *CertificateInfo) ClearFingerprint() {
	x.Fingerprint = nil
}

func (x *CertificateInfo) ClearChainLength() {
	x.ChainLength = nil
}

type CertificateInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Certificate subject
	Subject *string
	// Certificate issuer
	Issuer *string
	// Not before date
	NotBefore *timestamppb.Timestamp
	// Not after date
	NotAfter *timestamppb.Timestamp
	// Serial number
	SerialNumber *string
	// Subject alternative names
	San []string
	// Certificate fingerprint
	Fingerprint *string
	// Certificate chain length
	ChainLength *int32
}

func (b0 CertificateInfo_builder) Build() *CertificateInfo {
	m0 := &CertificateInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.Subject = b.Subject
	x.Issuer = b.Issuer
	x.NotBefore = b.NotBefore
	x.NotAfter = b.NotAfter
	x.SerialNumber = b.SerialNumber
	x.San = b.San
	x.Fingerprint = b.Fingerprint
	x.ChainLength = b.ChainLength
	return m0
}

// Update SSL certificate request
type UpdateSSLCertificateRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Certificate data
	CertificateData *string `protobuf:"bytes,2,opt,name=certificate_data,json=certificateData" json:"certificate_data,omitempty"`
	// Private key data
	PrivateKeyData *string `protobuf:"bytes,3,opt,name=private_key_data,json=privateKeyData" json:"private_key_data,omitempty"`
	// CA certificate data
	CaCertificateData *string `protobuf:"bytes,4,opt,name=ca_certificate_data,json=caCertificateData" json:"ca_certificate_data,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSSLCertificateRequest) Reset() {
	*x = UpdateSSLCertificateRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSSLCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSSLCertificateRequest) ProtoMessage() {}

func (x *UpdateSSLCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateSSLCertificateRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *UpdateSSLCertificateRequest) GetCertificateData() string {
	if x != nil && x.CertificateData != nil {
		return *x.CertificateData
	}
	return ""
}

func (x *UpdateSSLCertificateRequest) GetPrivateKeyData() string {
	if x != nil && x.PrivateKeyData != nil {
		return *x.PrivateKeyData
	}
	return ""
}

func (x *UpdateSSLCertificateRequest) GetCaCertificateData() string {
	if x != nil && x.CaCertificateData != nil {
		return *x.CaCertificateData
	}
	return ""
}

func (x *UpdateSSLCertificateRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateSSLCertificateRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *UpdateSSLCertificateRequest) SetCertificateData(v string) {
	x.CertificateData = &v
}

func (x *UpdateSSLCertificateRequest) SetPrivateKeyData(v string) {
	x.PrivateKeyData = &v
}

func (x *UpdateSSLCertificateRequest) SetCaCertificateData(v string) {
	x.CaCertificateData = &v
}

func (x *UpdateSSLCertificateRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *UpdateSSLCertificateRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *UpdateSSLCertificateRequest) HasCertificateData() bool {
	if x == nil {
		return false
	}
	return x.CertificateData != nil
}

func (x *UpdateSSLCertificateRequest) HasPrivateKeyData() bool {
	if x == nil {
		return false
	}
	return x.PrivateKeyData != nil
}

func (x *UpdateSSLCertificateRequest) HasCaCertificateData() bool {
	if x == nil {
		return false
	}
	return x.CaCertificateData != nil
}

func (x *UpdateSSLCertificateRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *UpdateSSLCertificateRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *UpdateSSLCertificateRequest) ClearCertificateData() {
	x.CertificateData = nil
}

func (x *UpdateSSLCertificateRequest) ClearPrivateKeyData() {
	x.PrivateKeyData = nil
}

func (x *UpdateSSLCertificateRequest) ClearCaCertificateData() {
	x.CaCertificateData = nil
}

func (x *UpdateSSLCertificateRequest) ClearMetadata() {
	x.Metadata = nil
}

type UpdateSSLCertificateRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Certificate data
	CertificateData *string
	// Private key data
	PrivateKeyData *string
	// CA certificate data
	CaCertificateData *string
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 UpdateSSLCertificateRequest_builder) Build() *UpdateSSLCertificateRequest {
	m0 := &UpdateSSLCertificateRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.CertificateData = b.CertificateData
	x.PrivateKeyData = b.PrivateKeyData
	x.CaCertificateData = b.CaCertificateData
	x.Metadata = b.Metadata
	return m0
}

// Update SSL certificate response
type UpdateSSLCertificateResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Updated certificate information
	Certificate *CertificateInfo `protobuf:"bytes,2,opt,name=certificate" json:"certificate,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSSLCertificateResponse) Reset() {
	*x = UpdateSSLCertificateResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSSLCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSSLCertificateResponse) ProtoMessage() {}

func (x *UpdateSSLCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateSSLCertificateResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *UpdateSSLCertificateResponse) GetCertificate() *CertificateInfo {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *UpdateSSLCertificateResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UpdateSSLCertificateResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *UpdateSSLCertificateResponse) SetCertificate(v *CertificateInfo) {
	x.Certificate = v
}

func (x *UpdateSSLCertificateResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *UpdateSSLCertificateResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *UpdateSSLCertificateResponse) HasCertificate() bool {
	if x == nil {
		return false
	}
	return x.Certificate != nil
}

func (x *UpdateSSLCertificateResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *UpdateSSLCertificateResponse) ClearSuccess() {
	x.Success = nil
}

func (x *UpdateSSLCertificateResponse) ClearCertificate() {
	x.Certificate = nil
}

func (x *UpdateSSLCertificateResponse) ClearError() {
	x.Error = nil
}

type UpdateSSLCertificateResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Updated certificate information
	Certificate *CertificateInfo
	// Error information
	Error *messages.Error
}

func (b0 UpdateSSLCertificateResponse_builder) Build() *UpdateSSLCertificateResponse {
	m0 := &UpdateSSLCertificateResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Certificate = b.Certificate
	x.Error = b.Error
	return m0
}

// Get server health request
type GetServerHealthRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerHealthRequest) Reset() {
	*x = GetServerHealthRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerHealthRequest) ProtoMessage() {}

func (x *GetServerHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetServerHealthRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *GetServerHealthRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetServerHealthRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *GetServerHealthRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *GetServerHealthRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *GetServerHealthRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetServerHealthRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *GetServerHealthRequest) ClearMetadata() {
	x.Metadata = nil
}

type GetServerHealthRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 GetServerHealthRequest_builder) Build() *GetServerHealthRequest {
	m0 := &GetServerHealthRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Metadata = b.Metadata
	return m0
}

// Get server health response
type GetServerHealthResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server health status
	Health *ServerHealthStatus `protobuf:"bytes,1,opt,name=health" json:"health,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerHealthResponse) Reset() {
	*x = GetServerHealthResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerHealthResponse) ProtoMessage() {}

func (x *GetServerHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetServerHealthResponse) GetHealth() *ServerHealthStatus {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *GetServerHealthResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetServerHealthResponse) SetHealth(v *ServerHealthStatus) {
	x.Health = v
}

func (x *GetServerHealthResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *GetServerHealthResponse) HasHealth() bool {
	if x == nil {
		return false
	}
	return x.Health != nil
}

func (x *GetServerHealthResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *GetServerHealthResponse) ClearHealth() {
	x.Health = nil
}

func (x *GetServerHealthResponse) ClearError() {
	x.Error = nil
}

type GetServerHealthResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server health status
	Health *ServerHealthStatus
	// Error information
	Error *messages.Error
}

func (b0 GetServerHealthResponse_builder) Build() *GetServerHealthResponse {
	m0 := &GetServerHealthResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Health = b.Health
	x.Error = b.Error
	return m0
}

// Server health status
type ServerHealthStatus struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Overall health
	OverallHealth *HealthStatus `protobuf:"varint,1,opt,name=overall_health,json=overallHealth,enum=gcommon.v1.web.HealthStatus" json:"overall_health,omitempty"`
	// Component health checks
	ComponentHealth []*ComponentHealth `protobuf:"bytes,2,rep,name=component_health,json=componentHealth" json:"component_health,omitempty"`
	// Last health check time
	LastCheckTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_check_time,json=lastCheckTime" json:"last_check_time,omitempty"`
	// Health check duration
	CheckDuration *durationpb.Duration `protobuf:"bytes,4,opt,name=check_duration,json=checkDuration" json:"check_duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerHealthStatus) Reset() {
	*x = ServerHealthStatus{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerHealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerHealthStatus) ProtoMessage() {}

func (x *ServerHealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServerHealthStatus) GetOverallHealth() HealthStatus {
	if x != nil && x.OverallHealth != nil {
		return *x.OverallHealth
	}
	return HealthStatus_HEALTH_STATUS_UNSPECIFIED
}

func (x *ServerHealthStatus) GetComponentHealth() []*ComponentHealth {
	if x != nil {
		return x.ComponentHealth
	}
	return nil
}

func (x *ServerHealthStatus) GetLastCheckTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheckTime
	}
	return nil
}

func (x *ServerHealthStatus) GetCheckDuration() *durationpb.Duration {
	if x != nil {
		return x.CheckDuration
	}
	return nil
}

func (x *ServerHealthStatus) SetOverallHealth(v HealthStatus) {
	x.OverallHealth = &v
}

func (x *ServerHealthStatus) SetComponentHealth(v []*ComponentHealth) {
	x.ComponentHealth = v
}

func (x *ServerHealthStatus) SetLastCheckTime(v *timestamppb.Timestamp) {
	x.LastCheckTime = v
}

func (x *ServerHealthStatus) SetCheckDuration(v *durationpb.Duration) {
	x.CheckDuration = v
}

func (x *ServerHealthStatus) HasOverallHealth() bool {
	if x == nil {
		return false
	}
	return x.OverallHealth != nil
}

func (x *ServerHealthStatus) HasLastCheckTime() bool {
	if x == nil {
		return false
	}
	return x.LastCheckTime != nil
}

func (x *ServerHealthStatus) HasCheckDuration() bool {
	if x == nil {
		return false
	}
	return x.CheckDuration != nil
}

func (x *ServerHealthStatus) ClearOverallHealth() {
	x.OverallHealth = nil
}

func (x *ServerHealthStatus) ClearLastCheckTime() {
	x.LastCheckTime = nil
}

func (x *ServerHealthStatus) ClearCheckDuration() {
	x.CheckDuration = nil
}

type ServerHealthStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Overall health
	OverallHealth *HealthStatus
	// Component health checks
	ComponentHealth []*ComponentHealth
	// Last health check time
	LastCheckTime *timestamppb.Timestamp
	// Health check duration
	CheckDuration *durationpb.Duration
}

func (b0 ServerHealthStatus_builder) Build() *ServerHealthStatus {
	m0 := &ServerHealthStatus{}
	b, x := &b0, m0
	_, _ = b, x
	x.OverallHealth = b.OverallHealth
	x.ComponentHealth = b.ComponentHealth
	x.LastCheckTime = b.LastCheckTime
	x.CheckDuration = b.CheckDuration
	return m0
}

// Component health
type ComponentHealth struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Component name
	Component *string `protobuf:"bytes,1,opt,name=component" json:"component,omitempty"`
	// Health status
	Status *HealthStatus `protobuf:"varint,2,opt,name=status,enum=gcommon.v1.web.HealthStatus" json:"status,omitempty"`
	// Health message
	Message *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	// Last check time
	LastCheckTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_check_time,json=lastCheckTime" json:"last_check_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComponentHealth) Reset() {
	*x = ComponentHealth{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentHealth) ProtoMessage() {}

func (x *ComponentHealth) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComponentHealth) GetComponent() string {
	if x != nil && x.Component != nil {
		return *x.Component
	}
	return ""
}

func (x *ComponentHealth) GetStatus() HealthStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return HealthStatus_HEALTH_STATUS_UNSPECIFIED
}

func (x *ComponentHealth) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *ComponentHealth) GetLastCheckTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheckTime
	}
	return nil
}

func (x *ComponentHealth) SetComponent(v string) {
	x.Component = &v
}

func (x *ComponentHealth) SetStatus(v HealthStatus) {
	x.Status = &v
}

func (x *ComponentHealth) SetMessage(v string) {
	x.Message = &v
}

func (x *ComponentHealth) SetLastCheckTime(v *timestamppb.Timestamp) {
	x.LastCheckTime = v
}

func (x *ComponentHealth) HasComponent() bool {
	if x == nil {
		return false
	}
	return x.Component != nil
}

func (x *ComponentHealth) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *ComponentHealth) HasMessage() bool {
	if x == nil {
		return false
	}
	return x.Message != nil
}

func (x *ComponentHealth) HasLastCheckTime() bool {
	if x == nil {
		return false
	}
	return x.LastCheckTime != nil
}

func (x *ComponentHealth) ClearComponent() {
	x.Component = nil
}

func (x *ComponentHealth) ClearStatus() {
	x.Status = nil
}

func (x *ComponentHealth) ClearMessage() {
	x.Message = nil
}

func (x *ComponentHealth) ClearLastCheckTime() {
	x.LastCheckTime = nil
}

type ComponentHealth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Component name
	Component *string
	// Health status
	Status *HealthStatus
	// Health message
	Message *string
	// Last check time
	LastCheckTime *timestamppb.Timestamp
}

func (b0 ComponentHealth_builder) Build() *ComponentHealth {
	m0 := &ComponentHealth{}
	b, x := &b0, m0
	_, _ = b, x
	x.Component = b.Component
	x.Status = b.Status
	x.Message = b.Message
	x.LastCheckTime = b.LastCheckTime
	return m0
}

// Export server config request
type ExportServerConfigRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Export format
	Format *ConfigExportFormat `protobuf:"varint,2,opt,name=format,enum=gcommon.v1.web.ConfigExportFormat" json:"format,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportServerConfigRequest) Reset() {
	*x = ExportServerConfigRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportServerConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportServerConfigRequest) ProtoMessage() {}

func (x *ExportServerConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExportServerConfigRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *ExportServerConfigRequest) GetFormat() ConfigExportFormat {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ConfigExportFormat_CONFIG_EXPORT_FORMAT_UNSPECIFIED
}

func (x *ExportServerConfigRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ExportServerConfigRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *ExportServerConfigRequest) SetFormat(v ConfigExportFormat) {
	x.Format = &v
}

func (x *ExportServerConfigRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *ExportServerConfigRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *ExportServerConfigRequest) HasFormat() bool {
	if x == nil {
		return false
	}
	return x.Format != nil
}

func (x *ExportServerConfigRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *ExportServerConfigRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *ExportServerConfigRequest) ClearFormat() {
	x.Format = nil
}

func (x *ExportServerConfigRequest) ClearMetadata() {
	x.Metadata = nil
}

type ExportServerConfigRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Export format
	Format *ConfigExportFormat
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 ExportServerConfigRequest_builder) Build() *ExportServerConfigRequest {
	m0 := &ExportServerConfigRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.Format = b.Format
	x.Metadata = b.Metadata
	return m0
}

// Export server config response
type ExportServerConfigResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Exported configuration data
	ConfigData *string `protobuf:"bytes,1,opt,name=config_data,json=configData" json:"config_data,omitempty"`
	// Export format used
	Format *ConfigExportFormat `protobuf:"varint,2,opt,name=format,enum=gcommon.v1.web.ConfigExportFormat" json:"format,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportServerConfigResponse) Reset() {
	*x = ExportServerConfigResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportServerConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportServerConfigResponse) ProtoMessage() {}

func (x *ExportServerConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExportServerConfigResponse) GetConfigData() string {
	if x != nil && x.ConfigData != nil {
		return *x.ConfigData
	}
	return ""
}

func (x *ExportServerConfigResponse) GetFormat() ConfigExportFormat {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ConfigExportFormat_CONFIG_EXPORT_FORMAT_UNSPECIFIED
}

func (x *ExportServerConfigResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ExportServerConfigResponse) SetConfigData(v string) {
	x.ConfigData = &v
}

func (x *ExportServerConfigResponse) SetFormat(v ConfigExportFormat) {
	x.Format = &v
}

func (x *ExportServerConfigResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *ExportServerConfigResponse) HasConfigData() bool {
	if x == nil {
		return false
	}
	return x.ConfigData != nil
}

func (x *ExportServerConfigResponse) HasFormat() bool {
	if x == nil {
		return false
	}
	return x.Format != nil
}

func (x *ExportServerConfigResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *ExportServerConfigResponse) ClearConfigData() {
	x.ConfigData = nil
}

func (x *ExportServerConfigResponse) ClearFormat() {
	x.Format = nil
}

func (x *ExportServerConfigResponse) ClearError() {
	x.Error = nil
}

type ExportServerConfigResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Exported configuration data
	ConfigData *string
	// Export format used
	Format *ConfigExportFormat
	// Error information
	Error *messages.Error
}

func (b0 ExportServerConfigResponse_builder) Build() *ExportServerConfigResponse {
	m0 := &ExportServerConfigResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.ConfigData = b.ConfigData
	x.Format = b.Format
	x.Error = b.Error
	return m0
}

// Import server config request
type ImportServerConfigRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Server ID
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// Configuration data
	ConfigData *string `protobuf:"bytes,2,opt,name=config_data,json=configData" json:"config_data,omitempty"`
	// Import format
	Format *ConfigExportFormat `protobuf:"varint,3,opt,name=format,enum=gcommon.v1.web.ConfigExportFormat" json:"format,omitempty"`
	// Merge strategy
	MergeStrategy *ConfigMergeStrategy `protobuf:"varint,4,opt,name=merge_strategy,json=mergeStrategy,enum=gcommon.v1.web.ConfigMergeStrategy" json:"merge_strategy,omitempty"`
	// Request metadata
	Metadata      *messages.RequestMetadata `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportServerConfigRequest) Reset() {
	*x = ImportServerConfigRequest{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportServerConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportServerConfigRequest) ProtoMessage() {}

func (x *ImportServerConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImportServerConfigRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *ImportServerConfigRequest) GetConfigData() string {
	if x != nil && x.ConfigData != nil {
		return *x.ConfigData
	}
	return ""
}

func (x *ImportServerConfigRequest) GetFormat() ConfigExportFormat {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ConfigExportFormat_CONFIG_EXPORT_FORMAT_UNSPECIFIED
}

func (x *ImportServerConfigRequest) GetMergeStrategy() ConfigMergeStrategy {
	if x != nil && x.MergeStrategy != nil {
		return *x.MergeStrategy
	}
	return ConfigMergeStrategy_CONFIG_MERGE_STRATEGY_UNSPECIFIED
}

func (x *ImportServerConfigRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ImportServerConfigRequest) SetServerId(v string) {
	x.ServerId = &v
}

func (x *ImportServerConfigRequest) SetConfigData(v string) {
	x.ConfigData = &v
}

func (x *ImportServerConfigRequest) SetFormat(v ConfigExportFormat) {
	x.Format = &v
}

func (x *ImportServerConfigRequest) SetMergeStrategy(v ConfigMergeStrategy) {
	x.MergeStrategy = &v
}

func (x *ImportServerConfigRequest) SetMetadata(v *messages.RequestMetadata) {
	x.Metadata = v
}

func (x *ImportServerConfigRequest) HasServerId() bool {
	if x == nil {
		return false
	}
	return x.ServerId != nil
}

func (x *ImportServerConfigRequest) HasConfigData() bool {
	if x == nil {
		return false
	}
	return x.ConfigData != nil
}

func (x *ImportServerConfigRequest) HasFormat() bool {
	if x == nil {
		return false
	}
	return x.Format != nil
}

func (x *ImportServerConfigRequest) HasMergeStrategy() bool {
	if x == nil {
		return false
	}
	return x.MergeStrategy != nil
}

func (x *ImportServerConfigRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *ImportServerConfigRequest) ClearServerId() {
	x.ServerId = nil
}

func (x *ImportServerConfigRequest) ClearConfigData() {
	x.ConfigData = nil
}

func (x *ImportServerConfigRequest) ClearFormat() {
	x.Format = nil
}

func (x *ImportServerConfigRequest) ClearMergeStrategy() {
	x.MergeStrategy = nil
}

func (x *ImportServerConfigRequest) ClearMetadata() {
	x.Metadata = nil
}

type ImportServerConfigRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Server ID
	ServerId *string
	// Configuration data
	ConfigData *string
	// Import format
	Format *ConfigExportFormat
	// Merge strategy
	MergeStrategy *ConfigMergeStrategy
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 ImportServerConfigRequest_builder) Build() *ImportServerConfigRequest {
	m0 := &ImportServerConfigRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.ServerId = b.ServerId
	x.ConfigData = b.ConfigData
	x.Format = b.Format
	x.MergeStrategy = b.MergeStrategy
	x.Metadata = b.Metadata
	return m0
}

// Import server config response
type ImportServerConfigResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Imported server information
	Server *ServerInfo `protobuf:"bytes,2,opt,name=server" json:"server,omitempty"`
	// Error information
	Error         *messages.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportServerConfigResponse) Reset() {
	*x = ImportServerConfigResponse{}
	mi := &file_pkg_web_proto_web_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportServerConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportServerConfigResponse) ProtoMessage() {}

func (x *ImportServerConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_web_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImportServerConfigResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ImportServerConfigResponse) GetServer() *ServerInfo {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *ImportServerConfigResponse) GetError() *messages.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ImportServerConfigResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *ImportServerConfigResponse) SetServer(v *ServerInfo) {
	x.Server = v
}

func (x *ImportServerConfigResponse) SetError(v *messages.Error) {
	x.Error = v
}

func (x *ImportServerConfigResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *ImportServerConfigResponse) HasServer() bool {
	if x == nil {
		return false
	}
	return x.Server != nil
}

func (x *ImportServerConfigResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *ImportServerConfigResponse) ClearSuccess() {
	x.Success = nil
}

func (x *ImportServerConfigResponse) ClearServer() {
	x.Server = nil
}

func (x *ImportServerConfigResponse) ClearError() {
	x.Error = nil
}

type ImportServerConfigResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Imported server information
	Server *ServerInfo
	// Error information
	Error *messages.Error
}

func (b0 ImportServerConfigResponse_builder) Build() *ImportServerConfigResponse {
	m0 := &ImportServerConfigResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Server = b.Server
	x.Error = b.Error
	return m0
}

var File_pkg_web_proto_web_proto protoreflect.FileDescriptor

const file_pkg_web_proto_web_proto_rawDesc = "" +
	"\n" +
	"\x17pkg/web/proto/web.proto\x12\x0egcommon.v1.web\x1a\x1dpkg/common/proto/common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x19google/protobuf/any.proto\x1a google/protobuf/field_mask.proto\x1a!google/protobuf/go_features.proto\"\x8b\x01\n" +
	"\x13CreateServerRequest\x124\n" +
	"\x06config\x18\x01 \x01(\v2\x1c.gcommon.v1.web.ServerConfigR\x06config\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xec\x04\n" +
	"\fServerConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x128\n" +
	"\n" +
	"tls_config\x18\x04 \x01(\v2\x19.gcommon.v1.web.TLSConfigR\ttlsConfig\x12;\n" +
	"\vhttp_config\x18\x05 \x01(\v2\x1a.gcommon.v1.web.HTTPConfigR\n" +
	"httpConfig\x12D\n" +
	"\x0etimeout_config\x18\x06 \x01(\v2\x1d.gcommon.v1.web.TimeoutConfigR\rtimeoutConfig\x12G\n" +
	"\x0fsecurity_config\x18\a \x01(\v2\x1e.gcommon.v1.web.SecurityConfigR\x0esecurityConfig\x12@\n" +
	"\n" +
	"middleware\x18\b \x03(\v2 .gcommon.v1.web.MiddlewareConfigR\n" +
	"middleware\x12E\n" +
	"\rstatic_config\x18\t \x01(\v2 .gcommon.v1.web.StaticFileConfigR\fstaticConfig\x12L\n" +
	"\n" +
	"attributes\x18\n" +
	" \x03(\v2,.gcommon.v1.web.ServerConfig.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe2\x02\n" +
	"\tTLSConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1b\n" +
	"\tcert_file\x18\x02 \x01(\tR\bcertFile\x12\x19\n" +
	"\bkey_file\x18\x03 \x01(\tR\akeyFile\x12\x17\n" +
	"\aca_file\x18\x04 \x01(\tR\x06caFile\x12\x1f\n" +
	"\vmin_version\x18\x05 \x01(\tR\n" +
	"minVersion\x12\x1f\n" +
	"\vmax_version\x18\x06 \x01(\tR\n" +
	"maxVersion\x12#\n" +
	"\rcipher_suites\x18\a \x03(\tR\fcipherSuites\x12`\n" +
	"\x18client_cert_verification\x18\b \x01(\x0e2&.gcommon.v1.web.ClientCertVerificationR\x16clientCertVerification\x12!\n" +
	"\fauto_renewal\x18\t \x01(\bR\vautoRenewal\"\xf8\x03\n" +
	"\n" +
	"HTTPConfig\x121\n" +
	"\x15max_header_size_bytes\x18\x01 \x01(\x05R\x12maxHeaderSizeBytes\x12-\n" +
	"\x13max_body_size_bytes\x18\x02 \x01(\x03R\x10maxBodySizeBytes\x12!\n" +
	"\fenable_http2\x18\x03 \x01(\bR\venableHttp2\x12-\n" +
	"\x12enable_compression\x18\x04 \x01(\bR\x11enableCompression\x12+\n" +
	"\x11compression_level\x18\x05 \x01(\x05R\x10compressionLevel\x12+\n" +
	"\x11compression_types\x18\x06 \x03(\tR\x10compressionTypes\x12;\n" +
	"\vcors_config\x18\a \x01(\v2\x1a.gcommon.v1.web.CORSConfigR\n" +
	"corsConfig\x12*\n" +
	"\x11request_id_header\x18\b \x01(\tR\x0frequestIdHeader\x12*\n" +
	"\x11enable_keep_alive\x18\t \x01(\bR\x0fenableKeepAlive\x12G\n" +
	"\x12keep_alive_timeout\x18\n" +
	" \x01(\v2\x19.google.protobuf.DurationR\x10keepAliveTimeout\"\xab\x02\n" +
	"\n" +
	"CORSConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12'\n" +
	"\x0fallowed_origins\x18\x02 \x03(\tR\x0eallowedOrigins\x12'\n" +
	"\x0fallowed_methods\x18\x03 \x03(\tR\x0eallowedMethods\x12'\n" +
	"\x0fallowed_headers\x18\x04 \x03(\tR\x0eallowedHeaders\x12'\n" +
	"\x0fexposed_headers\x18\x05 \x03(\tR\x0eexposedHeaders\x12+\n" +
	"\x11allow_credentials\x18\x06 \x01(\bR\x10allowCredentials\x122\n" +
	"\amax_age\x18\a \x01(\v2\x19.google.protobuf.DurationR\x06maxAge\"\xd5\x02\n" +
	"\rTimeoutConfig\x12<\n" +
	"\fread_timeout\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\vreadTimeout\x12>\n" +
	"\rwrite_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\fwriteTimeout\x12<\n" +
	"\fidle_timeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\vidleTimeout\x12B\n" +
	"\x0frequest_timeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x0erequestTimeout\x12D\n" +
	"\x10shutdown_timeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\x0fshutdownTimeout\"\x85\x03\n" +
	"\x0eSecurityConfig\x12>\n" +
	"\n" +
	"rate_limit\x18\x01 \x01(\v2\x1f.gcommon.v1.web.RateLimitConfigR\trateLimit\x12;\n" +
	"\tip_filter\x18\x02 \x01(\v2\x1e.gcommon.v1.web.IPFilterConfigR\bipFilter\x12L\n" +
	"\x0eauthentication\x18\x03 \x01(\v2$.gcommon.v1.web.AuthenticationConfigR\x0eauthentication\x12P\n" +
	"\x10security_headers\x18\x04 \x01(\v2%.gcommon.v1.web.SecurityHeadersConfigR\x0fsecurityHeaders\x12V\n" +
	"\x12request_validation\x18\x05 \x01(\v2'.gcommon.v1.web.RequestValidationConfigR\x11requestValidation\"\x87\x02\n" +
	"\x0fRateLimitConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12.\n" +
	"\x13requests_per_second\x18\x02 \x01(\x05R\x11requestsPerSecond\x12\x1d\n" +
	"\n" +
	"burst_size\x18\x03 \x01(\x05R\tburstSize\x12=\n" +
	"\bstrategy\x18\x04 \x01(\x0e2!.gcommon.v1.web.RateLimitStrategyR\bstrategy\x12#\n" +
	"\rkey_extractor\x18\x05 \x01(\tR\fkeyExtractor\x12'\n" +
	"\x0fskip_conditions\x18\x06 \x03(\tR\x0eskipConditions\"\xc7\x01\n" +
	"\x0eIPFilterConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1f\n" +
	"\vallowed_ips\x18\x02 \x03(\tR\n" +
	"allowedIps\x12\x1f\n" +
	"\vblocked_ips\x18\x03 \x03(\tR\n" +
	"blockedIps\x120\n" +
	"\x04mode\x18\x04 \x01(\x0e2\x1c.gcommon.v1.web.IPFilterModeR\x04mode\x12'\n" +
	"\x0ftrusted_proxies\x18\x05 \x03(\tR\x0etrustedProxies\"\xb3\x02\n" +
	"\x14AuthenticationConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x124\n" +
	"\aschemes\x18\x02 \x03(\v2\x1a.gcommon.v1.web.AuthSchemeR\aschemes\x12%\n" +
	"\x0edefault_scheme\x18\x03 \x01(\tR\rdefaultScheme\x12\x1d\n" +
	"\n" +
	"skip_paths\x18\x04 \x03(\tR\tskipPaths\x128\n" +
	"\n" +
	"jwt_config\x18\x05 \x01(\v2\x19.gcommon.v1.web.JWTConfigR\tjwtConfig\x12K\n" +
	"\x11basic_auth_config\x18\x06 \x01(\v2\x1f.gcommon.v1.web.BasicAuthConfigR\x0fbasicAuthConfig\"\x9c\x01\n" +
	"\n" +
	"AuthScheme\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x122\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1e.gcommon.v1.web.AuthSchemeTypeR\x04type\x12,\n" +
	"\x06config\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\x06config\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\"\xe6\x02\n" +
	"\tJWTConfig\x12\x16\n" +
	"\x06secret\x18\x01 \x01(\tR\x06secret\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\x12\x1c\n" +
	"\talgorithm\x18\x03 \x01(\tR\talgorithm\x12\x16\n" +
	"\x06issuer\x18\x04 \x01(\tR\x06issuer\x12\x1a\n" +
	"\baudience\x18\x05 \x03(\tR\baudience\x129\n" +
	"\n" +
	"expiration\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"expiration\x12S\n" +
	"\x0eclaims_mapping\x18\a \x03(\v2,.gcommon.v1.web.JWTConfig.ClaimsMappingEntryR\rclaimsMapping\x1a@\n" +
	"\x12ClaimsMappingEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xca\x01\n" +
	"\x0fBasicAuthConfig\x12\x14\n" +
	"\x05realm\x18\x01 \x01(\tR\x05realm\x12@\n" +
	"\x05users\x18\x02 \x03(\v2*.gcommon.v1.web.BasicAuthConfig.UsersEntryR\x05users\x12%\n" +
	"\x0ehash_algorithm\x18\x03 \x01(\tR\rhashAlgorithm\x1a8\n" +
	"\n" +
	"UsersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf8\x03\n" +
	"\x15SecurityHeadersConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x126\n" +
	"\x17content_security_policy\x18\x02 \x01(\tR\x15contentSecurityPolicy\x12&\n" +
	"\x0fx_frame_options\x18\x03 \x01(\tR\rxFrameOptions\x123\n" +
	"\x16x_content_type_options\x18\x04 \x01(\tR\x13xContentTypeOptions\x12(\n" +
	"\x10x_xss_protection\x18\x05 \x01(\tR\x0exXssProtection\x12:\n" +
	"\x19strict_transport_security\x18\x06 \x01(\tR\x17strictTransportSecurity\x12'\n" +
	"\x0freferrer_policy\x18\a \x01(\tR\x0ereferrerPolicy\x12_\n" +
	"\x0ecustom_headers\x18\b \x03(\v28.gcommon.v1.web.SecurityHeadersConfig.CustomHeadersEntryR\rcustomHeaders\x1a@\n" +
	"\x12CustomHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x98\x03\n" +
	"\x17RequestValidationConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x123\n" +
	"\x16max_request_size_bytes\x18\x02 \x01(\x03R\x13maxRequestSizeBytes\x122\n" +
	"\x15allowed_content_types\x18\x03 \x03(\tR\x13allowedContentTypes\x120\n" +
	"\x14validate_json_schema\x18\x04 \x01(\bR\x12validateJsonSchema\x12[\n" +
	"\fjson_schemas\x18\x05 \x03(\v28.gcommon.v1.web.RequestValidationConfig.JsonSchemasEntryR\vjsonSchemas\x12+\n" +
	"\x11custom_validators\x18\x06 \x03(\tR\x10customValidators\x1a>\n" +
	"\x10JsonSchemasEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xed\x01\n" +
	"\x10MiddlewareConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x122\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1e.gcommon.v1.web.MiddlewareTypeR\x04type\x12\x14\n" +
	"\x05order\x18\x03 \x01(\x05R\x05order\x12,\n" +
	"\x06config\x18\x04 \x01(\v2\x14.google.protobuf.AnyR\x06config\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x12\x14\n" +
	"\x05paths\x18\x06 \x03(\tR\x05paths\x12\x1d\n" +
	"\n" +
	"skip_paths\x18\a \x03(\tR\tskipPaths\"\x9a\x02\n" +
	"\x10StaticFileConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1c\n" +
	"\tdirectory\x18\x02 \x01(\tR\tdirectory\x12\x1d\n" +
	"\n" +
	"url_prefix\x18\x03 \x01(\tR\turlPrefix\x12\x1f\n" +
	"\vindex_files\x18\x04 \x03(\tR\n" +
	"indexFiles\x12:\n" +
	"\x19enable_directory_browsing\x18\x05 \x01(\bR\x17enableDirectoryBrowsing\x12#\n" +
	"\rcache_control\x18\x06 \x01(\tR\fcacheControl\x12-\n" +
	"\x12enable_compression\x18\a \x01(\bR\x11enableCompression\"\x94\x01\n" +
	"\x14CreateServerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x122\n" +
	"\x06server\x18\x02 \x01(\v2\x1a.gcommon.v1.web.ServerInfoR\x06server\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xbe\x02\n" +
	"\n" +
	"ServerInfo\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x124\n" +
	"\x06config\x18\x02 \x01(\v2\x1c.gcommon.v1.web.ServerConfigR\x06config\x124\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1c.gcommon.v1.web.ServerStatusR\x06status\x121\n" +
	"\x05stats\x18\x04 \x01(\v2\x1b.gcommon.v1.web.ServerStatsR\x05stats\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xf4\x02\n" +
	"\vServerStats\x12%\n" +
	"\x0etotal_requests\x18\x01 \x01(\x03R\rtotalRequests\x12-\n" +
	"\x12active_connections\x18\x02 \x01(\x05R\x11activeConnections\x12.\n" +
	"\x13requests_per_second\x18\x03 \x01(\x01R\x11requestsPerSecond\x12E\n" +
	"\x11avg_response_time\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x0favgResponseTime\x12\x1f\n" +
	"\verror_count\x18\x05 \x01(\x03R\n" +
	"errorCount\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x06 \x01(\x03R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\a \x01(\x03R\rbytesReceived\x121\n" +
	"\x06uptime\x18\b \x01(\v2\x19.google.protobuf.DurationR\x06uptime\"q\n" +
	"\x12StartServerRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xbc\x01\n" +
	"\x13StartServerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x124\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1c.gcommon.v1.web.ServerStatusR\x06status\x12%\n" +
	"\x0elisten_address\x18\x03 \x01(\tR\rlistenAddress\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xb6\x01\n" +
	"\x11StopServerRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12D\n" +
	"\x10graceful_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x0fgracefulTimeout\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x94\x01\n" +
	"\x12StopServerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x124\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1c.gcommon.v1.web.ServerStatusR\x06status\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"u\n" +
	"\x16GetServerStatusRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"}\n" +
	"\x17GetServerStatusResponse\x122\n" +
	"\x06server\x18\x01 \x01(\v2\x1a.gcommon.v1.web.ServerInfoR\x06server\x12.\n" +
	"\x05error\x18\x02 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xec\x01\n" +
	"\x12ListServersRequest\x124\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1c.gcommon.v1.web.ServerStatusR\x06status\x12!\n" +
	"\fname_pattern\x18\x02 \x01(\tR\vnamePattern\x12=\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xba\x01\n" +
	"\x13ListServersResponse\x124\n" +
	"\aservers\x18\x01 \x03(\v2\x1a.gcommon.v1.web.ServerInfoR\aservers\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xa6\x01\n" +
	"\x14RegisterRouteRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x121\n" +
	"\x05route\x18\x02 \x01(\v2\x1b.gcommon.v1.web.RouteConfigR\x05route\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xe8\x03\n" +
	"\vRouteConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x127\n" +
	"\ahandler\x18\x04 \x01(\v2\x1d.gcommon.v1.web.HandlerConfigR\ahandler\x12@\n" +
	"\n" +
	"middleware\x18\x05 \x03(\v2 .gcommon.v1.web.MiddlewareConfigR\n" +
	"middleware\x12K\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2+.gcommon.v1.web.RouteConfig.AttributesEntryR\n" +
	"attributes\x123\n" +
	"\atimeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12%\n" +
	"\x0eenable_caching\x18\b \x01(\bR\renableCaching\x126\n" +
	"\tcache_ttl\x18\t \x01(\v2\x19.google.protobuf.DurationR\bcacheTtl\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x88\x02\n" +
	"\rHandlerConfig\x12/\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1b.gcommon.v1.web.HandlerTypeR\x04type\x12,\n" +
	"\x06config\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06config\x12\x16\n" +
	"\x06target\x18\x03 \x01(\tR\x06target\x12D\n" +
	"\aoptions\x18\x04 \x03(\v2*.gcommon.v1.web.HandlerConfig.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x92\x01\n" +
	"\x15RegisterRouteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12/\n" +
	"\x05route\x18\x02 \x01(\v2\x19.gcommon.v1.web.RouteInfoR\x05route\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\x83\x02\n" +
	"\tRouteInfo\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\x123\n" +
	"\x06config\x18\x02 \x01(\v2\x1b.gcommon.v1.web.RouteConfigR\x06config\x120\n" +
	"\x05stats\x18\x03 \x01(\v2\x1a.gcommon.v1.web.RouteStatsR\x05stats\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xfd\x03\n" +
	"\n" +
	"RouteStats\x12%\n" +
	"\x0etotal_requests\x18\x01 \x01(\x03R\rtotalRequests\x12#\n" +
	"\rsuccess_count\x18\x02 \x01(\x03R\fsuccessCount\x12\x1f\n" +
	"\verror_count\x18\x03 \x01(\x03R\n" +
	"errorCount\x12E\n" +
	"\x11avg_response_time\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x0favgResponseTime\x12c\n" +
	"\x19response_time_percentiles\x18\x05 \x01(\v2'.gcommon.v1.web.ResponseTimePercentilesR\x17responseTimePercentiles\x12N\n" +
	"\fstatus_codes\x18\x06 \x03(\v2+.gcommon.v1.web.RouteStats.StatusCodesEntryR\vstatusCodes\x12F\n" +
	"\x11last_request_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x0flastRequestTime\x1a>\n" +
	"\x10StatusCodesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xcd\x01\n" +
	"\x17ResponseTimePercentiles\x12+\n" +
	"\x03p50\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x03p50\x12+\n" +
	"\x03p90\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x03p90\x12+\n" +
	"\x03p95\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x03p95\x12+\n" +
	"\x03p99\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x03p99\"\x90\x01\n" +
	"\x16UnregisterRouteRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x19\n" +
	"\broute_id\x18\x02 \x01(\tR\arouteId\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"c\n" +
	"\x17UnregisterRouteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\x02 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xea\x01\n" +
	"\x11ListRoutesRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12!\n" +
	"\fpath_pattern\x18\x03 \x01(\tR\vpathPattern\x12=\n" +
	"\n" +
	"pagination\x18\x04 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12>\n" +
	"\bmetadata\x18\x05 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xb6\x01\n" +
	"\x12ListRoutesResponse\x121\n" +
	"\x06routes\x18\x01 \x03(\v2\x19.gcommon.v1.web.RouteInfoR\x06routes\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xb5\x01\n" +
	"\x14AddMiddlewareRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12@\n" +
	"\n" +
	"middleware\x18\x02 \x01(\v2 .gcommon.v1.web.MiddlewareConfigR\n" +
	"middleware\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xa1\x01\n" +
	"\x15AddMiddlewareResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12>\n" +
	"\n" +
	"middleware\x18\x02 \x01(\v2\x1e.gcommon.v1.web.MiddlewareInfoR\n" +
	"middleware\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\x9c\x02\n" +
	"\x0eMiddlewareInfo\x12#\n" +
	"\rmiddleware_id\x18\x01 \x01(\tR\fmiddlewareId\x128\n" +
	"\x06config\x18\x02 \x01(\v2 .gcommon.v1.web.MiddlewareConfigR\x06config\x125\n" +
	"\x05stats\x18\x03 \x01(\v2\x1f.gcommon.v1.web.MiddlewareStatsR\x05stats\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x97\x02\n" +
	"\x0fMiddlewareStats\x12)\n" +
	"\x10total_executions\x18\x01 \x01(\x03R\x0ftotalExecutions\x12#\n" +
	"\rsuccess_count\x18\x02 \x01(\x03R\fsuccessCount\x12\x1f\n" +
	"\verror_count\x18\x03 \x01(\x03R\n" +
	"errorCount\x12G\n" +
	"\x12avg_execution_time\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x10avgExecutionTime\x12J\n" +
	"\x13last_execution_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x11lastExecutionTime\"\x9b\x01\n" +
	"\x17RemoveMiddlewareRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12#\n" +
	"\rmiddleware_id\x18\x02 \x01(\tR\fmiddlewareId\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"d\n" +
	"\x18RemoveMiddlewareResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\x02 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\x81\x02\n" +
	"\x15ListMiddlewareRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x122\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1e.gcommon.v1.web.MiddlewareTypeR\x04type\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12=\n" +
	"\n" +
	"pagination\x18\x04 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12>\n" +
	"\bmetadata\x18\x05 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xc7\x01\n" +
	"\x16ListMiddlewareResponse\x12>\n" +
	"\n" +
	"middleware\x18\x01 \x03(\v2\x1e.gcommon.v1.web.MiddlewareInfoR\n" +
	"middleware\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xad\x02\n" +
	"\x17GetServerMetricsRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12C\n" +
	"\fmetric_types\x18\x02 \x03(\x0e2 .gcommon.v1.web.ServerMetricTypeR\vmetricTypes\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12>\n" +
	"\bmetadata\x18\x05 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x83\x01\n" +
	"\x18GetServerMetricsResponse\x127\n" +
	"\ametrics\x18\x01 \x01(\v2\x1d.gcommon.v1.web.ServerMetricsR\ametrics\x12.\n" +
	"\x05error\x18\x02 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xa2\x03\n" +
	"\rServerMetrics\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12G\n" +
	"\x0frequest_metrics\x18\x02 \x01(\v2\x1e.gcommon.v1.web.RequestMetricsR\x0erequestMetrics\x12J\n" +
	"\x10response_metrics\x18\x03 \x01(\v2\x1f.gcommon.v1.web.ResponseMetricsR\x0fresponseMetrics\x12P\n" +
	"\x12connection_metrics\x18\x04 \x01(\v2!.gcommon.v1.web.ConnectionMetricsR\x11connectionMetrics\x12A\n" +
	"\rerror_metrics\x18\x05 \x01(\v2\x1c.gcommon.v1.web.ErrorMetricsR\ferrorMetrics\x12J\n" +
	"\x10resource_metrics\x18\x06 \x01(\v2\x1f.gcommon.v1.web.ResourceMetricsR\x0fresourceMetrics\"\xbe\x03\n" +
	"\x0eRequestMetrics\x12%\n" +
	"\x0etotal_requests\x18\x01 \x01(\x03R\rtotalRequests\x12.\n" +
	"\x13requests_per_second\x18\x02 \x01(\x01R\x11requestsPerSecond\x12G\n" +
	"\x12request_rate_trend\x18\x03 \x03(\v2\x19.gcommon.v1.web.DataPointR\x10requestRateTrend\x12\\\n" +
	"\x19request_size_distribution\x18\x04 \x01(\v2 .gcommon.v1.web.SizeDistributionR\x17requestSizeDistribution\x12g\n" +
	"\x13method_distribution\x18\x05 \x03(\v26.gcommon.v1.web.RequestMetrics.MethodDistributionEntryR\x12methodDistribution\x1aE\n" +
	"\x17MethodDistributionEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xaa\x04\n" +
	"\x0fResponseMetrics\x12E\n" +
	"\x11avg_response_time\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x0favgResponseTime\x12c\n" +
	"\x19response_time_percentiles\x18\x02 \x01(\v2'.gcommon.v1.web.ResponseTimePercentilesR\x17responseTimePercentiles\x12I\n" +
	"\x13response_time_trend\x18\x03 \x03(\v2\x19.gcommon.v1.web.DataPointR\x11responseTimeTrend\x12^\n" +
	"\x1aresponse_size_distribution\x18\x04 \x01(\v2 .gcommon.v1.web.SizeDistributionR\x18responseSizeDistribution\x12u\n" +
	"\x18status_code_distribution\x18\x05 \x03(\v2;.gcommon.v1.web.ResponseMetrics.StatusCodeDistributionEntryR\x16statusCodeDistribution\x1aI\n" +
	"\x1bStatusCodeDistributionEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xee\x03\n" +
	"\x11ConnectionMetrics\x12-\n" +
	"\x12active_connections\x18\x01 \x01(\x05R\x11activeConnections\x12+\n" +
	"\x11total_connections\x18\x02 \x01(\x03R\x10totalConnections\x124\n" +
	"\x16connections_per_second\x18\x03 \x01(\x01R\x14connectionsPerSecond\x12n\n" +
	" connection_duration_distribution\x18\x04 \x01(\v2$.gcommon.v1.web.DurationDistributionR\x1econnectionDurationDistribution\x12\x86\x01\n" +
	"\x1dconnection_state_distribution\x18\x05 \x03(\v2B.gcommon.v1.web.ConnectionMetrics.ConnectionStateDistributionEntryR\x1bconnectionStateDistribution\x1aN\n" +
	" ConnectionStateDistributionEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x89\x03\n" +
	"\fErrorMetrics\x12!\n" +
	"\ftotal_errors\x18\x01 \x01(\x03R\vtotalErrors\x12\x1d\n" +
	"\n" +
	"error_rate\x18\x02 \x01(\x01R\terrorRate\x12:\n" +
	"\verror_trend\x18\x03 \x03(\v2\x19.gcommon.v1.web.DataPointR\n" +
	"errorTrend\x12o\n" +
	"\x17error_type_distribution\x18\x04 \x03(\v27.gcommon.v1.web.ErrorMetrics.ErrorTypeDistributionEntryR\x15errorTypeDistribution\x12@\n" +
	"\rrecent_errors\x18\x05 \x03(\v2\x1b.gcommon.v1.web.RecentErrorR\frecentErrors\x1aH\n" +
	"\x1aErrorTypeDistributionEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xfa\x01\n" +
	"\x0fResourceMetrics\x12*\n" +
	"\x11cpu_usage_percent\x18\x01 \x01(\x01R\x0fcpuUsagePercent\x12,\n" +
	"\x12memory_usage_bytes\x18\x02 \x01(\x03R\x10memoryUsageBytes\x120\n" +
	"\x14memory_usage_percent\x18\x03 \x01(\x01R\x12memoryUsagePercent\x12'\n" +
	"\x0fgoroutine_count\x18\x04 \x01(\x05R\x0egoroutineCount\x122\n" +
	"\bgc_stats\x18\x05 \x01(\v2\x17.gcommon.v1.web.GCStatsR\agcStats\"\xfa\x01\n" +
	"\aGCStats\x12\x15\n" +
	"\x06num_gc\x18\x01 \x01(\x03R\x05numGc\x12C\n" +
	"\x10total_pause_time\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x0etotalPauseTime\x12?\n" +
	"\x0eavg_pause_time\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\favgPauseTime\x12)\n" +
	"\x10memory_allocated\x18\x04 \x01(\x03R\x0fmemoryAllocated\x12'\n" +
	"\x0fmemory_released\x18\x05 \x01(\x03R\x0ememoryReleased\"[\n" +
	"\tDataPoint\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\"\xa2\x01\n" +
	"\x10SizeDistribution\x12\x19\n" +
	"\bmin_size\x18\x01 \x01(\x03R\aminSize\x12\x19\n" +
	"\bmax_size\x18\x02 \x01(\x03R\amaxSize\x12\x19\n" +
	"\bavg_size\x18\x03 \x01(\x01R\aavgSize\x12=\n" +
	"\fsize_buckets\x18\x04 \x03(\v2\x1a.gcommon.v1.web.SizeBucketR\vsizeBuckets\"C\n" +
	"\n" +
	"SizeBucket\x12\x1f\n" +
	"\vupper_bound\x18\x01 \x01(\x03R\n" +
	"upperBound\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"\x9b\x02\n" +
	"\x14DurationDistribution\x12<\n" +
	"\fmin_duration\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\vminDuration\x12<\n" +
	"\fmax_duration\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\vmaxDuration\x12<\n" +
	"\favg_duration\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\vavgDuration\x12I\n" +
	"\x10duration_buckets\x18\x04 \x03(\v2\x1e.gcommon.v1.web.DurationBucketR\x0fdurationBuckets\"b\n" +
	"\x0eDurationBucket\x12:\n" +
	"\vupper_bound\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"upperBound\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"\xda\x01\n" +
	"\vRecentError\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x05R\x05count\x12C\n" +
	"\x0flast_occurrence\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastOccurrence\x12!\n" +
	"\frequest_path\x18\x05 \x01(\tR\vrequestPath\x12\x1f\n" +
	"\vstatus_code\x18\x06 \x01(\x05R\n" +
	"statusCode\"\x82\x02\n" +
	"\x16GetRouteMetricsRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x19\n" +
	"\broute_id\x18\x02 \x01(\tR\arouteId\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12>\n" +
	"\bmetadata\x18\x05 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x81\x01\n" +
	"\x17GetRouteMetricsResponse\x126\n" +
	"\ametrics\x18\x01 \x01(\v2\x1c.gcommon.v1.web.RouteMetricsR\ametrics\x12.\n" +
	"\x05error\x18\x02 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xf5\x02\n" +
	"\fRouteMetrics\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\x12\x1d\n" +
	"\n" +
	"route_path\x18\x02 \x01(\tR\troutePath\x12G\n" +
	"\x0frequest_metrics\x18\x03 \x01(\v2\x1e.gcommon.v1.web.RequestMetricsR\x0erequestMetrics\x12J\n" +
	"\x10response_metrics\x18\x04 \x01(\v2\x1f.gcommon.v1.web.ResponseMetricsR\x0fresponseMetrics\x12A\n" +
	"\rerror_metrics\x18\x05 \x01(\v2\x1c.gcommon.v1.web.ErrorMetricsR\ferrorMetrics\x12S\n" +
	"\x13performance_metrics\x18\x06 \x01(\v2\".gcommon.v1.web.PerformanceMetricsR\x12performanceMetrics\"\xa2\x02\n" +
	"\x12PerformanceMetrics\x12\x1e\n" +
	"\n" +
	"throughput\x18\x01 \x01(\x01R\n" +
	"throughput\x12X\n" +
	"\x13latency_percentiles\x18\x02 \x01(\v2'.gcommon.v1.web.ResponseTimePercentilesR\x12latencyPercentiles\x12$\n" +
	"\x0ecache_hit_rate\x18\x03 \x01(\x01R\fcacheHitRate\x12&\n" +
	"\x0fcache_miss_rate\x18\x04 \x01(\x01R\rcacheMissRate\x12D\n" +
	"\x11avg_db_query_time\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\x0eavgDbQueryTime\"\xe4\x01\n" +
	"\x14HandleRequestRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x125\n" +
	"\arequest\x18\x02 \x01(\v2\x1b.gcommon.v1.web.HTTPRequestR\arequest\x128\n" +
	"\acontext\x18\x03 \x01(\v2\x1e.gcommon.v1.web.RequestContextR\acontext\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x99\x04\n" +
	"\vHTTPRequest\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12O\n" +
	"\fquery_params\x18\x04 \x03(\v2,.gcommon.v1.web.HTTPRequest.QueryParamsEntryR\vqueryParams\x12B\n" +
	"\aheaders\x18\x05 \x03(\v2(.gcommon.v1.web.HTTPRequest.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x06 \x01(\fR\x04body\x12!\n" +
	"\fcontent_type\x18\a \x01(\tR\vcontentType\x12%\n" +
	"\x0econtent_length\x18\b \x01(\x03R\rcontentLength\x12\x1f\n" +
	"\vremote_addr\x18\t \x01(\tR\n" +
	"remoteAddr\x12\x1d\n" +
	"\n" +
	"user_agent\x18\n" +
	" \x01(\tR\tuserAgent\x12\x1d\n" +
	"\n" +
	"request_id\x18\v \x01(\tR\trequestId\x1a>\n" +
	"\x10QueryParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf5\x02\n" +
	"\x0eRequestContext\x12,\n" +
	"\x04user\x18\x01 \x01(\v2\x18.gcommon.v1.web.UserInfoR\x04user\x125\n" +
	"\asession\x18\x02 \x01(\v2\x1b.gcommon.v1.web.SessionInfoR\asession\x125\n" +
	"\atracing\x18\x03 \x01(\v2\x1b.gcommon.v1.web.TracingInfoR\atracing\x12N\n" +
	"\n" +
	"attributes\x18\x04 \x03(\v2..gcommon.v1.web.RequestContext.AttributesEntryR\n" +
	"attributes\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x80\x02\n" +
	"\bUserInfo\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05roles\x18\x03 \x03(\tR\x05roles\x12 \n" +
	"\vpermissions\x18\x04 \x03(\tR\vpermissions\x12H\n" +
	"\n" +
	"attributes\x18\x05 \x03(\v2(.gcommon.v1.web.UserInfo.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x96\x02\n" +
	"\vSessionInfo\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x129\n" +
	"\x04data\x18\x02 \x03(\v2%.gcommon.v1.web.SessionInfo.DataEntryR\x04data\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa2\x01\n" +
	"\vTracingInfo\x12\x19\n" +
	"\btrace_id\x18\x01 \x01(\tR\atraceId\x12\x17\n" +
	"\aspan_id\x18\x02 \x01(\tR\x06spanId\x12$\n" +
	"\x0eparent_span_id\x18\x03 \x01(\tR\fparentSpanId\x12\x18\n" +
	"\asampled\x18\x04 \x01(\bR\asampled\x12\x1f\n" +
	"\vtrace_flags\x18\x05 \x01(\x05R\n" +
	"traceFlags\"\xc5\x01\n" +
	"\x15HandleRequestResponse\x128\n" +
	"\bresponse\x18\x01 \x01(\v2\x1c.gcommon.v1.web.HTTPResponseR\bresponse\x12B\n" +
	"\x0fprocessing_time\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x0eprocessingTime\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xb5\x02\n" +
	"\fHTTPResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12%\n" +
	"\x0estatus_message\x18\x02 \x01(\tR\rstatusMessage\x12C\n" +
	"\aheaders\x18\x03 \x03(\v2).gcommon.v1.web.HTTPResponse.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x04 \x01(\fR\x04body\x12!\n" +
	"\fcontent_type\x18\x05 \x01(\tR\vcontentType\x12%\n" +
	"\x0econtent_length\x18\x06 \x01(\x03R\rcontentLength\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xba\x01\n" +
	"\x19StreamServerEventsRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12@\n" +
	"\vevent_types\x18\x02 \x03(\x0e2\x1f.gcommon.v1.web.ServerEventTypeR\n" +
	"eventTypes\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x80\x03\n" +
	"\vServerEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12>\n" +
	"\n" +
	"event_type\x18\x02 \x01(\x0e2\x1f.gcommon.v1.web.ServerEventTypeR\teventType\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tserver_id\x18\x04 \x01(\tR\bserverId\x123\n" +
	"\n" +
	"event_data\x18\x05 \x01(\v2\x14.google.protobuf.AnyR\teventData\x12K\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2+.gcommon.v1.web.ServerEvent.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8e\x01\n" +
	"\x16ConfigureGlobalRequest\x124\n" +
	"\x06config\x18\x01 \x01(\v2\x1c.gcommon.v1.web.GlobalConfigR\x06config\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xf2\x02\n" +
	"\fGlobalConfig\x12P\n" +
	"\x15default_server_config\x18\x01 \x01(\v2\x1c.gcommon.v1.web.ServerConfigR\x13defaultServerConfig\x12@\n" +
	"\bsecurity\x18\x02 \x01(\v2$.gcommon.v1.web.GlobalSecurityConfigR\bsecurity\x12=\n" +
	"\alogging\x18\x03 \x01(\v2#.gcommon.v1.web.GlobalLoggingConfigR\alogging\x12F\n" +
	"\n" +
	"monitoring\x18\x04 \x01(\v2&.gcommon.v1.web.GlobalMonitoringConfigR\n" +
	"monitoring\x12G\n" +
	"\x0fresource_limits\x18\x05 \x01(\v2\x1e.gcommon.v1.web.ResourceLimitsR\x0eresourceLimits\"\xf9\x01\n" +
	"\x14GlobalSecurityConfig\x12:\n" +
	"\vdefault_tls\x18\x01 \x01(\v2\x19.gcommon.v1.web.TLSConfigR\n" +
	"defaultTls\x12G\n" +
	"\x0fsecurity_policy\x18\x02 \x01(\v2\x1e.gcommon.v1.web.SecurityPolicyR\x0esecurityPolicy\x12\\\n" +
	"\x16certificate_management\x18\x03 \x01(\v2%.gcommon.v1.web.CertificateManagementR\x15certificateManagement\"\xde\x01\n" +
	"\x0eSecurityPolicy\x12&\n" +
	"\x0fmin_tls_version\x18\x01 \x01(\tR\rminTlsVersion\x124\n" +
	"\x16required_cipher_suites\x18\x02 \x03(\tR\x14requiredCipherSuites\x128\n" +
	"\x18enforce_security_headers\x18\x03 \x01(\bR\x16enforceSecurityHeaders\x124\n" +
	"\x16validate_content_types\x18\x04 \x01(\bR\x14validateContentTypes\"\xf7\x01\n" +
	"\x15CertificateManagement\x120\n" +
	"\x14auto_renewal_enabled\x18\x01 \x01(\bR\x12autoRenewalEnabled\x123\n" +
	"\x15certificate_authority\x18\x02 \x01(\tR\x14certificateAuthority\x12F\n" +
	"\x11renewal_threshold\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x10renewalThreshold\x12/\n" +
	"\x13certificate_storage\x18\x04 \x01(\tR\x12certificateStorage\"\xdd\x01\n" +
	"\x13GlobalLoggingConfig\x12*\n" +
	"\x11default_log_level\x18\x01 \x01(\tR\x0fdefaultLogLevel\x12*\n" +
	"\x11access_log_format\x18\x02 \x01(\tR\x0faccessLogFormat\x12(\n" +
	"\x10error_log_format\x18\x03 \x01(\tR\x0eerrorLogFormat\x12D\n" +
	"\flog_rotation\x18\x04 \x01(\v2!.gcommon.v1.web.LogRotationConfigR\vlogRotation\"\xdb\x01\n" +
	"\x11LogRotationConfig\x12.\n" +
	"\x13rotation_size_bytes\x18\x01 \x01(\x03R\x11rotationSizeBytes\x12F\n" +
	"\x11rotation_interval\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x10rotationInterval\x12\x1d\n" +
	"\n" +
	"keep_files\x18\x03 \x01(\x05R\tkeepFiles\x12/\n" +
	"\x13compression_enabled\x18\x04 \x01(\bR\x12compressionEnabled\"\xb3\x02\n" +
	"\x16GlobalMonitoringConfig\x12D\n" +
	"\x10metrics_interval\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x0fmetricsInterval\x12M\n" +
	"\x15health_check_interval\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x13healthCheckInterval\x12D\n" +
	"\x1eperformance_monitoring_enabled\x18\x03 \x01(\bR\x1cperformanceMonitoringEnabled\x12>\n" +
	"\x1bdistributed_tracing_enabled\x18\x04 \x01(\bR\x19distributedTracingEnabled\"\x9f\x02\n" +
	"\x0eResourceLimits\x12\x1f\n" +
	"\vmax_servers\x18\x01 \x01(\x05R\n" +
	"maxServers\x121\n" +
	"\x15max_routes_per_server\x18\x02 \x01(\x05R\x12maxRoutesPerServer\x12;\n" +
	"\x1amax_connections_per_server\x18\x03 \x01(\x05R\x17maxConnectionsPerServer\x12@\n" +
	"\x1dmemory_limit_per_server_bytes\x18\x04 \x01(\x03R\x19memoryLimitPerServerBytes\x12:\n" +
	"\x1acpu_limit_per_server_cores\x18\x05 \x01(\x01R\x16cpuLimitPerServerCores\"\x99\x01\n" +
	"\x17ConfigureGlobalResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x124\n" +
	"\x06config\x18\x02 \x01(\v2\x1c.gcommon.v1.web.GlobalConfigR\x06config\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xeb\x01\n" +
	"\x19UpdateServerConfigRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x124\n" +
	"\x06config\x18\x02 \x01(\v2\x1c.gcommon.v1.web.ServerConfigR\x06config\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x9a\x01\n" +
	"\x1aUpdateServerConfigResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x122\n" +
	"\x06server\x18\x02 \x01(\v2\x1a.gcommon.v1.web.ServerInfoR\x06server\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xe8\x02\n" +
	"\x14GetServerLogsRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1b\n" +
	"\tlog_level\x18\x02 \x01(\tR\blogLevel\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12%\n" +
	"\x0emessage_filter\x18\x05 \x01(\tR\rmessageFilter\x12=\n" +
	"\n" +
	"pagination\x18\x06 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12>\n" +
	"\bmetadata\x18\a \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xc1\x01\n" +
	"\x15GetServerLogsResponse\x129\n" +
	"\vlog_entries\x18\x01 \x03(\v2\x18.gcommon.v1.web.LogEntryR\n" +
	"logEntries\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\x85\x02\n" +
	"\bLogEntry\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x16\n" +
	"\x06logger\x18\x04 \x01(\tR\x06logger\x12<\n" +
	"\x06fields\x18\x05 \x03(\v2$.gcommon.v1.web.LogEntry.FieldsEntryR\x06fields\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8b\x03\n" +
	"\x14GetAccessLogsRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1f\n" +
	"\vstatus_code\x18\x04 \x01(\x05R\n" +
	"statusCode\x12\x1f\n" +
	"\vpath_filter\x18\x05 \x01(\tR\n" +
	"pathFilter\x12#\n" +
	"\rmethod_filter\x18\x06 \x01(\tR\fmethodFilter\x12=\n" +
	"\n" +
	"pagination\x18\a \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12>\n" +
	"\bmetadata\x18\b \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xc7\x01\n" +
	"\x15GetAccessLogsResponse\x12?\n" +
	"\vaccess_logs\x18\x01 \x03(\v2\x1e.gcommon.v1.web.AccessLogEntryR\n" +
	"accessLogs\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xf5\x02\n" +
	"\x0eAccessLogEntry\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1f\n" +
	"\vremote_addr\x18\x02 \x01(\tR\n" +
	"remoteAddr\x12\x16\n" +
	"\x06method\x18\x03 \x01(\tR\x06method\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12\x1f\n" +
	"\vstatus_code\x18\x05 \x01(\x05R\n" +
	"statusCode\x12#\n" +
	"\rresponse_size\x18\x06 \x01(\x03R\fresponseSize\x12>\n" +
	"\rresponse_time\x18\a \x01(\v2\x19.google.protobuf.DurationR\fresponseTime\x12\x1d\n" +
	"\n" +
	"user_agent\x18\b \x01(\tR\tuserAgent\x12\x18\n" +
	"\areferer\x18\t \x01(\tR\areferer\x12\x1d\n" +
	"\n" +
	"request_id\x18\n" +
	" \x01(\tR\trequestId\"x\n" +
	"\x19ReloadServerConfigRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x9c\x01\n" +
	"\x1aReloadServerConfigResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x124\n" +
	"\x06config\x18\x02 \x01(\v2\x1c.gcommon.v1.web.ServerConfigR\x06config\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"{\n" +
	"\x1cGetSSLCertificateInfoRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x92\x01\n" +
	"\x1dGetSSLCertificateInfoResponse\x12A\n" +
	"\vcertificate\x18\x01 \x01(\v2\x1f.gcommon.v1.web.CertificateInfoR\vcertificate\x12.\n" +
	"\x05error\x18\x02 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xb3\x02\n" +
	"\x0fCertificateInfo\x12\x18\n" +
	"\asubject\x18\x01 \x01(\tR\asubject\x12\x16\n" +
	"\x06issuer\x18\x02 \x01(\tR\x06issuer\x129\n" +
	"\n" +
	"not_before\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tnotBefore\x127\n" +
	"\tnot_after\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bnotAfter\x12#\n" +
	"\rserial_number\x18\x05 \x01(\tR\fserialNumber\x12\x10\n" +
	"\x03san\x18\x06 \x03(\tR\x03san\x12 \n" +
	"\vfingerprint\x18\a \x01(\tR\vfingerprint\x12!\n" +
	"\fchain_length\x18\b \x01(\x05R\vchainLength\"\xff\x01\n" +
	"\x1bUpdateSSLCertificateRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12)\n" +
	"\x10certificate_data\x18\x02 \x01(\tR\x0fcertificateData\x12(\n" +
	"\x10private_key_data\x18\x03 \x01(\tR\x0eprivateKeyData\x12.\n" +
	"\x13ca_certificate_data\x18\x04 \x01(\tR\x11caCertificateData\x12>\n" +
	"\bmetadata\x18\x05 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xab\x01\n" +
	"\x1cUpdateSSLCertificateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12A\n" +
	"\vcertificate\x18\x02 \x01(\v2\x1f.gcommon.v1.web.CertificateInfoR\vcertificate\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"u\n" +
	"\x16GetServerHealthRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x85\x01\n" +
	"\x17GetServerHealthResponse\x12:\n" +
	"\x06health\x18\x01 \x01(\v2\".gcommon.v1.web.ServerHealthStatusR\x06health\x12.\n" +
	"\x05error\x18\x02 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xab\x02\n" +
	"\x12ServerHealthStatus\x12C\n" +
	"\x0eoverall_health\x18\x01 \x01(\x0e2\x1c.gcommon.v1.web.HealthStatusR\roverallHealth\x12J\n" +
	"\x10component_health\x18\x02 \x03(\v2\x1f.gcommon.v1.web.ComponentHealthR\x0fcomponentHealth\x12B\n" +
	"\x0flast_check_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\rlastCheckTime\x12@\n" +
	"\x0echeck_duration\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\rcheckDuration\"\xc3\x01\n" +
	"\x0fComponentHealth\x12\x1c\n" +
	"\tcomponent\x18\x01 \x01(\tR\tcomponent\x124\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1c.gcommon.v1.web.HealthStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12B\n" +
	"\x0flast_check_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\rlastCheckTime\"\xb4\x01\n" +
	"\x19ExportServerConfigRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12:\n" +
	"\x06format\x18\x02 \x01(\x0e2\".gcommon.v1.web.ConfigExportFormatR\x06format\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xa9\x01\n" +
	"\x1aExportServerConfigResponse\x12\x1f\n" +
	"\vconfig_data\x18\x01 \x01(\tR\n" +
	"configData\x12:\n" +
	"\x06format\x18\x02 \x01(\x0e2\".gcommon.v1.web.ConfigExportFormatR\x06format\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xa1\x02\n" +
	"\x19ImportServerConfigRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1f\n" +
	"\vconfig_data\x18\x02 \x01(\tR\n" +
	"configData\x12:\n" +
	"\x06format\x18\x03 \x01(\x0e2\".gcommon.v1.web.ConfigExportFormatR\x06format\x12J\n" +
	"\x0emerge_strategy\x18\x04 \x01(\x0e2#.gcommon.v1.web.ConfigMergeStrategyR\rmergeStrategy\x12>\n" +
	"\bmetadata\x18\x05 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x9a\x01\n" +
	"\x1aImportServerConfigResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x122\n" +
	"\x06server\x18\x02 \x01(\v2\x1a.gcommon.v1.web.ServerInfoR\x06server\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error*\xb1\x01\n" +
	"\x16ClientCertVerification\x12(\n" +
	"$CLIENT_CERT_VERIFICATION_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dCLIENT_CERT_VERIFICATION_NONE\x10\x01\x12$\n" +
	" CLIENT_CERT_VERIFICATION_REQUEST\x10\x02\x12$\n" +
	" CLIENT_CERT_VERIFICATION_REQUIRE\x10\x03*\xd2\x01\n" +
	"\x11RateLimitStrategy\x12#\n" +
	"\x1fRATE_LIMIT_STRATEGY_UNSPECIFIED\x10\x00\x12$\n" +
	" RATE_LIMIT_STRATEGY_TOKEN_BUCKET\x10\x01\x12$\n" +
	" RATE_LIMIT_STRATEGY_FIXED_WINDOW\x10\x02\x12&\n" +
	"\"RATE_LIMIT_STRATEGY_SLIDING_WINDOW\x10\x03\x12$\n" +
	" RATE_LIMIT_STRATEGY_LEAKY_BUCKET\x10\x04*j\n" +
	"\fIPFilterMode\x12\x1e\n" +
	"\x1aIP_FILTER_MODE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18IP_FILTER_MODE_WHITELIST\x10\x01\x12\x1c\n" +
	"\x18IP_FILTER_MODE_BLACKLIST\x10\x02*\xc0\x01\n" +
	"\x0eAuthSchemeType\x12 \n" +
	"\x1cAUTH_SCHEME_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16AUTH_SCHEME_TYPE_BASIC\x10\x01\x12\x1b\n" +
	"\x17AUTH_SCHEME_TYPE_BEARER\x10\x02\x12\x18\n" +
	"\x14AUTH_SCHEME_TYPE_JWT\x10\x03\x12\x1c\n" +
	"\x18AUTH_SCHEME_TYPE_API_KEY\x10\x04\x12\x1b\n" +
	"\x17AUTH_SCHEME_TYPE_OAUTH2\x10\x05*\x8a\x03\n" +
	"\x0eMiddlewareType\x12\x1f\n" +
	"\x1bMIDDLEWARE_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17MIDDLEWARE_TYPE_LOGGING\x10\x01\x12\"\n" +
	"\x1eMIDDLEWARE_TYPE_AUTHENTICATION\x10\x02\x12!\n" +
	"\x1dMIDDLEWARE_TYPE_AUTHORIZATION\x10\x03\x12!\n" +
	"\x1dMIDDLEWARE_TYPE_RATE_LIMITING\x10\x04\x12\x1f\n" +
	"\x1bMIDDLEWARE_TYPE_COMPRESSION\x10\x05\x12\x18\n" +
	"\x14MIDDLEWARE_TYPE_CORS\x10\x06\x12$\n" +
	" MIDDLEWARE_TYPE_SECURITY_HEADERS\x10\a\x12&\n" +
	"\"MIDDLEWARE_TYPE_REQUEST_VALIDATION\x10\b\x12+\n" +
	"'MIDDLEWARE_TYPE_RESPONSE_TRANSFORMATION\x10\t\x12\x1a\n" +
	"\x16MIDDLEWARE_TYPE_CUSTOM\x10\n" +
	"*\xcf\x01\n" +
	"\fServerStatus\x12\x1d\n" +
	"\x19SERVER_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15SERVER_STATUS_CREATED\x10\x01\x12\x1a\n" +
	"\x16SERVER_STATUS_STARTING\x10\x02\x12\x19\n" +
	"\x15SERVER_STATUS_RUNNING\x10\x03\x12\x1a\n" +
	"\x16SERVER_STATUS_STOPPING\x10\x04\x12\x19\n" +
	"\x15SERVER_STATUS_STOPPED\x10\x05\x12\x17\n" +
	"\x13SERVER_STATUS_ERROR\x10\x06*\xe0\x01\n" +
	"\vHandlerType\x12\x1c\n" +
	"\x18HANDLER_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13HANDLER_TYPE_STATIC\x10\x01\x12\x16\n" +
	"\x12HANDLER_TYPE_PROXY\x10\x02\x12\x19\n" +
	"\x15HANDLER_TYPE_FUNCTION\x10\x03\x12\x19\n" +
	"\x15HANDLER_TYPE_REDIRECT\x10\x04\x12\x19\n" +
	"\x15HANDLER_TYPE_TEMPLATE\x10\x05\x12\x1a\n" +
	"\x16HANDLER_TYPE_WEBSOCKET\x10\x06\x12\x15\n" +
	"\x11HANDLER_TYPE_GRPC\x10\a*\xe3\x01\n" +
	"\x10ServerMetricType\x12\"\n" +
	"\x1eSERVER_METRIC_TYPE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bSERVER_METRIC_TYPE_REQUESTS\x10\x01\x12$\n" +
	" SERVER_METRIC_TYPE_RESPONSE_TIME\x10\x02\x12\"\n" +
	"\x1eSERVER_METRIC_TYPE_CONNECTIONS\x10\x03\x12\x1d\n" +
	"\x19SERVER_METRIC_TYPE_ERRORS\x10\x04\x12!\n" +
	"\x1dSERVER_METRIC_TYPE_THROUGHPUT\x10\x05*\xd7\x01\n" +
	"\x0fServerEventType\x12!\n" +
	"\x1dSERVER_EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19SERVER_EVENT_TYPE_REQUEST\x10\x01\x12\x1e\n" +
	"\x1aSERVER_EVENT_TYPE_RESPONSE\x10\x02\x12\x1b\n" +
	"\x17SERVER_EVENT_TYPE_ERROR\x10\x03\x12 \n" +
	"\x1cSERVER_EVENT_TYPE_CONNECTION\x10\x04\x12#\n" +
	"\x1fSERVER_EVENT_TYPE_STATUS_CHANGE\x10\x05*\x81\x01\n" +
	"\fHealthStatus\x12\x1d\n" +
	"\x19HEALTH_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15HEALTH_STATUS_HEALTHY\x10\x01\x12\x1a\n" +
	"\x16HEALTH_STATUS_DEGRADED\x10\x02\x12\x1b\n" +
	"\x17HEALTH_STATUS_UNHEALTHY\x10\x03*\x97\x01\n" +
	"\x12ConfigExportFormat\x12$\n" +
	" CONFIG_EXPORT_FORMAT_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19CONFIG_EXPORT_FORMAT_JSON\x10\x01\x12\x1d\n" +
	"\x19CONFIG_EXPORT_FORMAT_YAML\x10\x02\x12\x1d\n" +
	"\x19CONFIG_EXPORT_FORMAT_TOML\x10\x03*\xa2\x01\n" +
	"\x13ConfigMergeStrategy\x12%\n" +
	"!CONFIG_MERGE_STRATEGY_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dCONFIG_MERGE_STRATEGY_REPLACE\x10\x01\x12\x1f\n" +
	"\x1bCONFIG_MERGE_STRATEGY_MERGE\x10\x02\x12 \n" +
	"\x1cCONFIG_MERGE_STRATEGY_UPDATE\x10\x032\x96\v\n" +
	"\n" +
	"WebService\x12Y\n" +
	"\fCreateServer\x12#.gcommon.v1.web.CreateServerRequest\x1a$.gcommon.v1.web.CreateServerResponse\x12V\n" +
	"\vStartServer\x12\".gcommon.v1.web.StartServerRequest\x1a#.gcommon.v1.web.StartServerResponse\x12S\n" +
	"\n" +
	"StopServer\x12!.gcommon.v1.web.StopServerRequest\x1a\".gcommon.v1.web.StopServerResponse\x12b\n" +
	"\x0fGetServerStatus\x12&.gcommon.v1.web.GetServerStatusRequest\x1a'.gcommon.v1.web.GetServerStatusResponse\x12V\n" +
	"\vListServers\x12\".gcommon.v1.web.ListServersRequest\x1a#.gcommon.v1.web.ListServersResponse\x12\\\n" +
	"\rRegisterRoute\x12$.gcommon.v1.web.RegisterRouteRequest\x1a%.gcommon.v1.web.RegisterRouteResponse\x12b\n" +
	"\x0fUnregisterRoute\x12&.gcommon.v1.web.UnregisterRouteRequest\x1a'.gcommon.v1.web.UnregisterRouteResponse\x12S\n" +
	"\n" +
	"ListRoutes\x12!.gcommon.v1.web.ListRoutesRequest\x1a\".gcommon.v1.web.ListRoutesResponse\x12\\\n" +
	"\rAddMiddleware\x12$.gcommon.v1.web.AddMiddlewareRequest\x1a%.gcommon.v1.web.AddMiddlewareResponse\x12e\n" +
	"\x10RemoveMiddleware\x12'.gcommon.v1.web.RemoveMiddlewareRequest\x1a(.gcommon.v1.web.RemoveMiddlewareResponse\x12_\n" +
	"\x0eListMiddleware\x12%.gcommon.v1.web.ListMiddlewareRequest\x1a&.gcommon.v1.web.ListMiddlewareResponse\x12e\n" +
	"\x10GetServerMetrics\x12'.gcommon.v1.web.GetServerMetricsRequest\x1a(.gcommon.v1.web.GetServerMetricsResponse\x12b\n" +
	"\x0fGetRouteMetrics\x12&.gcommon.v1.web.GetRouteMetricsRequest\x1a'.gcommon.v1.web.GetRouteMetricsResponse\x12\\\n" +
	"\rHandleRequest\x12$.gcommon.v1.web.HandleRequestRequest\x1a%.gcommon.v1.web.HandleRequestResponse\x12^\n" +
	"\x12StreamServerEvents\x12).gcommon.v1.web.StreamServerEventsRequest\x1a\x1b.gcommon.v1.web.ServerEvent0\x012\xb2\b\n" +
	"\x0fWebAdminService\x12b\n" +
	"\x0fConfigureGlobal\x12&.gcommon.v1.web.ConfigureGlobalRequest\x1a'.gcommon.v1.web.ConfigureGlobalResponse\x12k\n" +
	"\x12UpdateServerConfig\x12).gcommon.v1.web.UpdateServerConfigRequest\x1a*.gcommon.v1.web.UpdateServerConfigResponse\x12\\\n" +
	"\rGetServerLogs\x12$.gcommon.v1.web.GetServerLogsRequest\x1a%.gcommon.v1.web.GetServerLogsResponse\x12\\\n" +
	"\rGetAccessLogs\x12$.gcommon.v1.web.GetAccessLogsRequest\x1a%.gcommon.v1.web.GetAccessLogsResponse\x12k\n" +
	"\x12ReloadServerConfig\x12).gcommon.v1.web.ReloadServerConfigRequest\x1a*.gcommon.v1.web.ReloadServerConfigResponse\x12t\n" +
	"\x15GetSSLCertificateInfo\x12,.gcommon.v1.web.GetSSLCertificateInfoRequest\x1a-.gcommon.v1.web.GetSSLCertificateInfoResponse\x12q\n" +
	"\x14UpdateSSLCertificate\x12+.gcommon.v1.web.UpdateSSLCertificateRequest\x1a,.gcommon.v1.web.UpdateSSLCertificateResponse\x12b\n" +
	"\x0fGetServerHealth\x12&.gcommon.v1.web.GetServerHealthRequest\x1a'.gcommon.v1.web.GetServerHealthResponse\x12k\n" +
	"\x12ExportServerConfig\x12).gcommon.v1.web.ExportServerConfigRequest\x1a*.gcommon.v1.web.ExportServerConfigResponse\x12k\n" +
	"\x12ImportServerConfig\x12).gcommon.v1.web.ImportServerConfigRequest\x1a*.gcommon.v1.web.ImportServerConfigResponseB\xa9\x01\n" +
	"\x12com.gcommon.v1.webB\bWebProtoP\x01Z'github.com/jdfalk/gcommon/pkg/web/proto\xa2\x02\x03GVW\xaa\x02\x0eGcommon.V1.Web\xca\x02\x0eGcommon\\V1\\Web\xe2\x02\x1aGcommon\\V1\\Web\\GPBMetadata\xea\x02\x10Gcommon::V1::Web\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_web_proto_web_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_pkg_web_proto_web_proto_msgTypes = make([]protoimpl.MessageInfo, 129)
var file_pkg_web_proto_web_proto_goTypes = []any{
	(ClientCertVerification)(0),           // 0: gcommon.v1.web.ClientCertVerification
	(RateLimitStrategy)(0),                // 1: gcommon.v1.web.RateLimitStrategy
	(IPFilterMode)(0),                     // 2: gcommon.v1.web.IPFilterMode
	(AuthSchemeType)(0),                   // 3: gcommon.v1.web.AuthSchemeType
	(MiddlewareType)(0),                   // 4: gcommon.v1.web.MiddlewareType
	(ServerStatus)(0),                     // 5: gcommon.v1.web.ServerStatus
	(HandlerType)(0),                      // 6: gcommon.v1.web.HandlerType
	(ServerMetricType)(0),                 // 7: gcommon.v1.web.ServerMetricType
	(ServerEventType)(0),                  // 8: gcommon.v1.web.ServerEventType
	(HealthStatus)(0),                     // 9: gcommon.v1.web.HealthStatus
	(ConfigExportFormat)(0),               // 10: gcommon.v1.web.ConfigExportFormat
	(ConfigMergeStrategy)(0),              // 11: gcommon.v1.web.ConfigMergeStrategy
	(*CreateServerRequest)(nil),           // 12: gcommon.v1.web.CreateServerRequest
	(*ServerConfig)(nil),                  // 13: gcommon.v1.web.ServerConfig
	(*TLSConfig)(nil),                     // 14: gcommon.v1.web.TLSConfig
	(*HTTPConfig)(nil),                    // 15: gcommon.v1.web.HTTPConfig
	(*CORSConfig)(nil),                    // 16: gcommon.v1.web.CORSConfig
	(*TimeoutConfig)(nil),                 // 17: gcommon.v1.web.TimeoutConfig
	(*SecurityConfig)(nil),                // 18: gcommon.v1.web.SecurityConfig
	(*RateLimitConfig)(nil),               // 19: gcommon.v1.web.RateLimitConfig
	(*IPFilterConfig)(nil),                // 20: gcommon.v1.web.IPFilterConfig
	(*AuthenticationConfig)(nil),          // 21: gcommon.v1.web.AuthenticationConfig
	(*AuthScheme)(nil),                    // 22: gcommon.v1.web.AuthScheme
	(*JWTConfig)(nil),                     // 23: gcommon.v1.web.JWTConfig
	(*BasicAuthConfig)(nil),               // 24: gcommon.v1.web.BasicAuthConfig
	(*SecurityHeadersConfig)(nil),         // 25: gcommon.v1.web.SecurityHeadersConfig
	(*RequestValidationConfig)(nil),       // 26: gcommon.v1.web.RequestValidationConfig
	(*MiddlewareConfig)(nil),              // 27: gcommon.v1.web.MiddlewareConfig
	(*StaticFileConfig)(nil),              // 28: gcommon.v1.web.StaticFileConfig
	(*CreateServerResponse)(nil),          // 29: gcommon.v1.web.CreateServerResponse
	(*ServerInfo)(nil),                    // 30: gcommon.v1.web.ServerInfo
	(*ServerStats)(nil),                   // 31: gcommon.v1.web.ServerStats
	(*StartServerRequest)(nil),            // 32: gcommon.v1.web.StartServerRequest
	(*StartServerResponse)(nil),           // 33: gcommon.v1.web.StartServerResponse
	(*StopServerRequest)(nil),             // 34: gcommon.v1.web.StopServerRequest
	(*StopServerResponse)(nil),            // 35: gcommon.v1.web.StopServerResponse
	(*GetServerStatusRequest)(nil),        // 36: gcommon.v1.web.GetServerStatusRequest
	(*GetServerStatusResponse)(nil),       // 37: gcommon.v1.web.GetServerStatusResponse
	(*ListServersRequest)(nil),            // 38: gcommon.v1.web.ListServersRequest
	(*ListServersResponse)(nil),           // 39: gcommon.v1.web.ListServersResponse
	(*RegisterRouteRequest)(nil),          // 40: gcommon.v1.web.RegisterRouteRequest
	(*RouteConfig)(nil),                   // 41: gcommon.v1.web.RouteConfig
	(*HandlerConfig)(nil),                 // 42: gcommon.v1.web.HandlerConfig
	(*RegisterRouteResponse)(nil),         // 43: gcommon.v1.web.RegisterRouteResponse
	(*RouteInfo)(nil),                     // 44: gcommon.v1.web.RouteInfo
	(*RouteStats)(nil),                    // 45: gcommon.v1.web.RouteStats
	(*ResponseTimePercentiles)(nil),       // 46: gcommon.v1.web.ResponseTimePercentiles
	(*UnregisterRouteRequest)(nil),        // 47: gcommon.v1.web.UnregisterRouteRequest
	(*UnregisterRouteResponse)(nil),       // 48: gcommon.v1.web.UnregisterRouteResponse
	(*ListRoutesRequest)(nil),             // 49: gcommon.v1.web.ListRoutesRequest
	(*ListRoutesResponse)(nil),            // 50: gcommon.v1.web.ListRoutesResponse
	(*AddMiddlewareRequest)(nil),          // 51: gcommon.v1.web.AddMiddlewareRequest
	(*AddMiddlewareResponse)(nil),         // 52: gcommon.v1.web.AddMiddlewareResponse
	(*MiddlewareInfo)(nil),                // 53: gcommon.v1.web.MiddlewareInfo
	(*MiddlewareStats)(nil),               // 54: gcommon.v1.web.MiddlewareStats
	(*RemoveMiddlewareRequest)(nil),       // 55: gcommon.v1.web.RemoveMiddlewareRequest
	(*RemoveMiddlewareResponse)(nil),      // 56: gcommon.v1.web.RemoveMiddlewareResponse
	(*ListMiddlewareRequest)(nil),         // 57: gcommon.v1.web.ListMiddlewareRequest
	(*ListMiddlewareResponse)(nil),        // 58: gcommon.v1.web.ListMiddlewareResponse
	(*GetServerMetricsRequest)(nil),       // 59: gcommon.v1.web.GetServerMetricsRequest
	(*GetServerMetricsResponse)(nil),      // 60: gcommon.v1.web.GetServerMetricsResponse
	(*ServerMetrics)(nil),                 // 61: gcommon.v1.web.ServerMetrics
	(*RequestMetrics)(nil),                // 62: gcommon.v1.web.RequestMetrics
	(*ResponseMetrics)(nil),               // 63: gcommon.v1.web.ResponseMetrics
	(*ConnectionMetrics)(nil),             // 64: gcommon.v1.web.ConnectionMetrics
	(*ErrorMetrics)(nil),                  // 65: gcommon.v1.web.ErrorMetrics
	(*ResourceMetrics)(nil),               // 66: gcommon.v1.web.ResourceMetrics
	(*GCStats)(nil),                       // 67: gcommon.v1.web.GCStats
	(*DataPoint)(nil),                     // 68: gcommon.v1.web.DataPoint
	(*SizeDistribution)(nil),              // 69: gcommon.v1.web.SizeDistribution
	(*SizeBucket)(nil),                    // 70: gcommon.v1.web.SizeBucket
	(*DurationDistribution)(nil),          // 71: gcommon.v1.web.DurationDistribution
	(*DurationBucket)(nil),                // 72: gcommon.v1.web.DurationBucket
	(*RecentError)(nil),                   // 73: gcommon.v1.web.RecentError
	(*GetRouteMetricsRequest)(nil),        // 74: gcommon.v1.web.GetRouteMetricsRequest
	(*GetRouteMetricsResponse)(nil),       // 75: gcommon.v1.web.GetRouteMetricsResponse
	(*RouteMetrics)(nil),                  // 76: gcommon.v1.web.RouteMetrics
	(*PerformanceMetrics)(nil),            // 77: gcommon.v1.web.PerformanceMetrics
	(*HandleRequestRequest)(nil),          // 78: gcommon.v1.web.HandleRequestRequest
	(*HTTPRequest)(nil),                   // 79: gcommon.v1.web.HTTPRequest
	(*RequestContext)(nil),                // 80: gcommon.v1.web.RequestContext
	(*UserInfo)(nil),                      // 81: gcommon.v1.web.UserInfo
	(*SessionInfo)(nil),                   // 82: gcommon.v1.web.SessionInfo
	(*TracingInfo)(nil),                   // 83: gcommon.v1.web.TracingInfo
	(*HandleRequestResponse)(nil),         // 84: gcommon.v1.web.HandleRequestResponse
	(*HTTPResponse)(nil),                  // 85: gcommon.v1.web.HTTPResponse
	(*StreamServerEventsRequest)(nil),     // 86: gcommon.v1.web.StreamServerEventsRequest
	(*ServerEvent)(nil),                   // 87: gcommon.v1.web.ServerEvent
	(*ConfigureGlobalRequest)(nil),        // 88: gcommon.v1.web.ConfigureGlobalRequest
	(*GlobalConfig)(nil),                  // 89: gcommon.v1.web.GlobalConfig
	(*GlobalSecurityConfig)(nil),          // 90: gcommon.v1.web.GlobalSecurityConfig
	(*SecurityPolicy)(nil),                // 91: gcommon.v1.web.SecurityPolicy
	(*CertificateManagement)(nil),         // 92: gcommon.v1.web.CertificateManagement
	(*GlobalLoggingConfig)(nil),           // 93: gcommon.v1.web.GlobalLoggingConfig
	(*LogRotationConfig)(nil),             // 94: gcommon.v1.web.LogRotationConfig
	(*GlobalMonitoringConfig)(nil),        // 95: gcommon.v1.web.GlobalMonitoringConfig
	(*ResourceLimits)(nil),                // 96: gcommon.v1.web.ResourceLimits
	(*ConfigureGlobalResponse)(nil),       // 97: gcommon.v1.web.ConfigureGlobalResponse
	(*UpdateServerConfigRequest)(nil),     // 98: gcommon.v1.web.UpdateServerConfigRequest
	(*UpdateServerConfigResponse)(nil),    // 99: gcommon.v1.web.UpdateServerConfigResponse
	(*GetServerLogsRequest)(nil),          // 100: gcommon.v1.web.GetServerLogsRequest
	(*GetServerLogsResponse)(nil),         // 101: gcommon.v1.web.GetServerLogsResponse
	(*LogEntry)(nil),                      // 102: gcommon.v1.web.LogEntry
	(*GetAccessLogsRequest)(nil),          // 103: gcommon.v1.web.GetAccessLogsRequest
	(*GetAccessLogsResponse)(nil),         // 104: gcommon.v1.web.GetAccessLogsResponse
	(*AccessLogEntry)(nil),                // 105: gcommon.v1.web.AccessLogEntry
	(*ReloadServerConfigRequest)(nil),     // 106: gcommon.v1.web.ReloadServerConfigRequest
	(*ReloadServerConfigResponse)(nil),    // 107: gcommon.v1.web.ReloadServerConfigResponse
	(*GetSSLCertificateInfoRequest)(nil),  // 108: gcommon.v1.web.GetSSLCertificateInfoRequest
	(*GetSSLCertificateInfoResponse)(nil), // 109: gcommon.v1.web.GetSSLCertificateInfoResponse
	(*CertificateInfo)(nil),               // 110: gcommon.v1.web.CertificateInfo
	(*UpdateSSLCertificateRequest)(nil),   // 111: gcommon.v1.web.UpdateSSLCertificateRequest
	(*UpdateSSLCertificateResponse)(nil),  // 112: gcommon.v1.web.UpdateSSLCertificateResponse
	(*GetServerHealthRequest)(nil),        // 113: gcommon.v1.web.GetServerHealthRequest
	(*GetServerHealthResponse)(nil),       // 114: gcommon.v1.web.GetServerHealthResponse
	(*ServerHealthStatus)(nil),            // 115: gcommon.v1.web.ServerHealthStatus
	(*ComponentHealth)(nil),               // 116: gcommon.v1.web.ComponentHealth
	(*ExportServerConfigRequest)(nil),     // 117: gcommon.v1.web.ExportServerConfigRequest
	(*ExportServerConfigResponse)(nil),    // 118: gcommon.v1.web.ExportServerConfigResponse
	(*ImportServerConfigRequest)(nil),     // 119: gcommon.v1.web.ImportServerConfigRequest
	(*ImportServerConfigResponse)(nil),    // 120: gcommon.v1.web.ImportServerConfigResponse
	nil,                                   // 121: gcommon.v1.web.ServerConfig.AttributesEntry
	nil,                                   // 122: gcommon.v1.web.JWTConfig.ClaimsMappingEntry
	nil,                                   // 123: gcommon.v1.web.BasicAuthConfig.UsersEntry
	nil,                                   // 124: gcommon.v1.web.SecurityHeadersConfig.CustomHeadersEntry
	nil,                                   // 125: gcommon.v1.web.RequestValidationConfig.JsonSchemasEntry
	nil,                                   // 126: gcommon.v1.web.RouteConfig.AttributesEntry
	nil,                                   // 127: gcommon.v1.web.HandlerConfig.OptionsEntry
	nil,                                   // 128: gcommon.v1.web.RouteStats.StatusCodesEntry
	nil,                                   // 129: gcommon.v1.web.RequestMetrics.MethodDistributionEntry
	nil,                                   // 130: gcommon.v1.web.ResponseMetrics.StatusCodeDistributionEntry
	nil,                                   // 131: gcommon.v1.web.ConnectionMetrics.ConnectionStateDistributionEntry
	nil,                                   // 132: gcommon.v1.web.ErrorMetrics.ErrorTypeDistributionEntry
	nil,                                   // 133: gcommon.v1.web.HTTPRequest.QueryParamsEntry
	nil,                                   // 134: gcommon.v1.web.HTTPRequest.HeadersEntry
	nil,                                   // 135: gcommon.v1.web.RequestContext.AttributesEntry
	nil,                                   // 136: gcommon.v1.web.UserInfo.AttributesEntry
	nil,                                   // 137: gcommon.v1.web.SessionInfo.DataEntry
	nil,                                   // 138: gcommon.v1.web.HTTPResponse.HeadersEntry
	nil,                                   // 139: gcommon.v1.web.ServerEvent.AttributesEntry
	nil,                                   // 140: gcommon.v1.web.LogEntry.FieldsEntry
	(*messages.RequestMetadata)(nil),      // 141: gcommon.v1.common.RequestMetadata
	(*durationpb.Duration)(nil),           // 142: google.protobuf.Duration
	(*anypb.Any)(nil),                     // 143: google.protobuf.Any
	(*messages.Error)(nil),                // 144: gcommon.v1.common.Error
	(*timestamppb.Timestamp)(nil),         // 145: google.protobuf.Timestamp
	(*messages.Pagination)(nil),           // 146: gcommon.v1.common.Pagination
	(*fieldmaskpb.FieldMask)(nil),         // 147: google.protobuf.FieldMask
}
var file_pkg_web_proto_web_proto_depIdxs = []int32{
	13,  // 0: gcommon.v1.web.CreateServerRequest.config:type_name -> gcommon.v1.web.ServerConfig
	141, // 1: gcommon.v1.web.CreateServerRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	14,  // 2: gcommon.v1.web.ServerConfig.tls_config:type_name -> gcommon.v1.web.TLSConfig
	15,  // 3: gcommon.v1.web.ServerConfig.http_config:type_name -> gcommon.v1.web.HTTPConfig
	17,  // 4: gcommon.v1.web.ServerConfig.timeout_config:type_name -> gcommon.v1.web.TimeoutConfig
	18,  // 5: gcommon.v1.web.ServerConfig.security_config:type_name -> gcommon.v1.web.SecurityConfig
	27,  // 6: gcommon.v1.web.ServerConfig.middleware:type_name -> gcommon.v1.web.MiddlewareConfig
	28,  // 7: gcommon.v1.web.ServerConfig.static_config:type_name -> gcommon.v1.web.StaticFileConfig
	121, // 8: gcommon.v1.web.ServerConfig.attributes:type_name -> gcommon.v1.web.ServerConfig.AttributesEntry
	0,   // 9: gcommon.v1.web.TLSConfig.client_cert_verification:type_name -> gcommon.v1.web.ClientCertVerification
	16,  // 10: gcommon.v1.web.HTTPConfig.cors_config:type_name -> gcommon.v1.web.CORSConfig
	142, // 11: gcommon.v1.web.HTTPConfig.keep_alive_timeout:type_name -> google.protobuf.Duration
	142, // 12: gcommon.v1.web.CORSConfig.max_age:type_name -> google.protobuf.Duration
	142, // 13: gcommon.v1.web.TimeoutConfig.read_timeout:type_name -> google.protobuf.Duration
	142, // 14: gcommon.v1.web.TimeoutConfig.write_timeout:type_name -> google.protobuf.Duration
	142, // 15: gcommon.v1.web.TimeoutConfig.idle_timeout:type_name -> google.protobuf.Duration
	142, // 16: gcommon.v1.web.TimeoutConfig.request_timeout:type_name -> google.protobuf.Duration
	142, // 17: gcommon.v1.web.TimeoutConfig.shutdown_timeout:type_name -> google.protobuf.Duration
	19,  // 18: gcommon.v1.web.SecurityConfig.rate_limit:type_name -> gcommon.v1.web.RateLimitConfig
	20,  // 19: gcommon.v1.web.SecurityConfig.ip_filter:type_name -> gcommon.v1.web.IPFilterConfig
	21,  // 20: gcommon.v1.web.SecurityConfig.authentication:type_name -> gcommon.v1.web.AuthenticationConfig
	25,  // 21: gcommon.v1.web.SecurityConfig.security_headers:type_name -> gcommon.v1.web.SecurityHeadersConfig
	26,  // 22: gcommon.v1.web.SecurityConfig.request_validation:type_name -> gcommon.v1.web.RequestValidationConfig
	1,   // 23: gcommon.v1.web.RateLimitConfig.strategy:type_name -> gcommon.v1.web.RateLimitStrategy
	2,   // 24: gcommon.v1.web.IPFilterConfig.mode:type_name -> gcommon.v1.web.IPFilterMode
	22,  // 25: gcommon.v1.web.AuthenticationConfig.schemes:type_name -> gcommon.v1.web.AuthScheme
	23,  // 26: gcommon.v1.web.AuthenticationConfig.jwt_config:type_name -> gcommon.v1.web.JWTConfig
	24,  // 27: gcommon.v1.web.AuthenticationConfig.basic_auth_config:type_name -> gcommon.v1.web.BasicAuthConfig
	3,   // 28: gcommon.v1.web.AuthScheme.type:type_name -> gcommon.v1.web.AuthSchemeType
	143, // 29: gcommon.v1.web.AuthScheme.config:type_name -> google.protobuf.Any
	142, // 30: gcommon.v1.web.JWTConfig.expiration:type_name -> google.protobuf.Duration
	122, // 31: gcommon.v1.web.JWTConfig.claims_mapping:type_name -> gcommon.v1.web.JWTConfig.ClaimsMappingEntry
	123, // 32: gcommon.v1.web.BasicAuthConfig.users:type_name -> gcommon.v1.web.BasicAuthConfig.UsersEntry
	124, // 33: gcommon.v1.web.SecurityHeadersConfig.custom_headers:type_name -> gcommon.v1.web.SecurityHeadersConfig.CustomHeadersEntry
	125, // 34: gcommon.v1.web.RequestValidationConfig.json_schemas:type_name -> gcommon.v1.web.RequestValidationConfig.JsonSchemasEntry
	4,   // 35: gcommon.v1.web.MiddlewareConfig.type:type_name -> gcommon.v1.web.MiddlewareType
	143, // 36: gcommon.v1.web.MiddlewareConfig.config:type_name -> google.protobuf.Any
	30,  // 37: gcommon.v1.web.CreateServerResponse.server:type_name -> gcommon.v1.web.ServerInfo
	144, // 38: gcommon.v1.web.CreateServerResponse.error:type_name -> gcommon.v1.common.Error
	13,  // 39: gcommon.v1.web.ServerInfo.config:type_name -> gcommon.v1.web.ServerConfig
	5,   // 40: gcommon.v1.web.ServerInfo.status:type_name -> gcommon.v1.web.ServerStatus
	31,  // 41: gcommon.v1.web.ServerInfo.stats:type_name -> gcommon.v1.web.ServerStats
	145, // 42: gcommon.v1.web.ServerInfo.created_at:type_name -> google.protobuf.Timestamp
	145, // 43: gcommon.v1.web.ServerInfo.updated_at:type_name -> google.protobuf.Timestamp
	142, // 44: gcommon.v1.web.ServerStats.avg_response_time:type_name -> google.protobuf.Duration
	142, // 45: gcommon.v1.web.ServerStats.uptime:type_name -> google.protobuf.Duration
	141, // 46: gcommon.v1.web.StartServerRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	5,   // 47: gcommon.v1.web.StartServerResponse.status:type_name -> gcommon.v1.web.ServerStatus
	144, // 48: gcommon.v1.web.StartServerResponse.error:type_name -> gcommon.v1.common.Error
	142, // 49: gcommon.v1.web.StopServerRequest.graceful_timeout:type_name -> google.protobuf.Duration
	141, // 50: gcommon.v1.web.StopServerRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	5,   // 51: gcommon.v1.web.StopServerResponse.status:type_name -> gcommon.v1.web.ServerStatus
	144, // 52: gcommon.v1.web.StopServerResponse.error:type_name -> gcommon.v1.common.Error
	141, // 53: gcommon.v1.web.GetServerStatusRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	30,  // 54: gcommon.v1.web.GetServerStatusResponse.server:type_name -> gcommon.v1.web.ServerInfo
	144, // 55: gcommon.v1.web.GetServerStatusResponse.error:type_name -> gcommon.v1.common.Error
	5,   // 56: gcommon.v1.web.ListServersRequest.status:type_name -> gcommon.v1.web.ServerStatus
	146, // 57: gcommon.v1.web.ListServersRequest.pagination:type_name -> gcommon.v1.common.Pagination
	141, // 58: gcommon.v1.web.ListServersRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	30,  // 59: gcommon.v1.web.ListServersResponse.servers:type_name -> gcommon.v1.web.ServerInfo
	146, // 60: gcommon.v1.web.ListServersResponse.pagination:type_name -> gcommon.v1.common.Pagination
	144, // 61: gcommon.v1.web.ListServersResponse.error:type_name -> gcommon.v1.common.Error
	41,  // 62: gcommon.v1.web.RegisterRouteRequest.route:type_name -> gcommon.v1.web.RouteConfig
	141, // 63: gcommon.v1.web.RegisterRouteRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	42,  // 64: gcommon.v1.web.RouteConfig.handler:type_name -> gcommon.v1.web.HandlerConfig
	27,  // 65: gcommon.v1.web.RouteConfig.middleware:type_name -> gcommon.v1.web.MiddlewareConfig
	126, // 66: gcommon.v1.web.RouteConfig.attributes:type_name -> gcommon.v1.web.RouteConfig.AttributesEntry
	142, // 67: gcommon.v1.web.RouteConfig.timeout:type_name -> google.protobuf.Duration
	142, // 68: gcommon.v1.web.RouteConfig.cache_ttl:type_name -> google.protobuf.Duration
	6,   // 69: gcommon.v1.web.HandlerConfig.type:type_name -> gcommon.v1.web.HandlerType
	143, // 70: gcommon.v1.web.HandlerConfig.config:type_name -> google.protobuf.Any
	127, // 71: gcommon.v1.web.HandlerConfig.options:type_name -> gcommon.v1.web.HandlerConfig.OptionsEntry
	44,  // 72: gcommon.v1.web.RegisterRouteResponse.route:type_name -> gcommon.v1.web.RouteInfo
	144, // 73: gcommon.v1.web.RegisterRouteResponse.error:type_name -> gcommon.v1.common.Error
	41,  // 74: gcommon.v1.web.RouteInfo.config:type_name -> gcommon.v1.web.RouteConfig
	45,  // 75: gcommon.v1.web.RouteInfo.stats:type_name -> gcommon.v1.web.RouteStats
	145, // 76: gcommon.v1.web.RouteInfo.created_at:type_name -> google.protobuf.Timestamp
	145, // 77: gcommon.v1.web.RouteInfo.updated_at:type_name -> google.protobuf.Timestamp
	142, // 78: gcommon.v1.web.RouteStats.avg_response_time:type_name -> google.protobuf.Duration
	46,  // 79: gcommon.v1.web.RouteStats.response_time_percentiles:type_name -> gcommon.v1.web.ResponseTimePercentiles
	128, // 80: gcommon.v1.web.RouteStats.status_codes:type_name -> gcommon.v1.web.RouteStats.StatusCodesEntry
	145, // 81: gcommon.v1.web.RouteStats.last_request_time:type_name -> google.protobuf.Timestamp
	142, // 82: gcommon.v1.web.ResponseTimePercentiles.p50:type_name -> google.protobuf.Duration
	142, // 83: gcommon.v1.web.ResponseTimePercentiles.p90:type_name -> google.protobuf.Duration
	142, // 84: gcommon.v1.web.ResponseTimePercentiles.p95:type_name -> google.protobuf.Duration
	142, // 85: gcommon.v1.web.ResponseTimePercentiles.p99:type_name -> google.protobuf.Duration
	141, // 86: gcommon.v1.web.UnregisterRouteRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	144, // 87: gcommon.v1.web.UnregisterRouteResponse.error:type_name -> gcommon.v1.common.Error
	146, // 88: gcommon.v1.web.ListRoutesRequest.pagination:type_name -> gcommon.v1.common.Pagination
	141, // 89: gcommon.v1.web.ListRoutesRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	44,  // 90: gcommon.v1.web.ListRoutesResponse.routes:type_name -> gcommon.v1.web.RouteInfo
	146, // 91: gcommon.v1.web.ListRoutesResponse.pagination:type_name -> gcommon.v1.common.Pagination
	144, // 92: gcommon.v1.web.ListRoutesResponse.error:type_name -> gcommon.v1.common.Error
	27,  // 93: gcommon.v1.web.AddMiddlewareRequest.middleware:type_name -> gcommon.v1.web.MiddlewareConfig
	141, // 94: gcommon.v1.web.AddMiddlewareRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	53,  // 95: gcommon.v1.web.AddMiddlewareResponse.middleware:type_name -> gcommon.v1.web.MiddlewareInfo
	144, // 96: gcommon.v1.web.AddMiddlewareResponse.error:type_name -> gcommon.v1.common.Error
	27,  // 97: gcommon.v1.web.MiddlewareInfo.config:type_name -> gcommon.v1.web.MiddlewareConfig
	54,  // 98: gcommon.v1.web.MiddlewareInfo.stats:type_name -> gcommon.v1.web.MiddlewareStats
	145, // 99: gcommon.v1.web.MiddlewareInfo.created_at:type_name -> google.protobuf.Timestamp
	145, // 100: gcommon.v1.web.MiddlewareInfo.updated_at:type_name -> google.protobuf.Timestamp
	142, // 101: gcommon.v1.web.MiddlewareStats.avg_execution_time:type_name -> google.protobuf.Duration
	145, // 102: gcommon.v1.web.MiddlewareStats.last_execution_time:type_name -> google.protobuf.Timestamp
	141, // 103: gcommon.v1.web.RemoveMiddlewareRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	144, // 104: gcommon.v1.web.RemoveMiddlewareResponse.error:type_name -> gcommon.v1.common.Error
	4,   // 105: gcommon.v1.web.ListMiddlewareRequest.type:type_name -> gcommon.v1.web.MiddlewareType
	146, // 106: gcommon.v1.web.ListMiddlewareRequest.pagination:type_name -> gcommon.v1.common.Pagination
	141, // 107: gcommon.v1.web.ListMiddlewareRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	53,  // 108: gcommon.v1.web.ListMiddlewareResponse.middleware:type_name -> gcommon.v1.web.MiddlewareInfo
	146, // 109: gcommon.v1.web.ListMiddlewareResponse.pagination:type_name -> gcommon.v1.common.Pagination
	144, // 110: gcommon.v1.web.ListMiddlewareResponse.error:type_name -> gcommon.v1.common.Error
	7,   // 111: gcommon.v1.web.GetServerMetricsRequest.metric_types:type_name -> gcommon.v1.web.ServerMetricType
	145, // 112: gcommon.v1.web.GetServerMetricsRequest.start_time:type_name -> google.protobuf.Timestamp
	145, // 113: gcommon.v1.web.GetServerMetricsRequest.end_time:type_name -> google.protobuf.Timestamp
	141, // 114: gcommon.v1.web.GetServerMetricsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	61,  // 115: gcommon.v1.web.GetServerMetricsResponse.metrics:type_name -> gcommon.v1.web.ServerMetrics
	144, // 116: gcommon.v1.web.GetServerMetricsResponse.error:type_name -> gcommon.v1.common.Error
	62,  // 117: gcommon.v1.web.ServerMetrics.request_metrics:type_name -> gcommon.v1.web.RequestMetrics
	63,  // 118: gcommon.v1.web.ServerMetrics.response_metrics:type_name -> gcommon.v1.web.ResponseMetrics
	64,  // 119: gcommon.v1.web.ServerMetrics.connection_metrics:type_name -> gcommon.v1.web.ConnectionMetrics
	65,  // 120: gcommon.v1.web.ServerMetrics.error_metrics:type_name -> gcommon.v1.web.ErrorMetrics
	66,  // 121: gcommon.v1.web.ServerMetrics.resource_metrics:type_name -> gcommon.v1.web.ResourceMetrics
	68,  // 122: gcommon.v1.web.RequestMetrics.request_rate_trend:type_name -> gcommon.v1.web.DataPoint
	69,  // 123: gcommon.v1.web.RequestMetrics.request_size_distribution:type_name -> gcommon.v1.web.SizeDistribution
	129, // 124: gcommon.v1.web.RequestMetrics.method_distribution:type_name -> gcommon.v1.web.RequestMetrics.MethodDistributionEntry
	142, // 125: gcommon.v1.web.ResponseMetrics.avg_response_time:type_name -> google.protobuf.Duration
	46,  // 126: gcommon.v1.web.ResponseMetrics.response_time_percentiles:type_name -> gcommon.v1.web.ResponseTimePercentiles
	68,  // 127: gcommon.v1.web.ResponseMetrics.response_time_trend:type_name -> gcommon.v1.web.DataPoint
	69,  // 128: gcommon.v1.web.ResponseMetrics.response_size_distribution:type_name -> gcommon.v1.web.SizeDistribution
	130, // 129: gcommon.v1.web.ResponseMetrics.status_code_distribution:type_name -> gcommon.v1.web.ResponseMetrics.StatusCodeDistributionEntry
	71,  // 130: gcommon.v1.web.ConnectionMetrics.connection_duration_distribution:type_name -> gcommon.v1.web.DurationDistribution
	131, // 131: gcommon.v1.web.ConnectionMetrics.connection_state_distribution:type_name -> gcommon.v1.web.ConnectionMetrics.ConnectionStateDistributionEntry
	68,  // 132: gcommon.v1.web.ErrorMetrics.error_trend:type_name -> gcommon.v1.web.DataPoint
	132, // 133: gcommon.v1.web.ErrorMetrics.error_type_distribution:type_name -> gcommon.v1.web.ErrorMetrics.ErrorTypeDistributionEntry
	73,  // 134: gcommon.v1.web.ErrorMetrics.recent_errors:type_name -> gcommon.v1.web.RecentError
	67,  // 135: gcommon.v1.web.ResourceMetrics.gc_stats:type_name -> gcommon.v1.web.GCStats
	142, // 136: gcommon.v1.web.GCStats.total_pause_time:type_name -> google.protobuf.Duration
	142, // 137: gcommon.v1.web.GCStats.avg_pause_time:type_name -> google.protobuf.Duration
	145, // 138: gcommon.v1.web.DataPoint.timestamp:type_name -> google.protobuf.Timestamp
	70,  // 139: gcommon.v1.web.SizeDistribution.size_buckets:type_name -> gcommon.v1.web.SizeBucket
	142, // 140: gcommon.v1.web.DurationDistribution.min_duration:type_name -> google.protobuf.Duration
	142, // 141: gcommon.v1.web.DurationDistribution.max_duration:type_name -> google.protobuf.Duration
	142, // 142: gcommon.v1.web.DurationDistribution.avg_duration:type_name -> google.protobuf.Duration
	72,  // 143: gcommon.v1.web.DurationDistribution.duration_buckets:type_name -> gcommon.v1.web.DurationBucket
	142, // 144: gcommon.v1.web.DurationBucket.upper_bound:type_name -> google.protobuf.Duration
	145, // 145: gcommon.v1.web.RecentError.last_occurrence:type_name -> google.protobuf.Timestamp
	145, // 146: gcommon.v1.web.GetRouteMetricsRequest.start_time:type_name -> google.protobuf.Timestamp
	145, // 147: gcommon.v1.web.GetRouteMetricsRequest.end_time:type_name -> google.protobuf.Timestamp
	141, // 148: gcommon.v1.web.GetRouteMetricsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	76,  // 149: gcommon.v1.web.GetRouteMetricsResponse.metrics:type_name -> gcommon.v1.web.RouteMetrics
	144, // 150: gcommon.v1.web.GetRouteMetricsResponse.error:type_name -> gcommon.v1.common.Error
	62,  // 151: gcommon.v1.web.RouteMetrics.request_metrics:type_name -> gcommon.v1.web.RequestMetrics
	63,  // 152: gcommon.v1.web.RouteMetrics.response_metrics:type_name -> gcommon.v1.web.ResponseMetrics
	65,  // 153: gcommon.v1.web.RouteMetrics.error_metrics:type_name -> gcommon.v1.web.ErrorMetrics
	77,  // 154: gcommon.v1.web.RouteMetrics.performance_metrics:type_name -> gcommon.v1.web.PerformanceMetrics
	46,  // 155: gcommon.v1.web.PerformanceMetrics.latency_percentiles:type_name -> gcommon.v1.web.ResponseTimePercentiles
	142, // 156: gcommon.v1.web.PerformanceMetrics.avg_db_query_time:type_name -> google.protobuf.Duration
	79,  // 157: gcommon.v1.web.HandleRequestRequest.request:type_name -> gcommon.v1.web.HTTPRequest
	80,  // 158: gcommon.v1.web.HandleRequestRequest.context:type_name -> gcommon.v1.web.RequestContext
	141, // 159: gcommon.v1.web.HandleRequestRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	133, // 160: gcommon.v1.web.HTTPRequest.query_params:type_name -> gcommon.v1.web.HTTPRequest.QueryParamsEntry
	134, // 161: gcommon.v1.web.HTTPRequest.headers:type_name -> gcommon.v1.web.HTTPRequest.HeadersEntry
	81,  // 162: gcommon.v1.web.RequestContext.user:type_name -> gcommon.v1.web.UserInfo
	82,  // 163: gcommon.v1.web.RequestContext.session:type_name -> gcommon.v1.web.SessionInfo
	83,  // 164: gcommon.v1.web.RequestContext.tracing:type_name -> gcommon.v1.web.TracingInfo
	135, // 165: gcommon.v1.web.RequestContext.attributes:type_name -> gcommon.v1.web.RequestContext.AttributesEntry
	145, // 166: gcommon.v1.web.RequestContext.timestamp:type_name -> google.protobuf.Timestamp
	136, // 167: gcommon.v1.web.UserInfo.attributes:type_name -> gcommon.v1.web.UserInfo.AttributesEntry
	137, // 168: gcommon.v1.web.SessionInfo.data:type_name -> gcommon.v1.web.SessionInfo.DataEntry
	145, // 169: gcommon.v1.web.SessionInfo.created_at:type_name -> google.protobuf.Timestamp
	145, // 170: gcommon.v1.web.SessionInfo.expires_at:type_name -> google.protobuf.Timestamp
	85,  // 171: gcommon.v1.web.HandleRequestResponse.response:type_name -> gcommon.v1.web.HTTPResponse
	142, // 172: gcommon.v1.web.HandleRequestResponse.processing_time:type_name -> google.protobuf.Duration
	144, // 173: gcommon.v1.web.HandleRequestResponse.error:type_name -> gcommon.v1.common.Error
	138, // 174: gcommon.v1.web.HTTPResponse.headers:type_name -> gcommon.v1.web.HTTPResponse.HeadersEntry
	8,   // 175: gcommon.v1.web.StreamServerEventsRequest.event_types:type_name -> gcommon.v1.web.ServerEventType
	141, // 176: gcommon.v1.web.StreamServerEventsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	8,   // 177: gcommon.v1.web.ServerEvent.event_type:type_name -> gcommon.v1.web.ServerEventType
	145, // 178: gcommon.v1.web.ServerEvent.timestamp:type_name -> google.protobuf.Timestamp
	143, // 179: gcommon.v1.web.ServerEvent.event_data:type_name -> google.protobuf.Any
	139, // 180: gcommon.v1.web.ServerEvent.attributes:type_name -> gcommon.v1.web.ServerEvent.AttributesEntry
	89,  // 181: gcommon.v1.web.ConfigureGlobalRequest.config:type_name -> gcommon.v1.web.GlobalConfig
	141, // 182: gcommon.v1.web.ConfigureGlobalRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	13,  // 183: gcommon.v1.web.GlobalConfig.default_server_config:type_name -> gcommon.v1.web.ServerConfig
	90,  // 184: gcommon.v1.web.GlobalConfig.security:type_name -> gcommon.v1.web.GlobalSecurityConfig
	93,  // 185: gcommon.v1.web.GlobalConfig.logging:type_name -> gcommon.v1.web.GlobalLoggingConfig
	95,  // 186: gcommon.v1.web.GlobalConfig.monitoring:type_name -> gcommon.v1.web.GlobalMonitoringConfig
	96,  // 187: gcommon.v1.web.GlobalConfig.resource_limits:type_name -> gcommon.v1.web.ResourceLimits
	14,  // 188: gcommon.v1.web.GlobalSecurityConfig.default_tls:type_name -> gcommon.v1.web.TLSConfig
	91,  // 189: gcommon.v1.web.GlobalSecurityConfig.security_policy:type_name -> gcommon.v1.web.SecurityPolicy
	92,  // 190: gcommon.v1.web.GlobalSecurityConfig.certificate_management:type_name -> gcommon.v1.web.CertificateManagement
	142, // 191: gcommon.v1.web.CertificateManagement.renewal_threshold:type_name -> google.protobuf.Duration
	94,  // 192: gcommon.v1.web.GlobalLoggingConfig.log_rotation:type_name -> gcommon.v1.web.LogRotationConfig
	142, // 193: gcommon.v1.web.LogRotationConfig.rotation_interval:type_name -> google.protobuf.Duration
	142, // 194: gcommon.v1.web.GlobalMonitoringConfig.metrics_interval:type_name -> google.protobuf.Duration
	142, // 195: gcommon.v1.web.GlobalMonitoringConfig.health_check_interval:type_name -> google.protobuf.Duration
	89,  // 196: gcommon.v1.web.ConfigureGlobalResponse.config:type_name -> gcommon.v1.web.GlobalConfig
	144, // 197: gcommon.v1.web.ConfigureGlobalResponse.error:type_name -> gcommon.v1.common.Error
	13,  // 198: gcommon.v1.web.UpdateServerConfigRequest.config:type_name -> gcommon.v1.web.ServerConfig
	147, // 199: gcommon.v1.web.UpdateServerConfigRequest.update_mask:type_name -> google.protobuf.FieldMask
	141, // 200: gcommon.v1.web.UpdateServerConfigRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	30,  // 201: gcommon.v1.web.UpdateServerConfigResponse.server:type_name -> gcommon.v1.web.ServerInfo
	144, // 202: gcommon.v1.web.UpdateServerConfigResponse.error:type_name -> gcommon.v1.common.Error
	145, // 203: gcommon.v1.web.GetServerLogsRequest.start_time:type_name -> google.protobuf.Timestamp
	145, // 204: gcommon.v1.web.GetServerLogsRequest.end_time:type_name -> google.protobuf.Timestamp
	146, // 205: gcommon.v1.web.GetServerLogsRequest.pagination:type_name -> gcommon.v1.common.Pagination
	141, // 206: gcommon.v1.web.GetServerLogsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	102, // 207: gcommon.v1.web.GetServerLogsResponse.log_entries:type_name -> gcommon.v1.web.LogEntry
	146, // 208: gcommon.v1.web.GetServerLogsResponse.pagination:type_name -> gcommon.v1.common.Pagination
	144, // 209: gcommon.v1.web.GetServerLogsResponse.error:type_name -> gcommon.v1.common.Error
	145, // 210: gcommon.v1.web.LogEntry.timestamp:type_name -> google.protobuf.Timestamp
	140, // 211: gcommon.v1.web.LogEntry.fields:type_name -> gcommon.v1.web.LogEntry.FieldsEntry
	145, // 212: gcommon.v1.web.GetAccessLogsRequest.start_time:type_name -> google.protobuf.Timestamp
	145, // 213: gcommon.v1.web.GetAccessLogsRequest.end_time:type_name -> google.protobuf.Timestamp
	146, // 214: gcommon.v1.web.GetAccessLogsRequest.pagination:type_name -> gcommon.v1.common.Pagination
	141, // 215: gcommon.v1.web.GetAccessLogsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	105, // 216: gcommon.v1.web.GetAccessLogsResponse.access_logs:type_name -> gcommon.v1.web.AccessLogEntry
	146, // 217: gcommon.v1.web.GetAccessLogsResponse.pagination:type_name -> gcommon.v1.common.Pagination
	144, // 218: gcommon.v1.web.GetAccessLogsResponse.error:type_name -> gcommon.v1.common.Error
	145, // 219: gcommon.v1.web.AccessLogEntry.timestamp:type_name -> google.protobuf.Timestamp
	142, // 220: gcommon.v1.web.AccessLogEntry.response_time:type_name -> google.protobuf.Duration
	141, // 221: gcommon.v1.web.ReloadServerConfigRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	13,  // 222: gcommon.v1.web.ReloadServerConfigResponse.config:type_name -> gcommon.v1.web.ServerConfig
	144, // 223: gcommon.v1.web.ReloadServerConfigResponse.error:type_name -> gcommon.v1.common.Error
	141, // 224: gcommon.v1.web.GetSSLCertificateInfoRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	110, // 225: gcommon.v1.web.GetSSLCertificateInfoResponse.certificate:type_name -> gcommon.v1.web.CertificateInfo
	144, // 226: gcommon.v1.web.GetSSLCertificateInfoResponse.error:type_name -> gcommon.v1.common.Error
	145, // 227: gcommon.v1.web.CertificateInfo.not_before:type_name -> google.protobuf.Timestamp
	145, // 228: gcommon.v1.web.CertificateInfo.not_after:type_name -> google.protobuf.Timestamp
	141, // 229: gcommon.v1.web.UpdateSSLCertificateRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	110, // 230: gcommon.v1.web.UpdateSSLCertificateResponse.certificate:type_name -> gcommon.v1.web.CertificateInfo
	144, // 231: gcommon.v1.web.UpdateSSLCertificateResponse.error:type_name -> gcommon.v1.common.Error
	141, // 232: gcommon.v1.web.GetServerHealthRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	115, // 233: gcommon.v1.web.GetServerHealthResponse.health:type_name -> gcommon.v1.web.ServerHealthStatus
	144, // 234: gcommon.v1.web.GetServerHealthResponse.error:type_name -> gcommon.v1.common.Error
	9,   // 235: gcommon.v1.web.ServerHealthStatus.overall_health:type_name -> gcommon.v1.web.HealthStatus
	116, // 236: gcommon.v1.web.ServerHealthStatus.component_health:type_name -> gcommon.v1.web.ComponentHealth
	145, // 237: gcommon.v1.web.ServerHealthStatus.last_check_time:type_name -> google.protobuf.Timestamp
	142, // 238: gcommon.v1.web.ServerHealthStatus.check_duration:type_name -> google.protobuf.Duration
	9,   // 239: gcommon.v1.web.ComponentHealth.status:type_name -> gcommon.v1.web.HealthStatus
	145, // 240: gcommon.v1.web.ComponentHealth.last_check_time:type_name -> google.protobuf.Timestamp
	10,  // 241: gcommon.v1.web.ExportServerConfigRequest.format:type_name -> gcommon.v1.web.ConfigExportFormat
	141, // 242: gcommon.v1.web.ExportServerConfigRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	10,  // 243: gcommon.v1.web.ExportServerConfigResponse.format:type_name -> gcommon.v1.web.ConfigExportFormat
	144, // 244: gcommon.v1.web.ExportServerConfigResponse.error:type_name -> gcommon.v1.common.Error
	10,  // 245: gcommon.v1.web.ImportServerConfigRequest.format:type_name -> gcommon.v1.web.ConfigExportFormat
	11,  // 246: gcommon.v1.web.ImportServerConfigRequest.merge_strategy:type_name -> gcommon.v1.web.ConfigMergeStrategy
	141, // 247: gcommon.v1.web.ImportServerConfigRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	30,  // 248: gcommon.v1.web.ImportServerConfigResponse.server:type_name -> gcommon.v1.web.ServerInfo
	144, // 249: gcommon.v1.web.ImportServerConfigResponse.error:type_name -> gcommon.v1.common.Error
	12,  // 250: gcommon.v1.web.WebService.CreateServer:input_type -> gcommon.v1.web.CreateServerRequest
	32,  // 251: gcommon.v1.web.WebService.StartServer:input_type -> gcommon.v1.web.StartServerRequest
	34,  // 252: gcommon.v1.web.WebService.StopServer:input_type -> gcommon.v1.web.StopServerRequest
	36,  // 253: gcommon.v1.web.WebService.GetServerStatus:input_type -> gcommon.v1.web.GetServerStatusRequest
	38,  // 254: gcommon.v1.web.WebService.ListServers:input_type -> gcommon.v1.web.ListServersRequest
	40,  // 255: gcommon.v1.web.WebService.RegisterRoute:input_type -> gcommon.v1.web.RegisterRouteRequest
	47,  // 256: gcommon.v1.web.WebService.UnregisterRoute:input_type -> gcommon.v1.web.UnregisterRouteRequest
	49,  // 257: gcommon.v1.web.WebService.ListRoutes:input_type -> gcommon.v1.web.ListRoutesRequest
	51,  // 258: gcommon.v1.web.WebService.AddMiddleware:input_type -> gcommon.v1.web.AddMiddlewareRequest
	55,  // 259: gcommon.v1.web.WebService.RemoveMiddleware:input_type -> gcommon.v1.web.RemoveMiddlewareRequest
	57,  // 260: gcommon.v1.web.WebService.ListMiddleware:input_type -> gcommon.v1.web.ListMiddlewareRequest
	59,  // 261: gcommon.v1.web.WebService.GetServerMetrics:input_type -> gcommon.v1.web.GetServerMetricsRequest
	74,  // 262: gcommon.v1.web.WebService.GetRouteMetrics:input_type -> gcommon.v1.web.GetRouteMetricsRequest
	78,  // 263: gcommon.v1.web.WebService.HandleRequest:input_type -> gcommon.v1.web.HandleRequestRequest
	86,  // 264: gcommon.v1.web.WebService.StreamServerEvents:input_type -> gcommon.v1.web.StreamServerEventsRequest
	88,  // 265: gcommon.v1.web.WebAdminService.ConfigureGlobal:input_type -> gcommon.v1.web.ConfigureGlobalRequest
	98,  // 266: gcommon.v1.web.WebAdminService.UpdateServerConfig:input_type -> gcommon.v1.web.UpdateServerConfigRequest
	100, // 267: gcommon.v1.web.WebAdminService.GetServerLogs:input_type -> gcommon.v1.web.GetServerLogsRequest
	103, // 268: gcommon.v1.web.WebAdminService.GetAccessLogs:input_type -> gcommon.v1.web.GetAccessLogsRequest
	106, // 269: gcommon.v1.web.WebAdminService.ReloadServerConfig:input_type -> gcommon.v1.web.ReloadServerConfigRequest
	108, // 270: gcommon.v1.web.WebAdminService.GetSSLCertificateInfo:input_type -> gcommon.v1.web.GetSSLCertificateInfoRequest
	111, // 271: gcommon.v1.web.WebAdminService.UpdateSSLCertificate:input_type -> gcommon.v1.web.UpdateSSLCertificateRequest
	113, // 272: gcommon.v1.web.WebAdminService.GetServerHealth:input_type -> gcommon.v1.web.GetServerHealthRequest
	117, // 273: gcommon.v1.web.WebAdminService.ExportServerConfig:input_type -> gcommon.v1.web.ExportServerConfigRequest
	119, // 274: gcommon.v1.web.WebAdminService.ImportServerConfig:input_type -> gcommon.v1.web.ImportServerConfigRequest
	29,  // 275: gcommon.v1.web.WebService.CreateServer:output_type -> gcommon.v1.web.CreateServerResponse
	33,  // 276: gcommon.v1.web.WebService.StartServer:output_type -> gcommon.v1.web.StartServerResponse
	35,  // 277: gcommon.v1.web.WebService.StopServer:output_type -> gcommon.v1.web.StopServerResponse
	37,  // 278: gcommon.v1.web.WebService.GetServerStatus:output_type -> gcommon.v1.web.GetServerStatusResponse
	39,  // 279: gcommon.v1.web.WebService.ListServers:output_type -> gcommon.v1.web.ListServersResponse
	43,  // 280: gcommon.v1.web.WebService.RegisterRoute:output_type -> gcommon.v1.web.RegisterRouteResponse
	48,  // 281: gcommon.v1.web.WebService.UnregisterRoute:output_type -> gcommon.v1.web.UnregisterRouteResponse
	50,  // 282: gcommon.v1.web.WebService.ListRoutes:output_type -> gcommon.v1.web.ListRoutesResponse
	52,  // 283: gcommon.v1.web.WebService.AddMiddleware:output_type -> gcommon.v1.web.AddMiddlewareResponse
	56,  // 284: gcommon.v1.web.WebService.RemoveMiddleware:output_type -> gcommon.v1.web.RemoveMiddlewareResponse
	58,  // 285: gcommon.v1.web.WebService.ListMiddleware:output_type -> gcommon.v1.web.ListMiddlewareResponse
	60,  // 286: gcommon.v1.web.WebService.GetServerMetrics:output_type -> gcommon.v1.web.GetServerMetricsResponse
	75,  // 287: gcommon.v1.web.WebService.GetRouteMetrics:output_type -> gcommon.v1.web.GetRouteMetricsResponse
	84,  // 288: gcommon.v1.web.WebService.HandleRequest:output_type -> gcommon.v1.web.HandleRequestResponse
	87,  // 289: gcommon.v1.web.WebService.StreamServerEvents:output_type -> gcommon.v1.web.ServerEvent
	97,  // 290: gcommon.v1.web.WebAdminService.ConfigureGlobal:output_type -> gcommon.v1.web.ConfigureGlobalResponse
	99,  // 291: gcommon.v1.web.WebAdminService.UpdateServerConfig:output_type -> gcommon.v1.web.UpdateServerConfigResponse
	101, // 292: gcommon.v1.web.WebAdminService.GetServerLogs:output_type -> gcommon.v1.web.GetServerLogsResponse
	104, // 293: gcommon.v1.web.WebAdminService.GetAccessLogs:output_type -> gcommon.v1.web.GetAccessLogsResponse
	107, // 294: gcommon.v1.web.WebAdminService.ReloadServerConfig:output_type -> gcommon.v1.web.ReloadServerConfigResponse
	109, // 295: gcommon.v1.web.WebAdminService.GetSSLCertificateInfo:output_type -> gcommon.v1.web.GetSSLCertificateInfoResponse
	112, // 296: gcommon.v1.web.WebAdminService.UpdateSSLCertificate:output_type -> gcommon.v1.web.UpdateSSLCertificateResponse
	114, // 297: gcommon.v1.web.WebAdminService.GetServerHealth:output_type -> gcommon.v1.web.GetServerHealthResponse
	118, // 298: gcommon.v1.web.WebAdminService.ExportServerConfig:output_type -> gcommon.v1.web.ExportServerConfigResponse
	120, // 299: gcommon.v1.web.WebAdminService.ImportServerConfig:output_type -> gcommon.v1.web.ImportServerConfigResponse
	275, // [275:300] is the sub-list for method output_type
	250, // [250:275] is the sub-list for method input_type
	250, // [250:250] is the sub-list for extension type_name
	250, // [250:250] is the sub-list for extension extendee
	0,   // [0:250] is the sub-list for field type_name
}

func init() { file_pkg_web_proto_web_proto_init() }
func file_pkg_web_proto_web_proto_init() {
	if File_pkg_web_proto_web_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_web_proto_web_proto_rawDesc), len(file_pkg_web_proto_web_proto_rawDesc)),
			NumEnums:      12,
			NumMessages:   129,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pkg_web_proto_web_proto_goTypes,
		DependencyIndexes: file_pkg_web_proto_web_proto_depIdxs,
		EnumInfos:         file_pkg_web_proto_web_proto_enumTypes,
		MessageInfos:      file_pkg_web_proto_web_proto_msgTypes,
	}.Build()
	File_pkg_web_proto_web_proto = out.File
	file_pkg_web_proto_web_proto_goTypes = nil
	file_pkg_web_proto_web_proto_depIdxs = nil
}
