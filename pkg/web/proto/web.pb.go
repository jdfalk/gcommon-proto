// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: web.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SecurityCheckType represents a type of security check
type SecurityCheckType int32

const (
	SecurityCheckType_SECURITY_CHECK_TYPE_UNSPECIFIED    SecurityCheckType = 0
	SecurityCheckType_SECURITY_CHECK_TYPE_CSRF           SecurityCheckType = 1
	SecurityCheckType_SECURITY_CHECK_TYPE_XSS            SecurityCheckType = 2
	SecurityCheckType_SECURITY_CHECK_TYPE_SQL_INJECTION  SecurityCheckType = 3
	SecurityCheckType_SECURITY_CHECK_TYPE_CONTENT_TYPE   SecurityCheckType = 4
	SecurityCheckType_SECURITY_CHECK_TYPE_CONTENT_LENGTH SecurityCheckType = 5
	SecurityCheckType_SECURITY_CHECK_TYPE_RATE_LIMIT     SecurityCheckType = 6
	SecurityCheckType_SECURITY_CHECK_TYPE_BOT_DETECTION  SecurityCheckType = 7
	SecurityCheckType_SECURITY_CHECK_TYPE_IP_BLOCKLIST   SecurityCheckType = 8
	SecurityCheckType_SECURITY_CHECK_TYPE_AUTH_TOKEN     SecurityCheckType = 9
	SecurityCheckType_SECURITY_CHECK_TYPE_CORS           SecurityCheckType = 10
)

// Enum value maps for SecurityCheckType.
var (
	SecurityCheckType_name = map[int32]string{
		0:  "SECURITY_CHECK_TYPE_UNSPECIFIED",
		1:  "SECURITY_CHECK_TYPE_CSRF",
		2:  "SECURITY_CHECK_TYPE_XSS",
		3:  "SECURITY_CHECK_TYPE_SQL_INJECTION",
		4:  "SECURITY_CHECK_TYPE_CONTENT_TYPE",
		5:  "SECURITY_CHECK_TYPE_CONTENT_LENGTH",
		6:  "SECURITY_CHECK_TYPE_RATE_LIMIT",
		7:  "SECURITY_CHECK_TYPE_BOT_DETECTION",
		8:  "SECURITY_CHECK_TYPE_IP_BLOCKLIST",
		9:  "SECURITY_CHECK_TYPE_AUTH_TOKEN",
		10: "SECURITY_CHECK_TYPE_CORS",
	}
	SecurityCheckType_value = map[string]int32{
		"SECURITY_CHECK_TYPE_UNSPECIFIED":    0,
		"SECURITY_CHECK_TYPE_CSRF":           1,
		"SECURITY_CHECK_TYPE_XSS":            2,
		"SECURITY_CHECK_TYPE_SQL_INJECTION":  3,
		"SECURITY_CHECK_TYPE_CONTENT_TYPE":   4,
		"SECURITY_CHECK_TYPE_CONTENT_LENGTH": 5,
		"SECURITY_CHECK_TYPE_RATE_LIMIT":     6,
		"SECURITY_CHECK_TYPE_BOT_DETECTION":  7,
		"SECURITY_CHECK_TYPE_IP_BLOCKLIST":   8,
		"SECURITY_CHECK_TYPE_AUTH_TOKEN":     9,
		"SECURITY_CHECK_TYPE_CORS":           10,
	}
)

func (x SecurityCheckType) Enum() *SecurityCheckType {
	p := new(SecurityCheckType)
	*p = x
	return p
}

func (x SecurityCheckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityCheckType) Descriptor() protoreflect.EnumDescriptor {
	return file_web_proto_enumTypes[0].Descriptor()
}

func (SecurityCheckType) Type() protoreflect.EnumType {
	return &file_web_proto_enumTypes[0]
}

func (x SecurityCheckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityCheckType.Descriptor instead.
func (SecurityCheckType) EnumDescriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{0}
}

// Severity represents a severity level
type Severity int32

const (
	Severity_SEVERITY_UNSPECIFIED Severity = 0
	Severity_SEVERITY_INFO        Severity = 1
	Severity_SEVERITY_WARNING     Severity = 2
	Severity_SEVERITY_ERROR       Severity = 3
	Severity_SEVERITY_CRITICAL    Severity = 4
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "SEVERITY_INFO",
		2: "SEVERITY_WARNING",
		3: "SEVERITY_ERROR",
		4: "SEVERITY_CRITICAL",
	}
	Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_INFO":        1,
		"SEVERITY_WARNING":     2,
		"SEVERITY_ERROR":       3,
		"SEVERITY_CRITICAL":    4,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_web_proto_enumTypes[1].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_web_proto_enumTypes[1]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{1}
}

// ServeStaticRequest contains a request to serve static assets
type ServeStaticRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Path is the path to serve
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// IncludeIndex indicates whether to include index files
	IncludeIndex bool `protobuf:"varint,2,opt,name=include_index,json=includeIndex,proto3" json:"include_index,omitempty"`
	// CacheControl is the cache control header
	CacheControl string `protobuf:"bytes,3,opt,name=cache_control,json=cacheControl,proto3" json:"cache_control,omitempty"`
	// Etag is the ETag header
	Etag string `protobuf:"bytes,4,opt,name=etag,proto3" json:"etag,omitempty"`
	// LastModified is the last modified timestamp
	LastModified  int64 `protobuf:"varint,5,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServeStaticRequest) Reset() {
	*x = ServeStaticRequest{}
	mi := &file_web_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServeStaticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServeStaticRequest) ProtoMessage() {}

func (x *ServeStaticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServeStaticRequest.ProtoReflect.Descriptor instead.
func (*ServeStaticRequest) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{0}
}

func (x *ServeStaticRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ServeStaticRequest) GetIncludeIndex() bool {
	if x != nil {
		return x.IncludeIndex
	}
	return false
}

func (x *ServeStaticRequest) GetCacheControl() string {
	if x != nil {
		return x.CacheControl
	}
	return ""
}

func (x *ServeStaticRequest) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *ServeStaticRequest) GetLastModified() int64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

// StaticResponse contains a response with static asset data
type StaticResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Chunk is a chunk of the file data
	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	// ContentType is the content type
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// StatusCode is the HTTP status code
	StatusCode int32 `protobuf:"varint,3,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	// Headers are the HTTP headers
	Headers map[string]string `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Size is the total file size
	Size int64 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	// ChunkIndex is the current chunk index
	ChunkIndex int32 `protobuf:"varint,6,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	// TotalChunks is the total number of chunks
	TotalChunks   int32 `protobuf:"varint,7,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StaticResponse) Reset() {
	*x = StaticResponse{}
	mi := &file_web_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticResponse) ProtoMessage() {}

func (x *StaticResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticResponse.ProtoReflect.Descriptor instead.
func (*StaticResponse) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{1}
}

func (x *StaticResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *StaticResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *StaticResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StaticResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *StaticResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *StaticResponse) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *StaticResponse) GetTotalChunks() int32 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

// RenderTemplateRequest contains a request to render a template
type RenderTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the template name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Data is the template data (JSON encoded)
	Data string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// Layout is the layout template name
	Layout string `protobuf:"bytes,3,opt,name=layout,proto3" json:"layout,omitempty"`
	// ContentType is the content type
	ContentType string `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// Locale is the locale for i18n
	Locale        string `protobuf:"bytes,5,opt,name=locale,proto3" json:"locale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenderTemplateRequest) Reset() {
	*x = RenderTemplateRequest{}
	mi := &file_web_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenderTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderTemplateRequest) ProtoMessage() {}

func (x *RenderTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderTemplateRequest.ProtoReflect.Descriptor instead.
func (*RenderTemplateRequest) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{2}
}

func (x *RenderTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RenderTemplateRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *RenderTemplateRequest) GetLayout() string {
	if x != nil {
		return x.Layout
	}
	return ""
}

func (x *RenderTemplateRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *RenderTemplateRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

// RenderTemplateResponse contains a rendered template
type RenderTemplateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Content is the rendered content
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// StatusCode is the HTTP status code
	StatusCode int32 `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	// ContentType is the content type
	ContentType string `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// Headers are the HTTP headers
	Headers       map[string]string `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenderTemplateResponse) Reset() {
	*x = RenderTemplateResponse{}
	mi := &file_web_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenderTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderTemplateResponse) ProtoMessage() {}

func (x *RenderTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderTemplateResponse.ProtoReflect.Descriptor instead.
func (*RenderTemplateResponse) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{3}
}

func (x *RenderTemplateResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RenderTemplateResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *RenderTemplateResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *RenderTemplateResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

// GetRouteInfoRequest contains a request to get route information
type GetRouteInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pattern is an optional route pattern filter
	Pattern string `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
	// Method is an optional HTTP method filter
	Method        string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRouteInfoRequest) Reset() {
	*x = GetRouteInfoRequest{}
	mi := &file_web_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRouteInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteInfoRequest) ProtoMessage() {}

func (x *GetRouteInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteInfoRequest.ProtoReflect.Descriptor instead.
func (*GetRouteInfoRequest) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{4}
}

func (x *GetRouteInfoRequest) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *GetRouteInfoRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

// GetRouteInfoResponse contains route information
type GetRouteInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Routes are the registered routes
	Routes        []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRouteInfoResponse) Reset() {
	*x = GetRouteInfoResponse{}
	mi := &file_web_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRouteInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteInfoResponse) ProtoMessage() {}

func (x *GetRouteInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteInfoResponse.ProtoReflect.Descriptor instead.
func (*GetRouteInfoResponse) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{5}
}

func (x *GetRouteInfoResponse) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

// Route represents a web route
type Route struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pattern is the route pattern
	Pattern string `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
	// Method is the HTTP method
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	// Handler is the handler name
	Handler string `protobuf:"bytes,3,opt,name=handler,proto3" json:"handler,omitempty"`
	// Middleware are the middleware applied to this route
	Middleware []string `protobuf:"bytes,4,rep,name=middleware,proto3" json:"middleware,omitempty"`
	// Parameters are the route parameters
	Parameters    map[string]string `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Route) Reset() {
	*x = Route{}
	mi := &file_web_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{6}
}

func (x *Route) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *Route) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Route) GetHandler() string {
	if x != nil {
		return x.Handler
	}
	return ""
}

func (x *Route) GetMiddleware() []string {
	if x != nil {
		return x.Middleware
	}
	return nil
}

func (x *Route) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// ForwardRequestRequest contains a request to forward a web request
type ForwardRequestRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// URL is the destination URL
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Method is the HTTP method
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	// Headers are the HTTP headers
	Headers map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Body is the request body
	Body []byte `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	// Timeout is the request timeout in milliseconds
	Timeout int32 `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// FollowRedirects indicates whether to follow redirects
	FollowRedirects bool `protobuf:"varint,6,opt,name=follow_redirects,json=followRedirects,proto3" json:"follow_redirects,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ForwardRequestRequest) Reset() {
	*x = ForwardRequestRequest{}
	mi := &file_web_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardRequestRequest) ProtoMessage() {}

func (x *ForwardRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardRequestRequest.ProtoReflect.Descriptor instead.
func (*ForwardRequestRequest) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{7}
}

func (x *ForwardRequestRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ForwardRequestRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ForwardRequestRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ForwardRequestRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *ForwardRequestRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ForwardRequestRequest) GetFollowRedirects() bool {
	if x != nil {
		return x.FollowRedirects
	}
	return false
}

// ForwardRequestResponse contains the result of forwarding a request
type ForwardRequestResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// StatusCode is the HTTP status code
	StatusCode int32 `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	// Headers are the HTTP headers
	Headers map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Body is the response body
	Body []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	// Latency is the request latency in milliseconds
	Latency       int32 `protobuf:"varint,4,opt,name=latency,proto3" json:"latency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForwardRequestResponse) Reset() {
	*x = ForwardRequestResponse{}
	mi := &file_web_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardRequestResponse) ProtoMessage() {}

func (x *ForwardRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardRequestResponse.ProtoReflect.Descriptor instead.
func (*ForwardRequestResponse) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{8}
}

func (x *ForwardRequestResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ForwardRequestResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ForwardRequestResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *ForwardRequestResponse) GetLatency() int32 {
	if x != nil {
		return x.Latency
	}
	return 0
}

// CheckSecurityRequest contains a security check request
type CheckSecurityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Headers are the HTTP headers to check
	Headers map[string]string `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// URL is the URL to check
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// Method is the HTTP method
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	// Body is the request body to check
	Body []byte `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	// Cookie is the cookie to check
	Cookies map[string]string `protobuf:"bytes,5,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// IP is the client IP address
	Ip string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	// CheckTypes are the types of security checks to perform
	CheckTypes    []SecurityCheckType `protobuf:"varint,7,rep,packed,name=check_types,json=checkTypes,proto3,enum=web.SecurityCheckType" json:"check_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckSecurityRequest) Reset() {
	*x = CheckSecurityRequest{}
	mi := &file_web_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckSecurityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSecurityRequest) ProtoMessage() {}

func (x *CheckSecurityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSecurityRequest.ProtoReflect.Descriptor instead.
func (*CheckSecurityRequest) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{9}
}

func (x *CheckSecurityRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CheckSecurityRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CheckSecurityRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *CheckSecurityRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *CheckSecurityRequest) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *CheckSecurityRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *CheckSecurityRequest) GetCheckTypes() []SecurityCheckType {
	if x != nil {
		return x.CheckTypes
	}
	return nil
}

// CheckSecurityResponse contains security check results
type CheckSecurityResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Passed indicates if the security check passed
	Passed bool `protobuf:"varint,1,opt,name=passed,proto3" json:"passed,omitempty"`
	// FailedChecks are the checks that failed
	FailedChecks []*FailedCheck `protobuf:"bytes,2,rep,name=failed_checks,json=failedChecks,proto3" json:"failed_checks,omitempty"`
	// RecommendedActions are recommended actions to take
	RecommendedActions []string `protobuf:"bytes,3,rep,name=recommended_actions,json=recommendedActions,proto3" json:"recommended_actions,omitempty"`
	// ResponseHeaders are response headers to set
	ResponseHeaders map[string]string `protobuf:"bytes,4,rep,name=response_headers,json=responseHeaders,proto3" json:"response_headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// StatusCode is the recommended HTTP status code
	StatusCode    int32 `protobuf:"varint,5,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckSecurityResponse) Reset() {
	*x = CheckSecurityResponse{}
	mi := &file_web_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckSecurityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSecurityResponse) ProtoMessage() {}

func (x *CheckSecurityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSecurityResponse.ProtoReflect.Descriptor instead.
func (*CheckSecurityResponse) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{10}
}

func (x *CheckSecurityResponse) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

func (x *CheckSecurityResponse) GetFailedChecks() []*FailedCheck {
	if x != nil {
		return x.FailedChecks
	}
	return nil
}

func (x *CheckSecurityResponse) GetRecommendedActions() []string {
	if x != nil {
		return x.RecommendedActions
	}
	return nil
}

func (x *CheckSecurityResponse) GetResponseHeaders() map[string]string {
	if x != nil {
		return x.ResponseHeaders
	}
	return nil
}

func (x *CheckSecurityResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

// FailedCheck represents a failed security check
type FailedCheck struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type is the type of check that failed
	Type SecurityCheckType `protobuf:"varint,1,opt,name=type,proto3,enum=web.SecurityCheckType" json:"type,omitempty"`
	// Reason is the reason for the failure
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	// Severity is the severity of the failure
	Severity      Severity `protobuf:"varint,3,opt,name=severity,proto3,enum=web.Severity" json:"severity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailedCheck) Reset() {
	*x = FailedCheck{}
	mi := &file_web_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailedCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailedCheck) ProtoMessage() {}

func (x *FailedCheck) ProtoReflect() protoreflect.Message {
	mi := &file_web_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailedCheck.ProtoReflect.Descriptor instead.
func (*FailedCheck) Descriptor() ([]byte, []int) {
	return file_web_proto_rawDescGZIP(), []int{11}
}

func (x *FailedCheck) GetType() SecurityCheckType {
	if x != nil {
		return x.Type
	}
	return SecurityCheckType_SECURITY_CHECK_TYPE_UNSPECIFIED
}

func (x *FailedCheck) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *FailedCheck) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_UNSPECIFIED
}

var File_web_proto protoreflect.FileDescriptor

const file_web_proto_rawDesc = "" +
	"\n" +
	"\tweb.proto\x12\x03web\"\xab\x01\n" +
	"\x12ServeStaticRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12#\n" +
	"\rinclude_index\x18\x02 \x01(\bR\fincludeIndex\x12#\n" +
	"\rcache_control\x18\x03 \x01(\tR\fcacheControl\x12\x12\n" +
	"\x04etag\x18\x04 \x01(\tR\x04etag\x12#\n" +
	"\rlast_modified\x18\x05 \x01(\x03R\flastModified\"\xba\x02\n" +
	"\x0eStaticResponse\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1f\n" +
	"\vstatus_code\x18\x03 \x01(\x05R\n" +
	"statusCode\x12:\n" +
	"\aheaders\x18\x04 \x03(\v2 .web.StaticResponse.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\x12\x1f\n" +
	"\vchunk_index\x18\x06 \x01(\x05R\n" +
	"chunkIndex\x12!\n" +
	"\ftotal_chunks\x18\a \x01(\x05R\vtotalChunks\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x92\x01\n" +
	"\x15RenderTemplateRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04data\x18\x02 \x01(\tR\x04data\x12\x16\n" +
	"\x06layout\x18\x03 \x01(\tR\x06layout\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\x16\n" +
	"\x06locale\x18\x05 \x01(\tR\x06locale\"\xf6\x01\n" +
	"\x16RenderTemplateResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x1f\n" +
	"\vstatus_code\x18\x02 \x01(\x05R\n" +
	"statusCode\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12B\n" +
	"\aheaders\x18\x04 \x03(\v2(.web.RenderTemplateResponse.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"G\n" +
	"\x13GetRouteInfoRequest\x12\x18\n" +
	"\apattern\x18\x01 \x01(\tR\apattern\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\":\n" +
	"\x14GetRouteInfoResponse\x12\"\n" +
	"\x06routes\x18\x01 \x03(\v2\n" +
	".web.RouteR\x06routes\"\xee\x01\n" +
	"\x05Route\x12\x18\n" +
	"\apattern\x18\x01 \x01(\tR\apattern\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x18\n" +
	"\ahandler\x18\x03 \x01(\tR\ahandler\x12\x1e\n" +
	"\n" +
	"middleware\x18\x04 \x03(\tR\n" +
	"middleware\x12:\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v2\x1a.web.Route.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x99\x02\n" +
	"\x15ForwardRequestRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12A\n" +
	"\aheaders\x18\x03 \x03(\v2'.web.ForwardRequestRequest.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x04 \x01(\fR\x04body\x12\x18\n" +
	"\atimeout\x18\x05 \x01(\x05R\atimeout\x12)\n" +
	"\x10follow_redirects\x18\x06 \x01(\bR\x0ffollowRedirects\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe7\x01\n" +
	"\x16ForwardRequestResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12B\n" +
	"\aheaders\x18\x02 \x03(\v2(.web.ForwardRequestResponse.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x03 \x01(\fR\x04body\x12\x18\n" +
	"\alatency\x18\x04 \x01(\x05R\alatency\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x99\x03\n" +
	"\x14CheckSecurityRequest\x12@\n" +
	"\aheaders\x18\x01 \x03(\v2&.web.CheckSecurityRequest.HeadersEntryR\aheaders\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x03 \x01(\tR\x06method\x12\x12\n" +
	"\x04body\x18\x04 \x01(\fR\x04body\x12@\n" +
	"\acookies\x18\x05 \x03(\v2&.web.CheckSecurityRequest.CookiesEntryR\acookies\x12\x0e\n" +
	"\x02ip\x18\x06 \x01(\tR\x02ip\x127\n" +
	"\vcheck_types\x18\a \x03(\x0e2\x16.web.SecurityCheckTypeR\n" +
	"checkTypes\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fCookiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd8\x02\n" +
	"\x15CheckSecurityResponse\x12\x16\n" +
	"\x06passed\x18\x01 \x01(\bR\x06passed\x125\n" +
	"\rfailed_checks\x18\x02 \x03(\v2\x10.web.FailedCheckR\ffailedChecks\x12/\n" +
	"\x13recommended_actions\x18\x03 \x03(\tR\x12recommendedActions\x12Z\n" +
	"\x10response_headers\x18\x04 \x03(\v2/.web.CheckSecurityResponse.ResponseHeadersEntryR\x0fresponseHeaders\x12\x1f\n" +
	"\vstatus_code\x18\x05 \x01(\x05R\n" +
	"statusCode\x1aB\n" +
	"\x14ResponseHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"|\n" +
	"\vFailedCheck\x12*\n" +
	"\x04type\x18\x01 \x01(\x0e2\x16.web.SecurityCheckTypeR\x04type\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12)\n" +
	"\bseverity\x18\x03 \x01(\x0e2\r.web.SeverityR\bseverity*\x9b\x03\n" +
	"\x11SecurityCheckType\x12#\n" +
	"\x1fSECURITY_CHECK_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18SECURITY_CHECK_TYPE_CSRF\x10\x01\x12\x1b\n" +
	"\x17SECURITY_CHECK_TYPE_XSS\x10\x02\x12%\n" +
	"!SECURITY_CHECK_TYPE_SQL_INJECTION\x10\x03\x12$\n" +
	" SECURITY_CHECK_TYPE_CONTENT_TYPE\x10\x04\x12&\n" +
	"\"SECURITY_CHECK_TYPE_CONTENT_LENGTH\x10\x05\x12\"\n" +
	"\x1eSECURITY_CHECK_TYPE_RATE_LIMIT\x10\x06\x12%\n" +
	"!SECURITY_CHECK_TYPE_BOT_DETECTION\x10\a\x12$\n" +
	" SECURITY_CHECK_TYPE_IP_BLOCKLIST\x10\b\x12\"\n" +
	"\x1eSECURITY_CHECK_TYPE_AUTH_TOKEN\x10\t\x12\x1c\n" +
	"\x18SECURITY_CHECK_TYPE_CORS\x10\n" +
	"*x\n" +
	"\bSeverity\x12\x18\n" +
	"\x14SEVERITY_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rSEVERITY_INFO\x10\x01\x12\x14\n" +
	"\x10SEVERITY_WARNING\x10\x02\x12\x12\n" +
	"\x0eSEVERITY_ERROR\x10\x03\x12\x15\n" +
	"\x11SEVERITY_CRITICAL\x10\x042\xee\x02\n" +
	"\n" +
	"WebService\x12=\n" +
	"\vServeStatic\x12\x17.web.ServeStaticRequest\x1a\x13.web.StaticResponse0\x01\x12I\n" +
	"\x0eRenderTemplate\x12\x1a.web.RenderTemplateRequest\x1a\x1b.web.RenderTemplateResponse\x12C\n" +
	"\fGetRouteInfo\x12\x18.web.GetRouteInfoRequest\x1a\x19.web.GetRouteInfoResponse\x12I\n" +
	"\x0eForwardRequest\x12\x1a.web.ForwardRequestRequest\x1a\x1b.web.ForwardRequestResponse\x12F\n" +
	"\rCheckSecurity\x12\x19.web.CheckSecurityRequest\x1a\x1a.web.CheckSecurityResponseB)Z'github.com/jdfalk/gcommon/pkg/web/protob\x06proto3"

var (
	file_web_proto_rawDescOnce sync.Once
	file_web_proto_rawDescData []byte
)

func file_web_proto_rawDescGZIP() []byte {
	file_web_proto_rawDescOnce.Do(func() {
		file_web_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_web_proto_rawDesc), len(file_web_proto_rawDesc)))
	})
	return file_web_proto_rawDescData
}

var file_web_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_web_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_web_proto_goTypes = []any{
	(SecurityCheckType)(0),         // 0: web.SecurityCheckType
	(Severity)(0),                  // 1: web.Severity
	(*ServeStaticRequest)(nil),     // 2: web.ServeStaticRequest
	(*StaticResponse)(nil),         // 3: web.StaticResponse
	(*RenderTemplateRequest)(nil),  // 4: web.RenderTemplateRequest
	(*RenderTemplateResponse)(nil), // 5: web.RenderTemplateResponse
	(*GetRouteInfoRequest)(nil),    // 6: web.GetRouteInfoRequest
	(*GetRouteInfoResponse)(nil),   // 7: web.GetRouteInfoResponse
	(*Route)(nil),                  // 8: web.Route
	(*ForwardRequestRequest)(nil),  // 9: web.ForwardRequestRequest
	(*ForwardRequestResponse)(nil), // 10: web.ForwardRequestResponse
	(*CheckSecurityRequest)(nil),   // 11: web.CheckSecurityRequest
	(*CheckSecurityResponse)(nil),  // 12: web.CheckSecurityResponse
	(*FailedCheck)(nil),            // 13: web.FailedCheck
	nil,                            // 14: web.StaticResponse.HeadersEntry
	nil,                            // 15: web.RenderTemplateResponse.HeadersEntry
	nil,                            // 16: web.Route.ParametersEntry
	nil,                            // 17: web.ForwardRequestRequest.HeadersEntry
	nil,                            // 18: web.ForwardRequestResponse.HeadersEntry
	nil,                            // 19: web.CheckSecurityRequest.HeadersEntry
	nil,                            // 20: web.CheckSecurityRequest.CookiesEntry
	nil,                            // 21: web.CheckSecurityResponse.ResponseHeadersEntry
}
var file_web_proto_depIdxs = []int32{
	14, // 0: web.StaticResponse.headers:type_name -> web.StaticResponse.HeadersEntry
	15, // 1: web.RenderTemplateResponse.headers:type_name -> web.RenderTemplateResponse.HeadersEntry
	8,  // 2: web.GetRouteInfoResponse.routes:type_name -> web.Route
	16, // 3: web.Route.parameters:type_name -> web.Route.ParametersEntry
	17, // 4: web.ForwardRequestRequest.headers:type_name -> web.ForwardRequestRequest.HeadersEntry
	18, // 5: web.ForwardRequestResponse.headers:type_name -> web.ForwardRequestResponse.HeadersEntry
	19, // 6: web.CheckSecurityRequest.headers:type_name -> web.CheckSecurityRequest.HeadersEntry
	20, // 7: web.CheckSecurityRequest.cookies:type_name -> web.CheckSecurityRequest.CookiesEntry
	0,  // 8: web.CheckSecurityRequest.check_types:type_name -> web.SecurityCheckType
	13, // 9: web.CheckSecurityResponse.failed_checks:type_name -> web.FailedCheck
	21, // 10: web.CheckSecurityResponse.response_headers:type_name -> web.CheckSecurityResponse.ResponseHeadersEntry
	0,  // 11: web.FailedCheck.type:type_name -> web.SecurityCheckType
	1,  // 12: web.FailedCheck.severity:type_name -> web.Severity
	2,  // 13: web.WebService.ServeStatic:input_type -> web.ServeStaticRequest
	4,  // 14: web.WebService.RenderTemplate:input_type -> web.RenderTemplateRequest
	6,  // 15: web.WebService.GetRouteInfo:input_type -> web.GetRouteInfoRequest
	9,  // 16: web.WebService.ForwardRequest:input_type -> web.ForwardRequestRequest
	11, // 17: web.WebService.CheckSecurity:input_type -> web.CheckSecurityRequest
	3,  // 18: web.WebService.ServeStatic:output_type -> web.StaticResponse
	5,  // 19: web.WebService.RenderTemplate:output_type -> web.RenderTemplateResponse
	7,  // 20: web.WebService.GetRouteInfo:output_type -> web.GetRouteInfoResponse
	10, // 21: web.WebService.ForwardRequest:output_type -> web.ForwardRequestResponse
	12, // 22: web.WebService.CheckSecurity:output_type -> web.CheckSecurityResponse
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_web_proto_init() }
func file_web_proto_init() {
	if File_web_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_web_proto_rawDesc), len(file_web_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_web_proto_goTypes,
		DependencyIndexes: file_web_proto_depIdxs,
		EnumInfos:         file_web_proto_enumTypes,
		MessageInfos:      file_web_proto_msgTypes,
	}.Build()
	File_web_proto = out.File
	file_web_proto_goTypes = nil
	file_web_proto_depIdxs = nil
}
