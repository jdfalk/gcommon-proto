// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/web/proto/responses/http_response_per.proto

package webpb

import (
	pb "../../../../pkg/common/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// HttpResponse represents an HTTP response from web services.
// Captures all essential HTTP response information including status,
// headers, body, and metadata for service mesh and proxy use cases.
//
// Follows 1-1-1 pattern: one message per file.
type HttpResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// HTTP status code (200, 404, 500, etc.).
	StatusCode *int32 `protobuf:"varint,1,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	// *
	// HTTP status message/reason phrase (OK, Not Found, Internal Server Error, etc.).
	StatusMessage *string `protobuf:"bytes,2,opt,name=status_message,json=statusMessage" json:"status_message,omitempty"`
	// *
	// HTTP protocol version used for the response.
	ProtocolVersion *string `protobuf:"bytes,3,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	// *
	// Request processing metadata including timing, request ID,
	// and other observability information.
	RequestMetadata *pb.RequestMetadata `protobuf:"bytes,11,opt,name=request_metadata,json=requestMetadata" json:"request_metadata,omitempty"`
	// *
	// HTTP response headers as key-value pairs.
	// Includes standard headers like Content-Type, Cache-Control, etc.
	Headers map[string]string `protobuf:"bytes,12,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// *
	// Response body/payload data.
	// Can contain any content type (JSON, XML, HTML, binary, etc.).
	Body *anypb.Any `protobuf:"bytes,13,opt,name=body" json:"body,omitempty"`
	// *
	// Cookies to be set in the client.
	Cookies map[string]string `protobuf:"bytes,14,rep,name=cookies" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// *
	// Content length in bytes.
	ContentLength *int64 `protobuf:"varint,15,opt,name=content_length,json=contentLength" json:"content_length,omitempty"`
	// *
	// Content type of the response body.
	ContentType *string `protobuf:"bytes,16,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	// *
	// Content encoding (gzip, deflate, etc.).
	ContentEncoding *string `protobuf:"bytes,17,opt,name=content_encoding,json=contentEncoding" json:"content_encoding,omitempty"`
	// *
	// Cache-Control header value.
	CacheControl *string `protobuf:"bytes,18,opt,name=cache_control,json=cacheControl" json:"cache_control,omitempty"`
	// *
	// ETag header for caching and conditional requests.
	Etag *string `protobuf:"bytes,19,opt,name=etag" json:"etag,omitempty"`
	// *
	// Location header for redirects.
	Location *string `protobuf:"bytes,20,opt,name=location" json:"location,omitempty"`
	// *
	// Server header identifying the server software.
	Server *string `protobuf:"bytes,21,opt,name=server" json:"server,omitempty"`
	// *
	// CORS Access-Control-Allow-Origin header.
	AccessControlAllowOrigin *string `protobuf:"bytes,22,opt,name=access_control_allow_origin,json=accessControlAllowOrigin" json:"access_control_allow_origin,omitempty"`
	// *
	// CORS Access-Control-Allow-Methods header.
	AccessControlAllowMethods *string `protobuf:"bytes,23,opt,name=access_control_allow_methods,json=accessControlAllowMethods" json:"access_control_allow_methods,omitempty"`
	// *
	// CORS Access-Control-Allow-Headers header.
	AccessControlAllowHeaders *string `protobuf:"bytes,24,opt,name=access_control_allow_headers,json=accessControlAllowHeaders" json:"access_control_allow_headers,omitempty"`
	// *
	// Request ID that was processed (for correlation).
	RequestId *string `protobuf:"bytes,25,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// *
	// Service name that generated this response.
	ServiceName *string `protobuf:"bytes,26,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// *
	// Service version that generated this response.
	ServiceVersion *string `protobuf:"bytes,27,opt,name=service_version,json=serviceVersion" json:"service_version,omitempty"`
	// *
	// Response processing time in milliseconds.
	ProcessingTimeMs *int64 `protobuf:"varint,28,opt,name=processing_time_ms,json=processingTimeMs" json:"processing_time_ms,omitempty"`
	// *
	// Whether the response was served from cache.
	ServedFromCache *bool `protobuf:"varint,29,opt,name=served_from_cache,json=servedFromCache" json:"served_from_cache,omitempty"`
	// *
	// Whether the response is being streamed.
	Streaming *bool `protobuf:"varint,30,opt,name=streaming" json:"streaming,omitempty"`
	// *
	// Whether the connection will be kept alive.
	KeepAlive *bool `protobuf:"varint,31,opt,name=keep_alive,json=keepAlive" json:"keep_alive,omitempty"`
	// *
	// Whether the response was compressed.
	Compressed *bool `protobuf:"varint,32,opt,name=compressed" json:"compressed,omitempty"`
	// *
	// Compression ratio if compressed (0.0-1.0).
	CompressionRatio *float32 `protobuf:"fixed32,33,opt,name=compression_ratio,json=compressionRatio" json:"compression_ratio,omitempty"`
	// *
	// Error information if the response represents an error
	// or if there were issues generating the response.
	Error *pb.Error `protobuf:"bytes,61,opt,name=error" json:"error,omitempty"`
	// *
	// When response generation started.
	ProcessingStartedAt *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=processing_started_at,json=processingStartedAt" json:"processing_started_at,omitempty"`
	// *
	// When the response was generated.
	GeneratedAt *timestamppb.Timestamp `protobuf:"bytes,52,opt,name=generated_at,json=generatedAt" json:"generated_at,omitempty"`
	// *
	// When the response was sent to the client.
	SentAt        *timestamppb.Timestamp `protobuf:"bytes,53,opt,name=sent_at,json=sentAt" json:"sent_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpResponse) Reset() {
	*x = HttpResponse{}
	mi := &file_pkg_web_proto_responses_http_response_per_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResponse) ProtoMessage() {}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_responses_http_response_per_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return file_pkg_web_proto_responses_http_response_per_proto_rawDescGZIP(), []int{0}
}

func (x *HttpResponse) GetStatusCode() int32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *HttpResponse) GetStatusMessage() string {
	if x != nil && x.StatusMessage != nil {
		return *x.StatusMessage
	}
	return ""
}

func (x *HttpResponse) GetProtocolVersion() string {
	if x != nil && x.ProtocolVersion != nil {
		return *x.ProtocolVersion
	}
	return ""
}

func (x *HttpResponse) GetRequestMetadata() *pb.RequestMetadata {
	if x != nil {
		return x.RequestMetadata
	}
	return nil
}

func (x *HttpResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpResponse) GetBody() *anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HttpResponse) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *HttpResponse) GetContentLength() int64 {
	if x != nil && x.ContentLength != nil {
		return *x.ContentLength
	}
	return 0
}

func (x *HttpResponse) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

func (x *HttpResponse) GetContentEncoding() string {
	if x != nil && x.ContentEncoding != nil {
		return *x.ContentEncoding
	}
	return ""
}

func (x *HttpResponse) GetCacheControl() string {
	if x != nil && x.CacheControl != nil {
		return *x.CacheControl
	}
	return ""
}

func (x *HttpResponse) GetEtag() string {
	if x != nil && x.Etag != nil {
		return *x.Etag
	}
	return ""
}

func (x *HttpResponse) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *HttpResponse) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

func (x *HttpResponse) GetAccessControlAllowOrigin() string {
	if x != nil && x.AccessControlAllowOrigin != nil {
		return *x.AccessControlAllowOrigin
	}
	return ""
}

func (x *HttpResponse) GetAccessControlAllowMethods() string {
	if x != nil && x.AccessControlAllowMethods != nil {
		return *x.AccessControlAllowMethods
	}
	return ""
}

func (x *HttpResponse) GetAccessControlAllowHeaders() string {
	if x != nil && x.AccessControlAllowHeaders != nil {
		return *x.AccessControlAllowHeaders
	}
	return ""
}

func (x *HttpResponse) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *HttpResponse) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

func (x *HttpResponse) GetServiceVersion() string {
	if x != nil && x.ServiceVersion != nil {
		return *x.ServiceVersion
	}
	return ""
}

func (x *HttpResponse) GetProcessingTimeMs() int64 {
	if x != nil && x.ProcessingTimeMs != nil {
		return *x.ProcessingTimeMs
	}
	return 0
}

func (x *HttpResponse) GetServedFromCache() bool {
	if x != nil && x.ServedFromCache != nil {
		return *x.ServedFromCache
	}
	return false
}

func (x *HttpResponse) GetStreaming() bool {
	if x != nil && x.Streaming != nil {
		return *x.Streaming
	}
	return false
}

func (x *HttpResponse) GetKeepAlive() bool {
	if x != nil && x.KeepAlive != nil {
		return *x.KeepAlive
	}
	return false
}

func (x *HttpResponse) GetCompressed() bool {
	if x != nil && x.Compressed != nil {
		return *x.Compressed
	}
	return false
}

func (x *HttpResponse) GetCompressionRatio() float32 {
	if x != nil && x.CompressionRatio != nil {
		return *x.CompressionRatio
	}
	return 0
}

func (x *HttpResponse) GetError() *pb.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *HttpResponse) GetProcessingStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessingStartedAt
	}
	return nil
}

func (x *HttpResponse) GetGeneratedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.GeneratedAt
	}
	return nil
}

func (x *HttpResponse) GetSentAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

var File_pkg_web_proto_responses_http_response_per_proto protoreflect.FileDescriptor

const file_pkg_web_proto_responses_http_response_per_proto_rawDesc = "" +
	"\n" +
	"/pkg/web/proto/responses/http_response_per.proto\x12\x0egcommon.v1.web\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\x1a0pkg/common/proto/messages/request_metadata.proto\x1a%pkg/common/proto/messages/error.proto\"\xe2\v\n" +
	"\fHttpResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12%\n" +
	"\x0estatus_message\x18\x02 \x01(\tR\rstatusMessage\x12)\n" +
	"\x10protocol_version\x18\x03 \x01(\tR\x0fprotocolVersion\x12M\n" +
	"\x10request_metadata\x18\v \x01(\v2\".gcommon.v1.common.RequestMetadataR\x0frequestMetadata\x12C\n" +
	"\aheaders\x18\f \x03(\v2).gcommon.v1.web.HttpResponse.HeadersEntryR\aheaders\x12(\n" +
	"\x04body\x18\r \x01(\v2\x14.google.protobuf.AnyR\x04body\x12C\n" +
	"\acookies\x18\x0e \x03(\v2).gcommon.v1.web.HttpResponse.CookiesEntryR\acookies\x12%\n" +
	"\x0econtent_length\x18\x0f \x01(\x03R\rcontentLength\x12!\n" +
	"\fcontent_type\x18\x10 \x01(\tR\vcontentType\x12)\n" +
	"\x10content_encoding\x18\x11 \x01(\tR\x0fcontentEncoding\x12#\n" +
	"\rcache_control\x18\x12 \x01(\tR\fcacheControl\x12\x12\n" +
	"\x04etag\x18\x13 \x01(\tR\x04etag\x12\x1a\n" +
	"\blocation\x18\x14 \x01(\tR\blocation\x12\x16\n" +
	"\x06server\x18\x15 \x01(\tR\x06server\x12=\n" +
	"\x1baccess_control_allow_origin\x18\x16 \x01(\tR\x18accessControlAllowOrigin\x12?\n" +
	"\x1caccess_control_allow_methods\x18\x17 \x01(\tR\x19accessControlAllowMethods\x12?\n" +
	"\x1caccess_control_allow_headers\x18\x18 \x01(\tR\x19accessControlAllowHeaders\x12\x1d\n" +
	"\n" +
	"request_id\x18\x19 \x01(\tR\trequestId\x12!\n" +
	"\fservice_name\x18\x1a \x01(\tR\vserviceName\x12'\n" +
	"\x0fservice_version\x18\x1b \x01(\tR\x0eserviceVersion\x12,\n" +
	"\x12processing_time_ms\x18\x1c \x01(\x03R\x10processingTimeMs\x12*\n" +
	"\x11served_from_cache\x18\x1d \x01(\bR\x0fservedFromCache\x12\x1c\n" +
	"\tstreaming\x18\x1e \x01(\bR\tstreaming\x12\x1d\n" +
	"\n" +
	"keep_alive\x18\x1f \x01(\bR\tkeepAlive\x12\x1e\n" +
	"\n" +
	"compressed\x18  \x01(\bR\n" +
	"compressed\x12+\n" +
	"\x11compression_ratio\x18! \x01(\x02R\x10compressionRatio\x12.\n" +
	"\x05error\x18= \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\x12N\n" +
	"\x15processing_started_at\x183 \x01(\v2\x1a.google.protobuf.TimestampR\x13processingStartedAt\x12=\n" +
	"\fgenerated_at\x184 \x01(\v2\x1a.google.protobuf.TimestampR\vgeneratedAt\x123\n" +
	"\asent_at\x185 \x01(\v2\x1a.google.protobuf.TimestampR\x06sentAt\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fCookiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xa2\x01\n" +
	"\x12com.gcommon.v1.webB\x14HttpResponsePerProtoP\x01Z\x1c../../../../pkg/web/pb;webpb\xa2\x02\x03GVW\xaa\x02\x0eGcommon.V1.Web\xca\x02\x0eGcommon\\V1\\Web\xe2\x02\x1aGcommon\\V1\\Web\\GPBMetadata\xea\x02\x10Gcommon::V1::Webb\beditionsp\xe8\a"

var (
	file_pkg_web_proto_responses_http_response_per_proto_rawDescOnce sync.Once
	file_pkg_web_proto_responses_http_response_per_proto_rawDescData []byte
)

func file_pkg_web_proto_responses_http_response_per_proto_rawDescGZIP() []byte {
	file_pkg_web_proto_responses_http_response_per_proto_rawDescOnce.Do(func() {
		file_pkg_web_proto_responses_http_response_per_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_web_proto_responses_http_response_per_proto_rawDesc), len(file_pkg_web_proto_responses_http_response_per_proto_rawDesc)))
	})
	return file_pkg_web_proto_responses_http_response_per_proto_rawDescData
}

var file_pkg_web_proto_responses_http_response_per_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_web_proto_responses_http_response_per_proto_goTypes = []any{
	(*HttpResponse)(nil),          // 0: gcommon.v1.web.HttpResponse
	nil,                           // 1: gcommon.v1.web.HttpResponse.HeadersEntry
	nil,                           // 2: gcommon.v1.web.HttpResponse.CookiesEntry
	(*pb.RequestMetadata)(nil),    // 3: gcommon.v1.common.RequestMetadata
	(*anypb.Any)(nil),             // 4: google.protobuf.Any
	(*pb.Error)(nil),              // 5: gcommon.v1.common.Error
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_pkg_web_proto_responses_http_response_per_proto_depIdxs = []int32{
	3, // 0: gcommon.v1.web.HttpResponse.request_metadata:type_name -> gcommon.v1.common.RequestMetadata
	1, // 1: gcommon.v1.web.HttpResponse.headers:type_name -> gcommon.v1.web.HttpResponse.HeadersEntry
	4, // 2: gcommon.v1.web.HttpResponse.body:type_name -> google.protobuf.Any
	2, // 3: gcommon.v1.web.HttpResponse.cookies:type_name -> gcommon.v1.web.HttpResponse.CookiesEntry
	5, // 4: gcommon.v1.web.HttpResponse.error:type_name -> gcommon.v1.common.Error
	6, // 5: gcommon.v1.web.HttpResponse.processing_started_at:type_name -> google.protobuf.Timestamp
	6, // 6: gcommon.v1.web.HttpResponse.generated_at:type_name -> google.protobuf.Timestamp
	6, // 7: gcommon.v1.web.HttpResponse.sent_at:type_name -> google.protobuf.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_web_proto_responses_http_response_per_proto_init() }
func file_pkg_web_proto_responses_http_response_per_proto_init() {
	if File_pkg_web_proto_responses_http_response_per_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_web_proto_responses_http_response_per_proto_rawDesc), len(file_pkg_web_proto_responses_http_response_per_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_web_proto_responses_http_response_per_proto_goTypes,
		DependencyIndexes: file_pkg_web_proto_responses_http_response_per_proto_depIdxs,
		MessageInfos:      file_pkg_web_proto_responses_http_response_per_proto_msgTypes,
	}.Build()
	File_pkg_web_proto_responses_http_response_per_proto = out.File
	file_pkg_web_proto_responses_http_response_per_proto_goTypes = nil
	file_pkg_web_proto_responses_http_response_per_proto_depIdxs = nil
}
