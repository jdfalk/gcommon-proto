// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/web/proto/requests/create_session_request.proto

//go:build !protoopaque

package webpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateSessionRequest request definition.
type CreateSessionRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// User ID for the new session
	UserId *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// Optional initial metadata
	Metadata      map[string]string `protobuf:"bytes,2,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_pkg_web_proto_requests_create_session_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_requests_create_session_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateSessionRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *CreateSessionRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateSessionRequest) SetUserId(v string) {
	x.UserId = &v
}

func (x *CreateSessionRequest) SetMetadata(v map[string]string) {
	x.Metadata = v
}

func (x *CreateSessionRequest) HasUserId() bool {
	if x == nil {
		return false
	}
	return x.UserId != nil
}

func (x *CreateSessionRequest) ClearUserId() {
	x.UserId = nil
}

type CreateSessionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// User ID for the new session
	UserId *string
	// Optional initial metadata
	Metadata map[string]string
}

func (b0 CreateSessionRequest_builder) Build() *CreateSessionRequest {
	m0 := &CreateSessionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.UserId = b.UserId
	x.Metadata = b.Metadata
	return m0
}

var File_pkg_web_proto_requests_create_session_request_proto protoreflect.FileDescriptor

const file_pkg_web_proto_requests_create_session_request_proto_rawDesc = "" +
	"\n" +
	"3pkg/web/proto/requests/create_session_request.proto\x12\x0egcommon.v1.web\x1a!google/protobuf/go_features.proto\"\xbc\x01\n" +
	"\x14CreateSessionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12N\n" +
	"\bmetadata\x18\x02 \x03(\v22.gcommon.v1.web.CreateSessionRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xc0\x01\n" +
	"\x12com.gcommon.v1.webB\x19CreateSessionRequestProtoP\x01Z-github.com/jdfalk/gcommon/pkg/web/proto;webpb\xa2\x02\x03GVW\xaa\x02\x0eGcommon.V1.Web\xca\x02\x0eGcommon\\V1\\Web\xe2\x02\x1aGcommon\\V1\\Web\\GPBMetadata\xea\x02\x10Gcommon::V1::Web\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_web_proto_requests_create_session_request_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_web_proto_requests_create_session_request_proto_goTypes = []any{
	(*CreateSessionRequest)(nil), // 0: gcommon.v1.web.CreateSessionRequest
	nil,                          // 1: gcommon.v1.web.CreateSessionRequest.MetadataEntry
}
var file_pkg_web_proto_requests_create_session_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.web.CreateSessionRequest.metadata:type_name -> gcommon.v1.web.CreateSessionRequest.MetadataEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_web_proto_requests_create_session_request_proto_init() }
func file_pkg_web_proto_requests_create_session_request_proto_init() {
	if File_pkg_web_proto_requests_create_session_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_web_proto_requests_create_session_request_proto_rawDesc), len(file_pkg_web_proto_requests_create_session_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_web_proto_requests_create_session_request_proto_goTypes,
		DependencyIndexes: file_pkg_web_proto_requests_create_session_request_proto_depIdxs,
		MessageInfos:      file_pkg_web_proto_requests_create_session_request_proto_msgTypes,
	}.Build()
	File_pkg_web_proto_requests_create_session_request_proto = out.File
	file_pkg_web_proto_requests_create_session_request_proto_goTypes = nil
	file_pkg_web_proto_requests_create_session_request_proto_depIdxs = nil
}
