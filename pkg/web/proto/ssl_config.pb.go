// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/web/proto/ssl_config.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SslConfig message definition.
type SslConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TLS protocol version
	Protocol *SSLProtocol `protobuf:"varint,1,opt,name=protocol,enum=gcommon.v1.web.SSLProtocol" json:"protocol,omitempty"`
	// Path to certificate file
	CertFile *string `protobuf:"bytes,2,opt,name=cert_file,json=certFile" json:"cert_file,omitempty"`
	// Path to key file
	KeyFile *string `protobuf:"bytes,3,opt,name=key_file,json=keyFile" json:"key_file,omitempty"`
	// Optional CA bundle path
	CaFile *string `protobuf:"bytes,4,opt,name=ca_file,json=caFile" json:"ca_file,omitempty"`
	// Require client certificates
	RequireClientAuth *bool `protobuf:"varint,5,opt,name=require_client_auth,json=requireClientAuth" json:"require_client_auth,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SslConfig) Reset() {
	*x = SslConfig{}
	mi := &file_pkg_web_proto_ssl_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SslConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SslConfig) ProtoMessage() {}

func (x *SslConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_ssl_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SslConfig.ProtoReflect.Descriptor instead.
func (*SslConfig) Descriptor() ([]byte, []int) {
	return file_pkg_web_proto_ssl_config_proto_rawDescGZIP(), []int{0}
}

func (x *SslConfig) GetProtocol() SSLProtocol {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return SSLProtocol_SSL_PROTOCOL_UNSPECIFIED
}

func (x *SslConfig) GetCertFile() string {
	if x != nil && x.CertFile != nil {
		return *x.CertFile
	}
	return ""
}

func (x *SslConfig) GetKeyFile() string {
	if x != nil && x.KeyFile != nil {
		return *x.KeyFile
	}
	return ""
}

func (x *SslConfig) GetCaFile() string {
	if x != nil && x.CaFile != nil {
		return *x.CaFile
	}
	return ""
}

func (x *SslConfig) GetRequireClientAuth() bool {
	if x != nil && x.RequireClientAuth != nil {
		return *x.RequireClientAuth
	}
	return false
}

var File_pkg_web_proto_ssl_config_proto protoreflect.FileDescriptor

const file_pkg_web_proto_ssl_config_proto_rawDesc = "" +
	"\n" +
	"\x1epkg/web/proto/ssl_config.proto\x12\x0egcommon.v1.web\x1a pkg/web/proto/ssl_protocol.proto\"\xc5\x01\n" +
	"\tSslConfig\x127\n" +
	"\bprotocol\x18\x01 \x01(\x0e2\x1b.gcommon.v1.web.SSLProtocolR\bprotocol\x12\x1b\n" +
	"\tcert_file\x18\x02 \x01(\tR\bcertFile\x12\x19\n" +
	"\bkey_file\x18\x03 \x01(\tR\akeyFile\x12\x17\n" +
	"\aca_file\x18\x04 \x01(\tR\x06caFile\x12.\n" +
	"\x13require_client_auth\x18\x05 \x01(\bR\x11requireClientAuthB\xa7\x01\n" +
	"\x12com.gcommon.v1.webB\x0eSslConfigProtoP\x01Z'github.com/jdfalk/gcommon/pkg/web/proto\xa2\x02\x03GVW\xaa\x02\x0eGcommon.V1.Web\xca\x02\x0eGcommon\\V1\\Web\xe2\x02\x1aGcommon\\V1\\Web\\GPBMetadata\xea\x02\x10Gcommon::V1::Webb\beditionsp\xe8\a"

var (
	file_pkg_web_proto_ssl_config_proto_rawDescOnce sync.Once
	file_pkg_web_proto_ssl_config_proto_rawDescData []byte
)

func file_pkg_web_proto_ssl_config_proto_rawDescGZIP() []byte {
	file_pkg_web_proto_ssl_config_proto_rawDescOnce.Do(func() {
		file_pkg_web_proto_ssl_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_web_proto_ssl_config_proto_rawDesc), len(file_pkg_web_proto_ssl_config_proto_rawDesc)))
	})
	return file_pkg_web_proto_ssl_config_proto_rawDescData
}

var file_pkg_web_proto_ssl_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_web_proto_ssl_config_proto_goTypes = []any{
	(*SslConfig)(nil), // 0: gcommon.v1.web.SslConfig
	(SSLProtocol)(0),  // 1: gcommon.v1.web.SSLProtocol
}
var file_pkg_web_proto_ssl_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.web.SslConfig.protocol:type_name -> gcommon.v1.web.SSLProtocol
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_web_proto_ssl_config_proto_init() }
func file_pkg_web_proto_ssl_config_proto_init() {
	if File_pkg_web_proto_ssl_config_proto != nil {
		return
	}
	file_pkg_web_proto_ssl_protocol_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_web_proto_ssl_config_proto_rawDesc), len(file_pkg_web_proto_ssl_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_web_proto_ssl_config_proto_goTypes,
		DependencyIndexes: file_pkg_web_proto_ssl_config_proto_depIdxs,
		MessageInfos:      file_pkg_web_proto_ssl_config_proto_msgTypes,
	}.Build()
	File_pkg_web_proto_ssl_config_proto = out.File
	file_pkg_web_proto_ssl_config_proto_goTypes = nil
	file_pkg_web_proto_ssl_config_proto_depIdxs = nil
}
