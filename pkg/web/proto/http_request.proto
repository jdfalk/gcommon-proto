// file: pkg/web/proto/requests/http_request_per.proto
// version: 1.0.0
// guid: fb9c0d1e-2f3a-4b5c-6d7e-8f9a0b1c2d3e

edition = "2023";

package gcommon.v1.web;

import "google/protobuf/any.proto";
import "google/protobuf/go_features.proto";
// Standard imports
import "google/protobuf/timestamp.proto";
// Common types
import "pkg/common/proto/request_metadata.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/web/proto";

/**
 * HttpRequest represents an HTTP request for processing by web services.
 * Captures all essential HTTP request information including headers,
 * body, and metadata for service mesh and proxy use cases.
 *
 * Follows 1-1-1 pattern: one message per file.
 */
message HttpRequest {
  // Required fields (1-10)

  /**
   * HTTP method (GET, POST, PUT, DELETE, etc.).
   */
  string method = 1;

  /**
   * Request URL including scheme, host, path, and query parameters.
   * Example: "https://api.example.com/v1/users?limit=10"
   */
  string url = 2;

  /**
   * HTTP protocol version (e.g., "HTTP/1.1", "HTTP/2", "HTTP/3").
   */
  string protocol_version = 3;

  // Optional fields (11-50)

  /**
   * Standard request metadata including authentication context,
   * tracing information, and client details.
   */
  gcommon.v1.common.RequestMetadata metadata = 11;

  /**
   * HTTP headers as key-value pairs.
   * Includes standard headers like Content-Type, Authorization, etc.
   */
  map<string, string> headers = 12;

  /**
   * Request body/payload data.
   * Can contain any content type (JSON, XML, binary, etc.).
   */
  google.protobuf.Any body = 13;

  /**
   * Query parameters extracted from the URL.
   * Provided separately for easier access.
   */
  map<string, string> query_params = 14;

  /**
   * Path parameters extracted from the URL pattern.
   * Example: For /users/{user_id}, would contain {"user_id": "123"}
   */
  map<string, string> path_params = 15;

  /**
   * Cookies sent with the request.
   */
  map<string, string> cookies = 16;

  /**
   * Client IP address (original or from proxy headers).
   */
  string client_ip = 17;

  /**
   * User agent string from the client.
   */
  string user_agent = 18;

  /**
   * Referrer URL (if present).
   */
  string referrer = 19;

  /**
   * Content length in bytes.
   */
  int64 content_length = 20;

  /**
   * Content type of the request body.
   */
  string content_type = 21;

  /**
   * Accept header value indicating preferred response types.
   */
  string accept = 22;

  /**
   * Accept-Language header for internationalization.
   */
  string accept_language = 23;

  /**
   * Accept-Encoding header for compression negotiation.
   */
  string accept_encoding = 24;

  /**
   * Authorization header value.
   */
  string authorization = 25;

  /**
   * Request ID for tracking and correlation.
   * May be generated by load balancers or API gateways.
   */
  string request_id = 26;

  /**
   * Session ID if the request is part of a user session.
   */
  string session_id = 27;

  /**
   * Target service name for routing in service mesh.
   */
  string target_service = 28;

  /**
   * Target service version for version-specific routing.
   */
  string target_version = 29;

  /**
   * Request timeout in milliseconds.
   */
  int64 timeout_ms = 30;

  /**
   * Whether the request expects a streaming response.
   */
  bool streaming = 31;

  /**
   * Whether the connection should be kept alive.
   */
  bool keep_alive = 32;

  // Timestamps (51-60)

  /**
   * When the request was received by the first proxy/gateway.
   */
  google.protobuf.Timestamp received_at = 51;

  /**
   * When the request was created/initiated by the client.
   */
  google.protobuf.Timestamp created_at = 52;
}
