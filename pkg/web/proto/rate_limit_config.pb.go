// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/web/proto/rate_limit_config.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RateLimitConfig message definition.
type RateLimitConfig struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled           bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_RequestsPerSecond int32                  `protobuf:"varint,2,opt,name=requests_per_second,json=requestsPerSecond"`
	xxx_hidden_BurstSize         int32                  `protobuf:"varint,3,opt,name=burst_size,json=burstSize"`
	xxx_hidden_Strategy          RateLimitStrategy      `protobuf:"varint,4,opt,name=strategy,enum=gcommon.v1.web.RateLimitStrategy"`
	xxx_hidden_KeyExtractor      *string                `protobuf:"bytes,5,opt,name=key_extractor,json=keyExtractor"`
	xxx_hidden_SkipConditions    []string               `protobuf:"bytes,6,rep,name=skip_conditions,json=skipConditions"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *RateLimitConfig) Reset() {
	*x = RateLimitConfig{}
	mi := &file_pkg_web_proto_rate_limit_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitConfig) ProtoMessage() {}

func (x *RateLimitConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_web_proto_rate_limit_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RateLimitConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *RateLimitConfig) GetRequestsPerSecond() int32 {
	if x != nil {
		return x.xxx_hidden_RequestsPerSecond
	}
	return 0
}

func (x *RateLimitConfig) GetBurstSize() int32 {
	if x != nil {
		return x.xxx_hidden_BurstSize
	}
	return 0
}

func (x *RateLimitConfig) GetStrategy() RateLimitStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_Strategy
		}
	}
	return RateLimitStrategy_RATE_LIMIT_STRATEGY_UNSPECIFIED
}

func (x *RateLimitConfig) GetKeyExtractor() string {
	if x != nil {
		if x.xxx_hidden_KeyExtractor != nil {
			return *x.xxx_hidden_KeyExtractor
		}
		return ""
	}
	return ""
}

func (x *RateLimitConfig) GetSkipConditions() []string {
	if x != nil {
		return x.xxx_hidden_SkipConditions
	}
	return nil
}

func (x *RateLimitConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *RateLimitConfig) SetRequestsPerSecond(v int32) {
	x.xxx_hidden_RequestsPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *RateLimitConfig) SetBurstSize(v int32) {
	x.xxx_hidden_BurstSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *RateLimitConfig) SetStrategy(v RateLimitStrategy) {
	x.xxx_hidden_Strategy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *RateLimitConfig) SetKeyExtractor(v string) {
	x.xxx_hidden_KeyExtractor = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *RateLimitConfig) SetSkipConditions(v []string) {
	x.xxx_hidden_SkipConditions = v
}

func (x *RateLimitConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RateLimitConfig) HasRequestsPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RateLimitConfig) HasBurstSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RateLimitConfig) HasStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RateLimitConfig) HasKeyExtractor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RateLimitConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *RateLimitConfig) ClearRequestsPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RequestsPerSecond = 0
}

func (x *RateLimitConfig) ClearBurstSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_BurstSize = 0
}

func (x *RateLimitConfig) ClearStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Strategy = RateLimitStrategy_RATE_LIMIT_STRATEGY_UNSPECIFIED
}

func (x *RateLimitConfig) ClearKeyExtractor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_KeyExtractor = nil
}

type RateLimitConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable rate limiting
	Enabled *bool
	// Requests per second
	RequestsPerSecond *int32
	// Burst size
	BurstSize *int32
	// Rate limit strategy
	Strategy *RateLimitStrategy
	// Rate limit key extractor
	KeyExtractor *string
	// Skip conditions
	SkipConditions []string
}

func (b0 RateLimitConfig_builder) Build() *RateLimitConfig {
	m0 := &RateLimitConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.RequestsPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_RequestsPerSecond = *b.RequestsPerSecond
	}
	if b.BurstSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_BurstSize = *b.BurstSize
	}
	if b.Strategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Strategy = *b.Strategy
	}
	if b.KeyExtractor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_KeyExtractor = b.KeyExtractor
	}
	x.xxx_hidden_SkipConditions = b.SkipConditions
	return m0
}

var File_pkg_web_proto_rate_limit_config_proto protoreflect.FileDescriptor

const file_pkg_web_proto_rate_limit_config_proto_rawDesc = "" +
	"\n" +
	"%pkg/web/proto/rate_limit_config.proto\x12\x0egcommon.v1.web\x1a!google/protobuf/go_features.proto\x1a'pkg/web/proto/rate_limit_strategy.proto\"\x87\x02\n" +
	"\x0fRateLimitConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12.\n" +
	"\x13requests_per_second\x18\x02 \x01(\x05R\x11requestsPerSecond\x12\x1d\n" +
	"\n" +
	"burst_size\x18\x03 \x01(\x05R\tburstSize\x12=\n" +
	"\bstrategy\x18\x04 \x01(\x0e2!.gcommon.v1.web.RateLimitStrategyR\bstrategy\x12#\n" +
	"\rkey_extractor\x18\x05 \x01(\tR\fkeyExtractor\x12'\n" +
	"\x0fskip_conditions\x18\x06 \x03(\tR\x0eskipConditionsB\xb5\x01\n" +
	"\x12com.gcommon.v1.webB\x14RateLimitConfigProtoP\x01Z'github.com/jdfalk/gcommon/pkg/web/proto\xa2\x02\x03GVW\xaa\x02\x0eGcommon.V1.Web\xca\x02\x0eGcommon\\V1\\Web\xe2\x02\x1aGcommon\\V1\\Web\\GPBMetadata\xea\x02\x10Gcommon::V1::Web\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_web_proto_rate_limit_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_web_proto_rate_limit_config_proto_goTypes = []any{
	(*RateLimitConfig)(nil), // 0: gcommon.v1.web.RateLimitConfig
	(RateLimitStrategy)(0),  // 1: gcommon.v1.web.RateLimitStrategy
}
var file_pkg_web_proto_rate_limit_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.web.RateLimitConfig.strategy:type_name -> gcommon.v1.web.RateLimitStrategy
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_web_proto_rate_limit_config_proto_init() }
func file_pkg_web_proto_rate_limit_config_proto_init() {
	if File_pkg_web_proto_rate_limit_config_proto != nil {
		return
	}
	file_pkg_web_proto_rate_limit_strategy_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_web_proto_rate_limit_config_proto_rawDesc), len(file_pkg_web_proto_rate_limit_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_web_proto_rate_limit_config_proto_goTypes,
		DependencyIndexes: file_pkg_web_proto_rate_limit_config_proto_depIdxs,
		MessageInfos:      file_pkg_web_proto_rate_limit_config_proto_msgTypes,
	}.Build()
	File_pkg_web_proto_rate_limit_config_proto = out.File
	file_pkg_web_proto_rate_limit_config_proto_goTypes = nil
	file_pkg_web_proto_rate_limit_config_proto_depIdxs = nil
}
