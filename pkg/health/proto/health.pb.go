// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: health.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ServingStatus represents the health status of a service.
type ServingStatus int32

const (
	// UNKNOWN indicates the health status could not be determined.
	ServingStatus_UNKNOWN ServingStatus = 0
	// SERVING indicates the service is healthy and serving requests.
	ServingStatus_SERVING ServingStatus = 1
	// NOT_SERVING indicates the service is unhealthy and not serving requests.
	ServingStatus_NOT_SERVING ServingStatus = 2
	// SERVING_DEGRADED indicates the service is partially healthy.
	ServingStatus_SERVING_DEGRADED ServingStatus = 3
)

// Enum value maps for ServingStatus.
var (
	ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
		3: "SERVING_DEGRADED",
	}
	ServingStatus_value = map[string]int32{
		"UNKNOWN":          0,
		"SERVING":          1,
		"NOT_SERVING":      2,
		"SERVING_DEGRADED": 3,
	}
)

func (x ServingStatus) Enum() *ServingStatus {
	p := new(ServingStatus)
	*p = x
	return p
}

func (x ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_health_proto_enumTypes[0].Descriptor()
}

func (ServingStatus) Type() protoreflect.EnumType {
	return &file_health_proto_enumTypes[0]
}

func (x ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServingStatus.Descriptor instead.
func (ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{0}
}

// CheckType identifies the type of health check.
type CheckType int32

const (
	// TYPE_UNSPECIFIED is the default, unspecified type.
	CheckType_TYPE_UNSPECIFIED CheckType = 0
	// LIVENESS indicates a liveness check.
	CheckType_LIVENESS CheckType = 1
	// READINESS indicates a readiness check.
	CheckType_READINESS CheckType = 2
	// STARTUP indicates a startup check.
	CheckType_STARTUP CheckType = 3
	// COMPONENT indicates a component check.
	CheckType_COMPONENT CheckType = 4
	// DEPENDENCY indicates a dependency check.
	CheckType_DEPENDENCY CheckType = 5
)

// Enum value maps for CheckType.
var (
	CheckType_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "LIVENESS",
		2: "READINESS",
		3: "STARTUP",
		4: "COMPONENT",
		5: "DEPENDENCY",
	}
	CheckType_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"LIVENESS":         1,
		"READINESS":        2,
		"STARTUP":          3,
		"COMPONENT":        4,
		"DEPENDENCY":       5,
	}
)

func (x CheckType) Enum() *CheckType {
	p := new(CheckType)
	*p = x
	return p
}

func (x CheckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckType) Descriptor() protoreflect.EnumDescriptor {
	return file_health_proto_enumTypes[1].Descriptor()
}

func (CheckType) Type() protoreflect.EnumType {
	return &file_health_proto_enumTypes[1]
}

func (x CheckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckType.Descriptor instead.
func (CheckType) EnumDescriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{1}
}

// HealthCheckRequest is the request message for health check operations.
type HealthCheckRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the service to check. If empty, the overall system health is checked.
	Service       string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_health_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// HealthCheckResponse is the response message for a health check operation.
type HealthCheckResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status of the checked service.
	Status ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=health.ServingStatus" json:"status,omitempty"`
	// Timestamp of when the check was performed (in RFC 3339 format).
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Additional details about the health status (optional).
	Details       map[string]string `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_health_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetStatus() ServingStatus {
	if x != nil {
		return x.Status
	}
	return ServingStatus_UNKNOWN
}

func (x *HealthCheckResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *HealthCheckResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// HealthCheckAllRequest is the request message for checking all health checks.
type HealthCheckAllRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Include detailed results for each check.
	IncludeDetails bool `protobuf:"varint,1,opt,name=include_details,json=includeDetails,proto3" json:"include_details,omitempty"`
	// Filter checks by type.
	Types         []CheckType `protobuf:"varint,2,rep,packed,name=types,proto3,enum=health.CheckType" json:"types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckAllRequest) Reset() {
	*x = HealthCheckAllRequest{}
	mi := &file_health_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckAllRequest) ProtoMessage() {}

func (x *HealthCheckAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckAllRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckAllRequest) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckAllRequest) GetIncludeDetails() bool {
	if x != nil {
		return x.IncludeDetails
	}
	return false
}

func (x *HealthCheckAllRequest) GetTypes() []CheckType {
	if x != nil {
		return x.Types
	}
	return nil
}

// HealthCheckAllResponse contains results from all health checks.
type HealthCheckAllResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Overall status of the system.
	Status ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=health.ServingStatus" json:"status,omitempty"`
	// Timestamp of when the checks were performed.
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Results from individual checks.
	Results       map[string]*HealthCheckResult `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckAllResponse) Reset() {
	*x = HealthCheckAllResponse{}
	mi := &file_health_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckAllResponse) ProtoMessage() {}

func (x *HealthCheckAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckAllResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckAllResponse) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{3}
}

func (x *HealthCheckAllResponse) GetStatus() ServingStatus {
	if x != nil {
		return x.Status
	}
	return ServingStatus_UNKNOWN
}

func (x *HealthCheckAllResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *HealthCheckAllResponse) GetResults() map[string]*HealthCheckResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// HealthCheckResult represents the result of a single health check.
type HealthCheckResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status of this check.
	Status ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=health.ServingStatus" json:"status,omitempty"`
	// Type of check performed.
	Type CheckType `protobuf:"varint,2,opt,name=type,proto3,enum=health.CheckType" json:"type,omitempty"`
	// Timestamp when the check was performed.
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Duration of the check in milliseconds.
	DurationMs int64 `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	// Error message if the check failed.
	Error string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	// Additional details about the check.
	Details map[string]string `protobuf:"bytes,6,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Results of nested checks (if any).
	Children      map[string]*HealthCheckResult `protobuf:"bytes,7,rep,name=children,proto3" json:"children,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResult) Reset() {
	*x = HealthCheckResult{}
	mi := &file_health_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResult) ProtoMessage() {}

func (x *HealthCheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResult.ProtoReflect.Descriptor instead.
func (*HealthCheckResult) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{4}
}

func (x *HealthCheckResult) GetStatus() ServingStatus {
	if x != nil {
		return x.Status
	}
	return ServingStatus_UNKNOWN
}

func (x *HealthCheckResult) GetType() CheckType {
	if x != nil {
		return x.Type
	}
	return CheckType_TYPE_UNSPECIFIED
}

func (x *HealthCheckResult) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *HealthCheckResult) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *HealthCheckResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *HealthCheckResult) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *HealthCheckResult) GetChildren() map[string]*HealthCheckResult {
	if x != nil {
		return x.Children
	}
	return nil
}

// HealthConfig represents the configuration for the health system.
type HealthConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the health check system is enabled.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Base path for health endpoints.
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Path for liveness endpoint.
	LivenessPath string `protobuf:"bytes,3,opt,name=liveness_path,json=livenessPath,proto3" json:"liveness_path,omitempty"`
	// Path for readiness endpoint.
	ReadinessPath string `protobuf:"bytes,4,opt,name=readiness_path,json=readinessPath,proto3" json:"readiness_path,omitempty"`
	// Path for detailed health info.
	DetailsPath string `protobuf:"bytes,5,opt,name=details_path,json=detailsPath,proto3" json:"details_path,omitempty"`
	// Enable the liveness endpoint.
	EnableLivenessEndpoint bool `protobuf:"varint,6,opt,name=enable_liveness_endpoint,json=enableLivenessEndpoint,proto3" json:"enable_liveness_endpoint,omitempty"`
	// Enable the readiness endpoint.
	EnableReadinessEndpoint bool `protobuf:"varint,7,opt,name=enable_readiness_endpoint,json=enableReadinessEndpoint,proto3" json:"enable_readiness_endpoint,omitempty"`
	// Require authentication for detailed health info.
	RequireAuthentication bool `protobuf:"varint,8,opt,name=require_authentication,json=requireAuthentication,proto3" json:"require_authentication,omitempty"`
	// Authentication header value.
	AuthHeader string `protobuf:"bytes,9,opt,name=auth_header,json=authHeader,proto3" json:"auth_header,omitempty"`
	// Default timeout for health checks in milliseconds.
	DefaultTimeoutMs int64 `protobuf:"varint,10,opt,name=default_timeout_ms,json=defaultTimeoutMs,proto3" json:"default_timeout_ms,omitempty"`
	// Interval for background health checks in milliseconds.
	CheckIntervalMs int64 `protobuf:"varint,11,opt,name=check_interval_ms,json=checkIntervalMs,proto3" json:"check_interval_ms,omitempty"`
	// Log status changes to health checks.
	LogStatusChanges bool `protobuf:"varint,12,opt,name=log_status_changes,json=logStatusChanges,proto3" json:"log_status_changes,omitempty"`
	// Enable metrics for health checks.
	MetricsEnabled bool `protobuf:"varint,13,opt,name=metrics_enabled,json=metricsEnabled,proto3" json:"metrics_enabled,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *HealthConfig) Reset() {
	*x = HealthConfig{}
	mi := &file_health_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthConfig) ProtoMessage() {}

func (x *HealthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthConfig.ProtoReflect.Descriptor instead.
func (*HealthConfig) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{5}
}

func (x *HealthConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *HealthConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *HealthConfig) GetLivenessPath() string {
	if x != nil {
		return x.LivenessPath
	}
	return ""
}

func (x *HealthConfig) GetReadinessPath() string {
	if x != nil {
		return x.ReadinessPath
	}
	return ""
}

func (x *HealthConfig) GetDetailsPath() string {
	if x != nil {
		return x.DetailsPath
	}
	return ""
}

func (x *HealthConfig) GetEnableLivenessEndpoint() bool {
	if x != nil {
		return x.EnableLivenessEndpoint
	}
	return false
}

func (x *HealthConfig) GetEnableReadinessEndpoint() bool {
	if x != nil {
		return x.EnableReadinessEndpoint
	}
	return false
}

func (x *HealthConfig) GetRequireAuthentication() bool {
	if x != nil {
		return x.RequireAuthentication
	}
	return false
}

func (x *HealthConfig) GetAuthHeader() string {
	if x != nil {
		return x.AuthHeader
	}
	return ""
}

func (x *HealthConfig) GetDefaultTimeoutMs() int64 {
	if x != nil {
		return x.DefaultTimeoutMs
	}
	return 0
}

func (x *HealthConfig) GetCheckIntervalMs() int64 {
	if x != nil {
		return x.CheckIntervalMs
	}
	return 0
}

func (x *HealthConfig) GetLogStatusChanges() bool {
	if x != nil {
		return x.LogStatusChanges
	}
	return false
}

func (x *HealthConfig) GetMetricsEnabled() bool {
	if x != nil {
		return x.MetricsEnabled
	}
	return false
}

// RemediationDetails contains information about a remediation attempt.
type RemediationDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the check being remediated.
	CheckName string `protobuf:"bytes,1,opt,name=check_name,json=checkName,proto3" json:"check_name,omitempty"`
	// Number of remediation attempts made.
	AttemptCount int32 `protobuf:"varint,2,opt,name=attempt_count,json=attemptCount,proto3" json:"attempt_count,omitempty"`
	// Maximum allowed attempts.
	MaxAttempts int32 `protobuf:"varint,3,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	// Whether the remediation was successful.
	Success bool `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	// Error message if remediation failed.
	Error string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	// Duration of the remediation attempt in milliseconds.
	DurationMs int64 `protobuf:"varint,6,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	// Timestamp when remediation was attempted.
	Timestamp     string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemediationDetails) Reset() {
	*x = RemediationDetails{}
	mi := &file_health_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemediationDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemediationDetails) ProtoMessage() {}

func (x *RemediationDetails) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemediationDetails.ProtoReflect.Descriptor instead.
func (*RemediationDetails) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{6}
}

func (x *RemediationDetails) GetCheckName() string {
	if x != nil {
		return x.CheckName
	}
	return ""
}

func (x *RemediationDetails) GetAttemptCount() int32 {
	if x != nil {
		return x.AttemptCount
	}
	return 0
}

func (x *RemediationDetails) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *RemediationDetails) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemediationDetails) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RemediationDetails) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *RemediationDetails) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_health_proto protoreflect.FileDescriptor

const file_health_proto_rawDesc = "" +
	"\n" +
	"\fhealth.proto\x12\x06health\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\xe2\x01\n" +
	"\x13HealthCheckResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\x0e2\x15.health.ServingStatusR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\tR\ttimestamp\x12B\n" +
	"\adetails\x18\x03 \x03(\v2(.health.HealthCheckResponse.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\x15HealthCheckAllRequest\x12'\n" +
	"\x0finclude_details\x18\x01 \x01(\bR\x0eincludeDetails\x12'\n" +
	"\x05types\x18\x02 \x03(\x0e2\x11.health.CheckTypeR\x05types\"\x83\x02\n" +
	"\x16HealthCheckAllResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\x0e2\x15.health.ServingStatusR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\tR\ttimestamp\x12E\n" +
	"\aresults\x18\x03 \x03(\v2+.health.HealthCheckAllResponse.ResultsEntryR\aresults\x1aU\n" +
	"\fResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.health.HealthCheckResultR\x05value:\x028\x01\"\xd9\x03\n" +
	"\x11HealthCheckResult\x12-\n" +
	"\x06status\x18\x01 \x01(\x0e2\x15.health.ServingStatusR\x06status\x12%\n" +
	"\x04type\x18\x02 \x01(\x0e2\x11.health.CheckTypeR\x04type\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\x12@\n" +
	"\adetails\x18\x06 \x03(\v2&.health.HealthCheckResult.DetailsEntryR\adetails\x12C\n" +
	"\bchildren\x18\a \x03(\v2'.health.HealthCheckResult.ChildrenEntryR\bchildren\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aV\n" +
	"\rChildrenEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.health.HealthCheckResultR\x05value:\x028\x01\"\xb2\x04\n" +
	"\fHealthConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1a\n" +
	"\bendpoint\x18\x02 \x01(\tR\bendpoint\x12#\n" +
	"\rliveness_path\x18\x03 \x01(\tR\flivenessPath\x12%\n" +
	"\x0ereadiness_path\x18\x04 \x01(\tR\rreadinessPath\x12!\n" +
	"\fdetails_path\x18\x05 \x01(\tR\vdetailsPath\x128\n" +
	"\x18enable_liveness_endpoint\x18\x06 \x01(\bR\x16enableLivenessEndpoint\x12:\n" +
	"\x19enable_readiness_endpoint\x18\a \x01(\bR\x17enableReadinessEndpoint\x125\n" +
	"\x16require_authentication\x18\b \x01(\bR\x15requireAuthentication\x12\x1f\n" +
	"\vauth_header\x18\t \x01(\tR\n" +
	"authHeader\x12,\n" +
	"\x12default_timeout_ms\x18\n" +
	" \x01(\x03R\x10defaultTimeoutMs\x12*\n" +
	"\x11check_interval_ms\x18\v \x01(\x03R\x0fcheckIntervalMs\x12,\n" +
	"\x12log_status_changes\x18\f \x01(\bR\x10logStatusChanges\x12'\n" +
	"\x0fmetrics_enabled\x18\r \x01(\bR\x0emetricsEnabled\"\xea\x01\n" +
	"\x12RemediationDetails\x12\x1d\n" +
	"\n" +
	"check_name\x18\x01 \x01(\tR\tcheckName\x12#\n" +
	"\rattempt_count\x18\x02 \x01(\x05R\fattemptCount\x12!\n" +
	"\fmax_attempts\x18\x03 \x01(\x05R\vmaxAttempts\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\x12\x1f\n" +
	"\vduration_ms\x18\x06 \x01(\x03R\n" +
	"durationMs\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\tR\ttimestamp*P\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x02\x12\x14\n" +
	"\x10SERVING_DEGRADED\x10\x03*j\n" +
	"\tCheckType\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bLIVENESS\x10\x01\x12\r\n" +
	"\tREADINESS\x10\x02\x12\v\n" +
	"\aSTARTUP\x10\x03\x12\r\n" +
	"\tCOMPONENT\x10\x04\x12\x0e\n" +
	"\n" +
	"DEPENDENCY\x10\x052\xe6\x01\n" +
	"\rHealthService\x12B\n" +
	"\x05Check\x12\x1a.health.HealthCheckRequest\x1a\x1b.health.HealthCheckResponse\"\x00\x12D\n" +
	"\x05Watch\x12\x1a.health.HealthCheckRequest\x1a\x1b.health.HealthCheckResponse\"\x000\x01\x12K\n" +
	"\bCheckAll\x12\x1d.health.HealthCheckAllRequest\x1a\x1e.health.HealthCheckAllResponse\"\x00B,Z*github.com/jdfalk/gcommon/pkg/health/protob\x06proto3"

var (
	file_health_proto_rawDescOnce sync.Once
	file_health_proto_rawDescData []byte
)

func file_health_proto_rawDescGZIP() []byte {
	file_health_proto_rawDescOnce.Do(func() {
		file_health_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_health_proto_rawDesc), len(file_health_proto_rawDesc)))
	})
	return file_health_proto_rawDescData
}

var file_health_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_health_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_health_proto_goTypes = []any{
	(ServingStatus)(0),             // 0: health.ServingStatus
	(CheckType)(0),                 // 1: health.CheckType
	(*HealthCheckRequest)(nil),     // 2: health.HealthCheckRequest
	(*HealthCheckResponse)(nil),    // 3: health.HealthCheckResponse
	(*HealthCheckAllRequest)(nil),  // 4: health.HealthCheckAllRequest
	(*HealthCheckAllResponse)(nil), // 5: health.HealthCheckAllResponse
	(*HealthCheckResult)(nil),      // 6: health.HealthCheckResult
	(*HealthConfig)(nil),           // 7: health.HealthConfig
	(*RemediationDetails)(nil),     // 8: health.RemediationDetails
	nil,                            // 9: health.HealthCheckResponse.DetailsEntry
	nil,                            // 10: health.HealthCheckAllResponse.ResultsEntry
	nil,                            // 11: health.HealthCheckResult.DetailsEntry
	nil,                            // 12: health.HealthCheckResult.ChildrenEntry
}
var file_health_proto_depIdxs = []int32{
	0,  // 0: health.HealthCheckResponse.status:type_name -> health.ServingStatus
	9,  // 1: health.HealthCheckResponse.details:type_name -> health.HealthCheckResponse.DetailsEntry
	1,  // 2: health.HealthCheckAllRequest.types:type_name -> health.CheckType
	0,  // 3: health.HealthCheckAllResponse.status:type_name -> health.ServingStatus
	10, // 4: health.HealthCheckAllResponse.results:type_name -> health.HealthCheckAllResponse.ResultsEntry
	0,  // 5: health.HealthCheckResult.status:type_name -> health.ServingStatus
	1,  // 6: health.HealthCheckResult.type:type_name -> health.CheckType
	11, // 7: health.HealthCheckResult.details:type_name -> health.HealthCheckResult.DetailsEntry
	12, // 8: health.HealthCheckResult.children:type_name -> health.HealthCheckResult.ChildrenEntry
	6,  // 9: health.HealthCheckAllResponse.ResultsEntry.value:type_name -> health.HealthCheckResult
	6,  // 10: health.HealthCheckResult.ChildrenEntry.value:type_name -> health.HealthCheckResult
	2,  // 11: health.HealthService.Check:input_type -> health.HealthCheckRequest
	2,  // 12: health.HealthService.Watch:input_type -> health.HealthCheckRequest
	4,  // 13: health.HealthService.CheckAll:input_type -> health.HealthCheckAllRequest
	3,  // 14: health.HealthService.Check:output_type -> health.HealthCheckResponse
	3,  // 15: health.HealthService.Watch:output_type -> health.HealthCheckResponse
	5,  // 16: health.HealthService.CheckAll:output_type -> health.HealthCheckAllResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_health_proto_init() }
func file_health_proto_init() {
	if File_health_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_health_proto_rawDesc), len(file_health_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_health_proto_goTypes,
		DependencyIndexes: file_health_proto_depIdxs,
		EnumInfos:         file_health_proto_enumTypes,
		MessageInfos:      file_health_proto_msgTypes,
	}.Build()
	File_health_proto = out.File
	file_health_proto_goTypes = nil
	file_health_proto_depIdxs = nil
}
