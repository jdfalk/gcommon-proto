// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/log/proto/log.proto

//go:build protoopaque

package proto

import (
	_ "github.com/jdfalk/gcommon/pkg/common/proto"
	messages "github.com/jdfalk/gcommon/pkg/common/proto/messages"
	types "github.com/jdfalk/gcommon/pkg/common/proto/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Log level enumeration
type LogLevel int32

const (
	LogLevel_LOG_LEVEL_UNSPECIFIED LogLevel = 0
	LogLevel_LOG_LEVEL_TRACE       LogLevel = 1
	LogLevel_LOG_LEVEL_DEBUG       LogLevel = 2
	LogLevel_LOG_LEVEL_INFO        LogLevel = 3
	LogLevel_LOG_LEVEL_WARN        LogLevel = 4
	LogLevel_LOG_LEVEL_ERROR       LogLevel = 5
	LogLevel_LOG_LEVEL_FATAL       LogLevel = 6
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "LOG_LEVEL_UNSPECIFIED",
		1: "LOG_LEVEL_TRACE",
		2: "LOG_LEVEL_DEBUG",
		3: "LOG_LEVEL_INFO",
		4: "LOG_LEVEL_WARN",
		5: "LOG_LEVEL_ERROR",
		6: "LOG_LEVEL_FATAL",
	}
	LogLevel_value = map[string]int32{
		"LOG_LEVEL_UNSPECIFIED": 0,
		"LOG_LEVEL_TRACE":       1,
		"LOG_LEVEL_DEBUG":       2,
		"LOG_LEVEL_INFO":        3,
		"LOG_LEVEL_WARN":        4,
		"LOG_LEVEL_ERROR":       5,
		"LOG_LEVEL_FATAL":       6,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_log_proto_log_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_pkg_log_proto_log_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Log sort fields
type LogSortField int32

const (
	LogSortField_LOG_SORT_FIELD_UNSPECIFIED LogSortField = 0
	LogSortField_LOG_SORT_FIELD_TIMESTAMP   LogSortField = 1
	LogSortField_LOG_SORT_FIELD_LEVEL       LogSortField = 2
	LogSortField_LOG_SORT_FIELD_LOGGER      LogSortField = 3
	LogSortField_LOG_SORT_FIELD_MESSAGE     LogSortField = 4
)

// Enum value maps for LogSortField.
var (
	LogSortField_name = map[int32]string{
		0: "LOG_SORT_FIELD_UNSPECIFIED",
		1: "LOG_SORT_FIELD_TIMESTAMP",
		2: "LOG_SORT_FIELD_LEVEL",
		3: "LOG_SORT_FIELD_LOGGER",
		4: "LOG_SORT_FIELD_MESSAGE",
	}
	LogSortField_value = map[string]int32{
		"LOG_SORT_FIELD_UNSPECIFIED": 0,
		"LOG_SORT_FIELD_TIMESTAMP":   1,
		"LOG_SORT_FIELD_LEVEL":       2,
		"LOG_SORT_FIELD_LOGGER":      3,
		"LOG_SORT_FIELD_MESSAGE":     4,
	}
)

func (x LogSortField) Enum() *LogSortField {
	p := new(LogSortField)
	*p = x
	return p
}

func (x LogSortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogSortField) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_log_proto_log_proto_enumTypes[1].Descriptor()
}

func (LogSortField) Type() protoreflect.EnumType {
	return &file_pkg_log_proto_log_proto_enumTypes[1]
}

func (x LogSortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Appender types
type AppenderType int32

const (
	AppenderType_APPENDER_TYPE_UNSPECIFIED  AppenderType = 0
	AppenderType_APPENDER_TYPE_CONSOLE      AppenderType = 1
	AppenderType_APPENDER_TYPE_FILE         AppenderType = 2
	AppenderType_APPENDER_TYPE_ROLLING_FILE AppenderType = 3
	AppenderType_APPENDER_TYPE_SYSLOG       AppenderType = 4
	AppenderType_APPENDER_TYPE_NETWORK      AppenderType = 5
	AppenderType_APPENDER_TYPE_DATABASE     AppenderType = 6
)

// Enum value maps for AppenderType.
var (
	AppenderType_name = map[int32]string{
		0: "APPENDER_TYPE_UNSPECIFIED",
		1: "APPENDER_TYPE_CONSOLE",
		2: "APPENDER_TYPE_FILE",
		3: "APPENDER_TYPE_ROLLING_FILE",
		4: "APPENDER_TYPE_SYSLOG",
		5: "APPENDER_TYPE_NETWORK",
		6: "APPENDER_TYPE_DATABASE",
	}
	AppenderType_value = map[string]int32{
		"APPENDER_TYPE_UNSPECIFIED":  0,
		"APPENDER_TYPE_CONSOLE":      1,
		"APPENDER_TYPE_FILE":         2,
		"APPENDER_TYPE_ROLLING_FILE": 3,
		"APPENDER_TYPE_SYSLOG":       4,
		"APPENDER_TYPE_NETWORK":      5,
		"APPENDER_TYPE_DATABASE":     6,
	}
)

func (x AppenderType) Enum() *AppenderType {
	p := new(AppenderType)
	*p = x
	return p
}

func (x AppenderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppenderType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_log_proto_log_proto_enumTypes[2].Descriptor()
}

func (AppenderType) Type() protoreflect.EnumType {
	return &file_pkg_log_proto_log_proto_enumTypes[2]
}

func (x AppenderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Formatter type enumeration
type FormatterType int32

const (
	FormatterType_FORMATTER_TYPE_UNSPECIFIED FormatterType = 0
	FormatterType_FORMATTER_TYPE_TEXT        FormatterType = 1
	FormatterType_FORMATTER_TYPE_JSON        FormatterType = 2
	FormatterType_FORMATTER_TYPE_XML         FormatterType = 3
	FormatterType_FORMATTER_TYPE_CUSTOM      FormatterType = 4
)

// Enum value maps for FormatterType.
var (
	FormatterType_name = map[int32]string{
		0: "FORMATTER_TYPE_UNSPECIFIED",
		1: "FORMATTER_TYPE_TEXT",
		2: "FORMATTER_TYPE_JSON",
		3: "FORMATTER_TYPE_XML",
		4: "FORMATTER_TYPE_CUSTOM",
	}
	FormatterType_value = map[string]int32{
		"FORMATTER_TYPE_UNSPECIFIED": 0,
		"FORMATTER_TYPE_TEXT":        1,
		"FORMATTER_TYPE_JSON":        2,
		"FORMATTER_TYPE_XML":         3,
		"FORMATTER_TYPE_CUSTOM":      4,
	}
)

func (x FormatterType) Enum() *FormatterType {
	p := new(FormatterType)
	*p = x
	return p
}

func (x FormatterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FormatterType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_log_proto_log_proto_enumTypes[3].Descriptor()
}

func (FormatterType) Type() protoreflect.EnumType {
	return &file_pkg_log_proto_log_proto_enumTypes[3]
}

func (x FormatterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Filter type enumeration
type FilterType int32

const (
	FilterType_FILTER_TYPE_UNSPECIFIED FilterType = 0
	FilterType_FILTER_TYPE_LEVEL       FilterType = 1
	FilterType_FILTER_TYPE_LOGGER      FilterType = 2
	FilterType_FILTER_TYPE_MESSAGE     FilterType = 3
	FilterType_FILTER_TYPE_FIELD       FilterType = 4
)

// Enum value maps for FilterType.
var (
	FilterType_name = map[int32]string{
		0: "FILTER_TYPE_UNSPECIFIED",
		1: "FILTER_TYPE_LEVEL",
		2: "FILTER_TYPE_LOGGER",
		3: "FILTER_TYPE_MESSAGE",
		4: "FILTER_TYPE_FIELD",
	}
	FilterType_value = map[string]int32{
		"FILTER_TYPE_UNSPECIFIED": 0,
		"FILTER_TYPE_LEVEL":       1,
		"FILTER_TYPE_LOGGER":      2,
		"FILTER_TYPE_MESSAGE":     3,
		"FILTER_TYPE_FIELD":       4,
	}
)

func (x FilterType) Enum() *FilterType {
	p := new(FilterType)
	*p = x
	return p
}

func (x FilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_log_proto_log_proto_enumTypes[4].Descriptor()
}

func (FilterType) Type() protoreflect.EnumType {
	return &file_pkg_log_proto_log_proto_enumTypes[4]
}

func (x FilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Logger status enumeration
type LoggerStatus int32

const (
	LoggerStatus_LOGGER_STATUS_UNSPECIFIED LoggerStatus = 0
	LoggerStatus_LOGGER_STATUS_ACTIVE      LoggerStatus = 1
	LoggerStatus_LOGGER_STATUS_INACTIVE    LoggerStatus = 2
	LoggerStatus_LOGGER_STATUS_ERROR       LoggerStatus = 3
)

// Enum value maps for LoggerStatus.
var (
	LoggerStatus_name = map[int32]string{
		0: "LOGGER_STATUS_UNSPECIFIED",
		1: "LOGGER_STATUS_ACTIVE",
		2: "LOGGER_STATUS_INACTIVE",
		3: "LOGGER_STATUS_ERROR",
	}
	LoggerStatus_value = map[string]int32{
		"LOGGER_STATUS_UNSPECIFIED": 0,
		"LOGGER_STATUS_ACTIVE":      1,
		"LOGGER_STATUS_INACTIVE":    2,
		"LOGGER_STATUS_ERROR":       3,
	}
)

func (x LoggerStatus) Enum() *LoggerStatus {
	p := new(LoggerStatus)
	*p = x
	return p
}

func (x LoggerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoggerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_log_proto_log_proto_enumTypes[5].Descriptor()
}

func (LoggerStatus) Type() protoreflect.EnumType {
	return &file_pkg_log_proto_log_proto_enumTypes[5]
}

func (x LoggerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Compression type enumeration
type CompressionType int32

const (
	CompressionType_COMPRESSION_TYPE_UNSPECIFIED CompressionType = 0
	CompressionType_COMPRESSION_TYPE_NONE        CompressionType = 1
	CompressionType_COMPRESSION_TYPE_GZIP        CompressionType = 2
	CompressionType_COMPRESSION_TYPE_ZIP         CompressionType = 3
	CompressionType_COMPRESSION_TYPE_BZIP2       CompressionType = 4
	CompressionType_COMPRESSION_TYPE_TAR_GZ      CompressionType = 5
)

// Enum value maps for CompressionType.
var (
	CompressionType_name = map[int32]string{
		0: "COMPRESSION_TYPE_UNSPECIFIED",
		1: "COMPRESSION_TYPE_NONE",
		2: "COMPRESSION_TYPE_GZIP",
		3: "COMPRESSION_TYPE_ZIP",
		4: "COMPRESSION_TYPE_BZIP2",
		5: "COMPRESSION_TYPE_TAR_GZ",
	}
	CompressionType_value = map[string]int32{
		"COMPRESSION_TYPE_UNSPECIFIED": 0,
		"COMPRESSION_TYPE_NONE":        1,
		"COMPRESSION_TYPE_GZIP":        2,
		"COMPRESSION_TYPE_ZIP":         3,
		"COMPRESSION_TYPE_BZIP2":       4,
		"COMPRESSION_TYPE_TAR_GZ":      5,
	}
)

func (x CompressionType) Enum() *CompressionType {
	p := new(CompressionType)
	*p = x
	return p
}

func (x CompressionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressionType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_log_proto_log_proto_enumTypes[6].Descriptor()
}

func (CompressionType) Type() protoreflect.EnumType {
	return &file_pkg_log_proto_log_proto_enumTypes[6]
}

func (x CompressionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Log request for writing a single entry
type LogRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Entry       *LogEntry                 `protobuf:"bytes,1,opt,name=entry"`
	xxx_hidden_Logger      *string                   `protobuf:"bytes,2,opt,name=logger"`
	xxx_hidden_Metadata    *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogRequest) GetEntry() *LogEntry {
	if x != nil {
		return x.xxx_hidden_Entry
	}
	return nil
}

func (x *LogRequest) GetLogger() string {
	if x != nil {
		if x.xxx_hidden_Logger != nil {
			return *x.xxx_hidden_Logger
		}
		return ""
	}
	return ""
}

func (x *LogRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *LogRequest) SetEntry(v *LogEntry) {
	x.xxx_hidden_Entry = v
}

func (x *LogRequest) SetLogger(v string) {
	x.xxx_hidden_Logger = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *LogRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *LogRequest) HasEntry() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Entry != nil
}

func (x *LogRequest) HasLogger() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LogRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *LogRequest) ClearEntry() {
	x.xxx_hidden_Entry = nil
}

func (x *LogRequest) ClearLogger() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Logger = nil
}

func (x *LogRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type LogRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Log entry to write
	Entry *LogEntry
	// Logger name (optional)
	Logger *string
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 LogRequest_builder) Build() *LogRequest {
	m0 := &LogRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Entry = b.Entry
	if b.Logger != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Logger = b.Logger
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Log response
type LogResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Success     bool                   `protobuf:"varint,1,opt,name=success"`
	xxx_hidden_EntryId     *string                `protobuf:"bytes,2,opt,name=entry_id,json=entryId"`
	xxx_hidden_Error       *messages.Error        `protobuf:"bytes,3,opt,name=error"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *LogResponse) GetEntryId() string {
	if x != nil {
		if x.xxx_hidden_EntryId != nil {
			return *x.xxx_hidden_EntryId
		}
		return ""
	}
	return ""
}

func (x *LogResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *LogResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *LogResponse) SetEntryId(v string) {
	x.xxx_hidden_EntryId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *LogResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *LogResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LogResponse) HasEntryId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LogResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *LogResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Success = false
}

func (x *LogResponse) ClearEntryId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_EntryId = nil
}

func (x *LogResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type LogResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Entry ID (if supported)
	EntryId *string
	// Error information
	Error *messages.Error
}

func (b0 LogResponse_builder) Build() *LogResponse {
	m0 := &LogResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Success = *b.Success
	}
	if b.EntryId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_EntryId = b.EntryId
	}
	x.xxx_hidden_Error = b.Error
	return m0
}

// Batch log request
type LogBatchRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Entries     *[]*LogEntry              `protobuf:"bytes,1,rep,name=entries"`
	xxx_hidden_Logger      *string                   `protobuf:"bytes,2,opt,name=logger"`
	xxx_hidden_Metadata    *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata"`
	xxx_hidden_Options     *BatchLogOptions          `protobuf:"bytes,4,opt,name=options"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LogBatchRequest) Reset() {
	*x = LogBatchRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBatchRequest) ProtoMessage() {}

func (x *LogBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogBatchRequest) GetEntries() []*LogEntry {
	if x != nil {
		if x.xxx_hidden_Entries != nil {
			return *x.xxx_hidden_Entries
		}
	}
	return nil
}

func (x *LogBatchRequest) GetLogger() string {
	if x != nil {
		if x.xxx_hidden_Logger != nil {
			return *x.xxx_hidden_Logger
		}
		return ""
	}
	return ""
}

func (x *LogBatchRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *LogBatchRequest) GetOptions() *BatchLogOptions {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *LogBatchRequest) SetEntries(v []*LogEntry) {
	x.xxx_hidden_Entries = &v
}

func (x *LogBatchRequest) SetLogger(v string) {
	x.xxx_hidden_Logger = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *LogBatchRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *LogBatchRequest) SetOptions(v *BatchLogOptions) {
	x.xxx_hidden_Options = v
}

func (x *LogBatchRequest) HasLogger() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LogBatchRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *LogBatchRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Options != nil
}

func (x *LogBatchRequest) ClearLogger() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Logger = nil
}

func (x *LogBatchRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *LogBatchRequest) ClearOptions() {
	x.xxx_hidden_Options = nil
}

type LogBatchRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Log entries to write
	Entries []*LogEntry
	// Logger name (optional)
	Logger *string
	// Request metadata
	Metadata *messages.RequestMetadata
	// Batch options
	Options *BatchLogOptions
}

func (b0 LogBatchRequest_builder) Build() *LogBatchRequest {
	m0 := &LogBatchRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Entries = &b.Entries
	if b.Logger != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Logger = b.Logger
	}
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Options = b.Options
	return m0
}

// Batch log options
type BatchLogOptions struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FailFast     bool                   `protobuf:"varint,1,opt,name=fail_fast,json=failFast"`
	xxx_hidden_MaxBatchSize int32                  `protobuf:"varint,2,opt,name=max_batch_size,json=maxBatchSize"`
	xxx_hidden_Timeout      *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *BatchLogOptions) Reset() {
	*x = BatchLogOptions{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchLogOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchLogOptions) ProtoMessage() {}

func (x *BatchLogOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatchLogOptions) GetFailFast() bool {
	if x != nil {
		return x.xxx_hidden_FailFast
	}
	return false
}

func (x *BatchLogOptions) GetMaxBatchSize() int32 {
	if x != nil {
		return x.xxx_hidden_MaxBatchSize
	}
	return 0
}

func (x *BatchLogOptions) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Timeout
	}
	return nil
}

func (x *BatchLogOptions) SetFailFast(v bool) {
	x.xxx_hidden_FailFast = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *BatchLogOptions) SetMaxBatchSize(v int32) {
	x.xxx_hidden_MaxBatchSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *BatchLogOptions) SetTimeout(v *durationpb.Duration) {
	x.xxx_hidden_Timeout = v
}

func (x *BatchLogOptions) HasFailFast() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BatchLogOptions) HasMaxBatchSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *BatchLogOptions) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timeout != nil
}

func (x *BatchLogOptions) ClearFailFast() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FailFast = false
}

func (x *BatchLogOptions) ClearMaxBatchSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxBatchSize = 0
}

func (x *BatchLogOptions) ClearTimeout() {
	x.xxx_hidden_Timeout = nil
}

type BatchLogOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether to fail fast on first error
	FailFast *bool
	// Maximum batch size
	MaxBatchSize *int32
	// Batch timeout
	Timeout *durationpb.Duration
}

func (b0 BatchLogOptions_builder) Build() *BatchLogOptions {
	m0 := &BatchLogOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FailFast != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_FailFast = *b.FailFast
	}
	if b.MaxBatchSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_MaxBatchSize = *b.MaxBatchSize
	}
	x.xxx_hidden_Timeout = b.Timeout
	return m0
}

// Batch log response
type LogBatchResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SuccessCount int32                  `protobuf:"varint,1,opt,name=success_count,json=successCount"`
	xxx_hidden_FailureCount int32                  `protobuf:"varint,2,opt,name=failure_count,json=failureCount"`
	xxx_hidden_EntryIds     []string               `protobuf:"bytes,3,rep,name=entry_ids,json=entryIds"`
	xxx_hidden_Error        *messages.Error        `protobuf:"bytes,4,opt,name=error"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *LogBatchResponse) Reset() {
	*x = LogBatchResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBatchResponse) ProtoMessage() {}

func (x *LogBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogBatchResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.xxx_hidden_SuccessCount
	}
	return 0
}

func (x *LogBatchResponse) GetFailureCount() int32 {
	if x != nil {
		return x.xxx_hidden_FailureCount
	}
	return 0
}

func (x *LogBatchResponse) GetEntryIds() []string {
	if x != nil {
		return x.xxx_hidden_EntryIds
	}
	return nil
}

func (x *LogBatchResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *LogBatchResponse) SetSuccessCount(v int32) {
	x.xxx_hidden_SuccessCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *LogBatchResponse) SetFailureCount(v int32) {
	x.xxx_hidden_FailureCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *LogBatchResponse) SetEntryIds(v []string) {
	x.xxx_hidden_EntryIds = v
}

func (x *LogBatchResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *LogBatchResponse) HasSuccessCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LogBatchResponse) HasFailureCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LogBatchResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *LogBatchResponse) ClearSuccessCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SuccessCount = 0
}

func (x *LogBatchResponse) ClearFailureCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FailureCount = 0
}

func (x *LogBatchResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type LogBatchResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Number of successfully written entries
	SuccessCount *int32
	// Number of failed entries
	FailureCount *int32
	// Entry IDs (if supported)
	EntryIds []string
	// Error information
	Error *messages.Error
}

func (b0 LogBatchResponse_builder) Build() *LogBatchResponse {
	m0 := &LogBatchResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SuccessCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_SuccessCount = *b.SuccessCount
	}
	if b.FailureCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FailureCount = *b.FailureCount
	}
	x.xxx_hidden_EntryIds = b.EntryIds
	x.xxx_hidden_Error = b.Error
	return m0
}

// Log entry representation
type LogEntry struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Level       LogLevel               `protobuf:"varint,1,opt,name=level,enum=gcommon.v1.log.LogLevel"`
	xxx_hidden_Message     *string                `protobuf:"bytes,2,opt,name=message"`
	xxx_hidden_Timestamp   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp"`
	xxx_hidden_Logger      *string                `protobuf:"bytes,4,opt,name=logger"`
	xxx_hidden_Thread      *string                `protobuf:"bytes,5,opt,name=thread"`
	xxx_hidden_Source      *SourceLocation        `protobuf:"bytes,6,opt,name=source"`
	xxx_hidden_Fields      map[string]*anypb.Any  `protobuf:"bytes,7,rep,name=fields" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Tags        []string               `protobuf:"bytes,8,rep,name=tags"`
	xxx_hidden_TraceId     *string                `protobuf:"bytes,9,opt,name=trace_id,json=traceId"`
	xxx_hidden_SpanId      *string                `protobuf:"bytes,10,opt,name=span_id,json=spanId"`
	xxx_hidden_UserId      *string                `protobuf:"bytes,11,opt,name=user_id,json=userId"`
	xxx_hidden_RequestId   *string                `protobuf:"bytes,12,opt,name=request_id,json=requestId"`
	xxx_hidden_ErrorInfo   *ErrorInfo             `protobuf:"bytes,13,opt,name=error_info,json=errorInfo"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogEntry) GetLevel() LogLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Level
		}
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *LogEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *LogEntry) GetLogger() string {
	if x != nil {
		if x.xxx_hidden_Logger != nil {
			return *x.xxx_hidden_Logger
		}
		return ""
	}
	return ""
}

func (x *LogEntry) GetThread() string {
	if x != nil {
		if x.xxx_hidden_Thread != nil {
			return *x.xxx_hidden_Thread
		}
		return ""
	}
	return ""
}

func (x *LogEntry) GetSource() *SourceLocation {
	if x != nil {
		return x.xxx_hidden_Source
	}
	return nil
}

func (x *LogEntry) GetFields() map[string]*anypb.Any {
	if x != nil {
		return x.xxx_hidden_Fields
	}
	return nil
}

func (x *LogEntry) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *LogEntry) GetTraceId() string {
	if x != nil {
		if x.xxx_hidden_TraceId != nil {
			return *x.xxx_hidden_TraceId
		}
		return ""
	}
	return ""
}

func (x *LogEntry) GetSpanId() string {
	if x != nil {
		if x.xxx_hidden_SpanId != nil {
			return *x.xxx_hidden_SpanId
		}
		return ""
	}
	return ""
}

func (x *LogEntry) GetUserId() string {
	if x != nil {
		if x.xxx_hidden_UserId != nil {
			return *x.xxx_hidden_UserId
		}
		return ""
	}
	return ""
}

func (x *LogEntry) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *LogEntry) GetErrorInfo() *ErrorInfo {
	if x != nil {
		return x.xxx_hidden_ErrorInfo
	}
	return nil
}

func (x *LogEntry) SetLevel(v LogLevel) {
	x.xxx_hidden_Level = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 13)
}

func (x *LogEntry) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 13)
}

func (x *LogEntry) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *LogEntry) SetLogger(v string) {
	x.xxx_hidden_Logger = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 13)
}

func (x *LogEntry) SetThread(v string) {
	x.xxx_hidden_Thread = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 13)
}

func (x *LogEntry) SetSource(v *SourceLocation) {
	x.xxx_hidden_Source = v
}

func (x *LogEntry) SetFields(v map[string]*anypb.Any) {
	x.xxx_hidden_Fields = v
}

func (x *LogEntry) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *LogEntry) SetTraceId(v string) {
	x.xxx_hidden_TraceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 13)
}

func (x *LogEntry) SetSpanId(v string) {
	x.xxx_hidden_SpanId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 13)
}

func (x *LogEntry) SetUserId(v string) {
	x.xxx_hidden_UserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 13)
}

func (x *LogEntry) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 13)
}

func (x *LogEntry) SetErrorInfo(v *ErrorInfo) {
	x.xxx_hidden_ErrorInfo = v
}

func (x *LogEntry) HasLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LogEntry) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LogEntry) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *LogEntry) HasLogger() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *LogEntry) HasThread() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *LogEntry) HasSource() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Source != nil
}

func (x *LogEntry) HasTraceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *LogEntry) HasSpanId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *LogEntry) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *LogEntry) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *LogEntry) HasErrorInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ErrorInfo != nil
}

func (x *LogEntry) ClearLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Level = LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *LogEntry) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Message = nil
}

func (x *LogEntry) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *LogEntry) ClearLogger() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Logger = nil
}

func (x *LogEntry) ClearThread() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Thread = nil
}

func (x *LogEntry) ClearSource() {
	x.xxx_hidden_Source = nil
}

func (x *LogEntry) ClearTraceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_TraceId = nil
}

func (x *LogEntry) ClearSpanId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_SpanId = nil
}

func (x *LogEntry) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_UserId = nil
}

func (x *LogEntry) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_RequestId = nil
}

func (x *LogEntry) ClearErrorInfo() {
	x.xxx_hidden_ErrorInfo = nil
}

type LogEntry_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Log level
	Level *LogLevel
	// Log message
	Message *string
	// Timestamp
	Timestamp *timestamppb.Timestamp
	// Logger name
	Logger *string
	// Thread/goroutine information
	Thread *string
	// Source file information
	Source *SourceLocation
	// Structured fields
	Fields map[string]*anypb.Any
	// Tags for categorization
	Tags []string
	// Trace ID for distributed tracing
	TraceId *string
	// Span ID for distributed tracing
	SpanId *string
	// User ID associated with the log
	UserId *string
	// Request ID
	RequestId *string
	// Error information (if log level is ERROR or FATAL)
	ErrorInfo *ErrorInfo
}

func (b0 LogEntry_builder) Build() *LogEntry {
	m0 := &LogEntry{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Level != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 13)
		x.xxx_hidden_Level = *b.Level
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 13)
		x.xxx_hidden_Message = b.Message
	}
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.Logger != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 13)
		x.xxx_hidden_Logger = b.Logger
	}
	if b.Thread != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 13)
		x.xxx_hidden_Thread = b.Thread
	}
	x.xxx_hidden_Source = b.Source
	x.xxx_hidden_Fields = b.Fields
	x.xxx_hidden_Tags = b.Tags
	if b.TraceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 13)
		x.xxx_hidden_TraceId = b.TraceId
	}
	if b.SpanId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 13)
		x.xxx_hidden_SpanId = b.SpanId
	}
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 13)
		x.xxx_hidden_UserId = b.UserId
	}
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 13)
		x.xxx_hidden_RequestId = b.RequestId
	}
	x.xxx_hidden_ErrorInfo = b.ErrorInfo
	return m0
}

// Source location information
type SourceLocation struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_File        *string                `protobuf:"bytes,1,opt,name=file"`
	xxx_hidden_Line        int32                  `protobuf:"varint,2,opt,name=line"`
	xxx_hidden_Function    *string                `protobuf:"bytes,3,opt,name=function"`
	xxx_hidden_Package     *string                `protobuf:"bytes,4,opt,name=package"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SourceLocation) Reset() {
	*x = SourceLocation{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceLocation) ProtoMessage() {}

func (x *SourceLocation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SourceLocation) GetFile() string {
	if x != nil {
		if x.xxx_hidden_File != nil {
			return *x.xxx_hidden_File
		}
		return ""
	}
	return ""
}

func (x *SourceLocation) GetLine() int32 {
	if x != nil {
		return x.xxx_hidden_Line
	}
	return 0
}

func (x *SourceLocation) GetFunction() string {
	if x != nil {
		if x.xxx_hidden_Function != nil {
			return *x.xxx_hidden_Function
		}
		return ""
	}
	return ""
}

func (x *SourceLocation) GetPackage() string {
	if x != nil {
		if x.xxx_hidden_Package != nil {
			return *x.xxx_hidden_Package
		}
		return ""
	}
	return ""
}

func (x *SourceLocation) SetFile(v string) {
	x.xxx_hidden_File = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *SourceLocation) SetLine(v int32) {
	x.xxx_hidden_Line = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *SourceLocation) SetFunction(v string) {
	x.xxx_hidden_Function = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *SourceLocation) SetPackage(v string) {
	x.xxx_hidden_Package = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *SourceLocation) HasFile() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SourceLocation) HasLine() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SourceLocation) HasFunction() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SourceLocation) HasPackage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SourceLocation) ClearFile() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_File = nil
}

func (x *SourceLocation) ClearLine() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Line = 0
}

func (x *SourceLocation) ClearFunction() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Function = nil
}

func (x *SourceLocation) ClearPackage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Package = nil
}

type SourceLocation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// File name
	File *string
	// Line number
	Line *int32
	// Function name
	Function *string
	// Package/module name
	Package *string
}

func (b0 SourceLocation_builder) Build() *SourceLocation {
	m0 := &SourceLocation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.File != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_File = b.File
	}
	if b.Line != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Line = *b.Line
	}
	if b.Function != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Function = b.Function
	}
	if b.Package != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Package = b.Package
	}
	return m0
}

// Error information for error/fatal logs
type ErrorInfo struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Message     *string                `protobuf:"bytes,1,opt,name=message"`
	xxx_hidden_Type        *string                `protobuf:"bytes,2,opt,name=type"`
	xxx_hidden_StackTrace  *string                `protobuf:"bytes,3,opt,name=stack_trace,json=stackTrace"`
	xxx_hidden_Code        *string                `protobuf:"bytes,4,opt,name=code"`
	xxx_hidden_Context     map[string]string      `protobuf:"bytes,5,rep,name=context" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Causes      *[]*ErrorInfo          `protobuf:"bytes,6,rep,name=causes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ErrorInfo) Reset() {
	*x = ErrorInfo{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInfo) ProtoMessage() {}

func (x *ErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorInfo) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *ErrorInfo) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *ErrorInfo) GetStackTrace() string {
	if x != nil {
		if x.xxx_hidden_StackTrace != nil {
			return *x.xxx_hidden_StackTrace
		}
		return ""
	}
	return ""
}

func (x *ErrorInfo) GetCode() string {
	if x != nil {
		if x.xxx_hidden_Code != nil {
			return *x.xxx_hidden_Code
		}
		return ""
	}
	return ""
}

func (x *ErrorInfo) GetContext() map[string]string {
	if x != nil {
		return x.xxx_hidden_Context
	}
	return nil
}

func (x *ErrorInfo) GetCauses() []*ErrorInfo {
	if x != nil {
		if x.xxx_hidden_Causes != nil {
			return *x.xxx_hidden_Causes
		}
	}
	return nil
}

func (x *ErrorInfo) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *ErrorInfo) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *ErrorInfo) SetStackTrace(v string) {
	x.xxx_hidden_StackTrace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *ErrorInfo) SetCode(v string) {
	x.xxx_hidden_Code = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *ErrorInfo) SetContext(v map[string]string) {
	x.xxx_hidden_Context = v
}

func (x *ErrorInfo) SetCauses(v []*ErrorInfo) {
	x.xxx_hidden_Causes = &v
}

func (x *ErrorInfo) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ErrorInfo) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ErrorInfo) HasStackTrace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ErrorInfo) HasCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ErrorInfo) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Message = nil
}

func (x *ErrorInfo) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

func (x *ErrorInfo) ClearStackTrace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_StackTrace = nil
}

func (x *ErrorInfo) ClearCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Code = nil
}

type ErrorInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Error message
	Message *string
	// Error type/class
	Type *string
	// Stack trace
	StackTrace *string
	// Error code
	Code *string
	// Additional error context
	Context map[string]string
	// Cause chain for error propagation
	Causes []*ErrorInfo
}

func (b0 ErrorInfo_builder) Build() *ErrorInfo {
	m0 := &ErrorInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Message = b.Message
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Type = b.Type
	}
	if b.StackTrace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_StackTrace = b.StackTrace
	}
	if b.Code != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Code = b.Code
	}
	x.xxx_hidden_Context = b.Context
	x.xxx_hidden_Causes = &b.Causes
	return m0
}

// Query log request
type QueryLogRequest struct {
	state                 protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Filter     *LogFilter                `protobuf:"bytes,1,opt,name=filter"`
	xxx_hidden_Pagination *messages.Pagination      `protobuf:"bytes,2,opt,name=pagination"`
	xxx_hidden_Sort       *LogSort                  `protobuf:"bytes,3,opt,name=sort"`
	xxx_hidden_Metadata   *messages.RequestMetadata `protobuf:"bytes,4,opt,name=metadata"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *QueryLogRequest) Reset() {
	*x = QueryLogRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLogRequest) ProtoMessage() {}

func (x *QueryLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryLogRequest) GetFilter() *LogFilter {
	if x != nil {
		return x.xxx_hidden_Filter
	}
	return nil
}

func (x *QueryLogRequest) GetPagination() *messages.Pagination {
	if x != nil {
		return x.xxx_hidden_Pagination
	}
	return nil
}

func (x *QueryLogRequest) GetSort() *LogSort {
	if x != nil {
		return x.xxx_hidden_Sort
	}
	return nil
}

func (x *QueryLogRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *QueryLogRequest) SetFilter(v *LogFilter) {
	x.xxx_hidden_Filter = v
}

func (x *QueryLogRequest) SetPagination(v *messages.Pagination) {
	x.xxx_hidden_Pagination = v
}

func (x *QueryLogRequest) SetSort(v *LogSort) {
	x.xxx_hidden_Sort = v
}

func (x *QueryLogRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *QueryLogRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Filter != nil
}

func (x *QueryLogRequest) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Pagination != nil
}

func (x *QueryLogRequest) HasSort() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Sort != nil
}

func (x *QueryLogRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *QueryLogRequest) ClearFilter() {
	x.xxx_hidden_Filter = nil
}

func (x *QueryLogRequest) ClearPagination() {
	x.xxx_hidden_Pagination = nil
}

func (x *QueryLogRequest) ClearSort() {
	x.xxx_hidden_Sort = nil
}

func (x *QueryLogRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type QueryLogRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Query filters
	Filter *LogFilter
	// Pagination
	Pagination *messages.Pagination
	// Sorting options
	Sort *LogSort
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 QueryLogRequest_builder) Build() *QueryLogRequest {
	m0 := &QueryLogRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Filter = b.Filter
	x.xxx_hidden_Pagination = b.Pagination
	x.xxx_hidden_Sort = b.Sort
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Log filter options
type LogFilter struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Levels         []LogLevel             `protobuf:"varint,1,rep,packed,name=levels,enum=gcommon.v1.log.LogLevel"`
	xxx_hidden_Loggers        []string               `protobuf:"bytes,2,rep,name=loggers"`
	xxx_hidden_MessagePattern *string                `protobuf:"bytes,3,opt,name=message_pattern,json=messagePattern"`
	xxx_hidden_TimeRange      *TimeRange             `protobuf:"bytes,4,opt,name=time_range,json=timeRange"`
	xxx_hidden_Tags           []string               `protobuf:"bytes,5,rep,name=tags"`
	xxx_hidden_TraceId        *string                `protobuf:"bytes,6,opt,name=trace_id,json=traceId"`
	xxx_hidden_UserId         *string                `protobuf:"bytes,7,opt,name=user_id,json=userId"`
	xxx_hidden_RequestId      *string                `protobuf:"bytes,8,opt,name=request_id,json=requestId"`
	xxx_hidden_FieldFilters   map[string]string      `protobuf:"bytes,9,rep,name=field_filters,json=fieldFilters" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *LogFilter) Reset() {
	*x = LogFilter{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFilter) ProtoMessage() {}

func (x *LogFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogFilter) GetLevels() []LogLevel {
	if x != nil {
		return x.xxx_hidden_Levels
	}
	return nil
}

func (x *LogFilter) GetLoggers() []string {
	if x != nil {
		return x.xxx_hidden_Loggers
	}
	return nil
}

func (x *LogFilter) GetMessagePattern() string {
	if x != nil {
		if x.xxx_hidden_MessagePattern != nil {
			return *x.xxx_hidden_MessagePattern
		}
		return ""
	}
	return ""
}

func (x *LogFilter) GetTimeRange() *TimeRange {
	if x != nil {
		return x.xxx_hidden_TimeRange
	}
	return nil
}

func (x *LogFilter) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *LogFilter) GetTraceId() string {
	if x != nil {
		if x.xxx_hidden_TraceId != nil {
			return *x.xxx_hidden_TraceId
		}
		return ""
	}
	return ""
}

func (x *LogFilter) GetUserId() string {
	if x != nil {
		if x.xxx_hidden_UserId != nil {
			return *x.xxx_hidden_UserId
		}
		return ""
	}
	return ""
}

func (x *LogFilter) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *LogFilter) GetFieldFilters() map[string]string {
	if x != nil {
		return x.xxx_hidden_FieldFilters
	}
	return nil
}

func (x *LogFilter) SetLevels(v []LogLevel) {
	x.xxx_hidden_Levels = v
}

func (x *LogFilter) SetLoggers(v []string) {
	x.xxx_hidden_Loggers = v
}

func (x *LogFilter) SetMessagePattern(v string) {
	x.xxx_hidden_MessagePattern = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *LogFilter) SetTimeRange(v *TimeRange) {
	x.xxx_hidden_TimeRange = v
}

func (x *LogFilter) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *LogFilter) SetTraceId(v string) {
	x.xxx_hidden_TraceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *LogFilter) SetUserId(v string) {
	x.xxx_hidden_UserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *LogFilter) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *LogFilter) SetFieldFilters(v map[string]string) {
	x.xxx_hidden_FieldFilters = v
}

func (x *LogFilter) HasMessagePattern() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *LogFilter) HasTimeRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TimeRange != nil
}

func (x *LogFilter) HasTraceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *LogFilter) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *LogFilter) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *LogFilter) ClearMessagePattern() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MessagePattern = nil
}

func (x *LogFilter) ClearTimeRange() {
	x.xxx_hidden_TimeRange = nil
}

func (x *LogFilter) ClearTraceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_TraceId = nil
}

func (x *LogFilter) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_UserId = nil
}

func (x *LogFilter) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_RequestId = nil
}

type LogFilter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Log level filter
	Levels []LogLevel
	// Logger name filter
	Loggers []string
	// Message search (supports regex)
	MessagePattern *string
	// Time range filter
	TimeRange *TimeRange
	// Tag filters
	Tags []string
	// Trace ID filter
	TraceId *string
	// User ID filter
	UserId *string
	// Request ID filter
	RequestId *string
	// Field filters
	FieldFilters map[string]string
}

func (b0 LogFilter_builder) Build() *LogFilter {
	m0 := &LogFilter{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Levels = b.Levels
	x.xxx_hidden_Loggers = b.Loggers
	if b.MessagePattern != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_MessagePattern = b.MessagePattern
	}
	x.xxx_hidden_TimeRange = b.TimeRange
	x.xxx_hidden_Tags = b.Tags
	if b.TraceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_TraceId = b.TraceId
	}
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_UserId = b.UserId
	}
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_RequestId = b.RequestId
	}
	x.xxx_hidden_FieldFilters = b.FieldFilters
	return m0
}

// Time range for filtering
type TimeRange struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start"`
	xxx_hidden_End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TimeRange) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Start
	}
	return nil
}

func (x *TimeRange) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_End
	}
	return nil
}

func (x *TimeRange) SetStart(v *timestamppb.Timestamp) {
	x.xxx_hidden_Start = v
}

func (x *TimeRange) SetEnd(v *timestamppb.Timestamp) {
	x.xxx_hidden_End = v
}

func (x *TimeRange) HasStart() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Start != nil
}

func (x *TimeRange) HasEnd() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_End != nil
}

func (x *TimeRange) ClearStart() {
	x.xxx_hidden_Start = nil
}

func (x *TimeRange) ClearEnd() {
	x.xxx_hidden_End = nil
}

type TimeRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Start time (inclusive)
	Start *timestamppb.Timestamp
	// End time (exclusive)
	End *timestamppb.Timestamp
}

func (b0 TimeRange_builder) Build() *TimeRange {
	m0 := &TimeRange{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Start = b.Start
	x.xxx_hidden_End = b.End
	return m0
}

// Log sorting options
type LogSort struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Field       LogSortField           `protobuf:"varint,1,opt,name=field,enum=gcommon.v1.log.LogSortField"`
	xxx_hidden_Direction   types.SortDirection    `protobuf:"varint,2,opt,name=direction,enum=gcommon.v1.common.SortDirection"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LogSort) Reset() {
	*x = LogSort{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSort) ProtoMessage() {}

func (x *LogSort) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogSort) GetField() LogSortField {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Field
		}
	}
	return LogSortField_LOG_SORT_FIELD_UNSPECIFIED
}

func (x *LogSort) GetDirection() types.SortDirection {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Direction
		}
	}
	return types.SortDirection(0)
}

func (x *LogSort) SetField(v LogSortField) {
	x.xxx_hidden_Field = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *LogSort) SetDirection(v types.SortDirection) {
	x.xxx_hidden_Direction = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *LogSort) HasField() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LogSort) HasDirection() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LogSort) ClearField() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Field = LogSortField_LOG_SORT_FIELD_UNSPECIFIED
}

func (x *LogSort) ClearDirection() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Direction = types.SortDirection_SORT_DIRECTION_UNSPECIFIED
}

type LogSort_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Sort field
	Field *LogSortField
	// Sort direction
	Direction *types.SortDirection
}

func (b0 LogSort_builder) Build() *LogSort {
	m0 := &LogSort{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Field != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Field = *b.Field
	}
	if b.Direction != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Direction = *b.Direction
	}
	return m0
}

// Query log response
type QueryLogResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Entries     *[]*LogEntry           `protobuf:"bytes,1,rep,name=entries"`
	xxx_hidden_Pagination  *messages.Pagination   `protobuf:"bytes,2,opt,name=pagination"`
	xxx_hidden_TotalCount  int64                  `protobuf:"varint,3,opt,name=total_count,json=totalCount"`
	xxx_hidden_Error       *messages.Error        `protobuf:"bytes,4,opt,name=error"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *QueryLogResponse) Reset() {
	*x = QueryLogResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLogResponse) ProtoMessage() {}

func (x *QueryLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryLogResponse) GetEntries() []*LogEntry {
	if x != nil {
		if x.xxx_hidden_Entries != nil {
			return *x.xxx_hidden_Entries
		}
	}
	return nil
}

func (x *QueryLogResponse) GetPagination() *messages.Pagination {
	if x != nil {
		return x.xxx_hidden_Pagination
	}
	return nil
}

func (x *QueryLogResponse) GetTotalCount() int64 {
	if x != nil {
		return x.xxx_hidden_TotalCount
	}
	return 0
}

func (x *QueryLogResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *QueryLogResponse) SetEntries(v []*LogEntry) {
	x.xxx_hidden_Entries = &v
}

func (x *QueryLogResponse) SetPagination(v *messages.Pagination) {
	x.xxx_hidden_Pagination = v
}

func (x *QueryLogResponse) SetTotalCount(v int64) {
	x.xxx_hidden_TotalCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *QueryLogResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *QueryLogResponse) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Pagination != nil
}

func (x *QueryLogResponse) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *QueryLogResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *QueryLogResponse) ClearPagination() {
	x.xxx_hidden_Pagination = nil
}

func (x *QueryLogResponse) ClearTotalCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalCount = 0
}

func (x *QueryLogResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type QueryLogResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Found log entries
	Entries []*LogEntry
	// Pagination info
	Pagination *messages.Pagination
	// Total count (if requested)
	TotalCount *int64
	// Error information
	Error *messages.Error
}

func (b0 QueryLogResponse_builder) Build() *QueryLogResponse {
	m0 := &QueryLogResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Entries = &b.Entries
	x.xxx_hidden_Pagination = b.Pagination
	if b.TotalCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_TotalCount = *b.TotalCount
	}
	x.xxx_hidden_Error = b.Error
	return m0
}

// Stream log request
type StreamLogRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Filter      *LogFilter                `protobuf:"bytes,1,opt,name=filter"`
	xxx_hidden_Follow      bool                      `protobuf:"varint,2,opt,name=follow"`
	xxx_hidden_BufferSize  int32                     `protobuf:"varint,3,opt,name=buffer_size,json=bufferSize"`
	xxx_hidden_Metadata    *messages.RequestMetadata `protobuf:"bytes,4,opt,name=metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StreamLogRequest) Reset() {
	*x = StreamLogRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogRequest) ProtoMessage() {}

func (x *StreamLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamLogRequest) GetFilter() *LogFilter {
	if x != nil {
		return x.xxx_hidden_Filter
	}
	return nil
}

func (x *StreamLogRequest) GetFollow() bool {
	if x != nil {
		return x.xxx_hidden_Follow
	}
	return false
}

func (x *StreamLogRequest) GetBufferSize() int32 {
	if x != nil {
		return x.xxx_hidden_BufferSize
	}
	return 0
}

func (x *StreamLogRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *StreamLogRequest) SetFilter(v *LogFilter) {
	x.xxx_hidden_Filter = v
}

func (x *StreamLogRequest) SetFollow(v bool) {
	x.xxx_hidden_Follow = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *StreamLogRequest) SetBufferSize(v int32) {
	x.xxx_hidden_BufferSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *StreamLogRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *StreamLogRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Filter != nil
}

func (x *StreamLogRequest) HasFollow() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StreamLogRequest) HasBufferSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StreamLogRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *StreamLogRequest) ClearFilter() {
	x.xxx_hidden_Filter = nil
}

func (x *StreamLogRequest) ClearFollow() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Follow = false
}

func (x *StreamLogRequest) ClearBufferSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_BufferSize = 0
}

func (x *StreamLogRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type StreamLogRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Stream filters
	Filter *LogFilter
	// Follow mode (tail -f style)
	Follow *bool
	// Buffer size
	BufferSize *int32
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 StreamLogRequest_builder) Build() *StreamLogRequest {
	m0 := &StreamLogRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Filter = b.Filter
	if b.Follow != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Follow = *b.Follow
	}
	if b.BufferSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_BufferSize = *b.BufferSize
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Get log level request
type GetLogLevelRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Logger      *string                   `protobuf:"bytes,1,opt,name=logger"`
	xxx_hidden_Metadata    *messages.RequestMetadata `protobuf:"bytes,2,opt,name=metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetLogLevelRequest) Reset() {
	*x = GetLogLevelRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogLevelRequest) ProtoMessage() {}

func (x *GetLogLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetLogLevelRequest) GetLogger() string {
	if x != nil {
		if x.xxx_hidden_Logger != nil {
			return *x.xxx_hidden_Logger
		}
		return ""
	}
	return ""
}

func (x *GetLogLevelRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *GetLogLevelRequest) SetLogger(v string) {
	x.xxx_hidden_Logger = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetLogLevelRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *GetLogLevelRequest) HasLogger() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetLogLevelRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *GetLogLevelRequest) ClearLogger() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Logger = nil
}

func (x *GetLogLevelRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type GetLogLevelRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger name (optional, defaults to root)
	Logger *string
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 GetLogLevelRequest_builder) Build() *GetLogLevelRequest {
	m0 := &GetLogLevelRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Logger != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Logger = b.Logger
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Get log level response
type GetLogLevelResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Level       LogLevel               `protobuf:"varint,1,opt,name=level,enum=gcommon.v1.log.LogLevel"`
	xxx_hidden_Logger      *string                `protobuf:"bytes,2,opt,name=logger"`
	xxx_hidden_Error       *messages.Error        `protobuf:"bytes,3,opt,name=error"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetLogLevelResponse) Reset() {
	*x = GetLogLevelResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogLevelResponse) ProtoMessage() {}

func (x *GetLogLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetLogLevelResponse) GetLevel() LogLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Level
		}
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *GetLogLevelResponse) GetLogger() string {
	if x != nil {
		if x.xxx_hidden_Logger != nil {
			return *x.xxx_hidden_Logger
		}
		return ""
	}
	return ""
}

func (x *GetLogLevelResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *GetLogLevelResponse) SetLevel(v LogLevel) {
	x.xxx_hidden_Level = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *GetLogLevelResponse) SetLogger(v string) {
	x.xxx_hidden_Logger = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *GetLogLevelResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *GetLogLevelResponse) HasLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetLogLevelResponse) HasLogger() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetLogLevelResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *GetLogLevelResponse) ClearLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Level = LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *GetLogLevelResponse) ClearLogger() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Logger = nil
}

func (x *GetLogLevelResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type GetLogLevelResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Current log level
	Level *LogLevel
	// Logger name
	Logger *string
	// Error information
	Error *messages.Error
}

func (b0 GetLogLevelResponse_builder) Build() *GetLogLevelResponse {
	m0 := &GetLogLevelResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Level != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Level = *b.Level
	}
	if b.Logger != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Logger = b.Logger
	}
	x.xxx_hidden_Error = b.Error
	return m0
}

// Set log level request
type SetLogLevelRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Level       LogLevel                  `protobuf:"varint,1,opt,name=level,enum=gcommon.v1.log.LogLevel"`
	xxx_hidden_Logger      *string                   `protobuf:"bytes,2,opt,name=logger"`
	xxx_hidden_Persist     bool                      `protobuf:"varint,3,opt,name=persist"`
	xxx_hidden_Metadata    *messages.RequestMetadata `protobuf:"bytes,4,opt,name=metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SetLogLevelRequest) Reset() {
	*x = SetLogLevelRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLogLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogLevelRequest) ProtoMessage() {}

func (x *SetLogLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetLogLevelRequest) GetLevel() LogLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Level
		}
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *SetLogLevelRequest) GetLogger() string {
	if x != nil {
		if x.xxx_hidden_Logger != nil {
			return *x.xxx_hidden_Logger
		}
		return ""
	}
	return ""
}

func (x *SetLogLevelRequest) GetPersist() bool {
	if x != nil {
		return x.xxx_hidden_Persist
	}
	return false
}

func (x *SetLogLevelRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *SetLogLevelRequest) SetLevel(v LogLevel) {
	x.xxx_hidden_Level = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *SetLogLevelRequest) SetLogger(v string) {
	x.xxx_hidden_Logger = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *SetLogLevelRequest) SetPersist(v bool) {
	x.xxx_hidden_Persist = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *SetLogLevelRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *SetLogLevelRequest) HasLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SetLogLevelRequest) HasLogger() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SetLogLevelRequest) HasPersist() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SetLogLevelRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *SetLogLevelRequest) ClearLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Level = LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *SetLogLevelRequest) ClearLogger() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Logger = nil
}

func (x *SetLogLevelRequest) ClearPersist() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Persist = false
}

func (x *SetLogLevelRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type SetLogLevelRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// New log level
	Level *LogLevel
	// Logger name (optional, defaults to root)
	Logger *string
	// Whether to persist the change
	Persist *bool
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 SetLogLevelRequest_builder) Build() *SetLogLevelRequest {
	m0 := &SetLogLevelRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Level != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Level = *b.Level
	}
	if b.Logger != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Logger = b.Logger
	}
	if b.Persist != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Persist = *b.Persist
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Set log level response
type SetLogLevelResponse struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PreviousLevel LogLevel               `protobuf:"varint,1,opt,name=previous_level,json=previousLevel,enum=gcommon.v1.log.LogLevel"`
	xxx_hidden_NewLevel      LogLevel               `protobuf:"varint,2,opt,name=new_level,json=newLevel,enum=gcommon.v1.log.LogLevel"`
	xxx_hidden_Logger        *string                `protobuf:"bytes,3,opt,name=logger"`
	xxx_hidden_Error         *messages.Error        `protobuf:"bytes,4,opt,name=error"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *SetLogLevelResponse) Reset() {
	*x = SetLogLevelResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLogLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogLevelResponse) ProtoMessage() {}

func (x *SetLogLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetLogLevelResponse) GetPreviousLevel() LogLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_PreviousLevel
		}
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *SetLogLevelResponse) GetNewLevel() LogLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_NewLevel
		}
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *SetLogLevelResponse) GetLogger() string {
	if x != nil {
		if x.xxx_hidden_Logger != nil {
			return *x.xxx_hidden_Logger
		}
		return ""
	}
	return ""
}

func (x *SetLogLevelResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *SetLogLevelResponse) SetPreviousLevel(v LogLevel) {
	x.xxx_hidden_PreviousLevel = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *SetLogLevelResponse) SetNewLevel(v LogLevel) {
	x.xxx_hidden_NewLevel = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *SetLogLevelResponse) SetLogger(v string) {
	x.xxx_hidden_Logger = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *SetLogLevelResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *SetLogLevelResponse) HasPreviousLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SetLogLevelResponse) HasNewLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SetLogLevelResponse) HasLogger() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SetLogLevelResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *SetLogLevelResponse) ClearPreviousLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PreviousLevel = LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *SetLogLevelResponse) ClearNewLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NewLevel = LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *SetLogLevelResponse) ClearLogger() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Logger = nil
}

func (x *SetLogLevelResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type SetLogLevelResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Previous log level
	PreviousLevel *LogLevel
	// New log level
	NewLevel *LogLevel
	// Logger name
	Logger *string
	// Error information
	Error *messages.Error
}

func (b0 SetLogLevelResponse_builder) Build() *SetLogLevelResponse {
	m0 := &SetLogLevelResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PreviousLevel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_PreviousLevel = *b.PreviousLevel
	}
	if b.NewLevel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_NewLevel = *b.NewLevel
	}
	if b.Logger != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Logger = b.Logger
	}
	x.xxx_hidden_Error = b.Error
	return m0
}

// Get log stats request
type GetLogStatsRequest struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_TimeRange *TimeRange                `protobuf:"bytes,1,opt,name=time_range,json=timeRange"`
	xxx_hidden_Loggers   []string                  `protobuf:"bytes,2,rep,name=loggers"`
	xxx_hidden_Metadata  *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetLogStatsRequest) Reset() {
	*x = GetLogStatsRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogStatsRequest) ProtoMessage() {}

func (x *GetLogStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetLogStatsRequest) GetTimeRange() *TimeRange {
	if x != nil {
		return x.xxx_hidden_TimeRange
	}
	return nil
}

func (x *GetLogStatsRequest) GetLoggers() []string {
	if x != nil {
		return x.xxx_hidden_Loggers
	}
	return nil
}

func (x *GetLogStatsRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *GetLogStatsRequest) SetTimeRange(v *TimeRange) {
	x.xxx_hidden_TimeRange = v
}

func (x *GetLogStatsRequest) SetLoggers(v []string) {
	x.xxx_hidden_Loggers = v
}

func (x *GetLogStatsRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *GetLogStatsRequest) HasTimeRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TimeRange != nil
}

func (x *GetLogStatsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *GetLogStatsRequest) ClearTimeRange() {
	x.xxx_hidden_TimeRange = nil
}

func (x *GetLogStatsRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type GetLogStatsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Time range for statistics
	TimeRange *TimeRange
	// Logger filter
	Loggers []string
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 GetLogStatsRequest_builder) Build() *GetLogStatsRequest {
	m0 := &GetLogStatsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TimeRange = b.TimeRange
	x.xxx_hidden_Loggers = b.Loggers
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Get log stats response
type GetLogStatsResponse struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Stats       *LogStatistics            `protobuf:"bytes,1,opt,name=stats"`
	xxx_hidden_LevelCounts map[string]int64          `protobuf:"bytes,2,rep,name=level_counts,json=levelCounts" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	xxx_hidden_LoggerStats map[string]*LogStatistics `protobuf:"bytes,3,rep,name=logger_stats,json=loggerStats" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Error       *messages.Error           `protobuf:"bytes,4,opt,name=error"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetLogStatsResponse) Reset() {
	*x = GetLogStatsResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogStatsResponse) ProtoMessage() {}

func (x *GetLogStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetLogStatsResponse) GetStats() *LogStatistics {
	if x != nil {
		return x.xxx_hidden_Stats
	}
	return nil
}

func (x *GetLogStatsResponse) GetLevelCounts() map[string]int64 {
	if x != nil {
		return x.xxx_hidden_LevelCounts
	}
	return nil
}

func (x *GetLogStatsResponse) GetLoggerStats() map[string]*LogStatistics {
	if x != nil {
		return x.xxx_hidden_LoggerStats
	}
	return nil
}

func (x *GetLogStatsResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *GetLogStatsResponse) SetStats(v *LogStatistics) {
	x.xxx_hidden_Stats = v
}

func (x *GetLogStatsResponse) SetLevelCounts(v map[string]int64) {
	x.xxx_hidden_LevelCounts = v
}

func (x *GetLogStatsResponse) SetLoggerStats(v map[string]*LogStatistics) {
	x.xxx_hidden_LoggerStats = v
}

func (x *GetLogStatsResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *GetLogStatsResponse) HasStats() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Stats != nil
}

func (x *GetLogStatsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *GetLogStatsResponse) ClearStats() {
	x.xxx_hidden_Stats = nil
}

func (x *GetLogStatsResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type GetLogStatsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Overall statistics
	Stats *LogStatistics
	// Per-level statistics
	LevelCounts map[string]int64
	// Per-logger statistics
	LoggerStats map[string]*LogStatistics
	// Error information
	Error *messages.Error
}

func (b0 GetLogStatsResponse_builder) Build() *GetLogStatsResponse {
	m0 := &GetLogStatsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Stats = b.Stats
	x.xxx_hidden_LevelCounts = b.LevelCounts
	x.xxx_hidden_LoggerStats = b.LoggerStats
	x.xxx_hidden_Error = b.Error
	return m0
}

// Log statistics
type LogStatistics struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TotalEntries     int64                  `protobuf:"varint,1,opt,name=total_entries,json=totalEntries"`
	xxx_hidden_EntriesPerSecond float64                `protobuf:"fixed64,2,opt,name=entries_per_second,json=entriesPerSecond"`
	xxx_hidden_AverageSize      int64                  `protobuf:"varint,3,opt,name=average_size,json=averageSize"`
	xxx_hidden_TotalSize        int64                  `protobuf:"varint,4,opt,name=total_size,json=totalSize"`
	xxx_hidden_ErrorCount       int64                  `protobuf:"varint,5,opt,name=error_count,json=errorCount"`
	xxx_hidden_WarningCount     int64                  `protobuf:"varint,6,opt,name=warning_count,json=warningCount"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *LogStatistics) Reset() {
	*x = LogStatistics{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogStatistics) ProtoMessage() {}

func (x *LogStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogStatistics) GetTotalEntries() int64 {
	if x != nil {
		return x.xxx_hidden_TotalEntries
	}
	return 0
}

func (x *LogStatistics) GetEntriesPerSecond() float64 {
	if x != nil {
		return x.xxx_hidden_EntriesPerSecond
	}
	return 0
}

func (x *LogStatistics) GetAverageSize() int64 {
	if x != nil {
		return x.xxx_hidden_AverageSize
	}
	return 0
}

func (x *LogStatistics) GetTotalSize() int64 {
	if x != nil {
		return x.xxx_hidden_TotalSize
	}
	return 0
}

func (x *LogStatistics) GetErrorCount() int64 {
	if x != nil {
		return x.xxx_hidden_ErrorCount
	}
	return 0
}

func (x *LogStatistics) GetWarningCount() int64 {
	if x != nil {
		return x.xxx_hidden_WarningCount
	}
	return 0
}

func (x *LogStatistics) SetTotalEntries(v int64) {
	x.xxx_hidden_TotalEntries = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *LogStatistics) SetEntriesPerSecond(v float64) {
	x.xxx_hidden_EntriesPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *LogStatistics) SetAverageSize(v int64) {
	x.xxx_hidden_AverageSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *LogStatistics) SetTotalSize(v int64) {
	x.xxx_hidden_TotalSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *LogStatistics) SetErrorCount(v int64) {
	x.xxx_hidden_ErrorCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *LogStatistics) SetWarningCount(v int64) {
	x.xxx_hidden_WarningCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *LogStatistics) HasTotalEntries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LogStatistics) HasEntriesPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LogStatistics) HasAverageSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *LogStatistics) HasTotalSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *LogStatistics) HasErrorCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *LogStatistics) HasWarningCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *LogStatistics) ClearTotalEntries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TotalEntries = 0
}

func (x *LogStatistics) ClearEntriesPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_EntriesPerSecond = 0
}

func (x *LogStatistics) ClearAverageSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_AverageSize = 0
}

func (x *LogStatistics) ClearTotalSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TotalSize = 0
}

func (x *LogStatistics) ClearErrorCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ErrorCount = 0
}

func (x *LogStatistics) ClearWarningCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_WarningCount = 0
}

type LogStatistics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total log entries
	TotalEntries *int64
	// Entries per second (rate)
	EntriesPerSecond *float64
	// Average entry size
	AverageSize *int64
	// Total size
	TotalSize *int64
	// Error count
	ErrorCount *int64
	// Warning count
	WarningCount *int64
}

func (b0 LogStatistics_builder) Build() *LogStatistics {
	m0 := &LogStatistics{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TotalEntries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_TotalEntries = *b.TotalEntries
	}
	if b.EntriesPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_EntriesPerSecond = *b.EntriesPerSecond
	}
	if b.AverageSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_AverageSize = *b.AverageSize
	}
	if b.TotalSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_TotalSize = *b.TotalSize
	}
	if b.ErrorCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_ErrorCount = *b.ErrorCount
	}
	if b.WarningCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_WarningCount = *b.WarningCount
	}
	return m0
}

// Create logger request
type CreateLoggerRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                   `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Config      *LoggerConfig             `protobuf:"bytes,2,opt,name=config"`
	xxx_hidden_Metadata    *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateLoggerRequest) Reset() {
	*x = CreateLoggerRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLoggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoggerRequest) ProtoMessage() {}

func (x *CreateLoggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateLoggerRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateLoggerRequest) GetConfig() *LoggerConfig {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *CreateLoggerRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CreateLoggerRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CreateLoggerRequest) SetConfig(v *LoggerConfig) {
	x.xxx_hidden_Config = v
}

func (x *CreateLoggerRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *CreateLoggerRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateLoggerRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Config != nil
}

func (x *CreateLoggerRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *CreateLoggerRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *CreateLoggerRequest) ClearConfig() {
	x.xxx_hidden_Config = nil
}

func (x *CreateLoggerRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type CreateLoggerRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger name
	Name *string
	// Logger configuration
	Config *LoggerConfig
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 CreateLoggerRequest_builder) Build() *CreateLoggerRequest {
	m0 := &CreateLoggerRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Config = b.Config
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Logger configuration
type LoggerConfig struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Level            LogLevel               `protobuf:"varint,1,opt,name=level,enum=gcommon.v1.log.LogLevel"`
	xxx_hidden_Appenders        *[]*AppenderConfig     `protobuf:"bytes,2,rep,name=appenders"`
	xxx_hidden_InheritAppenders bool                   `protobuf:"varint,3,opt,name=inherit_appenders,json=inheritAppenders"`
	xxx_hidden_Propagate        bool                   `protobuf:"varint,4,opt,name=propagate"`
	xxx_hidden_Properties       map[string]string      `protobuf:"bytes,5,rep,name=properties" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *LoggerConfig) Reset() {
	*x = LoggerConfig{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggerConfig) ProtoMessage() {}

func (x *LoggerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LoggerConfig) GetLevel() LogLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Level
		}
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *LoggerConfig) GetAppenders() []*AppenderConfig {
	if x != nil {
		if x.xxx_hidden_Appenders != nil {
			return *x.xxx_hidden_Appenders
		}
	}
	return nil
}

func (x *LoggerConfig) GetInheritAppenders() bool {
	if x != nil {
		return x.xxx_hidden_InheritAppenders
	}
	return false
}

func (x *LoggerConfig) GetPropagate() bool {
	if x != nil {
		return x.xxx_hidden_Propagate
	}
	return false
}

func (x *LoggerConfig) GetProperties() map[string]string {
	if x != nil {
		return x.xxx_hidden_Properties
	}
	return nil
}

func (x *LoggerConfig) SetLevel(v LogLevel) {
	x.xxx_hidden_Level = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *LoggerConfig) SetAppenders(v []*AppenderConfig) {
	x.xxx_hidden_Appenders = &v
}

func (x *LoggerConfig) SetInheritAppenders(v bool) {
	x.xxx_hidden_InheritAppenders = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *LoggerConfig) SetPropagate(v bool) {
	x.xxx_hidden_Propagate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *LoggerConfig) SetProperties(v map[string]string) {
	x.xxx_hidden_Properties = v
}

func (x *LoggerConfig) HasLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LoggerConfig) HasInheritAppenders() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *LoggerConfig) HasPropagate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *LoggerConfig) ClearLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Level = LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *LoggerConfig) ClearInheritAppenders() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_InheritAppenders = false
}

func (x *LoggerConfig) ClearPropagate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Propagate = false
}

type LoggerConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Log level
	Level *LogLevel
	// Output appenders
	Appenders []*AppenderConfig
	// Whether to inherit from parent
	InheritAppenders *bool
	// Whether to propagate to parent logger
	Propagate *bool
	// Additional properties
	Properties map[string]string
}

func (b0 LoggerConfig_builder) Build() *LoggerConfig {
	m0 := &LoggerConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Level != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Level = *b.Level
	}
	x.xxx_hidden_Appenders = &b.Appenders
	if b.InheritAppenders != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_InheritAppenders = *b.InheritAppenders
	}
	if b.Propagate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Propagate = *b.Propagate
	}
	x.xxx_hidden_Properties = b.Properties
	return m0
}

// Appender configuration
type AppenderConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type        AppenderType           `protobuf:"varint,2,opt,name=type,enum=gcommon.v1.log.AppenderType"`
	xxx_hidden_Output      *OutputConfig          `protobuf:"bytes,3,opt,name=output"`
	xxx_hidden_Formatter   *FormatterConfig       `protobuf:"bytes,4,opt,name=formatter"`
	xxx_hidden_Filter      *FilterConfig          `protobuf:"bytes,5,opt,name=filter"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AppenderConfig) Reset() {
	*x = AppenderConfig{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppenderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppenderConfig) ProtoMessage() {}

func (x *AppenderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AppenderConfig) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *AppenderConfig) GetType() AppenderType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Type
		}
	}
	return AppenderType_APPENDER_TYPE_UNSPECIFIED
}

func (x *AppenderConfig) GetOutput() *OutputConfig {
	if x != nil {
		return x.xxx_hidden_Output
	}
	return nil
}

func (x *AppenderConfig) GetFormatter() *FormatterConfig {
	if x != nil {
		return x.xxx_hidden_Formatter
	}
	return nil
}

func (x *AppenderConfig) GetFilter() *FilterConfig {
	if x != nil {
		return x.xxx_hidden_Filter
	}
	return nil
}

func (x *AppenderConfig) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *AppenderConfig) SetType(v AppenderType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *AppenderConfig) SetOutput(v *OutputConfig) {
	x.xxx_hidden_Output = v
}

func (x *AppenderConfig) SetFormatter(v *FormatterConfig) {
	x.xxx_hidden_Formatter = v
}

func (x *AppenderConfig) SetFilter(v *FilterConfig) {
	x.xxx_hidden_Filter = v
}

func (x *AppenderConfig) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AppenderConfig) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AppenderConfig) HasOutput() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Output != nil
}

func (x *AppenderConfig) HasFormatter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Formatter != nil
}

func (x *AppenderConfig) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Filter != nil
}

func (x *AppenderConfig) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *AppenderConfig) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = AppenderType_APPENDER_TYPE_UNSPECIFIED
}

func (x *AppenderConfig) ClearOutput() {
	x.xxx_hidden_Output = nil
}

func (x *AppenderConfig) ClearFormatter() {
	x.xxx_hidden_Formatter = nil
}

func (x *AppenderConfig) ClearFilter() {
	x.xxx_hidden_Filter = nil
}

type AppenderConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Appender name
	Name *string
	// Appender type
	Type *AppenderType
	// Output configuration
	Output *OutputConfig
	// Formatter configuration
	Formatter *FormatterConfig
	// Filter configuration
	Filter *FilterConfig
}

func (b0 AppenderConfig_builder) Build() *AppenderConfig {
	m0 := &AppenderConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Type = *b.Type
	}
	x.xxx_hidden_Output = b.Output
	x.xxx_hidden_Formatter = b.Formatter
	x.xxx_hidden_Filter = b.Filter
	return m0
}

// Output configuration
type OutputConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Target      *string                `protobuf:"bytes,1,opt,name=target"`
	xxx_hidden_Options     map[string]string      `protobuf:"bytes,2,rep,name=options" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *OutputConfig) Reset() {
	*x = OutputConfig{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutputConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputConfig) ProtoMessage() {}

func (x *OutputConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OutputConfig) GetTarget() string {
	if x != nil {
		if x.xxx_hidden_Target != nil {
			return *x.xxx_hidden_Target
		}
		return ""
	}
	return ""
}

func (x *OutputConfig) GetOptions() map[string]string {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *OutputConfig) SetTarget(v string) {
	x.xxx_hidden_Target = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *OutputConfig) SetOptions(v map[string]string) {
	x.xxx_hidden_Options = v
}

func (x *OutputConfig) HasTarget() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OutputConfig) ClearTarget() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Target = nil
}

type OutputConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Output target (file path, network address, etc.)
	Target *string
	// Additional output options
	Options map[string]string
}

func (b0 OutputConfig_builder) Build() *OutputConfig {
	m0 := &OutputConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Target != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Target = b.Target
	}
	x.xxx_hidden_Options = b.Options
	return m0
}

// Formatter configuration
type FormatterConfig struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type            FormatterType          `protobuf:"varint,1,opt,name=type,enum=gcommon.v1.log.FormatterType"`
	xxx_hidden_Pattern         *string                `protobuf:"bytes,2,opt,name=pattern"`
	xxx_hidden_TimestampFormat *string                `protobuf:"bytes,3,opt,name=timestamp_format,json=timestampFormat"`
	xxx_hidden_Options         map[string]string      `protobuf:"bytes,4,rep,name=options" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *FormatterConfig) Reset() {
	*x = FormatterConfig{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormatterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatterConfig) ProtoMessage() {}

func (x *FormatterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FormatterConfig) GetType() FormatterType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Type
		}
	}
	return FormatterType_FORMATTER_TYPE_UNSPECIFIED
}

func (x *FormatterConfig) GetPattern() string {
	if x != nil {
		if x.xxx_hidden_Pattern != nil {
			return *x.xxx_hidden_Pattern
		}
		return ""
	}
	return ""
}

func (x *FormatterConfig) GetTimestampFormat() string {
	if x != nil {
		if x.xxx_hidden_TimestampFormat != nil {
			return *x.xxx_hidden_TimestampFormat
		}
		return ""
	}
	return ""
}

func (x *FormatterConfig) GetOptions() map[string]string {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *FormatterConfig) SetType(v FormatterType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *FormatterConfig) SetPattern(v string) {
	x.xxx_hidden_Pattern = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *FormatterConfig) SetTimestampFormat(v string) {
	x.xxx_hidden_TimestampFormat = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *FormatterConfig) SetOptions(v map[string]string) {
	x.xxx_hidden_Options = v
}

func (x *FormatterConfig) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FormatterConfig) HasPattern() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FormatterConfig) HasTimestampFormat() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FormatterConfig) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = FormatterType_FORMATTER_TYPE_UNSPECIFIED
}

func (x *FormatterConfig) ClearPattern() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Pattern = nil
}

func (x *FormatterConfig) ClearTimestampFormat() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TimestampFormat = nil
}

type FormatterConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Formatter type
	Type *FormatterType
	// Format pattern
	Pattern *string
	// Timestamp format
	TimestampFormat *string
	// Additional formatter options
	Options map[string]string
}

func (b0 FormatterConfig_builder) Build() *FormatterConfig {
	m0 := &FormatterConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Type = *b.Type
	}
	if b.Pattern != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Pattern = b.Pattern
	}
	if b.TimestampFormat != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_TimestampFormat = b.TimestampFormat
	}
	x.xxx_hidden_Options = b.Options
	return m0
}

// Filter configuration
type FilterConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type        FilterType             `protobuf:"varint,1,opt,name=type,enum=gcommon.v1.log.FilterType"`
	xxx_hidden_Criteria    map[string]string      `protobuf:"bytes,2,rep,name=criteria" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FilterConfig) Reset() {
	*x = FilterConfig{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterConfig) ProtoMessage() {}

func (x *FilterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FilterConfig) GetType() FilterType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Type
		}
	}
	return FilterType_FILTER_TYPE_UNSPECIFIED
}

func (x *FilterConfig) GetCriteria() map[string]string {
	if x != nil {
		return x.xxx_hidden_Criteria
	}
	return nil
}

func (x *FilterConfig) SetType(v FilterType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *FilterConfig) SetCriteria(v map[string]string) {
	x.xxx_hidden_Criteria = v
}

func (x *FilterConfig) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FilterConfig) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = FilterType_FILTER_TYPE_UNSPECIFIED
}

type FilterConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Filter type
	Type *FilterType
	// Filter criteria
	Criteria map[string]string
}

func (b0 FilterConfig_builder) Build() *FilterConfig {
	m0 := &FilterConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Type = *b.Type
	}
	x.xxx_hidden_Criteria = b.Criteria
	return m0
}

// Create logger response
type CreateLoggerResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Success     bool                   `protobuf:"varint,2,opt,name=success"`
	xxx_hidden_Error       *messages.Error        `protobuf:"bytes,3,opt,name=error"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateLoggerResponse) Reset() {
	*x = CreateLoggerResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLoggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoggerResponse) ProtoMessage() {}

func (x *CreateLoggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateLoggerResponse) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateLoggerResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *CreateLoggerResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *CreateLoggerResponse) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CreateLoggerResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *CreateLoggerResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *CreateLoggerResponse) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateLoggerResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateLoggerResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *CreateLoggerResponse) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *CreateLoggerResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Success = false
}

func (x *CreateLoggerResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type CreateLoggerResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Created logger name
	Name *string
	// Success status
	Success *bool
	// Error information
	Error *messages.Error
}

func (b0 CreateLoggerResponse_builder) Build() *CreateLoggerResponse {
	m0 := &CreateLoggerResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Success = *b.Success
	}
	x.xxx_hidden_Error = b.Error
	return m0
}

// Update logger request
type UpdateLoggerRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                   `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Config      *LoggerConfig             `protobuf:"bytes,2,opt,name=config"`
	xxx_hidden_UpdateMask  *fieldmaskpb.FieldMask    `protobuf:"bytes,3,opt,name=update_mask,json=updateMask"`
	xxx_hidden_Metadata    *messages.RequestMetadata `protobuf:"bytes,4,opt,name=metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateLoggerRequest) Reset() {
	*x = UpdateLoggerRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLoggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoggerRequest) ProtoMessage() {}

func (x *UpdateLoggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateLoggerRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateLoggerRequest) GetConfig() *LoggerConfig {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *UpdateLoggerRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.xxx_hidden_UpdateMask
	}
	return nil
}

func (x *UpdateLoggerRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *UpdateLoggerRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *UpdateLoggerRequest) SetConfig(v *LoggerConfig) {
	x.xxx_hidden_Config = v
}

func (x *UpdateLoggerRequest) SetUpdateMask(v *fieldmaskpb.FieldMask) {
	x.xxx_hidden_UpdateMask = v
}

func (x *UpdateLoggerRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *UpdateLoggerRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateLoggerRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Config != nil
}

func (x *UpdateLoggerRequest) HasUpdateMask() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_UpdateMask != nil
}

func (x *UpdateLoggerRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *UpdateLoggerRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *UpdateLoggerRequest) ClearConfig() {
	x.xxx_hidden_Config = nil
}

func (x *UpdateLoggerRequest) ClearUpdateMask() {
	x.xxx_hidden_UpdateMask = nil
}

func (x *UpdateLoggerRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type UpdateLoggerRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger name
	Name *string
	// Updated configuration
	Config *LoggerConfig
	// Update mask
	UpdateMask *fieldmaskpb.FieldMask
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 UpdateLoggerRequest_builder) Build() *UpdateLoggerRequest {
	m0 := &UpdateLoggerRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Config = b.Config
	x.xxx_hidden_UpdateMask = b.UpdateMask
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Update logger response
type UpdateLoggerResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Success     bool                   `protobuf:"varint,2,opt,name=success"`
	xxx_hidden_Error       *messages.Error        `protobuf:"bytes,3,opt,name=error"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateLoggerResponse) Reset() {
	*x = UpdateLoggerResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLoggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoggerResponse) ProtoMessage() {}

func (x *UpdateLoggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateLoggerResponse) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateLoggerResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *UpdateLoggerResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *UpdateLoggerResponse) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *UpdateLoggerResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *UpdateLoggerResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *UpdateLoggerResponse) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateLoggerResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateLoggerResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *UpdateLoggerResponse) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *UpdateLoggerResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Success = false
}

func (x *UpdateLoggerResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type UpdateLoggerResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updated logger name
	Name *string
	// Success status
	Success *bool
	// Error information
	Error *messages.Error
}

func (b0 UpdateLoggerResponse_builder) Build() *UpdateLoggerResponse {
	m0 := &UpdateLoggerResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Success = *b.Success
	}
	x.xxx_hidden_Error = b.Error
	return m0
}

// Delete logger request
type DeleteLoggerRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                   `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Force       bool                      `protobuf:"varint,2,opt,name=force"`
	xxx_hidden_Metadata    *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteLoggerRequest) Reset() {
	*x = DeleteLoggerRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLoggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLoggerRequest) ProtoMessage() {}

func (x *DeleteLoggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteLoggerRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeleteLoggerRequest) GetForce() bool {
	if x != nil {
		return x.xxx_hidden_Force
	}
	return false
}

func (x *DeleteLoggerRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *DeleteLoggerRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *DeleteLoggerRequest) SetForce(v bool) {
	x.xxx_hidden_Force = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *DeleteLoggerRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *DeleteLoggerRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteLoggerRequest) HasForce() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteLoggerRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *DeleteLoggerRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *DeleteLoggerRequest) ClearForce() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Force = false
}

func (x *DeleteLoggerRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type DeleteLoggerRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger name
	Name *string
	// Force deletion
	Force *bool
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 DeleteLoggerRequest_builder) Build() *DeleteLoggerRequest {
	m0 := &DeleteLoggerRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Force != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Force = *b.Force
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// List loggers request
type ListLoggersRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_NamePattern *string                   `protobuf:"bytes,1,opt,name=name_pattern,json=namePattern"`
	xxx_hidden_Levels      []LogLevel                `protobuf:"varint,2,rep,packed,name=levels,enum=gcommon.v1.log.LogLevel"`
	xxx_hidden_Pagination  *messages.Pagination      `protobuf:"bytes,3,opt,name=pagination"`
	xxx_hidden_Metadata    *messages.RequestMetadata `protobuf:"bytes,4,opt,name=metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListLoggersRequest) Reset() {
	*x = ListLoggersRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLoggersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoggersRequest) ProtoMessage() {}

func (x *ListLoggersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListLoggersRequest) GetNamePattern() string {
	if x != nil {
		if x.xxx_hidden_NamePattern != nil {
			return *x.xxx_hidden_NamePattern
		}
		return ""
	}
	return ""
}

func (x *ListLoggersRequest) GetLevels() []LogLevel {
	if x != nil {
		return x.xxx_hidden_Levels
	}
	return nil
}

func (x *ListLoggersRequest) GetPagination() *messages.Pagination {
	if x != nil {
		return x.xxx_hidden_Pagination
	}
	return nil
}

func (x *ListLoggersRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ListLoggersRequest) SetNamePattern(v string) {
	x.xxx_hidden_NamePattern = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ListLoggersRequest) SetLevels(v []LogLevel) {
	x.xxx_hidden_Levels = v
}

func (x *ListLoggersRequest) SetPagination(v *messages.Pagination) {
	x.xxx_hidden_Pagination = v
}

func (x *ListLoggersRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *ListLoggersRequest) HasNamePattern() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListLoggersRequest) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Pagination != nil
}

func (x *ListLoggersRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ListLoggersRequest) ClearNamePattern() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NamePattern = nil
}

func (x *ListLoggersRequest) ClearPagination() {
	x.xxx_hidden_Pagination = nil
}

func (x *ListLoggersRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ListLoggersRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name pattern filter
	NamePattern *string
	// Level filter
	Levels []LogLevel
	// Pagination
	Pagination *messages.Pagination
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 ListLoggersRequest_builder) Build() *ListLoggersRequest {
	m0 := &ListLoggersRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NamePattern != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_NamePattern = b.NamePattern
	}
	x.xxx_hidden_Levels = b.Levels
	x.xxx_hidden_Pagination = b.Pagination
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// List loggers response
type ListLoggersResponse struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Loggers    *[]*LoggerInfo         `protobuf:"bytes,1,rep,name=loggers"`
	xxx_hidden_Pagination *messages.Pagination   `protobuf:"bytes,2,opt,name=pagination"`
	xxx_hidden_Error      *messages.Error        `protobuf:"bytes,3,opt,name=error"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListLoggersResponse) Reset() {
	*x = ListLoggersResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLoggersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoggersResponse) ProtoMessage() {}

func (x *ListLoggersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListLoggersResponse) GetLoggers() []*LoggerInfo {
	if x != nil {
		if x.xxx_hidden_Loggers != nil {
			return *x.xxx_hidden_Loggers
		}
	}
	return nil
}

func (x *ListLoggersResponse) GetPagination() *messages.Pagination {
	if x != nil {
		return x.xxx_hidden_Pagination
	}
	return nil
}

func (x *ListLoggersResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *ListLoggersResponse) SetLoggers(v []*LoggerInfo) {
	x.xxx_hidden_Loggers = &v
}

func (x *ListLoggersResponse) SetPagination(v *messages.Pagination) {
	x.xxx_hidden_Pagination = v
}

func (x *ListLoggersResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *ListLoggersResponse) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Pagination != nil
}

func (x *ListLoggersResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *ListLoggersResponse) ClearPagination() {
	x.xxx_hidden_Pagination = nil
}

func (x *ListLoggersResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type ListLoggersResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger information
	Loggers []*LoggerInfo
	// Pagination info
	Pagination *messages.Pagination
	// Error information
	Error *messages.Error
}

func (b0 ListLoggersResponse_builder) Build() *ListLoggersResponse {
	m0 := &ListLoggersResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Loggers = &b.Loggers
	x.xxx_hidden_Pagination = b.Pagination
	x.xxx_hidden_Error = b.Error
	return m0
}

// Logger information
type LoggerInfo struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Config      *LoggerConfig          `protobuf:"bytes,2,opt,name=config"`
	xxx_hidden_Parent      *string                `protobuf:"bytes,3,opt,name=parent"`
	xxx_hidden_Children    []string               `protobuf:"bytes,4,rep,name=children"`
	xxx_hidden_Stats       *LogStatistics         `protobuf:"bytes,5,opt,name=stats"`
	xxx_hidden_CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt"`
	xxx_hidden_ModifiedAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=modified_at,json=modifiedAt"`
	xxx_hidden_Status      LoggerStatus           `protobuf:"varint,8,opt,name=status,enum=gcommon.v1.log.LoggerStatus"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LoggerInfo) Reset() {
	*x = LoggerInfo{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggerInfo) ProtoMessage() {}

func (x *LoggerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LoggerInfo) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *LoggerInfo) GetConfig() *LoggerConfig {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *LoggerInfo) GetParent() string {
	if x != nil {
		if x.xxx_hidden_Parent != nil {
			return *x.xxx_hidden_Parent
		}
		return ""
	}
	return ""
}

func (x *LoggerInfo) GetChildren() []string {
	if x != nil {
		return x.xxx_hidden_Children
	}
	return nil
}

func (x *LoggerInfo) GetStats() *LogStatistics {
	if x != nil {
		return x.xxx_hidden_Stats
	}
	return nil
}

func (x *LoggerInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *LoggerInfo) GetModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ModifiedAt
	}
	return nil
}

func (x *LoggerInfo) GetStatus() LoggerStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 7) {
			return x.xxx_hidden_Status
		}
	}
	return LoggerStatus_LOGGER_STATUS_UNSPECIFIED
}

func (x *LoggerInfo) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *LoggerInfo) SetConfig(v *LoggerConfig) {
	x.xxx_hidden_Config = v
}

func (x *LoggerInfo) SetParent(v string) {
	x.xxx_hidden_Parent = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *LoggerInfo) SetChildren(v []string) {
	x.xxx_hidden_Children = v
}

func (x *LoggerInfo) SetStats(v *LogStatistics) {
	x.xxx_hidden_Stats = v
}

func (x *LoggerInfo) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *LoggerInfo) SetModifiedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_ModifiedAt = v
}

func (x *LoggerInfo) SetStatus(v LoggerStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *LoggerInfo) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LoggerInfo) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Config != nil
}

func (x *LoggerInfo) HasParent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *LoggerInfo) HasStats() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Stats != nil
}

func (x *LoggerInfo) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *LoggerInfo) HasModifiedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ModifiedAt != nil
}

func (x *LoggerInfo) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *LoggerInfo) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *LoggerInfo) ClearConfig() {
	x.xxx_hidden_Config = nil
}

func (x *LoggerInfo) ClearParent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Parent = nil
}

func (x *LoggerInfo) ClearStats() {
	x.xxx_hidden_Stats = nil
}

func (x *LoggerInfo) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *LoggerInfo) ClearModifiedAt() {
	x.xxx_hidden_ModifiedAt = nil
}

func (x *LoggerInfo) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Status = LoggerStatus_LOGGER_STATUS_UNSPECIFIED
}

type LoggerInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger name
	Name *string
	// Current configuration
	Config *LoggerConfig
	// Parent logger
	Parent *string
	// Child loggers
	Children []string
	// Statistics
	Stats *LogStatistics
	// Creation time
	CreatedAt *timestamppb.Timestamp
	// Last modified time
	ModifiedAt *timestamppb.Timestamp
	// Status
	Status *LoggerStatus
}

func (b0 LoggerInfo_builder) Build() *LoggerInfo {
	m0 := &LoggerInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Config = b.Config
	if b.Parent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_Parent = b.Parent
	}
	x.xxx_hidden_Children = b.Children
	x.xxx_hidden_Stats = b.Stats
	x.xxx_hidden_CreatedAt = b.CreatedAt
	x.xxx_hidden_ModifiedAt = b.ModifiedAt
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_Status = *b.Status
	}
	return m0
}

// Configure appender request
type ConfigureAppenderRequest struct {
	state               protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Config   *AppenderConfig           `protobuf:"bytes,1,opt,name=config"`
	xxx_hidden_Metadata *messages.RequestMetadata `protobuf:"bytes,2,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ConfigureAppenderRequest) Reset() {
	*x = ConfigureAppenderRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureAppenderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureAppenderRequest) ProtoMessage() {}

func (x *ConfigureAppenderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConfigureAppenderRequest) GetConfig() *AppenderConfig {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *ConfigureAppenderRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ConfigureAppenderRequest) SetConfig(v *AppenderConfig) {
	x.xxx_hidden_Config = v
}

func (x *ConfigureAppenderRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *ConfigureAppenderRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Config != nil
}

func (x *ConfigureAppenderRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ConfigureAppenderRequest) ClearConfig() {
	x.xxx_hidden_Config = nil
}

func (x *ConfigureAppenderRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ConfigureAppenderRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Appender configuration
	Config *AppenderConfig
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 ConfigureAppenderRequest_builder) Build() *ConfigureAppenderRequest {
	m0 := &ConfigureAppenderRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Config = b.Config
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Configure appender response
type ConfigureAppenderResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Success     bool                   `protobuf:"varint,2,opt,name=success"`
	xxx_hidden_Error       *messages.Error        `protobuf:"bytes,3,opt,name=error"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ConfigureAppenderResponse) Reset() {
	*x = ConfigureAppenderResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureAppenderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureAppenderResponse) ProtoMessage() {}

func (x *ConfigureAppenderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConfigureAppenderResponse) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ConfigureAppenderResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *ConfigureAppenderResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *ConfigureAppenderResponse) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ConfigureAppenderResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ConfigureAppenderResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *ConfigureAppenderResponse) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConfigureAppenderResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ConfigureAppenderResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *ConfigureAppenderResponse) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *ConfigureAppenderResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Success = false
}

func (x *ConfigureAppenderResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type ConfigureAppenderResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Appender name
	Name *string
	// Success status
	Success *bool
	// Error information
	Error *messages.Error
}

func (b0 ConfigureAppenderResponse_builder) Build() *ConfigureAppenderResponse {
	m0 := &ConfigureAppenderResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Success = *b.Success
	}
	x.xxx_hidden_Error = b.Error
	return m0
}

// Rotate logs request
type RotateLogsRequest struct {
	state                    protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_LoggerPattern *string                   `protobuf:"bytes,1,opt,name=logger_pattern,json=loggerPattern"`
	xxx_hidden_Force         bool                      `protobuf:"varint,2,opt,name=force"`
	xxx_hidden_Metadata      *messages.RequestMetadata `protobuf:"bytes,3,opt,name=metadata"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *RotateLogsRequest) Reset() {
	*x = RotateLogsRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateLogsRequest) ProtoMessage() {}

func (x *RotateLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RotateLogsRequest) GetLoggerPattern() string {
	if x != nil {
		if x.xxx_hidden_LoggerPattern != nil {
			return *x.xxx_hidden_LoggerPattern
		}
		return ""
	}
	return ""
}

func (x *RotateLogsRequest) GetForce() bool {
	if x != nil {
		return x.xxx_hidden_Force
	}
	return false
}

func (x *RotateLogsRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *RotateLogsRequest) SetLoggerPattern(v string) {
	x.xxx_hidden_LoggerPattern = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *RotateLogsRequest) SetForce(v bool) {
	x.xxx_hidden_Force = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *RotateLogsRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *RotateLogsRequest) HasLoggerPattern() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RotateLogsRequest) HasForce() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RotateLogsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *RotateLogsRequest) ClearLoggerPattern() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_LoggerPattern = nil
}

func (x *RotateLogsRequest) ClearForce() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Force = false
}

func (x *RotateLogsRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type RotateLogsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger pattern
	LoggerPattern *string
	// Force rotation
	Force *bool
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 RotateLogsRequest_builder) Build() *RotateLogsRequest {
	m0 := &RotateLogsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.LoggerPattern != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_LoggerPattern = b.LoggerPattern
	}
	if b.Force != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Force = *b.Force
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Rotate logs response
type RotateLogsResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RotatedCount int32                  `protobuf:"varint,1,opt,name=rotated_count,json=rotatedCount"`
	xxx_hidden_RotatedFiles []string               `protobuf:"bytes,2,rep,name=rotated_files,json=rotatedFiles"`
	xxx_hidden_Error        *messages.Error        `protobuf:"bytes,3,opt,name=error"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RotateLogsResponse) Reset() {
	*x = RotateLogsResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateLogsResponse) ProtoMessage() {}

func (x *RotateLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RotateLogsResponse) GetRotatedCount() int32 {
	if x != nil {
		return x.xxx_hidden_RotatedCount
	}
	return 0
}

func (x *RotateLogsResponse) GetRotatedFiles() []string {
	if x != nil {
		return x.xxx_hidden_RotatedFiles
	}
	return nil
}

func (x *RotateLogsResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *RotateLogsResponse) SetRotatedCount(v int32) {
	x.xxx_hidden_RotatedCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *RotateLogsResponse) SetRotatedFiles(v []string) {
	x.xxx_hidden_RotatedFiles = v
}

func (x *RotateLogsResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *RotateLogsResponse) HasRotatedCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RotateLogsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *RotateLogsResponse) ClearRotatedCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RotatedCount = 0
}

func (x *RotateLogsResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type RotateLogsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Number of rotated files
	RotatedCount *int32
	// Rotated file paths
	RotatedFiles []string
	// Error information
	Error *messages.Error
}

func (b0 RotateLogsResponse_builder) Build() *RotateLogsResponse {
	m0 := &RotateLogsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RotatedCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_RotatedCount = *b.RotatedCount
	}
	x.xxx_hidden_RotatedFiles = b.RotatedFiles
	x.xxx_hidden_Error = b.Error
	return m0
}

// Archive logs request
type ArchiveLogsRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Criteria    *ArchiveCriteria          `protobuf:"bytes,1,opt,name=criteria"`
	xxx_hidden_Destination *string                   `protobuf:"bytes,2,opt,name=destination"`
	xxx_hidden_Compression CompressionType           `protobuf:"varint,3,opt,name=compression,enum=gcommon.v1.log.CompressionType"`
	xxx_hidden_Metadata    *messages.RequestMetadata `protobuf:"bytes,4,opt,name=metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ArchiveLogsRequest) Reset() {
	*x = ArchiveLogsRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveLogsRequest) ProtoMessage() {}

func (x *ArchiveLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ArchiveLogsRequest) GetCriteria() *ArchiveCriteria {
	if x != nil {
		return x.xxx_hidden_Criteria
	}
	return nil
}

func (x *ArchiveLogsRequest) GetDestination() string {
	if x != nil {
		if x.xxx_hidden_Destination != nil {
			return *x.xxx_hidden_Destination
		}
		return ""
	}
	return ""
}

func (x *ArchiveLogsRequest) GetCompression() CompressionType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Compression
		}
	}
	return CompressionType_COMPRESSION_TYPE_UNSPECIFIED
}

func (x *ArchiveLogsRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ArchiveLogsRequest) SetCriteria(v *ArchiveCriteria) {
	x.xxx_hidden_Criteria = v
}

func (x *ArchiveLogsRequest) SetDestination(v string) {
	x.xxx_hidden_Destination = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ArchiveLogsRequest) SetCompression(v CompressionType) {
	x.xxx_hidden_Compression = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ArchiveLogsRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *ArchiveLogsRequest) HasCriteria() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Criteria != nil
}

func (x *ArchiveLogsRequest) HasDestination() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ArchiveLogsRequest) HasCompression() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ArchiveLogsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ArchiveLogsRequest) ClearCriteria() {
	x.xxx_hidden_Criteria = nil
}

func (x *ArchiveLogsRequest) ClearDestination() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Destination = nil
}

func (x *ArchiveLogsRequest) ClearCompression() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Compression = CompressionType_COMPRESSION_TYPE_UNSPECIFIED
}

func (x *ArchiveLogsRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ArchiveLogsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Archive criteria
	Criteria *ArchiveCriteria
	// Archive destination
	Destination *string
	// Compression type
	Compression *CompressionType
	// Request metadata
	Metadata *messages.RequestMetadata
}

func (b0 ArchiveLogsRequest_builder) Build() *ArchiveLogsRequest {
	m0 := &ArchiveLogsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Criteria = b.Criteria
	if b.Destination != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Destination = b.Destination
	}
	if b.Compression != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Compression = *b.Compression
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Archive criteria
type ArchiveCriteria struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_OlderThan          *durationpb.Duration   `protobuf:"bytes,1,opt,name=older_than,json=olderThan"`
	xxx_hidden_SizeThresholdBytes int64                  `protobuf:"varint,2,opt,name=size_threshold_bytes,json=sizeThresholdBytes"`
	xxx_hidden_LoggerPattern      *string                `protobuf:"bytes,3,opt,name=logger_pattern,json=loggerPattern"`
	xxx_hidden_StartTime          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime"`
	xxx_hidden_EndTime            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ArchiveCriteria) Reset() {
	*x = ArchiveCriteria{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveCriteria) ProtoMessage() {}

func (x *ArchiveCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ArchiveCriteria) GetOlderThan() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_OlderThan
	}
	return nil
}

func (x *ArchiveCriteria) GetSizeThresholdBytes() int64 {
	if x != nil {
		return x.xxx_hidden_SizeThresholdBytes
	}
	return 0
}

func (x *ArchiveCriteria) GetLoggerPattern() string {
	if x != nil {
		if x.xxx_hidden_LoggerPattern != nil {
			return *x.xxx_hidden_LoggerPattern
		}
		return ""
	}
	return ""
}

func (x *ArchiveCriteria) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_StartTime
	}
	return nil
}

func (x *ArchiveCriteria) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_EndTime
	}
	return nil
}

func (x *ArchiveCriteria) SetOlderThan(v *durationpb.Duration) {
	x.xxx_hidden_OlderThan = v
}

func (x *ArchiveCriteria) SetSizeThresholdBytes(v int64) {
	x.xxx_hidden_SizeThresholdBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ArchiveCriteria) SetLoggerPattern(v string) {
	x.xxx_hidden_LoggerPattern = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ArchiveCriteria) SetStartTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_StartTime = v
}

func (x *ArchiveCriteria) SetEndTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_EndTime = v
}

func (x *ArchiveCriteria) HasOlderThan() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OlderThan != nil
}

func (x *ArchiveCriteria) HasSizeThresholdBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ArchiveCriteria) HasLoggerPattern() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ArchiveCriteria) HasStartTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StartTime != nil
}

func (x *ArchiveCriteria) HasEndTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EndTime != nil
}

func (x *ArchiveCriteria) ClearOlderThan() {
	x.xxx_hidden_OlderThan = nil
}

func (x *ArchiveCriteria) ClearSizeThresholdBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SizeThresholdBytes = 0
}

func (x *ArchiveCriteria) ClearLoggerPattern() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_LoggerPattern = nil
}

func (x *ArchiveCriteria) ClearStartTime() {
	x.xxx_hidden_StartTime = nil
}

func (x *ArchiveCriteria) ClearEndTime() {
	x.xxx_hidden_EndTime = nil
}

type ArchiveCriteria_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Older than duration
	OlderThan *durationpb.Duration
	// Size threshold
	SizeThresholdBytes *int64
	// Logger pattern
	LoggerPattern *string
	// Date range
	StartTime *timestamppb.Timestamp
	EndTime   *timestamppb.Timestamp
}

func (b0 ArchiveCriteria_builder) Build() *ArchiveCriteria {
	m0 := &ArchiveCriteria{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OlderThan = b.OlderThan
	if b.SizeThresholdBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_SizeThresholdBytes = *b.SizeThresholdBytes
	}
	if b.LoggerPattern != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_LoggerPattern = b.LoggerPattern
	}
	x.xxx_hidden_StartTime = b.StartTime
	x.xxx_hidden_EndTime = b.EndTime
	return m0
}

// Archive logs response
type ArchiveLogsResponse struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ArchivedCount int32                  `protobuf:"varint,1,opt,name=archived_count,json=archivedCount"`
	xxx_hidden_ArchivePath   *string                `protobuf:"bytes,2,opt,name=archive_path,json=archivePath"`
	xxx_hidden_ArchiveSize   int64                  `protobuf:"varint,3,opt,name=archive_size,json=archiveSize"`
	xxx_hidden_Error         *messages.Error        `protobuf:"bytes,4,opt,name=error"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ArchiveLogsResponse) Reset() {
	*x = ArchiveLogsResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveLogsResponse) ProtoMessage() {}

func (x *ArchiveLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ArchiveLogsResponse) GetArchivedCount() int32 {
	if x != nil {
		return x.xxx_hidden_ArchivedCount
	}
	return 0
}

func (x *ArchiveLogsResponse) GetArchivePath() string {
	if x != nil {
		if x.xxx_hidden_ArchivePath != nil {
			return *x.xxx_hidden_ArchivePath
		}
		return ""
	}
	return ""
}

func (x *ArchiveLogsResponse) GetArchiveSize() int64 {
	if x != nil {
		return x.xxx_hidden_ArchiveSize
	}
	return 0
}

func (x *ArchiveLogsResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *ArchiveLogsResponse) SetArchivedCount(v int32) {
	x.xxx_hidden_ArchivedCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ArchiveLogsResponse) SetArchivePath(v string) {
	x.xxx_hidden_ArchivePath = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ArchiveLogsResponse) SetArchiveSize(v int64) {
	x.xxx_hidden_ArchiveSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ArchiveLogsResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *ArchiveLogsResponse) HasArchivedCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ArchiveLogsResponse) HasArchivePath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ArchiveLogsResponse) HasArchiveSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ArchiveLogsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *ArchiveLogsResponse) ClearArchivedCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ArchivedCount = 0
}

func (x *ArchiveLogsResponse) ClearArchivePath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ArchivePath = nil
}

func (x *ArchiveLogsResponse) ClearArchiveSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ArchiveSize = 0
}

func (x *ArchiveLogsResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

type ArchiveLogsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Number of archived files
	ArchivedCount *int32
	// Archive file path
	ArchivePath *string
	// Archive size
	ArchiveSize *int64
	// Error information
	Error *messages.Error
}

func (b0 ArchiveLogsResponse_builder) Build() *ArchiveLogsResponse {
	m0 := &ArchiveLogsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ArchivedCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ArchivedCount = *b.ArchivedCount
	}
	if b.ArchivePath != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ArchivePath = b.ArchivePath
	}
	if b.ArchiveSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ArchiveSize = *b.ArchiveSize
	}
	x.xxx_hidden_Error = b.Error
	return m0
}

var File_pkg_log_proto_log_proto protoreflect.FileDescriptor

const file_pkg_log_proto_log_proto_rawDesc = "" +
	"\n" +
	"\x17pkg/log/proto/log.proto\x12\x0egcommon.v1.log\x1a\x1dpkg/common/proto/common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x19google/protobuf/any.proto\x1a google/protobuf/field_mask.proto\x1a!google/protobuf/go_features.proto\"\x94\x01\n" +
	"\n" +
	"LogRequest\x12.\n" +
	"\x05entry\x18\x01 \x01(\v2\x18.gcommon.v1.log.LogEntryR\x05entry\x12\x16\n" +
	"\x06logger\x18\x02 \x01(\tR\x06logger\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"r\n" +
	"\vLogResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x19\n" +
	"\bentry_id\x18\x02 \x01(\tR\aentryId\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xd8\x01\n" +
	"\x0fLogBatchRequest\x122\n" +
	"\aentries\x18\x01 \x03(\v2\x18.gcommon.v1.log.LogEntryR\aentries\x12\x16\n" +
	"\x06logger\x18\x02 \x01(\tR\x06logger\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x129\n" +
	"\aoptions\x18\x04 \x01(\v2\x1f.gcommon.v1.log.BatchLogOptionsR\aoptions\"\x89\x01\n" +
	"\x0fBatchLogOptions\x12\x1b\n" +
	"\tfail_fast\x18\x01 \x01(\bR\bfailFast\x12$\n" +
	"\x0emax_batch_size\x18\x02 \x01(\x05R\fmaxBatchSize\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"\xa9\x01\n" +
	"\x10LogBatchResponse\x12#\n" +
	"\rsuccess_count\x18\x01 \x01(\x05R\fsuccessCount\x12#\n" +
	"\rfailure_count\x18\x02 \x01(\x05R\ffailureCount\x12\x1b\n" +
	"\tentry_ids\x18\x03 \x03(\tR\bentryIds\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xbf\x04\n" +
	"\bLogEntry\x12.\n" +
	"\x05level\x18\x01 \x01(\x0e2\x18.gcommon.v1.log.LogLevelR\x05level\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x16\n" +
	"\x06logger\x18\x04 \x01(\tR\x06logger\x12\x16\n" +
	"\x06thread\x18\x05 \x01(\tR\x06thread\x126\n" +
	"\x06source\x18\x06 \x01(\v2\x1e.gcommon.v1.log.SourceLocationR\x06source\x12<\n" +
	"\x06fields\x18\a \x03(\v2$.gcommon.v1.log.LogEntry.FieldsEntryR\x06fields\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x12\x19\n" +
	"\btrace_id\x18\t \x01(\tR\atraceId\x12\x17\n" +
	"\aspan_id\x18\n" +
	" \x01(\tR\x06spanId\x12\x17\n" +
	"\auser_id\x18\v \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"request_id\x18\f \x01(\tR\trequestId\x128\n" +
	"\n" +
	"error_info\x18\r \x01(\v2\x19.gcommon.v1.log.ErrorInfoR\terrorInfo\x1aO\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x05value:\x028\x01\"n\n" +
	"\x0eSourceLocation\x12\x12\n" +
	"\x04file\x18\x01 \x01(\tR\x04file\x12\x12\n" +
	"\x04line\x18\x02 \x01(\x05R\x04line\x12\x1a\n" +
	"\bfunction\x18\x03 \x01(\tR\bfunction\x12\x18\n" +
	"\apackage\x18\x04 \x01(\tR\apackage\"\x9f\x02\n" +
	"\tErrorInfo\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1f\n" +
	"\vstack_trace\x18\x03 \x01(\tR\n" +
	"stackTrace\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x12@\n" +
	"\acontext\x18\x05 \x03(\v2&.gcommon.v1.log.ErrorInfo.ContextEntryR\acontext\x121\n" +
	"\x06causes\x18\x06 \x03(\v2\x19.gcommon.v1.log.ErrorInfoR\x06causes\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf0\x01\n" +
	"\x0fQueryLogRequest\x121\n" +
	"\x06filter\x18\x01 \x01(\v2\x19.gcommon.v1.log.LogFilterR\x06filter\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12+\n" +
	"\x04sort\x18\x03 \x01(\v2\x17.gcommon.v1.log.LogSortR\x04sort\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xb4\x03\n" +
	"\tLogFilter\x120\n" +
	"\x06levels\x18\x01 \x03(\x0e2\x18.gcommon.v1.log.LogLevelR\x06levels\x12\x18\n" +
	"\aloggers\x18\x02 \x03(\tR\aloggers\x12'\n" +
	"\x0fmessage_pattern\x18\x03 \x01(\tR\x0emessagePattern\x128\n" +
	"\n" +
	"time_range\x18\x04 \x01(\v2\x19.gcommon.v1.log.TimeRangeR\ttimeRange\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12\x19\n" +
	"\btrace_id\x18\x06 \x01(\tR\atraceId\x12\x17\n" +
	"\auser_id\x18\a \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"request_id\x18\b \x01(\tR\trequestId\x12P\n" +
	"\rfield_filters\x18\t \x03(\v2+.gcommon.v1.log.LogFilter.FieldFiltersEntryR\ffieldFilters\x1a?\n" +
	"\x11FieldFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"k\n" +
	"\tTimeRange\x120\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\x12,\n" +
	"\x03end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x03end\"}\n" +
	"\aLogSort\x122\n" +
	"\x05field\x18\x01 \x01(\x0e2\x1c.gcommon.v1.log.LogSortFieldR\x05field\x12>\n" +
	"\tdirection\x18\x02 \x01(\x0e2 .gcommon.v1.common.SortDirectionR\tdirection\"\xd6\x01\n" +
	"\x10QueryLogResponse\x122\n" +
	"\aentries\x18\x01 \x03(\v2\x18.gcommon.v1.log.LogEntryR\aentries\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x03R\n" +
	"totalCount\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xbe\x01\n" +
	"\x10StreamLogRequest\x121\n" +
	"\x06filter\x18\x01 \x01(\v2\x19.gcommon.v1.log.LogFilterR\x06filter\x12\x16\n" +
	"\x06follow\x18\x02 \x01(\bR\x06follow\x12\x1f\n" +
	"\vbuffer_size\x18\x03 \x01(\x05R\n" +
	"bufferSize\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"l\n" +
	"\x12GetLogLevelRequest\x12\x16\n" +
	"\x06logger\x18\x01 \x01(\tR\x06logger\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x8d\x01\n" +
	"\x13GetLogLevelResponse\x12.\n" +
	"\x05level\x18\x01 \x01(\x0e2\x18.gcommon.v1.log.LogLevelR\x05level\x12\x16\n" +
	"\x06logger\x18\x02 \x01(\tR\x06logger\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xb6\x01\n" +
	"\x12SetLogLevelRequest\x12.\n" +
	"\x05level\x18\x01 \x01(\x0e2\x18.gcommon.v1.log.LogLevelR\x05level\x12\x16\n" +
	"\x06logger\x18\x02 \x01(\tR\x06logger\x12\x18\n" +
	"\apersist\x18\x03 \x01(\bR\apersist\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xd5\x01\n" +
	"\x13SetLogLevelResponse\x12?\n" +
	"\x0eprevious_level\x18\x01 \x01(\x0e2\x18.gcommon.v1.log.LogLevelR\rpreviousLevel\x125\n" +
	"\tnew_level\x18\x02 \x01(\x0e2\x18.gcommon.v1.log.LogLevelR\bnewLevel\x12\x16\n" +
	"\x06logger\x18\x03 \x01(\tR\x06logger\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xa8\x01\n" +
	"\x12GetLogStatsRequest\x128\n" +
	"\n" +
	"time_range\x18\x01 \x01(\v2\x19.gcommon.v1.log.TimeRangeR\ttimeRange\x12\x18\n" +
	"\aloggers\x18\x02 \x03(\tR\aloggers\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xcb\x03\n" +
	"\x13GetLogStatsResponse\x123\n" +
	"\x05stats\x18\x01 \x01(\v2\x1d.gcommon.v1.log.LogStatisticsR\x05stats\x12W\n" +
	"\flevel_counts\x18\x02 \x03(\v24.gcommon.v1.log.GetLogStatsResponse.LevelCountsEntryR\vlevelCounts\x12W\n" +
	"\flogger_stats\x18\x03 \x03(\v24.gcommon.v1.log.GetLogStatsResponse.LoggerStatsEntryR\vloggerStats\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\x1a>\n" +
	"\x10LevelCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a]\n" +
	"\x10LoggerStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.gcommon.v1.log.LogStatisticsR\x05value:\x028\x01\"\xea\x01\n" +
	"\rLogStatistics\x12#\n" +
	"\rtotal_entries\x18\x01 \x01(\x03R\ftotalEntries\x12,\n" +
	"\x12entries_per_second\x18\x02 \x01(\x01R\x10entriesPerSecond\x12!\n" +
	"\faverage_size\x18\x03 \x01(\x03R\vaverageSize\x12\x1d\n" +
	"\n" +
	"total_size\x18\x04 \x01(\x03R\ttotalSize\x12\x1f\n" +
	"\verror_count\x18\x05 \x01(\x03R\n" +
	"errorCount\x12#\n" +
	"\rwarning_count\x18\x06 \x01(\x03R\fwarningCount\"\x9f\x01\n" +
	"\x13CreateLoggerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x124\n" +
	"\x06config\x18\x02 \x01(\v2\x1c.gcommon.v1.log.LoggerConfigR\x06config\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xd4\x02\n" +
	"\fLoggerConfig\x12.\n" +
	"\x05level\x18\x01 \x01(\x0e2\x18.gcommon.v1.log.LogLevelR\x05level\x12<\n" +
	"\tappenders\x18\x02 \x03(\v2\x1e.gcommon.v1.log.AppenderConfigR\tappenders\x12+\n" +
	"\x11inherit_appenders\x18\x03 \x01(\bR\x10inheritAppenders\x12\x1c\n" +
	"\tpropagate\x18\x04 \x01(\bR\tpropagate\x12L\n" +
	"\n" +
	"properties\x18\x05 \x03(\v2,.gcommon.v1.log.LoggerConfig.PropertiesEntryR\n" +
	"properties\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x81\x02\n" +
	"\x0eAppenderConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1c.gcommon.v1.log.AppenderTypeR\x04type\x124\n" +
	"\x06output\x18\x03 \x01(\v2\x1c.gcommon.v1.log.OutputConfigR\x06output\x12=\n" +
	"\tformatter\x18\x04 \x01(\v2\x1f.gcommon.v1.log.FormatterConfigR\tformatter\x124\n" +
	"\x06filter\x18\x05 \x01(\v2\x1c.gcommon.v1.log.FilterConfigR\x06filter\"\xa7\x01\n" +
	"\fOutputConfig\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12C\n" +
	"\aoptions\x18\x02 \x03(\v2).gcommon.v1.log.OutputConfig.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8d\x02\n" +
	"\x0fFormatterConfig\x121\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1d.gcommon.v1.log.FormatterTypeR\x04type\x12\x18\n" +
	"\apattern\x18\x02 \x01(\tR\apattern\x12)\n" +
	"\x10timestamp_format\x18\x03 \x01(\tR\x0ftimestampFormat\x12F\n" +
	"\aoptions\x18\x04 \x03(\v2,.gcommon.v1.log.FormatterConfig.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc3\x01\n" +
	"\fFilterConfig\x12.\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1a.gcommon.v1.log.FilterTypeR\x04type\x12F\n" +
	"\bcriteria\x18\x02 \x03(\v2*.gcommon.v1.log.FilterConfig.CriteriaEntryR\bcriteria\x1a;\n" +
	"\rCriteriaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"t\n" +
	"\x14CreateLoggerResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xdc\x01\n" +
	"\x13UpdateLoggerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x124\n" +
	"\x06config\x18\x02 \x01(\v2\x1c.gcommon.v1.log.LoggerConfigR\x06config\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"t\n" +
	"\x14UpdateLoggerResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\x7f\n" +
	"\x13DeleteLoggerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xe8\x01\n" +
	"\x12ListLoggersRequest\x12!\n" +
	"\fname_pattern\x18\x01 \x01(\tR\vnamePattern\x120\n" +
	"\x06levels\x18\x02 \x03(\x0e2\x18.gcommon.v1.log.LogLevelR\x06levels\x12=\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xba\x01\n" +
	"\x13ListLoggersResponse\x124\n" +
	"\aloggers\x18\x01 \x03(\v2\x1a.gcommon.v1.log.LoggerInfoR\aloggers\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xed\x02\n" +
	"\n" +
	"LoggerInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x124\n" +
	"\x06config\x18\x02 \x01(\v2\x1c.gcommon.v1.log.LoggerConfigR\x06config\x12\x16\n" +
	"\x06parent\x18\x03 \x01(\tR\x06parent\x12\x1a\n" +
	"\bchildren\x18\x04 \x03(\tR\bchildren\x123\n" +
	"\x05stats\x18\x05 \x01(\v2\x1d.gcommon.v1.log.LogStatisticsR\x05stats\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12;\n" +
	"\vmodified_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"modifiedAt\x124\n" +
	"\x06status\x18\b \x01(\x0e2\x1c.gcommon.v1.log.LoggerStatusR\x06status\"\x92\x01\n" +
	"\x18ConfigureAppenderRequest\x126\n" +
	"\x06config\x18\x01 \x01(\v2\x1e.gcommon.v1.log.AppenderConfigR\x06config\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"y\n" +
	"\x19ConfigureAppenderResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\x90\x01\n" +
	"\x11RotateLogsRequest\x12%\n" +
	"\x0elogger_pattern\x18\x01 \x01(\tR\rloggerPattern\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x8e\x01\n" +
	"\x12RotateLogsResponse\x12#\n" +
	"\rrotated_count\x18\x01 \x01(\x05R\frotatedCount\x12#\n" +
	"\rrotated_files\x18\x02 \x03(\tR\frotatedFiles\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xf6\x01\n" +
	"\x12ArchiveLogsRequest\x12;\n" +
	"\bcriteria\x18\x01 \x01(\v2\x1f.gcommon.v1.log.ArchiveCriteriaR\bcriteria\x12 \n" +
	"\vdestination\x18\x02 \x01(\tR\vdestination\x12A\n" +
	"\vcompression\x18\x03 \x01(\x0e2\x1f.gcommon.v1.log.CompressionTypeR\vcompression\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x96\x02\n" +
	"\x0fArchiveCriteria\x128\n" +
	"\n" +
	"older_than\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\tolderThan\x120\n" +
	"\x14size_threshold_bytes\x18\x02 \x01(\x03R\x12sizeThresholdBytes\x12%\n" +
	"\x0elogger_pattern\x18\x03 \x01(\tR\rloggerPattern\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"\xb2\x01\n" +
	"\x13ArchiveLogsResponse\x12%\n" +
	"\x0earchived_count\x18\x01 \x01(\x05R\rarchivedCount\x12!\n" +
	"\farchive_path\x18\x02 \x01(\tR\varchivePath\x12!\n" +
	"\farchive_size\x18\x03 \x01(\x03R\varchiveSize\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error*\xa1\x01\n" +
	"\bLogLevel\x12\x19\n" +
	"\x15LOG_LEVEL_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fLOG_LEVEL_TRACE\x10\x01\x12\x13\n" +
	"\x0fLOG_LEVEL_DEBUG\x10\x02\x12\x12\n" +
	"\x0eLOG_LEVEL_INFO\x10\x03\x12\x12\n" +
	"\x0eLOG_LEVEL_WARN\x10\x04\x12\x13\n" +
	"\x0fLOG_LEVEL_ERROR\x10\x05\x12\x13\n" +
	"\x0fLOG_LEVEL_FATAL\x10\x06*\x9d\x01\n" +
	"\fLogSortField\x12\x1e\n" +
	"\x1aLOG_SORT_FIELD_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18LOG_SORT_FIELD_TIMESTAMP\x10\x01\x12\x18\n" +
	"\x14LOG_SORT_FIELD_LEVEL\x10\x02\x12\x19\n" +
	"\x15LOG_SORT_FIELD_LOGGER\x10\x03\x12\x1a\n" +
	"\x16LOG_SORT_FIELD_MESSAGE\x10\x04*\xd1\x01\n" +
	"\fAppenderType\x12\x1d\n" +
	"\x19APPENDER_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15APPENDER_TYPE_CONSOLE\x10\x01\x12\x16\n" +
	"\x12APPENDER_TYPE_FILE\x10\x02\x12\x1e\n" +
	"\x1aAPPENDER_TYPE_ROLLING_FILE\x10\x03\x12\x18\n" +
	"\x14APPENDER_TYPE_SYSLOG\x10\x04\x12\x19\n" +
	"\x15APPENDER_TYPE_NETWORK\x10\x05\x12\x1a\n" +
	"\x16APPENDER_TYPE_DATABASE\x10\x06*\x94\x01\n" +
	"\rFormatterType\x12\x1e\n" +
	"\x1aFORMATTER_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13FORMATTER_TYPE_TEXT\x10\x01\x12\x17\n" +
	"\x13FORMATTER_TYPE_JSON\x10\x02\x12\x16\n" +
	"\x12FORMATTER_TYPE_XML\x10\x03\x12\x19\n" +
	"\x15FORMATTER_TYPE_CUSTOM\x10\x04*\x88\x01\n" +
	"\n" +
	"FilterType\x12\x1b\n" +
	"\x17FILTER_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11FILTER_TYPE_LEVEL\x10\x01\x12\x16\n" +
	"\x12FILTER_TYPE_LOGGER\x10\x02\x12\x17\n" +
	"\x13FILTER_TYPE_MESSAGE\x10\x03\x12\x15\n" +
	"\x11FILTER_TYPE_FIELD\x10\x04*|\n" +
	"\fLoggerStatus\x12\x1d\n" +
	"\x19LOGGER_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14LOGGER_STATUS_ACTIVE\x10\x01\x12\x1a\n" +
	"\x16LOGGER_STATUS_INACTIVE\x10\x02\x12\x17\n" +
	"\x13LOGGER_STATUS_ERROR\x10\x03*\xbc\x01\n" +
	"\x0fCompressionType\x12 \n" +
	"\x1cCOMPRESSION_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15COMPRESSION_TYPE_NONE\x10\x01\x12\x19\n" +
	"\x15COMPRESSION_TYPE_GZIP\x10\x02\x12\x18\n" +
	"\x14COMPRESSION_TYPE_ZIP\x10\x03\x12\x1a\n" +
	"\x16COMPRESSION_TYPE_BZIP2\x10\x04\x12\x1b\n" +
	"\x17COMPRESSION_TYPE_TAR_GZ\x10\x052\xb7\x04\n" +
	"\n" +
	"LogService\x12>\n" +
	"\x03Log\x12\x1a.gcommon.v1.log.LogRequest\x1a\x1b.gcommon.v1.log.LogResponse\x12M\n" +
	"\bLogBatch\x12\x1f.gcommon.v1.log.LogBatchRequest\x1a .gcommon.v1.log.LogBatchResponse\x12J\n" +
	"\x05Query\x12\x1f.gcommon.v1.log.QueryLogRequest\x1a .gcommon.v1.log.QueryLogResponse\x12F\n" +
	"\x06Stream\x12 .gcommon.v1.log.StreamLogRequest\x1a\x18.gcommon.v1.log.LogEntry0\x01\x12V\n" +
	"\vGetLogLevel\x12\".gcommon.v1.log.GetLogLevelRequest\x1a#.gcommon.v1.log.GetLogLevelResponse\x12V\n" +
	"\vSetLogLevel\x12\".gcommon.v1.log.SetLogLevelRequest\x1a#.gcommon.v1.log.SetLogLevelResponse\x12V\n" +
	"\vGetLogStats\x12\".gcommon.v1.log.GetLogStatsRequest\x1a#.gcommon.v1.log.GetLogStatsResponse2\x83\x05\n" +
	"\x0fLogAdminService\x12Y\n" +
	"\fCreateLogger\x12#.gcommon.v1.log.CreateLoggerRequest\x1a$.gcommon.v1.log.CreateLoggerResponse\x12Y\n" +
	"\fUpdateLogger\x12#.gcommon.v1.log.UpdateLoggerRequest\x1a$.gcommon.v1.log.UpdateLoggerResponse\x12K\n" +
	"\fDeleteLogger\x12#.gcommon.v1.log.DeleteLoggerRequest\x1a\x16.google.protobuf.Empty\x12V\n" +
	"\vListLoggers\x12\".gcommon.v1.log.ListLoggersRequest\x1a#.gcommon.v1.log.ListLoggersResponse\x12h\n" +
	"\x11ConfigureAppender\x12(.gcommon.v1.log.ConfigureAppenderRequest\x1a).gcommon.v1.log.ConfigureAppenderResponse\x12S\n" +
	"\n" +
	"RotateLogs\x12!.gcommon.v1.log.RotateLogsRequest\x1a\".gcommon.v1.log.RotateLogsResponse\x12V\n" +
	"\vArchiveLogs\x12\".gcommon.v1.log.ArchiveLogsRequest\x1a#.gcommon.v1.log.ArchiveLogsResponseB\xa9\x01\n" +
	"\x12com.gcommon.v1.logB\bLogProtoP\x01Z'github.com/jdfalk/gcommon/pkg/log/proto\xa2\x02\x03GVL\xaa\x02\x0eGcommon.V1.Log\xca\x02\x0eGcommon\\V1\\Log\xe2\x02\x1aGcommon\\V1\\Log\\GPBMetadata\xea\x02\x10Gcommon::V1::Log\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_log_proto_log_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_pkg_log_proto_log_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_pkg_log_proto_log_proto_goTypes = []any{
	(LogLevel)(0),                     // 0: gcommon.v1.log.LogLevel
	(LogSortField)(0),                 // 1: gcommon.v1.log.LogSortField
	(AppenderType)(0),                 // 2: gcommon.v1.log.AppenderType
	(FormatterType)(0),                // 3: gcommon.v1.log.FormatterType
	(FilterType)(0),                   // 4: gcommon.v1.log.FilterType
	(LoggerStatus)(0),                 // 5: gcommon.v1.log.LoggerStatus
	(CompressionType)(0),              // 6: gcommon.v1.log.CompressionType
	(*LogRequest)(nil),                // 7: gcommon.v1.log.LogRequest
	(*LogResponse)(nil),               // 8: gcommon.v1.log.LogResponse
	(*LogBatchRequest)(nil),           // 9: gcommon.v1.log.LogBatchRequest
	(*BatchLogOptions)(nil),           // 10: gcommon.v1.log.BatchLogOptions
	(*LogBatchResponse)(nil),          // 11: gcommon.v1.log.LogBatchResponse
	(*LogEntry)(nil),                  // 12: gcommon.v1.log.LogEntry
	(*SourceLocation)(nil),            // 13: gcommon.v1.log.SourceLocation
	(*ErrorInfo)(nil),                 // 14: gcommon.v1.log.ErrorInfo
	(*QueryLogRequest)(nil),           // 15: gcommon.v1.log.QueryLogRequest
	(*LogFilter)(nil),                 // 16: gcommon.v1.log.LogFilter
	(*TimeRange)(nil),                 // 17: gcommon.v1.log.TimeRange
	(*LogSort)(nil),                   // 18: gcommon.v1.log.LogSort
	(*QueryLogResponse)(nil),          // 19: gcommon.v1.log.QueryLogResponse
	(*StreamLogRequest)(nil),          // 20: gcommon.v1.log.StreamLogRequest
	(*GetLogLevelRequest)(nil),        // 21: gcommon.v1.log.GetLogLevelRequest
	(*GetLogLevelResponse)(nil),       // 22: gcommon.v1.log.GetLogLevelResponse
	(*SetLogLevelRequest)(nil),        // 23: gcommon.v1.log.SetLogLevelRequest
	(*SetLogLevelResponse)(nil),       // 24: gcommon.v1.log.SetLogLevelResponse
	(*GetLogStatsRequest)(nil),        // 25: gcommon.v1.log.GetLogStatsRequest
	(*GetLogStatsResponse)(nil),       // 26: gcommon.v1.log.GetLogStatsResponse
	(*LogStatistics)(nil),             // 27: gcommon.v1.log.LogStatistics
	(*CreateLoggerRequest)(nil),       // 28: gcommon.v1.log.CreateLoggerRequest
	(*LoggerConfig)(nil),              // 29: gcommon.v1.log.LoggerConfig
	(*AppenderConfig)(nil),            // 30: gcommon.v1.log.AppenderConfig
	(*OutputConfig)(nil),              // 31: gcommon.v1.log.OutputConfig
	(*FormatterConfig)(nil),           // 32: gcommon.v1.log.FormatterConfig
	(*FilterConfig)(nil),              // 33: gcommon.v1.log.FilterConfig
	(*CreateLoggerResponse)(nil),      // 34: gcommon.v1.log.CreateLoggerResponse
	(*UpdateLoggerRequest)(nil),       // 35: gcommon.v1.log.UpdateLoggerRequest
	(*UpdateLoggerResponse)(nil),      // 36: gcommon.v1.log.UpdateLoggerResponse
	(*DeleteLoggerRequest)(nil),       // 37: gcommon.v1.log.DeleteLoggerRequest
	(*ListLoggersRequest)(nil),        // 38: gcommon.v1.log.ListLoggersRequest
	(*ListLoggersResponse)(nil),       // 39: gcommon.v1.log.ListLoggersResponse
	(*LoggerInfo)(nil),                // 40: gcommon.v1.log.LoggerInfo
	(*ConfigureAppenderRequest)(nil),  // 41: gcommon.v1.log.ConfigureAppenderRequest
	(*ConfigureAppenderResponse)(nil), // 42: gcommon.v1.log.ConfigureAppenderResponse
	(*RotateLogsRequest)(nil),         // 43: gcommon.v1.log.RotateLogsRequest
	(*RotateLogsResponse)(nil),        // 44: gcommon.v1.log.RotateLogsResponse
	(*ArchiveLogsRequest)(nil),        // 45: gcommon.v1.log.ArchiveLogsRequest
	(*ArchiveCriteria)(nil),           // 46: gcommon.v1.log.ArchiveCriteria
	(*ArchiveLogsResponse)(nil),       // 47: gcommon.v1.log.ArchiveLogsResponse
	nil,                               // 48: gcommon.v1.log.LogEntry.FieldsEntry
	nil,                               // 49: gcommon.v1.log.ErrorInfo.ContextEntry
	nil,                               // 50: gcommon.v1.log.LogFilter.FieldFiltersEntry
	nil,                               // 51: gcommon.v1.log.GetLogStatsResponse.LevelCountsEntry
	nil,                               // 52: gcommon.v1.log.GetLogStatsResponse.LoggerStatsEntry
	nil,                               // 53: gcommon.v1.log.LoggerConfig.PropertiesEntry
	nil,                               // 54: gcommon.v1.log.OutputConfig.OptionsEntry
	nil,                               // 55: gcommon.v1.log.FormatterConfig.OptionsEntry
	nil,                               // 56: gcommon.v1.log.FilterConfig.CriteriaEntry
	(*messages.RequestMetadata)(nil),  // 57: gcommon.v1.common.RequestMetadata
	(*messages.Error)(nil),            // 58: gcommon.v1.common.Error
	(*durationpb.Duration)(nil),       // 59: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),     // 60: google.protobuf.Timestamp
	(*messages.Pagination)(nil),       // 61: gcommon.v1.common.Pagination
	(types.SortDirection)(0),          // 62: gcommon.v1.common.SortDirection
	(*fieldmaskpb.FieldMask)(nil),     // 63: google.protobuf.FieldMask
	(*anypb.Any)(nil),                 // 64: google.protobuf.Any
	(*emptypb.Empty)(nil),             // 65: google.protobuf.Empty
}
var file_pkg_log_proto_log_proto_depIdxs = []int32{
	12,  // 0: gcommon.v1.log.LogRequest.entry:type_name -> gcommon.v1.log.LogEntry
	57,  // 1: gcommon.v1.log.LogRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	58,  // 2: gcommon.v1.log.LogResponse.error:type_name -> gcommon.v1.common.Error
	12,  // 3: gcommon.v1.log.LogBatchRequest.entries:type_name -> gcommon.v1.log.LogEntry
	57,  // 4: gcommon.v1.log.LogBatchRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	10,  // 5: gcommon.v1.log.LogBatchRequest.options:type_name -> gcommon.v1.log.BatchLogOptions
	59,  // 6: gcommon.v1.log.BatchLogOptions.timeout:type_name -> google.protobuf.Duration
	58,  // 7: gcommon.v1.log.LogBatchResponse.error:type_name -> gcommon.v1.common.Error
	0,   // 8: gcommon.v1.log.LogEntry.level:type_name -> gcommon.v1.log.LogLevel
	60,  // 9: gcommon.v1.log.LogEntry.timestamp:type_name -> google.protobuf.Timestamp
	13,  // 10: gcommon.v1.log.LogEntry.source:type_name -> gcommon.v1.log.SourceLocation
	48,  // 11: gcommon.v1.log.LogEntry.fields:type_name -> gcommon.v1.log.LogEntry.FieldsEntry
	14,  // 12: gcommon.v1.log.LogEntry.error_info:type_name -> gcommon.v1.log.ErrorInfo
	49,  // 13: gcommon.v1.log.ErrorInfo.context:type_name -> gcommon.v1.log.ErrorInfo.ContextEntry
	14,  // 14: gcommon.v1.log.ErrorInfo.causes:type_name -> gcommon.v1.log.ErrorInfo
	16,  // 15: gcommon.v1.log.QueryLogRequest.filter:type_name -> gcommon.v1.log.LogFilter
	61,  // 16: gcommon.v1.log.QueryLogRequest.pagination:type_name -> gcommon.v1.common.Pagination
	18,  // 17: gcommon.v1.log.QueryLogRequest.sort:type_name -> gcommon.v1.log.LogSort
	57,  // 18: gcommon.v1.log.QueryLogRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	0,   // 19: gcommon.v1.log.LogFilter.levels:type_name -> gcommon.v1.log.LogLevel
	17,  // 20: gcommon.v1.log.LogFilter.time_range:type_name -> gcommon.v1.log.TimeRange
	50,  // 21: gcommon.v1.log.LogFilter.field_filters:type_name -> gcommon.v1.log.LogFilter.FieldFiltersEntry
	60,  // 22: gcommon.v1.log.TimeRange.start:type_name -> google.protobuf.Timestamp
	60,  // 23: gcommon.v1.log.TimeRange.end:type_name -> google.protobuf.Timestamp
	1,   // 24: gcommon.v1.log.LogSort.field:type_name -> gcommon.v1.log.LogSortField
	62,  // 25: gcommon.v1.log.LogSort.direction:type_name -> gcommon.v1.common.SortDirection
	12,  // 26: gcommon.v1.log.QueryLogResponse.entries:type_name -> gcommon.v1.log.LogEntry
	61,  // 27: gcommon.v1.log.QueryLogResponse.pagination:type_name -> gcommon.v1.common.Pagination
	58,  // 28: gcommon.v1.log.QueryLogResponse.error:type_name -> gcommon.v1.common.Error
	16,  // 29: gcommon.v1.log.StreamLogRequest.filter:type_name -> gcommon.v1.log.LogFilter
	57,  // 30: gcommon.v1.log.StreamLogRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	57,  // 31: gcommon.v1.log.GetLogLevelRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	0,   // 32: gcommon.v1.log.GetLogLevelResponse.level:type_name -> gcommon.v1.log.LogLevel
	58,  // 33: gcommon.v1.log.GetLogLevelResponse.error:type_name -> gcommon.v1.common.Error
	0,   // 34: gcommon.v1.log.SetLogLevelRequest.level:type_name -> gcommon.v1.log.LogLevel
	57,  // 35: gcommon.v1.log.SetLogLevelRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	0,   // 36: gcommon.v1.log.SetLogLevelResponse.previous_level:type_name -> gcommon.v1.log.LogLevel
	0,   // 37: gcommon.v1.log.SetLogLevelResponse.new_level:type_name -> gcommon.v1.log.LogLevel
	58,  // 38: gcommon.v1.log.SetLogLevelResponse.error:type_name -> gcommon.v1.common.Error
	17,  // 39: gcommon.v1.log.GetLogStatsRequest.time_range:type_name -> gcommon.v1.log.TimeRange
	57,  // 40: gcommon.v1.log.GetLogStatsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	27,  // 41: gcommon.v1.log.GetLogStatsResponse.stats:type_name -> gcommon.v1.log.LogStatistics
	51,  // 42: gcommon.v1.log.GetLogStatsResponse.level_counts:type_name -> gcommon.v1.log.GetLogStatsResponse.LevelCountsEntry
	52,  // 43: gcommon.v1.log.GetLogStatsResponse.logger_stats:type_name -> gcommon.v1.log.GetLogStatsResponse.LoggerStatsEntry
	58,  // 44: gcommon.v1.log.GetLogStatsResponse.error:type_name -> gcommon.v1.common.Error
	29,  // 45: gcommon.v1.log.CreateLoggerRequest.config:type_name -> gcommon.v1.log.LoggerConfig
	57,  // 46: gcommon.v1.log.CreateLoggerRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	0,   // 47: gcommon.v1.log.LoggerConfig.level:type_name -> gcommon.v1.log.LogLevel
	30,  // 48: gcommon.v1.log.LoggerConfig.appenders:type_name -> gcommon.v1.log.AppenderConfig
	53,  // 49: gcommon.v1.log.LoggerConfig.properties:type_name -> gcommon.v1.log.LoggerConfig.PropertiesEntry
	2,   // 50: gcommon.v1.log.AppenderConfig.type:type_name -> gcommon.v1.log.AppenderType
	31,  // 51: gcommon.v1.log.AppenderConfig.output:type_name -> gcommon.v1.log.OutputConfig
	32,  // 52: gcommon.v1.log.AppenderConfig.formatter:type_name -> gcommon.v1.log.FormatterConfig
	33,  // 53: gcommon.v1.log.AppenderConfig.filter:type_name -> gcommon.v1.log.FilterConfig
	54,  // 54: gcommon.v1.log.OutputConfig.options:type_name -> gcommon.v1.log.OutputConfig.OptionsEntry
	3,   // 55: gcommon.v1.log.FormatterConfig.type:type_name -> gcommon.v1.log.FormatterType
	55,  // 56: gcommon.v1.log.FormatterConfig.options:type_name -> gcommon.v1.log.FormatterConfig.OptionsEntry
	4,   // 57: gcommon.v1.log.FilterConfig.type:type_name -> gcommon.v1.log.FilterType
	56,  // 58: gcommon.v1.log.FilterConfig.criteria:type_name -> gcommon.v1.log.FilterConfig.CriteriaEntry
	58,  // 59: gcommon.v1.log.CreateLoggerResponse.error:type_name -> gcommon.v1.common.Error
	29,  // 60: gcommon.v1.log.UpdateLoggerRequest.config:type_name -> gcommon.v1.log.LoggerConfig
	63,  // 61: gcommon.v1.log.UpdateLoggerRequest.update_mask:type_name -> google.protobuf.FieldMask
	57,  // 62: gcommon.v1.log.UpdateLoggerRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	58,  // 63: gcommon.v1.log.UpdateLoggerResponse.error:type_name -> gcommon.v1.common.Error
	57,  // 64: gcommon.v1.log.DeleteLoggerRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	0,   // 65: gcommon.v1.log.ListLoggersRequest.levels:type_name -> gcommon.v1.log.LogLevel
	61,  // 66: gcommon.v1.log.ListLoggersRequest.pagination:type_name -> gcommon.v1.common.Pagination
	57,  // 67: gcommon.v1.log.ListLoggersRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	40,  // 68: gcommon.v1.log.ListLoggersResponse.loggers:type_name -> gcommon.v1.log.LoggerInfo
	61,  // 69: gcommon.v1.log.ListLoggersResponse.pagination:type_name -> gcommon.v1.common.Pagination
	58,  // 70: gcommon.v1.log.ListLoggersResponse.error:type_name -> gcommon.v1.common.Error
	29,  // 71: gcommon.v1.log.LoggerInfo.config:type_name -> gcommon.v1.log.LoggerConfig
	27,  // 72: gcommon.v1.log.LoggerInfo.stats:type_name -> gcommon.v1.log.LogStatistics
	60,  // 73: gcommon.v1.log.LoggerInfo.created_at:type_name -> google.protobuf.Timestamp
	60,  // 74: gcommon.v1.log.LoggerInfo.modified_at:type_name -> google.protobuf.Timestamp
	5,   // 75: gcommon.v1.log.LoggerInfo.status:type_name -> gcommon.v1.log.LoggerStatus
	30,  // 76: gcommon.v1.log.ConfigureAppenderRequest.config:type_name -> gcommon.v1.log.AppenderConfig
	57,  // 77: gcommon.v1.log.ConfigureAppenderRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	58,  // 78: gcommon.v1.log.ConfigureAppenderResponse.error:type_name -> gcommon.v1.common.Error
	57,  // 79: gcommon.v1.log.RotateLogsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	58,  // 80: gcommon.v1.log.RotateLogsResponse.error:type_name -> gcommon.v1.common.Error
	46,  // 81: gcommon.v1.log.ArchiveLogsRequest.criteria:type_name -> gcommon.v1.log.ArchiveCriteria
	6,   // 82: gcommon.v1.log.ArchiveLogsRequest.compression:type_name -> gcommon.v1.log.CompressionType
	57,  // 83: gcommon.v1.log.ArchiveLogsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	59,  // 84: gcommon.v1.log.ArchiveCriteria.older_than:type_name -> google.protobuf.Duration
	60,  // 85: gcommon.v1.log.ArchiveCriteria.start_time:type_name -> google.protobuf.Timestamp
	60,  // 86: gcommon.v1.log.ArchiveCriteria.end_time:type_name -> google.protobuf.Timestamp
	58,  // 87: gcommon.v1.log.ArchiveLogsResponse.error:type_name -> gcommon.v1.common.Error
	64,  // 88: gcommon.v1.log.LogEntry.FieldsEntry.value:type_name -> google.protobuf.Any
	27,  // 89: gcommon.v1.log.GetLogStatsResponse.LoggerStatsEntry.value:type_name -> gcommon.v1.log.LogStatistics
	7,   // 90: gcommon.v1.log.LogService.Log:input_type -> gcommon.v1.log.LogRequest
	9,   // 91: gcommon.v1.log.LogService.LogBatch:input_type -> gcommon.v1.log.LogBatchRequest
	15,  // 92: gcommon.v1.log.LogService.Query:input_type -> gcommon.v1.log.QueryLogRequest
	20,  // 93: gcommon.v1.log.LogService.Stream:input_type -> gcommon.v1.log.StreamLogRequest
	21,  // 94: gcommon.v1.log.LogService.GetLogLevel:input_type -> gcommon.v1.log.GetLogLevelRequest
	23,  // 95: gcommon.v1.log.LogService.SetLogLevel:input_type -> gcommon.v1.log.SetLogLevelRequest
	25,  // 96: gcommon.v1.log.LogService.GetLogStats:input_type -> gcommon.v1.log.GetLogStatsRequest
	28,  // 97: gcommon.v1.log.LogAdminService.CreateLogger:input_type -> gcommon.v1.log.CreateLoggerRequest
	35,  // 98: gcommon.v1.log.LogAdminService.UpdateLogger:input_type -> gcommon.v1.log.UpdateLoggerRequest
	37,  // 99: gcommon.v1.log.LogAdminService.DeleteLogger:input_type -> gcommon.v1.log.DeleteLoggerRequest
	38,  // 100: gcommon.v1.log.LogAdminService.ListLoggers:input_type -> gcommon.v1.log.ListLoggersRequest
	41,  // 101: gcommon.v1.log.LogAdminService.ConfigureAppender:input_type -> gcommon.v1.log.ConfigureAppenderRequest
	43,  // 102: gcommon.v1.log.LogAdminService.RotateLogs:input_type -> gcommon.v1.log.RotateLogsRequest
	45,  // 103: gcommon.v1.log.LogAdminService.ArchiveLogs:input_type -> gcommon.v1.log.ArchiveLogsRequest
	8,   // 104: gcommon.v1.log.LogService.Log:output_type -> gcommon.v1.log.LogResponse
	11,  // 105: gcommon.v1.log.LogService.LogBatch:output_type -> gcommon.v1.log.LogBatchResponse
	19,  // 106: gcommon.v1.log.LogService.Query:output_type -> gcommon.v1.log.QueryLogResponse
	12,  // 107: gcommon.v1.log.LogService.Stream:output_type -> gcommon.v1.log.LogEntry
	22,  // 108: gcommon.v1.log.LogService.GetLogLevel:output_type -> gcommon.v1.log.GetLogLevelResponse
	24,  // 109: gcommon.v1.log.LogService.SetLogLevel:output_type -> gcommon.v1.log.SetLogLevelResponse
	26,  // 110: gcommon.v1.log.LogService.GetLogStats:output_type -> gcommon.v1.log.GetLogStatsResponse
	34,  // 111: gcommon.v1.log.LogAdminService.CreateLogger:output_type -> gcommon.v1.log.CreateLoggerResponse
	36,  // 112: gcommon.v1.log.LogAdminService.UpdateLogger:output_type -> gcommon.v1.log.UpdateLoggerResponse
	65,  // 113: gcommon.v1.log.LogAdminService.DeleteLogger:output_type -> google.protobuf.Empty
	39,  // 114: gcommon.v1.log.LogAdminService.ListLoggers:output_type -> gcommon.v1.log.ListLoggersResponse
	42,  // 115: gcommon.v1.log.LogAdminService.ConfigureAppender:output_type -> gcommon.v1.log.ConfigureAppenderResponse
	44,  // 116: gcommon.v1.log.LogAdminService.RotateLogs:output_type -> gcommon.v1.log.RotateLogsResponse
	47,  // 117: gcommon.v1.log.LogAdminService.ArchiveLogs:output_type -> gcommon.v1.log.ArchiveLogsResponse
	104, // [104:118] is the sub-list for method output_type
	90,  // [90:104] is the sub-list for method input_type
	90,  // [90:90] is the sub-list for extension type_name
	90,  // [90:90] is the sub-list for extension extendee
	0,   // [0:90] is the sub-list for field type_name
}

func init() { file_pkg_log_proto_log_proto_init() }
func file_pkg_log_proto_log_proto_init() {
	if File_pkg_log_proto_log_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_log_proto_log_proto_rawDesc), len(file_pkg_log_proto_log_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pkg_log_proto_log_proto_goTypes,
		DependencyIndexes: file_pkg_log_proto_log_proto_depIdxs,
		EnumInfos:         file_pkg_log_proto_log_proto_enumTypes,
		MessageInfos:      file_pkg_log_proto_log_proto_msgTypes,
	}.Build()
	File_pkg_log_proto_log_proto = out.File
	file_pkg_log_proto_log_proto_goTypes = nil
	file_pkg_log_proto_log_proto_depIdxs = nil
}
