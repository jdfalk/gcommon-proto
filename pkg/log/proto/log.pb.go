// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/log/proto/log.proto

//go:build !protoopaque

package logpb

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Log request for writing a single entry
type LogRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Log entry to write
	Entry *LogEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	// Logger name (optional)
	Logger *string `protobuf:"bytes,2,opt,name=logger" json:"logger,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogRequest) GetEntry() *LogEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *LogRequest) GetLogger() string {
	if x != nil && x.Logger != nil {
		return *x.Logger
	}
	return ""
}

func (x *LogRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LogRequest) SetEntry(v *LogEntry) {
	x.Entry = v
}

func (x *LogRequest) SetLogger(v string) {
	x.Logger = &v
}

func (x *LogRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *LogRequest) HasEntry() bool {
	if x == nil {
		return false
	}
	return x.Entry != nil
}

func (x *LogRequest) HasLogger() bool {
	if x == nil {
		return false
	}
	return x.Logger != nil
}

func (x *LogRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *LogRequest) ClearEntry() {
	x.Entry = nil
}

func (x *LogRequest) ClearLogger() {
	x.Logger = nil
}

func (x *LogRequest) ClearMetadata() {
	x.Metadata = nil
}

type LogRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Log entry to write
	Entry *LogEntry
	// Logger name (optional)
	Logger *string
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 LogRequest_builder) Build() *LogRequest {
	m0 := &LogRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Entry = b.Entry
	x.Logger = b.Logger
	x.Metadata = b.Metadata
	return m0
}

// Log response
type LogResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Entry ID (if supported)
	EntryId *string `protobuf:"bytes,2,opt,name=entry_id,json=entryId" json:"entry_id,omitempty"`
	// Error information
	Error         *proto.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *LogResponse) GetEntryId() string {
	if x != nil && x.EntryId != nil {
		return *x.EntryId
	}
	return ""
}

func (x *LogResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *LogResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *LogResponse) SetEntryId(v string) {
	x.EntryId = &v
}

func (x *LogResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *LogResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *LogResponse) HasEntryId() bool {
	if x == nil {
		return false
	}
	return x.EntryId != nil
}

func (x *LogResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *LogResponse) ClearSuccess() {
	x.Success = nil
}

func (x *LogResponse) ClearEntryId() {
	x.EntryId = nil
}

func (x *LogResponse) ClearError() {
	x.Error = nil
}

type LogResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status
	Success *bool
	// Entry ID (if supported)
	EntryId *string
	// Error information
	Error *proto.Error
}

func (b0 LogResponse_builder) Build() *LogResponse {
	m0 := &LogResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.EntryId = b.EntryId
	x.Error = b.Error
	return m0
}

// Batch log request
type LogBatchRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Log entries to write
	Entries []*LogEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	// Logger name (optional)
	Logger *string `protobuf:"bytes,2,opt,name=logger" json:"logger,omitempty"`
	// Request metadata
	Metadata *proto.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	// Batch options
	Options       *BatchLogOptions `protobuf:"bytes,4,opt,name=options" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogBatchRequest) Reset() {
	*x = LogBatchRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBatchRequest) ProtoMessage() {}

func (x *LogBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogBatchRequest) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *LogBatchRequest) GetLogger() string {
	if x != nil && x.Logger != nil {
		return *x.Logger
	}
	return ""
}

func (x *LogBatchRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LogBatchRequest) GetOptions() *BatchLogOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LogBatchRequest) SetEntries(v []*LogEntry) {
	x.Entries = v
}

func (x *LogBatchRequest) SetLogger(v string) {
	x.Logger = &v
}

func (x *LogBatchRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *LogBatchRequest) SetOptions(v *BatchLogOptions) {
	x.Options = v
}

func (x *LogBatchRequest) HasLogger() bool {
	if x == nil {
		return false
	}
	return x.Logger != nil
}

func (x *LogBatchRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *LogBatchRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.Options != nil
}

func (x *LogBatchRequest) ClearLogger() {
	x.Logger = nil
}

func (x *LogBatchRequest) ClearMetadata() {
	x.Metadata = nil
}

func (x *LogBatchRequest) ClearOptions() {
	x.Options = nil
}

type LogBatchRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Log entries to write
	Entries []*LogEntry
	// Logger name (optional)
	Logger *string
	// Request metadata
	Metadata *proto.RequestMetadata
	// Batch options
	Options *BatchLogOptions
}

func (b0 LogBatchRequest_builder) Build() *LogBatchRequest {
	m0 := &LogBatchRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Entries = b.Entries
	x.Logger = b.Logger
	x.Metadata = b.Metadata
	x.Options = b.Options
	return m0
}

// Batch log options
type BatchLogOptions struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Whether to fail fast on first error
	FailFast *bool `protobuf:"varint,1,opt,name=fail_fast,json=failFast" json:"fail_fast,omitempty"`
	// Maximum batch size
	MaxBatchSize *int32 `protobuf:"varint,2,opt,name=max_batch_size,json=maxBatchSize" json:"max_batch_size,omitempty"`
	// Batch timeout
	Timeout       *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchLogOptions) Reset() {
	*x = BatchLogOptions{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchLogOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchLogOptions) ProtoMessage() {}

func (x *BatchLogOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatchLogOptions) GetFailFast() bool {
	if x != nil && x.FailFast != nil {
		return *x.FailFast
	}
	return false
}

func (x *BatchLogOptions) GetMaxBatchSize() int32 {
	if x != nil && x.MaxBatchSize != nil {
		return *x.MaxBatchSize
	}
	return 0
}

func (x *BatchLogOptions) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *BatchLogOptions) SetFailFast(v bool) {
	x.FailFast = &v
}

func (x *BatchLogOptions) SetMaxBatchSize(v int32) {
	x.MaxBatchSize = &v
}

func (x *BatchLogOptions) SetTimeout(v *durationpb.Duration) {
	x.Timeout = v
}

func (x *BatchLogOptions) HasFailFast() bool {
	if x == nil {
		return false
	}
	return x.FailFast != nil
}

func (x *BatchLogOptions) HasMaxBatchSize() bool {
	if x == nil {
		return false
	}
	return x.MaxBatchSize != nil
}

func (x *BatchLogOptions) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.Timeout != nil
}

func (x *BatchLogOptions) ClearFailFast() {
	x.FailFast = nil
}

func (x *BatchLogOptions) ClearMaxBatchSize() {
	x.MaxBatchSize = nil
}

func (x *BatchLogOptions) ClearTimeout() {
	x.Timeout = nil
}

type BatchLogOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether to fail fast on first error
	FailFast *bool
	// Maximum batch size
	MaxBatchSize *int32
	// Batch timeout
	Timeout *durationpb.Duration
}

func (b0 BatchLogOptions_builder) Build() *BatchLogOptions {
	m0 := &BatchLogOptions{}
	b, x := &b0, m0
	_, _ = b, x
	x.FailFast = b.FailFast
	x.MaxBatchSize = b.MaxBatchSize
	x.Timeout = b.Timeout
	return m0
}

// Batch log response
type LogBatchResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Number of successfully written entries
	SuccessCount *int32 `protobuf:"varint,1,opt,name=success_count,json=successCount" json:"success_count,omitempty"`
	// Error code
	Code *string `protobuf:"bytes,4,opt,name=code" json:"code,omitempty"`
	// Additional error context
	Context map[string]string `protobuf:"bytes,5,rep,name=context" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Cause chain for error propagation
	Causes        []*ErrorInfo `protobuf:"bytes,6,rep,name=causes" json:"causes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogBatchResponse) Reset() {
	*x = LogBatchResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBatchResponse) ProtoMessage() {}

func (x *LogBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogBatchResponse) GetSuccessCount() int32 {
	if x != nil && x.SuccessCount != nil {
		return *x.SuccessCount
	}
	return 0
}

func (x *LogBatchResponse) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *LogBatchResponse) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *LogBatchResponse) GetCauses() []*ErrorInfo {
	if x != nil {
		return x.Causes
	}
	return nil
}

func (x *LogBatchResponse) SetSuccessCount(v int32) {
	x.SuccessCount = &v
}

func (x *LogBatchResponse) SetCode(v string) {
	x.Code = &v
}

func (x *LogBatchResponse) SetContext(v map[string]string) {
	x.Context = v
}

func (x *LogBatchResponse) SetCauses(v []*ErrorInfo) {
	x.Causes = v
}

func (x *LogBatchResponse) HasSuccessCount() bool {
	if x == nil {
		return false
	}
	return x.SuccessCount != nil
}

func (x *LogBatchResponse) HasCode() bool {
	if x == nil {
		return false
	}
	return x.Code != nil
}

func (x *LogBatchResponse) ClearSuccessCount() {
	x.SuccessCount = nil
}

func (x *LogBatchResponse) ClearCode() {
	x.Code = nil
}

type LogBatchResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Number of successfully written entries
	SuccessCount *int32
	// Error code
	Code *string
	// Additional error context
	Context map[string]string
	// Cause chain for error propagation
	Causes []*ErrorInfo
}

func (b0 LogBatchResponse_builder) Build() *LogBatchResponse {
	m0 := &LogBatchResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.SuccessCount = b.SuccessCount
	x.Code = b.Code
	x.Context = b.Context
	x.Causes = b.Causes
	return m0
}

// LogSort defines sorting options for log queries
type LogSort struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Field to sort by
	Field *LogSortField `protobuf:"varint,1,opt,name=field,enum=gcommon.v1.log.LogSortField" json:"field,omitempty"`
	// Sort direction (true for ascending, false for descending)
	Ascending     *bool `protobuf:"varint,2,opt,name=ascending" json:"ascending,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogSort) Reset() {
	*x = LogSort{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSort) ProtoMessage() {}

func (x *LogSort) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogSort) GetField() LogSortField {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return LogSortField_LOG_SORT_FIELD_UNSPECIFIED
}

func (x *LogSort) GetAscending() bool {
	if x != nil && x.Ascending != nil {
		return *x.Ascending
	}
	return false
}

func (x *LogSort) SetField(v LogSortField) {
	x.Field = &v
}

func (x *LogSort) SetAscending(v bool) {
	x.Ascending = &v
}

func (x *LogSort) HasField() bool {
	if x == nil {
		return false
	}
	return x.Field != nil
}

func (x *LogSort) HasAscending() bool {
	if x == nil {
		return false
	}
	return x.Ascending != nil
}

func (x *LogSort) ClearField() {
	x.Field = nil
}

func (x *LogSort) ClearAscending() {
	x.Ascending = nil
}

type LogSort_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Field to sort by
	Field *LogSortField
	// Sort direction (true for ascending, false for descending)
	Ascending *bool
}

func (b0 LogSort_builder) Build() *LogSort {
	m0 := &LogSort{}
	b, x := &b0, m0
	_, _ = b, x
	x.Field = b.Field
	x.Ascending = b.Ascending
	return m0
}

// Query log request
type QueryLogRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Query filters
	Filter *LogFilter `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	// Pagination
	Pagination *proto.Pagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	// Sorting options
	Sort *LogSort `protobuf:"bytes,3,opt,name=sort" json:"sort,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryLogRequest) Reset() {
	*x = QueryLogRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLogRequest) ProtoMessage() {}

func (x *QueryLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryLogRequest) GetFilter() *LogFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *QueryLogRequest) GetPagination() *proto.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *QueryLogRequest) GetSort() *LogSort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *QueryLogRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *QueryLogRequest) SetFilter(v *LogFilter) {
	x.Filter = v
}

func (x *QueryLogRequest) SetPagination(v *proto.Pagination) {
	x.Pagination = v
}

func (x *QueryLogRequest) SetSort(v *LogSort) {
	x.Sort = v
}

func (x *QueryLogRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *QueryLogRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.Filter != nil
}

func (x *QueryLogRequest) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *QueryLogRequest) HasSort() bool {
	if x == nil {
		return false
	}
	return x.Sort != nil
}

func (x *QueryLogRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *QueryLogRequest) ClearFilter() {
	x.Filter = nil
}

func (x *QueryLogRequest) ClearPagination() {
	x.Pagination = nil
}

func (x *QueryLogRequest) ClearSort() {
	x.Sort = nil
}

func (x *QueryLogRequest) ClearMetadata() {
	x.Metadata = nil
}

type QueryLogRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Query filters
	Filter *LogFilter
	// Pagination
	Pagination *proto.Pagination
	// Sorting options
	Sort *LogSort
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 QueryLogRequest_builder) Build() *QueryLogRequest {
	m0 := &QueryLogRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Filter = b.Filter
	x.Pagination = b.Pagination
	x.Sort = b.Sort
	x.Metadata = b.Metadata
	return m0
}

// Log filter options
type LogFilter struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Log level filter
	Levels []LogLevel `protobuf:"varint,1,rep,packed,name=levels,enum=gcommon.v1.log.LogLevel" json:"levels,omitempty"`
	// Logger name filter
	Loggers []string `protobuf:"bytes,2,rep,name=loggers" json:"loggers,omitempty"`
	// Message search (supports regex)
	MessagePattern *string `protobuf:"bytes,3,opt,name=message_pattern,json=messagePattern" json:"message_pattern,omitempty"`
	// Time range filter
	TimeRange *TimeRange `protobuf:"bytes,4,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	// Tag filters
	Tags []string `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	// Trace ID filter
	TraceId *string `protobuf:"bytes,6,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	// User ID filter
	UserId *string `protobuf:"bytes,7,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// Request ID filter
	RequestId *string `protobuf:"bytes,8,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Field filters
	FieldFilters  map[string]string `protobuf:"bytes,9,rep,name=field_filters,json=fieldFilters" json:"field_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogFilter) Reset() {
	*x = LogFilter{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFilter) ProtoMessage() {}

func (x *LogFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogFilter) GetLevels() []LogLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *LogFilter) GetLoggers() []string {
	if x != nil {
		return x.Loggers
	}
	return nil
}

func (x *LogFilter) GetMessagePattern() string {
	if x != nil && x.MessagePattern != nil {
		return *x.MessagePattern
	}
	return ""
}

func (x *LogFilter) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *LogFilter) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *LogFilter) GetTraceId() string {
	if x != nil && x.TraceId != nil {
		return *x.TraceId
	}
	return ""
}

func (x *LogFilter) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *LogFilter) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *LogFilter) GetFieldFilters() map[string]string {
	if x != nil {
		return x.FieldFilters
	}
	return nil
}

func (x *LogFilter) SetLevels(v []LogLevel) {
	x.Levels = v
}

func (x *LogFilter) SetLoggers(v []string) {
	x.Loggers = v
}

func (x *LogFilter) SetMessagePattern(v string) {
	x.MessagePattern = &v
}

func (x *LogFilter) SetTimeRange(v *TimeRange) {
	x.TimeRange = v
}

func (x *LogFilter) SetTags(v []string) {
	x.Tags = v
}

func (x *LogFilter) SetTraceId(v string) {
	x.TraceId = &v
}

func (x *LogFilter) SetUserId(v string) {
	x.UserId = &v
}

func (x *LogFilter) SetRequestId(v string) {
	x.RequestId = &v
}

func (x *LogFilter) SetFieldFilters(v map[string]string) {
	x.FieldFilters = v
}

func (x *LogFilter) HasMessagePattern() bool {
	if x == nil {
		return false
	}
	return x.MessagePattern != nil
}

func (x *LogFilter) HasTimeRange() bool {
	if x == nil {
		return false
	}
	return x.TimeRange != nil
}

func (x *LogFilter) HasTraceId() bool {
	if x == nil {
		return false
	}
	return x.TraceId != nil
}

func (x *LogFilter) HasUserId() bool {
	if x == nil {
		return false
	}
	return x.UserId != nil
}

func (x *LogFilter) HasRequestId() bool {
	if x == nil {
		return false
	}
	return x.RequestId != nil
}

func (x *LogFilter) ClearMessagePattern() {
	x.MessagePattern = nil
}

func (x *LogFilter) ClearTimeRange() {
	x.TimeRange = nil
}

func (x *LogFilter) ClearTraceId() {
	x.TraceId = nil
}

func (x *LogFilter) ClearUserId() {
	x.UserId = nil
}

func (x *LogFilter) ClearRequestId() {
	x.RequestId = nil
}

type LogFilter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Log level filter
	Levels []LogLevel
	// Logger name filter
	Loggers []string
	// Message search (supports regex)
	MessagePattern *string
	// Time range filter
	TimeRange *TimeRange
	// Tag filters
	Tags []string
	// Trace ID filter
	TraceId *string
	// User ID filter
	UserId *string
	// Request ID filter
	RequestId *string
	// Field filters
	FieldFilters map[string]string
}

func (b0 LogFilter_builder) Build() *LogFilter {
	m0 := &LogFilter{}
	b, x := &b0, m0
	_, _ = b, x
	x.Levels = b.Levels
	x.Loggers = b.Loggers
	x.MessagePattern = b.MessagePattern
	x.TimeRange = b.TimeRange
	x.Tags = b.Tags
	x.TraceId = b.TraceId
	x.UserId = b.UserId
	x.RequestId = b.RequestId
	x.FieldFilters = b.FieldFilters
	return m0
}

// Time range for filtering
type TimeRange struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Start time (inclusive)
	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	// End time (exclusive)
	End           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TimeRange) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *TimeRange) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *TimeRange) SetStart(v *timestamppb.Timestamp) {
	x.Start = v
}

func (x *TimeRange) SetEnd(v *timestamppb.Timestamp) {
	x.End = v
}

func (x *TimeRange) HasStart() bool {
	if x == nil {
		return false
	}
	return x.Start != nil
}

func (x *TimeRange) HasEnd() bool {
	if x == nil {
		return false
	}
	return x.End != nil
}

func (x *TimeRange) ClearStart() {
	x.Start = nil
}

func (x *TimeRange) ClearEnd() {
	x.End = nil
}

type TimeRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Start time (inclusive)
	Start *timestamppb.Timestamp
	// End time (exclusive)
	End *timestamppb.Timestamp
}

func (b0 TimeRange_builder) Build() *TimeRange {
	m0 := &TimeRange{}
	b, x := &b0, m0
	_, _ = b, x
	x.Start = b.Start
	x.End = b.End
	return m0
}

// Query log response
type QueryLogResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Found log entries
	Entries []*LogEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	// Pagination info
	Pagination *proto.Pagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	// Total count (if requested)
	TotalCount *int64 `protobuf:"varint,3,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	// Error information
	Error         *proto.Error `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryLogResponse) Reset() {
	*x = QueryLogResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLogResponse) ProtoMessage() {}

func (x *QueryLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryLogResponse) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *QueryLogResponse) GetPagination() *proto.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *QueryLogResponse) GetTotalCount() int64 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

func (x *QueryLogResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *QueryLogResponse) SetEntries(v []*LogEntry) {
	x.Entries = v
}

func (x *QueryLogResponse) SetPagination(v *proto.Pagination) {
	x.Pagination = v
}

func (x *QueryLogResponse) SetTotalCount(v int64) {
	x.TotalCount = &v
}

func (x *QueryLogResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *QueryLogResponse) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *QueryLogResponse) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return x.TotalCount != nil
}

func (x *QueryLogResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *QueryLogResponse) ClearPagination() {
	x.Pagination = nil
}

func (x *QueryLogResponse) ClearTotalCount() {
	x.TotalCount = nil
}

func (x *QueryLogResponse) ClearError() {
	x.Error = nil
}

type QueryLogResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Found log entries
	Entries []*LogEntry
	// Pagination info
	Pagination *proto.Pagination
	// Total count (if requested)
	TotalCount *int64
	// Error information
	Error *proto.Error
}

func (b0 QueryLogResponse_builder) Build() *QueryLogResponse {
	m0 := &QueryLogResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Entries = b.Entries
	x.Pagination = b.Pagination
	x.TotalCount = b.TotalCount
	x.Error = b.Error
	return m0
}

// Stream log request
type StreamLogRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Stream filters
	Filter *LogFilter `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	// Follow mode (tail -f style)
	Follow *bool `protobuf:"varint,2,opt,name=follow" json:"follow,omitempty"`
	// Buffer size
	BufferSize *int32 `protobuf:"varint,3,opt,name=buffer_size,json=bufferSize" json:"buffer_size,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamLogRequest) Reset() {
	*x = StreamLogRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogRequest) ProtoMessage() {}

func (x *StreamLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamLogRequest) GetFilter() *LogFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *StreamLogRequest) GetFollow() bool {
	if x != nil && x.Follow != nil {
		return *x.Follow
	}
	return false
}

func (x *StreamLogRequest) GetBufferSize() int32 {
	if x != nil && x.BufferSize != nil {
		return *x.BufferSize
	}
	return 0
}

func (x *StreamLogRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StreamLogRequest) SetFilter(v *LogFilter) {
	x.Filter = v
}

func (x *StreamLogRequest) SetFollow(v bool) {
	x.Follow = &v
}

func (x *StreamLogRequest) SetBufferSize(v int32) {
	x.BufferSize = &v
}

func (x *StreamLogRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *StreamLogRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.Filter != nil
}

func (x *StreamLogRequest) HasFollow() bool {
	if x == nil {
		return false
	}
	return x.Follow != nil
}

func (x *StreamLogRequest) HasBufferSize() bool {
	if x == nil {
		return false
	}
	return x.BufferSize != nil
}

func (x *StreamLogRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *StreamLogRequest) ClearFilter() {
	x.Filter = nil
}

func (x *StreamLogRequest) ClearFollow() {
	x.Follow = nil
}

func (x *StreamLogRequest) ClearBufferSize() {
	x.BufferSize = nil
}

func (x *StreamLogRequest) ClearMetadata() {
	x.Metadata = nil
}

type StreamLogRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Stream filters
	Filter *LogFilter
	// Follow mode (tail -f style)
	Follow *bool
	// Buffer size
	BufferSize *int32
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 StreamLogRequest_builder) Build() *StreamLogRequest {
	m0 := &StreamLogRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Filter = b.Filter
	x.Follow = b.Follow
	x.BufferSize = b.BufferSize
	x.Metadata = b.Metadata
	return m0
}

// Get log level request
type GetLogLevelRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Logger name (optional, defaults to root)
	Logger *string `protobuf:"bytes,1,opt,name=logger" json:"logger,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogLevelRequest) Reset() {
	*x = GetLogLevelRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogLevelRequest) ProtoMessage() {}

func (x *GetLogLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetLogLevelRequest) GetLogger() string {
	if x != nil && x.Logger != nil {
		return *x.Logger
	}
	return ""
}

func (x *GetLogLevelRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetLogLevelRequest) SetLogger(v string) {
	x.Logger = &v
}

func (x *GetLogLevelRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *GetLogLevelRequest) HasLogger() bool {
	if x == nil {
		return false
	}
	return x.Logger != nil
}

func (x *GetLogLevelRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetLogLevelRequest) ClearLogger() {
	x.Logger = nil
}

func (x *GetLogLevelRequest) ClearMetadata() {
	x.Metadata = nil
}

type GetLogLevelRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger name (optional, defaults to root)
	Logger *string
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 GetLogLevelRequest_builder) Build() *GetLogLevelRequest {
	m0 := &GetLogLevelRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Logger = b.Logger
	x.Metadata = b.Metadata
	return m0
}

// Get log level response
type GetLogLevelResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Current log level
	Level *LogLevel `protobuf:"varint,1,opt,name=level,enum=gcommon.v1.log.LogLevel" json:"level,omitempty"`
	// Logger name
	Logger *string `protobuf:"bytes,2,opt,name=logger" json:"logger,omitempty"`
	// Error information
	Error         *proto.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogLevelResponse) Reset() {
	*x = GetLogLevelResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogLevelResponse) ProtoMessage() {}

func (x *GetLogLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetLogLevelResponse) GetLevel() LogLevel {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *GetLogLevelResponse) GetLogger() string {
	if x != nil && x.Logger != nil {
		return *x.Logger
	}
	return ""
}

func (x *GetLogLevelResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetLogLevelResponse) SetLevel(v LogLevel) {
	x.Level = &v
}

func (x *GetLogLevelResponse) SetLogger(v string) {
	x.Logger = &v
}

func (x *GetLogLevelResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *GetLogLevelResponse) HasLevel() bool {
	if x == nil {
		return false
	}
	return x.Level != nil
}

func (x *GetLogLevelResponse) HasLogger() bool {
	if x == nil {
		return false
	}
	return x.Logger != nil
}

func (x *GetLogLevelResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *GetLogLevelResponse) ClearLevel() {
	x.Level = nil
}

func (x *GetLogLevelResponse) ClearLogger() {
	x.Logger = nil
}

func (x *GetLogLevelResponse) ClearError() {
	x.Error = nil
}

type GetLogLevelResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Current log level
	Level *LogLevel
	// Logger name
	Logger *string
	// Error information
	Error *proto.Error
}

func (b0 GetLogLevelResponse_builder) Build() *GetLogLevelResponse {
	m0 := &GetLogLevelResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Level = b.Level
	x.Logger = b.Logger
	x.Error = b.Error
	return m0
}

// Set log level request
type SetLogLevelRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// New log level
	Level *LogLevel `protobuf:"varint,1,opt,name=level,enum=gcommon.v1.log.LogLevel" json:"level,omitempty"`
	// Logger name (optional, defaults to root)
	Logger *string `protobuf:"bytes,2,opt,name=logger" json:"logger,omitempty"`
	// Whether to persist the change
	Persist *bool `protobuf:"varint,3,opt,name=persist" json:"persist,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLogLevelRequest) Reset() {
	*x = SetLogLevelRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLogLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogLevelRequest) ProtoMessage() {}

func (x *SetLogLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetLogLevelRequest) GetLevel() LogLevel {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *SetLogLevelRequest) GetLogger() string {
	if x != nil && x.Logger != nil {
		return *x.Logger
	}
	return ""
}

func (x *SetLogLevelRequest) GetPersist() bool {
	if x != nil && x.Persist != nil {
		return *x.Persist
	}
	return false
}

func (x *SetLogLevelRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SetLogLevelRequest) SetLevel(v LogLevel) {
	x.Level = &v
}

func (x *SetLogLevelRequest) SetLogger(v string) {
	x.Logger = &v
}

func (x *SetLogLevelRequest) SetPersist(v bool) {
	x.Persist = &v
}

func (x *SetLogLevelRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *SetLogLevelRequest) HasLevel() bool {
	if x == nil {
		return false
	}
	return x.Level != nil
}

func (x *SetLogLevelRequest) HasLogger() bool {
	if x == nil {
		return false
	}
	return x.Logger != nil
}

func (x *SetLogLevelRequest) HasPersist() bool {
	if x == nil {
		return false
	}
	return x.Persist != nil
}

func (x *SetLogLevelRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *SetLogLevelRequest) ClearLevel() {
	x.Level = nil
}

func (x *SetLogLevelRequest) ClearLogger() {
	x.Logger = nil
}

func (x *SetLogLevelRequest) ClearPersist() {
	x.Persist = nil
}

func (x *SetLogLevelRequest) ClearMetadata() {
	x.Metadata = nil
}

type SetLogLevelRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// New log level
	Level *LogLevel
	// Logger name (optional, defaults to root)
	Logger *string
	// Whether to persist the change
	Persist *bool
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 SetLogLevelRequest_builder) Build() *SetLogLevelRequest {
	m0 := &SetLogLevelRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Level = b.Level
	x.Logger = b.Logger
	x.Persist = b.Persist
	x.Metadata = b.Metadata
	return m0
}

// Set log level response
type SetLogLevelResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Previous log level
	PreviousLevel *LogLevel `protobuf:"varint,1,opt,name=previous_level,json=previousLevel,enum=gcommon.v1.log.LogLevel" json:"previous_level,omitempty"`
	// New log level
	NewLevel *LogLevel `protobuf:"varint,2,opt,name=new_level,json=newLevel,enum=gcommon.v1.log.LogLevel" json:"new_level,omitempty"`
	// Logger name
	Logger *string `protobuf:"bytes,3,opt,name=logger" json:"logger,omitempty"`
	// Error information
	Error         *proto.Error `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLogLevelResponse) Reset() {
	*x = SetLogLevelResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLogLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogLevelResponse) ProtoMessage() {}

func (x *SetLogLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetLogLevelResponse) GetPreviousLevel() LogLevel {
	if x != nil && x.PreviousLevel != nil {
		return *x.PreviousLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *SetLogLevelResponse) GetNewLevel() LogLevel {
	if x != nil && x.NewLevel != nil {
		return *x.NewLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *SetLogLevelResponse) GetLogger() string {
	if x != nil && x.Logger != nil {
		return *x.Logger
	}
	return ""
}

func (x *SetLogLevelResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SetLogLevelResponse) SetPreviousLevel(v LogLevel) {
	x.PreviousLevel = &v
}

func (x *SetLogLevelResponse) SetNewLevel(v LogLevel) {
	x.NewLevel = &v
}

func (x *SetLogLevelResponse) SetLogger(v string) {
	x.Logger = &v
}

func (x *SetLogLevelResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *SetLogLevelResponse) HasPreviousLevel() bool {
	if x == nil {
		return false
	}
	return x.PreviousLevel != nil
}

func (x *SetLogLevelResponse) HasNewLevel() bool {
	if x == nil {
		return false
	}
	return x.NewLevel != nil
}

func (x *SetLogLevelResponse) HasLogger() bool {
	if x == nil {
		return false
	}
	return x.Logger != nil
}

func (x *SetLogLevelResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *SetLogLevelResponse) ClearPreviousLevel() {
	x.PreviousLevel = nil
}

func (x *SetLogLevelResponse) ClearNewLevel() {
	x.NewLevel = nil
}

func (x *SetLogLevelResponse) ClearLogger() {
	x.Logger = nil
}

func (x *SetLogLevelResponse) ClearError() {
	x.Error = nil
}

type SetLogLevelResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Previous log level
	PreviousLevel *LogLevel
	// New log level
	NewLevel *LogLevel
	// Logger name
	Logger *string
	// Error information
	Error *proto.Error
}

func (b0 SetLogLevelResponse_builder) Build() *SetLogLevelResponse {
	m0 := &SetLogLevelResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.PreviousLevel = b.PreviousLevel
	x.NewLevel = b.NewLevel
	x.Logger = b.Logger
	x.Error = b.Error
	return m0
}

// Get log stats request
type GetLogStatsRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Time range for statistics
	TimeRange *TimeRange `protobuf:"bytes,1,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	// Logger filter
	Loggers []string `protobuf:"bytes,2,rep,name=loggers" json:"loggers,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogStatsRequest) Reset() {
	*x = GetLogStatsRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogStatsRequest) ProtoMessage() {}

func (x *GetLogStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetLogStatsRequest) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetLogStatsRequest) GetLoggers() []string {
	if x != nil {
		return x.Loggers
	}
	return nil
}

func (x *GetLogStatsRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetLogStatsRequest) SetTimeRange(v *TimeRange) {
	x.TimeRange = v
}

func (x *GetLogStatsRequest) SetLoggers(v []string) {
	x.Loggers = v
}

func (x *GetLogStatsRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *GetLogStatsRequest) HasTimeRange() bool {
	if x == nil {
		return false
	}
	return x.TimeRange != nil
}

func (x *GetLogStatsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetLogStatsRequest) ClearTimeRange() {
	x.TimeRange = nil
}

func (x *GetLogStatsRequest) ClearMetadata() {
	x.Metadata = nil
}

type GetLogStatsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Time range for statistics
	TimeRange *TimeRange
	// Logger filter
	Loggers []string
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 GetLogStatsRequest_builder) Build() *GetLogStatsRequest {
	m0 := &GetLogStatsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.TimeRange = b.TimeRange
	x.Loggers = b.Loggers
	x.Metadata = b.Metadata
	return m0
}

// Get log stats response
type GetLogStatsResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Overall statistics
	Stats *LogStatistics `protobuf:"bytes,1,opt,name=stats" json:"stats,omitempty"`
	// Per-level statistics
	LevelCounts map[string]int64 `protobuf:"bytes,2,rep,name=level_counts,json=levelCounts" json:"level_counts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Per-logger statistics
	LoggerStats map[string]*LogStatistics `protobuf:"bytes,3,rep,name=logger_stats,json=loggerStats" json:"logger_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Error information
	Error         *proto.Error `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogStatsResponse) Reset() {
	*x = GetLogStatsResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogStatsResponse) ProtoMessage() {}

func (x *GetLogStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetLogStatsResponse) GetStats() *LogStatistics {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetLogStatsResponse) GetLevelCounts() map[string]int64 {
	if x != nil {
		return x.LevelCounts
	}
	return nil
}

func (x *GetLogStatsResponse) GetLoggerStats() map[string]*LogStatistics {
	if x != nil {
		return x.LoggerStats
	}
	return nil
}

func (x *GetLogStatsResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetLogStatsResponse) SetStats(v *LogStatistics) {
	x.Stats = v
}

func (x *GetLogStatsResponse) SetLevelCounts(v map[string]int64) {
	x.LevelCounts = v
}

func (x *GetLogStatsResponse) SetLoggerStats(v map[string]*LogStatistics) {
	x.LoggerStats = v
}

func (x *GetLogStatsResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *GetLogStatsResponse) HasStats() bool {
	if x == nil {
		return false
	}
	return x.Stats != nil
}

func (x *GetLogStatsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *GetLogStatsResponse) ClearStats() {
	x.Stats = nil
}

func (x *GetLogStatsResponse) ClearError() {
	x.Error = nil
}

type GetLogStatsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Overall statistics
	Stats *LogStatistics
	// Per-level statistics
	LevelCounts map[string]int64
	// Per-logger statistics
	LoggerStats map[string]*LogStatistics
	// Error information
	Error *proto.Error
}

func (b0 GetLogStatsResponse_builder) Build() *GetLogStatsResponse {
	m0 := &GetLogStatsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Stats = b.Stats
	x.LevelCounts = b.LevelCounts
	x.LoggerStats = b.LoggerStats
	x.Error = b.Error
	return m0
}

// Log statistics
type LogStatistics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Total log entries
	TotalEntries *int64 `protobuf:"varint,1,opt,name=total_entries,json=totalEntries" json:"total_entries,omitempty"`
	// Entries per second (rate)
	EntriesPerSecond *float64 `protobuf:"fixed64,2,opt,name=entries_per_second,json=entriesPerSecond" json:"entries_per_second,omitempty"`
	// Average entry size
	AverageSize *int64 `protobuf:"varint,3,opt,name=average_size,json=averageSize" json:"average_size,omitempty"`
	// Total size
	TotalSize *int64 `protobuf:"varint,4,opt,name=total_size,json=totalSize" json:"total_size,omitempty"`
	// Error count
	ErrorCount *int64 `protobuf:"varint,5,opt,name=error_count,json=errorCount" json:"error_count,omitempty"`
	// Warning count
	WarningCount  *int64 `protobuf:"varint,6,opt,name=warning_count,json=warningCount" json:"warning_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogStatistics) Reset() {
	*x = LogStatistics{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogStatistics) ProtoMessage() {}

func (x *LogStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogStatistics) GetTotalEntries() int64 {
	if x != nil && x.TotalEntries != nil {
		return *x.TotalEntries
	}
	return 0
}

func (x *LogStatistics) GetEntriesPerSecond() float64 {
	if x != nil && x.EntriesPerSecond != nil {
		return *x.EntriesPerSecond
	}
	return 0
}

func (x *LogStatistics) GetAverageSize() int64 {
	if x != nil && x.AverageSize != nil {
		return *x.AverageSize
	}
	return 0
}

func (x *LogStatistics) GetTotalSize() int64 {
	if x != nil && x.TotalSize != nil {
		return *x.TotalSize
	}
	return 0
}

func (x *LogStatistics) GetErrorCount() int64 {
	if x != nil && x.ErrorCount != nil {
		return *x.ErrorCount
	}
	return 0
}

func (x *LogStatistics) GetWarningCount() int64 {
	if x != nil && x.WarningCount != nil {
		return *x.WarningCount
	}
	return 0
}

func (x *LogStatistics) SetTotalEntries(v int64) {
	x.TotalEntries = &v
}

func (x *LogStatistics) SetEntriesPerSecond(v float64) {
	x.EntriesPerSecond = &v
}

func (x *LogStatistics) SetAverageSize(v int64) {
	x.AverageSize = &v
}

func (x *LogStatistics) SetTotalSize(v int64) {
	x.TotalSize = &v
}

func (x *LogStatistics) SetErrorCount(v int64) {
	x.ErrorCount = &v
}

func (x *LogStatistics) SetWarningCount(v int64) {
	x.WarningCount = &v
}

func (x *LogStatistics) HasTotalEntries() bool {
	if x == nil {
		return false
	}
	return x.TotalEntries != nil
}

func (x *LogStatistics) HasEntriesPerSecond() bool {
	if x == nil {
		return false
	}
	return x.EntriesPerSecond != nil
}

func (x *LogStatistics) HasAverageSize() bool {
	if x == nil {
		return false
	}
	return x.AverageSize != nil
}

func (x *LogStatistics) HasTotalSize() bool {
	if x == nil {
		return false
	}
	return x.TotalSize != nil
}

func (x *LogStatistics) HasErrorCount() bool {
	if x == nil {
		return false
	}
	return x.ErrorCount != nil
}

func (x *LogStatistics) HasWarningCount() bool {
	if x == nil {
		return false
	}
	return x.WarningCount != nil
}

func (x *LogStatistics) ClearTotalEntries() {
	x.TotalEntries = nil
}

func (x *LogStatistics) ClearEntriesPerSecond() {
	x.EntriesPerSecond = nil
}

func (x *LogStatistics) ClearAverageSize() {
	x.AverageSize = nil
}

func (x *LogStatistics) ClearTotalSize() {
	x.TotalSize = nil
}

func (x *LogStatistics) ClearErrorCount() {
	x.ErrorCount = nil
}

func (x *LogStatistics) ClearWarningCount() {
	x.WarningCount = nil
}

type LogStatistics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total log entries
	TotalEntries *int64
	// Entries per second (rate)
	EntriesPerSecond *float64
	// Average entry size
	AverageSize *int64
	// Total size
	TotalSize *int64
	// Error count
	ErrorCount *int64
	// Warning count
	WarningCount *int64
}

func (b0 LogStatistics_builder) Build() *LogStatistics {
	m0 := &LogStatistics{}
	b, x := &b0, m0
	_, _ = b, x
	x.TotalEntries = b.TotalEntries
	x.EntriesPerSecond = b.EntriesPerSecond
	x.AverageSize = b.AverageSize
	x.TotalSize = b.TotalSize
	x.ErrorCount = b.ErrorCount
	x.WarningCount = b.WarningCount
	return m0
}

// Create logger request
type CreateLoggerRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Logger name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Logger configuration
	Config *LoggerConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLoggerRequest) Reset() {
	*x = CreateLoggerRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLoggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoggerRequest) ProtoMessage() {}

func (x *CreateLoggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateLoggerRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateLoggerRequest) GetConfig() *LoggerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateLoggerRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateLoggerRequest) SetName(v string) {
	x.Name = &v
}

func (x *CreateLoggerRequest) SetConfig(v *LoggerConfig) {
	x.Config = v
}

func (x *CreateLoggerRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *CreateLoggerRequest) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *CreateLoggerRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *CreateLoggerRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *CreateLoggerRequest) ClearName() {
	x.Name = nil
}

func (x *CreateLoggerRequest) ClearConfig() {
	x.Config = nil
}

func (x *CreateLoggerRequest) ClearMetadata() {
	x.Metadata = nil
}

type CreateLoggerRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger name
	Name *string
	// Logger configuration
	Config *LoggerConfig
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 CreateLoggerRequest_builder) Build() *CreateLoggerRequest {
	m0 := &CreateLoggerRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Config = b.Config
	x.Metadata = b.Metadata
	return m0
}

// Logger configuration
type LoggerConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Log level
	Level *LogLevel `protobuf:"varint,1,opt,name=level,enum=gcommon.v1.log.LogLevel" json:"level,omitempty"`
	// Output appenders
	Appenders []*AppenderConfig `protobuf:"bytes,2,rep,name=appenders" json:"appenders,omitempty"`
	// Whether to inherit from parent
	InheritAppenders *bool `protobuf:"varint,3,opt,name=inherit_appenders,json=inheritAppenders" json:"inherit_appenders,omitempty"`
	// Whether to propagate to parent logger
	Propagate *bool `protobuf:"varint,4,opt,name=propagate" json:"propagate,omitempty"`
	// Additional properties
	Properties    map[string]string `protobuf:"bytes,5,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoggerConfig) Reset() {
	*x = LoggerConfig{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggerConfig) ProtoMessage() {}

func (x *LoggerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LoggerConfig) GetLevel() LogLevel {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *LoggerConfig) GetAppenders() []*AppenderConfig {
	if x != nil {
		return x.Appenders
	}
	return nil
}

func (x *LoggerConfig) GetInheritAppenders() bool {
	if x != nil && x.InheritAppenders != nil {
		return *x.InheritAppenders
	}
	return false
}

func (x *LoggerConfig) GetPropagate() bool {
	if x != nil && x.Propagate != nil {
		return *x.Propagate
	}
	return false
}

func (x *LoggerConfig) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *LoggerConfig) SetLevel(v LogLevel) {
	x.Level = &v
}

func (x *LoggerConfig) SetAppenders(v []*AppenderConfig) {
	x.Appenders = v
}

func (x *LoggerConfig) SetInheritAppenders(v bool) {
	x.InheritAppenders = &v
}

func (x *LoggerConfig) SetPropagate(v bool) {
	x.Propagate = &v
}

func (x *LoggerConfig) SetProperties(v map[string]string) {
	x.Properties = v
}

func (x *LoggerConfig) HasLevel() bool {
	if x == nil {
		return false
	}
	return x.Level != nil
}

func (x *LoggerConfig) HasInheritAppenders() bool {
	if x == nil {
		return false
	}
	return x.InheritAppenders != nil
}

func (x *LoggerConfig) HasPropagate() bool {
	if x == nil {
		return false
	}
	return x.Propagate != nil
}

func (x *LoggerConfig) ClearLevel() {
	x.Level = nil
}

func (x *LoggerConfig) ClearInheritAppenders() {
	x.InheritAppenders = nil
}

func (x *LoggerConfig) ClearPropagate() {
	x.Propagate = nil
}

type LoggerConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Log level
	Level *LogLevel
	// Output appenders
	Appenders []*AppenderConfig
	// Whether to inherit from parent
	InheritAppenders *bool
	// Whether to propagate to parent logger
	Propagate *bool
	// Additional properties
	Properties map[string]string
}

func (b0 LoggerConfig_builder) Build() *LoggerConfig {
	m0 := &LoggerConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Level = b.Level
	x.Appenders = b.Appenders
	x.InheritAppenders = b.InheritAppenders
	x.Propagate = b.Propagate
	x.Properties = b.Properties
	return m0
}

// Appender configuration
type AppenderConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Appender name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Appender type
	Type          *AppenderType `protobuf:"varint,2,opt,name=type,enum=gcommon.v1.log.AppenderType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppenderConfig) Reset() {
	*x = AppenderConfig{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppenderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppenderConfig) ProtoMessage() {}

func (x *AppenderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AppenderConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AppenderConfig) GetType() AppenderType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return AppenderType_APPENDER_TYPE_UNSPECIFIED
}

func (x *AppenderConfig) SetName(v string) {
	x.Name = &v
}

func (x *AppenderConfig) SetType(v AppenderType) {
	x.Type = &v
}

func (x *AppenderConfig) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *AppenderConfig) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *AppenderConfig) ClearName() {
	x.Name = nil
}

func (x *AppenderConfig) ClearType() {
	x.Type = nil
}

type AppenderConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Appender name
	Name *string
	// Appender type
	Type *AppenderType
}

func (b0 AppenderConfig_builder) Build() *AppenderConfig {
	m0 := &AppenderConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Type = b.Type
	return m0
}

// Create logger response
type CreateLoggerResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Created logger name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Success status
	Success *bool `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	// Error information
	Error         *proto.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLoggerResponse) Reset() {
	*x = CreateLoggerResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLoggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoggerResponse) ProtoMessage() {}

func (x *CreateLoggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateLoggerResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateLoggerResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *CreateLoggerResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CreateLoggerResponse) SetName(v string) {
	x.Name = &v
}

func (x *CreateLoggerResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *CreateLoggerResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *CreateLoggerResponse) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *CreateLoggerResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *CreateLoggerResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *CreateLoggerResponse) ClearName() {
	x.Name = nil
}

func (x *CreateLoggerResponse) ClearSuccess() {
	x.Success = nil
}

func (x *CreateLoggerResponse) ClearError() {
	x.Error = nil
}

type CreateLoggerResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Created logger name
	Name *string
	// Success status
	Success *bool
	// Error information
	Error *proto.Error
}

func (b0 CreateLoggerResponse_builder) Build() *CreateLoggerResponse {
	m0 := &CreateLoggerResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Success = b.Success
	x.Error = b.Error
	return m0
}

// Update logger request
type UpdateLoggerRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Logger name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Updated configuration
	Config *LoggerConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Update mask
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLoggerRequest) Reset() {
	*x = UpdateLoggerRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLoggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoggerRequest) ProtoMessage() {}

func (x *UpdateLoggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateLoggerRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateLoggerRequest) GetConfig() *LoggerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *UpdateLoggerRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateLoggerRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateLoggerRequest) SetName(v string) {
	x.Name = &v
}

func (x *UpdateLoggerRequest) SetConfig(v *LoggerConfig) {
	x.Config = v
}

func (x *UpdateLoggerRequest) SetUpdateMask(v *fieldmaskpb.FieldMask) {
	x.UpdateMask = v
}

func (x *UpdateLoggerRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *UpdateLoggerRequest) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *UpdateLoggerRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *UpdateLoggerRequest) HasUpdateMask() bool {
	if x == nil {
		return false
	}
	return x.UpdateMask != nil
}

func (x *UpdateLoggerRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *UpdateLoggerRequest) ClearName() {
	x.Name = nil
}

func (x *UpdateLoggerRequest) ClearConfig() {
	x.Config = nil
}

func (x *UpdateLoggerRequest) ClearUpdateMask() {
	x.UpdateMask = nil
}

func (x *UpdateLoggerRequest) ClearMetadata() {
	x.Metadata = nil
}

type UpdateLoggerRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger name
	Name *string
	// Updated configuration
	Config *LoggerConfig
	// Update mask
	UpdateMask *fieldmaskpb.FieldMask
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 UpdateLoggerRequest_builder) Build() *UpdateLoggerRequest {
	m0 := &UpdateLoggerRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Config = b.Config
	x.UpdateMask = b.UpdateMask
	x.Metadata = b.Metadata
	return m0
}

// Update logger response
type UpdateLoggerResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Updated logger name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Success status
	Success *bool `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	// Error information
	Error         *proto.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLoggerResponse) Reset() {
	*x = UpdateLoggerResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLoggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoggerResponse) ProtoMessage() {}

func (x *UpdateLoggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateLoggerResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateLoggerResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *UpdateLoggerResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UpdateLoggerResponse) SetName(v string) {
	x.Name = &v
}

func (x *UpdateLoggerResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *UpdateLoggerResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *UpdateLoggerResponse) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *UpdateLoggerResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *UpdateLoggerResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *UpdateLoggerResponse) ClearName() {
	x.Name = nil
}

func (x *UpdateLoggerResponse) ClearSuccess() {
	x.Success = nil
}

func (x *UpdateLoggerResponse) ClearError() {
	x.Error = nil
}

type UpdateLoggerResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updated logger name
	Name *string
	// Success status
	Success *bool
	// Error information
	Error *proto.Error
}

func (b0 UpdateLoggerResponse_builder) Build() *UpdateLoggerResponse {
	m0 := &UpdateLoggerResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Success = b.Success
	x.Error = b.Error
	return m0
}

// Delete logger request
type DeleteLoggerRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Logger name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Force deletion
	Force *bool `protobuf:"varint,2,opt,name=force" json:"force,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLoggerRequest) Reset() {
	*x = DeleteLoggerRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLoggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLoggerRequest) ProtoMessage() {}

func (x *DeleteLoggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteLoggerRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeleteLoggerRequest) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

func (x *DeleteLoggerRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DeleteLoggerRequest) SetName(v string) {
	x.Name = &v
}

func (x *DeleteLoggerRequest) SetForce(v bool) {
	x.Force = &v
}

func (x *DeleteLoggerRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *DeleteLoggerRequest) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *DeleteLoggerRequest) HasForce() bool {
	if x == nil {
		return false
	}
	return x.Force != nil
}

func (x *DeleteLoggerRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *DeleteLoggerRequest) ClearName() {
	x.Name = nil
}

func (x *DeleteLoggerRequest) ClearForce() {
	x.Force = nil
}

func (x *DeleteLoggerRequest) ClearMetadata() {
	x.Metadata = nil
}

type DeleteLoggerRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger name
	Name *string
	// Force deletion
	Force *bool
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 DeleteLoggerRequest_builder) Build() *DeleteLoggerRequest {
	m0 := &DeleteLoggerRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Force = b.Force
	x.Metadata = b.Metadata
	return m0
}

// List loggers request
type ListLoggersRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Name pattern filter
	NamePattern *string `protobuf:"bytes,1,opt,name=name_pattern,json=namePattern" json:"name_pattern,omitempty"`
	// Level filter
	Levels []LogLevel `protobuf:"varint,2,rep,packed,name=levels,enum=gcommon.v1.log.LogLevel" json:"levels,omitempty"`
	// Pagination
	Pagination *proto.Pagination `protobuf:"bytes,3,opt,name=pagination" json:"pagination,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLoggersRequest) Reset() {
	*x = ListLoggersRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLoggersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoggersRequest) ProtoMessage() {}

func (x *ListLoggersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListLoggersRequest) GetNamePattern() string {
	if x != nil && x.NamePattern != nil {
		return *x.NamePattern
	}
	return ""
}

func (x *ListLoggersRequest) GetLevels() []LogLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *ListLoggersRequest) GetPagination() *proto.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListLoggersRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ListLoggersRequest) SetNamePattern(v string) {
	x.NamePattern = &v
}

func (x *ListLoggersRequest) SetLevels(v []LogLevel) {
	x.Levels = v
}

func (x *ListLoggersRequest) SetPagination(v *proto.Pagination) {
	x.Pagination = v
}

func (x *ListLoggersRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *ListLoggersRequest) HasNamePattern() bool {
	if x == nil {
		return false
	}
	return x.NamePattern != nil
}

func (x *ListLoggersRequest) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *ListLoggersRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *ListLoggersRequest) ClearNamePattern() {
	x.NamePattern = nil
}

func (x *ListLoggersRequest) ClearPagination() {
	x.Pagination = nil
}

func (x *ListLoggersRequest) ClearMetadata() {
	x.Metadata = nil
}

type ListLoggersRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name pattern filter
	NamePattern *string
	// Level filter
	Levels []LogLevel
	// Pagination
	Pagination *proto.Pagination
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 ListLoggersRequest_builder) Build() *ListLoggersRequest {
	m0 := &ListLoggersRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.NamePattern = b.NamePattern
	x.Levels = b.Levels
	x.Pagination = b.Pagination
	x.Metadata = b.Metadata
	return m0
}

// List loggers response
type ListLoggersResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Logger information
	Loggers []*LoggerInfo `protobuf:"bytes,1,rep,name=loggers" json:"loggers,omitempty"`
	// Pagination info
	Pagination *proto.Pagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	// Error information
	Error         *proto.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLoggersResponse) Reset() {
	*x = ListLoggersResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLoggersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoggersResponse) ProtoMessage() {}

func (x *ListLoggersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListLoggersResponse) GetLoggers() []*LoggerInfo {
	if x != nil {
		return x.Loggers
	}
	return nil
}

func (x *ListLoggersResponse) GetPagination() *proto.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListLoggersResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ListLoggersResponse) SetLoggers(v []*LoggerInfo) {
	x.Loggers = v
}

func (x *ListLoggersResponse) SetPagination(v *proto.Pagination) {
	x.Pagination = v
}

func (x *ListLoggersResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *ListLoggersResponse) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *ListLoggersResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *ListLoggersResponse) ClearPagination() {
	x.Pagination = nil
}

func (x *ListLoggersResponse) ClearError() {
	x.Error = nil
}

type ListLoggersResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger information
	Loggers []*LoggerInfo
	// Pagination info
	Pagination *proto.Pagination
	// Error information
	Error *proto.Error
}

func (b0 ListLoggersResponse_builder) Build() *ListLoggersResponse {
	m0 := &ListLoggersResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Loggers = b.Loggers
	x.Pagination = b.Pagination
	x.Error = b.Error
	return m0
}

// Logger information
type LoggerInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Logger name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Current configuration
	Config *LoggerConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Parent logger
	Parent *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	// Child loggers
	Children []string `protobuf:"bytes,4,rep,name=children" json:"children,omitempty"`
	// Statistics
	Stats *LogStatistics `protobuf:"bytes,5,opt,name=stats" json:"stats,omitempty"`
	// Creation time
	Status        *LoggerStatus `protobuf:"varint,8,opt,name=status,enum=gcommon.v1.log.LoggerStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoggerInfo) Reset() {
	*x = LoggerInfo{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggerInfo) ProtoMessage() {}

func (x *LoggerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LoggerInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LoggerInfo) GetConfig() *LoggerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *LoggerInfo) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *LoggerInfo) GetChildren() []string {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *LoggerInfo) GetStats() *LogStatistics {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *LoggerInfo) GetStatus() LoggerStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return LoggerStatus_LOGGER_STATUS_UNSPECIFIED
}

func (x *LoggerInfo) SetName(v string) {
	x.Name = &v
}

func (x *LoggerInfo) SetConfig(v *LoggerConfig) {
	x.Config = v
}

func (x *LoggerInfo) SetParent(v string) {
	x.Parent = &v
}

func (x *LoggerInfo) SetChildren(v []string) {
	x.Children = v
}

func (x *LoggerInfo) SetStats(v *LogStatistics) {
	x.Stats = v
}

func (x *LoggerInfo) SetStatus(v LoggerStatus) {
	x.Status = &v
}

func (x *LoggerInfo) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *LoggerInfo) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *LoggerInfo) HasParent() bool {
	if x == nil {
		return false
	}
	return x.Parent != nil
}

func (x *LoggerInfo) HasStats() bool {
	if x == nil {
		return false
	}
	return x.Stats != nil
}

func (x *LoggerInfo) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *LoggerInfo) ClearName() {
	x.Name = nil
}

func (x *LoggerInfo) ClearConfig() {
	x.Config = nil
}

func (x *LoggerInfo) ClearParent() {
	x.Parent = nil
}

func (x *LoggerInfo) ClearStats() {
	x.Stats = nil
}

func (x *LoggerInfo) ClearStatus() {
	x.Status = nil
}

type LoggerInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger name
	Name *string
	// Current configuration
	Config *LoggerConfig
	// Parent logger
	Parent *string
	// Child loggers
	Children []string
	// Statistics
	Stats *LogStatistics
	// Creation time
	Status *LoggerStatus
}

func (b0 LoggerInfo_builder) Build() *LoggerInfo {
	m0 := &LoggerInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Config = b.Config
	x.Parent = b.Parent
	x.Children = b.Children
	x.Stats = b.Stats
	x.Status = b.Status
	return m0
}

// Configure appender request
type ConfigureAppenderRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Appender configuration
	Config *AppenderConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureAppenderRequest) Reset() {
	*x = ConfigureAppenderRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureAppenderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureAppenderRequest) ProtoMessage() {}

func (x *ConfigureAppenderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConfigureAppenderRequest) GetConfig() *AppenderConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigureAppenderRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ConfigureAppenderRequest) SetConfig(v *AppenderConfig) {
	x.Config = v
}

func (x *ConfigureAppenderRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *ConfigureAppenderRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *ConfigureAppenderRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *ConfigureAppenderRequest) ClearConfig() {
	x.Config = nil
}

func (x *ConfigureAppenderRequest) ClearMetadata() {
	x.Metadata = nil
}

type ConfigureAppenderRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Appender configuration
	Config *AppenderConfig
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 ConfigureAppenderRequest_builder) Build() *ConfigureAppenderRequest {
	m0 := &ConfigureAppenderRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Config = b.Config
	x.Metadata = b.Metadata
	return m0
}

// Configure appender response
type ConfigureAppenderResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Appender name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Success status
	Success *bool `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	// Error information
	Error         *proto.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureAppenderResponse) Reset() {
	*x = ConfigureAppenderResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureAppenderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureAppenderResponse) ProtoMessage() {}

func (x *ConfigureAppenderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConfigureAppenderResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ConfigureAppenderResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ConfigureAppenderResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ConfigureAppenderResponse) SetName(v string) {
	x.Name = &v
}

func (x *ConfigureAppenderResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *ConfigureAppenderResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *ConfigureAppenderResponse) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *ConfigureAppenderResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *ConfigureAppenderResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *ConfigureAppenderResponse) ClearName() {
	x.Name = nil
}

func (x *ConfigureAppenderResponse) ClearSuccess() {
	x.Success = nil
}

func (x *ConfigureAppenderResponse) ClearError() {
	x.Error = nil
}

type ConfigureAppenderResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Appender name
	Name *string
	// Success status
	Success *bool
	// Error information
	Error *proto.Error
}

func (b0 ConfigureAppenderResponse_builder) Build() *ConfigureAppenderResponse {
	m0 := &ConfigureAppenderResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Success = b.Success
	x.Error = b.Error
	return m0
}

// Rotate logs request
type RotateLogsRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Logger pattern
	LoggerPattern *string `protobuf:"bytes,1,opt,name=logger_pattern,json=loggerPattern" json:"logger_pattern,omitempty"`
	// Force rotation
	Force *bool `protobuf:"varint,2,opt,name=force" json:"force,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateLogsRequest) Reset() {
	*x = RotateLogsRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateLogsRequest) ProtoMessage() {}

func (x *RotateLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RotateLogsRequest) GetLoggerPattern() string {
	if x != nil && x.LoggerPattern != nil {
		return *x.LoggerPattern
	}
	return ""
}

func (x *RotateLogsRequest) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

func (x *RotateLogsRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RotateLogsRequest) SetLoggerPattern(v string) {
	x.LoggerPattern = &v
}

func (x *RotateLogsRequest) SetForce(v bool) {
	x.Force = &v
}

func (x *RotateLogsRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *RotateLogsRequest) HasLoggerPattern() bool {
	if x == nil {
		return false
	}
	return x.LoggerPattern != nil
}

func (x *RotateLogsRequest) HasForce() bool {
	if x == nil {
		return false
	}
	return x.Force != nil
}

func (x *RotateLogsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *RotateLogsRequest) ClearLoggerPattern() {
	x.LoggerPattern = nil
}

func (x *RotateLogsRequest) ClearForce() {
	x.Force = nil
}

func (x *RotateLogsRequest) ClearMetadata() {
	x.Metadata = nil
}

type RotateLogsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Logger pattern
	LoggerPattern *string
	// Force rotation
	Force *bool
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 RotateLogsRequest_builder) Build() *RotateLogsRequest {
	m0 := &RotateLogsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.LoggerPattern = b.LoggerPattern
	x.Force = b.Force
	x.Metadata = b.Metadata
	return m0
}

// Rotate logs response
type RotateLogsResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Number of rotated files
	RotatedCount *int32 `protobuf:"varint,1,opt,name=rotated_count,json=rotatedCount" json:"rotated_count,omitempty"`
	// Rotated file paths
	RotatedFiles []string `protobuf:"bytes,2,rep,name=rotated_files,json=rotatedFiles" json:"rotated_files,omitempty"`
	// Error information
	Error         *proto.Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateLogsResponse) Reset() {
	*x = RotateLogsResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateLogsResponse) ProtoMessage() {}

func (x *RotateLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RotateLogsResponse) GetRotatedCount() int32 {
	if x != nil && x.RotatedCount != nil {
		return *x.RotatedCount
	}
	return 0
}

func (x *RotateLogsResponse) GetRotatedFiles() []string {
	if x != nil {
		return x.RotatedFiles
	}
	return nil
}

func (x *RotateLogsResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RotateLogsResponse) SetRotatedCount(v int32) {
	x.RotatedCount = &v
}

func (x *RotateLogsResponse) SetRotatedFiles(v []string) {
	x.RotatedFiles = v
}

func (x *RotateLogsResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *RotateLogsResponse) HasRotatedCount() bool {
	if x == nil {
		return false
	}
	return x.RotatedCount != nil
}

func (x *RotateLogsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *RotateLogsResponse) ClearRotatedCount() {
	x.RotatedCount = nil
}

func (x *RotateLogsResponse) ClearError() {
	x.Error = nil
}

type RotateLogsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Number of rotated files
	RotatedCount *int32
	// Rotated file paths
	RotatedFiles []string
	// Error information
	Error *proto.Error
}

func (b0 RotateLogsResponse_builder) Build() *RotateLogsResponse {
	m0 := &RotateLogsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.RotatedCount = b.RotatedCount
	x.RotatedFiles = b.RotatedFiles
	x.Error = b.Error
	return m0
}

// Archive logs request
type ArchiveLogsRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Archive criteria
	Criteria *ArchiveCriteria `protobuf:"bytes,1,opt,name=criteria" json:"criteria,omitempty"`
	// Archive destination
	Destination *string `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
	// Compression type
	Compression *CompressionType `protobuf:"varint,3,opt,name=compression,enum=gcommon.v1.log.CompressionType" json:"compression,omitempty"`
	// Request metadata
	Metadata      *proto.RequestMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveLogsRequest) Reset() {
	*x = ArchiveLogsRequest{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveLogsRequest) ProtoMessage() {}

func (x *ArchiveLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ArchiveLogsRequest) GetCriteria() *ArchiveCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *ArchiveLogsRequest) GetDestination() string {
	if x != nil && x.Destination != nil {
		return *x.Destination
	}
	return ""
}

func (x *ArchiveLogsRequest) GetCompression() CompressionType {
	if x != nil && x.Compression != nil {
		return *x.Compression
	}
	return CompressionType_COMPRESSION_TYPE_UNSPECIFIED
}

func (x *ArchiveLogsRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ArchiveLogsRequest) SetCriteria(v *ArchiveCriteria) {
	x.Criteria = v
}

func (x *ArchiveLogsRequest) SetDestination(v string) {
	x.Destination = &v
}

func (x *ArchiveLogsRequest) SetCompression(v CompressionType) {
	x.Compression = &v
}

func (x *ArchiveLogsRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *ArchiveLogsRequest) HasCriteria() bool {
	if x == nil {
		return false
	}
	return x.Criteria != nil
}

func (x *ArchiveLogsRequest) HasDestination() bool {
	if x == nil {
		return false
	}
	return x.Destination != nil
}

func (x *ArchiveLogsRequest) HasCompression() bool {
	if x == nil {
		return false
	}
	return x.Compression != nil
}

func (x *ArchiveLogsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *ArchiveLogsRequest) ClearCriteria() {
	x.Criteria = nil
}

func (x *ArchiveLogsRequest) ClearDestination() {
	x.Destination = nil
}

func (x *ArchiveLogsRequest) ClearCompression() {
	x.Compression = nil
}

func (x *ArchiveLogsRequest) ClearMetadata() {
	x.Metadata = nil
}

type ArchiveLogsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Archive criteria
	Criteria *ArchiveCriteria
	// Archive destination
	Destination *string
	// Compression type
	Compression *CompressionType
	// Request metadata
	Metadata *proto.RequestMetadata
}

func (b0 ArchiveLogsRequest_builder) Build() *ArchiveLogsRequest {
	m0 := &ArchiveLogsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Criteria = b.Criteria
	x.Destination = b.Destination
	x.Compression = b.Compression
	x.Metadata = b.Metadata
	return m0
}

// Archive criteria
type ArchiveCriteria struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Older than duration
	OlderThan *durationpb.Duration `protobuf:"bytes,1,opt,name=older_than,json=olderThan" json:"older_than,omitempty"`
	// Size threshold
	SizeThresholdBytes *int64 `protobuf:"varint,2,opt,name=size_threshold_bytes,json=sizeThresholdBytes" json:"size_threshold_bytes,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ArchiveCriteria) Reset() {
	*x = ArchiveCriteria{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveCriteria) ProtoMessage() {}

func (x *ArchiveCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ArchiveCriteria) GetOlderThan() *durationpb.Duration {
	if x != nil {
		return x.OlderThan
	}
	return nil
}

func (x *ArchiveCriteria) GetSizeThresholdBytes() int64 {
	if x != nil && x.SizeThresholdBytes != nil {
		return *x.SizeThresholdBytes
	}
	return 0
}

func (x *ArchiveCriteria) SetOlderThan(v *durationpb.Duration) {
	x.OlderThan = v
}

func (x *ArchiveCriteria) SetSizeThresholdBytes(v int64) {
	x.SizeThresholdBytes = &v
}

func (x *ArchiveCriteria) HasOlderThan() bool {
	if x == nil {
		return false
	}
	return x.OlderThan != nil
}

func (x *ArchiveCriteria) HasSizeThresholdBytes() bool {
	if x == nil {
		return false
	}
	return x.SizeThresholdBytes != nil
}

func (x *ArchiveCriteria) ClearOlderThan() {
	x.OlderThan = nil
}

func (x *ArchiveCriteria) ClearSizeThresholdBytes() {
	x.SizeThresholdBytes = nil
}

type ArchiveCriteria_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Older than duration
	OlderThan *durationpb.Duration
	// Size threshold
	SizeThresholdBytes *int64
}

func (b0 ArchiveCriteria_builder) Build() *ArchiveCriteria {
	m0 := &ArchiveCriteria{}
	b, x := &b0, m0
	_, _ = b, x
	x.OlderThan = b.OlderThan
	x.SizeThresholdBytes = b.SizeThresholdBytes
	return m0
}

// Archive logs response
type ArchiveLogsResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Number of archived files
	ArchivedCount *int32 `protobuf:"varint,1,opt,name=archived_count,json=archivedCount" json:"archived_count,omitempty"`
	// Archive file path
	ArchivePath *string `protobuf:"bytes,2,opt,name=archive_path,json=archivePath" json:"archive_path,omitempty"`
	// Archive size
	ArchiveSize *int64 `protobuf:"varint,3,opt,name=archive_size,json=archiveSize" json:"archive_size,omitempty"`
	// Error information
	Error         *proto.Error `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveLogsResponse) Reset() {
	*x = ArchiveLogsResponse{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveLogsResponse) ProtoMessage() {}

func (x *ArchiveLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ArchiveLogsResponse) GetArchivedCount() int32 {
	if x != nil && x.ArchivedCount != nil {
		return *x.ArchivedCount
	}
	return 0
}

func (x *ArchiveLogsResponse) GetArchivePath() string {
	if x != nil && x.ArchivePath != nil {
		return *x.ArchivePath
	}
	return ""
}

func (x *ArchiveLogsResponse) GetArchiveSize() int64 {
	if x != nil && x.ArchiveSize != nil {
		return *x.ArchiveSize
	}
	return 0
}

func (x *ArchiveLogsResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ArchiveLogsResponse) SetArchivedCount(v int32) {
	x.ArchivedCount = &v
}

func (x *ArchiveLogsResponse) SetArchivePath(v string) {
	x.ArchivePath = &v
}

func (x *ArchiveLogsResponse) SetArchiveSize(v int64) {
	x.ArchiveSize = &v
}

func (x *ArchiveLogsResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *ArchiveLogsResponse) HasArchivedCount() bool {
	if x == nil {
		return false
	}
	return x.ArchivedCount != nil
}

func (x *ArchiveLogsResponse) HasArchivePath() bool {
	if x == nil {
		return false
	}
	return x.ArchivePath != nil
}

func (x *ArchiveLogsResponse) HasArchiveSize() bool {
	if x == nil {
		return false
	}
	return x.ArchiveSize != nil
}

func (x *ArchiveLogsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *ArchiveLogsResponse) ClearArchivedCount() {
	x.ArchivedCount = nil
}

func (x *ArchiveLogsResponse) ClearArchivePath() {
	x.ArchivePath = nil
}

func (x *ArchiveLogsResponse) ClearArchiveSize() {
	x.ArchiveSize = nil
}

func (x *ArchiveLogsResponse) ClearError() {
	x.Error = nil
}

type ArchiveLogsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Number of archived files
	ArchivedCount *int32
	// Archive file path
	ArchivePath *string
	// Archive size
	ArchiveSize *int64
	// Error information
	Error *proto.Error
}

func (b0 ArchiveLogsResponse_builder) Build() *ArchiveLogsResponse {
	m0 := &ArchiveLogsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.ArchivedCount = b.ArchivedCount
	x.ArchivePath = b.ArchivePath
	x.ArchiveSize = b.ArchiveSize
	x.Error = b.Error
	return m0
}

// Output configuration
type AppenderConfig_OutputConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Output target (file path, network address, etc.)
	Target *string `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	// Additional output options
	Options       map[string]string `protobuf:"bytes,2,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppenderConfig_OutputConfig) Reset() {
	*x = AppenderConfig_OutputConfig{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppenderConfig_OutputConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppenderConfig_OutputConfig) ProtoMessage() {}

func (x *AppenderConfig_OutputConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AppenderConfig_OutputConfig) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *AppenderConfig_OutputConfig) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *AppenderConfig_OutputConfig) SetTarget(v string) {
	x.Target = &v
}

func (x *AppenderConfig_OutputConfig) SetOptions(v map[string]string) {
	x.Options = v
}

func (x *AppenderConfig_OutputConfig) HasTarget() bool {
	if x == nil {
		return false
	}
	return x.Target != nil
}

func (x *AppenderConfig_OutputConfig) ClearTarget() {
	x.Target = nil
}

type AppenderConfig_OutputConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Output target (file path, network address, etc.)
	Target *string
	// Additional output options
	Options map[string]string
}

func (b0 AppenderConfig_OutputConfig_builder) Build() *AppenderConfig_OutputConfig {
	m0 := &AppenderConfig_OutputConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Target = b.Target
	x.Options = b.Options
	return m0
}

// Formatter configuration
type AppenderConfig_FormatterConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Formatter type
	Type          *FormatterType `protobuf:"varint,1,opt,name=type,enum=gcommon.v1.log.FormatterType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppenderConfig_FormatterConfig) Reset() {
	*x = AppenderConfig_FormatterConfig{}
	mi := &file_pkg_log_proto_log_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppenderConfig_FormatterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppenderConfig_FormatterConfig) ProtoMessage() {}

func (x *AppenderConfig_FormatterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_log_proto_log_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AppenderConfig_FormatterConfig) GetType() FormatterType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return FormatterType_FORMATTER_TYPE_UNSPECIFIED
}

func (x *AppenderConfig_FormatterConfig) SetType(v FormatterType) {
	x.Type = &v
}

func (x *AppenderConfig_FormatterConfig) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *AppenderConfig_FormatterConfig) ClearType() {
	x.Type = nil
}

type AppenderConfig_FormatterConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Formatter type
	Type *FormatterType
}

func (b0 AppenderConfig_FormatterConfig_builder) Build() *AppenderConfig_FormatterConfig {
	m0 := &AppenderConfig_FormatterConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Type = b.Type
	return m0
}

var File_pkg_log_proto_log_proto protoreflect.FileDescriptor

const file_pkg_log_proto_log_proto_rawDesc = "" +
	"\n" +
	"\x17pkg/log/proto/log.proto\x12\x0egcommon.v1.log\x1a\x1dpkg/common/proto/common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a!google/protobuf/go_features.proto\x1a&pkg/log/proto/messages/log_entry.proto\x1a,pkg/log/proto/messages/source_location.proto\x1a'pkg/log/proto/messages/error_info.proto\x1a#pkg/log/proto/enums/log_level.proto\x1a(pkg/log/proto/enums/log_sort_field.proto\x1a'pkg/log/proto/enums/appender_type.proto\x1a(pkg/log/proto/enums/formatter_type.proto\x1a%pkg/log/proto/enums/filter_type.proto\x1a'pkg/log/proto/enums/logger_status.proto\x1a*pkg/log/proto/enums/compression_type.proto\"\x94\x01\n" +
	"\n" +
	"LogRequest\x12.\n" +
	"\x05entry\x18\x01 \x01(\v2\x18.gcommon.v1.log.LogEntryR\x05entry\x12\x16\n" +
	"\x06logger\x18\x02 \x01(\tR\x06logger\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"r\n" +
	"\vLogResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x19\n" +
	"\bentry_id\x18\x02 \x01(\tR\aentryId\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xd8\x01\n" +
	"\x0fLogBatchRequest\x122\n" +
	"\aentries\x18\x01 \x03(\v2\x18.gcommon.v1.log.LogEntryR\aentries\x12\x16\n" +
	"\x06logger\x18\x02 \x01(\tR\x06logger\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x129\n" +
	"\aoptions\x18\x04 \x01(\v2\x1f.gcommon.v1.log.BatchLogOptionsR\aoptions\"\x89\x01\n" +
	"\x0fBatchLogOptions\x12\x1b\n" +
	"\tfail_fast\x18\x01 \x01(\bR\bfailFast\x12$\n" +
	"\x0emax_batch_size\x18\x02 \x01(\x05R\fmaxBatchSize\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"\x83\x02\n" +
	"\x10LogBatchResponse\x12#\n" +
	"\rsuccess_count\x18\x01 \x01(\x05R\fsuccessCount\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x12G\n" +
	"\acontext\x18\x05 \x03(\v2-.gcommon.v1.log.LogBatchResponse.ContextEntryR\acontext\x121\n" +
	"\x06causes\x18\x06 \x03(\v2\x19.gcommon.v1.log.ErrorInfoR\x06causes\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"[\n" +
	"\aLogSort\x122\n" +
	"\x05field\x18\x01 \x01(\x0e2\x1c.gcommon.v1.log.LogSortFieldR\x05field\x12\x1c\n" +
	"\tascending\x18\x02 \x01(\bR\tascending\"\xf0\x01\n" +
	"\x0fQueryLogRequest\x121\n" +
	"\x06filter\x18\x01 \x01(\v2\x19.gcommon.v1.log.LogFilterR\x06filter\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12+\n" +
	"\x04sort\x18\x03 \x01(\v2\x17.gcommon.v1.log.LogSortR\x04sort\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xb4\x03\n" +
	"\tLogFilter\x120\n" +
	"\x06levels\x18\x01 \x03(\x0e2\x18.gcommon.v1.log.LogLevelR\x06levels\x12\x18\n" +
	"\aloggers\x18\x02 \x03(\tR\aloggers\x12'\n" +
	"\x0fmessage_pattern\x18\x03 \x01(\tR\x0emessagePattern\x128\n" +
	"\n" +
	"time_range\x18\x04 \x01(\v2\x19.gcommon.v1.log.TimeRangeR\ttimeRange\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12\x19\n" +
	"\btrace_id\x18\x06 \x01(\tR\atraceId\x12\x17\n" +
	"\auser_id\x18\a \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"request_id\x18\b \x01(\tR\trequestId\x12P\n" +
	"\rfield_filters\x18\t \x03(\v2+.gcommon.v1.log.LogFilter.FieldFiltersEntryR\ffieldFilters\x1a?\n" +
	"\x11FieldFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"k\n" +
	"\tTimeRange\x120\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\x12,\n" +
	"\x03end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x03end\"\xd6\x01\n" +
	"\x10QueryLogResponse\x122\n" +
	"\aentries\x18\x01 \x03(\v2\x18.gcommon.v1.log.LogEntryR\aentries\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x03R\n" +
	"totalCount\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xbe\x01\n" +
	"\x10StreamLogRequest\x121\n" +
	"\x06filter\x18\x01 \x01(\v2\x19.gcommon.v1.log.LogFilterR\x06filter\x12\x16\n" +
	"\x06follow\x18\x02 \x01(\bR\x06follow\x12\x1f\n" +
	"\vbuffer_size\x18\x03 \x01(\x05R\n" +
	"bufferSize\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"l\n" +
	"\x12GetLogLevelRequest\x12\x16\n" +
	"\x06logger\x18\x01 \x01(\tR\x06logger\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x8d\x01\n" +
	"\x13GetLogLevelResponse\x12.\n" +
	"\x05level\x18\x01 \x01(\x0e2\x18.gcommon.v1.log.LogLevelR\x05level\x12\x16\n" +
	"\x06logger\x18\x02 \x01(\tR\x06logger\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xb6\x01\n" +
	"\x12SetLogLevelRequest\x12.\n" +
	"\x05level\x18\x01 \x01(\x0e2\x18.gcommon.v1.log.LogLevelR\x05level\x12\x16\n" +
	"\x06logger\x18\x02 \x01(\tR\x06logger\x12\x18\n" +
	"\apersist\x18\x03 \x01(\bR\apersist\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xd5\x01\n" +
	"\x13SetLogLevelResponse\x12?\n" +
	"\x0eprevious_level\x18\x01 \x01(\x0e2\x18.gcommon.v1.log.LogLevelR\rpreviousLevel\x125\n" +
	"\tnew_level\x18\x02 \x01(\x0e2\x18.gcommon.v1.log.LogLevelR\bnewLevel\x12\x16\n" +
	"\x06logger\x18\x03 \x01(\tR\x06logger\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xa8\x01\n" +
	"\x12GetLogStatsRequest\x128\n" +
	"\n" +
	"time_range\x18\x01 \x01(\v2\x19.gcommon.v1.log.TimeRangeR\ttimeRange\x12\x18\n" +
	"\aloggers\x18\x02 \x03(\tR\aloggers\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xcb\x03\n" +
	"\x13GetLogStatsResponse\x123\n" +
	"\x05stats\x18\x01 \x01(\v2\x1d.gcommon.v1.log.LogStatisticsR\x05stats\x12W\n" +
	"\flevel_counts\x18\x02 \x03(\v24.gcommon.v1.log.GetLogStatsResponse.LevelCountsEntryR\vlevelCounts\x12W\n" +
	"\flogger_stats\x18\x03 \x03(\v24.gcommon.v1.log.GetLogStatsResponse.LoggerStatsEntryR\vloggerStats\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\x1a>\n" +
	"\x10LevelCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a]\n" +
	"\x10LoggerStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.gcommon.v1.log.LogStatisticsR\x05value:\x028\x01\"\xea\x01\n" +
	"\rLogStatistics\x12#\n" +
	"\rtotal_entries\x18\x01 \x01(\x03R\ftotalEntries\x12,\n" +
	"\x12entries_per_second\x18\x02 \x01(\x01R\x10entriesPerSecond\x12!\n" +
	"\faverage_size\x18\x03 \x01(\x03R\vaverageSize\x12\x1d\n" +
	"\n" +
	"total_size\x18\x04 \x01(\x03R\ttotalSize\x12\x1f\n" +
	"\verror_count\x18\x05 \x01(\x03R\n" +
	"errorCount\x12#\n" +
	"\rwarning_count\x18\x06 \x01(\x03R\fwarningCount\"\x9f\x01\n" +
	"\x13CreateLoggerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x124\n" +
	"\x06config\x18\x02 \x01(\v2\x1c.gcommon.v1.log.LoggerConfigR\x06config\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xd4\x02\n" +
	"\fLoggerConfig\x12.\n" +
	"\x05level\x18\x01 \x01(\x0e2\x18.gcommon.v1.log.LogLevelR\x05level\x12<\n" +
	"\tappenders\x18\x02 \x03(\v2\x1e.gcommon.v1.log.AppenderConfigR\tappenders\x12+\n" +
	"\x11inherit_appenders\x18\x03 \x01(\bR\x10inheritAppenders\x12\x1c\n" +
	"\tpropagate\x18\x04 \x01(\bR\tpropagate\x12L\n" +
	"\n" +
	"properties\x18\x05 \x03(\v2,.gcommon.v1.log.LoggerConfig.PropertiesEntryR\n" +
	"properties\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd5\x02\n" +
	"\x0eAppenderConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1c.gcommon.v1.log.AppenderTypeR\x04type\x1a\xb6\x01\n" +
	"\fOutputConfig\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12R\n" +
	"\aoptions\x18\x02 \x03(\v28.gcommon.v1.log.AppenderConfig.OutputConfig.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aD\n" +
	"\x0fFormatterConfig\x121\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1d.gcommon.v1.log.FormatterTypeR\x04type\"t\n" +
	"\x14CreateLoggerResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xdc\x01\n" +
	"\x13UpdateLoggerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x124\n" +
	"\x06config\x18\x02 \x01(\v2\x1c.gcommon.v1.log.LoggerConfigR\x06config\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"t\n" +
	"\x14UpdateLoggerResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\x7f\n" +
	"\x13DeleteLoggerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xe8\x01\n" +
	"\x12ListLoggersRequest\x12!\n" +
	"\fname_pattern\x18\x01 \x01(\tR\vnamePattern\x120\n" +
	"\x06levels\x18\x02 \x03(\x0e2\x18.gcommon.v1.log.LogLevelR\x06levels\x12=\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xba\x01\n" +
	"\x13ListLoggersResponse\x124\n" +
	"\aloggers\x18\x01 \x03(\v2\x1a.gcommon.v1.log.LoggerInfoR\aloggers\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.gcommon.v1.common.PaginationR\n" +
	"pagination\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xf5\x01\n" +
	"\n" +
	"LoggerInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x124\n" +
	"\x06config\x18\x02 \x01(\v2\x1c.gcommon.v1.log.LoggerConfigR\x06config\x12\x16\n" +
	"\x06parent\x18\x03 \x01(\tR\x06parent\x12\x1a\n" +
	"\bchildren\x18\x04 \x03(\tR\bchildren\x123\n" +
	"\x05stats\x18\x05 \x01(\v2\x1d.gcommon.v1.log.LogStatisticsR\x05stats\x124\n" +
	"\x06status\x18\b \x01(\x0e2\x1c.gcommon.v1.log.LoggerStatusR\x06status\"\x92\x01\n" +
	"\x18ConfigureAppenderRequest\x126\n" +
	"\x06config\x18\x01 \x01(\v2\x1e.gcommon.v1.log.AppenderConfigR\x06config\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"y\n" +
	"\x19ConfigureAppenderResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\x90\x01\n" +
	"\x11RotateLogsRequest\x12%\n" +
	"\x0elogger_pattern\x18\x01 \x01(\tR\rloggerPattern\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12>\n" +
	"\bmetadata\x18\x03 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\x8e\x01\n" +
	"\x12RotateLogsResponse\x12#\n" +
	"\rrotated_count\x18\x01 \x01(\x05R\frotatedCount\x12#\n" +
	"\rrotated_files\x18\x02 \x03(\tR\frotatedFiles\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\"\xf6\x01\n" +
	"\x12ArchiveLogsRequest\x12;\n" +
	"\bcriteria\x18\x01 \x01(\v2\x1f.gcommon.v1.log.ArchiveCriteriaR\bcriteria\x12 \n" +
	"\vdestination\x18\x02 \x01(\tR\vdestination\x12A\n" +
	"\vcompression\x18\x03 \x01(\x0e2\x1f.gcommon.v1.log.CompressionTypeR\vcompression\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"}\n" +
	"\x0fArchiveCriteria\x128\n" +
	"\n" +
	"older_than\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\tolderThan\x120\n" +
	"\x14size_threshold_bytes\x18\x02 \x01(\x03R\x12sizeThresholdBytes\"\xb2\x01\n" +
	"\x13ArchiveLogsResponse\x12%\n" +
	"\x0earchived_count\x18\x01 \x01(\x05R\rarchivedCount\x12!\n" +
	"\farchive_path\x18\x02 \x01(\tR\varchivePath\x12!\n" +
	"\farchive_size\x18\x03 \x01(\x03R\varchiveSize\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error2\xb7\x04\n" +
	"\n" +
	"LogService\x12>\n" +
	"\x03Log\x12\x1a.gcommon.v1.log.LogRequest\x1a\x1b.gcommon.v1.log.LogResponse\x12M\n" +
	"\bLogBatch\x12\x1f.gcommon.v1.log.LogBatchRequest\x1a .gcommon.v1.log.LogBatchResponse\x12J\n" +
	"\x05Query\x12\x1f.gcommon.v1.log.QueryLogRequest\x1a .gcommon.v1.log.QueryLogResponse\x12F\n" +
	"\x06Stream\x12 .gcommon.v1.log.StreamLogRequest\x1a\x18.gcommon.v1.log.LogEntry0\x01\x12V\n" +
	"\vGetLogLevel\x12\".gcommon.v1.log.GetLogLevelRequest\x1a#.gcommon.v1.log.GetLogLevelResponse\x12V\n" +
	"\vSetLogLevel\x12\".gcommon.v1.log.SetLogLevelRequest\x1a#.gcommon.v1.log.SetLogLevelResponse\x12V\n" +
	"\vGetLogStats\x12\".gcommon.v1.log.GetLogStatsRequest\x1a#.gcommon.v1.log.GetLogStatsResponse2\xd6\x03\n" +
	"\x0fLogAdminService\x12Y\n" +
	"\fCreateLogger\x12#.gcommon.v1.log.CreateLoggerRequest\x1a$.gcommon.v1.log.CreateLoggerResponse\x12Y\n" +
	"\fUpdateLogger\x12#.gcommon.v1.log.UpdateLoggerRequest\x1a$.gcommon.v1.log.UpdateLoggerResponse\x12K\n" +
	"\fDeleteLogger\x12#.gcommon.v1.log.DeleteLoggerRequest\x1a\x16.google.protobuf.Empty\x12V\n" +
	"\vListLoggers\x12\".gcommon.v1.log.ListLoggersRequest\x1a#.gcommon.v1.log.ListLoggersResponse\x12h\n" +
	"\x11ConfigureAppender\x12(.gcommon.v1.log.ConfigureAppenderRequest\x1a).gcommon.v1.log.ConfigureAppenderResponseB\xaf\x01\n" +
	"\x12com.gcommon.v1.logB\bLogProtoP\x01Z-github.com/jdfalk/gcommon/pkg/log/proto;logpb\xa2\x02\x03GVL\xaa\x02\x0eGcommon.V1.Log\xca\x02\x0eGcommon\\V1\\Log\xe2\x02\x1aGcommon\\V1\\Log\\GPBMetadata\xea\x02\x10Gcommon::V1::Log\x92\x03\x05\xd2>\x02\x10\x02P\x06P\aP\bP\tP\n" +
	"P\vP\fP\rP\x0eP\x0fb\beditionsp\xe8\a"

var file_pkg_log_proto_log_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_pkg_log_proto_log_proto_goTypes = []any{
	(*LogRequest)(nil),                     // 0: gcommon.v1.log.LogRequest
	(*LogResponse)(nil),                    // 1: gcommon.v1.log.LogResponse
	(*LogBatchRequest)(nil),                // 2: gcommon.v1.log.LogBatchRequest
	(*BatchLogOptions)(nil),                // 3: gcommon.v1.log.BatchLogOptions
	(*LogBatchResponse)(nil),               // 4: gcommon.v1.log.LogBatchResponse
	(*LogSort)(nil),                        // 5: gcommon.v1.log.LogSort
	(*QueryLogRequest)(nil),                // 6: gcommon.v1.log.QueryLogRequest
	(*LogFilter)(nil),                      // 7: gcommon.v1.log.LogFilter
	(*TimeRange)(nil),                      // 8: gcommon.v1.log.TimeRange
	(*QueryLogResponse)(nil),               // 9: gcommon.v1.log.QueryLogResponse
	(*StreamLogRequest)(nil),               // 10: gcommon.v1.log.StreamLogRequest
	(*GetLogLevelRequest)(nil),             // 11: gcommon.v1.log.GetLogLevelRequest
	(*GetLogLevelResponse)(nil),            // 12: gcommon.v1.log.GetLogLevelResponse
	(*SetLogLevelRequest)(nil),             // 13: gcommon.v1.log.SetLogLevelRequest
	(*SetLogLevelResponse)(nil),            // 14: gcommon.v1.log.SetLogLevelResponse
	(*GetLogStatsRequest)(nil),             // 15: gcommon.v1.log.GetLogStatsRequest
	(*GetLogStatsResponse)(nil),            // 16: gcommon.v1.log.GetLogStatsResponse
	(*LogStatistics)(nil),                  // 17: gcommon.v1.log.LogStatistics
	(*CreateLoggerRequest)(nil),            // 18: gcommon.v1.log.CreateLoggerRequest
	(*LoggerConfig)(nil),                   // 19: gcommon.v1.log.LoggerConfig
	(*AppenderConfig)(nil),                 // 20: gcommon.v1.log.AppenderConfig
	(*CreateLoggerResponse)(nil),           // 21: gcommon.v1.log.CreateLoggerResponse
	(*UpdateLoggerRequest)(nil),            // 22: gcommon.v1.log.UpdateLoggerRequest
	(*UpdateLoggerResponse)(nil),           // 23: gcommon.v1.log.UpdateLoggerResponse
	(*DeleteLoggerRequest)(nil),            // 24: gcommon.v1.log.DeleteLoggerRequest
	(*ListLoggersRequest)(nil),             // 25: gcommon.v1.log.ListLoggersRequest
	(*ListLoggersResponse)(nil),            // 26: gcommon.v1.log.ListLoggersResponse
	(*LoggerInfo)(nil),                     // 27: gcommon.v1.log.LoggerInfo
	(*ConfigureAppenderRequest)(nil),       // 28: gcommon.v1.log.ConfigureAppenderRequest
	(*ConfigureAppenderResponse)(nil),      // 29: gcommon.v1.log.ConfigureAppenderResponse
	(*RotateLogsRequest)(nil),              // 30: gcommon.v1.log.RotateLogsRequest
	(*RotateLogsResponse)(nil),             // 31: gcommon.v1.log.RotateLogsResponse
	(*ArchiveLogsRequest)(nil),             // 32: gcommon.v1.log.ArchiveLogsRequest
	(*ArchiveCriteria)(nil),                // 33: gcommon.v1.log.ArchiveCriteria
	(*ArchiveLogsResponse)(nil),            // 34: gcommon.v1.log.ArchiveLogsResponse
	nil,                                    // 35: gcommon.v1.log.LogBatchResponse.ContextEntry
	nil,                                    // 36: gcommon.v1.log.LogFilter.FieldFiltersEntry
	nil,                                    // 37: gcommon.v1.log.GetLogStatsResponse.LevelCountsEntry
	nil,                                    // 38: gcommon.v1.log.GetLogStatsResponse.LoggerStatsEntry
	nil,                                    // 39: gcommon.v1.log.LoggerConfig.PropertiesEntry
	(*AppenderConfig_OutputConfig)(nil),    // 40: gcommon.v1.log.AppenderConfig.OutputConfig
	(*AppenderConfig_FormatterConfig)(nil), // 41: gcommon.v1.log.AppenderConfig.FormatterConfig
	nil,                                    // 42: gcommon.v1.log.AppenderConfig.OutputConfig.OptionsEntry
	(*LogEntry)(nil),                       // 43: gcommon.v1.log.LogEntry
	(*proto.RequestMetadata)(nil),          // 44: gcommon.v1.common.RequestMetadata
	(*proto.Error)(nil),                    // 45: gcommon.v1.common.Error
	(*durationpb.Duration)(nil),            // 46: google.protobuf.Duration
	(*ErrorInfo)(nil),                      // 47: gcommon.v1.log.ErrorInfo
	(LogSortField)(0),                      // 48: gcommon.v1.log.LogSortField
	(*proto.Pagination)(nil),               // 49: gcommon.v1.common.Pagination
	(LogLevel)(0),                          // 50: gcommon.v1.log.LogLevel
	(*timestamppb.Timestamp)(nil),          // 51: google.protobuf.Timestamp
	(AppenderType)(0),                      // 52: gcommon.v1.log.AppenderType
	(*fieldmaskpb.FieldMask)(nil),          // 53: google.protobuf.FieldMask
	(LoggerStatus)(0),                      // 54: gcommon.v1.log.LoggerStatus
	(CompressionType)(0),                   // 55: gcommon.v1.log.CompressionType
	(FormatterType)(0),                     // 56: gcommon.v1.log.FormatterType
	(*emptypb.Empty)(nil),                  // 57: google.protobuf.Empty
}
var file_pkg_log_proto_log_proto_depIdxs = []int32{
	43, // 0: gcommon.v1.log.LogRequest.entry:type_name -> gcommon.v1.log.LogEntry
	44, // 1: gcommon.v1.log.LogRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	45, // 2: gcommon.v1.log.LogResponse.error:type_name -> gcommon.v1.common.Error
	43, // 3: gcommon.v1.log.LogBatchRequest.entries:type_name -> gcommon.v1.log.LogEntry
	44, // 4: gcommon.v1.log.LogBatchRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	3,  // 5: gcommon.v1.log.LogBatchRequest.options:type_name -> gcommon.v1.log.BatchLogOptions
	46, // 6: gcommon.v1.log.BatchLogOptions.timeout:type_name -> google.protobuf.Duration
	35, // 7: gcommon.v1.log.LogBatchResponse.context:type_name -> gcommon.v1.log.LogBatchResponse.ContextEntry
	47, // 8: gcommon.v1.log.LogBatchResponse.causes:type_name -> gcommon.v1.log.ErrorInfo
	48, // 9: gcommon.v1.log.LogSort.field:type_name -> gcommon.v1.log.LogSortField
	7,  // 10: gcommon.v1.log.QueryLogRequest.filter:type_name -> gcommon.v1.log.LogFilter
	49, // 11: gcommon.v1.log.QueryLogRequest.pagination:type_name -> gcommon.v1.common.Pagination
	5,  // 12: gcommon.v1.log.QueryLogRequest.sort:type_name -> gcommon.v1.log.LogSort
	44, // 13: gcommon.v1.log.QueryLogRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	50, // 14: gcommon.v1.log.LogFilter.levels:type_name -> gcommon.v1.log.LogLevel
	8,  // 15: gcommon.v1.log.LogFilter.time_range:type_name -> gcommon.v1.log.TimeRange
	36, // 16: gcommon.v1.log.LogFilter.field_filters:type_name -> gcommon.v1.log.LogFilter.FieldFiltersEntry
	51, // 17: gcommon.v1.log.TimeRange.start:type_name -> google.protobuf.Timestamp
	51, // 18: gcommon.v1.log.TimeRange.end:type_name -> google.protobuf.Timestamp
	43, // 19: gcommon.v1.log.QueryLogResponse.entries:type_name -> gcommon.v1.log.LogEntry
	49, // 20: gcommon.v1.log.QueryLogResponse.pagination:type_name -> gcommon.v1.common.Pagination
	45, // 21: gcommon.v1.log.QueryLogResponse.error:type_name -> gcommon.v1.common.Error
	7,  // 22: gcommon.v1.log.StreamLogRequest.filter:type_name -> gcommon.v1.log.LogFilter
	44, // 23: gcommon.v1.log.StreamLogRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	44, // 24: gcommon.v1.log.GetLogLevelRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	50, // 25: gcommon.v1.log.GetLogLevelResponse.level:type_name -> gcommon.v1.log.LogLevel
	45, // 26: gcommon.v1.log.GetLogLevelResponse.error:type_name -> gcommon.v1.common.Error
	50, // 27: gcommon.v1.log.SetLogLevelRequest.level:type_name -> gcommon.v1.log.LogLevel
	44, // 28: gcommon.v1.log.SetLogLevelRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	50, // 29: gcommon.v1.log.SetLogLevelResponse.previous_level:type_name -> gcommon.v1.log.LogLevel
	50, // 30: gcommon.v1.log.SetLogLevelResponse.new_level:type_name -> gcommon.v1.log.LogLevel
	45, // 31: gcommon.v1.log.SetLogLevelResponse.error:type_name -> gcommon.v1.common.Error
	8,  // 32: gcommon.v1.log.GetLogStatsRequest.time_range:type_name -> gcommon.v1.log.TimeRange
	44, // 33: gcommon.v1.log.GetLogStatsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	17, // 34: gcommon.v1.log.GetLogStatsResponse.stats:type_name -> gcommon.v1.log.LogStatistics
	37, // 35: gcommon.v1.log.GetLogStatsResponse.level_counts:type_name -> gcommon.v1.log.GetLogStatsResponse.LevelCountsEntry
	38, // 36: gcommon.v1.log.GetLogStatsResponse.logger_stats:type_name -> gcommon.v1.log.GetLogStatsResponse.LoggerStatsEntry
	45, // 37: gcommon.v1.log.GetLogStatsResponse.error:type_name -> gcommon.v1.common.Error
	19, // 38: gcommon.v1.log.CreateLoggerRequest.config:type_name -> gcommon.v1.log.LoggerConfig
	44, // 39: gcommon.v1.log.CreateLoggerRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	50, // 40: gcommon.v1.log.LoggerConfig.level:type_name -> gcommon.v1.log.LogLevel
	20, // 41: gcommon.v1.log.LoggerConfig.appenders:type_name -> gcommon.v1.log.AppenderConfig
	39, // 42: gcommon.v1.log.LoggerConfig.properties:type_name -> gcommon.v1.log.LoggerConfig.PropertiesEntry
	52, // 43: gcommon.v1.log.AppenderConfig.type:type_name -> gcommon.v1.log.AppenderType
	45, // 44: gcommon.v1.log.CreateLoggerResponse.error:type_name -> gcommon.v1.common.Error
	19, // 45: gcommon.v1.log.UpdateLoggerRequest.config:type_name -> gcommon.v1.log.LoggerConfig
	53, // 46: gcommon.v1.log.UpdateLoggerRequest.update_mask:type_name -> google.protobuf.FieldMask
	44, // 47: gcommon.v1.log.UpdateLoggerRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	45, // 48: gcommon.v1.log.UpdateLoggerResponse.error:type_name -> gcommon.v1.common.Error
	44, // 49: gcommon.v1.log.DeleteLoggerRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	50, // 50: gcommon.v1.log.ListLoggersRequest.levels:type_name -> gcommon.v1.log.LogLevel
	49, // 51: gcommon.v1.log.ListLoggersRequest.pagination:type_name -> gcommon.v1.common.Pagination
	44, // 52: gcommon.v1.log.ListLoggersRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	27, // 53: gcommon.v1.log.ListLoggersResponse.loggers:type_name -> gcommon.v1.log.LoggerInfo
	49, // 54: gcommon.v1.log.ListLoggersResponse.pagination:type_name -> gcommon.v1.common.Pagination
	45, // 55: gcommon.v1.log.ListLoggersResponse.error:type_name -> gcommon.v1.common.Error
	19, // 56: gcommon.v1.log.LoggerInfo.config:type_name -> gcommon.v1.log.LoggerConfig
	17, // 57: gcommon.v1.log.LoggerInfo.stats:type_name -> gcommon.v1.log.LogStatistics
	54, // 58: gcommon.v1.log.LoggerInfo.status:type_name -> gcommon.v1.log.LoggerStatus
	20, // 59: gcommon.v1.log.ConfigureAppenderRequest.config:type_name -> gcommon.v1.log.AppenderConfig
	44, // 60: gcommon.v1.log.ConfigureAppenderRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	45, // 61: gcommon.v1.log.ConfigureAppenderResponse.error:type_name -> gcommon.v1.common.Error
	44, // 62: gcommon.v1.log.RotateLogsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	45, // 63: gcommon.v1.log.RotateLogsResponse.error:type_name -> gcommon.v1.common.Error
	33, // 64: gcommon.v1.log.ArchiveLogsRequest.criteria:type_name -> gcommon.v1.log.ArchiveCriteria
	55, // 65: gcommon.v1.log.ArchiveLogsRequest.compression:type_name -> gcommon.v1.log.CompressionType
	44, // 66: gcommon.v1.log.ArchiveLogsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	46, // 67: gcommon.v1.log.ArchiveCriteria.older_than:type_name -> google.protobuf.Duration
	45, // 68: gcommon.v1.log.ArchiveLogsResponse.error:type_name -> gcommon.v1.common.Error
	17, // 69: gcommon.v1.log.GetLogStatsResponse.LoggerStatsEntry.value:type_name -> gcommon.v1.log.LogStatistics
	42, // 70: gcommon.v1.log.AppenderConfig.OutputConfig.options:type_name -> gcommon.v1.log.AppenderConfig.OutputConfig.OptionsEntry
	56, // 71: gcommon.v1.log.AppenderConfig.FormatterConfig.type:type_name -> gcommon.v1.log.FormatterType
	0,  // 72: gcommon.v1.log.LogService.Log:input_type -> gcommon.v1.log.LogRequest
	2,  // 73: gcommon.v1.log.LogService.LogBatch:input_type -> gcommon.v1.log.LogBatchRequest
	6,  // 74: gcommon.v1.log.LogService.Query:input_type -> gcommon.v1.log.QueryLogRequest
	10, // 75: gcommon.v1.log.LogService.Stream:input_type -> gcommon.v1.log.StreamLogRequest
	11, // 76: gcommon.v1.log.LogService.GetLogLevel:input_type -> gcommon.v1.log.GetLogLevelRequest
	13, // 77: gcommon.v1.log.LogService.SetLogLevel:input_type -> gcommon.v1.log.SetLogLevelRequest
	15, // 78: gcommon.v1.log.LogService.GetLogStats:input_type -> gcommon.v1.log.GetLogStatsRequest
	18, // 79: gcommon.v1.log.LogAdminService.CreateLogger:input_type -> gcommon.v1.log.CreateLoggerRequest
	22, // 80: gcommon.v1.log.LogAdminService.UpdateLogger:input_type -> gcommon.v1.log.UpdateLoggerRequest
	24, // 81: gcommon.v1.log.LogAdminService.DeleteLogger:input_type -> gcommon.v1.log.DeleteLoggerRequest
	25, // 82: gcommon.v1.log.LogAdminService.ListLoggers:input_type -> gcommon.v1.log.ListLoggersRequest
	28, // 83: gcommon.v1.log.LogAdminService.ConfigureAppender:input_type -> gcommon.v1.log.ConfigureAppenderRequest
	1,  // 84: gcommon.v1.log.LogService.Log:output_type -> gcommon.v1.log.LogResponse
	4,  // 85: gcommon.v1.log.LogService.LogBatch:output_type -> gcommon.v1.log.LogBatchResponse
	9,  // 86: gcommon.v1.log.LogService.Query:output_type -> gcommon.v1.log.QueryLogResponse
	43, // 87: gcommon.v1.log.LogService.Stream:output_type -> gcommon.v1.log.LogEntry
	12, // 88: gcommon.v1.log.LogService.GetLogLevel:output_type -> gcommon.v1.log.GetLogLevelResponse
	14, // 89: gcommon.v1.log.LogService.SetLogLevel:output_type -> gcommon.v1.log.SetLogLevelResponse
	16, // 90: gcommon.v1.log.LogService.GetLogStats:output_type -> gcommon.v1.log.GetLogStatsResponse
	21, // 91: gcommon.v1.log.LogAdminService.CreateLogger:output_type -> gcommon.v1.log.CreateLoggerResponse
	23, // 92: gcommon.v1.log.LogAdminService.UpdateLogger:output_type -> gcommon.v1.log.UpdateLoggerResponse
	57, // 93: gcommon.v1.log.LogAdminService.DeleteLogger:output_type -> google.protobuf.Empty
	26, // 94: gcommon.v1.log.LogAdminService.ListLoggers:output_type -> gcommon.v1.log.ListLoggersResponse
	29, // 95: gcommon.v1.log.LogAdminService.ConfigureAppender:output_type -> gcommon.v1.log.ConfigureAppenderResponse
	84, // [84:96] is the sub-list for method output_type
	72, // [72:84] is the sub-list for method input_type
	72, // [72:72] is the sub-list for extension type_name
	72, // [72:72] is the sub-list for extension extendee
	0,  // [0:72] is the sub-list for field type_name
}

func init() { file_pkg_log_proto_log_proto_init() }
func file_pkg_log_proto_log_proto_init() {
	if File_pkg_log_proto_log_proto != nil {
		return
	}
	file_pkg_log_proto_messages_log_entry_proto_init()
	file_pkg_log_proto_messages_source_location_proto_init()
	file_pkg_log_proto_messages_error_info_proto_init()
	file_pkg_log_proto_enums_log_level_proto_init()
	file_pkg_log_proto_enums_log_sort_field_proto_init()
	file_pkg_log_proto_enums_appender_type_proto_init()
	file_pkg_log_proto_enums_formatter_type_proto_init()
	file_pkg_log_proto_enums_filter_type_proto_init()
	file_pkg_log_proto_enums_logger_status_proto_init()
	file_pkg_log_proto_enums_compression_type_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_log_proto_log_proto_rawDesc), len(file_pkg_log_proto_log_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pkg_log_proto_log_proto_goTypes,
		DependencyIndexes: file_pkg_log_proto_log_proto_depIdxs,
		MessageInfos:      file_pkg_log_proto_log_proto_msgTypes,
	}.Build()
	File_pkg_log_proto_log_proto = out.File
	file_pkg_log_proto_log_proto_goTypes = nil
	file_pkg_log_proto_log_proto_depIdxs = nil
}
