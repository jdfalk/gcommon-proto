// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: log.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LogLevel represents a log level
type LogLevel int32

const (
	LogLevel_LOG_LEVEL_UNSPECIFIED LogLevel = 0
	LogLevel_LOG_LEVEL_TRACE       LogLevel = 1
	LogLevel_LOG_LEVEL_DEBUG       LogLevel = 2
	LogLevel_LOG_LEVEL_INFO        LogLevel = 3
	LogLevel_LOG_LEVEL_WARN        LogLevel = 4
	LogLevel_LOG_LEVEL_ERROR       LogLevel = 5
	LogLevel_LOG_LEVEL_FATAL       LogLevel = 6
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "LOG_LEVEL_UNSPECIFIED",
		1: "LOG_LEVEL_TRACE",
		2: "LOG_LEVEL_DEBUG",
		3: "LOG_LEVEL_INFO",
		4: "LOG_LEVEL_WARN",
		5: "LOG_LEVEL_ERROR",
		6: "LOG_LEVEL_FATAL",
	}
	LogLevel_value = map[string]int32{
		"LOG_LEVEL_UNSPECIFIED": 0,
		"LOG_LEVEL_TRACE":       1,
		"LOG_LEVEL_DEBUG":       2,
		"LOG_LEVEL_INFO":        3,
		"LOG_LEVEL_WARN":        4,
		"LOG_LEVEL_ERROR":       5,
		"LOG_LEVEL_FATAL":       6,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_log_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_log_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{0}
}

// LogEntry represents a log entry
type LogEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Level is the log level
	Level LogLevel `protobuf:"varint,1,opt,name=level,proto3,enum=log.LogLevel" json:"level,omitempty"`
	// Message is the log message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Timestamp is the log timestamp
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Fields are the structured log fields
	Fields map[string]*Field `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// LoggerName is the name of the logger
	LoggerName string `protobuf:"bytes,5,opt,name=logger_name,json=loggerName,proto3" json:"logger_name,omitempty"`
	// Source is the source of the log
	Source *Source `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	// TraceID is the trace ID
	TraceId string `protobuf:"bytes,7,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	// SpanID is the span ID
	SpanId        string `protobuf:"bytes,8,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_log_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{0}
}

func (x *LogEntry) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LogEntry) GetFields() map[string]*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *LogEntry) GetLoggerName() string {
	if x != nil {
		return x.LoggerName
	}
	return ""
}

func (x *LogEntry) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *LogEntry) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *LogEntry) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

// Field represents a log field
type Field struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// One of the possible field types
	//
	// Types that are valid to be assigned to Value:
	//
	//	*Field_BoolValue
	//	*Field_IntValue
	//	*Field_FloatValue
	//	*Field_StringValue
	//	*Field_BytesValue
	//	*Field_TimeValue
	//	*Field_DurationValue
	//	*Field_ErrorValue
	Value         isField_Value `protobuf_oneof:"value"`
	StringArray   []string      `protobuf:"bytes,9,rep,name=string_array,json=stringArray,proto3" json:"string_array,omitempty"`
	IntArray      []int64       `protobuf:"varint,10,rep,packed,name=int_array,json=intArray,proto3" json:"int_array,omitempty"`
	FloatArray    []float64     `protobuf:"fixed64,11,rep,packed,name=float_array,json=floatArray,proto3" json:"float_array,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Field) Reset() {
	*x = Field{}
	mi := &file_log_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{1}
}

func (x *Field) GetValue() isField_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Field) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*Field_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *Field) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*Field_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *Field) GetFloatValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*Field_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *Field) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*Field_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *Field) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*Field_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

func (x *Field) GetTimeValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*Field_TimeValue); ok {
			return x.TimeValue
		}
	}
	return 0
}

func (x *Field) GetDurationValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*Field_DurationValue); ok {
			return x.DurationValue
		}
	}
	return 0
}

func (x *Field) GetErrorValue() *Error {
	if x != nil {
		if x, ok := x.Value.(*Field_ErrorValue); ok {
			return x.ErrorValue
		}
	}
	return nil
}

func (x *Field) GetStringArray() []string {
	if x != nil {
		return x.StringArray
	}
	return nil
}

func (x *Field) GetIntArray() []int64 {
	if x != nil {
		return x.IntArray
	}
	return nil
}

func (x *Field) GetFloatArray() []float64 {
	if x != nil {
		return x.FloatArray
	}
	return nil
}

type isField_Value interface {
	isField_Value()
}

type Field_BoolValue struct {
	BoolValue bool `protobuf:"varint,1,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Field_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type Field_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,3,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Field_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Field_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,5,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type Field_TimeValue struct {
	TimeValue int64 `protobuf:"varint,6,opt,name=time_value,json=timeValue,proto3,oneof"` // Unix timestamp in nanoseconds
}

type Field_DurationValue struct {
	DurationValue int64 `protobuf:"varint,7,opt,name=duration_value,json=durationValue,proto3,oneof"` // Duration in nanoseconds
}

type Field_ErrorValue struct {
	ErrorValue *Error `protobuf:"bytes,8,opt,name=error_value,json=errorValue,proto3,oneof"`
}

func (*Field_BoolValue) isField_Value() {}

func (*Field_IntValue) isField_Value() {}

func (*Field_FloatValue) isField_Value() {}

func (*Field_StringValue) isField_Value() {}

func (*Field_BytesValue) isField_Value() {}

func (*Field_TimeValue) isField_Value() {}

func (*Field_DurationValue) isField_Value() {}

func (*Field_ErrorValue) isField_Value() {}

// Source represents a log source
type Source struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Function is the source function
	Function string `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`
	// File is the source file
	File string `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	// Line is the source line
	Line          int32 `protobuf:"varint,3,opt,name=line,proto3" json:"line,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Source) Reset() {
	*x = Source{}
	mi := &file_log_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{2}
}

func (x *Source) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *Source) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Source) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

// Error represents an error
type Error struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Message is the error message
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Stack is the error stack trace
	Stack string `protobuf:"bytes,2,opt,name=stack,proto3" json:"stack,omitempty"`
	// Type is the error type
	Type          string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_log_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{3}
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetStack() string {
	if x != nil {
		return x.Stack
	}
	return ""
}

func (x *Error) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// LogRequest contains log request data
type LogRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entry is the log entry
	Entry         *LogEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	mi := &file_log_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{4}
}

func (x *LogRequest) GetEntry() *LogEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// LogResponse contains log response data
type LogResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates if the operation succeeded
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	mi := &file_log_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{5}
}

func (x *LogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// LogBatchRequest contains log batch request data
type LogBatchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entries are the log entries
	Entries       []*LogEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogBatchRequest) Reset() {
	*x = LogBatchRequest{}
	mi := &file_log_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBatchRequest) ProtoMessage() {}

func (x *LogBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogBatchRequest.ProtoReflect.Descriptor instead.
func (*LogBatchRequest) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{6}
}

func (x *LogBatchRequest) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// LogBatchResponse contains log batch response data
type LogBatchResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates if the operation succeeded
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// FailedEntries are the indices of entries that failed
	FailedEntries []int32 `protobuf:"varint,2,rep,packed,name=failed_entries,json=failedEntries,proto3" json:"failed_entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogBatchResponse) Reset() {
	*x = LogBatchResponse{}
	mi := &file_log_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBatchResponse) ProtoMessage() {}

func (x *LogBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogBatchResponse.ProtoReflect.Descriptor instead.
func (*LogBatchResponse) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{7}
}

func (x *LogBatchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LogBatchResponse) GetFailedEntries() []int32 {
	if x != nil {
		return x.FailedEntries
	}
	return nil
}

// GetLogsRequest contains get logs request data
type GetLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filter is the log filter
	Filter *LogFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Limit is the maximum number of logs to retrieve
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Follow indicates whether to follow logs
	Follow        bool `protobuf:"varint,3,opt,name=follow,proto3" json:"follow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogsRequest) Reset() {
	*x = GetLogsRequest{}
	mi := &file_log_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsRequest) ProtoMessage() {}

func (x *GetLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsRequest.ProtoReflect.Descriptor instead.
func (*GetLogsRequest) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{8}
}

func (x *GetLogsRequest) GetFilter() *LogFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetLogsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

// LogFilter represents a log filter
type LogFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Level is the minimum log level
	Level LogLevel `protobuf:"varint,1,opt,name=level,proto3,enum=log.LogLevel" json:"level,omitempty"`
	// StartTime is the start time
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// EndTime is the end time
	EndTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// LoggerNames are the logger names to include
	LoggerNames []string `protobuf:"bytes,4,rep,name=logger_names,json=loggerNames,proto3" json:"logger_names,omitempty"`
	// MessagePattern is a regex pattern to match messages
	MessagePattern string `protobuf:"bytes,5,opt,name=message_pattern,json=messagePattern,proto3" json:"message_pattern,omitempty"`
	// FieldFilters are field-specific filters
	FieldFilters map[string]string `protobuf:"bytes,6,rep,name=field_filters,json=fieldFilters,proto3" json:"field_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// TraceID is the trace ID to filter by
	TraceId       string `protobuf:"bytes,7,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogFilter) Reset() {
	*x = LogFilter{}
	mi := &file_log_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFilter) ProtoMessage() {}

func (x *LogFilter) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogFilter.ProtoReflect.Descriptor instead.
func (*LogFilter) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{9}
}

func (x *LogFilter) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *LogFilter) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *LogFilter) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *LogFilter) GetLoggerNames() []string {
	if x != nil {
		return x.LoggerNames
	}
	return nil
}

func (x *LogFilter) GetMessagePattern() string {
	if x != nil {
		return x.MessagePattern
	}
	return ""
}

func (x *LogFilter) GetFieldFilters() map[string]string {
	if x != nil {
		return x.FieldFilters
	}
	return nil
}

func (x *LogFilter) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

// GetLevelRequest contains get level request data
type GetLevelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// LoggerName is the name of the logger
	LoggerName    string `protobuf:"bytes,1,opt,name=logger_name,json=loggerName,proto3" json:"logger_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLevelRequest) Reset() {
	*x = GetLevelRequest{}
	mi := &file_log_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLevelRequest) ProtoMessage() {}

func (x *GetLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLevelRequest.ProtoReflect.Descriptor instead.
func (*GetLevelRequest) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{10}
}

func (x *GetLevelRequest) GetLoggerName() string {
	if x != nil {
		return x.LoggerName
	}
	return ""
}

// GetLevelResponse contains get level response data
type GetLevelResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Level is the current log level
	Level         LogLevel `protobuf:"varint,1,opt,name=level,proto3,enum=log.LogLevel" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLevelResponse) Reset() {
	*x = GetLevelResponse{}
	mi := &file_log_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLevelResponse) ProtoMessage() {}

func (x *GetLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLevelResponse.ProtoReflect.Descriptor instead.
func (*GetLevelResponse) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{11}
}

func (x *GetLevelResponse) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

// SetLevelRequest contains set level request data
type SetLevelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// LoggerName is the name of the logger
	LoggerName string `protobuf:"bytes,1,opt,name=logger_name,json=loggerName,proto3" json:"logger_name,omitempty"`
	// Level is the log level to set
	Level         LogLevel `protobuf:"varint,2,opt,name=level,proto3,enum=log.LogLevel" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLevelRequest) Reset() {
	*x = SetLevelRequest{}
	mi := &file_log_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLevelRequest) ProtoMessage() {}

func (x *SetLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLevelRequest.ProtoReflect.Descriptor instead.
func (*SetLevelRequest) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{12}
}

func (x *SetLevelRequest) GetLoggerName() string {
	if x != nil {
		return x.LoggerName
	}
	return ""
}

func (x *SetLevelRequest) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

// SetLevelResponse contains set level response data
type SetLevelResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates if the operation succeeded
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// PreviousLevel is the previous log level
	PreviousLevel LogLevel `protobuf:"varint,2,opt,name=previous_level,json=previousLevel,proto3,enum=log.LogLevel" json:"previous_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLevelResponse) Reset() {
	*x = SetLevelResponse{}
	mi := &file_log_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLevelResponse) ProtoMessage() {}

func (x *SetLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLevelResponse.ProtoReflect.Descriptor instead.
func (*SetLevelResponse) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{13}
}

func (x *SetLevelResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetLevelResponse) GetPreviousLevel() LogLevel {
	if x != nil {
		return x.PreviousLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

var File_log_proto protoreflect.FileDescriptor

const file_log_proto_rawDesc = "" +
	"\n" +
	"\tlog.proto\x12\x03log\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf7\x02\n" +
	"\bLogEntry\x12#\n" +
	"\x05level\x18\x01 \x01(\x0e2\r.log.LogLevelR\x05level\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x121\n" +
	"\x06fields\x18\x04 \x03(\v2\x19.log.LogEntry.FieldsEntryR\x06fields\x12\x1f\n" +
	"\vlogger_name\x18\x05 \x01(\tR\n" +
	"loggerName\x12#\n" +
	"\x06source\x18\x06 \x01(\v2\v.log.SourceR\x06source\x12\x19\n" +
	"\btrace_id\x18\a \x01(\tR\atraceId\x12\x17\n" +
	"\aspan_id\x18\b \x01(\tR\x06spanId\x1aE\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12 \n" +
	"\x05value\x18\x02 \x01(\v2\n" +
	".log.FieldR\x05value:\x028\x01\"\x95\x03\n" +
	"\x05Field\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x01 \x01(\bH\x00R\tboolValue\x12\x1d\n" +
	"\tint_value\x18\x02 \x01(\x03H\x00R\bintValue\x12!\n" +
	"\vfloat_value\x18\x03 \x01(\x01H\x00R\n" +
	"floatValue\x12#\n" +
	"\fstring_value\x18\x04 \x01(\tH\x00R\vstringValue\x12!\n" +
	"\vbytes_value\x18\x05 \x01(\fH\x00R\n" +
	"bytesValue\x12\x1f\n" +
	"\n" +
	"time_value\x18\x06 \x01(\x03H\x00R\ttimeValue\x12'\n" +
	"\x0eduration_value\x18\a \x01(\x03H\x00R\rdurationValue\x12-\n" +
	"\verror_value\x18\b \x01(\v2\n" +
	".log.ErrorH\x00R\n" +
	"errorValue\x12!\n" +
	"\fstring_array\x18\t \x03(\tR\vstringArray\x12\x1b\n" +
	"\tint_array\x18\n" +
	" \x03(\x03R\bintArray\x12\x1f\n" +
	"\vfloat_array\x18\v \x03(\x01R\n" +
	"floatArrayB\a\n" +
	"\x05value\"L\n" +
	"\x06Source\x12\x1a\n" +
	"\bfunction\x18\x01 \x01(\tR\bfunction\x12\x12\n" +
	"\x04file\x18\x02 \x01(\tR\x04file\x12\x12\n" +
	"\x04line\x18\x03 \x01(\x05R\x04line\"K\n" +
	"\x05Error\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x14\n" +
	"\x05stack\x18\x02 \x01(\tR\x05stack\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\"1\n" +
	"\n" +
	"LogRequest\x12#\n" +
	"\x05entry\x18\x01 \x01(\v2\r.log.LogEntryR\x05entry\"'\n" +
	"\vLogResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\":\n" +
	"\x0fLogBatchRequest\x12'\n" +
	"\aentries\x18\x01 \x03(\v2\r.log.LogEntryR\aentries\"S\n" +
	"\x10LogBatchResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0efailed_entries\x18\x02 \x03(\x05R\rfailedEntries\"f\n" +
	"\x0eGetLogsRequest\x12&\n" +
	"\x06filter\x18\x01 \x01(\v2\x0e.log.LogFilterR\x06filter\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06follow\x18\x03 \x01(\bR\x06follow\"\x91\x03\n" +
	"\tLogFilter\x12#\n" +
	"\x05level\x18\x01 \x01(\x0e2\r.log.LogLevelR\x05level\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12!\n" +
	"\flogger_names\x18\x04 \x03(\tR\vloggerNames\x12'\n" +
	"\x0fmessage_pattern\x18\x05 \x01(\tR\x0emessagePattern\x12E\n" +
	"\rfield_filters\x18\x06 \x03(\v2 .log.LogFilter.FieldFiltersEntryR\ffieldFilters\x12\x19\n" +
	"\btrace_id\x18\a \x01(\tR\atraceId\x1a?\n" +
	"\x11FieldFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"2\n" +
	"\x0fGetLevelRequest\x12\x1f\n" +
	"\vlogger_name\x18\x01 \x01(\tR\n" +
	"loggerName\"7\n" +
	"\x10GetLevelResponse\x12#\n" +
	"\x05level\x18\x01 \x01(\x0e2\r.log.LogLevelR\x05level\"W\n" +
	"\x0fSetLevelRequest\x12\x1f\n" +
	"\vlogger_name\x18\x01 \x01(\tR\n" +
	"loggerName\x12#\n" +
	"\x05level\x18\x02 \x01(\x0e2\r.log.LogLevelR\x05level\"b\n" +
	"\x10SetLevelResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x124\n" +
	"\x0eprevious_level\x18\x02 \x01(\x0e2\r.log.LogLevelR\rpreviousLevel*\xa1\x01\n" +
	"\bLogLevel\x12\x19\n" +
	"\x15LOG_LEVEL_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fLOG_LEVEL_TRACE\x10\x01\x12\x13\n" +
	"\x0fLOG_LEVEL_DEBUG\x10\x02\x12\x12\n" +
	"\x0eLOG_LEVEL_INFO\x10\x03\x12\x12\n" +
	"\x0eLOG_LEVEL_WARN\x10\x04\x12\x13\n" +
	"\x0fLOG_LEVEL_ERROR\x10\x05\x12\x13\n" +
	"\x0fLOG_LEVEL_FATAL\x10\x062\x92\x02\n" +
	"\n" +
	"LogService\x12(\n" +
	"\x03Log\x12\x0f.log.LogRequest\x1a\x10.log.LogResponse\x127\n" +
	"\bLogBatch\x12\x14.log.LogBatchRequest\x1a\x15.log.LogBatchResponse\x12/\n" +
	"\aGetLogs\x12\x13.log.GetLogsRequest\x1a\r.log.LogEntry0\x01\x127\n" +
	"\bGetLevel\x12\x14.log.GetLevelRequest\x1a\x15.log.GetLevelResponse\x127\n" +
	"\bSetLevel\x12\x14.log.SetLevelRequest\x1a\x15.log.SetLevelResponseB)Z'github.com/jdfalk/gcommon/pkg/log/protob\x06proto3"

var (
	file_log_proto_rawDescOnce sync.Once
	file_log_proto_rawDescData []byte
)

func file_log_proto_rawDescGZIP() []byte {
	file_log_proto_rawDescOnce.Do(func() {
		file_log_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_log_proto_rawDesc), len(file_log_proto_rawDesc)))
	})
	return file_log_proto_rawDescData
}

var file_log_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_log_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_log_proto_goTypes = []any{
	(LogLevel)(0),                 // 0: log.LogLevel
	(*LogEntry)(nil),              // 1: log.LogEntry
	(*Field)(nil),                 // 2: log.Field
	(*Source)(nil),                // 3: log.Source
	(*Error)(nil),                 // 4: log.Error
	(*LogRequest)(nil),            // 5: log.LogRequest
	(*LogResponse)(nil),           // 6: log.LogResponse
	(*LogBatchRequest)(nil),       // 7: log.LogBatchRequest
	(*LogBatchResponse)(nil),      // 8: log.LogBatchResponse
	(*GetLogsRequest)(nil),        // 9: log.GetLogsRequest
	(*LogFilter)(nil),             // 10: log.LogFilter
	(*GetLevelRequest)(nil),       // 11: log.GetLevelRequest
	(*GetLevelResponse)(nil),      // 12: log.GetLevelResponse
	(*SetLevelRequest)(nil),       // 13: log.SetLevelRequest
	(*SetLevelResponse)(nil),      // 14: log.SetLevelResponse
	nil,                           // 15: log.LogEntry.FieldsEntry
	nil,                           // 16: log.LogFilter.FieldFiltersEntry
	(*timestamppb.Timestamp)(nil), // 17: google.protobuf.Timestamp
}
var file_log_proto_depIdxs = []int32{
	0,  // 0: log.LogEntry.level:type_name -> log.LogLevel
	17, // 1: log.LogEntry.timestamp:type_name -> google.protobuf.Timestamp
	15, // 2: log.LogEntry.fields:type_name -> log.LogEntry.FieldsEntry
	3,  // 3: log.LogEntry.source:type_name -> log.Source
	4,  // 4: log.Field.error_value:type_name -> log.Error
	1,  // 5: log.LogRequest.entry:type_name -> log.LogEntry
	1,  // 6: log.LogBatchRequest.entries:type_name -> log.LogEntry
	10, // 7: log.GetLogsRequest.filter:type_name -> log.LogFilter
	0,  // 8: log.LogFilter.level:type_name -> log.LogLevel
	17, // 9: log.LogFilter.start_time:type_name -> google.protobuf.Timestamp
	17, // 10: log.LogFilter.end_time:type_name -> google.protobuf.Timestamp
	16, // 11: log.LogFilter.field_filters:type_name -> log.LogFilter.FieldFiltersEntry
	0,  // 12: log.GetLevelResponse.level:type_name -> log.LogLevel
	0,  // 13: log.SetLevelRequest.level:type_name -> log.LogLevel
	0,  // 14: log.SetLevelResponse.previous_level:type_name -> log.LogLevel
	2,  // 15: log.LogEntry.FieldsEntry.value:type_name -> log.Field
	5,  // 16: log.LogService.Log:input_type -> log.LogRequest
	7,  // 17: log.LogService.LogBatch:input_type -> log.LogBatchRequest
	9,  // 18: log.LogService.GetLogs:input_type -> log.GetLogsRequest
	11, // 19: log.LogService.GetLevel:input_type -> log.GetLevelRequest
	13, // 20: log.LogService.SetLevel:input_type -> log.SetLevelRequest
	6,  // 21: log.LogService.Log:output_type -> log.LogResponse
	8,  // 22: log.LogService.LogBatch:output_type -> log.LogBatchResponse
	1,  // 23: log.LogService.GetLogs:output_type -> log.LogEntry
	12, // 24: log.LogService.GetLevel:output_type -> log.GetLevelResponse
	14, // 25: log.LogService.SetLevel:output_type -> log.SetLevelResponse
	21, // [21:26] is the sub-list for method output_type
	16, // [16:21] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_log_proto_init() }
func file_log_proto_init() {
	if File_log_proto != nil {
		return
	}
	file_log_proto_msgTypes[1].OneofWrappers = []any{
		(*Field_BoolValue)(nil),
		(*Field_IntValue)(nil),
		(*Field_FloatValue)(nil),
		(*Field_StringValue)(nil),
		(*Field_BytesValue)(nil),
		(*Field_TimeValue)(nil),
		(*Field_DurationValue)(nil),
		(*Field_ErrorValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_log_proto_rawDesc), len(file_log_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_log_proto_goTypes,
		DependencyIndexes: file_log_proto_depIdxs,
		EnumInfos:         file_log_proto_enumTypes,
		MessageInfos:      file_log_proto_msgTypes,
	}.Build()
	File_log_proto = out.File
	file_log_proto_goTypes = nil
	file_log_proto_depIdxs = nil
}
