// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/auth/proto/messages/user_info.proto

//go:build !protoopaque

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// UserInfo contains information about a user.
type UserInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Unique user identifier
	UserId *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// Username
	Username *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// User's email address
	Email *string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	// User's display name
	DisplayName *string `protobuf:"bytes,4,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// User roles
	Roles []string `protobuf:"bytes,5,rep,name=roles" json:"roles,omitempty"`
	// User permissions
	Permissions []string `protobuf:"bytes,6,rep,name=permissions" json:"permissions,omitempty"`
	// User groups
	Groups []string `protobuf:"bytes,7,rep,name=groups" json:"groups,omitempty"`
	// User metadata
	Metadata map[string]string `protobuf:"bytes,8,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// When the user was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// When the user was last updated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	// When the user last logged in
	LastLoginAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=last_login_at,json=lastLoginAt" json:"last_login_at,omitempty"`
	// Whether the user account is active
	Active *bool `protobuf:"varint,12,opt,name=active" json:"active,omitempty"`
	// Whether the user's email is verified
	EmailVerified *bool `protobuf:"varint,13,opt,name=email_verified,json=emailVerified" json:"email_verified,omitempty"`
	// User's profile picture URL
	AvatarUrl     *string `protobuf:"bytes,14,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_pkg_auth_proto_messages_user_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_proto_messages_user_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UserInfo) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *UserInfo) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *UserInfo) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *UserInfo) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserInfo) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *UserInfo) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *UserInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UserInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserInfo) GetLastLoginAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginAt
	}
	return nil
}

func (x *UserInfo) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

func (x *UserInfo) GetEmailVerified() bool {
	if x != nil && x.EmailVerified != nil {
		return *x.EmailVerified
	}
	return false
}

func (x *UserInfo) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

func (x *UserInfo) SetUserId(v string) {
	x.UserId = &v
}

func (x *UserInfo) SetUsername(v string) {
	x.Username = &v
}

func (x *UserInfo) SetEmail(v string) {
	x.Email = &v
}

func (x *UserInfo) SetDisplayName(v string) {
	x.DisplayName = &v
}

func (x *UserInfo) SetRoles(v []string) {
	x.Roles = v
}

func (x *UserInfo) SetPermissions(v []string) {
	x.Permissions = v
}

func (x *UserInfo) SetGroups(v []string) {
	x.Groups = v
}

func (x *UserInfo) SetMetadata(v map[string]string) {
	x.Metadata = v
}

func (x *UserInfo) SetCreatedAt(v *timestamppb.Timestamp) {
	x.CreatedAt = v
}

func (x *UserInfo) SetUpdatedAt(v *timestamppb.Timestamp) {
	x.UpdatedAt = v
}

func (x *UserInfo) SetLastLoginAt(v *timestamppb.Timestamp) {
	x.LastLoginAt = v
}

func (x *UserInfo) SetActive(v bool) {
	x.Active = &v
}

func (x *UserInfo) SetEmailVerified(v bool) {
	x.EmailVerified = &v
}

func (x *UserInfo) SetAvatarUrl(v string) {
	x.AvatarUrl = &v
}

func (x *UserInfo) HasUserId() bool {
	if x == nil {
		return false
	}
	return x.UserId != nil
}

func (x *UserInfo) HasUsername() bool {
	if x == nil {
		return false
	}
	return x.Username != nil
}

func (x *UserInfo) HasEmail() bool {
	if x == nil {
		return false
	}
	return x.Email != nil
}

func (x *UserInfo) HasDisplayName() bool {
	if x == nil {
		return false
	}
	return x.DisplayName != nil
}

func (x *UserInfo) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.CreatedAt != nil
}

func (x *UserInfo) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return x.UpdatedAt != nil
}

func (x *UserInfo) HasLastLoginAt() bool {
	if x == nil {
		return false
	}
	return x.LastLoginAt != nil
}

func (x *UserInfo) HasActive() bool {
	if x == nil {
		return false
	}
	return x.Active != nil
}

func (x *UserInfo) HasEmailVerified() bool {
	if x == nil {
		return false
	}
	return x.EmailVerified != nil
}

func (x *UserInfo) HasAvatarUrl() bool {
	if x == nil {
		return false
	}
	return x.AvatarUrl != nil
}

func (x *UserInfo) ClearUserId() {
	x.UserId = nil
}

func (x *UserInfo) ClearUsername() {
	x.Username = nil
}

func (x *UserInfo) ClearEmail() {
	x.Email = nil
}

func (x *UserInfo) ClearDisplayName() {
	x.DisplayName = nil
}

func (x *UserInfo) ClearCreatedAt() {
	x.CreatedAt = nil
}

func (x *UserInfo) ClearUpdatedAt() {
	x.UpdatedAt = nil
}

func (x *UserInfo) ClearLastLoginAt() {
	x.LastLoginAt = nil
}

func (x *UserInfo) ClearActive() {
	x.Active = nil
}

func (x *UserInfo) ClearEmailVerified() {
	x.EmailVerified = nil
}

func (x *UserInfo) ClearAvatarUrl() {
	x.AvatarUrl = nil
}

type UserInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique user identifier
	UserId *string
	// Username
	Username *string
	// User's email address
	Email *string
	// User's display name
	DisplayName *string
	// User roles
	Roles []string
	// User permissions
	Permissions []string
	// User groups
	Groups []string
	// User metadata
	Metadata map[string]string
	// When the user was created
	CreatedAt *timestamppb.Timestamp
	// When the user was last updated
	UpdatedAt *timestamppb.Timestamp
	// When the user last logged in
	LastLoginAt *timestamppb.Timestamp
	// Whether the user account is active
	Active *bool
	// Whether the user's email is verified
	EmailVerified *bool
	// User's profile picture URL
	AvatarUrl *string
}

func (b0 UserInfo_builder) Build() *UserInfo {
	m0 := &UserInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.UserId = b.UserId
	x.Username = b.Username
	x.Email = b.Email
	x.DisplayName = b.DisplayName
	x.Roles = b.Roles
	x.Permissions = b.Permissions
	x.Groups = b.Groups
	x.Metadata = b.Metadata
	x.CreatedAt = b.CreatedAt
	x.UpdatedAt = b.UpdatedAt
	x.LastLoginAt = b.LastLoginAt
	x.Active = b.Active
	x.EmailVerified = b.EmailVerified
	x.AvatarUrl = b.AvatarUrl
	return m0
}

var File_pkg_auth_proto_messages_user_info_proto protoreflect.FileDescriptor

const file_pkg_auth_proto_messages_user_info_proto_rawDesc = "" +
	"\n" +
	"'pkg/auth/proto/messages/user_info.proto\x12\x0fgcommon.v1.auth\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xde\x04\n" +
	"\bUserInfo\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12!\n" +
	"\fdisplay_name\x18\x04 \x01(\tR\vdisplayName\x12\x14\n" +
	"\x05roles\x18\x05 \x03(\tR\x05roles\x12 \n" +
	"\vpermissions\x18\x06 \x03(\tR\vpermissions\x12\x16\n" +
	"\x06groups\x18\a \x03(\tR\x06groups\x12C\n" +
	"\bmetadata\x18\b \x03(\v2'.gcommon.v1.auth.UserInfo.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12>\n" +
	"\rlast_login_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vlastLoginAt\x12\x16\n" +
	"\x06active\x18\f \x01(\bR\x06active\x12%\n" +
	"\x0eemail_verified\x18\r \x01(\bR\remailVerified\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x0e \x01(\tR\tavatarUrl\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xbd\x01\n" +
	"\x13com.gcommon.v1.authB\rUserInfoProtoP\x01Z1github.com/jdfalk/gcommon/pkg/auth/proto/messages\xa2\x02\x03GVA\xaa\x02\x0fGcommon.V1.Auth\xca\x02\x0fGcommon\\V1\\Auth\xe2\x02\x1bGcommon\\V1\\Auth\\GPBMetadata\xea\x02\x11Gcommon::V1::Auth\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_auth_proto_messages_user_info_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_auth_proto_messages_user_info_proto_goTypes = []any{
	(*UserInfo)(nil),              // 0: gcommon.v1.auth.UserInfo
	nil,                           // 1: gcommon.v1.auth.UserInfo.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_pkg_auth_proto_messages_user_info_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.auth.UserInfo.metadata:type_name -> gcommon.v1.auth.UserInfo.MetadataEntry
	2, // 1: gcommon.v1.auth.UserInfo.created_at:type_name -> google.protobuf.Timestamp
	2, // 2: gcommon.v1.auth.UserInfo.updated_at:type_name -> google.protobuf.Timestamp
	2, // 3: gcommon.v1.auth.UserInfo.last_login_at:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_auth_proto_messages_user_info_proto_init() }
func file_pkg_auth_proto_messages_user_info_proto_init() {
	if File_pkg_auth_proto_messages_user_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_auth_proto_messages_user_info_proto_rawDesc), len(file_pkg_auth_proto_messages_user_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_auth_proto_messages_user_info_proto_goTypes,
		DependencyIndexes: file_pkg_auth_proto_messages_user_info_proto_depIdxs,
		MessageInfos:      file_pkg_auth_proto_messages_user_info_proto_msgTypes,
	}.Build()
	File_pkg_auth_proto_messages_user_info_proto = out.File
	file_pkg_auth_proto_messages_user_info_proto_goTypes = nil
	file_pkg_auth_proto_messages_user_info_proto_depIdxs = nil
}
