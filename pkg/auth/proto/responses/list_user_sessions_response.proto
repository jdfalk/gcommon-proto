// file: pkg/auth/proto/responses/list_user_sessions_response.proto
// version: 1.0.0
// guid: ac4d5e6f-7a8b-9c0d-1e2f-3a4b5c6d7e8f

edition = "2023";

package gcommon.v1.auth;

option go_package = "../../../../pkg/auth/pb;authpb";

// Standard imports
import "google/protobuf/timestamp.proto";

// Common types
import "pkg/common/proto/messages/request_metadata.proto";
import "pkg/common/proto/messages/paginated_response.proto";
import "pkg/common/proto/messages/error.proto";

// Auth module types
import "pkg/auth/proto/messages/session_info.proto";

/**
 * ListUserSessionsResponse returns a list of user sessions.
 * Contains session details, pagination information, and metadata
 * for administrative session management and user self-service.
 *
 * Follows 1-1-1 pattern: one message per file.
 */
message ListUserSessionsResponse {
  // Required fields (1-10)

  /**
   * List of session information for the requested user.
   * Empty if no sessions match the filters.
   */
  repeated gcommon.v1.auth.SessionInfo sessions = 1;

  /**
   * Total number of sessions that match the query filters,
   * regardless of pagination. Useful for calculating page counts.
   */
  int32 total_count = 2;

  // Optional fields (11-50)

  /**
   * Pagination information for navigating through large result sets.
   * Contains next_page_token for retrieving additional results.
   */
  gcommon.v1.common.PaginatedResponse pagination = 11;

  /**
   * Request processing metadata including timing, request ID,
   * and other observability information.
   */
  gcommon.v1.common.RequestMetadata request_metadata = 12;

  /**
   * Indicates if the current request's session is included
   * in the results. Useful for UI highlighting.
   */
  bool includes_current_session = 13;

  /**
   * Number of active sessions (not expired/terminated).
   * Subset of total_count for quick status information.
   */
  int32 active_session_count = 14;

  /**
   * User ID for which sessions were retrieved.
   * Echoed from the request for verification.
   */
  string user_id = 15;

  // Status and error fields (61-70)

  /**
   * Error information if the request failed partially
   * or if there were issues retrieving some session data.
   */
  gcommon.v1.common.Error error = 61;

  // Timestamps (51-60)

  /**
   * Timestamp when this response was generated.
   * Useful for caching and staleness detection.
   */
  google.protobuf.Timestamp generated_at = 51;

  /**
   * Timestamp when the session data was last refreshed
   * from the authoritative source.
   */
  google.protobuf.Timestamp data_refreshed_at = 52;
}
