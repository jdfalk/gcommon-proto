// file: pkg/auth/proto/requests/authenticate_request.proto
edition = "2023";

package gcommon.v1.auth;

import "google/protobuf/go_features.proto";
import "pkg/common/proto/common/proto/client_info.proto";
import "pkg/auth/proto/proto/api_key_credentials.proto";
import "pkg/auth/proto/proto/jwt_credentials.proto";

option go_package = "github.com/jdfalk/gcommon/pkg/auth/proto;authpb";
option features.(pb.go).api_level = API_OPAQUE;

/**
 * Authentication request supporting multiple credential types.
 * Uses oneof to ensure only one authentication method is provided per request.
 * Supports comprehensive metadata and client information for security and auditing.
 */
message AuthenticateRequest {
  // Request metadata for tracing, correlation, and auditing
  gcommon.v1.common.RequestMetadata metadata = 1 [lazy = true];

  // Authentication credentials (oneof ensures only one type is used)
  oneof credentials {
    // Username/password authentication
    PasswordCredentials password = 2;
    // API key authentication
    APIKeyCredentials api_key = 3;
    // OAuth2 authorization code flow
    OAuth2Credentials oauth2 = 4;
    // JWT bearer token authentication
    JWTCredentials jwt = 5;
  }

  // Requested authorization scopes
  repeated string scopes = 6;

  // Client information for security and session management
  gcommon.v1.common.ClientInfo client_info = 7 [lazy = true];
}
