// file: pkg/db/proto/services/database_admin_service.proto
edition = "2023";

package gcommon.v1.database;

import "google/protobuf/empty.proto";
import "google/protobuf/go_features.proto";
import "pkg/db/proto/proto/create_database_response.proto";
import "pkg/db/proto/proto/create_schema_request.proto";
import "pkg/db/proto/proto/drop_schema_request.proto";
import "pkg/db/proto/proto/get_database_info_request.proto";
import "pkg/db/proto/proto/list_databases_request.proto";
import "pkg/db/proto/proto/list_schemas_response.proto";
option go_package = "github.com/jdfalk/gcommon/pkg/db/proto";


option features.(pb.go).api_level = API_OPAQUE;

/**
 * DatabaseAdminService provides administrative operations for database
 * management including schema operations and migrations.
 */
service DatabaseAdminService {
  // Create a new database
  rpc CreateDatabase(CreateDatabaseRequest) returns (CreateDatabaseResponse);

  // Remove an existing database
  rpc DropDatabase(DropDatabaseRequest) returns (google.protobuf.Empty);

  // List all available databases
  rpc ListDatabases(ListDatabasesRequest) returns (ListDatabasesResponse);

  // Get metadata about a specific database
  rpc GetDatabaseInfo(GetDatabaseInfoRequest) returns (GetDatabaseInfoResponse);

  // Create a new schema within a database
  rpc CreateSchema(CreateSchemaRequest) returns (CreateSchemaResponse);

  // Remove a schema from a database
  rpc DropSchema(DropSchemaRequest) returns (google.protobuf.Empty);

  // List all schemas in a database
  rpc ListSchemas(ListSchemasRequest) returns (ListSchemasResponse);
}
