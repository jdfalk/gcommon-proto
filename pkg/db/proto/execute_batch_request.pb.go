// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/db/proto/execute_batch_request.proto

package proto

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecuteBatchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations to execute in the batch
	Operations []*BatchOperation `protobuf:"bytes,1,rep,name=operations" json:"operations,omitempty"`
	// Database name (optional, uses default if not specified)
	Database *string `protobuf:"bytes,2,opt,name=database" json:"database,omitempty"`
	// Batch execution options and configuration
	Options *BatchExecuteOptions `protobuf:"bytes,3,opt,name=options" json:"options,omitempty"`
	// Request metadata for tracing and authentication
	Metadata *proto.RequestMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	// Transaction ID if this batch is part of a transaction
	TransactionId *string `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteBatchRequest) Reset() {
	*x = ExecuteBatchRequest{}
	mi := &file_pkg_db_proto_execute_batch_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteBatchRequest) ProtoMessage() {}

func (x *ExecuteBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_db_proto_execute_batch_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteBatchRequest.ProtoReflect.Descriptor instead.
func (*ExecuteBatchRequest) Descriptor() ([]byte, []int) {
	return file_pkg_db_proto_execute_batch_request_proto_rawDescGZIP(), []int{0}
}

func (x *ExecuteBatchRequest) GetOperations() []*BatchOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ExecuteBatchRequest) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *ExecuteBatchRequest) GetOptions() *BatchExecuteOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ExecuteBatchRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ExecuteBatchRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

var File_pkg_db_proto_execute_batch_request_proto protoreflect.FileDescriptor

const file_pkg_db_proto_execute_batch_request_proto_rawDesc = "" +
	"\n" +
	"(pkg/db/proto/execute_batch_request.proto\x12\x13gcommon.v1.database\x1a'pkg/common/proto/request_metadata.proto\x1a(pkg/db/proto/batch_execute_options.proto\x1a\"pkg/db/proto/batch_operation.proto\"\xad\x02\n" +
	"\x13ExecuteBatchRequest\x12G\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2#.gcommon.v1.database.BatchOperationB\x02(\x01R\n" +
	"operations\x12\x1a\n" +
	"\bdatabase\x18\x02 \x01(\tR\bdatabase\x12F\n" +
	"\aoptions\x18\x03 \x01(\v2(.gcommon.v1.database.BatchExecuteOptionsB\x02(\x01R\aoptions\x12B\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataB\x02(\x01R\bmetadata\x12%\n" +
	"\x0etransaction_id\x18\x05 \x01(\tR\rtransactionIdB\xc9\x01\n" +
	"\x17com.gcommon.v1.databaseB\x18ExecuteBatchRequestProtoP\x01Z&github.com/jdfalk/gcommon/pkg/db/proto\xa2\x02\x03GVD\xaa\x02\x13Gcommon.V1.Database\xca\x02\x13Gcommon\\V1\\Database\xe2\x02\x1fGcommon\\V1\\Database\\GPBMetadata\xea\x02\x15Gcommon::V1::Databaseb\beditionsp\xe8\a"

var (
	file_pkg_db_proto_execute_batch_request_proto_rawDescOnce sync.Once
	file_pkg_db_proto_execute_batch_request_proto_rawDescData []byte
)

func file_pkg_db_proto_execute_batch_request_proto_rawDescGZIP() []byte {
	file_pkg_db_proto_execute_batch_request_proto_rawDescOnce.Do(func() {
		file_pkg_db_proto_execute_batch_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_db_proto_execute_batch_request_proto_rawDesc), len(file_pkg_db_proto_execute_batch_request_proto_rawDesc)))
	})
	return file_pkg_db_proto_execute_batch_request_proto_rawDescData
}

var file_pkg_db_proto_execute_batch_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_db_proto_execute_batch_request_proto_goTypes = []any{
	(*ExecuteBatchRequest)(nil),   // 0: gcommon.v1.database.ExecuteBatchRequest
	(*BatchOperation)(nil),        // 1: gcommon.v1.database.BatchOperation
	(*BatchExecuteOptions)(nil),   // 2: gcommon.v1.database.BatchExecuteOptions
	(*proto.RequestMetadata)(nil), // 3: gcommon.v1.common.RequestMetadata
}
var file_pkg_db_proto_execute_batch_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.database.ExecuteBatchRequest.operations:type_name -> gcommon.v1.database.BatchOperation
	2, // 1: gcommon.v1.database.ExecuteBatchRequest.options:type_name -> gcommon.v1.database.BatchExecuteOptions
	3, // 2: gcommon.v1.database.ExecuteBatchRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_db_proto_execute_batch_request_proto_init() }
func file_pkg_db_proto_execute_batch_request_proto_init() {
	if File_pkg_db_proto_execute_batch_request_proto != nil {
		return
	}
	file_pkg_db_proto_batch_execute_options_proto_init()
	file_pkg_db_proto_batch_operation_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_db_proto_execute_batch_request_proto_rawDesc), len(file_pkg_db_proto_execute_batch_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_db_proto_execute_batch_request_proto_goTypes,
		DependencyIndexes: file_pkg_db_proto_execute_batch_request_proto_depIdxs,
		MessageInfos:      file_pkg_db_proto_execute_batch_request_proto_msgTypes,
	}.Build()
	File_pkg_db_proto_execute_batch_request_proto = out.File
	file_pkg_db_proto_execute_batch_request_proto_goTypes = nil
	file_pkg_db_proto_execute_batch_request_proto_depIdxs = nil
}
