// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/db/proto/pebble_config.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// PebbleConfig represents Pebble-specific configuration options
// for the embedded key-value store driver.
type PebbleConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Path is the directory where the database files are stored
	Path *string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	// CacheSize is the size of the block cache in bytes
	CacheSize *int64 `protobuf:"varint,2,opt,name=cache_size,json=cacheSize" json:"cache_size,omitempty"`
	// MemtableSize is the memtable size in bytes
	MemtableSize *int64 `protobuf:"varint,3,opt,name=memtable_size,json=memtableSize" json:"memtable_size,omitempty"`
	// MaxOpenFiles is the maximum number of open files
	MaxOpenFiles *int32 `protobuf:"varint,4,opt,name=max_open_files,json=maxOpenFiles" json:"max_open_files,omitempty"`
	// Compression enables on-disk compression when true
	Compression   *bool `protobuf:"varint,5,opt,name=compression" json:"compression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PebbleConfig) Reset() {
	*x = PebbleConfig{}
	mi := &file_pkg_db_proto_pebble_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PebbleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PebbleConfig) ProtoMessage() {}

func (x *PebbleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_db_proto_pebble_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PebbleConfig.ProtoReflect.Descriptor instead.
func (*PebbleConfig) Descriptor() ([]byte, []int) {
	return file_pkg_db_proto_pebble_config_proto_rawDescGZIP(), []int{0}
}

func (x *PebbleConfig) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *PebbleConfig) GetCacheSize() int64 {
	if x != nil && x.CacheSize != nil {
		return *x.CacheSize
	}
	return 0
}

func (x *PebbleConfig) GetMemtableSize() int64 {
	if x != nil && x.MemtableSize != nil {
		return *x.MemtableSize
	}
	return 0
}

func (x *PebbleConfig) GetMaxOpenFiles() int32 {
	if x != nil && x.MaxOpenFiles != nil {
		return *x.MaxOpenFiles
	}
	return 0
}

func (x *PebbleConfig) GetCompression() bool {
	if x != nil && x.Compression != nil {
		return *x.Compression
	}
	return false
}

var File_pkg_db_proto_pebble_config_proto protoreflect.FileDescriptor

const file_pkg_db_proto_pebble_config_proto_rawDesc = "" +
	"\n" +
	" pkg/db/proto/pebble_config.proto\x12\x13gcommon.v1.database\"\xae\x01\n" +
	"\fPebbleConfig\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1d\n" +
	"\n" +
	"cache_size\x18\x02 \x01(\x03R\tcacheSize\x12#\n" +
	"\rmemtable_size\x18\x03 \x01(\x03R\fmemtableSize\x12$\n" +
	"\x0emax_open_files\x18\x04 \x01(\x05R\fmaxOpenFiles\x12 \n" +
	"\vcompression\x18\x05 \x01(\bR\vcompressionB\xc2\x01\n" +
	"\x17com.gcommon.v1.databaseB\x11PebbleConfigProtoP\x01Z&github.com/jdfalk/gcommon/pkg/db/proto\xa2\x02\x03GVD\xaa\x02\x13Gcommon.V1.Database\xca\x02\x13Gcommon\\V1\\Database\xe2\x02\x1fGcommon\\V1\\Database\\GPBMetadata\xea\x02\x15Gcommon::V1::Databaseb\beditionsp\xe8\a"

var (
	file_pkg_db_proto_pebble_config_proto_rawDescOnce sync.Once
	file_pkg_db_proto_pebble_config_proto_rawDescData []byte
)

func file_pkg_db_proto_pebble_config_proto_rawDescGZIP() []byte {
	file_pkg_db_proto_pebble_config_proto_rawDescOnce.Do(func() {
		file_pkg_db_proto_pebble_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_db_proto_pebble_config_proto_rawDesc), len(file_pkg_db_proto_pebble_config_proto_rawDesc)))
	})
	return file_pkg_db_proto_pebble_config_proto_rawDescData
}

var file_pkg_db_proto_pebble_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_db_proto_pebble_config_proto_goTypes = []any{
	(*PebbleConfig)(nil), // 0: gcommon.v1.database.PebbleConfig
}
var file_pkg_db_proto_pebble_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_db_proto_pebble_config_proto_init() }
func file_pkg_db_proto_pebble_config_proto_init() {
	if File_pkg_db_proto_pebble_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_db_proto_pebble_config_proto_rawDesc), len(file_pkg_db_proto_pebble_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_db_proto_pebble_config_proto_goTypes,
		DependencyIndexes: file_pkg_db_proto_pebble_config_proto_depIdxs,
		MessageInfos:      file_pkg_db_proto_pebble_config_proto_msgTypes,
	}.Build()
	File_pkg_db_proto_pebble_config_proto = out.File
	file_pkg_db_proto_pebble_config_proto_goTypes = nil
	file_pkg_db_proto_pebble_config_proto_depIdxs = nil
}
