// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/db/proto/messages/database_info.proto

//go:build !protoopaque

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// DatabaseInfo provides metadata about a database instance.
// Used for identifying database capabilities and connection details.
type DatabaseInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Database name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Database version information
	Version *string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// Database type/vendor (e.g., PostgreSQL, MySQL, CockroachDB)
	Type *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	// Sanitized connection string (credentials removed)
	ConnectionString *string `protobuf:"bytes,4,opt,name=connection_string,json=connectionString" json:"connection_string,omitempty"`
	// List of supported database features
	Features      []string `protobuf:"bytes,5,rep,name=features" json:"features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseInfo) Reset() {
	*x = DatabaseInfo{}
	mi := &file_pkg_db_proto_messages_database_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseInfo) ProtoMessage() {}

func (x *DatabaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_db_proto_messages_database_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DatabaseInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DatabaseInfo) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *DatabaseInfo) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *DatabaseInfo) GetConnectionString() string {
	if x != nil && x.ConnectionString != nil {
		return *x.ConnectionString
	}
	return ""
}

func (x *DatabaseInfo) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *DatabaseInfo) SetName(v string) {
	x.Name = &v
}

func (x *DatabaseInfo) SetVersion(v string) {
	x.Version = &v
}

func (x *DatabaseInfo) SetType(v string) {
	x.Type = &v
}

func (x *DatabaseInfo) SetConnectionString(v string) {
	x.ConnectionString = &v
}

func (x *DatabaseInfo) SetFeatures(v []string) {
	x.Features = v
}

func (x *DatabaseInfo) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *DatabaseInfo) HasVersion() bool {
	if x == nil {
		return false
	}
	return x.Version != nil
}

func (x *DatabaseInfo) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *DatabaseInfo) HasConnectionString() bool {
	if x == nil {
		return false
	}
	return x.ConnectionString != nil
}

func (x *DatabaseInfo) ClearName() {
	x.Name = nil
}

func (x *DatabaseInfo) ClearVersion() {
	x.Version = nil
}

func (x *DatabaseInfo) ClearType() {
	x.Type = nil
}

func (x *DatabaseInfo) ClearConnectionString() {
	x.ConnectionString = nil
}

type DatabaseInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Database name
	Name *string
	// Database version information
	Version *string
	// Database type/vendor (e.g., PostgreSQL, MySQL, CockroachDB)
	Type *string
	// Sanitized connection string (credentials removed)
	ConnectionString *string
	// List of supported database features
	Features []string
}

func (b0 DatabaseInfo_builder) Build() *DatabaseInfo {
	m0 := &DatabaseInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Version = b.Version
	x.Type = b.Type
	x.ConnectionString = b.ConnectionString
	x.Features = b.Features
	return m0
}

var File_pkg_db_proto_messages_database_info_proto protoreflect.FileDescriptor

const file_pkg_db_proto_messages_database_info_proto_rawDesc = "" +
	"\n" +
	")pkg/db/proto/messages/database_info.proto\x12\x13gcommon.v1.database\x1a!google/protobuf/go_features.proto\"\x99\x01\n" +
	"\fDatabaseInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12+\n" +
	"\x11connection_string\x18\x04 \x01(\tR\x10connectionString\x12\x1a\n" +
	"\bfeatures\x18\x05 \x03(\tR\bfeaturesB\xd3\x01\n" +
	"\x17com.gcommon.v1.databaseB\x11DatabaseInfoProtoP\x01Z/github.com/jdfalk/gcommon/pkg/db/proto/messages\xa2\x02\x03GVD\xaa\x02\x13Gcommon.V1.Database\xca\x02\x13Gcommon\\V1\\Database\xe2\x02\x1fGcommon\\V1\\Database\\GPBMetadata\xea\x02\x15Gcommon::V1::Database\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_db_proto_messages_database_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_db_proto_messages_database_info_proto_goTypes = []any{
	(*DatabaseInfo)(nil), // 0: gcommon.v1.database.DatabaseInfo
}
var file_pkg_db_proto_messages_database_info_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_db_proto_messages_database_info_proto_init() }
func file_pkg_db_proto_messages_database_info_proto_init() {
	if File_pkg_db_proto_messages_database_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_db_proto_messages_database_info_proto_rawDesc), len(file_pkg_db_proto_messages_database_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_db_proto_messages_database_info_proto_goTypes,
		DependencyIndexes: file_pkg_db_proto_messages_database_info_proto_depIdxs,
		MessageInfos:      file_pkg_db_proto_messages_database_info_proto_msgTypes,
	}.Build()
	File_pkg_db_proto_messages_database_info_proto = out.File
	file_pkg_db_proto_messages_database_info_proto_goTypes = nil
	file_pkg_db_proto_messages_database_info_proto_depIdxs = nil
}
