// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/db/proto/requests/execute_request.proto

//go:build !protoopaque

package dbpb

import (
	pb "../../../../pkg/common/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// ExecuteRequest represents a request to execute a database write operation.
// Supports INSERT, UPDATE, DELETE statements with parameters and options.
type ExecuteRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// SQL statement or NoSQL operation
	Statement *string `protobuf:"bytes,1,opt,name=statement" json:"statement,omitempty"`
	// Statement parameters for parameterized operations
	Parameters []*QueryParameter `protobuf:"bytes,2,rep,name=parameters" json:"parameters,omitempty"`
	// Database name (optional, uses default if not specified)
	Database *string `protobuf:"bytes,3,opt,name=database" json:"database,omitempty"`
	// Execution options and configuration
	Options *ExecuteOptions `protobuf:"bytes,4,opt,name=options" json:"options,omitempty"`
	// Request metadata for tracing and authentication
	Metadata *pb.RequestMetadata `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
	// Transaction ID if this operation is part of a transaction
	TransactionId *string `protobuf:"bytes,6,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	mi := &file_pkg_db_proto_requests_execute_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_db_proto_requests_execute_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteRequest) GetStatement() string {
	if x != nil && x.Statement != nil {
		return *x.Statement
	}
	return ""
}

func (x *ExecuteRequest) GetParameters() []*QueryParameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ExecuteRequest) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *ExecuteRequest) GetOptions() *ExecuteOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ExecuteRequest) GetMetadata() *pb.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ExecuteRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *ExecuteRequest) SetStatement(v string) {
	x.Statement = &v
}

func (x *ExecuteRequest) SetParameters(v []*QueryParameter) {
	x.Parameters = v
}

func (x *ExecuteRequest) SetDatabase(v string) {
	x.Database = &v
}

func (x *ExecuteRequest) SetOptions(v *ExecuteOptions) {
	x.Options = v
}

func (x *ExecuteRequest) SetMetadata(v *pb.RequestMetadata) {
	x.Metadata = v
}

func (x *ExecuteRequest) SetTransactionId(v string) {
	x.TransactionId = &v
}

func (x *ExecuteRequest) HasStatement() bool {
	if x == nil {
		return false
	}
	return x.Statement != nil
}

func (x *ExecuteRequest) HasDatabase() bool {
	if x == nil {
		return false
	}
	return x.Database != nil
}

func (x *ExecuteRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.Options != nil
}

func (x *ExecuteRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *ExecuteRequest) HasTransactionId() bool {
	if x == nil {
		return false
	}
	return x.TransactionId != nil
}

func (x *ExecuteRequest) ClearStatement() {
	x.Statement = nil
}

func (x *ExecuteRequest) ClearDatabase() {
	x.Database = nil
}

func (x *ExecuteRequest) ClearOptions() {
	x.Options = nil
}

func (x *ExecuteRequest) ClearMetadata() {
	x.Metadata = nil
}

func (x *ExecuteRequest) ClearTransactionId() {
	x.TransactionId = nil
}

type ExecuteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// SQL statement or NoSQL operation
	Statement *string
	// Statement parameters for parameterized operations
	Parameters []*QueryParameter
	// Database name (optional, uses default if not specified)
	Database *string
	// Execution options and configuration
	Options *ExecuteOptions
	// Request metadata for tracing and authentication
	Metadata *pb.RequestMetadata
	// Transaction ID if this operation is part of a transaction
	TransactionId *string
}

func (b0 ExecuteRequest_builder) Build() *ExecuteRequest {
	m0 := &ExecuteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Statement = b.Statement
	x.Parameters = b.Parameters
	x.Database = b.Database
	x.Options = b.Options
	x.Metadata = b.Metadata
	x.TransactionId = b.TransactionId
	return m0
}

var File_pkg_db_proto_requests_execute_request_proto protoreflect.FileDescriptor

const file_pkg_db_proto_requests_execute_request_proto_rawDesc = "" +
	"\n" +
	"+pkg/db/proto/requests/execute_request.proto\x12\x13gcommon.v1.database\x1a(pkg/db/proto/types/query_parameter.proto\x1a+pkg/db/proto/messages/execute_options.proto\x1a0pkg/common/proto/messages/request_metadata.proto\x1a!google/protobuf/go_features.proto\"\xc1\x02\n" +
	"\x0eExecuteRequest\x12\x1c\n" +
	"\tstatement\x18\x01 \x01(\tR\tstatement\x12G\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2#.gcommon.v1.database.QueryParameterB\x02(\x01R\n" +
	"parameters\x12\x1a\n" +
	"\bdatabase\x18\x03 \x01(\tR\bdatabase\x12A\n" +
	"\aoptions\x18\x04 \x01(\v2#.gcommon.v1.database.ExecuteOptionsB\x02(\x01R\aoptions\x12B\n" +
	"\bmetadata\x18\x05 \x01(\v2\".gcommon.v1.common.RequestMetadataB\x02(\x01R\bmetadata\x12%\n" +
	"\x0etransaction_id\x18\x06 \x01(\tR\rtransactionIdB\xc0\x01\n" +
	"\x17com.gcommon.v1.databaseB\x13ExecuteRequestProtoP\x01Z\x1a../../../../pkg/db/pb;dbpb\xa2\x02\x03GVD\xaa\x02\x13Gcommon.V1.Database\xca\x02\x13Gcommon\\V1\\Database\xe2\x02\x1fGcommon\\V1\\Database\\GPBMetadata\xea\x02\x15Gcommon::V1::Database\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_db_proto_requests_execute_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_db_proto_requests_execute_request_proto_goTypes = []any{
	(*ExecuteRequest)(nil),     // 0: gcommon.v1.database.ExecuteRequest
	(*QueryParameter)(nil),     // 1: gcommon.v1.database.QueryParameter
	(*ExecuteOptions)(nil),     // 2: gcommon.v1.database.ExecuteOptions
	(*pb.RequestMetadata)(nil), // 3: gcommon.v1.common.RequestMetadata
}
var file_pkg_db_proto_requests_execute_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.database.ExecuteRequest.parameters:type_name -> gcommon.v1.database.QueryParameter
	2, // 1: gcommon.v1.database.ExecuteRequest.options:type_name -> gcommon.v1.database.ExecuteOptions
	3, // 2: gcommon.v1.database.ExecuteRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_db_proto_requests_execute_request_proto_init() }
func file_pkg_db_proto_requests_execute_request_proto_init() {
	if File_pkg_db_proto_requests_execute_request_proto != nil {
		return
	}
	file_pkg_db_proto_types_query_parameter_proto_init()
	file_pkg_db_proto_messages_execute_options_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_db_proto_requests_execute_request_proto_rawDesc), len(file_pkg_db_proto_requests_execute_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_db_proto_requests_execute_request_proto_goTypes,
		DependencyIndexes: file_pkg_db_proto_requests_execute_request_proto_depIdxs,
		MessageInfos:      file_pkg_db_proto_requests_execute_request_proto_msgTypes,
	}.Build()
	File_pkg_db_proto_requests_execute_request_proto = out.File
	file_pkg_db_proto_requests_execute_request_proto_goTypes = nil
	file_pkg_db_proto_requests_execute_request_proto_depIdxs = nil
}
