// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/types/timestamp_range.proto

//go:build !protoopaque

package metricspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// TimestampRange represents a time range for querying metrics.
// Used to specify the time window for metric queries and operations.
type TimestampRange struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Start time of the range (inclusive)
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	// End time of the range (exclusive)
	EndTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	// Optional step/resolution for time series data
	Step          *durationpb.Duration `protobuf:"bytes,3,opt,name=step" json:"step,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimestampRange) Reset() {
	*x = TimestampRange{}
	mi := &file_pkg_metrics_proto_types_timestamp_range_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimestampRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampRange) ProtoMessage() {}

func (x *TimestampRange) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_types_timestamp_range_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TimestampRange) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TimestampRange) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *TimestampRange) GetStep() *durationpb.Duration {
	if x != nil {
		return x.Step
	}
	return nil
}

func (x *TimestampRange) SetStartTime(v *timestamppb.Timestamp) {
	x.StartTime = v
}

func (x *TimestampRange) SetEndTime(v *timestamppb.Timestamp) {
	x.EndTime = v
}

func (x *TimestampRange) SetStep(v *durationpb.Duration) {
	x.Step = v
}

func (x *TimestampRange) HasStartTime() bool {
	if x == nil {
		return false
	}
	return x.StartTime != nil
}

func (x *TimestampRange) HasEndTime() bool {
	if x == nil {
		return false
	}
	return x.EndTime != nil
}

func (x *TimestampRange) HasStep() bool {
	if x == nil {
		return false
	}
	return x.Step != nil
}

func (x *TimestampRange) ClearStartTime() {
	x.StartTime = nil
}

func (x *TimestampRange) ClearEndTime() {
	x.EndTime = nil
}

func (x *TimestampRange) ClearStep() {
	x.Step = nil
}

type TimestampRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Start time of the range (inclusive)
	StartTime *timestamppb.Timestamp
	// End time of the range (exclusive)
	EndTime *timestamppb.Timestamp
	// Optional step/resolution for time series data
	Step *durationpb.Duration
}

func (b0 TimestampRange_builder) Build() *TimestampRange {
	m0 := &TimestampRange{}
	b, x := &b0, m0
	_, _ = b, x
	x.StartTime = b.StartTime
	x.EndTime = b.EndTime
	x.Step = b.Step
	return m0
}

// *
// RelativeTimeRange represents a time range relative to current time.
// Used for queries like "last 24 hours" or "past week".
type RelativeTimeRange struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Duration looking back from current time
	LookbackDuration *durationpb.Duration `protobuf:"bytes,1,opt,name=lookback_duration,json=lookbackDuration" json:"lookback_duration,omitempty"`
	// Optional step/resolution for time series data
	Step *durationpb.Duration `protobuf:"bytes,2,opt,name=step" json:"step,omitempty"`
	// Optional offset from current time (useful for queries like "1 hour ago to 2 hours ago")
	Offset        *durationpb.Duration `protobuf:"bytes,3,opt,name=offset" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelativeTimeRange) Reset() {
	*x = RelativeTimeRange{}
	mi := &file_pkg_metrics_proto_types_timestamp_range_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelativeTimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelativeTimeRange) ProtoMessage() {}

func (x *RelativeTimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_types_timestamp_range_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RelativeTimeRange) GetLookbackDuration() *durationpb.Duration {
	if x != nil {
		return x.LookbackDuration
	}
	return nil
}

func (x *RelativeTimeRange) GetStep() *durationpb.Duration {
	if x != nil {
		return x.Step
	}
	return nil
}

func (x *RelativeTimeRange) GetOffset() *durationpb.Duration {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *RelativeTimeRange) SetLookbackDuration(v *durationpb.Duration) {
	x.LookbackDuration = v
}

func (x *RelativeTimeRange) SetStep(v *durationpb.Duration) {
	x.Step = v
}

func (x *RelativeTimeRange) SetOffset(v *durationpb.Duration) {
	x.Offset = v
}

func (x *RelativeTimeRange) HasLookbackDuration() bool {
	if x == nil {
		return false
	}
	return x.LookbackDuration != nil
}

func (x *RelativeTimeRange) HasStep() bool {
	if x == nil {
		return false
	}
	return x.Step != nil
}

func (x *RelativeTimeRange) HasOffset() bool {
	if x == nil {
		return false
	}
	return x.Offset != nil
}

func (x *RelativeTimeRange) ClearLookbackDuration() {
	x.LookbackDuration = nil
}

func (x *RelativeTimeRange) ClearStep() {
	x.Step = nil
}

func (x *RelativeTimeRange) ClearOffset() {
	x.Offset = nil
}

type RelativeTimeRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Duration looking back from current time
	LookbackDuration *durationpb.Duration
	// Optional step/resolution for time series data
	Step *durationpb.Duration
	// Optional offset from current time (useful for queries like "1 hour ago to 2 hours ago")
	Offset *durationpb.Duration
}

func (b0 RelativeTimeRange_builder) Build() *RelativeTimeRange {
	m0 := &RelativeTimeRange{}
	b, x := &b0, m0
	_, _ = b, x
	x.LookbackDuration = b.LookbackDuration
	x.Step = b.Step
	x.Offset = b.Offset
	return m0
}

// *
// TimeFilter combines absolute and relative time filtering options.
type TimeFilter struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to TimeRange:
	//
	//	*TimeFilter_AbsoluteRange
	//	*TimeFilter_RelativeRange
	TimeRange     isTimeFilter_TimeRange `protobuf_oneof:"time_range"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeFilter) Reset() {
	*x = TimeFilter{}
	mi := &file_pkg_metrics_proto_types_timestamp_range_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeFilter) ProtoMessage() {}

func (x *TimeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_types_timestamp_range_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TimeFilter) GetTimeRange() isTimeFilter_TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *TimeFilter) GetAbsoluteRange() *TimestampRange {
	if x != nil {
		if x, ok := x.TimeRange.(*TimeFilter_AbsoluteRange); ok {
			return x.AbsoluteRange
		}
	}
	return nil
}

func (x *TimeFilter) GetRelativeRange() *RelativeTimeRange {
	if x != nil {
		if x, ok := x.TimeRange.(*TimeFilter_RelativeRange); ok {
			return x.RelativeRange
		}
	}
	return nil
}

func (x *TimeFilter) SetAbsoluteRange(v *TimestampRange) {
	if v == nil {
		x.TimeRange = nil
		return
	}
	x.TimeRange = &TimeFilter_AbsoluteRange{v}
}

func (x *TimeFilter) SetRelativeRange(v *RelativeTimeRange) {
	if v == nil {
		x.TimeRange = nil
		return
	}
	x.TimeRange = &TimeFilter_RelativeRange{v}
}

func (x *TimeFilter) HasTimeRange() bool {
	if x == nil {
		return false
	}
	return x.TimeRange != nil
}

func (x *TimeFilter) HasAbsoluteRange() bool {
	if x == nil {
		return false
	}
	_, ok := x.TimeRange.(*TimeFilter_AbsoluteRange)
	return ok
}

func (x *TimeFilter) HasRelativeRange() bool {
	if x == nil {
		return false
	}
	_, ok := x.TimeRange.(*TimeFilter_RelativeRange)
	return ok
}

func (x *TimeFilter) ClearTimeRange() {
	x.TimeRange = nil
}

func (x *TimeFilter) ClearAbsoluteRange() {
	if _, ok := x.TimeRange.(*TimeFilter_AbsoluteRange); ok {
		x.TimeRange = nil
	}
}

func (x *TimeFilter) ClearRelativeRange() {
	if _, ok := x.TimeRange.(*TimeFilter_RelativeRange); ok {
		x.TimeRange = nil
	}
}

const TimeFilter_TimeRange_not_set_case case_TimeFilter_TimeRange = 0
const TimeFilter_AbsoluteRange_case case_TimeFilter_TimeRange = 1
const TimeFilter_RelativeRange_case case_TimeFilter_TimeRange = 2

func (x *TimeFilter) WhichTimeRange() case_TimeFilter_TimeRange {
	if x == nil {
		return TimeFilter_TimeRange_not_set_case
	}
	switch x.TimeRange.(type) {
	case *TimeFilter_AbsoluteRange:
		return TimeFilter_AbsoluteRange_case
	case *TimeFilter_RelativeRange:
		return TimeFilter_RelativeRange_case
	default:
		return TimeFilter_TimeRange_not_set_case
	}
}

type TimeFilter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof TimeRange:
	// Absolute time range with specific start/end times
	AbsoluteRange *TimestampRange
	// Relative time range from current time
	RelativeRange *RelativeTimeRange
	// -- end of TimeRange
}

func (b0 TimeFilter_builder) Build() *TimeFilter {
	m0 := &TimeFilter{}
	b, x := &b0, m0
	_, _ = b, x
	if b.AbsoluteRange != nil {
		x.TimeRange = &TimeFilter_AbsoluteRange{b.AbsoluteRange}
	}
	if b.RelativeRange != nil {
		x.TimeRange = &TimeFilter_RelativeRange{b.RelativeRange}
	}
	return m0
}

type case_TimeFilter_TimeRange protoreflect.FieldNumber

func (x case_TimeFilter_TimeRange) String() string {
	md := file_pkg_metrics_proto_types_timestamp_range_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isTimeFilter_TimeRange interface {
	isTimeFilter_TimeRange()
}

type TimeFilter_AbsoluteRange struct {
	// Absolute time range with specific start/end times
	AbsoluteRange *TimestampRange `protobuf:"bytes,1,opt,name=absolute_range,json=absoluteRange,oneof"`
}

type TimeFilter_RelativeRange struct {
	// Relative time range from current time
	RelativeRange *RelativeTimeRange `protobuf:"bytes,2,opt,name=relative_range,json=relativeRange,oneof"`
}

func (*TimeFilter_AbsoluteRange) isTimeFilter_TimeRange() {}

func (*TimeFilter_RelativeRange) isTimeFilter_TimeRange() {}

var File_pkg_metrics_proto_types_timestamp_range_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_types_timestamp_range_proto_rawDesc = "" +
	"\n" +
	"-pkg/metrics/proto/types/timestamp_range.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\xb1\x01\n" +
	"\x0eTimestampRange\x129\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12-\n" +
	"\x04step\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x04step\"\xbd\x01\n" +
	"\x11RelativeTimeRange\x12F\n" +
	"\x11lookback_duration\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x10lookbackDuration\x12-\n" +
	"\x04step\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x04step\x121\n" +
	"\x06offset\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x06offset\"\xb7\x01\n" +
	"\n" +
	"TimeFilter\x12K\n" +
	"\x0eabsolute_range\x18\x01 \x01(\v2\".gcommon.v1.metrics.TimestampRangeH\x00R\rabsoluteRange\x12N\n" +
	"\x0erelative_range\x18\x02 \x01(\v2%.gcommon.v1.metrics.RelativeTimeRangeH\x00R\rrelativeRangeB\f\n" +
	"\n" +
	"time_rangeB\xc5\x01\n" +
	"\x16com.gcommon.v1.metricsB\x13TimestampRangeProtoP\x01Z$../../../../pkg/metrics/pb;metricspb\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_types_timestamp_range_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_metrics_proto_types_timestamp_range_proto_goTypes = []any{
	(*TimestampRange)(nil),        // 0: gcommon.v1.metrics.TimestampRange
	(*RelativeTimeRange)(nil),     // 1: gcommon.v1.metrics.RelativeTimeRange
	(*TimeFilter)(nil),            // 2: gcommon.v1.metrics.TimeFilter
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 4: google.protobuf.Duration
}
var file_pkg_metrics_proto_types_timestamp_range_proto_depIdxs = []int32{
	3, // 0: gcommon.v1.metrics.TimestampRange.start_time:type_name -> google.protobuf.Timestamp
	3, // 1: gcommon.v1.metrics.TimestampRange.end_time:type_name -> google.protobuf.Timestamp
	4, // 2: gcommon.v1.metrics.TimestampRange.step:type_name -> google.protobuf.Duration
	4, // 3: gcommon.v1.metrics.RelativeTimeRange.lookback_duration:type_name -> google.protobuf.Duration
	4, // 4: gcommon.v1.metrics.RelativeTimeRange.step:type_name -> google.protobuf.Duration
	4, // 5: gcommon.v1.metrics.RelativeTimeRange.offset:type_name -> google.protobuf.Duration
	0, // 6: gcommon.v1.metrics.TimeFilter.absolute_range:type_name -> gcommon.v1.metrics.TimestampRange
	1, // 7: gcommon.v1.metrics.TimeFilter.relative_range:type_name -> gcommon.v1.metrics.RelativeTimeRange
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_types_timestamp_range_proto_init() }
func file_pkg_metrics_proto_types_timestamp_range_proto_init() {
	if File_pkg_metrics_proto_types_timestamp_range_proto != nil {
		return
	}
	file_pkg_metrics_proto_types_timestamp_range_proto_msgTypes[2].OneofWrappers = []any{
		(*TimeFilter_AbsoluteRange)(nil),
		(*TimeFilter_RelativeRange)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_types_timestamp_range_proto_rawDesc), len(file_pkg_metrics_proto_types_timestamp_range_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_types_timestamp_range_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_types_timestamp_range_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_types_timestamp_range_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_types_timestamp_range_proto = out.File
	file_pkg_metrics_proto_types_timestamp_range_proto_goTypes = nil
	file_pkg_metrics_proto_types_timestamp_range_proto_depIdxs = nil
}
