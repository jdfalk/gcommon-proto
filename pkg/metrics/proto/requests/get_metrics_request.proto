// filepath: pkg/metrics/proto/requests/get_metrics_request.proto
// file: metrics/proto/requests/get_metrics_request.proto
// version: 1.0.1
// guid: f58f7623-0d53-495a-b959-3ed3770d0b39
//
// Get metrics request definitions for metrics module
//
edition = "2023";

package gcommon.v1.metrics;

import "google/protobuf/go_features.proto";
import "pkg/common/proto/messages/request_metadata.proto";
import "pkg/common/proto/types/pagination_options.proto";
import "pkg/common/proto/types/sort.proto";
import "pkg/metrics/proto/messages/metric_filter.proto";
import "pkg/metrics/proto/enums/metric_aggregation.proto";
import "pkg/metrics/proto/types/time_range.proto";

option go_package = "github.com/jdfalk/gcommon/pkg/metrics/proto;metricspb";
option features.(pb.go).api_level = API_HYBRID;

/**
 * GetMetricsRequest represents a request to retrieve metrics data.
 * Provides filtering, aggregation, and pagination capabilities.
 */
message GetMetricsRequest {
  // Standard request metadata (tracing, auth, etc.)
  gcommon.v1.common.RequestMetadata metadata = 1;

  // Filter to determine which metrics to retrieve
  MetricFilter filter = 2;

  // Time range for the request
  TimeRange time_range = 3;

  // Aggregation options for the metrics
  MetricAggregation aggregation = 4;

  // Pagination options
  gcommon.v1.common.PaginationOptions pagination = 5;

  // Optional provider ID to query
  string provider_id = 6;

  // Output format options
  OutputOptions output_options = 7;

  // Whether to include metadata with results
  bool include_metadata = 8;

  // Maximum number of metrics to return
  int32 limit = 9;
}

/**
 * SecondarySortField defines additional sort criteria.
 */
message SecondarySortField {
  string field = 1;
  gcommon.v1.common.SortDirection direction = 2;
}

/**
 * OutputOptions configures the format of returned data.
 */
message OutputOptions {
  // Format for numeric values
  NumericFormat numeric_format = 1;

  // Whether to include timestamps
  bool include_timestamps = 2;

  // Whether to include labels
  bool include_labels = 3;

  // Compression for large responses
  ResponseCompression compression = 4;

  // Whether to flatten nested structures
  bool flatten_response = 5;

  // Time zone for timestamp formatting
  string timezone = 6;
}

/**
 * NumericFormat defines how numeric values should be formatted.
 */
enum NumericFormat {
  NUMERIC_FORMAT_UNSPECIFIED = 0;
  NUMERIC_FORMAT_DEFAULT = 1;
  NUMERIC_FORMAT_SCIENTIFIC = 2;
  NUMERIC_FORMAT_ENGINEERING = 3;
  NUMERIC_FORMAT_PERCENTAGE = 4;
}

/**
 * ResponseCompression defines compression options for responses.
 */
enum ResponseCompression {
  RESPONSE_COMPRESSION_UNSPECIFIED = 0;
  RESPONSE_COMPRESSION_NONE = 1;
  RESPONSE_COMPRESSION_GZIP = 2;
  RESPONSE_COMPRESSION_SNAPPY = 3;
}
