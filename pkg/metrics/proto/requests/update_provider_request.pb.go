// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/requests/update_provider_request.proto

//go:build !protoopaque

package metricspb

import (
	proto "../../../../pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// UpdateStrategy defines how updates should be applied.
type UpdateStrategy int32

const (
	UpdateStrategy_UPDATE_STRATEGY_UNSPECIFIED UpdateStrategy = 0
	UpdateStrategy_UPDATE_STRATEGY_ROLLING     UpdateStrategy = 1
	UpdateStrategy_UPDATE_STRATEGY_BLUE_GREEN  UpdateStrategy = 2
	UpdateStrategy_UPDATE_STRATEGY_IMMEDIATE   UpdateStrategy = 3
	UpdateStrategy_UPDATE_STRATEGY_SCHEDULED   UpdateStrategy = 4
)

// Enum value maps for UpdateStrategy.
var (
	UpdateStrategy_name = map[int32]string{
		0: "UPDATE_STRATEGY_UNSPECIFIED",
		1: "UPDATE_STRATEGY_ROLLING",
		2: "UPDATE_STRATEGY_BLUE_GREEN",
		3: "UPDATE_STRATEGY_IMMEDIATE",
		4: "UPDATE_STRATEGY_SCHEDULED",
	}
	UpdateStrategy_value = map[string]int32{
		"UPDATE_STRATEGY_UNSPECIFIED": 0,
		"UPDATE_STRATEGY_ROLLING":     1,
		"UPDATE_STRATEGY_BLUE_GREEN":  2,
		"UPDATE_STRATEGY_IMMEDIATE":   3,
		"UPDATE_STRATEGY_SCHEDULED":   4,
	}
)

func (x UpdateStrategy) Enum() *UpdateStrategy {
	p := new(UpdateStrategy)
	*p = x
	return p
}

func (x UpdateStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_metrics_proto_requests_update_provider_request_proto_enumTypes[0].Descriptor()
}

func (UpdateStrategy) Type() protoreflect.EnumType {
	return &file_pkg_metrics_proto_requests_update_provider_request_proto_enumTypes[0]
}

func (x UpdateStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// *
// UpdateProviderRequest represents a request to update an existing metrics provider.
type UpdateProviderRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Standard request metadata (tracing, auth, etc.)
	Metadata *proto.RequestMetadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Provider ID to update
	ProviderId *string `protobuf:"bytes,2,opt,name=provider_id,json=providerId" json:"provider_id,omitempty"`
	// Updated configuration
	ConfigUpdate *ProviderConfigUpdate `protobuf:"bytes,3,opt,name=config_update,json=configUpdate" json:"config_update,omitempty"`
	// Update options
	Options       *UpdateOptions `protobuf:"bytes,4,opt,name=options" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProviderRequest) Reset() {
	*x = UpdateProviderRequest{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProviderRequest) ProtoMessage() {}

func (x *UpdateProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateProviderRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateProviderRequest) GetProviderId() string {
	if x != nil && x.ProviderId != nil {
		return *x.ProviderId
	}
	return ""
}

func (x *UpdateProviderRequest) GetConfigUpdate() *ProviderConfigUpdate {
	if x != nil {
		return x.ConfigUpdate
	}
	return nil
}

func (x *UpdateProviderRequest) GetOptions() *UpdateOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *UpdateProviderRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *UpdateProviderRequest) SetProviderId(v string) {
	x.ProviderId = &v
}

func (x *UpdateProviderRequest) SetConfigUpdate(v *ProviderConfigUpdate) {
	x.ConfigUpdate = v
}

func (x *UpdateProviderRequest) SetOptions(v *UpdateOptions) {
	x.Options = v
}

func (x *UpdateProviderRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *UpdateProviderRequest) HasProviderId() bool {
	if x == nil {
		return false
	}
	return x.ProviderId != nil
}

func (x *UpdateProviderRequest) HasConfigUpdate() bool {
	if x == nil {
		return false
	}
	return x.ConfigUpdate != nil
}

func (x *UpdateProviderRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.Options != nil
}

func (x *UpdateProviderRequest) ClearMetadata() {
	x.Metadata = nil
}

func (x *UpdateProviderRequest) ClearProviderId() {
	x.ProviderId = nil
}

func (x *UpdateProviderRequest) ClearConfigUpdate() {
	x.ConfigUpdate = nil
}

func (x *UpdateProviderRequest) ClearOptions() {
	x.Options = nil
}

type UpdateProviderRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Standard request metadata (tracing, auth, etc.)
	Metadata *proto.RequestMetadata
	// Provider ID to update
	ProviderId *string
	// Updated configuration
	ConfigUpdate *ProviderConfigUpdate
	// Update options
	Options *UpdateOptions
}

func (b0 UpdateProviderRequest_builder) Build() *UpdateProviderRequest {
	m0 := &UpdateProviderRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Metadata = b.Metadata
	x.ProviderId = b.ProviderId
	x.ConfigUpdate = b.ConfigUpdate
	x.Options = b.Options
	return m0
}

// *
// ProviderConfigUpdate contains the configuration updates to apply.
type ProviderConfigUpdate struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Updated name (if changing)
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Updated description (if changing)
	Description *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Provider settings updates
	SettingsUpdate *ProviderSettingsUpdate `protobuf:"bytes,3,opt,name=settings_update,json=settingsUpdate" json:"settings_update,omitempty"`
	// Export configuration updates
	ExportConfigUpdate *ExportConfigUpdate `protobuf:"bytes,4,opt,name=export_config_update,json=exportConfigUpdate" json:"export_config_update,omitempty"`
	// Resource limits updates
	ResourceLimitsUpdate *ResourceLimitsUpdate `protobuf:"bytes,5,opt,name=resource_limits_update,json=resourceLimitsUpdate" json:"resource_limits_update,omitempty"`
	// Security configuration updates
	SecurityConfigUpdate *SecurityConfigUpdate `protobuf:"bytes,6,opt,name=security_config_update,json=securityConfigUpdate" json:"security_config_update,omitempty"`
	// Tag updates
	TagUpdates    *TagUpdates `protobuf:"bytes,7,opt,name=tag_updates,json=tagUpdates" json:"tag_updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderConfigUpdate) Reset() {
	*x = ProviderConfigUpdate{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderConfigUpdate) ProtoMessage() {}

func (x *ProviderConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProviderConfigUpdate) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProviderConfigUpdate) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ProviderConfigUpdate) GetSettingsUpdate() *ProviderSettingsUpdate {
	if x != nil {
		return x.SettingsUpdate
	}
	return nil
}

func (x *ProviderConfigUpdate) GetExportConfigUpdate() *ExportConfigUpdate {
	if x != nil {
		return x.ExportConfigUpdate
	}
	return nil
}

func (x *ProviderConfigUpdate) GetResourceLimitsUpdate() *ResourceLimitsUpdate {
	if x != nil {
		return x.ResourceLimitsUpdate
	}
	return nil
}

func (x *ProviderConfigUpdate) GetSecurityConfigUpdate() *SecurityConfigUpdate {
	if x != nil {
		return x.SecurityConfigUpdate
	}
	return nil
}

func (x *ProviderConfigUpdate) GetTagUpdates() *TagUpdates {
	if x != nil {
		return x.TagUpdates
	}
	return nil
}

func (x *ProviderConfigUpdate) SetName(v string) {
	x.Name = &v
}

func (x *ProviderConfigUpdate) SetDescription(v string) {
	x.Description = &v
}

func (x *ProviderConfigUpdate) SetSettingsUpdate(v *ProviderSettingsUpdate) {
	x.SettingsUpdate = v
}

func (x *ProviderConfigUpdate) SetExportConfigUpdate(v *ExportConfigUpdate) {
	x.ExportConfigUpdate = v
}

func (x *ProviderConfigUpdate) SetResourceLimitsUpdate(v *ResourceLimitsUpdate) {
	x.ResourceLimitsUpdate = v
}

func (x *ProviderConfigUpdate) SetSecurityConfigUpdate(v *SecurityConfigUpdate) {
	x.SecurityConfigUpdate = v
}

func (x *ProviderConfigUpdate) SetTagUpdates(v *TagUpdates) {
	x.TagUpdates = v
}

func (x *ProviderConfigUpdate) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *ProviderConfigUpdate) HasDescription() bool {
	if x == nil {
		return false
	}
	return x.Description != nil
}

func (x *ProviderConfigUpdate) HasSettingsUpdate() bool {
	if x == nil {
		return false
	}
	return x.SettingsUpdate != nil
}

func (x *ProviderConfigUpdate) HasExportConfigUpdate() bool {
	if x == nil {
		return false
	}
	return x.ExportConfigUpdate != nil
}

func (x *ProviderConfigUpdate) HasResourceLimitsUpdate() bool {
	if x == nil {
		return false
	}
	return x.ResourceLimitsUpdate != nil
}

func (x *ProviderConfigUpdate) HasSecurityConfigUpdate() bool {
	if x == nil {
		return false
	}
	return x.SecurityConfigUpdate != nil
}

func (x *ProviderConfigUpdate) HasTagUpdates() bool {
	if x == nil {
		return false
	}
	return x.TagUpdates != nil
}

func (x *ProviderConfigUpdate) ClearName() {
	x.Name = nil
}

func (x *ProviderConfigUpdate) ClearDescription() {
	x.Description = nil
}

func (x *ProviderConfigUpdate) ClearSettingsUpdate() {
	x.SettingsUpdate = nil
}

func (x *ProviderConfigUpdate) ClearExportConfigUpdate() {
	x.ExportConfigUpdate = nil
}

func (x *ProviderConfigUpdate) ClearResourceLimitsUpdate() {
	x.ResourceLimitsUpdate = nil
}

func (x *ProviderConfigUpdate) ClearSecurityConfigUpdate() {
	x.SecurityConfigUpdate = nil
}

func (x *ProviderConfigUpdate) ClearTagUpdates() {
	x.TagUpdates = nil
}

type ProviderConfigUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updated name (if changing)
	Name *string
	// Updated description (if changing)
	Description *string
	// Provider settings updates
	SettingsUpdate *ProviderSettingsUpdate
	// Export configuration updates
	ExportConfigUpdate *ExportConfigUpdate
	// Resource limits updates
	ResourceLimitsUpdate *ResourceLimitsUpdate
	// Security configuration updates
	SecurityConfigUpdate *SecurityConfigUpdate
	// Tag updates
	TagUpdates *TagUpdates
}

func (b0 ProviderConfigUpdate_builder) Build() *ProviderConfigUpdate {
	m0 := &ProviderConfigUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Description = b.Description
	x.SettingsUpdate = b.SettingsUpdate
	x.ExportConfigUpdate = b.ExportConfigUpdate
	x.ResourceLimitsUpdate = b.ResourceLimitsUpdate
	x.SecurityConfigUpdate = b.SecurityConfigUpdate
	x.TagUpdates = b.TagUpdates
	return m0
}

// *
// ProviderSettingsUpdate contains updates to provider-specific settings.
type ProviderSettingsUpdate struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Updates for Prometheus settings
	Prometheus *PrometheusSettingsUpdate `protobuf:"bytes,1,opt,name=prometheus" json:"prometheus,omitempty"`
	// Updates for OpenTelemetry settings
	Opentelemetry *OpenTelemetrySettingsUpdate `protobuf:"bytes,2,opt,name=opentelemetry" json:"opentelemetry,omitempty"`
	// Updates for StatsD settings
	Statsd *StatsDSettingsUpdate `protobuf:"bytes,3,opt,name=statsd" json:"statsd,omitempty"`
	// Updates for custom settings
	CustomUpdates map[string]string `protobuf:"bytes,4,rep,name=custom_updates,json=customUpdates" json:"custom_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Custom settings to remove
	CustomRemoves []string `protobuf:"bytes,5,rep,name=custom_removes,json=customRemoves" json:"custom_removes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderSettingsUpdate) Reset() {
	*x = ProviderSettingsUpdate{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderSettingsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderSettingsUpdate) ProtoMessage() {}

func (x *ProviderSettingsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProviderSettingsUpdate) GetPrometheus() *PrometheusSettingsUpdate {
	if x != nil {
		return x.Prometheus
	}
	return nil
}

func (x *ProviderSettingsUpdate) GetOpentelemetry() *OpenTelemetrySettingsUpdate {
	if x != nil {
		return x.Opentelemetry
	}
	return nil
}

func (x *ProviderSettingsUpdate) GetStatsd() *StatsDSettingsUpdate {
	if x != nil {
		return x.Statsd
	}
	return nil
}

func (x *ProviderSettingsUpdate) GetCustomUpdates() map[string]string {
	if x != nil {
		return x.CustomUpdates
	}
	return nil
}

func (x *ProviderSettingsUpdate) GetCustomRemoves() []string {
	if x != nil {
		return x.CustomRemoves
	}
	return nil
}

func (x *ProviderSettingsUpdate) SetPrometheus(v *PrometheusSettingsUpdate) {
	x.Prometheus = v
}

func (x *ProviderSettingsUpdate) SetOpentelemetry(v *OpenTelemetrySettingsUpdate) {
	x.Opentelemetry = v
}

func (x *ProviderSettingsUpdate) SetStatsd(v *StatsDSettingsUpdate) {
	x.Statsd = v
}

func (x *ProviderSettingsUpdate) SetCustomUpdates(v map[string]string) {
	x.CustomUpdates = v
}

func (x *ProviderSettingsUpdate) SetCustomRemoves(v []string) {
	x.CustomRemoves = v
}

func (x *ProviderSettingsUpdate) HasPrometheus() bool {
	if x == nil {
		return false
	}
	return x.Prometheus != nil
}

func (x *ProviderSettingsUpdate) HasOpentelemetry() bool {
	if x == nil {
		return false
	}
	return x.Opentelemetry != nil
}

func (x *ProviderSettingsUpdate) HasStatsd() bool {
	if x == nil {
		return false
	}
	return x.Statsd != nil
}

func (x *ProviderSettingsUpdate) ClearPrometheus() {
	x.Prometheus = nil
}

func (x *ProviderSettingsUpdate) ClearOpentelemetry() {
	x.Opentelemetry = nil
}

func (x *ProviderSettingsUpdate) ClearStatsd() {
	x.Statsd = nil
}

type ProviderSettingsUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updates for Prometheus settings
	Prometheus *PrometheusSettingsUpdate
	// Updates for OpenTelemetry settings
	Opentelemetry *OpenTelemetrySettingsUpdate
	// Updates for StatsD settings
	Statsd *StatsDSettingsUpdate
	// Updates for custom settings
	CustomUpdates map[string]string
	// Custom settings to remove
	CustomRemoves []string
}

func (b0 ProviderSettingsUpdate_builder) Build() *ProviderSettingsUpdate {
	m0 := &ProviderSettingsUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	x.Prometheus = b.Prometheus
	x.Opentelemetry = b.Opentelemetry
	x.Statsd = b.Statsd
	x.CustomUpdates = b.CustomUpdates
	x.CustomRemoves = b.CustomRemoves
	return m0
}

// *
// PrometheusSettingsUpdate contains updates to Prometheus-specific settings.
type PrometheusSettingsUpdate struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Updated push gateway URL
	PushGatewayUrl *string `protobuf:"bytes,1,opt,name=push_gateway_url,json=pushGatewayUrl" json:"push_gateway_url,omitempty"`
	// Updated job name
	JobName *string `protobuf:"bytes,2,opt,name=job_name,json=jobName" json:"job_name,omitempty"`
	// Updated instance name
	Instance *string `protobuf:"bytes,3,opt,name=instance" json:"instance,omitempty"`
	// Label updates
	LabelUpdates map[string]string `protobuf:"bytes,4,rep,name=label_updates,json=labelUpdates" json:"label_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Labels to remove
	LabelRemoves  []string `protobuf:"bytes,5,rep,name=label_removes,json=labelRemoves" json:"label_removes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrometheusSettingsUpdate) Reset() {
	*x = PrometheusSettingsUpdate{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrometheusSettingsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusSettingsUpdate) ProtoMessage() {}

func (x *PrometheusSettingsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PrometheusSettingsUpdate) GetPushGatewayUrl() string {
	if x != nil && x.PushGatewayUrl != nil {
		return *x.PushGatewayUrl
	}
	return ""
}

func (x *PrometheusSettingsUpdate) GetJobName() string {
	if x != nil && x.JobName != nil {
		return *x.JobName
	}
	return ""
}

func (x *PrometheusSettingsUpdate) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *PrometheusSettingsUpdate) GetLabelUpdates() map[string]string {
	if x != nil {
		return x.LabelUpdates
	}
	return nil
}

func (x *PrometheusSettingsUpdate) GetLabelRemoves() []string {
	if x != nil {
		return x.LabelRemoves
	}
	return nil
}

func (x *PrometheusSettingsUpdate) SetPushGatewayUrl(v string) {
	x.PushGatewayUrl = &v
}

func (x *PrometheusSettingsUpdate) SetJobName(v string) {
	x.JobName = &v
}

func (x *PrometheusSettingsUpdate) SetInstance(v string) {
	x.Instance = &v
}

func (x *PrometheusSettingsUpdate) SetLabelUpdates(v map[string]string) {
	x.LabelUpdates = v
}

func (x *PrometheusSettingsUpdate) SetLabelRemoves(v []string) {
	x.LabelRemoves = v
}

func (x *PrometheusSettingsUpdate) HasPushGatewayUrl() bool {
	if x == nil {
		return false
	}
	return x.PushGatewayUrl != nil
}

func (x *PrometheusSettingsUpdate) HasJobName() bool {
	if x == nil {
		return false
	}
	return x.JobName != nil
}

func (x *PrometheusSettingsUpdate) HasInstance() bool {
	if x == nil {
		return false
	}
	return x.Instance != nil
}

func (x *PrometheusSettingsUpdate) ClearPushGatewayUrl() {
	x.PushGatewayUrl = nil
}

func (x *PrometheusSettingsUpdate) ClearJobName() {
	x.JobName = nil
}

func (x *PrometheusSettingsUpdate) ClearInstance() {
	x.Instance = nil
}

type PrometheusSettingsUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updated push gateway URL
	PushGatewayUrl *string
	// Updated job name
	JobName *string
	// Updated instance name
	Instance *string
	// Label updates
	LabelUpdates map[string]string
	// Labels to remove
	LabelRemoves []string
}

func (b0 PrometheusSettingsUpdate_builder) Build() *PrometheusSettingsUpdate {
	m0 := &PrometheusSettingsUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	x.PushGatewayUrl = b.PushGatewayUrl
	x.JobName = b.JobName
	x.Instance = b.Instance
	x.LabelUpdates = b.LabelUpdates
	x.LabelRemoves = b.LabelRemoves
	return m0
}

// *
// OpenTelemetrySettingsUpdate contains updates to OpenTelemetry settings.
type OpenTelemetrySettingsUpdate struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Updated endpoint
	Endpoint *string `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	// Updated TLS setting
	UseTls *bool `protobuf:"varint,2,opt,name=use_tls,json=useTls" json:"use_tls,omitempty"`
	// Header updates
	HeaderUpdates map[string]string `protobuf:"bytes,3,rep,name=header_updates,json=headerUpdates" json:"header_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Headers to remove
	HeaderRemoves []string `protobuf:"bytes,4,rep,name=header_removes,json=headerRemoves" json:"header_removes,omitempty"`
	// Resource attribute updates
	ResourceAttributeUpdates map[string]string `protobuf:"bytes,5,rep,name=resource_attribute_updates,json=resourceAttributeUpdates" json:"resource_attribute_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Resource attributes to remove
	ResourceAttributeRemoves []string `protobuf:"bytes,6,rep,name=resource_attribute_removes,json=resourceAttributeRemoves" json:"resource_attribute_removes,omitempty"`
	// Updated timeout
	Timeout       *string `protobuf:"bytes,7,opt,name=timeout" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenTelemetrySettingsUpdate) Reset() {
	*x = OpenTelemetrySettingsUpdate{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenTelemetrySettingsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenTelemetrySettingsUpdate) ProtoMessage() {}

func (x *OpenTelemetrySettingsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OpenTelemetrySettingsUpdate) GetEndpoint() string {
	if x != nil && x.Endpoint != nil {
		return *x.Endpoint
	}
	return ""
}

func (x *OpenTelemetrySettingsUpdate) GetUseTls() bool {
	if x != nil && x.UseTls != nil {
		return *x.UseTls
	}
	return false
}

func (x *OpenTelemetrySettingsUpdate) GetHeaderUpdates() map[string]string {
	if x != nil {
		return x.HeaderUpdates
	}
	return nil
}

func (x *OpenTelemetrySettingsUpdate) GetHeaderRemoves() []string {
	if x != nil {
		return x.HeaderRemoves
	}
	return nil
}

func (x *OpenTelemetrySettingsUpdate) GetResourceAttributeUpdates() map[string]string {
	if x != nil {
		return x.ResourceAttributeUpdates
	}
	return nil
}

func (x *OpenTelemetrySettingsUpdate) GetResourceAttributeRemoves() []string {
	if x != nil {
		return x.ResourceAttributeRemoves
	}
	return nil
}

func (x *OpenTelemetrySettingsUpdate) GetTimeout() string {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return ""
}

func (x *OpenTelemetrySettingsUpdate) SetEndpoint(v string) {
	x.Endpoint = &v
}

func (x *OpenTelemetrySettingsUpdate) SetUseTls(v bool) {
	x.UseTls = &v
}

func (x *OpenTelemetrySettingsUpdate) SetHeaderUpdates(v map[string]string) {
	x.HeaderUpdates = v
}

func (x *OpenTelemetrySettingsUpdate) SetHeaderRemoves(v []string) {
	x.HeaderRemoves = v
}

func (x *OpenTelemetrySettingsUpdate) SetResourceAttributeUpdates(v map[string]string) {
	x.ResourceAttributeUpdates = v
}

func (x *OpenTelemetrySettingsUpdate) SetResourceAttributeRemoves(v []string) {
	x.ResourceAttributeRemoves = v
}

func (x *OpenTelemetrySettingsUpdate) SetTimeout(v string) {
	x.Timeout = &v
}

func (x *OpenTelemetrySettingsUpdate) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return x.Endpoint != nil
}

func (x *OpenTelemetrySettingsUpdate) HasUseTls() bool {
	if x == nil {
		return false
	}
	return x.UseTls != nil
}

func (x *OpenTelemetrySettingsUpdate) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.Timeout != nil
}

func (x *OpenTelemetrySettingsUpdate) ClearEndpoint() {
	x.Endpoint = nil
}

func (x *OpenTelemetrySettingsUpdate) ClearUseTls() {
	x.UseTls = nil
}

func (x *OpenTelemetrySettingsUpdate) ClearTimeout() {
	x.Timeout = nil
}

type OpenTelemetrySettingsUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updated endpoint
	Endpoint *string
	// Updated TLS setting
	UseTls *bool
	// Header updates
	HeaderUpdates map[string]string
	// Headers to remove
	HeaderRemoves []string
	// Resource attribute updates
	ResourceAttributeUpdates map[string]string
	// Resource attributes to remove
	ResourceAttributeRemoves []string
	// Updated timeout
	Timeout *string
}

func (b0 OpenTelemetrySettingsUpdate_builder) Build() *OpenTelemetrySettingsUpdate {
	m0 := &OpenTelemetrySettingsUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	x.Endpoint = b.Endpoint
	x.UseTls = b.UseTls
	x.HeaderUpdates = b.HeaderUpdates
	x.HeaderRemoves = b.HeaderRemoves
	x.ResourceAttributeUpdates = b.ResourceAttributeUpdates
	x.ResourceAttributeRemoves = b.ResourceAttributeRemoves
	x.Timeout = b.Timeout
	return m0
}

// *
// StatsDSettingsUpdate contains updates to StatsD settings.
type StatsDSettingsUpdate struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Updated server address
	Address *string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	// Updated protocol
	Protocol *string `protobuf:"bytes,2,opt,name=protocol" json:"protocol,omitempty"`
	// Updated prefix
	Prefix *string `protobuf:"bytes,3,opt,name=prefix" json:"prefix,omitempty"`
	// Updated sample rate
	SampleRate *float64 `protobuf:"fixed64,4,opt,name=sample_rate,json=sampleRate" json:"sample_rate,omitempty"`
	// Updated buffer size
	BufferSize    *int32 `protobuf:"varint,5,opt,name=buffer_size,json=bufferSize" json:"buffer_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsDSettingsUpdate) Reset() {
	*x = StatsDSettingsUpdate{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsDSettingsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsDSettingsUpdate) ProtoMessage() {}

func (x *StatsDSettingsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StatsDSettingsUpdate) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *StatsDSettingsUpdate) GetProtocol() string {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return ""
}

func (x *StatsDSettingsUpdate) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *StatsDSettingsUpdate) GetSampleRate() float64 {
	if x != nil && x.SampleRate != nil {
		return *x.SampleRate
	}
	return 0
}

func (x *StatsDSettingsUpdate) GetBufferSize() int32 {
	if x != nil && x.BufferSize != nil {
		return *x.BufferSize
	}
	return 0
}

func (x *StatsDSettingsUpdate) SetAddress(v string) {
	x.Address = &v
}

func (x *StatsDSettingsUpdate) SetProtocol(v string) {
	x.Protocol = &v
}

func (x *StatsDSettingsUpdate) SetPrefix(v string) {
	x.Prefix = &v
}

func (x *StatsDSettingsUpdate) SetSampleRate(v float64) {
	x.SampleRate = &v
}

func (x *StatsDSettingsUpdate) SetBufferSize(v int32) {
	x.BufferSize = &v
}

func (x *StatsDSettingsUpdate) HasAddress() bool {
	if x == nil {
		return false
	}
	return x.Address != nil
}

func (x *StatsDSettingsUpdate) HasProtocol() bool {
	if x == nil {
		return false
	}
	return x.Protocol != nil
}

func (x *StatsDSettingsUpdate) HasPrefix() bool {
	if x == nil {
		return false
	}
	return x.Prefix != nil
}

func (x *StatsDSettingsUpdate) HasSampleRate() bool {
	if x == nil {
		return false
	}
	return x.SampleRate != nil
}

func (x *StatsDSettingsUpdate) HasBufferSize() bool {
	if x == nil {
		return false
	}
	return x.BufferSize != nil
}

func (x *StatsDSettingsUpdate) ClearAddress() {
	x.Address = nil
}

func (x *StatsDSettingsUpdate) ClearProtocol() {
	x.Protocol = nil
}

func (x *StatsDSettingsUpdate) ClearPrefix() {
	x.Prefix = nil
}

func (x *StatsDSettingsUpdate) ClearSampleRate() {
	x.SampleRate = nil
}

func (x *StatsDSettingsUpdate) ClearBufferSize() {
	x.BufferSize = nil
}

type StatsDSettingsUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updated server address
	Address *string
	// Updated protocol
	Protocol *string
	// Updated prefix
	Prefix *string
	// Updated sample rate
	SampleRate *float64
	// Updated buffer size
	BufferSize *int32
}

func (b0 StatsDSettingsUpdate_builder) Build() *StatsDSettingsUpdate {
	m0 := &StatsDSettingsUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	x.Address = b.Address
	x.Protocol = b.Protocol
	x.Prefix = b.Prefix
	x.SampleRate = b.SampleRate
	x.BufferSize = b.BufferSize
	return m0
}

// *
// ExportConfigUpdate contains updates to export configuration.
type ExportConfigUpdate struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Updated enabled status
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Format updates
	FormatUpdates []string `protobuf:"bytes,2,rep,name=format_updates,json=formatUpdates" json:"format_updates,omitempty"`
	// Formats to remove
	FormatRemoves []string `protobuf:"bytes,3,rep,name=format_removes,json=formatRemoves" json:"format_removes,omitempty"`
	// Destination updates
	DestinationUpdates []*ExportDestinationUpdate `protobuf:"bytes,4,rep,name=destination_updates,json=destinationUpdates" json:"destination_updates,omitempty"`
	// Destinations to remove
	DestinationRemoves []string `protobuf:"bytes,5,rep,name=destination_removes,json=destinationRemoves" json:"destination_removes,omitempty"`
	// Updated export frequency
	Frequency *string `protobuf:"bytes,6,opt,name=frequency" json:"frequency,omitempty"`
	// Updated batch size
	BatchSize     *int32 `protobuf:"varint,7,opt,name=batch_size,json=batchSize" json:"batch_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportConfigUpdate) Reset() {
	*x = ExportConfigUpdate{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportConfigUpdate) ProtoMessage() {}

func (x *ExportConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExportConfigUpdate) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ExportConfigUpdate) GetFormatUpdates() []string {
	if x != nil {
		return x.FormatUpdates
	}
	return nil
}

func (x *ExportConfigUpdate) GetFormatRemoves() []string {
	if x != nil {
		return x.FormatRemoves
	}
	return nil
}

func (x *ExportConfigUpdate) GetDestinationUpdates() []*ExportDestinationUpdate {
	if x != nil {
		return x.DestinationUpdates
	}
	return nil
}

func (x *ExportConfigUpdate) GetDestinationRemoves() []string {
	if x != nil {
		return x.DestinationRemoves
	}
	return nil
}

func (x *ExportConfigUpdate) GetFrequency() string {
	if x != nil && x.Frequency != nil {
		return *x.Frequency
	}
	return ""
}

func (x *ExportConfigUpdate) GetBatchSize() int32 {
	if x != nil && x.BatchSize != nil {
		return *x.BatchSize
	}
	return 0
}

func (x *ExportConfigUpdate) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *ExportConfigUpdate) SetFormatUpdates(v []string) {
	x.FormatUpdates = v
}

func (x *ExportConfigUpdate) SetFormatRemoves(v []string) {
	x.FormatRemoves = v
}

func (x *ExportConfigUpdate) SetDestinationUpdates(v []*ExportDestinationUpdate) {
	x.DestinationUpdates = v
}

func (x *ExportConfigUpdate) SetDestinationRemoves(v []string) {
	x.DestinationRemoves = v
}

func (x *ExportConfigUpdate) SetFrequency(v string) {
	x.Frequency = &v
}

func (x *ExportConfigUpdate) SetBatchSize(v int32) {
	x.BatchSize = &v
}

func (x *ExportConfigUpdate) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *ExportConfigUpdate) HasFrequency() bool {
	if x == nil {
		return false
	}
	return x.Frequency != nil
}

func (x *ExportConfigUpdate) HasBatchSize() bool {
	if x == nil {
		return false
	}
	return x.BatchSize != nil
}

func (x *ExportConfigUpdate) ClearEnabled() {
	x.Enabled = nil
}

func (x *ExportConfigUpdate) ClearFrequency() {
	x.Frequency = nil
}

func (x *ExportConfigUpdate) ClearBatchSize() {
	x.BatchSize = nil
}

type ExportConfigUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updated enabled status
	Enabled *bool
	// Format updates
	FormatUpdates []string
	// Formats to remove
	FormatRemoves []string
	// Destination updates
	DestinationUpdates []*ExportDestinationUpdate
	// Destinations to remove
	DestinationRemoves []string
	// Updated export frequency
	Frequency *string
	// Updated batch size
	BatchSize *int32
}

func (b0 ExportConfigUpdate_builder) Build() *ExportConfigUpdate {
	m0 := &ExportConfigUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	x.Enabled = b.Enabled
	x.FormatUpdates = b.FormatUpdates
	x.FormatRemoves = b.FormatRemoves
	x.DestinationUpdates = b.DestinationUpdates
	x.DestinationRemoves = b.DestinationRemoves
	x.Frequency = b.Frequency
	x.BatchSize = b.BatchSize
	return m0
}

// *
// ExportDestinationUpdate contains updates to an export destination.
type ExportDestinationUpdate struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Destination identifier
	DestinationId *string `protobuf:"bytes,1,opt,name=destination_id,json=destinationId" json:"destination_id,omitempty"`
	// Updated configuration
	ConfigUpdates map[string]string `protobuf:"bytes,2,rep,name=config_updates,json=configUpdates" json:"config_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Configuration keys to remove
	ConfigRemoves []string `protobuf:"bytes,3,rep,name=config_removes,json=configRemoves" json:"config_removes,omitempty"`
	// Updated enabled status
	Enabled       *bool `protobuf:"varint,4,opt,name=enabled" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportDestinationUpdate) Reset() {
	*x = ExportDestinationUpdate{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportDestinationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportDestinationUpdate) ProtoMessage() {}

func (x *ExportDestinationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExportDestinationUpdate) GetDestinationId() string {
	if x != nil && x.DestinationId != nil {
		return *x.DestinationId
	}
	return ""
}

func (x *ExportDestinationUpdate) GetConfigUpdates() map[string]string {
	if x != nil {
		return x.ConfigUpdates
	}
	return nil
}

func (x *ExportDestinationUpdate) GetConfigRemoves() []string {
	if x != nil {
		return x.ConfigRemoves
	}
	return nil
}

func (x *ExportDestinationUpdate) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ExportDestinationUpdate) SetDestinationId(v string) {
	x.DestinationId = &v
}

func (x *ExportDestinationUpdate) SetConfigUpdates(v map[string]string) {
	x.ConfigUpdates = v
}

func (x *ExportDestinationUpdate) SetConfigRemoves(v []string) {
	x.ConfigRemoves = v
}

func (x *ExportDestinationUpdate) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *ExportDestinationUpdate) HasDestinationId() bool {
	if x == nil {
		return false
	}
	return x.DestinationId != nil
}

func (x *ExportDestinationUpdate) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *ExportDestinationUpdate) ClearDestinationId() {
	x.DestinationId = nil
}

func (x *ExportDestinationUpdate) ClearEnabled() {
	x.Enabled = nil
}

type ExportDestinationUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Destination identifier
	DestinationId *string
	// Updated configuration
	ConfigUpdates map[string]string
	// Configuration keys to remove
	ConfigRemoves []string
	// Updated enabled status
	Enabled *bool
}

func (b0 ExportDestinationUpdate_builder) Build() *ExportDestinationUpdate {
	m0 := &ExportDestinationUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	x.DestinationId = b.DestinationId
	x.ConfigUpdates = b.ConfigUpdates
	x.ConfigRemoves = b.ConfigRemoves
	x.Enabled = b.Enabled
	return m0
}

// *
// ResourceLimitsUpdate contains updates to resource limits.
type ResourceLimitsUpdate struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Updated memory limit
	MaxMemoryBytes *int64 `protobuf:"varint,1,opt,name=max_memory_bytes,json=maxMemoryBytes" json:"max_memory_bytes,omitempty"`
	// Updated CPU limit
	MaxCpuPercent *float64 `protobuf:"fixed64,2,opt,name=max_cpu_percent,json=maxCpuPercent" json:"max_cpu_percent,omitempty"`
	// Updated disk limit
	MaxDiskBytes *int64 `protobuf:"varint,3,opt,name=max_disk_bytes,json=maxDiskBytes" json:"max_disk_bytes,omitempty"`
	// Updated metrics limit
	MaxMetrics *int64 `protobuf:"varint,4,opt,name=max_metrics,json=maxMetrics" json:"max_metrics,omitempty"`
	// Updated data points per metric limit
	MaxDataPointsPerMetric *int64 `protobuf:"varint,5,opt,name=max_data_points_per_metric,json=maxDataPointsPerMetric" json:"max_data_points_per_metric,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ResourceLimitsUpdate) Reset() {
	*x = ResourceLimitsUpdate{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceLimitsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimitsUpdate) ProtoMessage() {}

func (x *ResourceLimitsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResourceLimitsUpdate) GetMaxMemoryBytes() int64 {
	if x != nil && x.MaxMemoryBytes != nil {
		return *x.MaxMemoryBytes
	}
	return 0
}

func (x *ResourceLimitsUpdate) GetMaxCpuPercent() float64 {
	if x != nil && x.MaxCpuPercent != nil {
		return *x.MaxCpuPercent
	}
	return 0
}

func (x *ResourceLimitsUpdate) GetMaxDiskBytes() int64 {
	if x != nil && x.MaxDiskBytes != nil {
		return *x.MaxDiskBytes
	}
	return 0
}

func (x *ResourceLimitsUpdate) GetMaxMetrics() int64 {
	if x != nil && x.MaxMetrics != nil {
		return *x.MaxMetrics
	}
	return 0
}

func (x *ResourceLimitsUpdate) GetMaxDataPointsPerMetric() int64 {
	if x != nil && x.MaxDataPointsPerMetric != nil {
		return *x.MaxDataPointsPerMetric
	}
	return 0
}

func (x *ResourceLimitsUpdate) SetMaxMemoryBytes(v int64) {
	x.MaxMemoryBytes = &v
}

func (x *ResourceLimitsUpdate) SetMaxCpuPercent(v float64) {
	x.MaxCpuPercent = &v
}

func (x *ResourceLimitsUpdate) SetMaxDiskBytes(v int64) {
	x.MaxDiskBytes = &v
}

func (x *ResourceLimitsUpdate) SetMaxMetrics(v int64) {
	x.MaxMetrics = &v
}

func (x *ResourceLimitsUpdate) SetMaxDataPointsPerMetric(v int64) {
	x.MaxDataPointsPerMetric = &v
}

func (x *ResourceLimitsUpdate) HasMaxMemoryBytes() bool {
	if x == nil {
		return false
	}
	return x.MaxMemoryBytes != nil
}

func (x *ResourceLimitsUpdate) HasMaxCpuPercent() bool {
	if x == nil {
		return false
	}
	return x.MaxCpuPercent != nil
}

func (x *ResourceLimitsUpdate) HasMaxDiskBytes() bool {
	if x == nil {
		return false
	}
	return x.MaxDiskBytes != nil
}

func (x *ResourceLimitsUpdate) HasMaxMetrics() bool {
	if x == nil {
		return false
	}
	return x.MaxMetrics != nil
}

func (x *ResourceLimitsUpdate) HasMaxDataPointsPerMetric() bool {
	if x == nil {
		return false
	}
	return x.MaxDataPointsPerMetric != nil
}

func (x *ResourceLimitsUpdate) ClearMaxMemoryBytes() {
	x.MaxMemoryBytes = nil
}

func (x *ResourceLimitsUpdate) ClearMaxCpuPercent() {
	x.MaxCpuPercent = nil
}

func (x *ResourceLimitsUpdate) ClearMaxDiskBytes() {
	x.MaxDiskBytes = nil
}

func (x *ResourceLimitsUpdate) ClearMaxMetrics() {
	x.MaxMetrics = nil
}

func (x *ResourceLimitsUpdate) ClearMaxDataPointsPerMetric() {
	x.MaxDataPointsPerMetric = nil
}

type ResourceLimitsUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updated memory limit
	MaxMemoryBytes *int64
	// Updated CPU limit
	MaxCpuPercent *float64
	// Updated disk limit
	MaxDiskBytes *int64
	// Updated metrics limit
	MaxMetrics *int64
	// Updated data points per metric limit
	MaxDataPointsPerMetric *int64
}

func (b0 ResourceLimitsUpdate_builder) Build() *ResourceLimitsUpdate {
	m0 := &ResourceLimitsUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	x.MaxMemoryBytes = b.MaxMemoryBytes
	x.MaxCpuPercent = b.MaxCpuPercent
	x.MaxDiskBytes = b.MaxDiskBytes
	x.MaxMetrics = b.MaxMetrics
	x.MaxDataPointsPerMetric = b.MaxDataPointsPerMetric
	return m0
}

// *
// SecurityConfigUpdate contains updates to security configuration.
type SecurityConfigUpdate struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Updated authentication requirement
	RequireAuth *bool `protobuf:"varint,1,opt,name=require_auth,json=requireAuth" json:"require_auth,omitempty"`
	// Updated authentication methods
	AuthMethods []string `protobuf:"bytes,2,rep,name=auth_methods,json=authMethods" json:"auth_methods,omitempty"`
	// Updated TLS requirement
	RequireTls *bool `protobuf:"varint,3,opt,name=require_tls,json=requireTls" json:"require_tls,omitempty"`
	// TLS configuration updates
	TlsConfigUpdate *TLSConfigUpdate `protobuf:"bytes,4,opt,name=tls_config_update,json=tlsConfigUpdate" json:"tls_config_update,omitempty"`
	// API key configuration updates
	ApiKeyConfigUpdate *APIKeyConfigUpdate `protobuf:"bytes,5,opt,name=api_key_config_update,json=apiKeyConfigUpdate" json:"api_key_config_update,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SecurityConfigUpdate) Reset() {
	*x = SecurityConfigUpdate{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityConfigUpdate) ProtoMessage() {}

func (x *SecurityConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SecurityConfigUpdate) GetRequireAuth() bool {
	if x != nil && x.RequireAuth != nil {
		return *x.RequireAuth
	}
	return false
}

func (x *SecurityConfigUpdate) GetAuthMethods() []string {
	if x != nil {
		return x.AuthMethods
	}
	return nil
}

func (x *SecurityConfigUpdate) GetRequireTls() bool {
	if x != nil && x.RequireTls != nil {
		return *x.RequireTls
	}
	return false
}

func (x *SecurityConfigUpdate) GetTlsConfigUpdate() *TLSConfigUpdate {
	if x != nil {
		return x.TlsConfigUpdate
	}
	return nil
}

func (x *SecurityConfigUpdate) GetApiKeyConfigUpdate() *APIKeyConfigUpdate {
	if x != nil {
		return x.ApiKeyConfigUpdate
	}
	return nil
}

func (x *SecurityConfigUpdate) SetRequireAuth(v bool) {
	x.RequireAuth = &v
}

func (x *SecurityConfigUpdate) SetAuthMethods(v []string) {
	x.AuthMethods = v
}

func (x *SecurityConfigUpdate) SetRequireTls(v bool) {
	x.RequireTls = &v
}

func (x *SecurityConfigUpdate) SetTlsConfigUpdate(v *TLSConfigUpdate) {
	x.TlsConfigUpdate = v
}

func (x *SecurityConfigUpdate) SetApiKeyConfigUpdate(v *APIKeyConfigUpdate) {
	x.ApiKeyConfigUpdate = v
}

func (x *SecurityConfigUpdate) HasRequireAuth() bool {
	if x == nil {
		return false
	}
	return x.RequireAuth != nil
}

func (x *SecurityConfigUpdate) HasRequireTls() bool {
	if x == nil {
		return false
	}
	return x.RequireTls != nil
}

func (x *SecurityConfigUpdate) HasTlsConfigUpdate() bool {
	if x == nil {
		return false
	}
	return x.TlsConfigUpdate != nil
}

func (x *SecurityConfigUpdate) HasApiKeyConfigUpdate() bool {
	if x == nil {
		return false
	}
	return x.ApiKeyConfigUpdate != nil
}

func (x *SecurityConfigUpdate) ClearRequireAuth() {
	x.RequireAuth = nil
}

func (x *SecurityConfigUpdate) ClearRequireTls() {
	x.RequireTls = nil
}

func (x *SecurityConfigUpdate) ClearTlsConfigUpdate() {
	x.TlsConfigUpdate = nil
}

func (x *SecurityConfigUpdate) ClearApiKeyConfigUpdate() {
	x.ApiKeyConfigUpdate = nil
}

type SecurityConfigUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updated authentication requirement
	RequireAuth *bool
	// Updated authentication methods
	AuthMethods []string
	// Updated TLS requirement
	RequireTls *bool
	// TLS configuration updates
	TlsConfigUpdate *TLSConfigUpdate
	// API key configuration updates
	ApiKeyConfigUpdate *APIKeyConfigUpdate
}

func (b0 SecurityConfigUpdate_builder) Build() *SecurityConfigUpdate {
	m0 := &SecurityConfigUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	x.RequireAuth = b.RequireAuth
	x.AuthMethods = b.AuthMethods
	x.RequireTls = b.RequireTls
	x.TlsConfigUpdate = b.TlsConfigUpdate
	x.ApiKeyConfigUpdate = b.ApiKeyConfigUpdate
	return m0
}

// *
// TLSConfigUpdate contains updates to TLS configuration.
type TLSConfigUpdate struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Updated certificate file path
	CertFile *string `protobuf:"bytes,1,opt,name=cert_file,json=certFile" json:"cert_file,omitempty"`
	// Updated private key file path
	KeyFile *string `protobuf:"bytes,2,opt,name=key_file,json=keyFile" json:"key_file,omitempty"`
	// Updated CA certificate file path
	CaFile *string `protobuf:"bytes,3,opt,name=ca_file,json=caFile" json:"ca_file,omitempty"`
	// Updated certificate verification setting
	VerifyCerts   *bool `protobuf:"varint,4,opt,name=verify_certs,json=verifyCerts" json:"verify_certs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSConfigUpdate) Reset() {
	*x = TLSConfigUpdate{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfigUpdate) ProtoMessage() {}

func (x *TLSConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TLSConfigUpdate) GetCertFile() string {
	if x != nil && x.CertFile != nil {
		return *x.CertFile
	}
	return ""
}

func (x *TLSConfigUpdate) GetKeyFile() string {
	if x != nil && x.KeyFile != nil {
		return *x.KeyFile
	}
	return ""
}

func (x *TLSConfigUpdate) GetCaFile() string {
	if x != nil && x.CaFile != nil {
		return *x.CaFile
	}
	return ""
}

func (x *TLSConfigUpdate) GetVerifyCerts() bool {
	if x != nil && x.VerifyCerts != nil {
		return *x.VerifyCerts
	}
	return false
}

func (x *TLSConfigUpdate) SetCertFile(v string) {
	x.CertFile = &v
}

func (x *TLSConfigUpdate) SetKeyFile(v string) {
	x.KeyFile = &v
}

func (x *TLSConfigUpdate) SetCaFile(v string) {
	x.CaFile = &v
}

func (x *TLSConfigUpdate) SetVerifyCerts(v bool) {
	x.VerifyCerts = &v
}

func (x *TLSConfigUpdate) HasCertFile() bool {
	if x == nil {
		return false
	}
	return x.CertFile != nil
}

func (x *TLSConfigUpdate) HasKeyFile() bool {
	if x == nil {
		return false
	}
	return x.KeyFile != nil
}

func (x *TLSConfigUpdate) HasCaFile() bool {
	if x == nil {
		return false
	}
	return x.CaFile != nil
}

func (x *TLSConfigUpdate) HasVerifyCerts() bool {
	if x == nil {
		return false
	}
	return x.VerifyCerts != nil
}

func (x *TLSConfigUpdate) ClearCertFile() {
	x.CertFile = nil
}

func (x *TLSConfigUpdate) ClearKeyFile() {
	x.KeyFile = nil
}

func (x *TLSConfigUpdate) ClearCaFile() {
	x.CaFile = nil
}

func (x *TLSConfigUpdate) ClearVerifyCerts() {
	x.VerifyCerts = nil
}

type TLSConfigUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updated certificate file path
	CertFile *string
	// Updated private key file path
	KeyFile *string
	// Updated CA certificate file path
	CaFile *string
	// Updated certificate verification setting
	VerifyCerts *bool
}

func (b0 TLSConfigUpdate_builder) Build() *TLSConfigUpdate {
	m0 := &TLSConfigUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	x.CertFile = b.CertFile
	x.KeyFile = b.KeyFile
	x.CaFile = b.CaFile
	x.VerifyCerts = b.VerifyCerts
	return m0
}

// *
// APIKeyConfigUpdate contains updates to API key configuration.
type APIKeyConfigUpdate struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Updated header name
	HeaderName *string `protobuf:"bytes,1,opt,name=header_name,json=headerName" json:"header_name,omitempty"`
	// Updated required setting
	Required *bool `protobuf:"varint,2,opt,name=required" json:"required,omitempty"`
	// API key updates
	AllowedKeyUpdates []string `protobuf:"bytes,3,rep,name=allowed_key_updates,json=allowedKeyUpdates" json:"allowed_key_updates,omitempty"`
	// API keys to remove
	AllowedKeyRemoves []string `protobuf:"bytes,4,rep,name=allowed_key_removes,json=allowedKeyRemoves" json:"allowed_key_removes,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *APIKeyConfigUpdate) Reset() {
	*x = APIKeyConfigUpdate{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyConfigUpdate) ProtoMessage() {}

func (x *APIKeyConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *APIKeyConfigUpdate) GetHeaderName() string {
	if x != nil && x.HeaderName != nil {
		return *x.HeaderName
	}
	return ""
}

func (x *APIKeyConfigUpdate) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *APIKeyConfigUpdate) GetAllowedKeyUpdates() []string {
	if x != nil {
		return x.AllowedKeyUpdates
	}
	return nil
}

func (x *APIKeyConfigUpdate) GetAllowedKeyRemoves() []string {
	if x != nil {
		return x.AllowedKeyRemoves
	}
	return nil
}

func (x *APIKeyConfigUpdate) SetHeaderName(v string) {
	x.HeaderName = &v
}

func (x *APIKeyConfigUpdate) SetRequired(v bool) {
	x.Required = &v
}

func (x *APIKeyConfigUpdate) SetAllowedKeyUpdates(v []string) {
	x.AllowedKeyUpdates = v
}

func (x *APIKeyConfigUpdate) SetAllowedKeyRemoves(v []string) {
	x.AllowedKeyRemoves = v
}

func (x *APIKeyConfigUpdate) HasHeaderName() bool {
	if x == nil {
		return false
	}
	return x.HeaderName != nil
}

func (x *APIKeyConfigUpdate) HasRequired() bool {
	if x == nil {
		return false
	}
	return x.Required != nil
}

func (x *APIKeyConfigUpdate) ClearHeaderName() {
	x.HeaderName = nil
}

func (x *APIKeyConfigUpdate) ClearRequired() {
	x.Required = nil
}

type APIKeyConfigUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Updated header name
	HeaderName *string
	// Updated required setting
	Required *bool
	// API key updates
	AllowedKeyUpdates []string
	// API keys to remove
	AllowedKeyRemoves []string
}

func (b0 APIKeyConfigUpdate_builder) Build() *APIKeyConfigUpdate {
	m0 := &APIKeyConfigUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	x.HeaderName = b.HeaderName
	x.Required = b.Required
	x.AllowedKeyUpdates = b.AllowedKeyUpdates
	x.AllowedKeyRemoves = b.AllowedKeyRemoves
	return m0
}

// *
// TagUpdates contains tag update operations.
type TagUpdates struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Tags to add or update
	TagUpdates map[string]string `protobuf:"bytes,1,rep,name=tag_updates,json=tagUpdates" json:"tag_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Tag keys to remove
	TagRemoves    []string `protobuf:"bytes,2,rep,name=tag_removes,json=tagRemoves" json:"tag_removes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagUpdates) Reset() {
	*x = TagUpdates{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagUpdates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagUpdates) ProtoMessage() {}

func (x *TagUpdates) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TagUpdates) GetTagUpdates() map[string]string {
	if x != nil {
		return x.TagUpdates
	}
	return nil
}

func (x *TagUpdates) GetTagRemoves() []string {
	if x != nil {
		return x.TagRemoves
	}
	return nil
}

func (x *TagUpdates) SetTagUpdates(v map[string]string) {
	x.TagUpdates = v
}

func (x *TagUpdates) SetTagRemoves(v []string) {
	x.TagRemoves = v
}

type TagUpdates_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Tags to add or update
	TagUpdates map[string]string
	// Tag keys to remove
	TagRemoves []string
}

func (b0 TagUpdates_builder) Build() *TagUpdates {
	m0 := &TagUpdates{}
	b, x := &b0, m0
	_, _ = b, x
	x.TagUpdates = b.TagUpdates
	x.TagRemoves = b.TagRemoves
	return m0
}

// *
// UpdateOptions configure the update process.
type UpdateOptions struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Whether to validate the configuration before updating
	ValidateConfig *bool `protobuf:"varint,1,opt,name=validate_config,json=validateConfig" json:"validate_config,omitempty"`
	// Whether to perform a dry run
	DryRun *bool `protobuf:"varint,2,opt,name=dry_run,json=dryRun" json:"dry_run,omitempty"`
	// Whether to restart the provider after update (if needed)
	RestartIfNeeded *bool `protobuf:"varint,3,opt,name=restart_if_needed,json=restartIfNeeded" json:"restart_if_needed,omitempty"`
	// Whether to backup current configuration before update
	BackupConfig *bool `protobuf:"varint,4,opt,name=backup_config,json=backupConfig" json:"backup_config,omitempty"`
	// Update strategy
	Strategy      *UpdateStrategy `protobuf:"varint,5,opt,name=strategy,enum=gcommon.v1.metrics.UpdateStrategy" json:"strategy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOptions) Reset() {
	*x = UpdateOptions{}
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOptions) ProtoMessage() {}

func (x *UpdateOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateOptions) GetValidateConfig() bool {
	if x != nil && x.ValidateConfig != nil {
		return *x.ValidateConfig
	}
	return false
}

func (x *UpdateOptions) GetDryRun() bool {
	if x != nil && x.DryRun != nil {
		return *x.DryRun
	}
	return false
}

func (x *UpdateOptions) GetRestartIfNeeded() bool {
	if x != nil && x.RestartIfNeeded != nil {
		return *x.RestartIfNeeded
	}
	return false
}

func (x *UpdateOptions) GetBackupConfig() bool {
	if x != nil && x.BackupConfig != nil {
		return *x.BackupConfig
	}
	return false
}

func (x *UpdateOptions) GetStrategy() UpdateStrategy {
	if x != nil && x.Strategy != nil {
		return *x.Strategy
	}
	return UpdateStrategy_UPDATE_STRATEGY_UNSPECIFIED
}

func (x *UpdateOptions) SetValidateConfig(v bool) {
	x.ValidateConfig = &v
}

func (x *UpdateOptions) SetDryRun(v bool) {
	x.DryRun = &v
}

func (x *UpdateOptions) SetRestartIfNeeded(v bool) {
	x.RestartIfNeeded = &v
}

func (x *UpdateOptions) SetBackupConfig(v bool) {
	x.BackupConfig = &v
}

func (x *UpdateOptions) SetStrategy(v UpdateStrategy) {
	x.Strategy = &v
}

func (x *UpdateOptions) HasValidateConfig() bool {
	if x == nil {
		return false
	}
	return x.ValidateConfig != nil
}

func (x *UpdateOptions) HasDryRun() bool {
	if x == nil {
		return false
	}
	return x.DryRun != nil
}

func (x *UpdateOptions) HasRestartIfNeeded() bool {
	if x == nil {
		return false
	}
	return x.RestartIfNeeded != nil
}

func (x *UpdateOptions) HasBackupConfig() bool {
	if x == nil {
		return false
	}
	return x.BackupConfig != nil
}

func (x *UpdateOptions) HasStrategy() bool {
	if x == nil {
		return false
	}
	return x.Strategy != nil
}

func (x *UpdateOptions) ClearValidateConfig() {
	x.ValidateConfig = nil
}

func (x *UpdateOptions) ClearDryRun() {
	x.DryRun = nil
}

func (x *UpdateOptions) ClearRestartIfNeeded() {
	x.RestartIfNeeded = nil
}

func (x *UpdateOptions) ClearBackupConfig() {
	x.BackupConfig = nil
}

func (x *UpdateOptions) ClearStrategy() {
	x.Strategy = nil
}

type UpdateOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether to validate the configuration before updating
	ValidateConfig *bool
	// Whether to perform a dry run
	DryRun *bool
	// Whether to restart the provider after update (if needed)
	RestartIfNeeded *bool
	// Whether to backup current configuration before update
	BackupConfig *bool
	// Update strategy
	Strategy *UpdateStrategy
}

func (b0 UpdateOptions_builder) Build() *UpdateOptions {
	m0 := &UpdateOptions{}
	b, x := &b0, m0
	_, _ = b, x
	x.ValidateConfig = b.ValidateConfig
	x.DryRun = b.DryRun
	x.RestartIfNeeded = b.RestartIfNeeded
	x.BackupConfig = b.BackupConfig
	x.Strategy = b.Strategy
	return m0
}

var File_pkg_metrics_proto_requests_update_provider_request_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_requests_update_provider_request_proto_rawDesc = "" +
	"\n" +
	"8pkg/metrics/proto/requests/update_provider_request.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a0pkg/common/proto/messages/request_metadata.proto\"\x84\x02\n" +
	"\x15UpdateProviderRequest\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x12\x1f\n" +
	"\vprovider_id\x18\x02 \x01(\tR\n" +
	"providerId\x12M\n" +
	"\rconfig_update\x18\x03 \x01(\v2(.gcommon.v1.metrics.ProviderConfigUpdateR\fconfigUpdate\x12;\n" +
	"\aoptions\x18\x04 \x01(\v2!.gcommon.v1.metrics.UpdateOptionsR\aoptions\"\xfc\x03\n" +
	"\x14ProviderConfigUpdate\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12S\n" +
	"\x0fsettings_update\x18\x03 \x01(\v2*.gcommon.v1.metrics.ProviderSettingsUpdateR\x0esettingsUpdate\x12X\n" +
	"\x14export_config_update\x18\x04 \x01(\v2&.gcommon.v1.metrics.ExportConfigUpdateR\x12exportConfigUpdate\x12^\n" +
	"\x16resource_limits_update\x18\x05 \x01(\v2(.gcommon.v1.metrics.ResourceLimitsUpdateR\x14resourceLimitsUpdate\x12^\n" +
	"\x16security_config_update\x18\x06 \x01(\v2(.gcommon.v1.metrics.SecurityConfigUpdateR\x14securityConfigUpdate\x12?\n" +
	"\vtag_updates\x18\a \x01(\v2\x1e.gcommon.v1.metrics.TagUpdatesR\n" +
	"tagUpdates\"\xce\x03\n" +
	"\x16ProviderSettingsUpdate\x12L\n" +
	"\n" +
	"prometheus\x18\x01 \x01(\v2,.gcommon.v1.metrics.PrometheusSettingsUpdateR\n" +
	"prometheus\x12U\n" +
	"\ropentelemetry\x18\x02 \x01(\v2/.gcommon.v1.metrics.OpenTelemetrySettingsUpdateR\ropentelemetry\x12@\n" +
	"\x06statsd\x18\x03 \x01(\v2(.gcommon.v1.metrics.StatsDSettingsUpdateR\x06statsd\x12d\n" +
	"\x0ecustom_updates\x18\x04 \x03(\v2=.gcommon.v1.metrics.ProviderSettingsUpdate.CustomUpdatesEntryR\rcustomUpdates\x12%\n" +
	"\x0ecustom_removes\x18\x05 \x03(\tR\rcustomRemoves\x1a@\n" +
	"\x12CustomUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc6\x02\n" +
	"\x18PrometheusSettingsUpdate\x12(\n" +
	"\x10push_gateway_url\x18\x01 \x01(\tR\x0epushGatewayUrl\x12\x19\n" +
	"\bjob_name\x18\x02 \x01(\tR\ajobName\x12\x1a\n" +
	"\binstance\x18\x03 \x01(\tR\binstance\x12c\n" +
	"\rlabel_updates\x18\x04 \x03(\v2>.gcommon.v1.metrics.PrometheusSettingsUpdate.LabelUpdatesEntryR\flabelUpdates\x12#\n" +
	"\rlabel_removes\x18\x05 \x03(\tR\flabelRemoves\x1a?\n" +
	"\x11LabelUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd9\x04\n" +
	"\x1bOpenTelemetrySettingsUpdate\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x17\n" +
	"\ause_tls\x18\x02 \x01(\bR\x06useTls\x12i\n" +
	"\x0eheader_updates\x18\x03 \x03(\v2B.gcommon.v1.metrics.OpenTelemetrySettingsUpdate.HeaderUpdatesEntryR\rheaderUpdates\x12%\n" +
	"\x0eheader_removes\x18\x04 \x03(\tR\rheaderRemoves\x12\x8b\x01\n" +
	"\x1aresource_attribute_updates\x18\x05 \x03(\v2M.gcommon.v1.metrics.OpenTelemetrySettingsUpdate.ResourceAttributeUpdatesEntryR\x18resourceAttributeUpdates\x12<\n" +
	"\x1aresource_attribute_removes\x18\x06 \x03(\tR\x18resourceAttributeRemoves\x12\x18\n" +
	"\atimeout\x18\a \x01(\tR\atimeout\x1a@\n" +
	"\x12HeaderUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aK\n" +
	"\x1dResourceAttributeUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\x01\n" +
	"\x14StatsDSettingsUpdate\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x1a\n" +
	"\bprotocol\x18\x02 \x01(\tR\bprotocol\x12\x16\n" +
	"\x06prefix\x18\x03 \x01(\tR\x06prefix\x12\x1f\n" +
	"\vsample_rate\x18\x04 \x01(\x01R\n" +
	"sampleRate\x12\x1f\n" +
	"\vbuffer_size\x18\x05 \x01(\x05R\n" +
	"bufferSize\"\xc8\x02\n" +
	"\x12ExportConfigUpdate\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12%\n" +
	"\x0eformat_updates\x18\x02 \x03(\tR\rformatUpdates\x12%\n" +
	"\x0eformat_removes\x18\x03 \x03(\tR\rformatRemoves\x12\\\n" +
	"\x13destination_updates\x18\x04 \x03(\v2+.gcommon.v1.metrics.ExportDestinationUpdateR\x12destinationUpdates\x12/\n" +
	"\x13destination_removes\x18\x05 \x03(\tR\x12destinationRemoves\x12\x1c\n" +
	"\tfrequency\x18\x06 \x01(\tR\tfrequency\x12\x1d\n" +
	"\n" +
	"batch_size\x18\a \x01(\x05R\tbatchSize\"\xaa\x02\n" +
	"\x17ExportDestinationUpdate\x12%\n" +
	"\x0edestination_id\x18\x01 \x01(\tR\rdestinationId\x12e\n" +
	"\x0econfig_updates\x18\x02 \x03(\v2>.gcommon.v1.metrics.ExportDestinationUpdate.ConfigUpdatesEntryR\rconfigUpdates\x12%\n" +
	"\x0econfig_removes\x18\x03 \x03(\tR\rconfigRemoves\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\x1a@\n" +
	"\x12ConfigUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xeb\x01\n" +
	"\x14ResourceLimitsUpdate\x12(\n" +
	"\x10max_memory_bytes\x18\x01 \x01(\x03R\x0emaxMemoryBytes\x12&\n" +
	"\x0fmax_cpu_percent\x18\x02 \x01(\x01R\rmaxCpuPercent\x12$\n" +
	"\x0emax_disk_bytes\x18\x03 \x01(\x03R\fmaxDiskBytes\x12\x1f\n" +
	"\vmax_metrics\x18\x04 \x01(\x03R\n" +
	"maxMetrics\x12:\n" +
	"\x1amax_data_points_per_metric\x18\x05 \x01(\x03R\x16maxDataPointsPerMetric\"\xa9\x02\n" +
	"\x14SecurityConfigUpdate\x12!\n" +
	"\frequire_auth\x18\x01 \x01(\bR\vrequireAuth\x12!\n" +
	"\fauth_methods\x18\x02 \x03(\tR\vauthMethods\x12\x1f\n" +
	"\vrequire_tls\x18\x03 \x01(\bR\n" +
	"requireTls\x12O\n" +
	"\x11tls_config_update\x18\x04 \x01(\v2#.gcommon.v1.metrics.TLSConfigUpdateR\x0ftlsConfigUpdate\x12Y\n" +
	"\x15api_key_config_update\x18\x05 \x01(\v2&.gcommon.v1.metrics.APIKeyConfigUpdateR\x12apiKeyConfigUpdate\"\x85\x01\n" +
	"\x0fTLSConfigUpdate\x12\x1b\n" +
	"\tcert_file\x18\x01 \x01(\tR\bcertFile\x12\x19\n" +
	"\bkey_file\x18\x02 \x01(\tR\akeyFile\x12\x17\n" +
	"\aca_file\x18\x03 \x01(\tR\x06caFile\x12!\n" +
	"\fverify_certs\x18\x04 \x01(\bR\vverifyCerts\"\xb1\x01\n" +
	"\x12APIKeyConfigUpdate\x12\x1f\n" +
	"\vheader_name\x18\x01 \x01(\tR\n" +
	"headerName\x12\x1a\n" +
	"\brequired\x18\x02 \x01(\bR\brequired\x12.\n" +
	"\x13allowed_key_updates\x18\x03 \x03(\tR\x11allowedKeyUpdates\x12.\n" +
	"\x13allowed_key_removes\x18\x04 \x03(\tR\x11allowedKeyRemoves\"\xbd\x01\n" +
	"\n" +
	"TagUpdates\x12O\n" +
	"\vtag_updates\x18\x01 \x03(\v2..gcommon.v1.metrics.TagUpdates.TagUpdatesEntryR\n" +
	"tagUpdates\x12\x1f\n" +
	"\vtag_removes\x18\x02 \x03(\tR\n" +
	"tagRemoves\x1a=\n" +
	"\x0fTagUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe2\x01\n" +
	"\rUpdateOptions\x12'\n" +
	"\x0fvalidate_config\x18\x01 \x01(\bR\x0evalidateConfig\x12\x17\n" +
	"\adry_run\x18\x02 \x01(\bR\x06dryRun\x12*\n" +
	"\x11restart_if_needed\x18\x03 \x01(\bR\x0frestartIfNeeded\x12#\n" +
	"\rbackup_config\x18\x04 \x01(\bR\fbackupConfig\x12>\n" +
	"\bstrategy\x18\x05 \x01(\x0e2\".gcommon.v1.metrics.UpdateStrategyR\bstrategy*\xac\x01\n" +
	"\x0eUpdateStrategy\x12\x1f\n" +
	"\x1bUPDATE_STRATEGY_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17UPDATE_STRATEGY_ROLLING\x10\x01\x12\x1e\n" +
	"\x1aUPDATE_STRATEGY_BLUE_GREEN\x10\x02\x12\x1d\n" +
	"\x19UPDATE_STRATEGY_IMMEDIATE\x10\x03\x12\x1d\n" +
	"\x19UPDATE_STRATEGY_SCHEDULED\x10\x04B\xcf\x01\n" +
	"\x16com.gcommon.v1.metricsB\x1aUpdateProviderRequestProtoP\x01Z'../../../../pkg/metrics/proto;metricspb\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_requests_update_provider_request_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_pkg_metrics_proto_requests_update_provider_request_proto_goTypes = []any{
	(UpdateStrategy)(0),                 // 0: gcommon.v1.metrics.UpdateStrategy
	(*UpdateProviderRequest)(nil),       // 1: gcommon.v1.metrics.UpdateProviderRequest
	(*ProviderConfigUpdate)(nil),        // 2: gcommon.v1.metrics.ProviderConfigUpdate
	(*ProviderSettingsUpdate)(nil),      // 3: gcommon.v1.metrics.ProviderSettingsUpdate
	(*PrometheusSettingsUpdate)(nil),    // 4: gcommon.v1.metrics.PrometheusSettingsUpdate
	(*OpenTelemetrySettingsUpdate)(nil), // 5: gcommon.v1.metrics.OpenTelemetrySettingsUpdate
	(*StatsDSettingsUpdate)(nil),        // 6: gcommon.v1.metrics.StatsDSettingsUpdate
	(*ExportConfigUpdate)(nil),          // 7: gcommon.v1.metrics.ExportConfigUpdate
	(*ExportDestinationUpdate)(nil),     // 8: gcommon.v1.metrics.ExportDestinationUpdate
	(*ResourceLimitsUpdate)(nil),        // 9: gcommon.v1.metrics.ResourceLimitsUpdate
	(*SecurityConfigUpdate)(nil),        // 10: gcommon.v1.metrics.SecurityConfigUpdate
	(*TLSConfigUpdate)(nil),             // 11: gcommon.v1.metrics.TLSConfigUpdate
	(*APIKeyConfigUpdate)(nil),          // 12: gcommon.v1.metrics.APIKeyConfigUpdate
	(*TagUpdates)(nil),                  // 13: gcommon.v1.metrics.TagUpdates
	(*UpdateOptions)(nil),               // 14: gcommon.v1.metrics.UpdateOptions
	nil,                                 // 15: gcommon.v1.metrics.ProviderSettingsUpdate.CustomUpdatesEntry
	nil,                                 // 16: gcommon.v1.metrics.PrometheusSettingsUpdate.LabelUpdatesEntry
	nil,                                 // 17: gcommon.v1.metrics.OpenTelemetrySettingsUpdate.HeaderUpdatesEntry
	nil,                                 // 18: gcommon.v1.metrics.OpenTelemetrySettingsUpdate.ResourceAttributeUpdatesEntry
	nil,                                 // 19: gcommon.v1.metrics.ExportDestinationUpdate.ConfigUpdatesEntry
	nil,                                 // 20: gcommon.v1.metrics.TagUpdates.TagUpdatesEntry
	(*proto.RequestMetadata)(nil),       // 21: gcommon.v1.common.RequestMetadata
}
var file_pkg_metrics_proto_requests_update_provider_request_proto_depIdxs = []int32{
	21, // 0: gcommon.v1.metrics.UpdateProviderRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	2,  // 1: gcommon.v1.metrics.UpdateProviderRequest.config_update:type_name -> gcommon.v1.metrics.ProviderConfigUpdate
	14, // 2: gcommon.v1.metrics.UpdateProviderRequest.options:type_name -> gcommon.v1.metrics.UpdateOptions
	3,  // 3: gcommon.v1.metrics.ProviderConfigUpdate.settings_update:type_name -> gcommon.v1.metrics.ProviderSettingsUpdate
	7,  // 4: gcommon.v1.metrics.ProviderConfigUpdate.export_config_update:type_name -> gcommon.v1.metrics.ExportConfigUpdate
	9,  // 5: gcommon.v1.metrics.ProviderConfigUpdate.resource_limits_update:type_name -> gcommon.v1.metrics.ResourceLimitsUpdate
	10, // 6: gcommon.v1.metrics.ProviderConfigUpdate.security_config_update:type_name -> gcommon.v1.metrics.SecurityConfigUpdate
	13, // 7: gcommon.v1.metrics.ProviderConfigUpdate.tag_updates:type_name -> gcommon.v1.metrics.TagUpdates
	4,  // 8: gcommon.v1.metrics.ProviderSettingsUpdate.prometheus:type_name -> gcommon.v1.metrics.PrometheusSettingsUpdate
	5,  // 9: gcommon.v1.metrics.ProviderSettingsUpdate.opentelemetry:type_name -> gcommon.v1.metrics.OpenTelemetrySettingsUpdate
	6,  // 10: gcommon.v1.metrics.ProviderSettingsUpdate.statsd:type_name -> gcommon.v1.metrics.StatsDSettingsUpdate
	15, // 11: gcommon.v1.metrics.ProviderSettingsUpdate.custom_updates:type_name -> gcommon.v1.metrics.ProviderSettingsUpdate.CustomUpdatesEntry
	16, // 12: gcommon.v1.metrics.PrometheusSettingsUpdate.label_updates:type_name -> gcommon.v1.metrics.PrometheusSettingsUpdate.LabelUpdatesEntry
	17, // 13: gcommon.v1.metrics.OpenTelemetrySettingsUpdate.header_updates:type_name -> gcommon.v1.metrics.OpenTelemetrySettingsUpdate.HeaderUpdatesEntry
	18, // 14: gcommon.v1.metrics.OpenTelemetrySettingsUpdate.resource_attribute_updates:type_name -> gcommon.v1.metrics.OpenTelemetrySettingsUpdate.ResourceAttributeUpdatesEntry
	8,  // 15: gcommon.v1.metrics.ExportConfigUpdate.destination_updates:type_name -> gcommon.v1.metrics.ExportDestinationUpdate
	19, // 16: gcommon.v1.metrics.ExportDestinationUpdate.config_updates:type_name -> gcommon.v1.metrics.ExportDestinationUpdate.ConfigUpdatesEntry
	11, // 17: gcommon.v1.metrics.SecurityConfigUpdate.tls_config_update:type_name -> gcommon.v1.metrics.TLSConfigUpdate
	12, // 18: gcommon.v1.metrics.SecurityConfigUpdate.api_key_config_update:type_name -> gcommon.v1.metrics.APIKeyConfigUpdate
	20, // 19: gcommon.v1.metrics.TagUpdates.tag_updates:type_name -> gcommon.v1.metrics.TagUpdates.TagUpdatesEntry
	0,  // 20: gcommon.v1.metrics.UpdateOptions.strategy:type_name -> gcommon.v1.metrics.UpdateStrategy
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_requests_update_provider_request_proto_init() }
func file_pkg_metrics_proto_requests_update_provider_request_proto_init() {
	if File_pkg_metrics_proto_requests_update_provider_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_requests_update_provider_request_proto_rawDesc), len(file_pkg_metrics_proto_requests_update_provider_request_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_requests_update_provider_request_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_requests_update_provider_request_proto_depIdxs,
		EnumInfos:         file_pkg_metrics_proto_requests_update_provider_request_proto_enumTypes,
		MessageInfos:      file_pkg_metrics_proto_requests_update_provider_request_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_requests_update_provider_request_proto = out.File
	file_pkg_metrics_proto_requests_update_provider_request_proto_goTypes = nil
	file_pkg_metrics_proto_requests_update_provider_request_proto_depIdxs = nil
}
