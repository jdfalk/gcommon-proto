// filepath: pkg/metrics/proto/requests/get_provider_stats_request.proto
// file: metrics/proto/requests/get_provider_stats_request.proto
//
// Get provider stats request definitions for metrics module
//
edition = "2023";

package gcommon.v1.metrics;

import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";
import "pkg/common/proto/messages/request_metadata.proto";

option go_package = "github.com/jdfalk/gcommon/pkg/metrics/proto;metricspb";
option features.(pb.go).api_level = API_HYBRID;

/**
 * GetProviderStatsRequest represents a request to get statistics for a metrics provider.
 */
message GetProviderStatsRequest {
  // Standard request metadata (tracing, auth, etc.)
  gcommon.v1.common.RequestMetadata metadata = 1;

  // Provider ID to get stats for
  string provider_id = 2;

  // Time range for statistics
  TimeRange time_range = 3;

  // What statistics to include
  StatsOptions options = 4;

  // Granularity for time-series statistics
  string granularity = 5; // e.g., "1m", "5m", "1h"

  // Whether to include real-time metrics
  bool include_realtime = 6;
}

/**
 * TimeRange specifies a time range for statistics.
 */
message TimeRange {
  // Start time (inclusive)
  google.protobuf.Timestamp start_time = 1;

  // End time (exclusive)
  google.protobuf.Timestamp end_time = 2;

  // Duration from now (alternative to start/end times)
  string duration = 3; // e.g., "1h", "24h", "7d"
}

/**
 * StatsOptions configures what statistics to include.
 */
message StatsOptions {
  // Include performance statistics
  bool include_performance = 1;

  // Include resource usage statistics
  bool include_resource_usage = 2;

  // Include error statistics
  bool include_errors = 3;

  // Include data volume statistics
  bool include_data_volume = 4;

  // Include export statistics
  bool include_exports = 5;

  // Include health status history
  bool include_health_history = 6;

  // Include configuration information
  bool include_config = 7;

  // Include top metrics by various criteria
  bool include_top_metrics = 8;

  // Maximum number of top metrics to include
  int32 top_metrics_limit = 9;

  // Include trend analysis
  bool include_trends = 10;
}