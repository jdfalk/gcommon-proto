// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/requests/get_metrics_summary_request.proto

//go:build !protoopaque

package metricspb

import (
	pb "../../../../pkg/common/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// GetMetricsSummaryRequest represents a request to get a summary of metrics data.
// This provides aggregate information about metrics without returning the full data.
type GetMetricsSummaryRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Standard request metadata (tracing, auth, etc.)
	Metadata *pb.RequestMetadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Optional filter to limit which metrics to include in summary
	Filter *MetricFilter `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	// Time range for the summary
	TimeRange *TimeRange `protobuf:"bytes,3,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	// What summary information to include
	Options *SummaryOptions `protobuf:"bytes,4,opt,name=options" json:"options,omitempty"`
	// Optional provider ID to query
	ProviderId *string `protobuf:"bytes,5,opt,name=provider_id,json=providerId" json:"provider_id,omitempty"`
	// Whether to include provider-level statistics
	IncludeProviderStats *bool `protobuf:"varint,6,opt,name=include_provider_stats,json=includeProviderStats" json:"include_provider_stats,omitempty"`
	// Whether to include health status information
	IncludeHealthStatus *bool `protobuf:"varint,7,opt,name=include_health_status,json=includeHealthStatus" json:"include_health_status,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetMetricsSummaryRequest) Reset() {
	*x = GetMetricsSummaryRequest{}
	mi := &file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsSummaryRequest) ProtoMessage() {}

func (x *GetMetricsSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetMetricsSummaryRequest) GetMetadata() *pb.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetMetricsSummaryRequest) GetFilter() *MetricFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetMetricsSummaryRequest) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetMetricsSummaryRequest) GetOptions() *SummaryOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GetMetricsSummaryRequest) GetProviderId() string {
	if x != nil && x.ProviderId != nil {
		return *x.ProviderId
	}
	return ""
}

func (x *GetMetricsSummaryRequest) GetIncludeProviderStats() bool {
	if x != nil && x.IncludeProviderStats != nil {
		return *x.IncludeProviderStats
	}
	return false
}

func (x *GetMetricsSummaryRequest) GetIncludeHealthStatus() bool {
	if x != nil && x.IncludeHealthStatus != nil {
		return *x.IncludeHealthStatus
	}
	return false
}

func (x *GetMetricsSummaryRequest) SetMetadata(v *pb.RequestMetadata) {
	x.Metadata = v
}

func (x *GetMetricsSummaryRequest) SetFilter(v *MetricFilter) {
	x.Filter = v
}

func (x *GetMetricsSummaryRequest) SetTimeRange(v *TimeRange) {
	x.TimeRange = v
}

func (x *GetMetricsSummaryRequest) SetOptions(v *SummaryOptions) {
	x.Options = v
}

func (x *GetMetricsSummaryRequest) SetProviderId(v string) {
	x.ProviderId = &v
}

func (x *GetMetricsSummaryRequest) SetIncludeProviderStats(v bool) {
	x.IncludeProviderStats = &v
}

func (x *GetMetricsSummaryRequest) SetIncludeHealthStatus(v bool) {
	x.IncludeHealthStatus = &v
}

func (x *GetMetricsSummaryRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetMetricsSummaryRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.Filter != nil
}

func (x *GetMetricsSummaryRequest) HasTimeRange() bool {
	if x == nil {
		return false
	}
	return x.TimeRange != nil
}

func (x *GetMetricsSummaryRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.Options != nil
}

func (x *GetMetricsSummaryRequest) HasProviderId() bool {
	if x == nil {
		return false
	}
	return x.ProviderId != nil
}

func (x *GetMetricsSummaryRequest) HasIncludeProviderStats() bool {
	if x == nil {
		return false
	}
	return x.IncludeProviderStats != nil
}

func (x *GetMetricsSummaryRequest) HasIncludeHealthStatus() bool {
	if x == nil {
		return false
	}
	return x.IncludeHealthStatus != nil
}

func (x *GetMetricsSummaryRequest) ClearMetadata() {
	x.Metadata = nil
}

func (x *GetMetricsSummaryRequest) ClearFilter() {
	x.Filter = nil
}

func (x *GetMetricsSummaryRequest) ClearTimeRange() {
	x.TimeRange = nil
}

func (x *GetMetricsSummaryRequest) ClearOptions() {
	x.Options = nil
}

func (x *GetMetricsSummaryRequest) ClearProviderId() {
	x.ProviderId = nil
}

func (x *GetMetricsSummaryRequest) ClearIncludeProviderStats() {
	x.IncludeProviderStats = nil
}

func (x *GetMetricsSummaryRequest) ClearIncludeHealthStatus() {
	x.IncludeHealthStatus = nil
}

type GetMetricsSummaryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Standard request metadata (tracing, auth, etc.)
	Metadata *pb.RequestMetadata
	// Optional filter to limit which metrics to include in summary
	Filter *MetricFilter
	// Time range for the summary
	TimeRange *TimeRange
	// What summary information to include
	Options *SummaryOptions
	// Optional provider ID to query
	ProviderId *string
	// Whether to include provider-level statistics
	IncludeProviderStats *bool
	// Whether to include health status information
	IncludeHealthStatus *bool
}

func (b0 GetMetricsSummaryRequest_builder) Build() *GetMetricsSummaryRequest {
	m0 := &GetMetricsSummaryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Metadata = b.Metadata
	x.Filter = b.Filter
	x.TimeRange = b.TimeRange
	x.Options = b.Options
	x.ProviderId = b.ProviderId
	x.IncludeProviderStats = b.IncludeProviderStats
	x.IncludeHealthStatus = b.IncludeHealthStatus
	return m0
}

// *
// SummaryOptions configures what information to include in the summary.
type SummaryOptions struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Include metric count information
	IncludeCounts *bool `protobuf:"varint,1,opt,name=include_counts,json=includeCounts" json:"include_counts,omitempty"`
	// Include data volume information
	IncludeDataVolume *bool `protobuf:"varint,2,opt,name=include_data_volume,json=includeDataVolume" json:"include_data_volume,omitempty"`
	// Include performance statistics
	IncludePerformance *bool `protobuf:"varint,3,opt,name=include_performance,json=includePerformance" json:"include_performance,omitempty"`
	// Include error rates and statistics
	IncludeErrors *bool `protobuf:"varint,4,opt,name=include_errors,json=includeErrors" json:"include_errors,omitempty"`
	// Include top metrics by various criteria
	IncludeTopMetrics *bool `protobuf:"varint,5,opt,name=include_top_metrics,json=includeTopMetrics" json:"include_top_metrics,omitempty"`
	// Include retention policy information
	IncludeRetention *bool `protobuf:"varint,6,opt,name=include_retention,json=includeRetention" json:"include_retention,omitempty"`
	// Include export status information
	IncludeExportStatus *bool `protobuf:"varint,7,opt,name=include_export_status,json=includeExportStatus" json:"include_export_status,omitempty"`
	// Maximum number of top metrics to include
	TopMetricsLimit *int32 `protobuf:"varint,8,opt,name=top_metrics_limit,json=topMetricsLimit" json:"top_metrics_limit,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SummaryOptions) Reset() {
	*x = SummaryOptions{}
	mi := &file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryOptions) ProtoMessage() {}

func (x *SummaryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SummaryOptions) GetIncludeCounts() bool {
	if x != nil && x.IncludeCounts != nil {
		return *x.IncludeCounts
	}
	return false
}

func (x *SummaryOptions) GetIncludeDataVolume() bool {
	if x != nil && x.IncludeDataVolume != nil {
		return *x.IncludeDataVolume
	}
	return false
}

func (x *SummaryOptions) GetIncludePerformance() bool {
	if x != nil && x.IncludePerformance != nil {
		return *x.IncludePerformance
	}
	return false
}

func (x *SummaryOptions) GetIncludeErrors() bool {
	if x != nil && x.IncludeErrors != nil {
		return *x.IncludeErrors
	}
	return false
}

func (x *SummaryOptions) GetIncludeTopMetrics() bool {
	if x != nil && x.IncludeTopMetrics != nil {
		return *x.IncludeTopMetrics
	}
	return false
}

func (x *SummaryOptions) GetIncludeRetention() bool {
	if x != nil && x.IncludeRetention != nil {
		return *x.IncludeRetention
	}
	return false
}

func (x *SummaryOptions) GetIncludeExportStatus() bool {
	if x != nil && x.IncludeExportStatus != nil {
		return *x.IncludeExportStatus
	}
	return false
}

func (x *SummaryOptions) GetTopMetricsLimit() int32 {
	if x != nil && x.TopMetricsLimit != nil {
		return *x.TopMetricsLimit
	}
	return 0
}

func (x *SummaryOptions) SetIncludeCounts(v bool) {
	x.IncludeCounts = &v
}

func (x *SummaryOptions) SetIncludeDataVolume(v bool) {
	x.IncludeDataVolume = &v
}

func (x *SummaryOptions) SetIncludePerformance(v bool) {
	x.IncludePerformance = &v
}

func (x *SummaryOptions) SetIncludeErrors(v bool) {
	x.IncludeErrors = &v
}

func (x *SummaryOptions) SetIncludeTopMetrics(v bool) {
	x.IncludeTopMetrics = &v
}

func (x *SummaryOptions) SetIncludeRetention(v bool) {
	x.IncludeRetention = &v
}

func (x *SummaryOptions) SetIncludeExportStatus(v bool) {
	x.IncludeExportStatus = &v
}

func (x *SummaryOptions) SetTopMetricsLimit(v int32) {
	x.TopMetricsLimit = &v
}

func (x *SummaryOptions) HasIncludeCounts() bool {
	if x == nil {
		return false
	}
	return x.IncludeCounts != nil
}

func (x *SummaryOptions) HasIncludeDataVolume() bool {
	if x == nil {
		return false
	}
	return x.IncludeDataVolume != nil
}

func (x *SummaryOptions) HasIncludePerformance() bool {
	if x == nil {
		return false
	}
	return x.IncludePerformance != nil
}

func (x *SummaryOptions) HasIncludeErrors() bool {
	if x == nil {
		return false
	}
	return x.IncludeErrors != nil
}

func (x *SummaryOptions) HasIncludeTopMetrics() bool {
	if x == nil {
		return false
	}
	return x.IncludeTopMetrics != nil
}

func (x *SummaryOptions) HasIncludeRetention() bool {
	if x == nil {
		return false
	}
	return x.IncludeRetention != nil
}

func (x *SummaryOptions) HasIncludeExportStatus() bool {
	if x == nil {
		return false
	}
	return x.IncludeExportStatus != nil
}

func (x *SummaryOptions) HasTopMetricsLimit() bool {
	if x == nil {
		return false
	}
	return x.TopMetricsLimit != nil
}

func (x *SummaryOptions) ClearIncludeCounts() {
	x.IncludeCounts = nil
}

func (x *SummaryOptions) ClearIncludeDataVolume() {
	x.IncludeDataVolume = nil
}

func (x *SummaryOptions) ClearIncludePerformance() {
	x.IncludePerformance = nil
}

func (x *SummaryOptions) ClearIncludeErrors() {
	x.IncludeErrors = nil
}

func (x *SummaryOptions) ClearIncludeTopMetrics() {
	x.IncludeTopMetrics = nil
}

func (x *SummaryOptions) ClearIncludeRetention() {
	x.IncludeRetention = nil
}

func (x *SummaryOptions) ClearIncludeExportStatus() {
	x.IncludeExportStatus = nil
}

func (x *SummaryOptions) ClearTopMetricsLimit() {
	x.TopMetricsLimit = nil
}

type SummaryOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Include metric count information
	IncludeCounts *bool
	// Include data volume information
	IncludeDataVolume *bool
	// Include performance statistics
	IncludePerformance *bool
	// Include error rates and statistics
	IncludeErrors *bool
	// Include top metrics by various criteria
	IncludeTopMetrics *bool
	// Include retention policy information
	IncludeRetention *bool
	// Include export status information
	IncludeExportStatus *bool
	// Maximum number of top metrics to include
	TopMetricsLimit *int32
}

func (b0 SummaryOptions_builder) Build() *SummaryOptions {
	m0 := &SummaryOptions{}
	b, x := &b0, m0
	_, _ = b, x
	x.IncludeCounts = b.IncludeCounts
	x.IncludeDataVolume = b.IncludeDataVolume
	x.IncludePerformance = b.IncludePerformance
	x.IncludeErrors = b.IncludeErrors
	x.IncludeTopMetrics = b.IncludeTopMetrics
	x.IncludeRetention = b.IncludeRetention
	x.IncludeExportStatus = b.IncludeExportStatus
	x.TopMetricsLimit = b.TopMetricsLimit
	return m0
}

var File_pkg_metrics_proto_requests_get_metrics_summary_request_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_rawDesc = "" +
	"\n" +
	"<pkg/metrics/proto/requests/get_metrics_summary_request.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a0pkg/common/proto/messages/request_metadata.proto\x1a.pkg/metrics/proto/messages/metric_filter.proto\x1a(pkg/metrics/proto/types/time_range.proto\"\x9b\x03\n" +
	"\x18GetMetricsSummaryRequest\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x128\n" +
	"\x06filter\x18\x02 \x01(\v2 .gcommon.v1.metrics.MetricFilterR\x06filter\x12<\n" +
	"\n" +
	"time_range\x18\x03 \x01(\v2\x1d.gcommon.v1.metrics.TimeRangeR\ttimeRange\x12<\n" +
	"\aoptions\x18\x04 \x01(\v2\".gcommon.v1.metrics.SummaryOptionsR\aoptions\x12\x1f\n" +
	"\vprovider_id\x18\x05 \x01(\tR\n" +
	"providerId\x124\n" +
	"\x16include_provider_stats\x18\x06 \x01(\bR\x14includeProviderStats\x122\n" +
	"\x15include_health_status\x18\a \x01(\bR\x13includeHealthStatus\"\xfc\x02\n" +
	"\x0eSummaryOptions\x12%\n" +
	"\x0einclude_counts\x18\x01 \x01(\bR\rincludeCounts\x12.\n" +
	"\x13include_data_volume\x18\x02 \x01(\bR\x11includeDataVolume\x12/\n" +
	"\x13include_performance\x18\x03 \x01(\bR\x12includePerformance\x12%\n" +
	"\x0einclude_errors\x18\x04 \x01(\bR\rincludeErrors\x12.\n" +
	"\x13include_top_metrics\x18\x05 \x01(\bR\x11includeTopMetrics\x12+\n" +
	"\x11include_retention\x18\x06 \x01(\bR\x10includeRetention\x122\n" +
	"\x15include_export_status\x18\a \x01(\bR\x13includeExportStatus\x12*\n" +
	"\x11top_metrics_limit\x18\b \x01(\x05R\x0ftopMetricsLimitB\xcf\x01\n" +
	"\x16com.gcommon.v1.metricsB\x1dGetMetricsSummaryRequestProtoP\x01Z$../../../../pkg/metrics/pb;metricspb\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_goTypes = []any{
	(*GetMetricsSummaryRequest)(nil), // 0: gcommon.v1.metrics.GetMetricsSummaryRequest
	(*SummaryOptions)(nil),           // 1: gcommon.v1.metrics.SummaryOptions
	(*pb.RequestMetadata)(nil),       // 2: gcommon.v1.common.RequestMetadata
	(*MetricFilter)(nil),             // 3: gcommon.v1.metrics.MetricFilter
	(*TimeRange)(nil),                // 4: gcommon.v1.metrics.TimeRange
}
var file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.metrics.GetMetricsSummaryRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	3, // 1: gcommon.v1.metrics.GetMetricsSummaryRequest.filter:type_name -> gcommon.v1.metrics.MetricFilter
	4, // 2: gcommon.v1.metrics.GetMetricsSummaryRequest.time_range:type_name -> gcommon.v1.metrics.TimeRange
	1, // 3: gcommon.v1.metrics.GetMetricsSummaryRequest.options:type_name -> gcommon.v1.metrics.SummaryOptions
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_init() }
func file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_init() {
	if File_pkg_metrics_proto_requests_get_metrics_summary_request_proto != nil {
		return
	}
	file_pkg_metrics_proto_messages_metric_filter_proto_init()
	file_pkg_metrics_proto_types_time_range_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_rawDesc), len(file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_requests_get_metrics_summary_request_proto = out.File
	file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_goTypes = nil
	file_pkg_metrics_proto_requests_get_metrics_summary_request_proto_depIdxs = nil
}
