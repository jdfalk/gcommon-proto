// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/requests/get_provider_stats_request.proto

//go:build !protoopaque

package metricspb

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// GetProviderStatsRequest represents a request to get statistics for a metrics provider.
type GetProviderStatsRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Standard request metadata (tracing, auth, etc.)
	Metadata *proto.RequestMetadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Provider ID to get stats for
	ProviderId *string `protobuf:"bytes,2,opt,name=provider_id,json=providerId" json:"provider_id,omitempty"`
	// Time range for statistics
	TimeRange *TimeRange `protobuf:"bytes,3,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	// What statistics to include
	Options *StatsOptions `protobuf:"bytes,4,opt,name=options" json:"options,omitempty"`
	// Granularity for time-series statistics
	Granularity *string `protobuf:"bytes,5,opt,name=granularity" json:"granularity,omitempty"` // e.g., "1m", "5m", "1h"
	// Whether to include real-time metrics
	IncludeRealtime *bool `protobuf:"varint,6,opt,name=include_realtime,json=includeRealtime" json:"include_realtime,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetProviderStatsRequest) Reset() {
	*x = GetProviderStatsRequest{}
	mi := &file_pkg_metrics_proto_requests_get_provider_stats_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProviderStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderStatsRequest) ProtoMessage() {}

func (x *GetProviderStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_get_provider_stats_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetProviderStatsRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetProviderStatsRequest) GetProviderId() string {
	if x != nil && x.ProviderId != nil {
		return *x.ProviderId
	}
	return ""
}

func (x *GetProviderStatsRequest) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetProviderStatsRequest) GetOptions() *StatsOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GetProviderStatsRequest) GetGranularity() string {
	if x != nil && x.Granularity != nil {
		return *x.Granularity
	}
	return ""
}

func (x *GetProviderStatsRequest) GetIncludeRealtime() bool {
	if x != nil && x.IncludeRealtime != nil {
		return *x.IncludeRealtime
	}
	return false
}

func (x *GetProviderStatsRequest) SetMetadata(v *proto.RequestMetadata) {
	x.Metadata = v
}

func (x *GetProviderStatsRequest) SetProviderId(v string) {
	x.ProviderId = &v
}

func (x *GetProviderStatsRequest) SetTimeRange(v *TimeRange) {
	x.TimeRange = v
}

func (x *GetProviderStatsRequest) SetOptions(v *StatsOptions) {
	x.Options = v
}

func (x *GetProviderStatsRequest) SetGranularity(v string) {
	x.Granularity = &v
}

func (x *GetProviderStatsRequest) SetIncludeRealtime(v bool) {
	x.IncludeRealtime = &v
}

func (x *GetProviderStatsRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetProviderStatsRequest) HasProviderId() bool {
	if x == nil {
		return false
	}
	return x.ProviderId != nil
}

func (x *GetProviderStatsRequest) HasTimeRange() bool {
	if x == nil {
		return false
	}
	return x.TimeRange != nil
}

func (x *GetProviderStatsRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.Options != nil
}

func (x *GetProviderStatsRequest) HasGranularity() bool {
	if x == nil {
		return false
	}
	return x.Granularity != nil
}

func (x *GetProviderStatsRequest) HasIncludeRealtime() bool {
	if x == nil {
		return false
	}
	return x.IncludeRealtime != nil
}

func (x *GetProviderStatsRequest) ClearMetadata() {
	x.Metadata = nil
}

func (x *GetProviderStatsRequest) ClearProviderId() {
	x.ProviderId = nil
}

func (x *GetProviderStatsRequest) ClearTimeRange() {
	x.TimeRange = nil
}

func (x *GetProviderStatsRequest) ClearOptions() {
	x.Options = nil
}

func (x *GetProviderStatsRequest) ClearGranularity() {
	x.Granularity = nil
}

func (x *GetProviderStatsRequest) ClearIncludeRealtime() {
	x.IncludeRealtime = nil
}

type GetProviderStatsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Standard request metadata (tracing, auth, etc.)
	Metadata *proto.RequestMetadata
	// Provider ID to get stats for
	ProviderId *string
	// Time range for statistics
	TimeRange *TimeRange
	// What statistics to include
	Options *StatsOptions
	// Granularity for time-series statistics
	Granularity *string
	// Whether to include real-time metrics
	IncludeRealtime *bool
}

func (b0 GetProviderStatsRequest_builder) Build() *GetProviderStatsRequest {
	m0 := &GetProviderStatsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Metadata = b.Metadata
	x.ProviderId = b.ProviderId
	x.TimeRange = b.TimeRange
	x.Options = b.Options
	x.Granularity = b.Granularity
	x.IncludeRealtime = b.IncludeRealtime
	return m0
}

// *
// StatsOptions configures what statistics to include.
type StatsOptions struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Include performance statistics
	IncludePerformance *bool `protobuf:"varint,1,opt,name=include_performance,json=includePerformance" json:"include_performance,omitempty"`
	// Include resource usage statistics
	IncludeResourceUsage *bool `protobuf:"varint,2,opt,name=include_resource_usage,json=includeResourceUsage" json:"include_resource_usage,omitempty"`
	// Include error statistics
	IncludeErrors *bool `protobuf:"varint,3,opt,name=include_errors,json=includeErrors" json:"include_errors,omitempty"`
	// Include data volume statistics
	IncludeDataVolume *bool `protobuf:"varint,4,opt,name=include_data_volume,json=includeDataVolume" json:"include_data_volume,omitempty"`
	// Include export statistics
	IncludeExports *bool `protobuf:"varint,5,opt,name=include_exports,json=includeExports" json:"include_exports,omitempty"`
	// Include health status history
	IncludeHealthHistory *bool `protobuf:"varint,6,opt,name=include_health_history,json=includeHealthHistory" json:"include_health_history,omitempty"`
	// Include configuration information
	IncludeConfig *bool `protobuf:"varint,7,opt,name=include_config,json=includeConfig" json:"include_config,omitempty"`
	// Include top metrics by various criteria
	IncludeTopMetrics *bool `protobuf:"varint,8,opt,name=include_top_metrics,json=includeTopMetrics" json:"include_top_metrics,omitempty"`
	// Maximum number of top metrics to include
	TopMetricsLimit *int32 `protobuf:"varint,9,opt,name=top_metrics_limit,json=topMetricsLimit" json:"top_metrics_limit,omitempty"`
	// Include trend analysis
	IncludeTrends *bool `protobuf:"varint,10,opt,name=include_trends,json=includeTrends" json:"include_trends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsOptions) Reset() {
	*x = StatsOptions{}
	mi := &file_pkg_metrics_proto_requests_get_provider_stats_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsOptions) ProtoMessage() {}

func (x *StatsOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_get_provider_stats_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StatsOptions) GetIncludePerformance() bool {
	if x != nil && x.IncludePerformance != nil {
		return *x.IncludePerformance
	}
	return false
}

func (x *StatsOptions) GetIncludeResourceUsage() bool {
	if x != nil && x.IncludeResourceUsage != nil {
		return *x.IncludeResourceUsage
	}
	return false
}

func (x *StatsOptions) GetIncludeErrors() bool {
	if x != nil && x.IncludeErrors != nil {
		return *x.IncludeErrors
	}
	return false
}

func (x *StatsOptions) GetIncludeDataVolume() bool {
	if x != nil && x.IncludeDataVolume != nil {
		return *x.IncludeDataVolume
	}
	return false
}

func (x *StatsOptions) GetIncludeExports() bool {
	if x != nil && x.IncludeExports != nil {
		return *x.IncludeExports
	}
	return false
}

func (x *StatsOptions) GetIncludeHealthHistory() bool {
	if x != nil && x.IncludeHealthHistory != nil {
		return *x.IncludeHealthHistory
	}
	return false
}

func (x *StatsOptions) GetIncludeConfig() bool {
	if x != nil && x.IncludeConfig != nil {
		return *x.IncludeConfig
	}
	return false
}

func (x *StatsOptions) GetIncludeTopMetrics() bool {
	if x != nil && x.IncludeTopMetrics != nil {
		return *x.IncludeTopMetrics
	}
	return false
}

func (x *StatsOptions) GetTopMetricsLimit() int32 {
	if x != nil && x.TopMetricsLimit != nil {
		return *x.TopMetricsLimit
	}
	return 0
}

func (x *StatsOptions) GetIncludeTrends() bool {
	if x != nil && x.IncludeTrends != nil {
		return *x.IncludeTrends
	}
	return false
}

func (x *StatsOptions) SetIncludePerformance(v bool) {
	x.IncludePerformance = &v
}

func (x *StatsOptions) SetIncludeResourceUsage(v bool) {
	x.IncludeResourceUsage = &v
}

func (x *StatsOptions) SetIncludeErrors(v bool) {
	x.IncludeErrors = &v
}

func (x *StatsOptions) SetIncludeDataVolume(v bool) {
	x.IncludeDataVolume = &v
}

func (x *StatsOptions) SetIncludeExports(v bool) {
	x.IncludeExports = &v
}

func (x *StatsOptions) SetIncludeHealthHistory(v bool) {
	x.IncludeHealthHistory = &v
}

func (x *StatsOptions) SetIncludeConfig(v bool) {
	x.IncludeConfig = &v
}

func (x *StatsOptions) SetIncludeTopMetrics(v bool) {
	x.IncludeTopMetrics = &v
}

func (x *StatsOptions) SetTopMetricsLimit(v int32) {
	x.TopMetricsLimit = &v
}

func (x *StatsOptions) SetIncludeTrends(v bool) {
	x.IncludeTrends = &v
}

func (x *StatsOptions) HasIncludePerformance() bool {
	if x == nil {
		return false
	}
	return x.IncludePerformance != nil
}

func (x *StatsOptions) HasIncludeResourceUsage() bool {
	if x == nil {
		return false
	}
	return x.IncludeResourceUsage != nil
}

func (x *StatsOptions) HasIncludeErrors() bool {
	if x == nil {
		return false
	}
	return x.IncludeErrors != nil
}

func (x *StatsOptions) HasIncludeDataVolume() bool {
	if x == nil {
		return false
	}
	return x.IncludeDataVolume != nil
}

func (x *StatsOptions) HasIncludeExports() bool {
	if x == nil {
		return false
	}
	return x.IncludeExports != nil
}

func (x *StatsOptions) HasIncludeHealthHistory() bool {
	if x == nil {
		return false
	}
	return x.IncludeHealthHistory != nil
}

func (x *StatsOptions) HasIncludeConfig() bool {
	if x == nil {
		return false
	}
	return x.IncludeConfig != nil
}

func (x *StatsOptions) HasIncludeTopMetrics() bool {
	if x == nil {
		return false
	}
	return x.IncludeTopMetrics != nil
}

func (x *StatsOptions) HasTopMetricsLimit() bool {
	if x == nil {
		return false
	}
	return x.TopMetricsLimit != nil
}

func (x *StatsOptions) HasIncludeTrends() bool {
	if x == nil {
		return false
	}
	return x.IncludeTrends != nil
}

func (x *StatsOptions) ClearIncludePerformance() {
	x.IncludePerformance = nil
}

func (x *StatsOptions) ClearIncludeResourceUsage() {
	x.IncludeResourceUsage = nil
}

func (x *StatsOptions) ClearIncludeErrors() {
	x.IncludeErrors = nil
}

func (x *StatsOptions) ClearIncludeDataVolume() {
	x.IncludeDataVolume = nil
}

func (x *StatsOptions) ClearIncludeExports() {
	x.IncludeExports = nil
}

func (x *StatsOptions) ClearIncludeHealthHistory() {
	x.IncludeHealthHistory = nil
}

func (x *StatsOptions) ClearIncludeConfig() {
	x.IncludeConfig = nil
}

func (x *StatsOptions) ClearIncludeTopMetrics() {
	x.IncludeTopMetrics = nil
}

func (x *StatsOptions) ClearTopMetricsLimit() {
	x.TopMetricsLimit = nil
}

func (x *StatsOptions) ClearIncludeTrends() {
	x.IncludeTrends = nil
}

type StatsOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Include performance statistics
	IncludePerformance *bool
	// Include resource usage statistics
	IncludeResourceUsage *bool
	// Include error statistics
	IncludeErrors *bool
	// Include data volume statistics
	IncludeDataVolume *bool
	// Include export statistics
	IncludeExports *bool
	// Include health status history
	IncludeHealthHistory *bool
	// Include configuration information
	IncludeConfig *bool
	// Include top metrics by various criteria
	IncludeTopMetrics *bool
	// Maximum number of top metrics to include
	TopMetricsLimit *int32
	// Include trend analysis
	IncludeTrends *bool
}

func (b0 StatsOptions_builder) Build() *StatsOptions {
	m0 := &StatsOptions{}
	b, x := &b0, m0
	_, _ = b, x
	x.IncludePerformance = b.IncludePerformance
	x.IncludeResourceUsage = b.IncludeResourceUsage
	x.IncludeErrors = b.IncludeErrors
	x.IncludeDataVolume = b.IncludeDataVolume
	x.IncludeExports = b.IncludeExports
	x.IncludeHealthHistory = b.IncludeHealthHistory
	x.IncludeConfig = b.IncludeConfig
	x.IncludeTopMetrics = b.IncludeTopMetrics
	x.TopMetricsLimit = b.TopMetricsLimit
	x.IncludeTrends = b.IncludeTrends
	return m0
}

var File_pkg_metrics_proto_requests_get_provider_stats_request_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_requests_get_provider_stats_request_proto_rawDesc = "" +
	"\n" +
	";pkg/metrics/proto/requests/get_provider_stats_request.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a0pkg/common/proto/messages/request_metadata.proto\x1a(pkg/metrics/proto/types/time_range.proto\"\xc1\x02\n" +
	"\x17GetProviderStatsRequest\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x12\x1f\n" +
	"\vprovider_id\x18\x02 \x01(\tR\n" +
	"providerId\x12<\n" +
	"\n" +
	"time_range\x18\x03 \x01(\v2\x1d.gcommon.v1.metrics.TimeRangeR\ttimeRange\x12:\n" +
	"\aoptions\x18\x04 \x01(\v2 .gcommon.v1.metrics.StatsOptionsR\aoptions\x12 \n" +
	"\vgranularity\x18\x05 \x01(\tR\vgranularity\x12)\n" +
	"\x10include_realtime\x18\x06 \x01(\bR\x0fincludeRealtime\"\xd5\x03\n" +
	"\fStatsOptions\x12/\n" +
	"\x13include_performance\x18\x01 \x01(\bR\x12includePerformance\x124\n" +
	"\x16include_resource_usage\x18\x02 \x01(\bR\x14includeResourceUsage\x12%\n" +
	"\x0einclude_errors\x18\x03 \x01(\bR\rincludeErrors\x12.\n" +
	"\x13include_data_volume\x18\x04 \x01(\bR\x11includeDataVolume\x12'\n" +
	"\x0finclude_exports\x18\x05 \x01(\bR\x0eincludeExports\x124\n" +
	"\x16include_health_history\x18\x06 \x01(\bR\x14includeHealthHistory\x12%\n" +
	"\x0einclude_config\x18\a \x01(\bR\rincludeConfig\x12.\n" +
	"\x13include_top_metrics\x18\b \x01(\bR\x11includeTopMetrics\x12*\n" +
	"\x11top_metrics_limit\x18\t \x01(\x05R\x0ftopMetricsLimit\x12%\n" +
	"\x0einclude_trends\x18\n" +
	" \x01(\bR\rincludeTrendsB\xdf\x01\n" +
	"\x16com.gcommon.v1.metricsB\x1cGetProviderStatsRequestProtoP\x01Z5github.com/jdfalk/gcommon/pkg/metrics/proto;metricspb\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_requests_get_provider_stats_request_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_metrics_proto_requests_get_provider_stats_request_proto_goTypes = []any{
	(*GetProviderStatsRequest)(nil), // 0: gcommon.v1.metrics.GetProviderStatsRequest
	(*StatsOptions)(nil),            // 1: gcommon.v1.metrics.StatsOptions
	(*proto.RequestMetadata)(nil),   // 2: gcommon.v1.common.RequestMetadata
	(*TimeRange)(nil),               // 3: gcommon.v1.metrics.TimeRange
}
var file_pkg_metrics_proto_requests_get_provider_stats_request_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.metrics.GetProviderStatsRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	3, // 1: gcommon.v1.metrics.GetProviderStatsRequest.time_range:type_name -> gcommon.v1.metrics.TimeRange
	1, // 2: gcommon.v1.metrics.GetProviderStatsRequest.options:type_name -> gcommon.v1.metrics.StatsOptions
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_requests_get_provider_stats_request_proto_init() }
func file_pkg_metrics_proto_requests_get_provider_stats_request_proto_init() {
	if File_pkg_metrics_proto_requests_get_provider_stats_request_proto != nil {
		return
	}
	file_pkg_metrics_proto_types_time_range_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_requests_get_provider_stats_request_proto_rawDesc), len(file_pkg_metrics_proto_requests_get_provider_stats_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_requests_get_provider_stats_request_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_requests_get_provider_stats_request_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_requests_get_provider_stats_request_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_requests_get_provider_stats_request_proto = out.File
	file_pkg_metrics_proto_requests_get_provider_stats_request_proto_goTypes = nil
	file_pkg_metrics_proto_requests_get_provider_stats_request_proto_depIdxs = nil
}
