// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/requests/create_provider_request.proto

//go:build !protoopaque

package metricspb

import (
	pb "../../../../pkg/common/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// ProviderType defines the type of metrics provider.
type ProviderType int32

const (
	ProviderType_PROVIDER_TYPE_UNSPECIFIED   ProviderType = 0
	ProviderType_PROVIDER_TYPE_PROMETHEUS    ProviderType = 1
	ProviderType_PROVIDER_TYPE_OPENTELEMETRY ProviderType = 2
	ProviderType_PROVIDER_TYPE_STATSD        ProviderType = 3
	ProviderType_PROVIDER_TYPE_CUSTOM        ProviderType = 4
	ProviderType_PROVIDER_TYPE_MEMORY        ProviderType = 5
	ProviderType_PROVIDER_TYPE_MULTI         ProviderType = 6
)

// Enum value maps for ProviderType.
var (
	ProviderType_name = map[int32]string{
		0: "PROVIDER_TYPE_UNSPECIFIED",
		1: "PROVIDER_TYPE_PROMETHEUS",
		2: "PROVIDER_TYPE_OPENTELEMETRY",
		3: "PROVIDER_TYPE_STATSD",
		4: "PROVIDER_TYPE_CUSTOM",
		5: "PROVIDER_TYPE_MEMORY",
		6: "PROVIDER_TYPE_MULTI",
	}
	ProviderType_value = map[string]int32{
		"PROVIDER_TYPE_UNSPECIFIED":   0,
		"PROVIDER_TYPE_PROMETHEUS":    1,
		"PROVIDER_TYPE_OPENTELEMETRY": 2,
		"PROVIDER_TYPE_STATSD":        3,
		"PROVIDER_TYPE_CUSTOM":        4,
		"PROVIDER_TYPE_MEMORY":        5,
		"PROVIDER_TYPE_MULTI":         6,
	}
)

func (x ProviderType) Enum() *ProviderType {
	p := new(ProviderType)
	*p = x
	return p
}

func (x ProviderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProviderType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_metrics_proto_requests_create_provider_request_proto_enumTypes[0].Descriptor()
}

func (ProviderType) Type() protoreflect.EnumType {
	return &file_pkg_metrics_proto_requests_create_provider_request_proto_enumTypes[0]
}

func (x ProviderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// *
// CreateProviderRequest represents a request to create a new metrics provider.
type CreateProviderRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Standard request metadata (tracing, auth, etc.)
	Metadata *pb.RequestMetadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Provider configuration
	Config *ProviderConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Whether to validate the configuration before creating
	ValidateConfig *bool `protobuf:"varint,3,opt,name=validate_config,json=validateConfig" json:"validate_config,omitempty"`
	// Whether to perform a dry run (validation only)
	DryRun *bool `protobuf:"varint,4,opt,name=dry_run,json=dryRun" json:"dry_run,omitempty"`
	// Whether to start the provider immediately after creation
	AutoStart     *bool `protobuf:"varint,5,opt,name=auto_start,json=autoStart" json:"auto_start,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProviderRequest) Reset() {
	*x = CreateProviderRequest{}
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProviderRequest) ProtoMessage() {}

func (x *CreateProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateProviderRequest) GetMetadata() *pb.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateProviderRequest) GetConfig() *ProviderConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateProviderRequest) GetValidateConfig() bool {
	if x != nil && x.ValidateConfig != nil {
		return *x.ValidateConfig
	}
	return false
}

func (x *CreateProviderRequest) GetDryRun() bool {
	if x != nil && x.DryRun != nil {
		return *x.DryRun
	}
	return false
}

func (x *CreateProviderRequest) GetAutoStart() bool {
	if x != nil && x.AutoStart != nil {
		return *x.AutoStart
	}
	return false
}

func (x *CreateProviderRequest) SetMetadata(v *pb.RequestMetadata) {
	x.Metadata = v
}

func (x *CreateProviderRequest) SetConfig(v *ProviderConfig) {
	x.Config = v
}

func (x *CreateProviderRequest) SetValidateConfig(v bool) {
	x.ValidateConfig = &v
}

func (x *CreateProviderRequest) SetDryRun(v bool) {
	x.DryRun = &v
}

func (x *CreateProviderRequest) SetAutoStart(v bool) {
	x.AutoStart = &v
}

func (x *CreateProviderRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *CreateProviderRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *CreateProviderRequest) HasValidateConfig() bool {
	if x == nil {
		return false
	}
	return x.ValidateConfig != nil
}

func (x *CreateProviderRequest) HasDryRun() bool {
	if x == nil {
		return false
	}
	return x.DryRun != nil
}

func (x *CreateProviderRequest) HasAutoStart() bool {
	if x == nil {
		return false
	}
	return x.AutoStart != nil
}

func (x *CreateProviderRequest) ClearMetadata() {
	x.Metadata = nil
}

func (x *CreateProviderRequest) ClearConfig() {
	x.Config = nil
}

func (x *CreateProviderRequest) ClearValidateConfig() {
	x.ValidateConfig = nil
}

func (x *CreateProviderRequest) ClearDryRun() {
	x.DryRun = nil
}

func (x *CreateProviderRequest) ClearAutoStart() {
	x.AutoStart = nil
}

type CreateProviderRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Standard request metadata (tracing, auth, etc.)
	Metadata *pb.RequestMetadata
	// Provider configuration
	Config *ProviderConfig
	// Whether to validate the configuration before creating
	ValidateConfig *bool
	// Whether to perform a dry run (validation only)
	DryRun *bool
	// Whether to start the provider immediately after creation
	AutoStart *bool
}

func (b0 CreateProviderRequest_builder) Build() *CreateProviderRequest {
	m0 := &CreateProviderRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Metadata = b.Metadata
	x.Config = b.Config
	x.ValidateConfig = b.ValidateConfig
	x.DryRun = b.DryRun
	x.AutoStart = b.AutoStart
	return m0
}

// *
// ProviderConfig contains the configuration for a metrics provider.
type ProviderConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Unique identifier for the provider
	ProviderId *string `protobuf:"bytes,1,opt,name=provider_id,json=providerId" json:"provider_id,omitempty"`
	// Human-readable name for the provider
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Type of provider (prometheus, opentelemetry, custom, etc.)
	Type *ProviderType `protobuf:"varint,3,opt,name=type,enum=gcommon.v1.metrics.ProviderType" json:"type,omitempty"`
	// Provider-specific configuration
	Settings *ProviderSettings `protobuf:"bytes,4,opt,name=settings" json:"settings,omitempty"`
	// Export configuration for this provider
	ExportConfig *ExportConfig `protobuf:"bytes,5,opt,name=export_config,json=exportConfig" json:"export_config,omitempty"`
	// Resource limits for this provider
	ResourceLimits *ResourceLimits `protobuf:"bytes,6,opt,name=resource_limits,json=resourceLimits" json:"resource_limits,omitempty"`
	// Security configuration
	SecurityConfig *SecurityConfig `protobuf:"bytes,7,opt,name=security_config,json=securityConfig" json:"security_config,omitempty"`
	// Tags for provider organization
	Tags map[string]string `protobuf:"bytes,8,rep,name=tags" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Description of the provider
	Description   *string `protobuf:"bytes,9,opt,name=description" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderConfig) Reset() {
	*x = ProviderConfig{}
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderConfig) ProtoMessage() {}

func (x *ProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProviderConfig) GetProviderId() string {
	if x != nil && x.ProviderId != nil {
		return *x.ProviderId
	}
	return ""
}

func (x *ProviderConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProviderConfig) GetType() ProviderType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ProviderType_PROVIDER_TYPE_UNSPECIFIED
}

func (x *ProviderConfig) GetSettings() *ProviderSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ProviderConfig) GetExportConfig() *ExportConfig {
	if x != nil {
		return x.ExportConfig
	}
	return nil
}

func (x *ProviderConfig) GetResourceLimits() *ResourceLimits {
	if x != nil {
		return x.ResourceLimits
	}
	return nil
}

func (x *ProviderConfig) GetSecurityConfig() *SecurityConfig {
	if x != nil {
		return x.SecurityConfig
	}
	return nil
}

func (x *ProviderConfig) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ProviderConfig) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ProviderConfig) SetProviderId(v string) {
	x.ProviderId = &v
}

func (x *ProviderConfig) SetName(v string) {
	x.Name = &v
}

func (x *ProviderConfig) SetType(v ProviderType) {
	x.Type = &v
}

func (x *ProviderConfig) SetSettings(v *ProviderSettings) {
	x.Settings = v
}

func (x *ProviderConfig) SetExportConfig(v *ExportConfig) {
	x.ExportConfig = v
}

func (x *ProviderConfig) SetResourceLimits(v *ResourceLimits) {
	x.ResourceLimits = v
}

func (x *ProviderConfig) SetSecurityConfig(v *SecurityConfig) {
	x.SecurityConfig = v
}

func (x *ProviderConfig) SetTags(v map[string]string) {
	x.Tags = v
}

func (x *ProviderConfig) SetDescription(v string) {
	x.Description = &v
}

func (x *ProviderConfig) HasProviderId() bool {
	if x == nil {
		return false
	}
	return x.ProviderId != nil
}

func (x *ProviderConfig) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *ProviderConfig) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *ProviderConfig) HasSettings() bool {
	if x == nil {
		return false
	}
	return x.Settings != nil
}

func (x *ProviderConfig) HasExportConfig() bool {
	if x == nil {
		return false
	}
	return x.ExportConfig != nil
}

func (x *ProviderConfig) HasResourceLimits() bool {
	if x == nil {
		return false
	}
	return x.ResourceLimits != nil
}

func (x *ProviderConfig) HasSecurityConfig() bool {
	if x == nil {
		return false
	}
	return x.SecurityConfig != nil
}

func (x *ProviderConfig) HasDescription() bool {
	if x == nil {
		return false
	}
	return x.Description != nil
}

func (x *ProviderConfig) ClearProviderId() {
	x.ProviderId = nil
}

func (x *ProviderConfig) ClearName() {
	x.Name = nil
}

func (x *ProviderConfig) ClearType() {
	x.Type = nil
}

func (x *ProviderConfig) ClearSettings() {
	x.Settings = nil
}

func (x *ProviderConfig) ClearExportConfig() {
	x.ExportConfig = nil
}

func (x *ProviderConfig) ClearResourceLimits() {
	x.ResourceLimits = nil
}

func (x *ProviderConfig) ClearSecurityConfig() {
	x.SecurityConfig = nil
}

func (x *ProviderConfig) ClearDescription() {
	x.Description = nil
}

type ProviderConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique identifier for the provider
	ProviderId *string
	// Human-readable name for the provider
	Name *string
	// Type of provider (prometheus, opentelemetry, custom, etc.)
	Type *ProviderType
	// Provider-specific configuration
	Settings *ProviderSettings
	// Export configuration for this provider
	ExportConfig *ExportConfig
	// Resource limits for this provider
	ResourceLimits *ResourceLimits
	// Security configuration
	SecurityConfig *SecurityConfig
	// Tags for provider organization
	Tags map[string]string
	// Description of the provider
	Description *string
}

func (b0 ProviderConfig_builder) Build() *ProviderConfig {
	m0 := &ProviderConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.ProviderId = b.ProviderId
	x.Name = b.Name
	x.Type = b.Type
	x.Settings = b.Settings
	x.ExportConfig = b.ExportConfig
	x.ResourceLimits = b.ResourceLimits
	x.SecurityConfig = b.SecurityConfig
	x.Tags = b.Tags
	x.Description = b.Description
	return m0
}

// *
// ProviderSettings contains type-specific configuration.
type ProviderSettings struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Prometheus-specific settings
	Prometheus *PrometheusSettings `protobuf:"bytes,1,opt,name=prometheus" json:"prometheus,omitempty"`
	// OpenTelemetry-specific settings
	Opentelemetry *OpenTelemetrySettings `protobuf:"bytes,2,opt,name=opentelemetry" json:"opentelemetry,omitempty"`
	// StatsD-specific settings
	Statsd *StatsDSettings `protobuf:"bytes,3,opt,name=statsd" json:"statsd,omitempty"`
	// Custom provider settings
	Custom        map[string]string `protobuf:"bytes,4,rep,name=custom" json:"custom,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderSettings) Reset() {
	*x = ProviderSettings{}
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderSettings) ProtoMessage() {}

func (x *ProviderSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProviderSettings) GetPrometheus() *PrometheusSettings {
	if x != nil {
		return x.Prometheus
	}
	return nil
}

func (x *ProviderSettings) GetOpentelemetry() *OpenTelemetrySettings {
	if x != nil {
		return x.Opentelemetry
	}
	return nil
}

func (x *ProviderSettings) GetStatsd() *StatsDSettings {
	if x != nil {
		return x.Statsd
	}
	return nil
}

func (x *ProviderSettings) GetCustom() map[string]string {
	if x != nil {
		return x.Custom
	}
	return nil
}

func (x *ProviderSettings) SetPrometheus(v *PrometheusSettings) {
	x.Prometheus = v
}

func (x *ProviderSettings) SetOpentelemetry(v *OpenTelemetrySettings) {
	x.Opentelemetry = v
}

func (x *ProviderSettings) SetStatsd(v *StatsDSettings) {
	x.Statsd = v
}

func (x *ProviderSettings) SetCustom(v map[string]string) {
	x.Custom = v
}

func (x *ProviderSettings) HasPrometheus() bool {
	if x == nil {
		return false
	}
	return x.Prometheus != nil
}

func (x *ProviderSettings) HasOpentelemetry() bool {
	if x == nil {
		return false
	}
	return x.Opentelemetry != nil
}

func (x *ProviderSettings) HasStatsd() bool {
	if x == nil {
		return false
	}
	return x.Statsd != nil
}

func (x *ProviderSettings) ClearPrometheus() {
	x.Prometheus = nil
}

func (x *ProviderSettings) ClearOpentelemetry() {
	x.Opentelemetry = nil
}

func (x *ProviderSettings) ClearStatsd() {
	x.Statsd = nil
}

type ProviderSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Prometheus-specific settings
	Prometheus *PrometheusSettings
	// OpenTelemetry-specific settings
	Opentelemetry *OpenTelemetrySettings
	// StatsD-specific settings
	Statsd *StatsDSettings
	// Custom provider settings
	Custom map[string]string
}

func (b0 ProviderSettings_builder) Build() *ProviderSettings {
	m0 := &ProviderSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.Prometheus = b.Prometheus
	x.Opentelemetry = b.Opentelemetry
	x.Statsd = b.Statsd
	x.Custom = b.Custom
	return m0
}

// *
// PrometheusSettings contains Prometheus-specific configuration.
type PrometheusSettings struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Registry to use
	Registry *string `protobuf:"bytes,1,opt,name=registry" json:"registry,omitempty"`
	// Whether to enable push gateway
	EnablePushGateway *bool `protobuf:"varint,2,opt,name=enable_push_gateway,json=enablePushGateway" json:"enable_push_gateway,omitempty"`
	// Push gateway URL
	PushGatewayUrl *string `protobuf:"bytes,3,opt,name=push_gateway_url,json=pushGatewayUrl" json:"push_gateway_url,omitempty"`
	// Job name for push gateway
	JobName *string `protobuf:"bytes,4,opt,name=job_name,json=jobName" json:"job_name,omitempty"`
	// Instance name
	Instance *string `protobuf:"bytes,5,opt,name=instance" json:"instance,omitempty"`
	// Additional labels
	Labels        map[string]string `protobuf:"bytes,6,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrometheusSettings) Reset() {
	*x = PrometheusSettings{}
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrometheusSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusSettings) ProtoMessage() {}

func (x *PrometheusSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PrometheusSettings) GetRegistry() string {
	if x != nil && x.Registry != nil {
		return *x.Registry
	}
	return ""
}

func (x *PrometheusSettings) GetEnablePushGateway() bool {
	if x != nil && x.EnablePushGateway != nil {
		return *x.EnablePushGateway
	}
	return false
}

func (x *PrometheusSettings) GetPushGatewayUrl() string {
	if x != nil && x.PushGatewayUrl != nil {
		return *x.PushGatewayUrl
	}
	return ""
}

func (x *PrometheusSettings) GetJobName() string {
	if x != nil && x.JobName != nil {
		return *x.JobName
	}
	return ""
}

func (x *PrometheusSettings) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *PrometheusSettings) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *PrometheusSettings) SetRegistry(v string) {
	x.Registry = &v
}

func (x *PrometheusSettings) SetEnablePushGateway(v bool) {
	x.EnablePushGateway = &v
}

func (x *PrometheusSettings) SetPushGatewayUrl(v string) {
	x.PushGatewayUrl = &v
}

func (x *PrometheusSettings) SetJobName(v string) {
	x.JobName = &v
}

func (x *PrometheusSettings) SetInstance(v string) {
	x.Instance = &v
}

func (x *PrometheusSettings) SetLabels(v map[string]string) {
	x.Labels = v
}

func (x *PrometheusSettings) HasRegistry() bool {
	if x == nil {
		return false
	}
	return x.Registry != nil
}

func (x *PrometheusSettings) HasEnablePushGateway() bool {
	if x == nil {
		return false
	}
	return x.EnablePushGateway != nil
}

func (x *PrometheusSettings) HasPushGatewayUrl() bool {
	if x == nil {
		return false
	}
	return x.PushGatewayUrl != nil
}

func (x *PrometheusSettings) HasJobName() bool {
	if x == nil {
		return false
	}
	return x.JobName != nil
}

func (x *PrometheusSettings) HasInstance() bool {
	if x == nil {
		return false
	}
	return x.Instance != nil
}

func (x *PrometheusSettings) ClearRegistry() {
	x.Registry = nil
}

func (x *PrometheusSettings) ClearEnablePushGateway() {
	x.EnablePushGateway = nil
}

func (x *PrometheusSettings) ClearPushGatewayUrl() {
	x.PushGatewayUrl = nil
}

func (x *PrometheusSettings) ClearJobName() {
	x.JobName = nil
}

func (x *PrometheusSettings) ClearInstance() {
	x.Instance = nil
}

type PrometheusSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Registry to use
	Registry *string
	// Whether to enable push gateway
	EnablePushGateway *bool
	// Push gateway URL
	PushGatewayUrl *string
	// Job name for push gateway
	JobName *string
	// Instance name
	Instance *string
	// Additional labels
	Labels map[string]string
}

func (b0 PrometheusSettings_builder) Build() *PrometheusSettings {
	m0 := &PrometheusSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.Registry = b.Registry
	x.EnablePushGateway = b.EnablePushGateway
	x.PushGatewayUrl = b.PushGatewayUrl
	x.JobName = b.JobName
	x.Instance = b.Instance
	x.Labels = b.Labels
	return m0
}

// *
// OpenTelemetrySettings contains OpenTelemetry-specific configuration.
type OpenTelemetrySettings struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// OTLP endpoint
	Endpoint *string `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	// Whether to use TLS
	UseTls *bool `protobuf:"varint,2,opt,name=use_tls,json=useTls" json:"use_tls,omitempty"`
	// Headers to include with requests
	Headers map[string]string `protobuf:"bytes,3,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Resource attributes
	ResourceAttributes map[string]string `protobuf:"bytes,4,rep,name=resource_attributes,json=resourceAttributes" json:"resource_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Export timeout
	Timeout       *string `protobuf:"bytes,5,opt,name=timeout" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenTelemetrySettings) Reset() {
	*x = OpenTelemetrySettings{}
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenTelemetrySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenTelemetrySettings) ProtoMessage() {}

func (x *OpenTelemetrySettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OpenTelemetrySettings) GetEndpoint() string {
	if x != nil && x.Endpoint != nil {
		return *x.Endpoint
	}
	return ""
}

func (x *OpenTelemetrySettings) GetUseTls() bool {
	if x != nil && x.UseTls != nil {
		return *x.UseTls
	}
	return false
}

func (x *OpenTelemetrySettings) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *OpenTelemetrySettings) GetResourceAttributes() map[string]string {
	if x != nil {
		return x.ResourceAttributes
	}
	return nil
}

func (x *OpenTelemetrySettings) GetTimeout() string {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return ""
}

func (x *OpenTelemetrySettings) SetEndpoint(v string) {
	x.Endpoint = &v
}

func (x *OpenTelemetrySettings) SetUseTls(v bool) {
	x.UseTls = &v
}

func (x *OpenTelemetrySettings) SetHeaders(v map[string]string) {
	x.Headers = v
}

func (x *OpenTelemetrySettings) SetResourceAttributes(v map[string]string) {
	x.ResourceAttributes = v
}

func (x *OpenTelemetrySettings) SetTimeout(v string) {
	x.Timeout = &v
}

func (x *OpenTelemetrySettings) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return x.Endpoint != nil
}

func (x *OpenTelemetrySettings) HasUseTls() bool {
	if x == nil {
		return false
	}
	return x.UseTls != nil
}

func (x *OpenTelemetrySettings) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.Timeout != nil
}

func (x *OpenTelemetrySettings) ClearEndpoint() {
	x.Endpoint = nil
}

func (x *OpenTelemetrySettings) ClearUseTls() {
	x.UseTls = nil
}

func (x *OpenTelemetrySettings) ClearTimeout() {
	x.Timeout = nil
}

type OpenTelemetrySettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// OTLP endpoint
	Endpoint *string
	// Whether to use TLS
	UseTls *bool
	// Headers to include with requests
	Headers map[string]string
	// Resource attributes
	ResourceAttributes map[string]string
	// Export timeout
	Timeout *string
}

func (b0 OpenTelemetrySettings_builder) Build() *OpenTelemetrySettings {
	m0 := &OpenTelemetrySettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.Endpoint = b.Endpoint
	x.UseTls = b.UseTls
	x.Headers = b.Headers
	x.ResourceAttributes = b.ResourceAttributes
	x.Timeout = b.Timeout
	return m0
}

// *
// StatsDSettings contains StatsD-specific configuration.
type StatsDSettings struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// StatsD server address
	Address *string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	// Protocol to use (udp, tcp)
	Protocol *string `protobuf:"bytes,2,opt,name=protocol" json:"protocol,omitempty"`
	// Prefix for all metrics
	Prefix *string `protobuf:"bytes,3,opt,name=prefix" json:"prefix,omitempty"`
	// Sampling rate
	SampleRate *float64 `protobuf:"fixed64,4,opt,name=sample_rate,json=sampleRate" json:"sample_rate,omitempty"`
	// Buffer size
	BufferSize    *int32 `protobuf:"varint,5,opt,name=buffer_size,json=bufferSize" json:"buffer_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsDSettings) Reset() {
	*x = StatsDSettings{}
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsDSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsDSettings) ProtoMessage() {}

func (x *StatsDSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StatsDSettings) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *StatsDSettings) GetProtocol() string {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return ""
}

func (x *StatsDSettings) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *StatsDSettings) GetSampleRate() float64 {
	if x != nil && x.SampleRate != nil {
		return *x.SampleRate
	}
	return 0
}

func (x *StatsDSettings) GetBufferSize() int32 {
	if x != nil && x.BufferSize != nil {
		return *x.BufferSize
	}
	return 0
}

func (x *StatsDSettings) SetAddress(v string) {
	x.Address = &v
}

func (x *StatsDSettings) SetProtocol(v string) {
	x.Protocol = &v
}

func (x *StatsDSettings) SetPrefix(v string) {
	x.Prefix = &v
}

func (x *StatsDSettings) SetSampleRate(v float64) {
	x.SampleRate = &v
}

func (x *StatsDSettings) SetBufferSize(v int32) {
	x.BufferSize = &v
}

func (x *StatsDSettings) HasAddress() bool {
	if x == nil {
		return false
	}
	return x.Address != nil
}

func (x *StatsDSettings) HasProtocol() bool {
	if x == nil {
		return false
	}
	return x.Protocol != nil
}

func (x *StatsDSettings) HasPrefix() bool {
	if x == nil {
		return false
	}
	return x.Prefix != nil
}

func (x *StatsDSettings) HasSampleRate() bool {
	if x == nil {
		return false
	}
	return x.SampleRate != nil
}

func (x *StatsDSettings) HasBufferSize() bool {
	if x == nil {
		return false
	}
	return x.BufferSize != nil
}

func (x *StatsDSettings) ClearAddress() {
	x.Address = nil
}

func (x *StatsDSettings) ClearProtocol() {
	x.Protocol = nil
}

func (x *StatsDSettings) ClearPrefix() {
	x.Prefix = nil
}

func (x *StatsDSettings) ClearSampleRate() {
	x.SampleRate = nil
}

func (x *StatsDSettings) ClearBufferSize() {
	x.BufferSize = nil
}

type StatsDSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// StatsD server address
	Address *string
	// Protocol to use (udp, tcp)
	Protocol *string
	// Prefix for all metrics
	Prefix *string
	// Sampling rate
	SampleRate *float64
	// Buffer size
	BufferSize *int32
}

func (b0 StatsDSettings_builder) Build() *StatsDSettings {
	m0 := &StatsDSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.Address = b.Address
	x.Protocol = b.Protocol
	x.Prefix = b.Prefix
	x.SampleRate = b.SampleRate
	x.BufferSize = b.BufferSize
	return m0
}

// *
// ExportDestination defines a destination for metric exports.
type ExportDestination struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Destination type (file, http, s3, etc.)
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Destination configuration
	Config map[string]string `protobuf:"bytes,2,rep,name=config" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Whether this destination is enabled
	Enabled       *bool `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportDestination) Reset() {
	*x = ExportDestination{}
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportDestination) ProtoMessage() {}

func (x *ExportDestination) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExportDestination) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ExportDestination) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ExportDestination) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ExportDestination) SetType(v string) {
	x.Type = &v
}

func (x *ExportDestination) SetConfig(v map[string]string) {
	x.Config = v
}

func (x *ExportDestination) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *ExportDestination) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *ExportDestination) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *ExportDestination) ClearType() {
	x.Type = nil
}

func (x *ExportDestination) ClearEnabled() {
	x.Enabled = nil
}

type ExportDestination_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Destination type (file, http, s3, etc.)
	Type *string
	// Destination configuration
	Config map[string]string
	// Whether this destination is enabled
	Enabled *bool
}

func (b0 ExportDestination_builder) Build() *ExportDestination {
	m0 := &ExportDestination{}
	b, x := &b0, m0
	_, _ = b, x
	x.Type = b.Type
	x.Config = b.Config
	x.Enabled = b.Enabled
	return m0
}

// *
// ResourceLimits defines resource limits for the provider.
type ResourceLimits struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Maximum memory usage (bytes)
	MaxMemoryBytes *int64 `protobuf:"varint,1,opt,name=max_memory_bytes,json=maxMemoryBytes" json:"max_memory_bytes,omitempty"`
	// Maximum CPU usage (percentage)
	MaxCpuPercent *float64 `protobuf:"fixed64,2,opt,name=max_cpu_percent,json=maxCpuPercent" json:"max_cpu_percent,omitempty"`
	// Maximum disk usage (bytes)
	MaxDiskBytes *int64 `protobuf:"varint,3,opt,name=max_disk_bytes,json=maxDiskBytes" json:"max_disk_bytes,omitempty"`
	// Maximum number of metrics
	MaxMetrics *int64 `protobuf:"varint,4,opt,name=max_metrics,json=maxMetrics" json:"max_metrics,omitempty"`
	// Maximum data points per metric
	MaxDataPointsPerMetric *int64 `protobuf:"varint,5,opt,name=max_data_points_per_metric,json=maxDataPointsPerMetric" json:"max_data_points_per_metric,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ResourceLimits) Reset() {
	*x = ResourceLimits{}
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimits) ProtoMessage() {}

func (x *ResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResourceLimits) GetMaxMemoryBytes() int64 {
	if x != nil && x.MaxMemoryBytes != nil {
		return *x.MaxMemoryBytes
	}
	return 0
}

func (x *ResourceLimits) GetMaxCpuPercent() float64 {
	if x != nil && x.MaxCpuPercent != nil {
		return *x.MaxCpuPercent
	}
	return 0
}

func (x *ResourceLimits) GetMaxDiskBytes() int64 {
	if x != nil && x.MaxDiskBytes != nil {
		return *x.MaxDiskBytes
	}
	return 0
}

func (x *ResourceLimits) GetMaxMetrics() int64 {
	if x != nil && x.MaxMetrics != nil {
		return *x.MaxMetrics
	}
	return 0
}

func (x *ResourceLimits) GetMaxDataPointsPerMetric() int64 {
	if x != nil && x.MaxDataPointsPerMetric != nil {
		return *x.MaxDataPointsPerMetric
	}
	return 0
}

func (x *ResourceLimits) SetMaxMemoryBytes(v int64) {
	x.MaxMemoryBytes = &v
}

func (x *ResourceLimits) SetMaxCpuPercent(v float64) {
	x.MaxCpuPercent = &v
}

func (x *ResourceLimits) SetMaxDiskBytes(v int64) {
	x.MaxDiskBytes = &v
}

func (x *ResourceLimits) SetMaxMetrics(v int64) {
	x.MaxMetrics = &v
}

func (x *ResourceLimits) SetMaxDataPointsPerMetric(v int64) {
	x.MaxDataPointsPerMetric = &v
}

func (x *ResourceLimits) HasMaxMemoryBytes() bool {
	if x == nil {
		return false
	}
	return x.MaxMemoryBytes != nil
}

func (x *ResourceLimits) HasMaxCpuPercent() bool {
	if x == nil {
		return false
	}
	return x.MaxCpuPercent != nil
}

func (x *ResourceLimits) HasMaxDiskBytes() bool {
	if x == nil {
		return false
	}
	return x.MaxDiskBytes != nil
}

func (x *ResourceLimits) HasMaxMetrics() bool {
	if x == nil {
		return false
	}
	return x.MaxMetrics != nil
}

func (x *ResourceLimits) HasMaxDataPointsPerMetric() bool {
	if x == nil {
		return false
	}
	return x.MaxDataPointsPerMetric != nil
}

func (x *ResourceLimits) ClearMaxMemoryBytes() {
	x.MaxMemoryBytes = nil
}

func (x *ResourceLimits) ClearMaxCpuPercent() {
	x.MaxCpuPercent = nil
}

func (x *ResourceLimits) ClearMaxDiskBytes() {
	x.MaxDiskBytes = nil
}

func (x *ResourceLimits) ClearMaxMetrics() {
	x.MaxMetrics = nil
}

func (x *ResourceLimits) ClearMaxDataPointsPerMetric() {
	x.MaxDataPointsPerMetric = nil
}

type ResourceLimits_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum memory usage (bytes)
	MaxMemoryBytes *int64
	// Maximum CPU usage (percentage)
	MaxCpuPercent *float64
	// Maximum disk usage (bytes)
	MaxDiskBytes *int64
	// Maximum number of metrics
	MaxMetrics *int64
	// Maximum data points per metric
	MaxDataPointsPerMetric *int64
}

func (b0 ResourceLimits_builder) Build() *ResourceLimits {
	m0 := &ResourceLimits{}
	b, x := &b0, m0
	_, _ = b, x
	x.MaxMemoryBytes = b.MaxMemoryBytes
	x.MaxCpuPercent = b.MaxCpuPercent
	x.MaxDiskBytes = b.MaxDiskBytes
	x.MaxMetrics = b.MaxMetrics
	x.MaxDataPointsPerMetric = b.MaxDataPointsPerMetric
	return m0
}

// *
// SecurityConfig defines security configuration for the provider.
type SecurityConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Whether authentication is required
	RequireAuth *bool `protobuf:"varint,1,opt,name=require_auth,json=requireAuth" json:"require_auth,omitempty"`
	// Allowed authentication methods
	AuthMethods []string `protobuf:"bytes,2,rep,name=auth_methods,json=authMethods" json:"auth_methods,omitempty"`
	// Whether TLS is required
	RequireTls *bool `protobuf:"varint,3,opt,name=require_tls,json=requireTls" json:"require_tls,omitempty"`
	// TLS configuration
	TlsConfig *TLSConfig `protobuf:"bytes,4,opt,name=tls_config,json=tlsConfig" json:"tls_config,omitempty"`
	// API key configuration
	ApiKeyConfig  *APIKeyConfig `protobuf:"bytes,5,opt,name=api_key_config,json=apiKeyConfig" json:"api_key_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityConfig) Reset() {
	*x = SecurityConfig{}
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityConfig) ProtoMessage() {}

func (x *SecurityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SecurityConfig) GetRequireAuth() bool {
	if x != nil && x.RequireAuth != nil {
		return *x.RequireAuth
	}
	return false
}

func (x *SecurityConfig) GetAuthMethods() []string {
	if x != nil {
		return x.AuthMethods
	}
	return nil
}

func (x *SecurityConfig) GetRequireTls() bool {
	if x != nil && x.RequireTls != nil {
		return *x.RequireTls
	}
	return false
}

func (x *SecurityConfig) GetTlsConfig() *TLSConfig {
	if x != nil {
		return x.TlsConfig
	}
	return nil
}

func (x *SecurityConfig) GetApiKeyConfig() *APIKeyConfig {
	if x != nil {
		return x.ApiKeyConfig
	}
	return nil
}

func (x *SecurityConfig) SetRequireAuth(v bool) {
	x.RequireAuth = &v
}

func (x *SecurityConfig) SetAuthMethods(v []string) {
	x.AuthMethods = v
}

func (x *SecurityConfig) SetRequireTls(v bool) {
	x.RequireTls = &v
}

func (x *SecurityConfig) SetTlsConfig(v *TLSConfig) {
	x.TlsConfig = v
}

func (x *SecurityConfig) SetApiKeyConfig(v *APIKeyConfig) {
	x.ApiKeyConfig = v
}

func (x *SecurityConfig) HasRequireAuth() bool {
	if x == nil {
		return false
	}
	return x.RequireAuth != nil
}

func (x *SecurityConfig) HasRequireTls() bool {
	if x == nil {
		return false
	}
	return x.RequireTls != nil
}

func (x *SecurityConfig) HasTlsConfig() bool {
	if x == nil {
		return false
	}
	return x.TlsConfig != nil
}

func (x *SecurityConfig) HasApiKeyConfig() bool {
	if x == nil {
		return false
	}
	return x.ApiKeyConfig != nil
}

func (x *SecurityConfig) ClearRequireAuth() {
	x.RequireAuth = nil
}

func (x *SecurityConfig) ClearRequireTls() {
	x.RequireTls = nil
}

func (x *SecurityConfig) ClearTlsConfig() {
	x.TlsConfig = nil
}

func (x *SecurityConfig) ClearApiKeyConfig() {
	x.ApiKeyConfig = nil
}

type SecurityConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether authentication is required
	RequireAuth *bool
	// Allowed authentication methods
	AuthMethods []string
	// Whether TLS is required
	RequireTls *bool
	// TLS configuration
	TlsConfig *TLSConfig
	// API key configuration
	ApiKeyConfig *APIKeyConfig
}

func (b0 SecurityConfig_builder) Build() *SecurityConfig {
	m0 := &SecurityConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.RequireAuth = b.RequireAuth
	x.AuthMethods = b.AuthMethods
	x.RequireTls = b.RequireTls
	x.TlsConfig = b.TlsConfig
	x.ApiKeyConfig = b.ApiKeyConfig
	return m0
}

// *
// TLSConfig defines TLS configuration.
type TLSConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Certificate file path
	CertFile *string `protobuf:"bytes,1,opt,name=cert_file,json=certFile" json:"cert_file,omitempty"`
	// Private key file path
	KeyFile *string `protobuf:"bytes,2,opt,name=key_file,json=keyFile" json:"key_file,omitempty"`
	// CA certificate file path
	CaFile *string `protobuf:"bytes,3,opt,name=ca_file,json=caFile" json:"ca_file,omitempty"`
	// Whether to verify certificates
	VerifyCerts   *bool `protobuf:"varint,4,opt,name=verify_certs,json=verifyCerts" json:"verify_certs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSConfig) Reset() {
	*x = TLSConfig{}
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfig) ProtoMessage() {}

func (x *TLSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TLSConfig) GetCertFile() string {
	if x != nil && x.CertFile != nil {
		return *x.CertFile
	}
	return ""
}

func (x *TLSConfig) GetKeyFile() string {
	if x != nil && x.KeyFile != nil {
		return *x.KeyFile
	}
	return ""
}

func (x *TLSConfig) GetCaFile() string {
	if x != nil && x.CaFile != nil {
		return *x.CaFile
	}
	return ""
}

func (x *TLSConfig) GetVerifyCerts() bool {
	if x != nil && x.VerifyCerts != nil {
		return *x.VerifyCerts
	}
	return false
}

func (x *TLSConfig) SetCertFile(v string) {
	x.CertFile = &v
}

func (x *TLSConfig) SetKeyFile(v string) {
	x.KeyFile = &v
}

func (x *TLSConfig) SetCaFile(v string) {
	x.CaFile = &v
}

func (x *TLSConfig) SetVerifyCerts(v bool) {
	x.VerifyCerts = &v
}

func (x *TLSConfig) HasCertFile() bool {
	if x == nil {
		return false
	}
	return x.CertFile != nil
}

func (x *TLSConfig) HasKeyFile() bool {
	if x == nil {
		return false
	}
	return x.KeyFile != nil
}

func (x *TLSConfig) HasCaFile() bool {
	if x == nil {
		return false
	}
	return x.CaFile != nil
}

func (x *TLSConfig) HasVerifyCerts() bool {
	if x == nil {
		return false
	}
	return x.VerifyCerts != nil
}

func (x *TLSConfig) ClearCertFile() {
	x.CertFile = nil
}

func (x *TLSConfig) ClearKeyFile() {
	x.KeyFile = nil
}

func (x *TLSConfig) ClearCaFile() {
	x.CaFile = nil
}

func (x *TLSConfig) ClearVerifyCerts() {
	x.VerifyCerts = nil
}

type TLSConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Certificate file path
	CertFile *string
	// Private key file path
	KeyFile *string
	// CA certificate file path
	CaFile *string
	// Whether to verify certificates
	VerifyCerts *bool
}

func (b0 TLSConfig_builder) Build() *TLSConfig {
	m0 := &TLSConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.CertFile = b.CertFile
	x.KeyFile = b.KeyFile
	x.CaFile = b.CaFile
	x.VerifyCerts = b.VerifyCerts
	return m0
}

// *
// APIKeyConfig defines API key configuration.
type APIKeyConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Header name for API key
	HeaderName *string `protobuf:"bytes,1,opt,name=header_name,json=headerName" json:"header_name,omitempty"`
	// Whether API key is required
	Required *bool `protobuf:"varint,2,opt,name=required" json:"required,omitempty"`
	// Allowed API keys (for validation)
	AllowedKeys   []string `protobuf:"bytes,3,rep,name=allowed_keys,json=allowedKeys" json:"allowed_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIKeyConfig) Reset() {
	*x = APIKeyConfig{}
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyConfig) ProtoMessage() {}

func (x *APIKeyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *APIKeyConfig) GetHeaderName() string {
	if x != nil && x.HeaderName != nil {
		return *x.HeaderName
	}
	return ""
}

func (x *APIKeyConfig) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *APIKeyConfig) GetAllowedKeys() []string {
	if x != nil {
		return x.AllowedKeys
	}
	return nil
}

func (x *APIKeyConfig) SetHeaderName(v string) {
	x.HeaderName = &v
}

func (x *APIKeyConfig) SetRequired(v bool) {
	x.Required = &v
}

func (x *APIKeyConfig) SetAllowedKeys(v []string) {
	x.AllowedKeys = v
}

func (x *APIKeyConfig) HasHeaderName() bool {
	if x == nil {
		return false
	}
	return x.HeaderName != nil
}

func (x *APIKeyConfig) HasRequired() bool {
	if x == nil {
		return false
	}
	return x.Required != nil
}

func (x *APIKeyConfig) ClearHeaderName() {
	x.HeaderName = nil
}

func (x *APIKeyConfig) ClearRequired() {
	x.Required = nil
}

type APIKeyConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Header name for API key
	HeaderName *string
	// Whether API key is required
	Required *bool
	// Allowed API keys (for validation)
	AllowedKeys []string
}

func (b0 APIKeyConfig_builder) Build() *APIKeyConfig {
	m0 := &APIKeyConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.HeaderName = b.HeaderName
	x.Required = b.Required
	x.AllowedKeys = b.AllowedKeys
	return m0
}

var File_pkg_metrics_proto_requests_create_provider_request_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_requests_create_provider_request_proto_rawDesc = "" +
	"\n" +
	"8pkg/metrics/proto/requests/create_provider_request.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a0pkg/common/proto/messages/request_metadata.proto\x1a+pkg/metrics/proto/types/export_config.proto\"\xf4\x01\n" +
	"\x15CreateProviderRequest\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x12:\n" +
	"\x06config\x18\x02 \x01(\v2\".gcommon.v1.metrics.ProviderConfigR\x06config\x12'\n" +
	"\x0fvalidate_config\x18\x03 \x01(\bR\x0evalidateConfig\x12\x17\n" +
	"\adry_run\x18\x04 \x01(\bR\x06dryRun\x12\x1d\n" +
	"\n" +
	"auto_start\x18\x05 \x01(\bR\tautoStart\"\xbb\x04\n" +
	"\x0eProviderConfig\x12\x1f\n" +
	"\vprovider_id\x18\x01 \x01(\tR\n" +
	"providerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x124\n" +
	"\x04type\x18\x03 \x01(\x0e2 .gcommon.v1.metrics.ProviderTypeR\x04type\x12@\n" +
	"\bsettings\x18\x04 \x01(\v2$.gcommon.v1.metrics.ProviderSettingsR\bsettings\x12E\n" +
	"\rexport_config\x18\x05 \x01(\v2 .gcommon.v1.metrics.ExportConfigR\fexportConfig\x12K\n" +
	"\x0fresource_limits\x18\x06 \x01(\v2\".gcommon.v1.metrics.ResourceLimitsR\x0eresourceLimits\x12K\n" +
	"\x0fsecurity_config\x18\a \x01(\v2\".gcommon.v1.metrics.SecurityConfigR\x0esecurityConfig\x12@\n" +
	"\x04tags\x18\b \x03(\v2,.gcommon.v1.metrics.ProviderConfig.TagsEntryR\x04tags\x12 \n" +
	"\vdescription\x18\t \x01(\tR\vdescription\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xec\x02\n" +
	"\x10ProviderSettings\x12F\n" +
	"\n" +
	"prometheus\x18\x01 \x01(\v2&.gcommon.v1.metrics.PrometheusSettingsR\n" +
	"prometheus\x12O\n" +
	"\ropentelemetry\x18\x02 \x01(\v2).gcommon.v1.metrics.OpenTelemetrySettingsR\ropentelemetry\x12:\n" +
	"\x06statsd\x18\x03 \x01(\v2\".gcommon.v1.metrics.StatsDSettingsR\x06statsd\x12H\n" +
	"\x06custom\x18\x04 \x03(\v20.gcommon.v1.metrics.ProviderSettings.CustomEntryR\x06custom\x1a9\n" +
	"\vCustomEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc8\x02\n" +
	"\x12PrometheusSettings\x12\x1a\n" +
	"\bregistry\x18\x01 \x01(\tR\bregistry\x12.\n" +
	"\x13enable_push_gateway\x18\x02 \x01(\bR\x11enablePushGateway\x12(\n" +
	"\x10push_gateway_url\x18\x03 \x01(\tR\x0epushGatewayUrl\x12\x19\n" +
	"\bjob_name\x18\x04 \x01(\tR\ajobName\x12\x1a\n" +
	"\binstance\x18\x05 \x01(\tR\binstance\x12J\n" +
	"\x06labels\x18\x06 \x03(\v22.gcommon.v1.metrics.PrometheusSettings.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaf\x03\n" +
	"\x15OpenTelemetrySettings\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x17\n" +
	"\ause_tls\x18\x02 \x01(\bR\x06useTls\x12P\n" +
	"\aheaders\x18\x03 \x03(\v26.gcommon.v1.metrics.OpenTelemetrySettings.HeadersEntryR\aheaders\x12r\n" +
	"\x13resource_attributes\x18\x04 \x03(\v2A.gcommon.v1.metrics.OpenTelemetrySettings.ResourceAttributesEntryR\x12resourceAttributes\x12\x18\n" +
	"\atimeout\x18\x05 \x01(\tR\atimeout\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aE\n" +
	"\x17ResourceAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa0\x01\n" +
	"\x0eStatsDSettings\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x1a\n" +
	"\bprotocol\x18\x02 \x01(\tR\bprotocol\x12\x16\n" +
	"\x06prefix\x18\x03 \x01(\tR\x06prefix\x12\x1f\n" +
	"\vsample_rate\x18\x04 \x01(\x01R\n" +
	"sampleRate\x12\x1f\n" +
	"\vbuffer_size\x18\x05 \x01(\x05R\n" +
	"bufferSize\"\xc7\x01\n" +
	"\x11ExportDestination\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12I\n" +
	"\x06config\x18\x02 \x03(\v21.gcommon.v1.metrics.ExportDestination.ConfigEntryR\x06config\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe5\x01\n" +
	"\x0eResourceLimits\x12(\n" +
	"\x10max_memory_bytes\x18\x01 \x01(\x03R\x0emaxMemoryBytes\x12&\n" +
	"\x0fmax_cpu_percent\x18\x02 \x01(\x01R\rmaxCpuPercent\x12$\n" +
	"\x0emax_disk_bytes\x18\x03 \x01(\x03R\fmaxDiskBytes\x12\x1f\n" +
	"\vmax_metrics\x18\x04 \x01(\x03R\n" +
	"maxMetrics\x12:\n" +
	"\x1amax_data_points_per_metric\x18\x05 \x01(\x03R\x16maxDataPointsPerMetric\"\xfd\x01\n" +
	"\x0eSecurityConfig\x12!\n" +
	"\frequire_auth\x18\x01 \x01(\bR\vrequireAuth\x12!\n" +
	"\fauth_methods\x18\x02 \x03(\tR\vauthMethods\x12\x1f\n" +
	"\vrequire_tls\x18\x03 \x01(\bR\n" +
	"requireTls\x12<\n" +
	"\n" +
	"tls_config\x18\x04 \x01(\v2\x1d.gcommon.v1.metrics.TLSConfigR\ttlsConfig\x12F\n" +
	"\x0eapi_key_config\x18\x05 \x01(\v2 .gcommon.v1.metrics.APIKeyConfigR\fapiKeyConfig\"\x7f\n" +
	"\tTLSConfig\x12\x1b\n" +
	"\tcert_file\x18\x01 \x01(\tR\bcertFile\x12\x19\n" +
	"\bkey_file\x18\x02 \x01(\tR\akeyFile\x12\x17\n" +
	"\aca_file\x18\x03 \x01(\tR\x06caFile\x12!\n" +
	"\fverify_certs\x18\x04 \x01(\bR\vverifyCerts\"n\n" +
	"\fAPIKeyConfig\x12\x1f\n" +
	"\vheader_name\x18\x01 \x01(\tR\n" +
	"headerName\x12\x1a\n" +
	"\brequired\x18\x02 \x01(\bR\brequired\x12!\n" +
	"\fallowed_keys\x18\x03 \x03(\tR\vallowedKeys*\xd3\x01\n" +
	"\fProviderType\x12\x1d\n" +
	"\x19PROVIDER_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18PROVIDER_TYPE_PROMETHEUS\x10\x01\x12\x1f\n" +
	"\x1bPROVIDER_TYPE_OPENTELEMETRY\x10\x02\x12\x18\n" +
	"\x14PROVIDER_TYPE_STATSD\x10\x03\x12\x18\n" +
	"\x14PROVIDER_TYPE_CUSTOM\x10\x04\x12\x18\n" +
	"\x14PROVIDER_TYPE_MEMORY\x10\x05\x12\x17\n" +
	"\x13PROVIDER_TYPE_MULTI\x10\x06B\xcc\x01\n" +
	"\x16com.gcommon.v1.metricsB\x1aCreateProviderRequestProtoP\x01Z$../../../../pkg/metrics/pb;metricspb\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_requests_create_provider_request_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_pkg_metrics_proto_requests_create_provider_request_proto_goTypes = []any{
	(ProviderType)(0),             // 0: gcommon.v1.metrics.ProviderType
	(*CreateProviderRequest)(nil), // 1: gcommon.v1.metrics.CreateProviderRequest
	(*ProviderConfig)(nil),        // 2: gcommon.v1.metrics.ProviderConfig
	(*ProviderSettings)(nil),      // 3: gcommon.v1.metrics.ProviderSettings
	(*PrometheusSettings)(nil),    // 4: gcommon.v1.metrics.PrometheusSettings
	(*OpenTelemetrySettings)(nil), // 5: gcommon.v1.metrics.OpenTelemetrySettings
	(*StatsDSettings)(nil),        // 6: gcommon.v1.metrics.StatsDSettings
	(*ExportDestination)(nil),     // 7: gcommon.v1.metrics.ExportDestination
	(*ResourceLimits)(nil),        // 8: gcommon.v1.metrics.ResourceLimits
	(*SecurityConfig)(nil),        // 9: gcommon.v1.metrics.SecurityConfig
	(*TLSConfig)(nil),             // 10: gcommon.v1.metrics.TLSConfig
	(*APIKeyConfig)(nil),          // 11: gcommon.v1.metrics.APIKeyConfig
	nil,                           // 12: gcommon.v1.metrics.ProviderConfig.TagsEntry
	nil,                           // 13: gcommon.v1.metrics.ProviderSettings.CustomEntry
	nil,                           // 14: gcommon.v1.metrics.PrometheusSettings.LabelsEntry
	nil,                           // 15: gcommon.v1.metrics.OpenTelemetrySettings.HeadersEntry
	nil,                           // 16: gcommon.v1.metrics.OpenTelemetrySettings.ResourceAttributesEntry
	nil,                           // 17: gcommon.v1.metrics.ExportDestination.ConfigEntry
	(*pb.RequestMetadata)(nil),    // 18: gcommon.v1.common.RequestMetadata
	(*ExportConfig)(nil),          // 19: gcommon.v1.metrics.ExportConfig
}
var file_pkg_metrics_proto_requests_create_provider_request_proto_depIdxs = []int32{
	18, // 0: gcommon.v1.metrics.CreateProviderRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	2,  // 1: gcommon.v1.metrics.CreateProviderRequest.config:type_name -> gcommon.v1.metrics.ProviderConfig
	0,  // 2: gcommon.v1.metrics.ProviderConfig.type:type_name -> gcommon.v1.metrics.ProviderType
	3,  // 3: gcommon.v1.metrics.ProviderConfig.settings:type_name -> gcommon.v1.metrics.ProviderSettings
	19, // 4: gcommon.v1.metrics.ProviderConfig.export_config:type_name -> gcommon.v1.metrics.ExportConfig
	8,  // 5: gcommon.v1.metrics.ProviderConfig.resource_limits:type_name -> gcommon.v1.metrics.ResourceLimits
	9,  // 6: gcommon.v1.metrics.ProviderConfig.security_config:type_name -> gcommon.v1.metrics.SecurityConfig
	12, // 7: gcommon.v1.metrics.ProviderConfig.tags:type_name -> gcommon.v1.metrics.ProviderConfig.TagsEntry
	4,  // 8: gcommon.v1.metrics.ProviderSettings.prometheus:type_name -> gcommon.v1.metrics.PrometheusSettings
	5,  // 9: gcommon.v1.metrics.ProviderSettings.opentelemetry:type_name -> gcommon.v1.metrics.OpenTelemetrySettings
	6,  // 10: gcommon.v1.metrics.ProviderSettings.statsd:type_name -> gcommon.v1.metrics.StatsDSettings
	13, // 11: gcommon.v1.metrics.ProviderSettings.custom:type_name -> gcommon.v1.metrics.ProviderSettings.CustomEntry
	14, // 12: gcommon.v1.metrics.PrometheusSettings.labels:type_name -> gcommon.v1.metrics.PrometheusSettings.LabelsEntry
	15, // 13: gcommon.v1.metrics.OpenTelemetrySettings.headers:type_name -> gcommon.v1.metrics.OpenTelemetrySettings.HeadersEntry
	16, // 14: gcommon.v1.metrics.OpenTelemetrySettings.resource_attributes:type_name -> gcommon.v1.metrics.OpenTelemetrySettings.ResourceAttributesEntry
	17, // 15: gcommon.v1.metrics.ExportDestination.config:type_name -> gcommon.v1.metrics.ExportDestination.ConfigEntry
	10, // 16: gcommon.v1.metrics.SecurityConfig.tls_config:type_name -> gcommon.v1.metrics.TLSConfig
	11, // 17: gcommon.v1.metrics.SecurityConfig.api_key_config:type_name -> gcommon.v1.metrics.APIKeyConfig
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_requests_create_provider_request_proto_init() }
func file_pkg_metrics_proto_requests_create_provider_request_proto_init() {
	if File_pkg_metrics_proto_requests_create_provider_request_proto != nil {
		return
	}
	file_pkg_metrics_proto_types_export_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_requests_create_provider_request_proto_rawDesc), len(file_pkg_metrics_proto_requests_create_provider_request_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_requests_create_provider_request_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_requests_create_provider_request_proto_depIdxs,
		EnumInfos:         file_pkg_metrics_proto_requests_create_provider_request_proto_enumTypes,
		MessageInfos:      file_pkg_metrics_proto_requests_create_provider_request_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_requests_create_provider_request_proto = out.File
	file_pkg_metrics_proto_requests_create_provider_request_proto_goTypes = nil
	file_pkg_metrics_proto_requests_create_provider_request_proto_depIdxs = nil
}
