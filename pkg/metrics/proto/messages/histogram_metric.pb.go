// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/messages/histogram_metric.proto

package metricspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HistogramMetric represents a histogram metric with buckets
type HistogramMetric struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metric name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Metric labels
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Histogram buckets
	Buckets []*HistogramBucket `protobuf:"bytes,3,rep,name=buckets" json:"buckets,omitempty"`
	// Sample count
	SampleCount *uint64 `protobuf:"varint,4,opt,name=sample_count,json=sampleCount" json:"sample_count,omitempty"`
	// Sample sum
	SampleSum *float64 `protobuf:"fixed64,5,opt,name=sample_sum,json=sampleSum" json:"sample_sum,omitempty"`
	// Timestamp when the metric was recorded
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp" json:"timestamp,omitempty"`
	// Help text for the metric
	Help          *string `protobuf:"bytes,7,opt,name=help" json:"help,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistogramMetric) Reset() {
	*x = HistogramMetric{}
	mi := &file_pkg_metrics_proto_messages_histogram_metric_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistogramMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramMetric) ProtoMessage() {}

func (x *HistogramMetric) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_messages_histogram_metric_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistogramMetric.ProtoReflect.Descriptor instead.
func (*HistogramMetric) Descriptor() ([]byte, []int) {
	return file_pkg_metrics_proto_messages_histogram_metric_proto_rawDescGZIP(), []int{0}
}

func (x *HistogramMetric) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *HistogramMetric) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *HistogramMetric) GetBuckets() []*HistogramBucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *HistogramMetric) GetSampleCount() uint64 {
	if x != nil && x.SampleCount != nil {
		return *x.SampleCount
	}
	return 0
}

func (x *HistogramMetric) GetSampleSum() float64 {
	if x != nil && x.SampleSum != nil {
		return *x.SampleSum
	}
	return 0
}

func (x *HistogramMetric) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HistogramMetric) GetHelp() string {
	if x != nil && x.Help != nil {
		return *x.Help
	}
	return ""
}

var File_pkg_metrics_proto_messages_histogram_metric_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_messages_histogram_metric_proto_rawDesc = "" +
	"\n" +
	"1pkg/metrics/proto/messages/histogram_metric.proto\x12\x12gcommon.v1.metrics\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.pkg/metrics/proto/types/histogram_bucket.proto\"\xf8\x02\n" +
	"\x0fHistogramMetric\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12G\n" +
	"\x06labels\x18\x02 \x03(\v2/.gcommon.v1.metrics.HistogramMetric.LabelsEntryR\x06labels\x12=\n" +
	"\abuckets\x18\x03 \x03(\v2#.gcommon.v1.metrics.HistogramBucketR\abuckets\x12!\n" +
	"\fsample_count\x18\x04 \x01(\x04R\vsampleCount\x12\x1d\n" +
	"\n" +
	"sample_sum\x18\x05 \x01(\x01R\tsampleSum\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x12\n" +
	"\x04help\x18\a \x01(\tR\x04help\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xbe\x01\n" +
	"\x16com.gcommon.v1.metricsB\x14HistogramMetricProtoP\x01Z$../../../../pkg/metrics/pb;metricspb\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metricsb\beditionsp\xe8\a"

var (
	file_pkg_metrics_proto_messages_histogram_metric_proto_rawDescOnce sync.Once
	file_pkg_metrics_proto_messages_histogram_metric_proto_rawDescData []byte
)

func file_pkg_metrics_proto_messages_histogram_metric_proto_rawDescGZIP() []byte {
	file_pkg_metrics_proto_messages_histogram_metric_proto_rawDescOnce.Do(func() {
		file_pkg_metrics_proto_messages_histogram_metric_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_messages_histogram_metric_proto_rawDesc), len(file_pkg_metrics_proto_messages_histogram_metric_proto_rawDesc)))
	})
	return file_pkg_metrics_proto_messages_histogram_metric_proto_rawDescData
}

var file_pkg_metrics_proto_messages_histogram_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_metrics_proto_messages_histogram_metric_proto_goTypes = []any{
	(*HistogramMetric)(nil),       // 0: gcommon.v1.metrics.HistogramMetric
	nil,                           // 1: gcommon.v1.metrics.HistogramMetric.LabelsEntry
	(*HistogramBucket)(nil),       // 2: gcommon.v1.metrics.HistogramBucket
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_pkg_metrics_proto_messages_histogram_metric_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.metrics.HistogramMetric.labels:type_name -> gcommon.v1.metrics.HistogramMetric.LabelsEntry
	2, // 1: gcommon.v1.metrics.HistogramMetric.buckets:type_name -> gcommon.v1.metrics.HistogramBucket
	3, // 2: gcommon.v1.metrics.HistogramMetric.timestamp:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_messages_histogram_metric_proto_init() }
func file_pkg_metrics_proto_messages_histogram_metric_proto_init() {
	if File_pkg_metrics_proto_messages_histogram_metric_proto != nil {
		return
	}
	file_pkg_metrics_proto_types_histogram_bucket_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_messages_histogram_metric_proto_rawDesc), len(file_pkg_metrics_proto_messages_histogram_metric_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_messages_histogram_metric_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_messages_histogram_metric_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_messages_histogram_metric_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_messages_histogram_metric_proto = out.File
	file_pkg_metrics_proto_messages_histogram_metric_proto_goTypes = nil
	file_pkg_metrics_proto_messages_histogram_metric_proto_depIdxs = nil
}
