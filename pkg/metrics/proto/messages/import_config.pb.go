// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/messages/import_config.proto

//go:build !protoopaque

package metricspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// ImportConfig defines how external metrics should be imported
// into the system.
type ImportConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// List of source identifiers or URLs
	Sources []string `protobuf:"bytes,1,rep,name=sources" json:"sources,omitempty"`
	// Cron-style schedule for imports
	Schedule *string `protobuf:"bytes,2,opt,name=schedule" json:"schedule,omitempty"`
	// Whether importing is enabled
	Enabled       *bool `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportConfig) Reset() {
	*x = ImportConfig{}
	mi := &file_pkg_metrics_proto_messages_import_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportConfig) ProtoMessage() {}

func (x *ImportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_messages_import_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImportConfig) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *ImportConfig) GetSchedule() string {
	if x != nil && x.Schedule != nil {
		return *x.Schedule
	}
	return ""
}

func (x *ImportConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ImportConfig) SetSources(v []string) {
	x.Sources = v
}

func (x *ImportConfig) SetSchedule(v string) {
	x.Schedule = &v
}

func (x *ImportConfig) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *ImportConfig) HasSchedule() bool {
	if x == nil {
		return false
	}
	return x.Schedule != nil
}

func (x *ImportConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *ImportConfig) ClearSchedule() {
	x.Schedule = nil
}

func (x *ImportConfig) ClearEnabled() {
	x.Enabled = nil
}

type ImportConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// List of source identifiers or URLs
	Sources []string
	// Cron-style schedule for imports
	Schedule *string
	// Whether importing is enabled
	Enabled *bool
}

func (b0 ImportConfig_builder) Build() *ImportConfig {
	m0 := &ImportConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Sources = b.Sources
	x.Schedule = b.Schedule
	x.Enabled = b.Enabled
	return m0
}

var File_pkg_metrics_proto_messages_import_config_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_messages_import_config_proto_rawDesc = "" +
	"\n" +
	".pkg/metrics/proto/messages/import_config.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\"^\n" +
	"\fImportConfig\x12\x18\n" +
	"\asources\x18\x01 \x03(\tR\asources\x12\x1a\n" +
	"\bschedule\x18\x02 \x01(\tR\bschedule\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabledB\xc3\x01\n" +
	"\x16com.gcommon.v1.metricsB\x11ImportConfigProtoP\x01Z$../../../../pkg/metrics/pb;metricspb\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_messages_import_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_metrics_proto_messages_import_config_proto_goTypes = []any{
	(*ImportConfig)(nil), // 0: gcommon.v1.metrics.ImportConfig
}
var file_pkg_metrics_proto_messages_import_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_messages_import_config_proto_init() }
func file_pkg_metrics_proto_messages_import_config_proto_init() {
	if File_pkg_metrics_proto_messages_import_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_messages_import_config_proto_rawDesc), len(file_pkg_metrics_proto_messages_import_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_messages_import_config_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_messages_import_config_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_messages_import_config_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_messages_import_config_proto = out.File
	file_pkg_metrics_proto_messages_import_config_proto_goTypes = nil
	file_pkg_metrics_proto_messages_import_config_proto_depIdxs = nil
}
