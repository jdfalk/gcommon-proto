// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/messages/metric_query.proto

//go:build protoopaque

package messages

import (
	enums "github.com/jdfalk/gcommon/pkg/metrics/proto/enums"
	types "github.com/jdfalk/gcommon/pkg/metrics/proto/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// MetricQuery represents a query for retrieving and processing metric data.
// Supports filtering, aggregation, and transformation operations.
type MetricQuery struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_QueryId      *string                `protobuf:"bytes,1,opt,name=query_id,json=queryId"`
	xxx_hidden_Name         *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_QueryString  *string                `protobuf:"bytes,3,opt,name=query_string,json=queryString"`
	xxx_hidden_Filter       *MetricFilter          `protobuf:"bytes,4,opt,name=filter"`
	xxx_hidden_TimeFilter   *types.TimeFilter      `protobuf:"bytes,5,opt,name=time_filter,json=timeFilter"`
	xxx_hidden_Aggregations *[]*AggregationSpec    `protobuf:"bytes,6,rep,name=aggregations"`
	xxx_hidden_GroupBy      *[]*GroupBySpec        `protobuf:"bytes,7,rep,name=group_by,json=groupBy"`
	xxx_hidden_SortCriteria *[]*SortCriteria       `protobuf:"bytes,8,rep,name=sort_criteria,json=sortCriteria"`
	xxx_hidden_Limit        int32                  `protobuf:"varint,9,opt,name=limit"`
	xxx_hidden_Offset       int32                  `protobuf:"varint,10,opt,name=offset"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *MetricQuery) Reset() {
	*x = MetricQuery{}
	mi := &file_pkg_metrics_proto_messages_metric_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricQuery) ProtoMessage() {}

func (x *MetricQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_messages_metric_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MetricQuery) GetQueryId() string {
	if x != nil {
		if x.xxx_hidden_QueryId != nil {
			return *x.xxx_hidden_QueryId
		}
		return ""
	}
	return ""
}

func (x *MetricQuery) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *MetricQuery) GetQueryString() string {
	if x != nil {
		if x.xxx_hidden_QueryString != nil {
			return *x.xxx_hidden_QueryString
		}
		return ""
	}
	return ""
}

func (x *MetricQuery) GetFilter() *MetricFilter {
	if x != nil {
		return x.xxx_hidden_Filter
	}
	return nil
}

func (x *MetricQuery) GetTimeFilter() *types.TimeFilter {
	if x != nil {
		return x.xxx_hidden_TimeFilter
	}
	return nil
}

func (x *MetricQuery) GetAggregations() []*AggregationSpec {
	if x != nil {
		if x.xxx_hidden_Aggregations != nil {
			return *x.xxx_hidden_Aggregations
		}
	}
	return nil
}

func (x *MetricQuery) GetGroupBy() []*GroupBySpec {
	if x != nil {
		if x.xxx_hidden_GroupBy != nil {
			return *x.xxx_hidden_GroupBy
		}
	}
	return nil
}

func (x *MetricQuery) GetSortCriteria() []*SortCriteria {
	if x != nil {
		if x.xxx_hidden_SortCriteria != nil {
			return *x.xxx_hidden_SortCriteria
		}
	}
	return nil
}

func (x *MetricQuery) GetLimit() int32 {
	if x != nil {
		return x.xxx_hidden_Limit
	}
	return 0
}

func (x *MetricQuery) GetOffset() int32 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *MetricQuery) SetQueryId(v string) {
	x.xxx_hidden_QueryId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *MetricQuery) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *MetricQuery) SetQueryString(v string) {
	x.xxx_hidden_QueryString = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *MetricQuery) SetFilter(v *MetricFilter) {
	x.xxx_hidden_Filter = v
}

func (x *MetricQuery) SetTimeFilter(v *types.TimeFilter) {
	x.xxx_hidden_TimeFilter = v
}

func (x *MetricQuery) SetAggregations(v []*AggregationSpec) {
	x.xxx_hidden_Aggregations = &v
}

func (x *MetricQuery) SetGroupBy(v []*GroupBySpec) {
	x.xxx_hidden_GroupBy = &v
}

func (x *MetricQuery) SetSortCriteria(v []*SortCriteria) {
	x.xxx_hidden_SortCriteria = &v
}

func (x *MetricQuery) SetLimit(v int32) {
	x.xxx_hidden_Limit = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
}

func (x *MetricQuery) SetOffset(v int32) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *MetricQuery) HasQueryId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MetricQuery) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MetricQuery) HasQueryString() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MetricQuery) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Filter != nil
}

func (x *MetricQuery) HasTimeFilter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TimeFilter != nil
}

func (x *MetricQuery) HasLimit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *MetricQuery) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *MetricQuery) ClearQueryId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_QueryId = nil
}

func (x *MetricQuery) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *MetricQuery) ClearQueryString() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_QueryString = nil
}

func (x *MetricQuery) ClearFilter() {
	x.xxx_hidden_Filter = nil
}

func (x *MetricQuery) ClearTimeFilter() {
	x.xxx_hidden_TimeFilter = nil
}

func (x *MetricQuery) ClearLimit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Limit = 0
}

func (x *MetricQuery) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Offset = 0
}

type MetricQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique identifier for this query
	QueryId *string
	// Human-readable query name or description
	Name *string
	// Query string (PromQL, SQL, or custom query language)
	QueryString *string
	// Filter criteria for selecting metrics
	Filter *MetricFilter
	// Time range for the query
	TimeFilter *types.TimeFilter
	// Aggregation operations to apply
	Aggregations []*AggregationSpec
	// Group by specifications
	GroupBy []*GroupBySpec
	// Sort criteria
	SortCriteria []*SortCriteria
	// Maximum number of results to return
	Limit *int32
	// Offset for pagination
	Offset *int32
}

func (b0 MetricQuery_builder) Build() *MetricQuery {
	m0 := &MetricQuery{}
	b, x := &b0, m0
	_, _ = b, x
	if b.QueryId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_QueryId = b.QueryId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_Name = b.Name
	}
	if b.QueryString != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_QueryString = b.QueryString
	}
	x.xxx_hidden_Filter = b.Filter
	x.xxx_hidden_TimeFilter = b.TimeFilter
	x.xxx_hidden_Aggregations = &b.Aggregations
	x.xxx_hidden_GroupBy = &b.GroupBy
	x.xxx_hidden_SortCriteria = &b.SortCriteria
	if b.Limit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_Limit = *b.Limit
	}
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_Offset = *b.Offset
	}
	return m0
}

// *
// AggregationSpec defines how to aggregate metric data.
type AggregationSpec struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AggregationType enums.AggregationType  `protobuf:"varint,1,opt,name=aggregation_type,json=aggregationType,enum=gcommon.v1.metrics.AggregationType"`
	xxx_hidden_Field           *string                `protobuf:"bytes,2,opt,name=field"`
	xxx_hidden_Window          *durationpb.Duration   `protobuf:"bytes,3,opt,name=window"`
	xxx_hidden_Step            *durationpb.Duration   `protobuf:"bytes,4,opt,name=step"`
	xxx_hidden_Parameters      map[string]string      `protobuf:"bytes,5,rep,name=parameters" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *AggregationSpec) Reset() {
	*x = AggregationSpec{}
	mi := &file_pkg_metrics_proto_messages_metric_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationSpec) ProtoMessage() {}

func (x *AggregationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_messages_metric_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AggregationSpec) GetAggregationType() enums.AggregationType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_AggregationType
		}
	}
	return enums.AggregationType(0)
}

func (x *AggregationSpec) GetField() string {
	if x != nil {
		if x.xxx_hidden_Field != nil {
			return *x.xxx_hidden_Field
		}
		return ""
	}
	return ""
}

func (x *AggregationSpec) GetWindow() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Window
	}
	return nil
}

func (x *AggregationSpec) GetStep() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Step
	}
	return nil
}

func (x *AggregationSpec) GetParameters() map[string]string {
	if x != nil {
		return x.xxx_hidden_Parameters
	}
	return nil
}

func (x *AggregationSpec) SetAggregationType(v enums.AggregationType) {
	x.xxx_hidden_AggregationType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *AggregationSpec) SetField(v string) {
	x.xxx_hidden_Field = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *AggregationSpec) SetWindow(v *durationpb.Duration) {
	x.xxx_hidden_Window = v
}

func (x *AggregationSpec) SetStep(v *durationpb.Duration) {
	x.xxx_hidden_Step = v
}

func (x *AggregationSpec) SetParameters(v map[string]string) {
	x.xxx_hidden_Parameters = v
}

func (x *AggregationSpec) HasAggregationType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AggregationSpec) HasField() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AggregationSpec) HasWindow() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Window != nil
}

func (x *AggregationSpec) HasStep() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Step != nil
}

func (x *AggregationSpec) ClearAggregationType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_AggregationType = enums.AggregationType_AGGREGATION_TYPE_UNSPECIFIED
}

func (x *AggregationSpec) ClearField() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Field = nil
}

func (x *AggregationSpec) ClearWindow() {
	x.xxx_hidden_Window = nil
}

func (x *AggregationSpec) ClearStep() {
	x.xxx_hidden_Step = nil
}

type AggregationSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Type of aggregation to perform
	AggregationType *enums.AggregationType
	// Field to aggregate on (if applicable)
	Field *string
	// Time window for aggregation
	Window *durationpb.Duration
	// Step/resolution for time-based aggregation
	Step *durationpb.Duration
	// Additional parameters for complex aggregations
	Parameters map[string]string
}

func (b0 AggregationSpec_builder) Build() *AggregationSpec {
	m0 := &AggregationSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.AggregationType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_AggregationType = *b.AggregationType
	}
	if b.Field != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Field = b.Field
	}
	x.xxx_hidden_Window = b.Window
	x.xxx_hidden_Step = b.Step
	x.xxx_hidden_Parameters = b.Parameters
	return m0
}

// *
// GroupBySpec defines how to group metric results.
type GroupBySpec struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LabelKeys   []string               `protobuf:"bytes,1,rep,name=label_keys,json=labelKeys"`
	xxx_hidden_TimeGroup   *durationpb.Duration   `protobuf:"bytes,2,opt,name=time_group,json=timeGroup"`
	xxx_hidden_MaxGroups   int32                  `protobuf:"varint,3,opt,name=max_groups,json=maxGroups"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GroupBySpec) Reset() {
	*x = GroupBySpec{}
	mi := &file_pkg_metrics_proto_messages_metric_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupBySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBySpec) ProtoMessage() {}

func (x *GroupBySpec) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_messages_metric_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GroupBySpec) GetLabelKeys() []string {
	if x != nil {
		return x.xxx_hidden_LabelKeys
	}
	return nil
}

func (x *GroupBySpec) GetTimeGroup() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_TimeGroup
	}
	return nil
}

func (x *GroupBySpec) GetMaxGroups() int32 {
	if x != nil {
		return x.xxx_hidden_MaxGroups
	}
	return 0
}

func (x *GroupBySpec) SetLabelKeys(v []string) {
	x.xxx_hidden_LabelKeys = v
}

func (x *GroupBySpec) SetTimeGroup(v *durationpb.Duration) {
	x.xxx_hidden_TimeGroup = v
}

func (x *GroupBySpec) SetMaxGroups(v int32) {
	x.xxx_hidden_MaxGroups = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *GroupBySpec) HasTimeGroup() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TimeGroup != nil
}

func (x *GroupBySpec) HasMaxGroups() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GroupBySpec) ClearTimeGroup() {
	x.xxx_hidden_TimeGroup = nil
}

func (x *GroupBySpec) ClearMaxGroups() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxGroups = 0
}

type GroupBySpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Label keys to group by
	LabelKeys []string
	// Time-based grouping (e.g., by hour, day)
	TimeGroup *durationpb.Duration
	// Maximum number of groups to return
	MaxGroups *int32
}

func (b0 GroupBySpec_builder) Build() *GroupBySpec {
	m0 := &GroupBySpec{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LabelKeys = b.LabelKeys
	x.xxx_hidden_TimeGroup = b.TimeGroup
	if b.MaxGroups != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MaxGroups = *b.MaxGroups
	}
	return m0
}

// *
// QueryPlan represents an execution plan for a metric query.
// Used for query optimization and debugging.
type QueryPlan struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_QueryId             *string                `protobuf:"bytes,1,opt,name=query_id,json=queryId"`
	xxx_hidden_EstimatedDuration   *durationpb.Duration   `protobuf:"bytes,2,opt,name=estimated_duration,json=estimatedDuration"`
	xxx_hidden_EstimatedDataPoints int64                  `protobuf:"varint,3,opt,name=estimated_data_points,json=estimatedDataPoints"`
	xxx_hidden_Steps               *[]*QueryStep          `protobuf:"bytes,4,rep,name=steps"`
	xxx_hidden_StorageBackends     []string               `protobuf:"bytes,5,rep,name=storage_backends,json=storageBackends"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *QueryPlan) Reset() {
	*x = QueryPlan{}
	mi := &file_pkg_metrics_proto_messages_metric_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlan) ProtoMessage() {}

func (x *QueryPlan) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_messages_metric_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryPlan) GetQueryId() string {
	if x != nil {
		if x.xxx_hidden_QueryId != nil {
			return *x.xxx_hidden_QueryId
		}
		return ""
	}
	return ""
}

func (x *QueryPlan) GetEstimatedDuration() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_EstimatedDuration
	}
	return nil
}

func (x *QueryPlan) GetEstimatedDataPoints() int64 {
	if x != nil {
		return x.xxx_hidden_EstimatedDataPoints
	}
	return 0
}

func (x *QueryPlan) GetSteps() []*QueryStep {
	if x != nil {
		if x.xxx_hidden_Steps != nil {
			return *x.xxx_hidden_Steps
		}
	}
	return nil
}

func (x *QueryPlan) GetStorageBackends() []string {
	if x != nil {
		return x.xxx_hidden_StorageBackends
	}
	return nil
}

func (x *QueryPlan) SetQueryId(v string) {
	x.xxx_hidden_QueryId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *QueryPlan) SetEstimatedDuration(v *durationpb.Duration) {
	x.xxx_hidden_EstimatedDuration = v
}

func (x *QueryPlan) SetEstimatedDataPoints(v int64) {
	x.xxx_hidden_EstimatedDataPoints = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *QueryPlan) SetSteps(v []*QueryStep) {
	x.xxx_hidden_Steps = &v
}

func (x *QueryPlan) SetStorageBackends(v []string) {
	x.xxx_hidden_StorageBackends = v
}

func (x *QueryPlan) HasQueryId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QueryPlan) HasEstimatedDuration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EstimatedDuration != nil
}

func (x *QueryPlan) HasEstimatedDataPoints() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *QueryPlan) ClearQueryId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_QueryId = nil
}

func (x *QueryPlan) ClearEstimatedDuration() {
	x.xxx_hidden_EstimatedDuration = nil
}

func (x *QueryPlan) ClearEstimatedDataPoints() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EstimatedDataPoints = 0
}

type QueryPlan_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Query that this plan is for
	QueryId *string
	// Estimated execution time
	EstimatedDuration *durationpb.Duration
	// Estimated number of data points to process
	EstimatedDataPoints *int64
	// Execution steps
	Steps []*QueryStep
	// Storage backends that will be queried
	StorageBackends []string
}

func (b0 QueryPlan_builder) Build() *QueryPlan {
	m0 := &QueryPlan{}
	b, x := &b0, m0
	_, _ = b, x
	if b.QueryId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_QueryId = b.QueryId
	}
	x.xxx_hidden_EstimatedDuration = b.EstimatedDuration
	if b.EstimatedDataPoints != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_EstimatedDataPoints = *b.EstimatedDataPoints
	}
	x.xxx_hidden_Steps = &b.Steps
	x.xxx_hidden_StorageBackends = b.StorageBackends
	return m0
}

// *
// QueryStep represents a single step in query execution.
type QueryStep struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_StepId            *string                `protobuf:"bytes,1,opt,name=step_id,json=stepId"`
	xxx_hidden_Operation         enums.QueryOperation   `protobuf:"varint,2,opt,name=operation,enum=gcommon.v1.metrics.QueryOperation"`
	xxx_hidden_Description       *string                `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_EstimatedDuration *durationpb.Duration   `protobuf:"bytes,4,opt,name=estimated_duration,json=estimatedDuration"`
	xxx_hidden_InputStepIds      []string               `protobuf:"bytes,5,rep,name=input_step_ids,json=inputStepIds"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *QueryStep) Reset() {
	*x = QueryStep{}
	mi := &file_pkg_metrics_proto_messages_metric_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStep) ProtoMessage() {}

func (x *QueryStep) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_messages_metric_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryStep) GetStepId() string {
	if x != nil {
		if x.xxx_hidden_StepId != nil {
			return *x.xxx_hidden_StepId
		}
		return ""
	}
	return ""
}

func (x *QueryStep) GetOperation() enums.QueryOperation {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Operation
		}
	}
	return enums.QueryOperation(0)
}

func (x *QueryStep) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *QueryStep) GetEstimatedDuration() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_EstimatedDuration
	}
	return nil
}

func (x *QueryStep) GetInputStepIds() []string {
	if x != nil {
		return x.xxx_hidden_InputStepIds
	}
	return nil
}

func (x *QueryStep) SetStepId(v string) {
	x.xxx_hidden_StepId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *QueryStep) SetOperation(v enums.QueryOperation) {
	x.xxx_hidden_Operation = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *QueryStep) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *QueryStep) SetEstimatedDuration(v *durationpb.Duration) {
	x.xxx_hidden_EstimatedDuration = v
}

func (x *QueryStep) SetInputStepIds(v []string) {
	x.xxx_hidden_InputStepIds = v
}

func (x *QueryStep) HasStepId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QueryStep) HasOperation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *QueryStep) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *QueryStep) HasEstimatedDuration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EstimatedDuration != nil
}

func (x *QueryStep) ClearStepId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_StepId = nil
}

func (x *QueryStep) ClearOperation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Operation = enums.QueryOperation_QUERY_OPERATION_UNSPECIFIED
}

func (x *QueryStep) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *QueryStep) ClearEstimatedDuration() {
	x.xxx_hidden_EstimatedDuration = nil
}

type QueryStep_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Step identifier
	StepId *string
	// Operation to perform in this step
	Operation *enums.QueryOperation
	// Description of the operation
	Description *string
	// Estimated cost/time for this step
	EstimatedDuration *durationpb.Duration
	// Input from previous steps
	InputStepIds []string
}

func (b0 QueryStep_builder) Build() *QueryStep {
	m0 := &QueryStep{}
	b, x := &b0, m0
	_, _ = b, x
	if b.StepId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_StepId = b.StepId
	}
	if b.Operation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Operation = *b.Operation
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_EstimatedDuration = b.EstimatedDuration
	x.xxx_hidden_InputStepIds = b.InputStepIds
	return m0
}

var File_pkg_metrics_proto_messages_metric_query_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_messages_metric_query_proto_rawDesc = "" +
	"\n" +
	"-pkg/metrics/proto/messages/metric_query.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a\x1egoogle/protobuf/duration.proto\x1a-pkg/metrics/proto/enums/query_operation.proto\x1a.pkg/metrics/proto/enums/aggregation_type.proto\x1a.pkg/metrics/proto/messages/metric_filter.proto\x1a-pkg/metrics/proto/types/timestamp_range.proto\"\xd4\x03\n" +
	"\vMetricQuery\x12\x19\n" +
	"\bquery_id\x18\x01 \x01(\tR\aqueryId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fquery_string\x18\x03 \x01(\tR\vqueryString\x128\n" +
	"\x06filter\x18\x04 \x01(\v2 .gcommon.v1.metrics.MetricFilterR\x06filter\x12?\n" +
	"\vtime_filter\x18\x05 \x01(\v2\x1e.gcommon.v1.metrics.TimeFilterR\n" +
	"timeFilter\x12G\n" +
	"\faggregations\x18\x06 \x03(\v2#.gcommon.v1.metrics.AggregationSpecR\faggregations\x12:\n" +
	"\bgroup_by\x18\a \x03(\v2\x1f.gcommon.v1.metrics.GroupBySpecR\agroupBy\x12E\n" +
	"\rsort_criteria\x18\b \x03(\v2 .gcommon.v1.metrics.SortCriteriaR\fsortCriteria\x12\x14\n" +
	"\x05limit\x18\t \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\"\xed\x02\n" +
	"\x0fAggregationSpec\x12N\n" +
	"\x10aggregation_type\x18\x01 \x01(\x0e2#.gcommon.v1.metrics.AggregationTypeR\x0faggregationType\x12\x14\n" +
	"\x05field\x18\x02 \x01(\tR\x05field\x121\n" +
	"\x06window\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x06window\x12-\n" +
	"\x04step\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x04step\x12S\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v23.gcommon.v1.metrics.AggregationSpec.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x85\x01\n" +
	"\vGroupBySpec\x12\x1d\n" +
	"\n" +
	"label_keys\x18\x01 \x03(\tR\tlabelKeys\x128\n" +
	"\n" +
	"time_group\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\ttimeGroup\x12\x1d\n" +
	"\n" +
	"max_groups\x18\x03 \x01(\x05R\tmaxGroups\"\x84\x02\n" +
	"\tQueryPlan\x12\x19\n" +
	"\bquery_id\x18\x01 \x01(\tR\aqueryId\x12H\n" +
	"\x12estimated_duration\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x11estimatedDuration\x122\n" +
	"\x15estimated_data_points\x18\x03 \x01(\x03R\x13estimatedDataPoints\x123\n" +
	"\x05steps\x18\x04 \x03(\v2\x1d.gcommon.v1.metrics.QueryStepR\x05steps\x12)\n" +
	"\x10storage_backends\x18\x05 \x03(\tR\x0fstorageBackends\"\xf8\x01\n" +
	"\tQueryStep\x12\x17\n" +
	"\astep_id\x18\x01 \x01(\tR\x06stepId\x12@\n" +
	"\toperation\x18\x02 \x01(\x0e2\".gcommon.v1.metrics.QueryOperationR\toperation\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12H\n" +
	"\x12estimated_duration\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x11estimatedDuration\x12$\n" +
	"\x0einput_step_ids\x18\x05 \x03(\tR\finputStepIdsB\xd2\x01\n" +
	"\x16com.gcommon.v1.metricsB\x10MetricQueryProtoP\x01Z4github.com/jdfalk/gcommon/pkg/metrics/proto/messages\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_messages_metric_query_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_metrics_proto_messages_metric_query_proto_goTypes = []any{
	(*MetricQuery)(nil),         // 0: gcommon.v1.metrics.MetricQuery
	(*AggregationSpec)(nil),     // 1: gcommon.v1.metrics.AggregationSpec
	(*GroupBySpec)(nil),         // 2: gcommon.v1.metrics.GroupBySpec
	(*QueryPlan)(nil),           // 3: gcommon.v1.metrics.QueryPlan
	(*QueryStep)(nil),           // 4: gcommon.v1.metrics.QueryStep
	nil,                         // 5: gcommon.v1.metrics.AggregationSpec.ParametersEntry
	(*MetricFilter)(nil),        // 6: gcommon.v1.metrics.MetricFilter
	(*types.TimeFilter)(nil),    // 7: gcommon.v1.metrics.TimeFilter
	(*SortCriteria)(nil),        // 8: gcommon.v1.metrics.SortCriteria
	(enums.AggregationType)(0),  // 9: gcommon.v1.metrics.AggregationType
	(*durationpb.Duration)(nil), // 10: google.protobuf.Duration
	(enums.QueryOperation)(0),   // 11: gcommon.v1.metrics.QueryOperation
}
var file_pkg_metrics_proto_messages_metric_query_proto_depIdxs = []int32{
	6,  // 0: gcommon.v1.metrics.MetricQuery.filter:type_name -> gcommon.v1.metrics.MetricFilter
	7,  // 1: gcommon.v1.metrics.MetricQuery.time_filter:type_name -> gcommon.v1.metrics.TimeFilter
	1,  // 2: gcommon.v1.metrics.MetricQuery.aggregations:type_name -> gcommon.v1.metrics.AggregationSpec
	2,  // 3: gcommon.v1.metrics.MetricQuery.group_by:type_name -> gcommon.v1.metrics.GroupBySpec
	8,  // 4: gcommon.v1.metrics.MetricQuery.sort_criteria:type_name -> gcommon.v1.metrics.SortCriteria
	9,  // 5: gcommon.v1.metrics.AggregationSpec.aggregation_type:type_name -> gcommon.v1.metrics.AggregationType
	10, // 6: gcommon.v1.metrics.AggregationSpec.window:type_name -> google.protobuf.Duration
	10, // 7: gcommon.v1.metrics.AggregationSpec.step:type_name -> google.protobuf.Duration
	5,  // 8: gcommon.v1.metrics.AggregationSpec.parameters:type_name -> gcommon.v1.metrics.AggregationSpec.ParametersEntry
	10, // 9: gcommon.v1.metrics.GroupBySpec.time_group:type_name -> google.protobuf.Duration
	10, // 10: gcommon.v1.metrics.QueryPlan.estimated_duration:type_name -> google.protobuf.Duration
	4,  // 11: gcommon.v1.metrics.QueryPlan.steps:type_name -> gcommon.v1.metrics.QueryStep
	11, // 12: gcommon.v1.metrics.QueryStep.operation:type_name -> gcommon.v1.metrics.QueryOperation
	10, // 13: gcommon.v1.metrics.QueryStep.estimated_duration:type_name -> google.protobuf.Duration
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_messages_metric_query_proto_init() }
func file_pkg_metrics_proto_messages_metric_query_proto_init() {
	if File_pkg_metrics_proto_messages_metric_query_proto != nil {
		return
	}
	file_pkg_metrics_proto_messages_metric_filter_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_messages_metric_query_proto_rawDesc), len(file_pkg_metrics_proto_messages_metric_query_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_messages_metric_query_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_messages_metric_query_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_messages_metric_query_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_messages_metric_query_proto = out.File
	file_pkg_metrics_proto_messages_metric_query_proto_goTypes = nil
	file_pkg_metrics_proto_messages_metric_query_proto_depIdxs = nil
}
