// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/record_counter_response.proto

package proto

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordCounterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// The recorded counter metric with updated value
	Metric *CounterMetric `protobuf:"bytes,2,opt,name=metric" json:"metric,omitempty"`
	// Timestamp when the metric was recorded
	RecordedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=recorded_at,json=recordedAt" json:"recorded_at,omitempty"`
	// Error information if operation failed
	Error *proto.Error `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	// Response metadata for tracing
	Metadata      *proto.RequestMetadata `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordCounterResponse) Reset() {
	*x = RecordCounterResponse{}
	mi := &file_pkg_metrics_proto_record_counter_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordCounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordCounterResponse) ProtoMessage() {}

func (x *RecordCounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_record_counter_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordCounterResponse.ProtoReflect.Descriptor instead.
func (*RecordCounterResponse) Descriptor() ([]byte, []int) {
	return file_pkg_metrics_proto_record_counter_response_proto_rawDescGZIP(), []int{0}
}

func (x *RecordCounterResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *RecordCounterResponse) GetMetric() *CounterMetric {
	if x != nil {
		return x.Metric
	}
	return nil
}

func (x *RecordCounterResponse) GetRecordedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RecordedAt
	}
	return nil
}

func (x *RecordCounterResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RecordCounterResponse) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_pkg_metrics_proto_record_counter_response_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_record_counter_response_proto_rawDesc = "" +
	"\n" +
	"/pkg/metrics/proto/record_counter_response.proto\x12\x12gcommon.v1.metrics\x1a&pkg/metrics/proto/counter_metric.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cpkg/common/proto/error.proto\x1a'pkg/common/proto/request_metadata.proto\"\x99\x02\n" +
	"\x15RecordCounterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x129\n" +
	"\x06metric\x18\x02 \x01(\v2!.gcommon.v1.metrics.CounterMetricR\x06metric\x12;\n" +
	"\vrecorded_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"recordedAt\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\x12>\n" +
	"\bmetadata\x18\x05 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadataB\xcb\x01\n" +
	"\x16com.gcommon.v1.metricsB\x1aRecordCounterResponseProtoP\x01Z+github.com/jdfalk/gcommon/pkg/metrics/proto\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metricsb\beditionsp\xe8\a"

var (
	file_pkg_metrics_proto_record_counter_response_proto_rawDescOnce sync.Once
	file_pkg_metrics_proto_record_counter_response_proto_rawDescData []byte
)

func file_pkg_metrics_proto_record_counter_response_proto_rawDescGZIP() []byte {
	file_pkg_metrics_proto_record_counter_response_proto_rawDescOnce.Do(func() {
		file_pkg_metrics_proto_record_counter_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_record_counter_response_proto_rawDesc), len(file_pkg_metrics_proto_record_counter_response_proto_rawDesc)))
	})
	return file_pkg_metrics_proto_record_counter_response_proto_rawDescData
}

var file_pkg_metrics_proto_record_counter_response_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_metrics_proto_record_counter_response_proto_goTypes = []any{
	(*RecordCounterResponse)(nil), // 0: gcommon.v1.metrics.RecordCounterResponse
	(*CounterMetric)(nil),         // 1: gcommon.v1.metrics.CounterMetric
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*proto.Error)(nil),           // 3: gcommon.v1.common.Error
	(*proto.RequestMetadata)(nil), // 4: gcommon.v1.common.RequestMetadata
}
var file_pkg_metrics_proto_record_counter_response_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.metrics.RecordCounterResponse.metric:type_name -> gcommon.v1.metrics.CounterMetric
	2, // 1: gcommon.v1.metrics.RecordCounterResponse.recorded_at:type_name -> google.protobuf.Timestamp
	3, // 2: gcommon.v1.metrics.RecordCounterResponse.error:type_name -> gcommon.v1.common.Error
	4, // 3: gcommon.v1.metrics.RecordCounterResponse.metadata:type_name -> gcommon.v1.common.RequestMetadata
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_record_counter_response_proto_init() }
func file_pkg_metrics_proto_record_counter_response_proto_init() {
	if File_pkg_metrics_proto_record_counter_response_proto != nil {
		return
	}
	file_pkg_metrics_proto_counter_metric_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_record_counter_response_proto_rawDesc), len(file_pkg_metrics_proto_record_counter_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_record_counter_response_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_record_counter_response_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_record_counter_response_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_record_counter_response_proto = out.File
	file_pkg_metrics_proto_record_counter_response_proto_goTypes = nil
	file_pkg_metrics_proto_record_counter_response_proto_depIdxs = nil
}
