// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: metrics.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MetricType represents a metric type
type MetricType int32

const (
	MetricType_METRIC_TYPE_UNSPECIFIED MetricType = 0
	MetricType_METRIC_TYPE_COUNTER     MetricType = 1
	MetricType_METRIC_TYPE_GAUGE       MetricType = 2
	MetricType_METRIC_TYPE_HISTOGRAM   MetricType = 3
	MetricType_METRIC_TYPE_SUMMARY     MetricType = 4
)

// Enum value maps for MetricType.
var (
	MetricType_name = map[int32]string{
		0: "METRIC_TYPE_UNSPECIFIED",
		1: "METRIC_TYPE_COUNTER",
		2: "METRIC_TYPE_GAUGE",
		3: "METRIC_TYPE_HISTOGRAM",
		4: "METRIC_TYPE_SUMMARY",
	}
	MetricType_value = map[string]int32{
		"METRIC_TYPE_UNSPECIFIED": 0,
		"METRIC_TYPE_COUNTER":     1,
		"METRIC_TYPE_GAUGE":       2,
		"METRIC_TYPE_HISTOGRAM":   3,
		"METRIC_TYPE_SUMMARY":     4,
	}
)

func (x MetricType) Enum() *MetricType {
	p := new(MetricType)
	*p = x
	return p
}

func (x MetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_metrics_proto_enumTypes[0].Descriptor()
}

func (MetricType) Type() protoreflect.EnumType {
	return &file_metrics_proto_enumTypes[0]
}

func (x MetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricType.Descriptor instead.
func (MetricType) EnumDescriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{0}
}

// UpdateType represents a metric update type
type UpdateType int32

const (
	UpdateType_UPDATE_TYPE_UNSPECIFIED UpdateType = 0
	UpdateType_UPDATE_TYPE_ADDED       UpdateType = 1
	UpdateType_UPDATE_TYPE_MODIFIED    UpdateType = 2
	UpdateType_UPDATE_TYPE_REMOVED     UpdateType = 3
)

// Enum value maps for UpdateType.
var (
	UpdateType_name = map[int32]string{
		0: "UPDATE_TYPE_UNSPECIFIED",
		1: "UPDATE_TYPE_ADDED",
		2: "UPDATE_TYPE_MODIFIED",
		3: "UPDATE_TYPE_REMOVED",
	}
	UpdateType_value = map[string]int32{
		"UPDATE_TYPE_UNSPECIFIED": 0,
		"UPDATE_TYPE_ADDED":       1,
		"UPDATE_TYPE_MODIFIED":    2,
		"UPDATE_TYPE_REMOVED":     3,
	}
)

func (x UpdateType) Enum() *UpdateType {
	p := new(UpdateType)
	*p = x
	return p
}

func (x UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_metrics_proto_enumTypes[1].Descriptor()
}

func (UpdateType) Type() protoreflect.EnumType {
	return &file_metrics_proto_enumTypes[1]
}

func (x UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateType.Descriptor instead.
func (UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{1}
}

// MetricValue represents a metric value
type MetricValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*MetricValue_DoubleValue
	//	*MetricValue_IntValue
	//	*MetricValue_BoolValue
	Value         isMetricValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricValue) Reset() {
	*x = MetricValue{}
	mi := &file_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricValue) ProtoMessage() {}

func (x *MetricValue) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricValue.ProtoReflect.Descriptor instead.
func (*MetricValue) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *MetricValue) GetValue() isMetricValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MetricValue) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*MetricValue_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *MetricValue) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*MetricValue_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *MetricValue) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*MetricValue_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

type isMetricValue_Value interface {
	isMetricValue_Value()
}

type MetricValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,1,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type MetricValue_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type MetricValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,3,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

func (*MetricValue_DoubleValue) isMetricValue_Value() {}

func (*MetricValue_IntValue) isMetricValue_Value() {}

func (*MetricValue_BoolValue) isMetricValue_Value() {}

// MetricData represents metric data
type MetricData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the metric name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type is the metric type
	Type MetricType `protobuf:"varint,2,opt,name=type,proto3,enum=metrics.MetricType" json:"type,omitempty"`
	// Description is the metric description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Value is the metric value
	Value *MetricValue `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	// Labels are the metric labels
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Timestamp is when the metric was recorded
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// HistogramBuckets are the histogram buckets (for histogram metrics)
	HistogramBuckets *HistogramBuckets `protobuf:"bytes,7,opt,name=histogram_buckets,json=histogramBuckets,proto3" json:"histogram_buckets,omitempty"`
	// SummaryValues are the summary values (for summary metrics)
	SummaryValues *SummaryValues `protobuf:"bytes,8,opt,name=summary_values,json=summaryValues,proto3" json:"summary_values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricData) Reset() {
	*x = MetricData{}
	mi := &file_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricData) ProtoMessage() {}

func (x *MetricData) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricData.ProtoReflect.Descriptor instead.
func (*MetricData) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *MetricData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetricData) GetType() MetricType {
	if x != nil {
		return x.Type
	}
	return MetricType_METRIC_TYPE_UNSPECIFIED
}

func (x *MetricData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetricData) GetValue() *MetricValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MetricData) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MetricData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MetricData) GetHistogramBuckets() *HistogramBuckets {
	if x != nil {
		return x.HistogramBuckets
	}
	return nil
}

func (x *MetricData) GetSummaryValues() *SummaryValues {
	if x != nil {
		return x.SummaryValues
	}
	return nil
}

// HistogramBuckets represents histogram buckets
type HistogramBuckets struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Bounds are the bucket upper bounds
	Bounds []float64 `protobuf:"fixed64,1,rep,packed,name=bounds,proto3" json:"bounds,omitempty"`
	// Counts are the bucket counts
	Counts []uint64 `protobuf:"varint,2,rep,packed,name=counts,proto3" json:"counts,omitempty"`
	// Sum is the sum of all values
	Sum float64 `protobuf:"fixed64,3,opt,name=sum,proto3" json:"sum,omitempty"`
	// Count is the count of all values
	Count         uint64 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistogramBuckets) Reset() {
	*x = HistogramBuckets{}
	mi := &file_metrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistogramBuckets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramBuckets) ProtoMessage() {}

func (x *HistogramBuckets) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistogramBuckets.ProtoReflect.Descriptor instead.
func (*HistogramBuckets) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *HistogramBuckets) GetBounds() []float64 {
	if x != nil {
		return x.Bounds
	}
	return nil
}

func (x *HistogramBuckets) GetCounts() []uint64 {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *HistogramBuckets) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *HistogramBuckets) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// SummaryValues represents summary values
type SummaryValues struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Quantiles are the summary quantiles
	Quantiles []*Quantile `protobuf:"bytes,1,rep,name=quantiles,proto3" json:"quantiles,omitempty"`
	// Sum is the sum of all values
	Sum float64 `protobuf:"fixed64,2,opt,name=sum,proto3" json:"sum,omitempty"`
	// Count is the count of all values
	Count         uint64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummaryValues) Reset() {
	*x = SummaryValues{}
	mi := &file_metrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryValues) ProtoMessage() {}

func (x *SummaryValues) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryValues.ProtoReflect.Descriptor instead.
func (*SummaryValues) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *SummaryValues) GetQuantiles() []*Quantile {
	if x != nil {
		return x.Quantiles
	}
	return nil
}

func (x *SummaryValues) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *SummaryValues) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Quantile represents a summary quantile
type Quantile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Quantile is the quantile (0.0-1.0)
	Quantile float64 `protobuf:"fixed64,1,opt,name=quantile,proto3" json:"quantile,omitempty"`
	// Value is the quantile value
	Value         float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Quantile) Reset() {
	*x = Quantile{}
	mi := &file_metrics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quantile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quantile) ProtoMessage() {}

func (x *Quantile) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quantile.ProtoReflect.Descriptor instead.
func (*Quantile) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *Quantile) GetQuantile() float64 {
	if x != nil {
		return x.Quantile
	}
	return 0
}

func (x *Quantile) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// CollectMetricsRequest contains metrics to collect
type CollectMetricsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metrics are the metrics to collect
	Metrics       []*MetricData `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectMetricsRequest) Reset() {
	*x = CollectMetricsRequest{}
	mi := &file_metrics_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectMetricsRequest) ProtoMessage() {}

func (x *CollectMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectMetricsRequest.ProtoReflect.Descriptor instead.
func (*CollectMetricsRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{5}
}

func (x *CollectMetricsRequest) GetMetrics() []*MetricData {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// CollectMetricsResponse contains the result of collecting metrics
type CollectMetricsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates if the operation succeeded
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// FailedMetrics contains the names of metrics that failed to collect
	FailedMetrics []string `protobuf:"bytes,2,rep,name=failed_metrics,json=failedMetrics,proto3" json:"failed_metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectMetricsResponse) Reset() {
	*x = CollectMetricsResponse{}
	mi := &file_metrics_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectMetricsResponse) ProtoMessage() {}

func (x *CollectMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectMetricsResponse.ProtoReflect.Descriptor instead.
func (*CollectMetricsResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{6}
}

func (x *CollectMetricsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CollectMetricsResponse) GetFailedMetrics() []string {
	if x != nil {
		return x.FailedMetrics
	}
	return nil
}

// GetMetricsRequest contains a metrics query
type GetMetricsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Names are metric names to retrieve
	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	// LabelSelectors are label selectors for filtering
	LabelSelectors map[string]string `protobuf:"bytes,2,rep,name=label_selectors,json=labelSelectors,proto3" json:"label_selectors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// StartTime is the start time for the query
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// EndTime is the end time for the query
	EndTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Step is the query step duration in seconds
	Step          int64 `protobuf:"varint,5,opt,name=step,proto3" json:"step,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsRequest) Reset() {
	*x = GetMetricsRequest{}
	mi := &file_metrics_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsRequest) ProtoMessage() {}

func (x *GetMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{7}
}

func (x *GetMetricsRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *GetMetricsRequest) GetLabelSelectors() map[string]string {
	if x != nil {
		return x.LabelSelectors
	}
	return nil
}

func (x *GetMetricsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetMetricsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetMetricsRequest) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

// WatchMetricsRequest contains a metrics watch request
type WatchMetricsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Names are metric names to watch
	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	// LabelSelectors are label selectors for filtering
	LabelSelectors map[string]string `protobuf:"bytes,2,rep,name=label_selectors,json=labelSelectors,proto3" json:"label_selectors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// UpdateInterval is the minimum interval between updates in seconds
	UpdateInterval int64 `protobuf:"varint,3,opt,name=update_interval,json=updateInterval,proto3" json:"update_interval,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WatchMetricsRequest) Reset() {
	*x = WatchMetricsRequest{}
	mi := &file_metrics_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchMetricsRequest) ProtoMessage() {}

func (x *WatchMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchMetricsRequest.ProtoReflect.Descriptor instead.
func (*WatchMetricsRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{8}
}

func (x *WatchMetricsRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *WatchMetricsRequest) GetLabelSelectors() map[string]string {
	if x != nil {
		return x.LabelSelectors
	}
	return nil
}

func (x *WatchMetricsRequest) GetUpdateInterval() int64 {
	if x != nil {
		return x.UpdateInterval
	}
	return 0
}

// MetricUpdate contains a metric update
type MetricUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metric is the updated metric
	Metric *MetricData `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	// UpdateType is the type of update
	UpdateType    UpdateType `protobuf:"varint,2,opt,name=update_type,json=updateType,proto3,enum=metrics.UpdateType" json:"update_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricUpdate) Reset() {
	*x = MetricUpdate{}
	mi := &file_metrics_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricUpdate) ProtoMessage() {}

func (x *MetricUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricUpdate.ProtoReflect.Descriptor instead.
func (*MetricUpdate) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{9}
}

func (x *MetricUpdate) GetMetric() *MetricData {
	if x != nil {
		return x.Metric
	}
	return nil
}

func (x *MetricUpdate) GetUpdateType() UpdateType {
	if x != nil {
		return x.UpdateType
	}
	return UpdateType_UPDATE_TYPE_UNSPECIFIED
}

// ListMetricsRequest contains a request to list metrics
type ListMetricsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NamePrefix is an optional name prefix filter
	NamePrefix string `protobuf:"bytes,1,opt,name=name_prefix,json=namePrefix,proto3" json:"name_prefix,omitempty"`
	// LabelSelectors are label selectors for filtering
	LabelSelectors map[string]string `protobuf:"bytes,2,rep,name=label_selectors,json=labelSelectors,proto3" json:"label_selectors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Types are the metric types to include
	Types         []MetricType `protobuf:"varint,3,rep,packed,name=types,proto3,enum=metrics.MetricType" json:"types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetricsRequest) Reset() {
	*x = ListMetricsRequest{}
	mi := &file_metrics_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsRequest) ProtoMessage() {}

func (x *ListMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListMetricsRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{10}
}

func (x *ListMetricsRequest) GetNamePrefix() string {
	if x != nil {
		return x.NamePrefix
	}
	return ""
}

func (x *ListMetricsRequest) GetLabelSelectors() map[string]string {
	if x != nil {
		return x.LabelSelectors
	}
	return nil
}

func (x *ListMetricsRequest) GetTypes() []MetricType {
	if x != nil {
		return x.Types
	}
	return nil
}

// ListMetricsResponse contains metric metadata
type ListMetricsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metrics are the available metrics
	Metrics       []*MetricMetadata `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetricsResponse) Reset() {
	*x = ListMetricsResponse{}
	mi := &file_metrics_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsResponse) ProtoMessage() {}

func (x *ListMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListMetricsResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{11}
}

func (x *ListMetricsResponse) GetMetrics() []*MetricMetadata {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// MetricMetadata contains metric metadata
type MetricMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the metric name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type is the metric type
	Type MetricType `protobuf:"varint,2,opt,name=type,proto3,enum=metrics.MetricType" json:"type,omitempty"`
	// Description is the metric description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// LabelNames are the label names for this metric
	LabelNames []string `protobuf:"bytes,4,rep,name=label_names,json=labelNames,proto3" json:"label_names,omitempty"`
	// CreatedAt is when the metric was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// LastUpdatedAt is when the metric was last updated
	LastUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_updated_at,json=lastUpdatedAt,proto3" json:"last_updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricMetadata) Reset() {
	*x = MetricMetadata{}
	mi := &file_metrics_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricMetadata) ProtoMessage() {}

func (x *MetricMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricMetadata.ProtoReflect.Descriptor instead.
func (*MetricMetadata) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{12}
}

func (x *MetricMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetricMetadata) GetType() MetricType {
	if x != nil {
		return x.Type
	}
	return MetricType_METRIC_TYPE_UNSPECIFIED
}

func (x *MetricMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetricMetadata) GetLabelNames() []string {
	if x != nil {
		return x.LabelNames
	}
	return nil
}

func (x *MetricMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MetricMetadata) GetLastUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedAt
	}
	return nil
}

// RecordEventRequest contains an event to record
type RecordEventRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the event name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Value is the event value
	Value *MetricValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Labels are the event labels
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Timestamp is when the event occurred
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordEventRequest) Reset() {
	*x = RecordEventRequest{}
	mi := &file_metrics_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordEventRequest) ProtoMessage() {}

func (x *RecordEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordEventRequest.ProtoReflect.Descriptor instead.
func (*RecordEventRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{13}
}

func (x *RecordEventRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecordEventRequest) GetValue() *MetricValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *RecordEventRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RecordEventRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// RecordEventResponse contains the result of recording an event
type RecordEventResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates if the operation succeeded
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordEventResponse) Reset() {
	*x = RecordEventResponse{}
	mi := &file_metrics_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordEventResponse) ProtoMessage() {}

func (x *RecordEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordEventResponse.ProtoReflect.Descriptor instead.
func (*RecordEventResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{14}
}

func (x *RecordEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_metrics_proto protoreflect.FileDescriptor

const file_metrics_proto_rawDesc = "" +
	"\n" +
	"\rmetrics.proto\x12\ametrics\x1a\x1fgoogle/protobuf/timestamp.proto\"{\n" +
	"\vMetricValue\x12#\n" +
	"\fdouble_value\x18\x01 \x01(\x01H\x00R\vdoubleValue\x12\x1d\n" +
	"\tint_value\x18\x02 \x01(\x03H\x00R\bintValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x03 \x01(\bH\x00R\tboolValueB\a\n" +
	"\x05value\"\xcc\x03\n" +
	"\n" +
	"MetricData\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12'\n" +
	"\x04type\x18\x02 \x01(\x0e2\x13.metrics.MetricTypeR\x04type\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12*\n" +
	"\x05value\x18\x04 \x01(\v2\x14.metrics.MetricValueR\x05value\x127\n" +
	"\x06labels\x18\x05 \x03(\v2\x1f.metrics.MetricData.LabelsEntryR\x06labels\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12F\n" +
	"\x11histogram_buckets\x18\a \x01(\v2\x19.metrics.HistogramBucketsR\x10histogramBuckets\x12=\n" +
	"\x0esummary_values\x18\b \x01(\v2\x16.metrics.SummaryValuesR\rsummaryValues\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"j\n" +
	"\x10HistogramBuckets\x12\x16\n" +
	"\x06bounds\x18\x01 \x03(\x01R\x06bounds\x12\x16\n" +
	"\x06counts\x18\x02 \x03(\x04R\x06counts\x12\x10\n" +
	"\x03sum\x18\x03 \x01(\x01R\x03sum\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x04R\x05count\"h\n" +
	"\rSummaryValues\x12/\n" +
	"\tquantiles\x18\x01 \x03(\v2\x11.metrics.QuantileR\tquantiles\x12\x10\n" +
	"\x03sum\x18\x02 \x01(\x01R\x03sum\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x04R\x05count\"<\n" +
	"\bQuantile\x12\x1a\n" +
	"\bquantile\x18\x01 \x01(\x01R\bquantile\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\"F\n" +
	"\x15CollectMetricsRequest\x12-\n" +
	"\ametrics\x18\x01 \x03(\v2\x13.metrics.MetricDataR\ametrics\"Y\n" +
	"\x16CollectMetricsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0efailed_metrics\x18\x02 \x03(\tR\rfailedMetrics\"\xcb\x02\n" +
	"\x11GetMetricsRequest\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\x12W\n" +
	"\x0flabel_selectors\x18\x02 \x03(\v2..metrics.GetMetricsRequest.LabelSelectorsEntryR\x0elabelSelectors\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x12\n" +
	"\x04step\x18\x05 \x01(\x03R\x04step\x1aA\n" +
	"\x13LabelSelectorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf2\x01\n" +
	"\x13WatchMetricsRequest\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\x12Y\n" +
	"\x0flabel_selectors\x18\x02 \x03(\v20.metrics.WatchMetricsRequest.LabelSelectorsEntryR\x0elabelSelectors\x12'\n" +
	"\x0fupdate_interval\x18\x03 \x01(\x03R\x0eupdateInterval\x1aA\n" +
	"\x13LabelSelectorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"q\n" +
	"\fMetricUpdate\x12+\n" +
	"\x06metric\x18\x01 \x01(\v2\x13.metrics.MetricDataR\x06metric\x124\n" +
	"\vupdate_type\x18\x02 \x01(\x0e2\x13.metrics.UpdateTypeR\n" +
	"updateType\"\xfd\x01\n" +
	"\x12ListMetricsRequest\x12\x1f\n" +
	"\vname_prefix\x18\x01 \x01(\tR\n" +
	"namePrefix\x12X\n" +
	"\x0flabel_selectors\x18\x02 \x03(\v2/.metrics.ListMetricsRequest.LabelSelectorsEntryR\x0elabelSelectors\x12)\n" +
	"\x05types\x18\x03 \x03(\x0e2\x13.metrics.MetricTypeR\x05types\x1aA\n" +
	"\x13LabelSelectorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"H\n" +
	"\x13ListMetricsResponse\x121\n" +
	"\ametrics\x18\x01 \x03(\v2\x17.metrics.MetricMetadataR\ametrics\"\x8f\x02\n" +
	"\x0eMetricMetadata\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12'\n" +
	"\x04type\x18\x02 \x01(\x0e2\x13.metrics.MetricTypeR\x04type\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1f\n" +
	"\vlabel_names\x18\x04 \x03(\tR\n" +
	"labelNames\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12B\n" +
	"\x0flast_updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\rlastUpdatedAt\"\x8a\x02\n" +
	"\x12RecordEventRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.metrics.MetricValueR\x05value\x12?\n" +
	"\x06labels\x18\x03 \x03(\v2'.metrics.RecordEventRequest.LabelsEntryR\x06labels\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"/\n" +
	"\x13RecordEventResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess*\x8d\x01\n" +
	"\n" +
	"MetricType\x12\x1b\n" +
	"\x17METRIC_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13METRIC_TYPE_COUNTER\x10\x01\x12\x15\n" +
	"\x11METRIC_TYPE_GAUGE\x10\x02\x12\x19\n" +
	"\x15METRIC_TYPE_HISTOGRAM\x10\x03\x12\x17\n" +
	"\x13METRIC_TYPE_SUMMARY\x10\x04*s\n" +
	"\n" +
	"UpdateType\x12\x1b\n" +
	"\x17UPDATE_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11UPDATE_TYPE_ADDED\x10\x01\x12\x18\n" +
	"\x14UPDATE_TYPE_MODIFIED\x10\x02\x12\x17\n" +
	"\x13UPDATE_TYPE_REMOVED\x10\x032\xff\x02\n" +
	"\x0eMetricsService\x12Q\n" +
	"\x0eCollectMetrics\x12\x1e.metrics.CollectMetricsRequest\x1a\x1f.metrics.CollectMetricsResponse\x12?\n" +
	"\n" +
	"GetMetrics\x12\x1a.metrics.GetMetricsRequest\x1a\x13.metrics.MetricData0\x01\x12E\n" +
	"\fWatchMetrics\x12\x1c.metrics.WatchMetricsRequest\x1a\x15.metrics.MetricUpdate0\x01\x12H\n" +
	"\vListMetrics\x12\x1b.metrics.ListMetricsRequest\x1a\x1c.metrics.ListMetricsResponse\x12H\n" +
	"\vRecordEvent\x12\x1b.metrics.RecordEventRequest\x1a\x1c.metrics.RecordEventResponseB-Z+github.com/jdfalk/gcommon/pkg/metrics/protob\x06proto3"

var (
	file_metrics_proto_rawDescOnce sync.Once
	file_metrics_proto_rawDescData []byte
)

func file_metrics_proto_rawDescGZIP() []byte {
	file_metrics_proto_rawDescOnce.Do(func() {
		file_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metrics_proto_rawDesc), len(file_metrics_proto_rawDesc)))
	})
	return file_metrics_proto_rawDescData
}

var file_metrics_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_metrics_proto_goTypes = []any{
	(MetricType)(0),                // 0: metrics.MetricType
	(UpdateType)(0),                // 1: metrics.UpdateType
	(*MetricValue)(nil),            // 2: metrics.MetricValue
	(*MetricData)(nil),             // 3: metrics.MetricData
	(*HistogramBuckets)(nil),       // 4: metrics.HistogramBuckets
	(*SummaryValues)(nil),          // 5: metrics.SummaryValues
	(*Quantile)(nil),               // 6: metrics.Quantile
	(*CollectMetricsRequest)(nil),  // 7: metrics.CollectMetricsRequest
	(*CollectMetricsResponse)(nil), // 8: metrics.CollectMetricsResponse
	(*GetMetricsRequest)(nil),      // 9: metrics.GetMetricsRequest
	(*WatchMetricsRequest)(nil),    // 10: metrics.WatchMetricsRequest
	(*MetricUpdate)(nil),           // 11: metrics.MetricUpdate
	(*ListMetricsRequest)(nil),     // 12: metrics.ListMetricsRequest
	(*ListMetricsResponse)(nil),    // 13: metrics.ListMetricsResponse
	(*MetricMetadata)(nil),         // 14: metrics.MetricMetadata
	(*RecordEventRequest)(nil),     // 15: metrics.RecordEventRequest
	(*RecordEventResponse)(nil),    // 16: metrics.RecordEventResponse
	nil,                            // 17: metrics.MetricData.LabelsEntry
	nil,                            // 18: metrics.GetMetricsRequest.LabelSelectorsEntry
	nil,                            // 19: metrics.WatchMetricsRequest.LabelSelectorsEntry
	nil,                            // 20: metrics.ListMetricsRequest.LabelSelectorsEntry
	nil,                            // 21: metrics.RecordEventRequest.LabelsEntry
	(*timestamppb.Timestamp)(nil),  // 22: google.protobuf.Timestamp
}
var file_metrics_proto_depIdxs = []int32{
	0,  // 0: metrics.MetricData.type:type_name -> metrics.MetricType
	2,  // 1: metrics.MetricData.value:type_name -> metrics.MetricValue
	17, // 2: metrics.MetricData.labels:type_name -> metrics.MetricData.LabelsEntry
	22, // 3: metrics.MetricData.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 4: metrics.MetricData.histogram_buckets:type_name -> metrics.HistogramBuckets
	5,  // 5: metrics.MetricData.summary_values:type_name -> metrics.SummaryValues
	6,  // 6: metrics.SummaryValues.quantiles:type_name -> metrics.Quantile
	3,  // 7: metrics.CollectMetricsRequest.metrics:type_name -> metrics.MetricData
	18, // 8: metrics.GetMetricsRequest.label_selectors:type_name -> metrics.GetMetricsRequest.LabelSelectorsEntry
	22, // 9: metrics.GetMetricsRequest.start_time:type_name -> google.protobuf.Timestamp
	22, // 10: metrics.GetMetricsRequest.end_time:type_name -> google.protobuf.Timestamp
	19, // 11: metrics.WatchMetricsRequest.label_selectors:type_name -> metrics.WatchMetricsRequest.LabelSelectorsEntry
	3,  // 12: metrics.MetricUpdate.metric:type_name -> metrics.MetricData
	1,  // 13: metrics.MetricUpdate.update_type:type_name -> metrics.UpdateType
	20, // 14: metrics.ListMetricsRequest.label_selectors:type_name -> metrics.ListMetricsRequest.LabelSelectorsEntry
	0,  // 15: metrics.ListMetricsRequest.types:type_name -> metrics.MetricType
	14, // 16: metrics.ListMetricsResponse.metrics:type_name -> metrics.MetricMetadata
	0,  // 17: metrics.MetricMetadata.type:type_name -> metrics.MetricType
	22, // 18: metrics.MetricMetadata.created_at:type_name -> google.protobuf.Timestamp
	22, // 19: metrics.MetricMetadata.last_updated_at:type_name -> google.protobuf.Timestamp
	2,  // 20: metrics.RecordEventRequest.value:type_name -> metrics.MetricValue
	21, // 21: metrics.RecordEventRequest.labels:type_name -> metrics.RecordEventRequest.LabelsEntry
	22, // 22: metrics.RecordEventRequest.timestamp:type_name -> google.protobuf.Timestamp
	7,  // 23: metrics.MetricsService.CollectMetrics:input_type -> metrics.CollectMetricsRequest
	9,  // 24: metrics.MetricsService.GetMetrics:input_type -> metrics.GetMetricsRequest
	10, // 25: metrics.MetricsService.WatchMetrics:input_type -> metrics.WatchMetricsRequest
	12, // 26: metrics.MetricsService.ListMetrics:input_type -> metrics.ListMetricsRequest
	15, // 27: metrics.MetricsService.RecordEvent:input_type -> metrics.RecordEventRequest
	8,  // 28: metrics.MetricsService.CollectMetrics:output_type -> metrics.CollectMetricsResponse
	3,  // 29: metrics.MetricsService.GetMetrics:output_type -> metrics.MetricData
	11, // 30: metrics.MetricsService.WatchMetrics:output_type -> metrics.MetricUpdate
	13, // 31: metrics.MetricsService.ListMetrics:output_type -> metrics.ListMetricsResponse
	16, // 32: metrics.MetricsService.RecordEvent:output_type -> metrics.RecordEventResponse
	28, // [28:33] is the sub-list for method output_type
	23, // [23:28] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_metrics_proto_init() }
func file_metrics_proto_init() {
	if File_metrics_proto != nil {
		return
	}
	file_metrics_proto_msgTypes[0].OneofWrappers = []any{
		(*MetricValue_DoubleValue)(nil),
		(*MetricValue_IntValue)(nil),
		(*MetricValue_BoolValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metrics_proto_rawDesc), len(file_metrics_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metrics_proto_goTypes,
		DependencyIndexes: file_metrics_proto_depIdxs,
		EnumInfos:         file_metrics_proto_enumTypes,
		MessageInfos:      file_metrics_proto_msgTypes,
	}.Build()
	File_metrics_proto = out.File
	file_metrics_proto_goTypes = nil
	file_metrics_proto_depIdxs = nil
}
