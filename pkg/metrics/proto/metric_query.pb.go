// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/metric_query.proto

package proto

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// MetricQuery represents a query for retrieving and processing metric data.
// Supports filtering, aggregation, and transformation operations.
type MetricQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this query
	QueryId *string `protobuf:"bytes,1,opt,name=query_id,json=queryId" json:"query_id,omitempty"`
	// Human-readable query name or description
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Query string (PromQL, SQL, or custom query language)
	QueryString *string `protobuf:"bytes,3,opt,name=query_string,json=queryString" json:"query_string,omitempty"`
	// Filter criteria for selecting metrics
	Filter *MetricFilter `protobuf:"bytes,4,opt,name=filter" json:"filter,omitempty"`
	// Time range for the query
	TimeFilter *TimeRange `protobuf:"bytes,5,opt,name=time_filter,json=timeFilter" json:"time_filter,omitempty"`
	// Aggregation operations to apply
	Aggregations []*AggregationSpec `protobuf:"bytes,6,rep,name=aggregations" json:"aggregations,omitempty"`
	// Group by specifications
	GroupBy []*GroupBySpec `protobuf:"bytes,7,rep,name=group_by,json=groupBy" json:"group_by,omitempty"`
	// Sort criteria
	SortCriteria []*proto.SortOptions `protobuf:"bytes,8,rep,name=sort_criteria,json=sortCriteria" json:"sort_criteria,omitempty"`
	// Maximum number of results to return
	Limit *int32 `protobuf:"varint,9,opt,name=limit" json:"limit,omitempty"`
	// Offset for pagination
	Offset        *int32 `protobuf:"varint,10,opt,name=offset" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricQuery) Reset() {
	*x = MetricQuery{}
	mi := &file_pkg_metrics_proto_metric_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricQuery) ProtoMessage() {}

func (x *MetricQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_metric_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricQuery.ProtoReflect.Descriptor instead.
func (*MetricQuery) Descriptor() ([]byte, []int) {
	return file_pkg_metrics_proto_metric_query_proto_rawDescGZIP(), []int{0}
}

func (x *MetricQuery) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *MetricQuery) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MetricQuery) GetQueryString() string {
	if x != nil && x.QueryString != nil {
		return *x.QueryString
	}
	return ""
}

func (x *MetricQuery) GetFilter() *MetricFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *MetricQuery) GetTimeFilter() *TimeRange {
	if x != nil {
		return x.TimeFilter
	}
	return nil
}

func (x *MetricQuery) GetAggregations() []*AggregationSpec {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

func (x *MetricQuery) GetGroupBy() []*GroupBySpec {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *MetricQuery) GetSortCriteria() []*proto.SortOptions {
	if x != nil {
		return x.SortCriteria
	}
	return nil
}

func (x *MetricQuery) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *MetricQuery) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

// *
// AggregationSpec defines how to aggregate metric data.
type AggregationSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of aggregation to perform
	AggregationType *AggregationType `protobuf:"varint,1,opt,name=aggregation_type,json=aggregationType,enum=gcommon.v1.metrics.AggregationType" json:"aggregation_type,omitempty"`
	// Field to aggregate on (if applicable)
	Field *string `protobuf:"bytes,2,opt,name=field" json:"field,omitempty"`
	// Time window for aggregation
	Window *durationpb.Duration `protobuf:"bytes,3,opt,name=window" json:"window,omitempty"`
	// Step/resolution for time-based aggregation
	Step *durationpb.Duration `protobuf:"bytes,4,opt,name=step" json:"step,omitempty"`
	// Additional parameters for complex aggregations
	Parameters    map[string]string `protobuf:"bytes,5,rep,name=parameters" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregationSpec) Reset() {
	*x = AggregationSpec{}
	mi := &file_pkg_metrics_proto_metric_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationSpec) ProtoMessage() {}

func (x *AggregationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_metric_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregationSpec.ProtoReflect.Descriptor instead.
func (*AggregationSpec) Descriptor() ([]byte, []int) {
	return file_pkg_metrics_proto_metric_query_proto_rawDescGZIP(), []int{1}
}

func (x *AggregationSpec) GetAggregationType() AggregationType {
	if x != nil && x.AggregationType != nil {
		return *x.AggregationType
	}
	return AggregationType_AGGREGATION_TYPE_UNSPECIFIED
}

func (x *AggregationSpec) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *AggregationSpec) GetWindow() *durationpb.Duration {
	if x != nil {
		return x.Window
	}
	return nil
}

func (x *AggregationSpec) GetStep() *durationpb.Duration {
	if x != nil {
		return x.Step
	}
	return nil
}

func (x *AggregationSpec) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// *
// GroupBySpec defines how to group metric results.
type GroupBySpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Label keys to group by
	LabelKeys []string `protobuf:"bytes,1,rep,name=label_keys,json=labelKeys" json:"label_keys,omitempty"`
	// Time-based grouping (e.g., by hour, day)
	TimeGroup *durationpb.Duration `protobuf:"bytes,2,opt,name=time_group,json=timeGroup" json:"time_group,omitempty"`
	// Maximum number of groups to return
	MaxGroups     *int32 `protobuf:"varint,3,opt,name=max_groups,json=maxGroups" json:"max_groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupBySpec) Reset() {
	*x = GroupBySpec{}
	mi := &file_pkg_metrics_proto_metric_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupBySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBySpec) ProtoMessage() {}

func (x *GroupBySpec) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_metric_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupBySpec.ProtoReflect.Descriptor instead.
func (*GroupBySpec) Descriptor() ([]byte, []int) {
	return file_pkg_metrics_proto_metric_query_proto_rawDescGZIP(), []int{2}
}

func (x *GroupBySpec) GetLabelKeys() []string {
	if x != nil {
		return x.LabelKeys
	}
	return nil
}

func (x *GroupBySpec) GetTimeGroup() *durationpb.Duration {
	if x != nil {
		return x.TimeGroup
	}
	return nil
}

func (x *GroupBySpec) GetMaxGroups() int32 {
	if x != nil && x.MaxGroups != nil {
		return *x.MaxGroups
	}
	return 0
}

// *
// QueryPlan represents an execution plan for a metric query.
// Used for query optimization and debugging.
type QueryPlan struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Query that this plan is for
	QueryId *string `protobuf:"bytes,1,opt,name=query_id,json=queryId" json:"query_id,omitempty"`
	// Estimated execution time
	EstimatedDuration *durationpb.Duration `protobuf:"bytes,2,opt,name=estimated_duration,json=estimatedDuration" json:"estimated_duration,omitempty"`
	// Estimated number of data points to process
	EstimatedDataPoints *int64 `protobuf:"varint,3,opt,name=estimated_data_points,json=estimatedDataPoints" json:"estimated_data_points,omitempty"`
	// Execution steps
	Steps []*QueryStep `protobuf:"bytes,4,rep,name=steps" json:"steps,omitempty"`
	// Storage backends that will be queried
	StorageBackends []string `protobuf:"bytes,5,rep,name=storage_backends,json=storageBackends" json:"storage_backends,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QueryPlan) Reset() {
	*x = QueryPlan{}
	mi := &file_pkg_metrics_proto_metric_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlan) ProtoMessage() {}

func (x *QueryPlan) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_metric_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlan.ProtoReflect.Descriptor instead.
func (*QueryPlan) Descriptor() ([]byte, []int) {
	return file_pkg_metrics_proto_metric_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryPlan) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *QueryPlan) GetEstimatedDuration() *durationpb.Duration {
	if x != nil {
		return x.EstimatedDuration
	}
	return nil
}

func (x *QueryPlan) GetEstimatedDataPoints() int64 {
	if x != nil && x.EstimatedDataPoints != nil {
		return *x.EstimatedDataPoints
	}
	return 0
}

func (x *QueryPlan) GetSteps() []*QueryStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *QueryPlan) GetStorageBackends() []string {
	if x != nil {
		return x.StorageBackends
	}
	return nil
}

// *
// QueryStep represents a single step in query execution.
type QueryStep struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Step identifier
	StepId *string `protobuf:"bytes,1,opt,name=step_id,json=stepId" json:"step_id,omitempty"`
	// Operation to perform in this step
	Operation *QueryOperation `protobuf:"varint,2,opt,name=operation,enum=gcommon.v1.metrics.QueryOperation" json:"operation,omitempty"`
	// Description of the operation
	Description *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// Estimated cost/time for this step
	EstimatedDuration *durationpb.Duration `protobuf:"bytes,4,opt,name=estimated_duration,json=estimatedDuration" json:"estimated_duration,omitempty"`
	// Input from previous steps
	InputStepIds  []string `protobuf:"bytes,5,rep,name=input_step_ids,json=inputStepIds" json:"input_step_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStep) Reset() {
	*x = QueryStep{}
	mi := &file_pkg_metrics_proto_metric_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStep) ProtoMessage() {}

func (x *QueryStep) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_metric_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStep.ProtoReflect.Descriptor instead.
func (*QueryStep) Descriptor() ([]byte, []int) {
	return file_pkg_metrics_proto_metric_query_proto_rawDescGZIP(), []int{4}
}

func (x *QueryStep) GetStepId() string {
	if x != nil && x.StepId != nil {
		return *x.StepId
	}
	return ""
}

func (x *QueryStep) GetOperation() QueryOperation {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return QueryOperation_QUERY_OPERATION_UNSPECIFIED
}

func (x *QueryStep) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *QueryStep) GetEstimatedDuration() *durationpb.Duration {
	if x != nil {
		return x.EstimatedDuration
	}
	return nil
}

func (x *QueryStep) GetInputStepIds() []string {
	if x != nil {
		return x.InputStepIds
	}
	return nil
}

var File_pkg_metrics_proto_metric_query_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_metric_query_proto_rawDesc = "" +
	"\n" +
	"$pkg/metrics/proto/metric_query.proto\x12\x12gcommon.v1.metrics\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bpkg/common/proto/sort.proto\x1a(pkg/metrics/proto/aggregation_type.proto\x1a%pkg/metrics/proto/metric_filter.proto\x1a'pkg/metrics/proto/query_operation.proto\x1a\"pkg/metrics/proto/time_range.proto\x1a'pkg/metrics/proto/timestamp_range.proto\"\xd1\x03\n" +
	"\vMetricQuery\x12\x19\n" +
	"\bquery_id\x18\x01 \x01(\tR\aqueryId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fquery_string\x18\x03 \x01(\tR\vqueryString\x128\n" +
	"\x06filter\x18\x04 \x01(\v2 .gcommon.v1.metrics.MetricFilterR\x06filter\x12>\n" +
	"\vtime_filter\x18\x05 \x01(\v2\x1d.gcommon.v1.metrics.TimeRangeR\n" +
	"timeFilter\x12G\n" +
	"\faggregations\x18\x06 \x03(\v2#.gcommon.v1.metrics.AggregationSpecR\faggregations\x12:\n" +
	"\bgroup_by\x18\a \x03(\v2\x1f.gcommon.v1.metrics.GroupBySpecR\agroupBy\x12C\n" +
	"\rsort_criteria\x18\b \x03(\v2\x1e.gcommon.v1.common.SortOptionsR\fsortCriteria\x12\x14\n" +
	"\x05limit\x18\t \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\"\xed\x02\n" +
	"\x0fAggregationSpec\x12N\n" +
	"\x10aggregation_type\x18\x01 \x01(\x0e2#.gcommon.v1.metrics.AggregationTypeR\x0faggregationType\x12\x14\n" +
	"\x05field\x18\x02 \x01(\tR\x05field\x121\n" +
	"\x06window\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x06window\x12-\n" +
	"\x04step\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x04step\x12S\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v23.gcommon.v1.metrics.AggregationSpec.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x85\x01\n" +
	"\vGroupBySpec\x12\x1d\n" +
	"\n" +
	"label_keys\x18\x01 \x03(\tR\tlabelKeys\x128\n" +
	"\n" +
	"time_group\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\ttimeGroup\x12\x1d\n" +
	"\n" +
	"max_groups\x18\x03 \x01(\x05R\tmaxGroups\"\x84\x02\n" +
	"\tQueryPlan\x12\x19\n" +
	"\bquery_id\x18\x01 \x01(\tR\aqueryId\x12H\n" +
	"\x12estimated_duration\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x11estimatedDuration\x122\n" +
	"\x15estimated_data_points\x18\x03 \x01(\x03R\x13estimatedDataPoints\x123\n" +
	"\x05steps\x18\x04 \x03(\v2\x1d.gcommon.v1.metrics.QueryStepR\x05steps\x12)\n" +
	"\x10storage_backends\x18\x05 \x03(\tR\x0fstorageBackends\"\xf8\x01\n" +
	"\tQueryStep\x12\x17\n" +
	"\astep_id\x18\x01 \x01(\tR\x06stepId\x12@\n" +
	"\toperation\x18\x02 \x01(\x0e2\".gcommon.v1.metrics.QueryOperationR\toperation\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12H\n" +
	"\x12estimated_duration\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x11estimatedDuration\x12$\n" +
	"\x0einput_step_ids\x18\x05 \x03(\tR\finputStepIdsB\xc1\x01\n" +
	"\x16com.gcommon.v1.metricsB\x10MetricQueryProtoP\x01Z+github.com/jdfalk/gcommon/pkg/metrics/proto\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metricsb\beditionsp\xe8\a"

var (
	file_pkg_metrics_proto_metric_query_proto_rawDescOnce sync.Once
	file_pkg_metrics_proto_metric_query_proto_rawDescData []byte
)

func file_pkg_metrics_proto_metric_query_proto_rawDescGZIP() []byte {
	file_pkg_metrics_proto_metric_query_proto_rawDescOnce.Do(func() {
		file_pkg_metrics_proto_metric_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_metric_query_proto_rawDesc), len(file_pkg_metrics_proto_metric_query_proto_rawDesc)))
	})
	return file_pkg_metrics_proto_metric_query_proto_rawDescData
}

var file_pkg_metrics_proto_metric_query_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_metrics_proto_metric_query_proto_goTypes = []any{
	(*MetricQuery)(nil),         // 0: gcommon.v1.metrics.MetricQuery
	(*AggregationSpec)(nil),     // 1: gcommon.v1.metrics.AggregationSpec
	(*GroupBySpec)(nil),         // 2: gcommon.v1.metrics.GroupBySpec
	(*QueryPlan)(nil),           // 3: gcommon.v1.metrics.QueryPlan
	(*QueryStep)(nil),           // 4: gcommon.v1.metrics.QueryStep
	nil,                         // 5: gcommon.v1.metrics.AggregationSpec.ParametersEntry
	(*MetricFilter)(nil),        // 6: gcommon.v1.metrics.MetricFilter
	(*TimeRange)(nil),           // 7: gcommon.v1.metrics.TimeRange
	(*proto.SortOptions)(nil),   // 8: gcommon.v1.common.SortOptions
	(AggregationType)(0),        // 9: gcommon.v1.metrics.AggregationType
	(*durationpb.Duration)(nil), // 10: google.protobuf.Duration
	(QueryOperation)(0),         // 11: gcommon.v1.metrics.QueryOperation
}
var file_pkg_metrics_proto_metric_query_proto_depIdxs = []int32{
	6,  // 0: gcommon.v1.metrics.MetricQuery.filter:type_name -> gcommon.v1.metrics.MetricFilter
	7,  // 1: gcommon.v1.metrics.MetricQuery.time_filter:type_name -> gcommon.v1.metrics.TimeRange
	1,  // 2: gcommon.v1.metrics.MetricQuery.aggregations:type_name -> gcommon.v1.metrics.AggregationSpec
	2,  // 3: gcommon.v1.metrics.MetricQuery.group_by:type_name -> gcommon.v1.metrics.GroupBySpec
	8,  // 4: gcommon.v1.metrics.MetricQuery.sort_criteria:type_name -> gcommon.v1.common.SortOptions
	9,  // 5: gcommon.v1.metrics.AggregationSpec.aggregation_type:type_name -> gcommon.v1.metrics.AggregationType
	10, // 6: gcommon.v1.metrics.AggregationSpec.window:type_name -> google.protobuf.Duration
	10, // 7: gcommon.v1.metrics.AggregationSpec.step:type_name -> google.protobuf.Duration
	5,  // 8: gcommon.v1.metrics.AggregationSpec.parameters:type_name -> gcommon.v1.metrics.AggregationSpec.ParametersEntry
	10, // 9: gcommon.v1.metrics.GroupBySpec.time_group:type_name -> google.protobuf.Duration
	10, // 10: gcommon.v1.metrics.QueryPlan.estimated_duration:type_name -> google.protobuf.Duration
	4,  // 11: gcommon.v1.metrics.QueryPlan.steps:type_name -> gcommon.v1.metrics.QueryStep
	11, // 12: gcommon.v1.metrics.QueryStep.operation:type_name -> gcommon.v1.metrics.QueryOperation
	10, // 13: gcommon.v1.metrics.QueryStep.estimated_duration:type_name -> google.protobuf.Duration
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_metric_query_proto_init() }
func file_pkg_metrics_proto_metric_query_proto_init() {
	if File_pkg_metrics_proto_metric_query_proto != nil {
		return
	}
	file_pkg_metrics_proto_aggregation_type_proto_init()
	file_pkg_metrics_proto_metric_filter_proto_init()
	file_pkg_metrics_proto_query_operation_proto_init()
	file_pkg_metrics_proto_time_range_proto_init()
	file_pkg_metrics_proto_timestamp_range_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_metric_query_proto_rawDesc), len(file_pkg_metrics_proto_metric_query_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_metric_query_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_metric_query_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_metric_query_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_metric_query_proto = out.File
	file_pkg_metrics_proto_metric_query_proto_goTypes = nil
	file_pkg_metrics_proto_metric_query_proto_depIdxs = nil
}
