// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/metric_filter.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Filter for metrics queries
type MetricFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metric name patterns to include
	MetricNames []string `protobuf:"bytes,1,rep,name=metric_names,json=metricNames" json:"metric_names,omitempty"`
	// Label filters
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Namespace filter
	Namespace *string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	// Time range filter
	StartTimestamp *int64 `protobuf:"varint,4,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	EndTimestamp   *int64 `protobuf:"varint,5,opt,name=end_timestamp,json=endTimestamp" json:"end_timestamp,omitempty"`
	// Value threshold filters
	MinValue *float64 `protobuf:"fixed64,6,opt,name=min_value,json=minValue" json:"min_value,omitempty"`
	MaxValue *float64 `protobuf:"fixed64,7,opt,name=max_value,json=maxValue" json:"max_value,omitempty"`
	// Include/exclude patterns
	IncludePatterns []string `protobuf:"bytes,8,rep,name=include_patterns,json=includePatterns" json:"include_patterns,omitempty"`
	ExcludePatterns []string `protobuf:"bytes,9,rep,name=exclude_patterns,json=excludePatterns" json:"exclude_patterns,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MetricFilter) Reset() {
	*x = MetricFilter{}
	mi := &file_pkg_metrics_proto_metric_filter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricFilter) ProtoMessage() {}

func (x *MetricFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_metric_filter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricFilter.ProtoReflect.Descriptor instead.
func (*MetricFilter) Descriptor() ([]byte, []int) {
	return file_pkg_metrics_proto_metric_filter_proto_rawDescGZIP(), []int{0}
}

func (x *MetricFilter) GetMetricNames() []string {
	if x != nil {
		return x.MetricNames
	}
	return nil
}

func (x *MetricFilter) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MetricFilter) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *MetricFilter) GetStartTimestamp() int64 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *MetricFilter) GetEndTimestamp() int64 {
	if x != nil && x.EndTimestamp != nil {
		return *x.EndTimestamp
	}
	return 0
}

func (x *MetricFilter) GetMinValue() float64 {
	if x != nil && x.MinValue != nil {
		return *x.MinValue
	}
	return 0
}

func (x *MetricFilter) GetMaxValue() float64 {
	if x != nil && x.MaxValue != nil {
		return *x.MaxValue
	}
	return 0
}

func (x *MetricFilter) GetIncludePatterns() []string {
	if x != nil {
		return x.IncludePatterns
	}
	return nil
}

func (x *MetricFilter) GetExcludePatterns() []string {
	if x != nil {
		return x.ExcludePatterns
	}
	return nil
}

var File_pkg_metrics_proto_metric_filter_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_metric_filter_proto_rawDesc = "" +
	"\n" +
	"%pkg/metrics/proto/metric_filter.proto\x12\x12gcommon.v1.metrics\"\xae\x03\n" +
	"\fMetricFilter\x12!\n" +
	"\fmetric_names\x18\x01 \x03(\tR\vmetricNames\x12D\n" +
	"\x06labels\x18\x02 \x03(\v2,.gcommon.v1.metrics.MetricFilter.LabelsEntryR\x06labels\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12'\n" +
	"\x0fstart_timestamp\x18\x04 \x01(\x03R\x0estartTimestamp\x12#\n" +
	"\rend_timestamp\x18\x05 \x01(\x03R\fendTimestamp\x12\x1b\n" +
	"\tmin_value\x18\x06 \x01(\x01R\bminValue\x12\x1b\n" +
	"\tmax_value\x18\a \x01(\x01R\bmaxValue\x12)\n" +
	"\x10include_patterns\x18\b \x03(\tR\x0fincludePatterns\x12)\n" +
	"\x10exclude_patterns\x18\t \x03(\tR\x0fexcludePatterns\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xc2\x01\n" +
	"\x16com.gcommon.v1.metricsB\x11MetricFilterProtoP\x01Z+github.com/jdfalk/gcommon/pkg/metrics/proto\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metricsb\beditionsp\xe8\a"

var (
	file_pkg_metrics_proto_metric_filter_proto_rawDescOnce sync.Once
	file_pkg_metrics_proto_metric_filter_proto_rawDescData []byte
)

func file_pkg_metrics_proto_metric_filter_proto_rawDescGZIP() []byte {
	file_pkg_metrics_proto_metric_filter_proto_rawDescOnce.Do(func() {
		file_pkg_metrics_proto_metric_filter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_metric_filter_proto_rawDesc), len(file_pkg_metrics_proto_metric_filter_proto_rawDesc)))
	})
	return file_pkg_metrics_proto_metric_filter_proto_rawDescData
}

var file_pkg_metrics_proto_metric_filter_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_metrics_proto_metric_filter_proto_goTypes = []any{
	(*MetricFilter)(nil), // 0: gcommon.v1.metrics.MetricFilter
	nil,                  // 1: gcommon.v1.metrics.MetricFilter.LabelsEntry
}
var file_pkg_metrics_proto_metric_filter_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.metrics.MetricFilter.labels:type_name -> gcommon.v1.metrics.MetricFilter.LabelsEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_metric_filter_proto_init() }
func file_pkg_metrics_proto_metric_filter_proto_init() {
	if File_pkg_metrics_proto_metric_filter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_metric_filter_proto_rawDesc), len(file_pkg_metrics_proto_metric_filter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_metric_filter_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_metric_filter_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_metric_filter_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_metric_filter_proto = out.File
	file_pkg_metrics_proto_metric_filter_proto_goTypes = nil
	file_pkg_metrics_proto_metric_filter_proto_depIdxs = nil
}
