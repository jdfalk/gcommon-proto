// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: pkg/metrics/proto/record_metrics_response.proto

package proto

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordMetricsResponse struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Success           bool                   `protobuf:"varint,1,opt,name=success"`
	xxx_hidden_SuccessCount      int32                  `protobuf:"varint,2,opt,name=success_count,json=successCount"`
	xxx_hidden_FailureCount      int32                  `protobuf:"varint,3,opt,name=failure_count,json=failureCount"`
	xxx_hidden_TotalCount        int32                  `protobuf:"varint,4,opt,name=total_count,json=totalCount"`
	xxx_hidden_Error             *proto.Error           `protobuf:"bytes,5,opt,name=error"`
	xxx_hidden_Results           *[]*MetricResult       `protobuf:"bytes,6,rep,name=results"`
	xxx_hidden_CompletedAt       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=completed_at,json=completedAt"`
	xxx_hidden_ProviderId        *string                `protobuf:"bytes,8,opt,name=provider_id,json=providerId"`
	xxx_hidden_Stats             *MetricsBatchStats     `protobuf:"bytes,9,opt,name=stats"`
	xxx_hidden_Warnings          []string               `protobuf:"bytes,10,rep,name=warnings"`
	xxx_hidden_ValidationSummary *ValidationSummary     `protobuf:"bytes,11,opt,name=validation_summary,json=validationSummary"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *RecordMetricsResponse) Reset() {
	*x = RecordMetricsResponse{}
	mi := &file_pkg_metrics_proto_record_metrics_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordMetricsResponse) ProtoMessage() {}

func (x *RecordMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_record_metrics_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RecordMetricsResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *RecordMetricsResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.xxx_hidden_SuccessCount
	}
	return 0
}

func (x *RecordMetricsResponse) GetFailureCount() int32 {
	if x != nil {
		return x.xxx_hidden_FailureCount
	}
	return 0
}

func (x *RecordMetricsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.xxx_hidden_TotalCount
	}
	return 0
}

func (x *RecordMetricsResponse) GetError() *proto.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *RecordMetricsResponse) GetResults() []*MetricResult {
	if x != nil {
		if x.xxx_hidden_Results != nil {
			return *x.xxx_hidden_Results
		}
	}
	return nil
}

func (x *RecordMetricsResponse) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CompletedAt
	}
	return nil
}

func (x *RecordMetricsResponse) GetProviderId() string {
	if x != nil {
		if x.xxx_hidden_ProviderId != nil {
			return *x.xxx_hidden_ProviderId
		}
		return ""
	}
	return ""
}

func (x *RecordMetricsResponse) GetStats() *MetricsBatchStats {
	if x != nil {
		return x.xxx_hidden_Stats
	}
	return nil
}

func (x *RecordMetricsResponse) GetWarnings() []string {
	if x != nil {
		return x.xxx_hidden_Warnings
	}
	return nil
}

func (x *RecordMetricsResponse) GetValidationSummary() *ValidationSummary {
	if x != nil {
		return x.xxx_hidden_ValidationSummary
	}
	return nil
}

func (x *RecordMetricsResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *RecordMetricsResponse) SetSuccessCount(v int32) {
	x.xxx_hidden_SuccessCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *RecordMetricsResponse) SetFailureCount(v int32) {
	x.xxx_hidden_FailureCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *RecordMetricsResponse) SetTotalCount(v int32) {
	x.xxx_hidden_TotalCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *RecordMetricsResponse) SetError(v *proto.Error) {
	x.xxx_hidden_Error = v
}

func (x *RecordMetricsResponse) SetResults(v []*MetricResult) {
	x.xxx_hidden_Results = &v
}

func (x *RecordMetricsResponse) SetCompletedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CompletedAt = v
}

func (x *RecordMetricsResponse) SetProviderId(v string) {
	x.xxx_hidden_ProviderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 11)
}

func (x *RecordMetricsResponse) SetStats(v *MetricsBatchStats) {
	x.xxx_hidden_Stats = v
}

func (x *RecordMetricsResponse) SetWarnings(v []string) {
	x.xxx_hidden_Warnings = v
}

func (x *RecordMetricsResponse) SetValidationSummary(v *ValidationSummary) {
	x.xxx_hidden_ValidationSummary = v
}

func (x *RecordMetricsResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RecordMetricsResponse) HasSuccessCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RecordMetricsResponse) HasFailureCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RecordMetricsResponse) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RecordMetricsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *RecordMetricsResponse) HasCompletedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CompletedAt != nil
}

func (x *RecordMetricsResponse) HasProviderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *RecordMetricsResponse) HasStats() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Stats != nil
}

func (x *RecordMetricsResponse) HasValidationSummary() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ValidationSummary != nil
}

func (x *RecordMetricsResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Success = false
}

func (x *RecordMetricsResponse) ClearSuccessCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SuccessCount = 0
}

func (x *RecordMetricsResponse) ClearFailureCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_FailureCount = 0
}

func (x *RecordMetricsResponse) ClearTotalCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TotalCount = 0
}

func (x *RecordMetricsResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

func (x *RecordMetricsResponse) ClearCompletedAt() {
	x.xxx_hidden_CompletedAt = nil
}

func (x *RecordMetricsResponse) ClearProviderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ProviderId = nil
}

func (x *RecordMetricsResponse) ClearStats() {
	x.xxx_hidden_Stats = nil
}

func (x *RecordMetricsResponse) ClearValidationSummary() {
	x.xxx_hidden_ValidationSummary = nil
}

type RecordMetricsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Overall success status of the batch operation
	Success *bool
	// Number of metrics successfully recorded
	SuccessCount *int32
	// Number of metrics that failed to record
	FailureCount *int32
	// Total number of metrics processed
	TotalCount *int32
	// Overall error information if the batch operation failed
	Error *proto.Error
	// Detailed results for each metric (if requested)
	Results []*MetricResult
	// Timestamp when the batch operation was completed
	CompletedAt *timestamppb.Timestamp
	// Provider that handled the batch
	ProviderId *string
	// Performance metrics about the batch operation
	Stats *MetricsBatchStats
	// Warnings or informational messages about the batch
	Warnings []string
	// Summary of validation results (if validation was enabled)
	ValidationSummary *ValidationSummary
}

func (b0 RecordMetricsResponse_builder) Build() *RecordMetricsResponse {
	m0 := &RecordMetricsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Success = *b.Success
	}
	if b.SuccessCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_SuccessCount = *b.SuccessCount
	}
	if b.FailureCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_FailureCount = *b.FailureCount
	}
	if b.TotalCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_TotalCount = *b.TotalCount
	}
	x.xxx_hidden_Error = b.Error
	x.xxx_hidden_Results = &b.Results
	x.xxx_hidden_CompletedAt = b.CompletedAt
	if b.ProviderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 11)
		x.xxx_hidden_ProviderId = b.ProviderId
	}
	x.xxx_hidden_Stats = b.Stats
	x.xxx_hidden_Warnings = b.Warnings
	x.xxx_hidden_ValidationSummary = b.ValidationSummary
	return m0
}

var File_pkg_metrics_proto_record_metrics_response_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_record_metrics_response_proto_rawDesc = "" +
	"\n" +
	"/pkg/metrics/proto/record_metrics_response.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cpkg/common/proto/error.proto\x1a#pkg/metrics/proto/batch_stats.proto\x1a%pkg/metrics/proto/metric_result.proto\x1a*pkg/metrics/proto/validation_summary.proto\"\x97\x04\n" +
	"\x15RecordMetricsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rsuccess_count\x18\x02 \x01(\x05R\fsuccessCount\x12#\n" +
	"\rfailure_count\x18\x03 \x01(\x05R\ffailureCount\x12\x1f\n" +
	"\vtotal_count\x18\x04 \x01(\x05R\n" +
	"totalCount\x12.\n" +
	"\x05error\x18\x05 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\x12:\n" +
	"\aresults\x18\x06 \x03(\v2 .gcommon.v1.metrics.MetricResultR\aresults\x12=\n" +
	"\fcompleted_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1f\n" +
	"\vprovider_id\x18\b \x01(\tR\n" +
	"providerId\x12;\n" +
	"\x05stats\x18\t \x01(\v2%.gcommon.v1.metrics.MetricsBatchStatsR\x05stats\x12\x1a\n" +
	"\bwarnings\x18\n" +
	" \x03(\tR\bwarnings\x12T\n" +
	"\x12validation_summary\x18\v \x01(\v2%.gcommon.v1.metrics.ValidationSummaryR\x11validationSummaryB\xd3\x01\n" +
	"\x16com.gcommon.v1.metricsB\x1aRecordMetricsResponseProtoP\x01Z+github.com/jdfalk/gcommon/pkg/metrics/proto\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_metrics_proto_record_metrics_response_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_metrics_proto_record_metrics_response_proto_goTypes = []any{
	(*RecordMetricsResponse)(nil), // 0: gcommon.v1.metrics.RecordMetricsResponse
	(*proto.Error)(nil),           // 1: gcommon.v1.common.Error
	(*MetricResult)(nil),          // 2: gcommon.v1.metrics.MetricResult
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*MetricsBatchStats)(nil),     // 4: gcommon.v1.metrics.MetricsBatchStats
	(*ValidationSummary)(nil),     // 5: gcommon.v1.metrics.ValidationSummary
}
var file_pkg_metrics_proto_record_metrics_response_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.metrics.RecordMetricsResponse.error:type_name -> gcommon.v1.common.Error
	2, // 1: gcommon.v1.metrics.RecordMetricsResponse.results:type_name -> gcommon.v1.metrics.MetricResult
	3, // 2: gcommon.v1.metrics.RecordMetricsResponse.completed_at:type_name -> google.protobuf.Timestamp
	4, // 3: gcommon.v1.metrics.RecordMetricsResponse.stats:type_name -> gcommon.v1.metrics.MetricsBatchStats
	5, // 4: gcommon.v1.metrics.RecordMetricsResponse.validation_summary:type_name -> gcommon.v1.metrics.ValidationSummary
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_record_metrics_response_proto_init() }
func file_pkg_metrics_proto_record_metrics_response_proto_init() {
	if File_pkg_metrics_proto_record_metrics_response_proto != nil {
		return
	}
	file_pkg_metrics_proto_batch_stats_proto_init()
	file_pkg_metrics_proto_metric_result_proto_init()
	file_pkg_metrics_proto_validation_summary_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_record_metrics_response_proto_rawDesc), len(file_pkg_metrics_proto_record_metrics_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_record_metrics_response_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_record_metrics_response_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_record_metrics_response_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_record_metrics_response_proto = out.File
	file_pkg_metrics_proto_record_metrics_response_proto_goTypes = nil
	file_pkg_metrics_proto_record_metrics_response_proto_depIdxs = nil
}
