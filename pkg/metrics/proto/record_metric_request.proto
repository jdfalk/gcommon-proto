// filepath: pkg/metrics/proto/requests/record_metric_request.proto
// file: metrics/proto/requests/record_metric_request.proto
//
// Record metric request definitions for metrics module
//
edition = "2023";

package gcommon.v1.metrics;

import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";
import "pkg/common/proto/metrics/proto/jdfalk/gcommon/pkg/metrics/proto;metricspb";

option features.(pb.go).api_level = API_OPAQUE;

/**
 * RecordMetricRequest represents a request to record a single metric data point.
 * This is the unified interface for recording any type of metric.
 */
message RecordMetricRequest {
  // Standard request metadata (tracing, auth, etc.)
  gcommon.v1.common.RequestMetadata metadata = 1;

  // The metric data to record
  MetricData metric = 2;

  // Optional provider ID to use for recording
  string provider_id = 3;

  // Whether to validate the metric before recording
  bool validate = 4;

  // Timestamp override (if not provided, current time is used)
  google.protobuf.Timestamp timestamp = 5;

  // Batch context information (if this is part of a batch operation)
  BatchContext batch_context = 6;
}

/**
 * BatchContext provides information when this request is part of a batch operation.
 */
message BatchContext {
  // Unique batch ID
  string batch_id = 1;

  // Position in the batch (0-based)
  int32 batch_position = 2;

  // Total size of the batch
  int32 batch_size = 3;

  // Whether this is the last item in the batch
  bool is_last = 4;
}
