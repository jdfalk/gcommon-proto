// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/register_metric_request.proto

package proto

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterMetricRequest struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Metadata        *proto.RequestMetadata `protobuf:"bytes,1,opt,name=metadata"`
	xxx_hidden_Definition      *MetricDefinition      `protobuf:"bytes,2,opt,name=definition"`
	xxx_hidden_ProviderId      *string                `protobuf:"bytes,3,opt,name=provider_id,json=providerId"`
	xxx_hidden_ReplaceExisting bool                   `protobuf:"varint,4,opt,name=replace_existing,json=replaceExisting"`
	xxx_hidden_Options         *RegistrationOptions   `protobuf:"bytes,5,opt,name=options"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RegisterMetricRequest) Reset() {
	*x = RegisterMetricRequest{}
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMetricRequest) ProtoMessage() {}

func (x *RegisterMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterMetricRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *RegisterMetricRequest) GetDefinition() *MetricDefinition {
	if x != nil {
		return x.xxx_hidden_Definition
	}
	return nil
}

func (x *RegisterMetricRequest) GetProviderId() string {
	if x != nil {
		if x.xxx_hidden_ProviderId != nil {
			return *x.xxx_hidden_ProviderId
		}
		return ""
	}
	return ""
}

func (x *RegisterMetricRequest) GetReplaceExisting() bool {
	if x != nil {
		return x.xxx_hidden_ReplaceExisting
	}
	return false
}

func (x *RegisterMetricRequest) GetOptions() *RegistrationOptions {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *RegisterMetricRequest) SetMetadata(v *proto.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *RegisterMetricRequest) SetDefinition(v *MetricDefinition) {
	x.xxx_hidden_Definition = v
}

func (x *RegisterMetricRequest) SetProviderId(v string) {
	x.xxx_hidden_ProviderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *RegisterMetricRequest) SetReplaceExisting(v bool) {
	x.xxx_hidden_ReplaceExisting = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *RegisterMetricRequest) SetOptions(v *RegistrationOptions) {
	x.xxx_hidden_Options = v
}

func (x *RegisterMetricRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *RegisterMetricRequest) HasDefinition() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Definition != nil
}

func (x *RegisterMetricRequest) HasProviderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RegisterMetricRequest) HasReplaceExisting() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RegisterMetricRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Options != nil
}

func (x *RegisterMetricRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *RegisterMetricRequest) ClearDefinition() {
	x.xxx_hidden_Definition = nil
}

func (x *RegisterMetricRequest) ClearProviderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ProviderId = nil
}

func (x *RegisterMetricRequest) ClearReplaceExisting() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ReplaceExisting = false
}

func (x *RegisterMetricRequest) ClearOptions() {
	x.xxx_hidden_Options = nil
}

type RegisterMetricRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Standard request metadata (tracing, auth, etc.)
	Metadata *proto.RequestMetadata
	// Metric definition to register
	Definition *MetricDefinition
	// Optional provider ID to register with
	ProviderId *string
	// Whether to replace an existing metric with the same name
	ReplaceExisting *bool
	// Validation options for the registration
	Options *RegistrationOptions
}

func (b0 RegisterMetricRequest_builder) Build() *RegisterMetricRequest {
	m0 := &RegisterMetricRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Definition = b.Definition
	if b.ProviderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_ProviderId = b.ProviderId
	}
	if b.ReplaceExisting != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_ReplaceExisting = *b.ReplaceExisting
	}
	x.xxx_hidden_Options = b.Options
	return m0
}

// *
// MetricDefinition contains the complete definition of a metric.
type MetricDefinition struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type         MetricType             `protobuf:"varint,2,opt,name=type,enum=gcommon.v1.metrics.MetricType"`
	xxx_hidden_Description  *string                `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_Unit         *string                `protobuf:"bytes,4,opt,name=unit"`
	xxx_hidden_Labels       *[]*LabelDefinition    `protobuf:"bytes,5,rep,name=labels"`
	xxx_hidden_Config       *MetricTypeConfig      `protobuf:"bytes,6,opt,name=config"`
	xxx_hidden_Retention    *RetentionPolicyConfig `protobuf:"bytes,7,opt,name=retention"`
	xxx_hidden_ExportConfig *ExportConfig          `protobuf:"bytes,8,opt,name=export_config,json=exportConfig"`
	xxx_hidden_Validation   *ValidationRules       `protobuf:"bytes,9,opt,name=validation"`
	xxx_hidden_Tags         map[string]string      `protobuf:"bytes,10,rep,name=tags" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *MetricDefinition) Reset() {
	*x = MetricDefinition{}
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricDefinition) ProtoMessage() {}

func (x *MetricDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MetricDefinition) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *MetricDefinition) GetType() MetricType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Type
		}
	}
	return MetricType_METRIC_TYPE_UNSPECIFIED
}

func (x *MetricDefinition) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *MetricDefinition) GetUnit() string {
	if x != nil {
		if x.xxx_hidden_Unit != nil {
			return *x.xxx_hidden_Unit
		}
		return ""
	}
	return ""
}

func (x *MetricDefinition) GetLabels() []*LabelDefinition {
	if x != nil {
		if x.xxx_hidden_Labels != nil {
			return *x.xxx_hidden_Labels
		}
	}
	return nil
}

func (x *MetricDefinition) GetConfig() *MetricTypeConfig {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *MetricDefinition) GetRetention() *RetentionPolicyConfig {
	if x != nil {
		return x.xxx_hidden_Retention
	}
	return nil
}

func (x *MetricDefinition) GetExportConfig() *ExportConfig {
	if x != nil {
		return x.xxx_hidden_ExportConfig
	}
	return nil
}

func (x *MetricDefinition) GetValidation() *ValidationRules {
	if x != nil {
		return x.xxx_hidden_Validation
	}
	return nil
}

func (x *MetricDefinition) GetTags() map[string]string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *MetricDefinition) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *MetricDefinition) SetType(v MetricType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *MetricDefinition) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *MetricDefinition) SetUnit(v string) {
	x.xxx_hidden_Unit = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *MetricDefinition) SetLabels(v []*LabelDefinition) {
	x.xxx_hidden_Labels = &v
}

func (x *MetricDefinition) SetConfig(v *MetricTypeConfig) {
	x.xxx_hidden_Config = v
}

func (x *MetricDefinition) SetRetention(v *RetentionPolicyConfig) {
	x.xxx_hidden_Retention = v
}

func (x *MetricDefinition) SetExportConfig(v *ExportConfig) {
	x.xxx_hidden_ExportConfig = v
}

func (x *MetricDefinition) SetValidation(v *ValidationRules) {
	x.xxx_hidden_Validation = v
}

func (x *MetricDefinition) SetTags(v map[string]string) {
	x.xxx_hidden_Tags = v
}

func (x *MetricDefinition) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MetricDefinition) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MetricDefinition) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MetricDefinition) HasUnit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MetricDefinition) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Config != nil
}

func (x *MetricDefinition) HasRetention() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Retention != nil
}

func (x *MetricDefinition) HasExportConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ExportConfig != nil
}

func (x *MetricDefinition) HasValidation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Validation != nil
}

func (x *MetricDefinition) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *MetricDefinition) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = MetricType_METRIC_TYPE_UNSPECIFIED
}

func (x *MetricDefinition) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *MetricDefinition) ClearUnit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Unit = nil
}

func (x *MetricDefinition) ClearConfig() {
	x.xxx_hidden_Config = nil
}

func (x *MetricDefinition) ClearRetention() {
	x.xxx_hidden_Retention = nil
}

func (x *MetricDefinition) ClearExportConfig() {
	x.xxx_hidden_ExportConfig = nil
}

func (x *MetricDefinition) ClearValidation() {
	x.xxx_hidden_Validation = nil
}

type MetricDefinition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique name for the metric
	Name *string
	// Type of metric (counter, gauge, histogram, etc.)
	Type *MetricType
	// Human-readable description
	Description *string
	// Unit of measurement (e.g., "bytes", "requests", "seconds")
	Unit *string
	// Labels that this metric supports
	Labels []*LabelDefinition
	// Metric-specific configuration
	Config *MetricTypeConfig
	// Retention policy for this metric
	Retention *RetentionPolicyConfig
	// Export configuration for this metric
	ExportConfig *ExportConfig
	// Validation rules for metric values
	Validation *ValidationRules
	// Tags for metric organization and discovery
	Tags map[string]string
}

func (b0 MetricDefinition_builder) Build() *MetricDefinition {
	m0 := &MetricDefinition{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_Type = *b.Type
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_Description = b.Description
	}
	if b.Unit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_Unit = b.Unit
	}
	x.xxx_hidden_Labels = &b.Labels
	x.xxx_hidden_Config = b.Config
	x.xxx_hidden_Retention = b.Retention
	x.xxx_hidden_ExportConfig = b.ExportConfig
	x.xxx_hidden_Validation = b.Validation
	x.xxx_hidden_Tags = b.Tags
	return m0
}

// *
// LabelDefinition defines a label that can be attached to the metric.
type LabelDefinition struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name              *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Description       *string                `protobuf:"bytes,2,opt,name=description"`
	xxx_hidden_Required          bool                   `protobuf:"varint,3,opt,name=required"`
	xxx_hidden_AllowedValues     []string               `protobuf:"bytes,4,rep,name=allowed_values,json=allowedValues"`
	xxx_hidden_ValidationPattern *string                `protobuf:"bytes,5,opt,name=validation_pattern,json=validationPattern"`
	xxx_hidden_DefaultValue      *string                `protobuf:"bytes,6,opt,name=default_value,json=defaultValue"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *LabelDefinition) Reset() {
	*x = LabelDefinition{}
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelDefinition) ProtoMessage() {}

func (x *LabelDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LabelDefinition) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *LabelDefinition) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *LabelDefinition) GetRequired() bool {
	if x != nil {
		return x.xxx_hidden_Required
	}
	return false
}

func (x *LabelDefinition) GetAllowedValues() []string {
	if x != nil {
		return x.xxx_hidden_AllowedValues
	}
	return nil
}

func (x *LabelDefinition) GetValidationPattern() string {
	if x != nil {
		if x.xxx_hidden_ValidationPattern != nil {
			return *x.xxx_hidden_ValidationPattern
		}
		return ""
	}
	return ""
}

func (x *LabelDefinition) GetDefaultValue() string {
	if x != nil {
		if x.xxx_hidden_DefaultValue != nil {
			return *x.xxx_hidden_DefaultValue
		}
		return ""
	}
	return ""
}

func (x *LabelDefinition) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *LabelDefinition) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *LabelDefinition) SetRequired(v bool) {
	x.xxx_hidden_Required = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *LabelDefinition) SetAllowedValues(v []string) {
	x.xxx_hidden_AllowedValues = v
}

func (x *LabelDefinition) SetValidationPattern(v string) {
	x.xxx_hidden_ValidationPattern = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *LabelDefinition) SetDefaultValue(v string) {
	x.xxx_hidden_DefaultValue = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *LabelDefinition) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LabelDefinition) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LabelDefinition) HasRequired() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *LabelDefinition) HasValidationPattern() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *LabelDefinition) HasDefaultValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *LabelDefinition) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *LabelDefinition) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Description = nil
}

func (x *LabelDefinition) ClearRequired() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Required = false
}

func (x *LabelDefinition) ClearValidationPattern() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ValidationPattern = nil
}

func (x *LabelDefinition) ClearDefaultValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_DefaultValue = nil
}

type LabelDefinition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of the label
	Name *string
	// Description of what this label represents
	Description *string
	// Whether this label is required
	Required *bool
	// Allowed values for this label (empty = any value allowed)
	AllowedValues []string
	// Pattern for validating label values (regex)
	ValidationPattern *string
	// Default value if not specified
	DefaultValue *string
}

func (b0 LabelDefinition_builder) Build() *LabelDefinition {
	m0 := &LabelDefinition{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Description = b.Description
	}
	if b.Required != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Required = *b.Required
	}
	x.xxx_hidden_AllowedValues = b.AllowedValues
	if b.ValidationPattern != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_ValidationPattern = b.ValidationPattern
	}
	if b.DefaultValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_DefaultValue = b.DefaultValue
	}
	return m0
}

// *
// MetricTypeConfig contains type-specific configuration for metrics.
type MetricTypeConfig struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Histogram *HistogramConfig       `protobuf:"bytes,1,opt,name=histogram"`
	xxx_hidden_Summary   *SummaryConfig         `protobuf:"bytes,2,opt,name=summary"`
	xxx_hidden_Gauge     *GaugeConfig           `protobuf:"bytes,3,opt,name=gauge"`
	xxx_hidden_Counter   *CounterConfig         `protobuf:"bytes,4,opt,name=counter"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MetricTypeConfig) Reset() {
	*x = MetricTypeConfig{}
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricTypeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricTypeConfig) ProtoMessage() {}

func (x *MetricTypeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MetricTypeConfig) GetHistogram() *HistogramConfig {
	if x != nil {
		return x.xxx_hidden_Histogram
	}
	return nil
}

func (x *MetricTypeConfig) GetSummary() *SummaryConfig {
	if x != nil {
		return x.xxx_hidden_Summary
	}
	return nil
}

func (x *MetricTypeConfig) GetGauge() *GaugeConfig {
	if x != nil {
		return x.xxx_hidden_Gauge
	}
	return nil
}

func (x *MetricTypeConfig) GetCounter() *CounterConfig {
	if x != nil {
		return x.xxx_hidden_Counter
	}
	return nil
}

func (x *MetricTypeConfig) SetHistogram(v *HistogramConfig) {
	x.xxx_hidden_Histogram = v
}

func (x *MetricTypeConfig) SetSummary(v *SummaryConfig) {
	x.xxx_hidden_Summary = v
}

func (x *MetricTypeConfig) SetGauge(v *GaugeConfig) {
	x.xxx_hidden_Gauge = v
}

func (x *MetricTypeConfig) SetCounter(v *CounterConfig) {
	x.xxx_hidden_Counter = v
}

func (x *MetricTypeConfig) HasHistogram() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Histogram != nil
}

func (x *MetricTypeConfig) HasSummary() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Summary != nil
}

func (x *MetricTypeConfig) HasGauge() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Gauge != nil
}

func (x *MetricTypeConfig) HasCounter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Counter != nil
}

func (x *MetricTypeConfig) ClearHistogram() {
	x.xxx_hidden_Histogram = nil
}

func (x *MetricTypeConfig) ClearSummary() {
	x.xxx_hidden_Summary = nil
}

func (x *MetricTypeConfig) ClearGauge() {
	x.xxx_hidden_Gauge = nil
}

func (x *MetricTypeConfig) ClearCounter() {
	x.xxx_hidden_Counter = nil
}

type MetricTypeConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Configuration for histogram metrics
	Histogram *HistogramConfig
	// Configuration for summary metrics
	Summary *SummaryConfig
	// Configuration for gauge metrics
	Gauge *GaugeConfig
	// Configuration for counter metrics
	Counter *CounterConfig
}

func (b0 MetricTypeConfig_builder) Build() *MetricTypeConfig {
	m0 := &MetricTypeConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Histogram = b.Histogram
	x.xxx_hidden_Summary = b.Summary
	x.xxx_hidden_Gauge = b.Gauge
	x.xxx_hidden_Counter = b.Counter
	return m0
}

// *
// HistogramConfig contains configuration specific to histogram metrics.
type HistogramConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Buckets     []float64              `protobuf:"fixed64,1,rep,packed,name=buckets"`
	xxx_hidden_AutoBuckets bool                   `protobuf:"varint,2,opt,name=auto_buckets,json=autoBuckets"`
	xxx_hidden_MaxBuckets  int32                  `protobuf:"varint,3,opt,name=max_buckets,json=maxBuckets"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *HistogramConfig) Reset() {
	*x = HistogramConfig{}
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistogramConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramConfig) ProtoMessage() {}

func (x *HistogramConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HistogramConfig) GetBuckets() []float64 {
	if x != nil {
		return x.xxx_hidden_Buckets
	}
	return nil
}

func (x *HistogramConfig) GetAutoBuckets() bool {
	if x != nil {
		return x.xxx_hidden_AutoBuckets
	}
	return false
}

func (x *HistogramConfig) GetMaxBuckets() int32 {
	if x != nil {
		return x.xxx_hidden_MaxBuckets
	}
	return 0
}

func (x *HistogramConfig) SetBuckets(v []float64) {
	x.xxx_hidden_Buckets = v
}

func (x *HistogramConfig) SetAutoBuckets(v bool) {
	x.xxx_hidden_AutoBuckets = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *HistogramConfig) SetMaxBuckets(v int32) {
	x.xxx_hidden_MaxBuckets = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *HistogramConfig) HasAutoBuckets() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *HistogramConfig) HasMaxBuckets() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *HistogramConfig) ClearAutoBuckets() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AutoBuckets = false
}

func (x *HistogramConfig) ClearMaxBuckets() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxBuckets = 0
}

type HistogramConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Predefined buckets for the histogram
	Buckets []float64
	// Whether to automatically adjust buckets based on data
	AutoBuckets *bool
	// Maximum number of buckets to maintain
	MaxBuckets *int32
}

func (b0 HistogramConfig_builder) Build() *HistogramConfig {
	m0 := &HistogramConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Buckets = b.Buckets
	if b.AutoBuckets != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_AutoBuckets = *b.AutoBuckets
	}
	if b.MaxBuckets != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MaxBuckets = *b.MaxBuckets
	}
	return m0
}

// *
// SummaryConfig contains configuration specific to summary metrics.
type SummaryConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Quantiles   []float64              `protobuf:"fixed64,1,rep,packed,name=quantiles"`
	xxx_hidden_TimeWindow  *string                `protobuf:"bytes,2,opt,name=time_window,json=timeWindow"`
	xxx_hidden_MaxAge      *string                `protobuf:"bytes,3,opt,name=max_age,json=maxAge"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SummaryConfig) Reset() {
	*x = SummaryConfig{}
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryConfig) ProtoMessage() {}

func (x *SummaryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SummaryConfig) GetQuantiles() []float64 {
	if x != nil {
		return x.xxx_hidden_Quantiles
	}
	return nil
}

func (x *SummaryConfig) GetTimeWindow() string {
	if x != nil {
		if x.xxx_hidden_TimeWindow != nil {
			return *x.xxx_hidden_TimeWindow
		}
		return ""
	}
	return ""
}

func (x *SummaryConfig) GetMaxAge() string {
	if x != nil {
		if x.xxx_hidden_MaxAge != nil {
			return *x.xxx_hidden_MaxAge
		}
		return ""
	}
	return ""
}

func (x *SummaryConfig) SetQuantiles(v []float64) {
	x.xxx_hidden_Quantiles = v
}

func (x *SummaryConfig) SetTimeWindow(v string) {
	x.xxx_hidden_TimeWindow = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *SummaryConfig) SetMaxAge(v string) {
	x.xxx_hidden_MaxAge = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *SummaryConfig) HasTimeWindow() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SummaryConfig) HasMaxAge() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SummaryConfig) ClearTimeWindow() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TimeWindow = nil
}

func (x *SummaryConfig) ClearMaxAge() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxAge = nil
}

type SummaryConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Quantiles to calculate (e.g., 0.5, 0.95, 0.99)
	Quantiles []float64
	// Time window for calculating quantiles
	TimeWindow *string
	// Maximum age of observations to include
	MaxAge *string
}

func (b0 SummaryConfig_builder) Build() *SummaryConfig {
	m0 := &SummaryConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Quantiles = b.Quantiles
	if b.TimeWindow != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_TimeWindow = b.TimeWindow
	}
	if b.MaxAge != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MaxAge = b.MaxAge
	}
	return m0
}

// *
// GaugeConfig contains configuration specific to gauge metrics.
type GaugeConfig struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MinValue      float64                `protobuf:"fixed64,1,opt,name=min_value,json=minValue"`
	xxx_hidden_MaxValue      float64                `protobuf:"fixed64,2,opt,name=max_value,json=maxValue"`
	xxx_hidden_AllowNegative bool                   `protobuf:"varint,3,opt,name=allow_negative,json=allowNegative"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GaugeConfig) Reset() {
	*x = GaugeConfig{}
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GaugeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GaugeConfig) ProtoMessage() {}

func (x *GaugeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GaugeConfig) GetMinValue() float64 {
	if x != nil {
		return x.xxx_hidden_MinValue
	}
	return 0
}

func (x *GaugeConfig) GetMaxValue() float64 {
	if x != nil {
		return x.xxx_hidden_MaxValue
	}
	return 0
}

func (x *GaugeConfig) GetAllowNegative() bool {
	if x != nil {
		return x.xxx_hidden_AllowNegative
	}
	return false
}

func (x *GaugeConfig) SetMinValue(v float64) {
	x.xxx_hidden_MinValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *GaugeConfig) SetMaxValue(v float64) {
	x.xxx_hidden_MaxValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *GaugeConfig) SetAllowNegative(v bool) {
	x.xxx_hidden_AllowNegative = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *GaugeConfig) HasMinValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GaugeConfig) HasMaxValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GaugeConfig) HasAllowNegative() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GaugeConfig) ClearMinValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MinValue = 0
}

func (x *GaugeConfig) ClearMaxValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxValue = 0
}

func (x *GaugeConfig) ClearAllowNegative() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_AllowNegative = false
}

type GaugeConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Minimum allowed value
	MinValue *float64
	// Maximum allowed value
	MaxValue *float64
	// Whether the gauge can go negative
	AllowNegative *bool
}

func (b0 GaugeConfig_builder) Build() *GaugeConfig {
	m0 := &GaugeConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MinValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_MinValue = *b.MinValue
	}
	if b.MaxValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_MaxValue = *b.MaxValue
	}
	if b.AllowNegative != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_AllowNegative = *b.AllowNegative
	}
	return m0
}

// *
// CounterConfig contains configuration specific to counter metrics.
type CounterConfig struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_InitialValue float64                `protobuf:"fixed64,1,opt,name=initial_value,json=initialValue"`
	xxx_hidden_AllowReset   bool                   `protobuf:"varint,2,opt,name=allow_reset,json=allowReset"`
	xxx_hidden_MaxValue     float64                `protobuf:"fixed64,3,opt,name=max_value,json=maxValue"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CounterConfig) Reset() {
	*x = CounterConfig{}
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CounterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterConfig) ProtoMessage() {}

func (x *CounterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CounterConfig) GetInitialValue() float64 {
	if x != nil {
		return x.xxx_hidden_InitialValue
	}
	return 0
}

func (x *CounterConfig) GetAllowReset() bool {
	if x != nil {
		return x.xxx_hidden_AllowReset
	}
	return false
}

func (x *CounterConfig) GetMaxValue() float64 {
	if x != nil {
		return x.xxx_hidden_MaxValue
	}
	return 0
}

func (x *CounterConfig) SetInitialValue(v float64) {
	x.xxx_hidden_InitialValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CounterConfig) SetAllowReset(v bool) {
	x.xxx_hidden_AllowReset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *CounterConfig) SetMaxValue(v float64) {
	x.xxx_hidden_MaxValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *CounterConfig) HasInitialValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CounterConfig) HasAllowReset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CounterConfig) HasMaxValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CounterConfig) ClearInitialValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_InitialValue = 0
}

func (x *CounterConfig) ClearAllowReset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AllowReset = false
}

func (x *CounterConfig) ClearMaxValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxValue = 0
}

type CounterConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Starting value for the counter
	InitialValue *float64
	// Whether the counter can be reset
	AllowReset *bool
	// Maximum value before rolling over
	MaxValue *float64
}

func (b0 CounterConfig_builder) Build() *CounterConfig {
	m0 := &CounterConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.InitialValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_InitialValue = *b.InitialValue
	}
	if b.AllowReset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_AllowReset = *b.AllowReset
	}
	if b.MaxValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MaxValue = *b.MaxValue
	}
	return m0
}

// *
// ValidationRules define validation rules for metric values.
type ValidationRules struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MinValue              float64                `protobuf:"fixed64,1,opt,name=min_value,json=minValue"`
	xxx_hidden_MaxValue              float64                `protobuf:"fixed64,2,opt,name=max_value,json=maxValue"`
	xxx_hidden_AllowNull             bool                   `protobuf:"varint,3,opt,name=allow_null,json=allowNull"`
	xxx_hidden_ValidationExpressions []string               `protobuf:"bytes,4,rep,name=validation_expressions,json=validationExpressions"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ValidationRules) Reset() {
	*x = ValidationRules{}
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationRules) ProtoMessage() {}

func (x *ValidationRules) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ValidationRules) GetMinValue() float64 {
	if x != nil {
		return x.xxx_hidden_MinValue
	}
	return 0
}

func (x *ValidationRules) GetMaxValue() float64 {
	if x != nil {
		return x.xxx_hidden_MaxValue
	}
	return 0
}

func (x *ValidationRules) GetAllowNull() bool {
	if x != nil {
		return x.xxx_hidden_AllowNull
	}
	return false
}

func (x *ValidationRules) GetValidationExpressions() []string {
	if x != nil {
		return x.xxx_hidden_ValidationExpressions
	}
	return nil
}

func (x *ValidationRules) SetMinValue(v float64) {
	x.xxx_hidden_MinValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ValidationRules) SetMaxValue(v float64) {
	x.xxx_hidden_MaxValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ValidationRules) SetAllowNull(v bool) {
	x.xxx_hidden_AllowNull = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ValidationRules) SetValidationExpressions(v []string) {
	x.xxx_hidden_ValidationExpressions = v
}

func (x *ValidationRules) HasMinValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ValidationRules) HasMaxValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ValidationRules) HasAllowNull() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ValidationRules) ClearMinValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MinValue = 0
}

func (x *ValidationRules) ClearMaxValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxValue = 0
}

func (x *ValidationRules) ClearAllowNull() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_AllowNull = false
}

type ValidationRules_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Minimum allowed value
	MinValue *float64
	// Maximum allowed value
	MaxValue *float64
	// Whether null/zero values are allowed
	AllowNull *bool
	// Custom validation expressions
	ValidationExpressions []string
}

func (b0 ValidationRules_builder) Build() *ValidationRules {
	m0 := &ValidationRules{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MinValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_MinValue = *b.MinValue
	}
	if b.MaxValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_MaxValue = *b.MaxValue
	}
	if b.AllowNull != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_AllowNull = *b.AllowNull
	}
	x.xxx_hidden_ValidationExpressions = b.ValidationExpressions
	return m0
}

// *
// RegistrationOptions configure the registration process.
type RegistrationOptions struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ValidateDefinition bool                   `protobuf:"varint,1,opt,name=validate_definition,json=validateDefinition"`
	xxx_hidden_DryRun             bool                   `protobuf:"varint,2,opt,name=dry_run,json=dryRun"`
	xxx_hidden_CreateIndices      bool                   `protobuf:"varint,3,opt,name=create_indices,json=createIndices"`
	xxx_hidden_EnableAlerting     bool                   `protobuf:"varint,4,opt,name=enable_alerting,json=enableAlerting"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *RegistrationOptions) Reset() {
	*x = RegistrationOptions{}
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationOptions) ProtoMessage() {}

func (x *RegistrationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_register_metric_request_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegistrationOptions) GetValidateDefinition() bool {
	if x != nil {
		return x.xxx_hidden_ValidateDefinition
	}
	return false
}

func (x *RegistrationOptions) GetDryRun() bool {
	if x != nil {
		return x.xxx_hidden_DryRun
	}
	return false
}

func (x *RegistrationOptions) GetCreateIndices() bool {
	if x != nil {
		return x.xxx_hidden_CreateIndices
	}
	return false
}

func (x *RegistrationOptions) GetEnableAlerting() bool {
	if x != nil {
		return x.xxx_hidden_EnableAlerting
	}
	return false
}

func (x *RegistrationOptions) SetValidateDefinition(v bool) {
	x.xxx_hidden_ValidateDefinition = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *RegistrationOptions) SetDryRun(v bool) {
	x.xxx_hidden_DryRun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *RegistrationOptions) SetCreateIndices(v bool) {
	x.xxx_hidden_CreateIndices = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *RegistrationOptions) SetEnableAlerting(v bool) {
	x.xxx_hidden_EnableAlerting = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *RegistrationOptions) HasValidateDefinition() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RegistrationOptions) HasDryRun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RegistrationOptions) HasCreateIndices() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RegistrationOptions) HasEnableAlerting() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RegistrationOptions) ClearValidateDefinition() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ValidateDefinition = false
}

func (x *RegistrationOptions) ClearDryRun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DryRun = false
}

func (x *RegistrationOptions) ClearCreateIndices() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CreateIndices = false
}

func (x *RegistrationOptions) ClearEnableAlerting() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EnableAlerting = false
}

type RegistrationOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether to validate the definition before registration
	ValidateDefinition *bool
	// Whether to perform a dry run (validation only)
	DryRun *bool
	// Whether to create indices for efficient querying
	CreateIndices *bool
	// Whether to enable real-time alerts for this metric
	EnableAlerting *bool
}

func (b0 RegistrationOptions_builder) Build() *RegistrationOptions {
	m0 := &RegistrationOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ValidateDefinition != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ValidateDefinition = *b.ValidateDefinition
	}
	if b.DryRun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_DryRun = *b.DryRun
	}
	if b.CreateIndices != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_CreateIndices = *b.CreateIndices
	}
	if b.EnableAlerting != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_EnableAlerting = *b.EnableAlerting
	}
	return m0
}

var File_pkg_metrics_proto_register_metric_request_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_register_metric_request_proto_rawDesc = "" +
	"\n" +
	"/pkg/metrics/proto/register_metric_request.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a'pkg/common/proto/request_metadata.proto\x1a%pkg/metrics/proto/export_config.proto\x1a#pkg/metrics/proto/metric_type.proto\x1a>pkg/metrics/proto/retention_policy_retentionpolicyconfig.proto\"\xac\x02\n" +
	"\x15RegisterMetricRequest\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x12D\n" +
	"\n" +
	"definition\x18\x02 \x01(\v2$.gcommon.v1.metrics.MetricDefinitionR\n" +
	"definition\x12\x1f\n" +
	"\vprovider_id\x18\x03 \x01(\tR\n" +
	"providerId\x12)\n" +
	"\x10replace_existing\x18\x04 \x01(\bR\x0freplaceExisting\x12A\n" +
	"\aoptions\x18\x05 \x01(\v2'.gcommon.v1.metrics.RegistrationOptionsR\aoptions\"\xdd\x04\n" +
	"\x10MetricDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x122\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1e.gcommon.v1.metrics.MetricTypeR\x04type\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x12\n" +
	"\x04unit\x18\x04 \x01(\tR\x04unit\x12;\n" +
	"\x06labels\x18\x05 \x03(\v2#.gcommon.v1.metrics.LabelDefinitionR\x06labels\x12<\n" +
	"\x06config\x18\x06 \x01(\v2$.gcommon.v1.metrics.MetricTypeConfigR\x06config\x12G\n" +
	"\tretention\x18\a \x01(\v2).gcommon.v1.metrics.RetentionPolicyConfigR\tretention\x12E\n" +
	"\rexport_config\x18\b \x01(\v2 .gcommon.v1.metrics.ExportConfigR\fexportConfig\x12C\n" +
	"\n" +
	"validation\x18\t \x01(\v2#.gcommon.v1.metrics.ValidationRulesR\n" +
	"validation\x12B\n" +
	"\x04tags\x18\n" +
	" \x03(\v2..gcommon.v1.metrics.MetricDefinition.TagsEntryR\x04tags\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xde\x01\n" +
	"\x0fLabelDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1a\n" +
	"\brequired\x18\x03 \x01(\bR\brequired\x12%\n" +
	"\x0eallowed_values\x18\x04 \x03(\tR\rallowedValues\x12-\n" +
	"\x12validation_pattern\x18\x05 \x01(\tR\x11validationPattern\x12#\n" +
	"\rdefault_value\x18\x06 \x01(\tR\fdefaultValue\"\x86\x02\n" +
	"\x10MetricTypeConfig\x12A\n" +
	"\thistogram\x18\x01 \x01(\v2#.gcommon.v1.metrics.HistogramConfigR\thistogram\x12;\n" +
	"\asummary\x18\x02 \x01(\v2!.gcommon.v1.metrics.SummaryConfigR\asummary\x125\n" +
	"\x05gauge\x18\x03 \x01(\v2\x1f.gcommon.v1.metrics.GaugeConfigR\x05gauge\x12;\n" +
	"\acounter\x18\x04 \x01(\v2!.gcommon.v1.metrics.CounterConfigR\acounter\"o\n" +
	"\x0fHistogramConfig\x12\x18\n" +
	"\abuckets\x18\x01 \x03(\x01R\abuckets\x12!\n" +
	"\fauto_buckets\x18\x02 \x01(\bR\vautoBuckets\x12\x1f\n" +
	"\vmax_buckets\x18\x03 \x01(\x05R\n" +
	"maxBuckets\"g\n" +
	"\rSummaryConfig\x12\x1c\n" +
	"\tquantiles\x18\x01 \x03(\x01R\tquantiles\x12\x1f\n" +
	"\vtime_window\x18\x02 \x01(\tR\n" +
	"timeWindow\x12\x17\n" +
	"\amax_age\x18\x03 \x01(\tR\x06maxAge\"n\n" +
	"\vGaugeConfig\x12\x1b\n" +
	"\tmin_value\x18\x01 \x01(\x01R\bminValue\x12\x1b\n" +
	"\tmax_value\x18\x02 \x01(\x01R\bmaxValue\x12%\n" +
	"\x0eallow_negative\x18\x03 \x01(\bR\rallowNegative\"r\n" +
	"\rCounterConfig\x12#\n" +
	"\rinitial_value\x18\x01 \x01(\x01R\finitialValue\x12\x1f\n" +
	"\vallow_reset\x18\x02 \x01(\bR\n" +
	"allowReset\x12\x1b\n" +
	"\tmax_value\x18\x03 \x01(\x01R\bmaxValue\"\xa1\x01\n" +
	"\x0fValidationRules\x12\x1b\n" +
	"\tmin_value\x18\x01 \x01(\x01R\bminValue\x12\x1b\n" +
	"\tmax_value\x18\x02 \x01(\x01R\bmaxValue\x12\x1d\n" +
	"\n" +
	"allow_null\x18\x03 \x01(\bR\tallowNull\x125\n" +
	"\x16validation_expressions\x18\x04 \x03(\tR\x15validationExpressions\"\xaf\x01\n" +
	"\x13RegistrationOptions\x12/\n" +
	"\x13validate_definition\x18\x01 \x01(\bR\x12validateDefinition\x12\x17\n" +
	"\adry_run\x18\x02 \x01(\bR\x06dryRun\x12%\n" +
	"\x0ecreate_indices\x18\x03 \x01(\bR\rcreateIndices\x12'\n" +
	"\x0fenable_alerting\x18\x04 \x01(\bR\x0eenableAlertingB\xd3\x01\n" +
	"\x16com.gcommon.v1.metricsB\x1aRegisterMetricRequestProtoP\x01Z+github.com/jdfalk/gcommon/pkg/metrics/proto\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_metrics_proto_register_metric_request_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_pkg_metrics_proto_register_metric_request_proto_goTypes = []any{
	(*RegisterMetricRequest)(nil), // 0: gcommon.v1.metrics.RegisterMetricRequest
	(*MetricDefinition)(nil),      // 1: gcommon.v1.metrics.MetricDefinition
	(*LabelDefinition)(nil),       // 2: gcommon.v1.metrics.LabelDefinition
	(*MetricTypeConfig)(nil),      // 3: gcommon.v1.metrics.MetricTypeConfig
	(*HistogramConfig)(nil),       // 4: gcommon.v1.metrics.HistogramConfig
	(*SummaryConfig)(nil),         // 5: gcommon.v1.metrics.SummaryConfig
	(*GaugeConfig)(nil),           // 6: gcommon.v1.metrics.GaugeConfig
	(*CounterConfig)(nil),         // 7: gcommon.v1.metrics.CounterConfig
	(*ValidationRules)(nil),       // 8: gcommon.v1.metrics.ValidationRules
	(*RegistrationOptions)(nil),   // 9: gcommon.v1.metrics.RegistrationOptions
	nil,                           // 10: gcommon.v1.metrics.MetricDefinition.TagsEntry
	(*proto.RequestMetadata)(nil), // 11: gcommon.v1.common.RequestMetadata
	(MetricType)(0),               // 12: gcommon.v1.metrics.MetricType
	(*RetentionPolicyConfig)(nil), // 13: gcommon.v1.metrics.RetentionPolicyConfig
	(*ExportConfig)(nil),          // 14: gcommon.v1.metrics.ExportConfig
}
var file_pkg_metrics_proto_register_metric_request_proto_depIdxs = []int32{
	11, // 0: gcommon.v1.metrics.RegisterMetricRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	1,  // 1: gcommon.v1.metrics.RegisterMetricRequest.definition:type_name -> gcommon.v1.metrics.MetricDefinition
	9,  // 2: gcommon.v1.metrics.RegisterMetricRequest.options:type_name -> gcommon.v1.metrics.RegistrationOptions
	12, // 3: gcommon.v1.metrics.MetricDefinition.type:type_name -> gcommon.v1.metrics.MetricType
	2,  // 4: gcommon.v1.metrics.MetricDefinition.labels:type_name -> gcommon.v1.metrics.LabelDefinition
	3,  // 5: gcommon.v1.metrics.MetricDefinition.config:type_name -> gcommon.v1.metrics.MetricTypeConfig
	13, // 6: gcommon.v1.metrics.MetricDefinition.retention:type_name -> gcommon.v1.metrics.RetentionPolicyConfig
	14, // 7: gcommon.v1.metrics.MetricDefinition.export_config:type_name -> gcommon.v1.metrics.ExportConfig
	8,  // 8: gcommon.v1.metrics.MetricDefinition.validation:type_name -> gcommon.v1.metrics.ValidationRules
	10, // 9: gcommon.v1.metrics.MetricDefinition.tags:type_name -> gcommon.v1.metrics.MetricDefinition.TagsEntry
	4,  // 10: gcommon.v1.metrics.MetricTypeConfig.histogram:type_name -> gcommon.v1.metrics.HistogramConfig
	5,  // 11: gcommon.v1.metrics.MetricTypeConfig.summary:type_name -> gcommon.v1.metrics.SummaryConfig
	6,  // 12: gcommon.v1.metrics.MetricTypeConfig.gauge:type_name -> gcommon.v1.metrics.GaugeConfig
	7,  // 13: gcommon.v1.metrics.MetricTypeConfig.counter:type_name -> gcommon.v1.metrics.CounterConfig
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_register_metric_request_proto_init() }
func file_pkg_metrics_proto_register_metric_request_proto_init() {
	if File_pkg_metrics_proto_register_metric_request_proto != nil {
		return
	}
	file_pkg_metrics_proto_export_config_proto_init()
	file_pkg_metrics_proto_metric_type_proto_init()
	file_pkg_metrics_proto_retention_policy_retentionpolicyconfig_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_register_metric_request_proto_rawDesc), len(file_pkg_metrics_proto_register_metric_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_register_metric_request_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_register_metric_request_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_register_metric_request_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_register_metric_request_proto = out.File
	file_pkg_metrics_proto_register_metric_request_proto_goTypes = nil
	file_pkg_metrics_proto_register_metric_request_proto_depIdxs = nil
}
