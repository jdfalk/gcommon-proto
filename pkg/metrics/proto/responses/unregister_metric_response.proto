// filepath: pkg/metrics/proto/responses/unregister_metric_response.proto
// file: metrics/proto/responses/unregister_metric_response.proto
//
// Unregister metric response definitions for metrics module
//
edition = "2023";

package gcommon.v1.metrics;

import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";
import "pkg/common/proto/messages/error.proto";

option go_package = "github.com/jdfalk/gcommon/pkg/metrics/proto;metricspb";
option features.(pb.go).api_level = API_HYBRID;

/**
 * UnregisterMetricResponse contains the result of unregistering a metric.
 */
message UnregisterMetricResponse {
  // Success status of the unregistration
  bool success = 1;

  // Error information if unregistration failed
  gcommon.v1.common.Error error = 2;

  // ID of the metric that was unregistered
  string metric_id = 3;

  // Name of the metric that was unregistered
  string metric_name = 4;

  // When the metric was unregistered
  google.protobuf.Timestamp unregistered_at = 5;

  // Provider that handled the unregistration
  string provider_id = 6;

  // Information about what was deleted/cleaned up
  UnregistrationResult result = 7;

  // Warnings or informational messages
  repeated string warnings = 8;

  // Backup information (if backup was created)
  BackupInfo backup_info = 9;
}

/**
 * UnregistrationResult contains information about what was deleted/cleaned up.
 */
message UnregistrationResult {
  // Whether the metric definition was deleted
  bool definition_deleted = 1;

  // Amount of data that was deleted (bytes)
  int64 data_deleted_bytes = 2;

  // Number of data points deleted
  int64 data_points_deleted = 3;

  // Indices that were deleted
  repeated string deleted_indices = 4;

  // Alert rules that were removed
  repeated string removed_alerts = 5;

  // Export configurations that were stopped
  repeated string stopped_exports = 6;

  // Time when actual deletion will occur (if grace period is set)
  google.protobuf.Timestamp scheduled_deletion = 7;

  // What would be deleted (for dry run operations)
  DryRunResult dry_run_result = 8;
}

/**
 * DryRunResult shows what would be deleted in a dry run operation.
 */
message DryRunResult {
  // Data that would be deleted (bytes)
  int64 would_delete_bytes = 1;

  // Data points that would be deleted
  int64 would_delete_points = 2;

  // Indices that would be deleted
  repeated string would_delete_indices = 3;

  // Alerts that would be removed
  repeated string would_remove_alerts = 4;

  // Exports that would be stopped
  repeated string would_stop_exports = 5;

  // Estimated time for deletion operation
  string estimated_deletion_time = 6;
}

/**
 * BackupInfo contains information about created backups.
 */
message BackupInfo {
  // Backup ID for reference
  string backup_id = 1;

  // Location where backup was stored
  string backup_location = 2;

  // Size of the backup (bytes)
  int64 backup_size_bytes = 3;

  // When the backup was created
  google.protobuf.Timestamp backup_created_at = 4;

  // How long the backup will be kept
  string backup_retention = 5;
}