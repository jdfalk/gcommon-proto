// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/responses/get_provider_stats_response.proto

//go:build protoopaque

package responses

import (
	messages "github.com/jdfalk/gcommon/pkg/common/proto/messages"
	types "github.com/jdfalk/gcommon/pkg/metrics/proto/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// GetProviderStatsResponse contains statistics for a metrics provider.
type GetProviderStatsResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Success     bool                   `protobuf:"varint,1,opt,name=success"`
	xxx_hidden_Error       *messages.Error        `protobuf:"bytes,2,opt,name=error"`
	xxx_hidden_ProviderId  *string                `protobuf:"bytes,3,opt,name=provider_id,json=providerId"`
	xxx_hidden_Statistics  *ProviderStatistics    `protobuf:"bytes,4,opt,name=statistics"`
	xxx_hidden_GeneratedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=generated_at,json=generatedAt"`
	xxx_hidden_TimeRange   *types.TimeRange       `protobuf:"bytes,6,opt,name=time_range,json=timeRange"`
	xxx_hidden_Warnings    []string               `protobuf:"bytes,7,rep,name=warnings"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetProviderStatsResponse) Reset() {
	*x = GetProviderStatsResponse{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProviderStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderStatsResponse) ProtoMessage() {}

func (x *GetProviderStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetProviderStatsResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *GetProviderStatsResponse) GetError() *messages.Error {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *GetProviderStatsResponse) GetProviderId() string {
	if x != nil {
		if x.xxx_hidden_ProviderId != nil {
			return *x.xxx_hidden_ProviderId
		}
		return ""
	}
	return ""
}

func (x *GetProviderStatsResponse) GetStatistics() *ProviderStatistics {
	if x != nil {
		return x.xxx_hidden_Statistics
	}
	return nil
}

func (x *GetProviderStatsResponse) GetGeneratedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_GeneratedAt
	}
	return nil
}

func (x *GetProviderStatsResponse) GetTimeRange() *types.TimeRange {
	if x != nil {
		return x.xxx_hidden_TimeRange
	}
	return nil
}

func (x *GetProviderStatsResponse) GetWarnings() []string {
	if x != nil {
		return x.xxx_hidden_Warnings
	}
	return nil
}

func (x *GetProviderStatsResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *GetProviderStatsResponse) SetError(v *messages.Error) {
	x.xxx_hidden_Error = v
}

func (x *GetProviderStatsResponse) SetProviderId(v string) {
	x.xxx_hidden_ProviderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *GetProviderStatsResponse) SetStatistics(v *ProviderStatistics) {
	x.xxx_hidden_Statistics = v
}

func (x *GetProviderStatsResponse) SetGeneratedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_GeneratedAt = v
}

func (x *GetProviderStatsResponse) SetTimeRange(v *types.TimeRange) {
	x.xxx_hidden_TimeRange = v
}

func (x *GetProviderStatsResponse) SetWarnings(v []string) {
	x.xxx_hidden_Warnings = v
}

func (x *GetProviderStatsResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetProviderStatsResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *GetProviderStatsResponse) HasProviderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetProviderStatsResponse) HasStatistics() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Statistics != nil
}

func (x *GetProviderStatsResponse) HasGeneratedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_GeneratedAt != nil
}

func (x *GetProviderStatsResponse) HasTimeRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TimeRange != nil
}

func (x *GetProviderStatsResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Success = false
}

func (x *GetProviderStatsResponse) ClearError() {
	x.xxx_hidden_Error = nil
}

func (x *GetProviderStatsResponse) ClearProviderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ProviderId = nil
}

func (x *GetProviderStatsResponse) ClearStatistics() {
	x.xxx_hidden_Statistics = nil
}

func (x *GetProviderStatsResponse) ClearGeneratedAt() {
	x.xxx_hidden_GeneratedAt = nil
}

func (x *GetProviderStatsResponse) ClearTimeRange() {
	x.xxx_hidden_TimeRange = nil
}

type GetProviderStatsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status of the operation
	Success *bool
	// Error information if the operation failed
	Error *messages.Error
	// Provider ID these stats are for
	ProviderId *string
	// Comprehensive provider statistics
	Statistics *ProviderStatistics
	// When the statistics were generated
	GeneratedAt *timestamppb.Timestamp
	// Time range covered by the statistics
	TimeRange *types.TimeRange
	// Warnings or informational messages
	Warnings []string
}

func (b0 GetProviderStatsResponse_builder) Build() *GetProviderStatsResponse {
	m0 := &GetProviderStatsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Success = *b.Success
	}
	x.xxx_hidden_Error = b.Error
	if b.ProviderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_ProviderId = b.ProviderId
	}
	x.xxx_hidden_Statistics = b.Statistics
	x.xxx_hidden_GeneratedAt = b.GeneratedAt
	x.xxx_hidden_TimeRange = b.TimeRange
	x.xxx_hidden_Warnings = b.Warnings
	return m0
}

// *
// ProviderStatistics contains comprehensive statistics for a provider.
type ProviderStatistics struct {
	state                    protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_ProviderInfo  *types.ProviderInfo     `protobuf:"bytes,1,opt,name=provider_info,json=providerInfo"`
	xxx_hidden_Performance   *types.PerformanceStats `protobuf:"bytes,2,opt,name=performance"`
	xxx_hidden_ResourceUsage *ResourceUsageStats     `protobuf:"bytes,3,opt,name=resource_usage,json=resourceUsage"`
	xxx_hidden_Errors        *types.ErrorStats       `protobuf:"bytes,4,opt,name=errors"`
	xxx_hidden_DataVolume    *DataVolumeStats        `protobuf:"bytes,5,opt,name=data_volume,json=dataVolume"`
	xxx_hidden_Exports       *ExportStats            `protobuf:"bytes,6,opt,name=exports"`
	xxx_hidden_HealthHistory *[]*HealthStatusEntry   `protobuf:"bytes,7,rep,name=health_history,json=healthHistory"`
	xxx_hidden_Config        *ConfigurationSummary   `protobuf:"bytes,8,opt,name=config"`
	xxx_hidden_TopMetrics    *types.TopMetrics       `protobuf:"bytes,9,opt,name=top_metrics,json=topMetrics"`
	xxx_hidden_Trends        *TrendAnalysis          `protobuf:"bytes,10,opt,name=trends"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ProviderStatistics) Reset() {
	*x = ProviderStatistics{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderStatistics) ProtoMessage() {}

func (x *ProviderStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProviderStatistics) GetProviderInfo() *types.ProviderInfo {
	if x != nil {
		return x.xxx_hidden_ProviderInfo
	}
	return nil
}

func (x *ProviderStatistics) GetPerformance() *types.PerformanceStats {
	if x != nil {
		return x.xxx_hidden_Performance
	}
	return nil
}

func (x *ProviderStatistics) GetResourceUsage() *ResourceUsageStats {
	if x != nil {
		return x.xxx_hidden_ResourceUsage
	}
	return nil
}

func (x *ProviderStatistics) GetErrors() *types.ErrorStats {
	if x != nil {
		return x.xxx_hidden_Errors
	}
	return nil
}

func (x *ProviderStatistics) GetDataVolume() *DataVolumeStats {
	if x != nil {
		return x.xxx_hidden_DataVolume
	}
	return nil
}

func (x *ProviderStatistics) GetExports() *ExportStats {
	if x != nil {
		return x.xxx_hidden_Exports
	}
	return nil
}

func (x *ProviderStatistics) GetHealthHistory() []*HealthStatusEntry {
	if x != nil {
		if x.xxx_hidden_HealthHistory != nil {
			return *x.xxx_hidden_HealthHistory
		}
	}
	return nil
}

func (x *ProviderStatistics) GetConfig() *ConfigurationSummary {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *ProviderStatistics) GetTopMetrics() *types.TopMetrics {
	if x != nil {
		return x.xxx_hidden_TopMetrics
	}
	return nil
}

func (x *ProviderStatistics) GetTrends() *TrendAnalysis {
	if x != nil {
		return x.xxx_hidden_Trends
	}
	return nil
}

func (x *ProviderStatistics) SetProviderInfo(v *types.ProviderInfo) {
	x.xxx_hidden_ProviderInfo = v
}

func (x *ProviderStatistics) SetPerformance(v *types.PerformanceStats) {
	x.xxx_hidden_Performance = v
}

func (x *ProviderStatistics) SetResourceUsage(v *ResourceUsageStats) {
	x.xxx_hidden_ResourceUsage = v
}

func (x *ProviderStatistics) SetErrors(v *types.ErrorStats) {
	x.xxx_hidden_Errors = v
}

func (x *ProviderStatistics) SetDataVolume(v *DataVolumeStats) {
	x.xxx_hidden_DataVolume = v
}

func (x *ProviderStatistics) SetExports(v *ExportStats) {
	x.xxx_hidden_Exports = v
}

func (x *ProviderStatistics) SetHealthHistory(v []*HealthStatusEntry) {
	x.xxx_hidden_HealthHistory = &v
}

func (x *ProviderStatistics) SetConfig(v *ConfigurationSummary) {
	x.xxx_hidden_Config = v
}

func (x *ProviderStatistics) SetTopMetrics(v *types.TopMetrics) {
	x.xxx_hidden_TopMetrics = v
}

func (x *ProviderStatistics) SetTrends(v *TrendAnalysis) {
	x.xxx_hidden_Trends = v
}

func (x *ProviderStatistics) HasProviderInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ProviderInfo != nil
}

func (x *ProviderStatistics) HasPerformance() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Performance != nil
}

func (x *ProviderStatistics) HasResourceUsage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ResourceUsage != nil
}

func (x *ProviderStatistics) HasErrors() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Errors != nil
}

func (x *ProviderStatistics) HasDataVolume() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DataVolume != nil
}

func (x *ProviderStatistics) HasExports() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Exports != nil
}

func (x *ProviderStatistics) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Config != nil
}

func (x *ProviderStatistics) HasTopMetrics() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TopMetrics != nil
}

func (x *ProviderStatistics) HasTrends() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Trends != nil
}

func (x *ProviderStatistics) ClearProviderInfo() {
	x.xxx_hidden_ProviderInfo = nil
}

func (x *ProviderStatistics) ClearPerformance() {
	x.xxx_hidden_Performance = nil
}

func (x *ProviderStatistics) ClearResourceUsage() {
	x.xxx_hidden_ResourceUsage = nil
}

func (x *ProviderStatistics) ClearErrors() {
	x.xxx_hidden_Errors = nil
}

func (x *ProviderStatistics) ClearDataVolume() {
	x.xxx_hidden_DataVolume = nil
}

func (x *ProviderStatistics) ClearExports() {
	x.xxx_hidden_Exports = nil
}

func (x *ProviderStatistics) ClearConfig() {
	x.xxx_hidden_Config = nil
}

func (x *ProviderStatistics) ClearTopMetrics() {
	x.xxx_hidden_TopMetrics = nil
}

func (x *ProviderStatistics) ClearTrends() {
	x.xxx_hidden_Trends = nil
}

type ProviderStatistics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Basic provider information
	ProviderInfo *types.ProviderInfo
	// Performance statistics
	Performance *types.PerformanceStats
	// Resource usage statistics
	ResourceUsage *ResourceUsageStats
	// Error statistics
	Errors *types.ErrorStats
	// Data volume statistics
	DataVolume *DataVolumeStats
	// Export statistics
	Exports *ExportStats
	// Health status history
	HealthHistory []*HealthStatusEntry
	// Configuration summary
	Config *ConfigurationSummary
	// Top metrics
	TopMetrics *types.TopMetrics
	// Trend analysis
	Trends *TrendAnalysis
}

func (b0 ProviderStatistics_builder) Build() *ProviderStatistics {
	m0 := &ProviderStatistics{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ProviderInfo = b.ProviderInfo
	x.xxx_hidden_Performance = b.Performance
	x.xxx_hidden_ResourceUsage = b.ResourceUsage
	x.xxx_hidden_Errors = b.Errors
	x.xxx_hidden_DataVolume = b.DataVolume
	x.xxx_hidden_Exports = b.Exports
	x.xxx_hidden_HealthHistory = &b.HealthHistory
	x.xxx_hidden_Config = b.Config
	x.xxx_hidden_TopMetrics = b.TopMetrics
	x.xxx_hidden_Trends = b.Trends
	return m0
}

// *
// PerformanceDataPoint represents a single performance measurement.
type PerformanceDataPoint struct {
	state                               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp                *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_OpsPerSecond             float64                `protobuf:"fixed64,2,opt,name=ops_per_second,json=opsPerSecond"`
	xxx_hidden_LatencyMs                float64                `protobuf:"fixed64,3,opt,name=latency_ms,json=latencyMs"`
	xxx_hidden_ThroughputBytesPerSecond float64                `protobuf:"fixed64,4,opt,name=throughput_bytes_per_second,json=throughputBytesPerSecond"`
	XXX_raceDetectHookData              protoimpl.RaceDetectHookData
	XXX_presence                        [1]uint32
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *PerformanceDataPoint) Reset() {
	*x = PerformanceDataPoint{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceDataPoint) ProtoMessage() {}

func (x *PerformanceDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PerformanceDataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *PerformanceDataPoint) GetOpsPerSecond() float64 {
	if x != nil {
		return x.xxx_hidden_OpsPerSecond
	}
	return 0
}

func (x *PerformanceDataPoint) GetLatencyMs() float64 {
	if x != nil {
		return x.xxx_hidden_LatencyMs
	}
	return 0
}

func (x *PerformanceDataPoint) GetThroughputBytesPerSecond() float64 {
	if x != nil {
		return x.xxx_hidden_ThroughputBytesPerSecond
	}
	return 0
}

func (x *PerformanceDataPoint) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *PerformanceDataPoint) SetOpsPerSecond(v float64) {
	x.xxx_hidden_OpsPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *PerformanceDataPoint) SetLatencyMs(v float64) {
	x.xxx_hidden_LatencyMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *PerformanceDataPoint) SetThroughputBytesPerSecond(v float64) {
	x.xxx_hidden_ThroughputBytesPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *PerformanceDataPoint) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *PerformanceDataPoint) HasOpsPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PerformanceDataPoint) HasLatencyMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PerformanceDataPoint) HasThroughputBytesPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PerformanceDataPoint) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *PerformanceDataPoint) ClearOpsPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OpsPerSecond = 0
}

func (x *PerformanceDataPoint) ClearLatencyMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_LatencyMs = 0
}

func (x *PerformanceDataPoint) ClearThroughputBytesPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ThroughputBytesPerSecond = 0
}

type PerformanceDataPoint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp                *timestamppb.Timestamp
	OpsPerSecond             *float64
	LatencyMs                *float64
	ThroughputBytesPerSecond *float64
}

func (b0 PerformanceDataPoint_builder) Build() *PerformanceDataPoint {
	m0 := &PerformanceDataPoint{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.OpsPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_OpsPerSecond = *b.OpsPerSecond
	}
	if b.LatencyMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_LatencyMs = *b.LatencyMs
	}
	if b.ThroughputBytesPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ThroughputBytesPerSecond = *b.ThroughputBytesPerSecond
	}
	return m0
}

// *
// ResourceUsageStats contains resource usage statistics.
type ResourceUsageStats struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Memory             *MemoryUsage           `protobuf:"bytes,1,opt,name=memory"`
	xxx_hidden_Cpu                *CPUUsage              `protobuf:"bytes,2,opt,name=cpu"`
	xxx_hidden_Disk               *DiskUsage             `protobuf:"bytes,3,opt,name=disk"`
	xxx_hidden_Network            *NetworkUsage          `protobuf:"bytes,4,opt,name=network"`
	xxx_hidden_ResourceTimeseries *[]*ResourceDataPoint  `protobuf:"bytes,5,rep,name=resource_timeseries,json=resourceTimeseries"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ResourceUsageStats) Reset() {
	*x = ResourceUsageStats{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsageStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsageStats) ProtoMessage() {}

func (x *ResourceUsageStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResourceUsageStats) GetMemory() *MemoryUsage {
	if x != nil {
		return x.xxx_hidden_Memory
	}
	return nil
}

func (x *ResourceUsageStats) GetCpu() *CPUUsage {
	if x != nil {
		return x.xxx_hidden_Cpu
	}
	return nil
}

func (x *ResourceUsageStats) GetDisk() *DiskUsage {
	if x != nil {
		return x.xxx_hidden_Disk
	}
	return nil
}

func (x *ResourceUsageStats) GetNetwork() *NetworkUsage {
	if x != nil {
		return x.xxx_hidden_Network
	}
	return nil
}

func (x *ResourceUsageStats) GetResourceTimeseries() []*ResourceDataPoint {
	if x != nil {
		if x.xxx_hidden_ResourceTimeseries != nil {
			return *x.xxx_hidden_ResourceTimeseries
		}
	}
	return nil
}

func (x *ResourceUsageStats) SetMemory(v *MemoryUsage) {
	x.xxx_hidden_Memory = v
}

func (x *ResourceUsageStats) SetCpu(v *CPUUsage) {
	x.xxx_hidden_Cpu = v
}

func (x *ResourceUsageStats) SetDisk(v *DiskUsage) {
	x.xxx_hidden_Disk = v
}

func (x *ResourceUsageStats) SetNetwork(v *NetworkUsage) {
	x.xxx_hidden_Network = v
}

func (x *ResourceUsageStats) SetResourceTimeseries(v []*ResourceDataPoint) {
	x.xxx_hidden_ResourceTimeseries = &v
}

func (x *ResourceUsageStats) HasMemory() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Memory != nil
}

func (x *ResourceUsageStats) HasCpu() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cpu != nil
}

func (x *ResourceUsageStats) HasDisk() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Disk != nil
}

func (x *ResourceUsageStats) HasNetwork() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Network != nil
}

func (x *ResourceUsageStats) ClearMemory() {
	x.xxx_hidden_Memory = nil
}

func (x *ResourceUsageStats) ClearCpu() {
	x.xxx_hidden_Cpu = nil
}

func (x *ResourceUsageStats) ClearDisk() {
	x.xxx_hidden_Disk = nil
}

func (x *ResourceUsageStats) ClearNetwork() {
	x.xxx_hidden_Network = nil
}

type ResourceUsageStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Current memory usage
	Memory *MemoryUsage
	// Current CPU usage
	Cpu *CPUUsage
	// Current disk usage
	Disk *DiskUsage
	// Network usage
	Network *NetworkUsage
	// Time-series resource usage data
	ResourceTimeseries []*ResourceDataPoint
}

func (b0 ResourceUsageStats_builder) Build() *ResourceUsageStats {
	m0 := &ResourceUsageStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Memory = b.Memory
	x.xxx_hidden_Cpu = b.Cpu
	x.xxx_hidden_Disk = b.Disk
	x.xxx_hidden_Network = b.Network
	x.xxx_hidden_ResourceTimeseries = &b.ResourceTimeseries
	return m0
}

// *
// MemoryUsage contains memory usage information.
type MemoryUsage struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UsedBytes    int64                  `protobuf:"varint,1,opt,name=used_bytes,json=usedBytes"`
	xxx_hidden_LimitBytes   int64                  `protobuf:"varint,2,opt,name=limit_bytes,json=limitBytes"`
	xxx_hidden_UsagePercent float64                `protobuf:"fixed64,3,opt,name=usage_percent,json=usagePercent"`
	xxx_hidden_PeakBytes    int64                  `protobuf:"varint,4,opt,name=peak_bytes,json=peakBytes"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *MemoryUsage) Reset() {
	*x = MemoryUsage{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUsage) ProtoMessage() {}

func (x *MemoryUsage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MemoryUsage) GetUsedBytes() int64 {
	if x != nil {
		return x.xxx_hidden_UsedBytes
	}
	return 0
}

func (x *MemoryUsage) GetLimitBytes() int64 {
	if x != nil {
		return x.xxx_hidden_LimitBytes
	}
	return 0
}

func (x *MemoryUsage) GetUsagePercent() float64 {
	if x != nil {
		return x.xxx_hidden_UsagePercent
	}
	return 0
}

func (x *MemoryUsage) GetPeakBytes() int64 {
	if x != nil {
		return x.xxx_hidden_PeakBytes
	}
	return 0
}

func (x *MemoryUsage) SetUsedBytes(v int64) {
	x.xxx_hidden_UsedBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *MemoryUsage) SetLimitBytes(v int64) {
	x.xxx_hidden_LimitBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *MemoryUsage) SetUsagePercent(v float64) {
	x.xxx_hidden_UsagePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *MemoryUsage) SetPeakBytes(v int64) {
	x.xxx_hidden_PeakBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *MemoryUsage) HasUsedBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MemoryUsage) HasLimitBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MemoryUsage) HasUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MemoryUsage) HasPeakBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MemoryUsage) ClearUsedBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UsedBytes = 0
}

func (x *MemoryUsage) ClearLimitBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_LimitBytes = 0
}

func (x *MemoryUsage) ClearUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UsagePercent = 0
}

func (x *MemoryUsage) ClearPeakBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_PeakBytes = 0
}

type MemoryUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Currently used memory (bytes)
	UsedBytes *int64
	// Memory limit (bytes)
	LimitBytes *int64
	// Usage percentage
	UsagePercent *float64
	// Peak memory usage (bytes)
	PeakBytes *int64
}

func (b0 MemoryUsage_builder) Build() *MemoryUsage {
	m0 := &MemoryUsage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UsedBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_UsedBytes = *b.UsedBytes
	}
	if b.LimitBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_LimitBytes = *b.LimitBytes
	}
	if b.UsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_UsagePercent = *b.UsagePercent
	}
	if b.PeakBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_PeakBytes = *b.PeakBytes
	}
	return m0
}

// *
// CPUUsage contains CPU usage information.
type CPUUsage struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CurrentPercent float64                `protobuf:"fixed64,1,opt,name=current_percent,json=currentPercent"`
	xxx_hidden_AvgPercent     float64                `protobuf:"fixed64,2,opt,name=avg_percent,json=avgPercent"`
	xxx_hidden_PeakPercent    float64                `protobuf:"fixed64,3,opt,name=peak_percent,json=peakPercent"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CPUUsage) Reset() {
	*x = CPUUsage{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUUsage) ProtoMessage() {}

func (x *CPUUsage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CPUUsage) GetCurrentPercent() float64 {
	if x != nil {
		return x.xxx_hidden_CurrentPercent
	}
	return 0
}

func (x *CPUUsage) GetAvgPercent() float64 {
	if x != nil {
		return x.xxx_hidden_AvgPercent
	}
	return 0
}

func (x *CPUUsage) GetPeakPercent() float64 {
	if x != nil {
		return x.xxx_hidden_PeakPercent
	}
	return 0
}

func (x *CPUUsage) SetCurrentPercent(v float64) {
	x.xxx_hidden_CurrentPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CPUUsage) SetAvgPercent(v float64) {
	x.xxx_hidden_AvgPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *CPUUsage) SetPeakPercent(v float64) {
	x.xxx_hidden_PeakPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *CPUUsage) HasCurrentPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CPUUsage) HasAvgPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CPUUsage) HasPeakPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CPUUsage) ClearCurrentPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CurrentPercent = 0
}

func (x *CPUUsage) ClearAvgPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AvgPercent = 0
}

func (x *CPUUsage) ClearPeakPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PeakPercent = 0
}

type CPUUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Current CPU usage (percentage)
	CurrentPercent *float64
	// Average CPU usage (percentage)
	AvgPercent *float64
	// Peak CPU usage (percentage)
	PeakPercent *float64
}

func (b0 CPUUsage_builder) Build() *CPUUsage {
	m0 := &CPUUsage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CurrentPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_CurrentPercent = *b.CurrentPercent
	}
	if b.AvgPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_AvgPercent = *b.AvgPercent
	}
	if b.PeakPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_PeakPercent = *b.PeakPercent
	}
	return m0
}

// *
// DiskUsage contains disk usage information.
type DiskUsage struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UsedBytes    int64                  `protobuf:"varint,1,opt,name=used_bytes,json=usedBytes"`
	xxx_hidden_LimitBytes   int64                  `protobuf:"varint,2,opt,name=limit_bytes,json=limitBytes"`
	xxx_hidden_UsagePercent float64                `protobuf:"fixed64,3,opt,name=usage_percent,json=usagePercent"`
	xxx_hidden_Iops         float64                `protobuf:"fixed64,4,opt,name=iops"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DiskUsage) Reset() {
	*x = DiskUsage{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskUsage) ProtoMessage() {}

func (x *DiskUsage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DiskUsage) GetUsedBytes() int64 {
	if x != nil {
		return x.xxx_hidden_UsedBytes
	}
	return 0
}

func (x *DiskUsage) GetLimitBytes() int64 {
	if x != nil {
		return x.xxx_hidden_LimitBytes
	}
	return 0
}

func (x *DiskUsage) GetUsagePercent() float64 {
	if x != nil {
		return x.xxx_hidden_UsagePercent
	}
	return 0
}

func (x *DiskUsage) GetIops() float64 {
	if x != nil {
		return x.xxx_hidden_Iops
	}
	return 0
}

func (x *DiskUsage) SetUsedBytes(v int64) {
	x.xxx_hidden_UsedBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DiskUsage) SetLimitBytes(v int64) {
	x.xxx_hidden_LimitBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DiskUsage) SetUsagePercent(v float64) {
	x.xxx_hidden_UsagePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DiskUsage) SetIops(v float64) {
	x.xxx_hidden_Iops = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DiskUsage) HasUsedBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DiskUsage) HasLimitBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DiskUsage) HasUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DiskUsage) HasIops() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DiskUsage) ClearUsedBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UsedBytes = 0
}

func (x *DiskUsage) ClearLimitBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_LimitBytes = 0
}

func (x *DiskUsage) ClearUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UsagePercent = 0
}

func (x *DiskUsage) ClearIops() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Iops = 0
}

type DiskUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Currently used disk space (bytes)
	UsedBytes *int64
	// Disk space limit (bytes)
	LimitBytes *int64
	// Usage percentage
	UsagePercent *float64
	// I/O operations per second
	Iops *float64
}

func (b0 DiskUsage_builder) Build() *DiskUsage {
	m0 := &DiskUsage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UsedBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_UsedBytes = *b.UsedBytes
	}
	if b.LimitBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_LimitBytes = *b.LimitBytes
	}
	if b.UsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_UsagePercent = *b.UsagePercent
	}
	if b.Iops != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Iops = *b.Iops
	}
	return m0
}

// *
// NetworkUsage contains network usage information.
type NetworkUsage struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BytesInPerSecond    int64                  `protobuf:"varint,1,opt,name=bytes_in_per_second,json=bytesInPerSecond"`
	xxx_hidden_BytesOutPerSecond   int64                  `protobuf:"varint,2,opt,name=bytes_out_per_second,json=bytesOutPerSecond"`
	xxx_hidden_PacketsInPerSecond  int64                  `protobuf:"varint,3,opt,name=packets_in_per_second,json=packetsInPerSecond"`
	xxx_hidden_PacketsOutPerSecond int64                  `protobuf:"varint,4,opt,name=packets_out_per_second,json=packetsOutPerSecond"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *NetworkUsage) Reset() {
	*x = NetworkUsage{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkUsage) ProtoMessage() {}

func (x *NetworkUsage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkUsage) GetBytesInPerSecond() int64 {
	if x != nil {
		return x.xxx_hidden_BytesInPerSecond
	}
	return 0
}

func (x *NetworkUsage) GetBytesOutPerSecond() int64 {
	if x != nil {
		return x.xxx_hidden_BytesOutPerSecond
	}
	return 0
}

func (x *NetworkUsage) GetPacketsInPerSecond() int64 {
	if x != nil {
		return x.xxx_hidden_PacketsInPerSecond
	}
	return 0
}

func (x *NetworkUsage) GetPacketsOutPerSecond() int64 {
	if x != nil {
		return x.xxx_hidden_PacketsOutPerSecond
	}
	return 0
}

func (x *NetworkUsage) SetBytesInPerSecond(v int64) {
	x.xxx_hidden_BytesInPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *NetworkUsage) SetBytesOutPerSecond(v int64) {
	x.xxx_hidden_BytesOutPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *NetworkUsage) SetPacketsInPerSecond(v int64) {
	x.xxx_hidden_PacketsInPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *NetworkUsage) SetPacketsOutPerSecond(v int64) {
	x.xxx_hidden_PacketsOutPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *NetworkUsage) HasBytesInPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkUsage) HasBytesOutPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkUsage) HasPacketsInPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NetworkUsage) HasPacketsOutPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *NetworkUsage) ClearBytesInPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BytesInPerSecond = 0
}

func (x *NetworkUsage) ClearBytesOutPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_BytesOutPerSecond = 0
}

func (x *NetworkUsage) ClearPacketsInPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PacketsInPerSecond = 0
}

func (x *NetworkUsage) ClearPacketsOutPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_PacketsOutPerSecond = 0
}

type NetworkUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Bytes received per second
	BytesInPerSecond *int64
	// Bytes sent per second
	BytesOutPerSecond *int64
	// Packets received per second
	PacketsInPerSecond *int64
	// Packets sent per second
	PacketsOutPerSecond *int64
}

func (b0 NetworkUsage_builder) Build() *NetworkUsage {
	m0 := &NetworkUsage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BytesInPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_BytesInPerSecond = *b.BytesInPerSecond
	}
	if b.BytesOutPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_BytesOutPerSecond = *b.BytesOutPerSecond
	}
	if b.PacketsInPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_PacketsInPerSecond = *b.PacketsInPerSecond
	}
	if b.PacketsOutPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_PacketsOutPerSecond = *b.PacketsOutPerSecond
	}
	return m0
}

// *
// ResourceDataPoint represents a single resource usage measurement.
type ResourceDataPoint struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp             *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_MemoryUsagePercent    float64                `protobuf:"fixed64,2,opt,name=memory_usage_percent,json=memoryUsagePercent"`
	xxx_hidden_CpuUsagePercent       float64                `protobuf:"fixed64,3,opt,name=cpu_usage_percent,json=cpuUsagePercent"`
	xxx_hidden_DiskUsagePercent      float64                `protobuf:"fixed64,4,opt,name=disk_usage_percent,json=diskUsagePercent"`
	xxx_hidden_NetworkBytesPerSecond int64                  `protobuf:"varint,5,opt,name=network_bytes_per_second,json=networkBytesPerSecond"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ResourceDataPoint) Reset() {
	*x = ResourceDataPoint{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDataPoint) ProtoMessage() {}

func (x *ResourceDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResourceDataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *ResourceDataPoint) GetMemoryUsagePercent() float64 {
	if x != nil {
		return x.xxx_hidden_MemoryUsagePercent
	}
	return 0
}

func (x *ResourceDataPoint) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.xxx_hidden_CpuUsagePercent
	}
	return 0
}

func (x *ResourceDataPoint) GetDiskUsagePercent() float64 {
	if x != nil {
		return x.xxx_hidden_DiskUsagePercent
	}
	return 0
}

func (x *ResourceDataPoint) GetNetworkBytesPerSecond() int64 {
	if x != nil {
		return x.xxx_hidden_NetworkBytesPerSecond
	}
	return 0
}

func (x *ResourceDataPoint) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *ResourceDataPoint) SetMemoryUsagePercent(v float64) {
	x.xxx_hidden_MemoryUsagePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ResourceDataPoint) SetCpuUsagePercent(v float64) {
	x.xxx_hidden_CpuUsagePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ResourceDataPoint) SetDiskUsagePercent(v float64) {
	x.xxx_hidden_DiskUsagePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ResourceDataPoint) SetNetworkBytesPerSecond(v int64) {
	x.xxx_hidden_NetworkBytesPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ResourceDataPoint) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *ResourceDataPoint) HasMemoryUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ResourceDataPoint) HasCpuUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ResourceDataPoint) HasDiskUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ResourceDataPoint) HasNetworkBytesPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ResourceDataPoint) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *ResourceDataPoint) ClearMemoryUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MemoryUsagePercent = 0
}

func (x *ResourceDataPoint) ClearCpuUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CpuUsagePercent = 0
}

func (x *ResourceDataPoint) ClearDiskUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DiskUsagePercent = 0
}

func (x *ResourceDataPoint) ClearNetworkBytesPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_NetworkBytesPerSecond = 0
}

type ResourceDataPoint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp             *timestamppb.Timestamp
	MemoryUsagePercent    *float64
	CpuUsagePercent       *float64
	DiskUsagePercent      *float64
	NetworkBytesPerSecond *int64
}

func (b0 ResourceDataPoint_builder) Build() *ResourceDataPoint {
	m0 := &ResourceDataPoint{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.MemoryUsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_MemoryUsagePercent = *b.MemoryUsagePercent
	}
	if b.CpuUsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_CpuUsagePercent = *b.CpuUsagePercent
	}
	if b.DiskUsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_DiskUsagePercent = *b.DiskUsagePercent
	}
	if b.NetworkBytesPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_NetworkBytesPerSecond = *b.NetworkBytesPerSecond
	}
	return m0
}

// *
// ErrorTypeStats contains statistics for a specific error type.
type ErrorTypeStats struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ErrorType   *string                `protobuf:"bytes,1,opt,name=error_type,json=errorType"`
	xxx_hidden_Count       int64                  `protobuf:"varint,2,opt,name=count"`
	xxx_hidden_Rate        float64                `protobuf:"fixed64,3,opt,name=rate"`
	xxx_hidden_Percentage  float64                `protobuf:"fixed64,4,opt,name=percentage"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ErrorTypeStats) Reset() {
	*x = ErrorTypeStats{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorTypeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeStats) ProtoMessage() {}

func (x *ErrorTypeStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorTypeStats) GetErrorType() string {
	if x != nil {
		if x.xxx_hidden_ErrorType != nil {
			return *x.xxx_hidden_ErrorType
		}
		return ""
	}
	return ""
}

func (x *ErrorTypeStats) GetCount() int64 {
	if x != nil {
		return x.xxx_hidden_Count
	}
	return 0
}

func (x *ErrorTypeStats) GetRate() float64 {
	if x != nil {
		return x.xxx_hidden_Rate
	}
	return 0
}

func (x *ErrorTypeStats) GetPercentage() float64 {
	if x != nil {
		return x.xxx_hidden_Percentage
	}
	return 0
}

func (x *ErrorTypeStats) SetErrorType(v string) {
	x.xxx_hidden_ErrorType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ErrorTypeStats) SetCount(v int64) {
	x.xxx_hidden_Count = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ErrorTypeStats) SetRate(v float64) {
	x.xxx_hidden_Rate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ErrorTypeStats) SetPercentage(v float64) {
	x.xxx_hidden_Percentage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ErrorTypeStats) HasErrorType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ErrorTypeStats) HasCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ErrorTypeStats) HasRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ErrorTypeStats) HasPercentage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ErrorTypeStats) ClearErrorType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ErrorType = nil
}

func (x *ErrorTypeStats) ClearCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Count = 0
}

func (x *ErrorTypeStats) ClearRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Rate = 0
}

func (x *ErrorTypeStats) ClearPercentage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Percentage = 0
}

type ErrorTypeStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ErrorType  *string
	Count      *int64
	Rate       *float64
	Percentage *float64
}

func (b0 ErrorTypeStats_builder) Build() *ErrorTypeStats {
	m0 := &ErrorTypeStats{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ErrorType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ErrorType = b.ErrorType
	}
	if b.Count != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Count = *b.Count
	}
	if b.Rate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Rate = *b.Rate
	}
	if b.Percentage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Percentage = *b.Percentage
	}
	return m0
}

// *
// ErrorEntry represents a single error occurrence.
type ErrorEntry struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_ErrorType    *string                `protobuf:"bytes,2,opt,name=error_type,json=errorType"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,3,opt,name=error_message,json=errorMessage"`
	xxx_hidden_Count        int32                  `protobuf:"varint,4,opt,name=count"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ErrorEntry) Reset() {
	*x = ErrorEntry{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorEntry) ProtoMessage() {}

func (x *ErrorEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *ErrorEntry) GetErrorType() string {
	if x != nil {
		if x.xxx_hidden_ErrorType != nil {
			return *x.xxx_hidden_ErrorType
		}
		return ""
	}
	return ""
}

func (x *ErrorEntry) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *ErrorEntry) GetCount() int32 {
	if x != nil {
		return x.xxx_hidden_Count
	}
	return 0
}

func (x *ErrorEntry) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *ErrorEntry) SetErrorType(v string) {
	x.xxx_hidden_ErrorType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ErrorEntry) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ErrorEntry) SetCount(v int32) {
	x.xxx_hidden_Count = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ErrorEntry) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *ErrorEntry) HasErrorType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ErrorEntry) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ErrorEntry) HasCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ErrorEntry) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *ErrorEntry) ClearErrorType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ErrorType = nil
}

func (x *ErrorEntry) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ErrorMessage = nil
}

func (x *ErrorEntry) ClearCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Count = 0
}

type ErrorEntry_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp    *timestamppb.Timestamp
	ErrorType    *string
	ErrorMessage *string
	Count        *int32
}

func (b0 ErrorEntry_builder) Build() *ErrorEntry {
	m0 := &ErrorEntry{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.ErrorType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ErrorType = b.ErrorType
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	if b.Count != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Count = *b.Count
	}
	return m0
}

// *
// ErrorDataPoint represents error statistics at a point in time.
type ErrorDataPoint struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_ErrorCount  int64                  `protobuf:"varint,2,opt,name=error_count,json=errorCount"`
	xxx_hidden_ErrorRate   float64                `protobuf:"fixed64,3,opt,name=error_rate,json=errorRate"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ErrorDataPoint) Reset() {
	*x = ErrorDataPoint{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDataPoint) ProtoMessage() {}

func (x *ErrorDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorDataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *ErrorDataPoint) GetErrorCount() int64 {
	if x != nil {
		return x.xxx_hidden_ErrorCount
	}
	return 0
}

func (x *ErrorDataPoint) GetErrorRate() float64 {
	if x != nil {
		return x.xxx_hidden_ErrorRate
	}
	return 0
}

func (x *ErrorDataPoint) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *ErrorDataPoint) SetErrorCount(v int64) {
	x.xxx_hidden_ErrorCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ErrorDataPoint) SetErrorRate(v float64) {
	x.xxx_hidden_ErrorRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ErrorDataPoint) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *ErrorDataPoint) HasErrorCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ErrorDataPoint) HasErrorRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ErrorDataPoint) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *ErrorDataPoint) ClearErrorCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ErrorCount = 0
}

func (x *ErrorDataPoint) ClearErrorRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ErrorRate = 0
}

type ErrorDataPoint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp  *timestamppb.Timestamp
	ErrorCount *int64
	ErrorRate  *float64
}

func (b0 ErrorDataPoint_builder) Build() *ErrorDataPoint {
	m0 := &ErrorDataPoint{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.ErrorCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ErrorCount = *b.ErrorCount
	}
	if b.ErrorRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_ErrorRate = *b.ErrorRate
	}
	return m0
}

// *
// DataVolumeStats contains data volume statistics.
type DataVolumeStats struct {
	state                                   protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_TotalBytes                   int64                   `protobuf:"varint,1,opt,name=total_bytes,json=totalBytes"`
	xxx_hidden_TotalMetrics                 int64                   `protobuf:"varint,2,opt,name=total_metrics,json=totalMetrics"`
	xxx_hidden_TotalDataPoints              int64                   `protobuf:"varint,3,opt,name=total_data_points,json=totalDataPoints"`
	xxx_hidden_IngestionRateBytesPerSecond  float64                 `protobuf:"fixed64,4,opt,name=ingestion_rate_bytes_per_second,json=ingestionRateBytesPerSecond"`
	xxx_hidden_IngestionRatePointsPerSecond float64                 `protobuf:"fixed64,5,opt,name=ingestion_rate_points_per_second,json=ingestionRatePointsPerSecond"`
	xxx_hidden_CompressionRatio             float64                 `protobuf:"fixed64,6,opt,name=compression_ratio,json=compressionRatio"`
	xxx_hidden_VolumeTimeseries             *[]*DataVolumeDataPoint `protobuf:"bytes,7,rep,name=volume_timeseries,json=volumeTimeseries"`
	XXX_raceDetectHookData                  protoimpl.RaceDetectHookData
	XXX_presence                            [1]uint32
	unknownFields                           protoimpl.UnknownFields
	sizeCache                               protoimpl.SizeCache
}

func (x *DataVolumeStats) Reset() {
	*x = DataVolumeStats{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataVolumeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVolumeStats) ProtoMessage() {}

func (x *DataVolumeStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataVolumeStats) GetTotalBytes() int64 {
	if x != nil {
		return x.xxx_hidden_TotalBytes
	}
	return 0
}

func (x *DataVolumeStats) GetTotalMetrics() int64 {
	if x != nil {
		return x.xxx_hidden_TotalMetrics
	}
	return 0
}

func (x *DataVolumeStats) GetTotalDataPoints() int64 {
	if x != nil {
		return x.xxx_hidden_TotalDataPoints
	}
	return 0
}

func (x *DataVolumeStats) GetIngestionRateBytesPerSecond() float64 {
	if x != nil {
		return x.xxx_hidden_IngestionRateBytesPerSecond
	}
	return 0
}

func (x *DataVolumeStats) GetIngestionRatePointsPerSecond() float64 {
	if x != nil {
		return x.xxx_hidden_IngestionRatePointsPerSecond
	}
	return 0
}

func (x *DataVolumeStats) GetCompressionRatio() float64 {
	if x != nil {
		return x.xxx_hidden_CompressionRatio
	}
	return 0
}

func (x *DataVolumeStats) GetVolumeTimeseries() []*DataVolumeDataPoint {
	if x != nil {
		if x.xxx_hidden_VolumeTimeseries != nil {
			return *x.xxx_hidden_VolumeTimeseries
		}
	}
	return nil
}

func (x *DataVolumeStats) SetTotalBytes(v int64) {
	x.xxx_hidden_TotalBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *DataVolumeStats) SetTotalMetrics(v int64) {
	x.xxx_hidden_TotalMetrics = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *DataVolumeStats) SetTotalDataPoints(v int64) {
	x.xxx_hidden_TotalDataPoints = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *DataVolumeStats) SetIngestionRateBytesPerSecond(v float64) {
	x.xxx_hidden_IngestionRateBytesPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *DataVolumeStats) SetIngestionRatePointsPerSecond(v float64) {
	x.xxx_hidden_IngestionRatePointsPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *DataVolumeStats) SetCompressionRatio(v float64) {
	x.xxx_hidden_CompressionRatio = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *DataVolumeStats) SetVolumeTimeseries(v []*DataVolumeDataPoint) {
	x.xxx_hidden_VolumeTimeseries = &v
}

func (x *DataVolumeStats) HasTotalBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DataVolumeStats) HasTotalMetrics() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DataVolumeStats) HasTotalDataPoints() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DataVolumeStats) HasIngestionRateBytesPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DataVolumeStats) HasIngestionRatePointsPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DataVolumeStats) HasCompressionRatio() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DataVolumeStats) ClearTotalBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TotalBytes = 0
}

func (x *DataVolumeStats) ClearTotalMetrics() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalMetrics = 0
}

func (x *DataVolumeStats) ClearTotalDataPoints() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalDataPoints = 0
}

func (x *DataVolumeStats) ClearIngestionRateBytesPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_IngestionRateBytesPerSecond = 0
}

func (x *DataVolumeStats) ClearIngestionRatePointsPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_IngestionRatePointsPerSecond = 0
}

func (x *DataVolumeStats) ClearCompressionRatio() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_CompressionRatio = 0
}

type DataVolumeStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total data stored (bytes)
	TotalBytes *int64
	// Total number of metrics
	TotalMetrics *int64
	// Total number of data points
	TotalDataPoints *int64
	// Data ingestion rate (bytes per second)
	IngestionRateBytesPerSecond *float64
	// Data points ingestion rate (points per second)
	IngestionRatePointsPerSecond *float64
	// Compression ratio
	CompressionRatio *float64
	// Time-series data volume
	VolumeTimeseries []*DataVolumeDataPoint
}

func (b0 DataVolumeStats_builder) Build() *DataVolumeStats {
	m0 := &DataVolumeStats{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TotalBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_TotalBytes = *b.TotalBytes
	}
	if b.TotalMetrics != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_TotalMetrics = *b.TotalMetrics
	}
	if b.TotalDataPoints != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_TotalDataPoints = *b.TotalDataPoints
	}
	if b.IngestionRateBytesPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_IngestionRateBytesPerSecond = *b.IngestionRateBytesPerSecond
	}
	if b.IngestionRatePointsPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_IngestionRatePointsPerSecond = *b.IngestionRatePointsPerSecond
	}
	if b.CompressionRatio != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_CompressionRatio = *b.CompressionRatio
	}
	x.xxx_hidden_VolumeTimeseries = &b.VolumeTimeseries
	return m0
}

// *
// DataVolumeDataPoint represents data volume at a point in time.
type DataVolumeDataPoint struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp       *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_TotalBytes      int64                  `protobuf:"varint,2,opt,name=total_bytes,json=totalBytes"`
	xxx_hidden_TotalMetrics    int64                  `protobuf:"varint,3,opt,name=total_metrics,json=totalMetrics"`
	xxx_hidden_TotalDataPoints int64                  `protobuf:"varint,4,opt,name=total_data_points,json=totalDataPoints"`
	xxx_hidden_IngestionRate   float64                `protobuf:"fixed64,5,opt,name=ingestion_rate,json=ingestionRate"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *DataVolumeDataPoint) Reset() {
	*x = DataVolumeDataPoint{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataVolumeDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVolumeDataPoint) ProtoMessage() {}

func (x *DataVolumeDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataVolumeDataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *DataVolumeDataPoint) GetTotalBytes() int64 {
	if x != nil {
		return x.xxx_hidden_TotalBytes
	}
	return 0
}

func (x *DataVolumeDataPoint) GetTotalMetrics() int64 {
	if x != nil {
		return x.xxx_hidden_TotalMetrics
	}
	return 0
}

func (x *DataVolumeDataPoint) GetTotalDataPoints() int64 {
	if x != nil {
		return x.xxx_hidden_TotalDataPoints
	}
	return 0
}

func (x *DataVolumeDataPoint) GetIngestionRate() float64 {
	if x != nil {
		return x.xxx_hidden_IngestionRate
	}
	return 0
}

func (x *DataVolumeDataPoint) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *DataVolumeDataPoint) SetTotalBytes(v int64) {
	x.xxx_hidden_TotalBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *DataVolumeDataPoint) SetTotalMetrics(v int64) {
	x.xxx_hidden_TotalMetrics = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *DataVolumeDataPoint) SetTotalDataPoints(v int64) {
	x.xxx_hidden_TotalDataPoints = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *DataVolumeDataPoint) SetIngestionRate(v float64) {
	x.xxx_hidden_IngestionRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *DataVolumeDataPoint) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *DataVolumeDataPoint) HasTotalBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DataVolumeDataPoint) HasTotalMetrics() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DataVolumeDataPoint) HasTotalDataPoints() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DataVolumeDataPoint) HasIngestionRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DataVolumeDataPoint) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *DataVolumeDataPoint) ClearTotalBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalBytes = 0
}

func (x *DataVolumeDataPoint) ClearTotalMetrics() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalMetrics = 0
}

func (x *DataVolumeDataPoint) ClearTotalDataPoints() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TotalDataPoints = 0
}

func (x *DataVolumeDataPoint) ClearIngestionRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_IngestionRate = 0
}

type DataVolumeDataPoint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp       *timestamppb.Timestamp
	TotalBytes      *int64
	TotalMetrics    *int64
	TotalDataPoints *int64
	IngestionRate   *float64
}

func (b0 DataVolumeDataPoint_builder) Build() *DataVolumeDataPoint {
	m0 := &DataVolumeDataPoint{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.TotalBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_TotalBytes = *b.TotalBytes
	}
	if b.TotalMetrics != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_TotalMetrics = *b.TotalMetrics
	}
	if b.TotalDataPoints != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_TotalDataPoints = *b.TotalDataPoints
	}
	if b.IngestionRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_IngestionRate = *b.IngestionRate
	}
	return m0
}

// *
// ExportStats contains export-related statistics.
type ExportStats struct {
	state                                 protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_TotalExportedMetrics       int64                      `protobuf:"varint,1,opt,name=total_exported_metrics,json=totalExportedMetrics"`
	xxx_hidden_TotalExportedDataPoints    int64                      `protobuf:"varint,2,opt,name=total_exported_data_points,json=totalExportedDataPoints"`
	xxx_hidden_ExportRateMetricsPerSecond float64                    `protobuf:"fixed64,3,opt,name=export_rate_metrics_per_second,json=exportRateMetricsPerSecond"`
	xxx_hidden_FailedExports              int64                      `protobuf:"varint,4,opt,name=failed_exports,json=failedExports"`
	xxx_hidden_ExportSuccessRate          float64                    `protobuf:"fixed64,5,opt,name=export_success_rate,json=exportSuccessRate"`
	xxx_hidden_ExportDestinations         *[]*ExportDestinationStats `protobuf:"bytes,6,rep,name=export_destinations,json=exportDestinations"`
	xxx_hidden_LastSuccessfulExport       *timestamppb.Timestamp     `protobuf:"bytes,7,opt,name=last_successful_export,json=lastSuccessfulExport"`
	XXX_raceDetectHookData                protoimpl.RaceDetectHookData
	XXX_presence                          [1]uint32
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *ExportStats) Reset() {
	*x = ExportStats{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportStats) ProtoMessage() {}

func (x *ExportStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExportStats) GetTotalExportedMetrics() int64 {
	if x != nil {
		return x.xxx_hidden_TotalExportedMetrics
	}
	return 0
}

func (x *ExportStats) GetTotalExportedDataPoints() int64 {
	if x != nil {
		return x.xxx_hidden_TotalExportedDataPoints
	}
	return 0
}

func (x *ExportStats) GetExportRateMetricsPerSecond() float64 {
	if x != nil {
		return x.xxx_hidden_ExportRateMetricsPerSecond
	}
	return 0
}

func (x *ExportStats) GetFailedExports() int64 {
	if x != nil {
		return x.xxx_hidden_FailedExports
	}
	return 0
}

func (x *ExportStats) GetExportSuccessRate() float64 {
	if x != nil {
		return x.xxx_hidden_ExportSuccessRate
	}
	return 0
}

func (x *ExportStats) GetExportDestinations() []*ExportDestinationStats {
	if x != nil {
		if x.xxx_hidden_ExportDestinations != nil {
			return *x.xxx_hidden_ExportDestinations
		}
	}
	return nil
}

func (x *ExportStats) GetLastSuccessfulExport() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastSuccessfulExport
	}
	return nil
}

func (x *ExportStats) SetTotalExportedMetrics(v int64) {
	x.xxx_hidden_TotalExportedMetrics = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *ExportStats) SetTotalExportedDataPoints(v int64) {
	x.xxx_hidden_TotalExportedDataPoints = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *ExportStats) SetExportRateMetricsPerSecond(v float64) {
	x.xxx_hidden_ExportRateMetricsPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *ExportStats) SetFailedExports(v int64) {
	x.xxx_hidden_FailedExports = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *ExportStats) SetExportSuccessRate(v float64) {
	x.xxx_hidden_ExportSuccessRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *ExportStats) SetExportDestinations(v []*ExportDestinationStats) {
	x.xxx_hidden_ExportDestinations = &v
}

func (x *ExportStats) SetLastSuccessfulExport(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastSuccessfulExport = v
}

func (x *ExportStats) HasTotalExportedMetrics() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExportStats) HasTotalExportedDataPoints() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExportStats) HasExportRateMetricsPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExportStats) HasFailedExports() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ExportStats) HasExportSuccessRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ExportStats) HasLastSuccessfulExport() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastSuccessfulExport != nil
}

func (x *ExportStats) ClearTotalExportedMetrics() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TotalExportedMetrics = 0
}

func (x *ExportStats) ClearTotalExportedDataPoints() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalExportedDataPoints = 0
}

func (x *ExportStats) ClearExportRateMetricsPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ExportRateMetricsPerSecond = 0
}

func (x *ExportStats) ClearFailedExports() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_FailedExports = 0
}

func (x *ExportStats) ClearExportSuccessRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ExportSuccessRate = 0
}

func (x *ExportStats) ClearLastSuccessfulExport() {
	x.xxx_hidden_LastSuccessfulExport = nil
}

type ExportStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total exported metrics
	TotalExportedMetrics *int64
	// Total exported data points
	TotalExportedDataPoints *int64
	// Export rate (metrics per second)
	ExportRateMetricsPerSecond *float64
	// Failed exports
	FailedExports *int64
	// Export success rate
	ExportSuccessRate *float64
	// Exports by destination
	ExportDestinations []*ExportDestinationStats
	// Last successful export
	LastSuccessfulExport *timestamppb.Timestamp
}

func (b0 ExportStats_builder) Build() *ExportStats {
	m0 := &ExportStats{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TotalExportedMetrics != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_TotalExportedMetrics = *b.TotalExportedMetrics
	}
	if b.TotalExportedDataPoints != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_TotalExportedDataPoints = *b.TotalExportedDataPoints
	}
	if b.ExportRateMetricsPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_ExportRateMetricsPerSecond = *b.ExportRateMetricsPerSecond
	}
	if b.FailedExports != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_FailedExports = *b.FailedExports
	}
	if b.ExportSuccessRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_ExportSuccessRate = *b.ExportSuccessRate
	}
	x.xxx_hidden_ExportDestinations = &b.ExportDestinations
	x.xxx_hidden_LastSuccessfulExport = b.LastSuccessfulExport
	return m0
}

// *
// ExportDestinationStats contains statistics for a specific export destination.
type ExportDestinationStats struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DestinationId   *string                `protobuf:"bytes,1,opt,name=destination_id,json=destinationId"`
	xxx_hidden_DestinationType *string                `protobuf:"bytes,2,opt,name=destination_type,json=destinationType"`
	xxx_hidden_ExportedMetrics int64                  `protobuf:"varint,3,opt,name=exported_metrics,json=exportedMetrics"`
	xxx_hidden_FailedExports   int64                  `protobuf:"varint,4,opt,name=failed_exports,json=failedExports"`
	xxx_hidden_SuccessRate     float64                `protobuf:"fixed64,5,opt,name=success_rate,json=successRate"`
	xxx_hidden_LastExport      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_export,json=lastExport"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ExportDestinationStats) Reset() {
	*x = ExportDestinationStats{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportDestinationStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportDestinationStats) ProtoMessage() {}

func (x *ExportDestinationStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExportDestinationStats) GetDestinationId() string {
	if x != nil {
		if x.xxx_hidden_DestinationId != nil {
			return *x.xxx_hidden_DestinationId
		}
		return ""
	}
	return ""
}

func (x *ExportDestinationStats) GetDestinationType() string {
	if x != nil {
		if x.xxx_hidden_DestinationType != nil {
			return *x.xxx_hidden_DestinationType
		}
		return ""
	}
	return ""
}

func (x *ExportDestinationStats) GetExportedMetrics() int64 {
	if x != nil {
		return x.xxx_hidden_ExportedMetrics
	}
	return 0
}

func (x *ExportDestinationStats) GetFailedExports() int64 {
	if x != nil {
		return x.xxx_hidden_FailedExports
	}
	return 0
}

func (x *ExportDestinationStats) GetSuccessRate() float64 {
	if x != nil {
		return x.xxx_hidden_SuccessRate
	}
	return 0
}

func (x *ExportDestinationStats) GetLastExport() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastExport
	}
	return nil
}

func (x *ExportDestinationStats) SetDestinationId(v string) {
	x.xxx_hidden_DestinationId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *ExportDestinationStats) SetDestinationType(v string) {
	x.xxx_hidden_DestinationType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *ExportDestinationStats) SetExportedMetrics(v int64) {
	x.xxx_hidden_ExportedMetrics = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *ExportDestinationStats) SetFailedExports(v int64) {
	x.xxx_hidden_FailedExports = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *ExportDestinationStats) SetSuccessRate(v float64) {
	x.xxx_hidden_SuccessRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *ExportDestinationStats) SetLastExport(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastExport = v
}

func (x *ExportDestinationStats) HasDestinationId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExportDestinationStats) HasDestinationType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExportDestinationStats) HasExportedMetrics() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExportDestinationStats) HasFailedExports() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ExportDestinationStats) HasSuccessRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ExportDestinationStats) HasLastExport() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastExport != nil
}

func (x *ExportDestinationStats) ClearDestinationId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DestinationId = nil
}

func (x *ExportDestinationStats) ClearDestinationType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DestinationType = nil
}

func (x *ExportDestinationStats) ClearExportedMetrics() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ExportedMetrics = 0
}

func (x *ExportDestinationStats) ClearFailedExports() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_FailedExports = 0
}

func (x *ExportDestinationStats) ClearSuccessRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_SuccessRate = 0
}

func (x *ExportDestinationStats) ClearLastExport() {
	x.xxx_hidden_LastExport = nil
}

type ExportDestinationStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DestinationId   *string
	DestinationType *string
	ExportedMetrics *int64
	FailedExports   *int64
	SuccessRate     *float64
	LastExport      *timestamppb.Timestamp
}

func (b0 ExportDestinationStats_builder) Build() *ExportDestinationStats {
	m0 := &ExportDestinationStats{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DestinationId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_DestinationId = b.DestinationId
	}
	if b.DestinationType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_DestinationType = b.DestinationType
	}
	if b.ExportedMetrics != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_ExportedMetrics = *b.ExportedMetrics
	}
	if b.FailedExports != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_FailedExports = *b.FailedExports
	}
	if b.SuccessRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_SuccessRate = *b.SuccessRate
	}
	x.xxx_hidden_LastExport = b.LastExport
	return m0
}

// *
// HealthStatusEntry represents a health status at a point in time.
type HealthStatusEntry struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_HealthStatus  *string                `protobuf:"bytes,2,opt,name=health_status,json=healthStatus"`
	xxx_hidden_StatusMessage *string                `protobuf:"bytes,3,opt,name=status_message,json=statusMessage"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *HealthStatusEntry) Reset() {
	*x = HealthStatusEntry{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthStatusEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatusEntry) ProtoMessage() {}

func (x *HealthStatusEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HealthStatusEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *HealthStatusEntry) GetHealthStatus() string {
	if x != nil {
		if x.xxx_hidden_HealthStatus != nil {
			return *x.xxx_hidden_HealthStatus
		}
		return ""
	}
	return ""
}

func (x *HealthStatusEntry) GetStatusMessage() string {
	if x != nil {
		if x.xxx_hidden_StatusMessage != nil {
			return *x.xxx_hidden_StatusMessage
		}
		return ""
	}
	return ""
}

func (x *HealthStatusEntry) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *HealthStatusEntry) SetHealthStatus(v string) {
	x.xxx_hidden_HealthStatus = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *HealthStatusEntry) SetStatusMessage(v string) {
	x.xxx_hidden_StatusMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *HealthStatusEntry) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *HealthStatusEntry) HasHealthStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *HealthStatusEntry) HasStatusMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *HealthStatusEntry) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *HealthStatusEntry) ClearHealthStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_HealthStatus = nil
}

func (x *HealthStatusEntry) ClearStatusMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_StatusMessage = nil
}

type HealthStatusEntry_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp     *timestamppb.Timestamp
	HealthStatus  *string
	StatusMessage *string
}

func (b0 HealthStatusEntry_builder) Build() *HealthStatusEntry {
	m0 := &HealthStatusEntry{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.HealthStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_HealthStatus = b.HealthStatus
	}
	if b.StatusMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_StatusMessage = b.StatusMessage
	}
	return m0
}

// *
// ConfigurationSummary contains a summary of the provider configuration.
type ConfigurationSummary struct {
	state                     protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_ExporterCount  int32                        `protobuf:"varint,1,opt,name=exporter_count,json=exporterCount"`
	xxx_hidden_Security       *SecuritySummary             `protobuf:"bytes,2,opt,name=security"`
	xxx_hidden_ResourceLimits *types.ResourceLimitsSummary `protobuf:"bytes,3,opt,name=resource_limits,json=resourceLimits"`
	xxx_hidden_ConfigVersion  *string                      `protobuf:"bytes,4,opt,name=config_version,json=configVersion"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ConfigurationSummary) Reset() {
	*x = ConfigurationSummary{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationSummary) ProtoMessage() {}

func (x *ConfigurationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConfigurationSummary) GetExporterCount() int32 {
	if x != nil {
		return x.xxx_hidden_ExporterCount
	}
	return 0
}

func (x *ConfigurationSummary) GetSecurity() *SecuritySummary {
	if x != nil {
		return x.xxx_hidden_Security
	}
	return nil
}

func (x *ConfigurationSummary) GetResourceLimits() *types.ResourceLimitsSummary {
	if x != nil {
		return x.xxx_hidden_ResourceLimits
	}
	return nil
}

func (x *ConfigurationSummary) GetConfigVersion() string {
	if x != nil {
		if x.xxx_hidden_ConfigVersion != nil {
			return *x.xxx_hidden_ConfigVersion
		}
		return ""
	}
	return ""
}

func (x *ConfigurationSummary) SetExporterCount(v int32) {
	x.xxx_hidden_ExporterCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ConfigurationSummary) SetSecurity(v *SecuritySummary) {
	x.xxx_hidden_Security = v
}

func (x *ConfigurationSummary) SetResourceLimits(v *types.ResourceLimitsSummary) {
	x.xxx_hidden_ResourceLimits = v
}

func (x *ConfigurationSummary) SetConfigVersion(v string) {
	x.xxx_hidden_ConfigVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ConfigurationSummary) HasExporterCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConfigurationSummary) HasSecurity() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Security != nil
}

func (x *ConfigurationSummary) HasResourceLimits() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ResourceLimits != nil
}

func (x *ConfigurationSummary) HasConfigVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ConfigurationSummary) ClearExporterCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ExporterCount = 0
}

func (x *ConfigurationSummary) ClearSecurity() {
	x.xxx_hidden_Security = nil
}

func (x *ConfigurationSummary) ClearResourceLimits() {
	x.xxx_hidden_ResourceLimits = nil
}

func (x *ConfigurationSummary) ClearConfigVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ConfigVersion = nil
}

type ConfigurationSummary_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Number of configured exporters
	ExporterCount *int32
	// Security settings summary
	Security *SecuritySummary
	// Resource limits summary
	ResourceLimits *types.ResourceLimitsSummary
	// Configuration version
	ConfigVersion *string
}

func (b0 ConfigurationSummary_builder) Build() *ConfigurationSummary {
	m0 := &ConfigurationSummary{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ExporterCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ExporterCount = *b.ExporterCount
	}
	x.xxx_hidden_Security = b.Security
	x.xxx_hidden_ResourceLimits = b.ResourceLimits
	if b.ConfigVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ConfigVersion = b.ConfigVersion
	}
	return m0
}

// *
// SecuritySummary contains security configuration summary.
type SecuritySummary struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AuthEnabled bool                   `protobuf:"varint,1,opt,name=auth_enabled,json=authEnabled"`
	xxx_hidden_TlsEnabled  bool                   `protobuf:"varint,2,opt,name=tls_enabled,json=tlsEnabled"`
	xxx_hidden_AuthMethods []string               `protobuf:"bytes,3,rep,name=auth_methods,json=authMethods"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SecuritySummary) Reset() {
	*x = SecuritySummary{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecuritySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecuritySummary) ProtoMessage() {}

func (x *SecuritySummary) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SecuritySummary) GetAuthEnabled() bool {
	if x != nil {
		return x.xxx_hidden_AuthEnabled
	}
	return false
}

func (x *SecuritySummary) GetTlsEnabled() bool {
	if x != nil {
		return x.xxx_hidden_TlsEnabled
	}
	return false
}

func (x *SecuritySummary) GetAuthMethods() []string {
	if x != nil {
		return x.xxx_hidden_AuthMethods
	}
	return nil
}

func (x *SecuritySummary) SetAuthEnabled(v bool) {
	x.xxx_hidden_AuthEnabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *SecuritySummary) SetTlsEnabled(v bool) {
	x.xxx_hidden_TlsEnabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *SecuritySummary) SetAuthMethods(v []string) {
	x.xxx_hidden_AuthMethods = v
}

func (x *SecuritySummary) HasAuthEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SecuritySummary) HasTlsEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SecuritySummary) ClearAuthEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_AuthEnabled = false
}

func (x *SecuritySummary) ClearTlsEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TlsEnabled = false
}

type SecuritySummary_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AuthEnabled *bool
	TlsEnabled  *bool
	AuthMethods []string
}

func (b0 SecuritySummary_builder) Build() *SecuritySummary {
	m0 := &SecuritySummary{}
	b, x := &b0, m0
	_, _ = b, x
	if b.AuthEnabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_AuthEnabled = *b.AuthEnabled
	}
	if b.TlsEnabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_TlsEnabled = *b.TlsEnabled
	}
	x.xxx_hidden_AuthMethods = b.AuthMethods
	return m0
}

// *
// MetricSummary contains summary information about a metric.
type MetricSummary struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name            *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type            *string                `protobuf:"bytes,2,opt,name=type"`
	xxx_hidden_DataPoints      int64                  `protobuf:"varint,3,opt,name=data_points,json=dataPoints"`
	xxx_hidden_DataVolumeBytes int64                  `protobuf:"varint,4,opt,name=data_volume_bytes,json=dataVolumeBytes"`
	xxx_hidden_ErrorRate       float64                `protobuf:"fixed64,5,opt,name=error_rate,json=errorRate"`
	xxx_hidden_LastUpdated     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *MetricSummary) Reset() {
	*x = MetricSummary{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricSummary) ProtoMessage() {}

func (x *MetricSummary) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MetricSummary) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *MetricSummary) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *MetricSummary) GetDataPoints() int64 {
	if x != nil {
		return x.xxx_hidden_DataPoints
	}
	return 0
}

func (x *MetricSummary) GetDataVolumeBytes() int64 {
	if x != nil {
		return x.xxx_hidden_DataVolumeBytes
	}
	return 0
}

func (x *MetricSummary) GetErrorRate() float64 {
	if x != nil {
		return x.xxx_hidden_ErrorRate
	}
	return 0
}

func (x *MetricSummary) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastUpdated
	}
	return nil
}

func (x *MetricSummary) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *MetricSummary) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *MetricSummary) SetDataPoints(v int64) {
	x.xxx_hidden_DataPoints = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *MetricSummary) SetDataVolumeBytes(v int64) {
	x.xxx_hidden_DataVolumeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *MetricSummary) SetErrorRate(v float64) {
	x.xxx_hidden_ErrorRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *MetricSummary) SetLastUpdated(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastUpdated = v
}

func (x *MetricSummary) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MetricSummary) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MetricSummary) HasDataPoints() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MetricSummary) HasDataVolumeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MetricSummary) HasErrorRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *MetricSummary) HasLastUpdated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastUpdated != nil
}

func (x *MetricSummary) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *MetricSummary) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

func (x *MetricSummary) ClearDataPoints() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DataPoints = 0
}

func (x *MetricSummary) ClearDataVolumeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DataVolumeBytes = 0
}

func (x *MetricSummary) ClearErrorRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ErrorRate = 0
}

func (x *MetricSummary) ClearLastUpdated() {
	x.xxx_hidden_LastUpdated = nil
}

type MetricSummary_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name            *string
	Type            *string
	DataPoints      *int64
	DataVolumeBytes *int64
	ErrorRate       *float64
	LastUpdated     *timestamppb.Timestamp
}

func (b0 MetricSummary_builder) Build() *MetricSummary {
	m0 := &MetricSummary{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Type = b.Type
	}
	if b.DataPoints != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_DataPoints = *b.DataPoints
	}
	if b.DataVolumeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_DataVolumeBytes = *b.DataVolumeBytes
	}
	if b.ErrorRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_ErrorRate = *b.ErrorRate
	}
	x.xxx_hidden_LastUpdated = b.LastUpdated
	return m0
}

// *
// TrendAnalysis contains trend analysis for the provider.
type TrendAnalysis struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Performance   *PerformanceTrend      `protobuf:"bytes,1,opt,name=performance"`
	xxx_hidden_ResourceUsage *ResourceUsageTrend    `protobuf:"bytes,2,opt,name=resource_usage,json=resourceUsage"`
	xxx_hidden_Errors        *ErrorTrend            `protobuf:"bytes,3,opt,name=errors"`
	xxx_hidden_DataVolume    *DataVolumeTrend       `protobuf:"bytes,4,opt,name=data_volume,json=dataVolume"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *TrendAnalysis) Reset() {
	*x = TrendAnalysis{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrendAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrendAnalysis) ProtoMessage() {}

func (x *TrendAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TrendAnalysis) GetPerformance() *PerformanceTrend {
	if x != nil {
		return x.xxx_hidden_Performance
	}
	return nil
}

func (x *TrendAnalysis) GetResourceUsage() *ResourceUsageTrend {
	if x != nil {
		return x.xxx_hidden_ResourceUsage
	}
	return nil
}

func (x *TrendAnalysis) GetErrors() *ErrorTrend {
	if x != nil {
		return x.xxx_hidden_Errors
	}
	return nil
}

func (x *TrendAnalysis) GetDataVolume() *DataVolumeTrend {
	if x != nil {
		return x.xxx_hidden_DataVolume
	}
	return nil
}

func (x *TrendAnalysis) SetPerformance(v *PerformanceTrend) {
	x.xxx_hidden_Performance = v
}

func (x *TrendAnalysis) SetResourceUsage(v *ResourceUsageTrend) {
	x.xxx_hidden_ResourceUsage = v
}

func (x *TrendAnalysis) SetErrors(v *ErrorTrend) {
	x.xxx_hidden_Errors = v
}

func (x *TrendAnalysis) SetDataVolume(v *DataVolumeTrend) {
	x.xxx_hidden_DataVolume = v
}

func (x *TrendAnalysis) HasPerformance() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Performance != nil
}

func (x *TrendAnalysis) HasResourceUsage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ResourceUsage != nil
}

func (x *TrendAnalysis) HasErrors() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Errors != nil
}

func (x *TrendAnalysis) HasDataVolume() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DataVolume != nil
}

func (x *TrendAnalysis) ClearPerformance() {
	x.xxx_hidden_Performance = nil
}

func (x *TrendAnalysis) ClearResourceUsage() {
	x.xxx_hidden_ResourceUsage = nil
}

func (x *TrendAnalysis) ClearErrors() {
	x.xxx_hidden_Errors = nil
}

func (x *TrendAnalysis) ClearDataVolume() {
	x.xxx_hidden_DataVolume = nil
}

type TrendAnalysis_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Performance trends
	Performance *PerformanceTrend
	// Resource usage trends
	ResourceUsage *ResourceUsageTrend
	// Error trends
	Errors *ErrorTrend
	// Data volume trends
	DataVolume *DataVolumeTrend
}

func (b0 TrendAnalysis_builder) Build() *TrendAnalysis {
	m0 := &TrendAnalysis{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Performance = b.Performance
	x.xxx_hidden_ResourceUsage = b.ResourceUsage
	x.xxx_hidden_Errors = b.Errors
	x.xxx_hidden_DataVolume = b.DataVolume
	return m0
}

// *
// PerformanceTrend contains performance trend information.
type PerformanceTrend struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LatencyTrend    *string                `protobuf:"bytes,1,opt,name=latency_trend,json=latencyTrend"`
	xxx_hidden_ThroughputTrend *string                `protobuf:"bytes,2,opt,name=throughput_trend,json=throughputTrend"`
	xxx_hidden_TrendConfidence float64                `protobuf:"fixed64,3,opt,name=trend_confidence,json=trendConfidence"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PerformanceTrend) Reset() {
	*x = PerformanceTrend{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceTrend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceTrend) ProtoMessage() {}

func (x *PerformanceTrend) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PerformanceTrend) GetLatencyTrend() string {
	if x != nil {
		if x.xxx_hidden_LatencyTrend != nil {
			return *x.xxx_hidden_LatencyTrend
		}
		return ""
	}
	return ""
}

func (x *PerformanceTrend) GetThroughputTrend() string {
	if x != nil {
		if x.xxx_hidden_ThroughputTrend != nil {
			return *x.xxx_hidden_ThroughputTrend
		}
		return ""
	}
	return ""
}

func (x *PerformanceTrend) GetTrendConfidence() float64 {
	if x != nil {
		return x.xxx_hidden_TrendConfidence
	}
	return 0
}

func (x *PerformanceTrend) SetLatencyTrend(v string) {
	x.xxx_hidden_LatencyTrend = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *PerformanceTrend) SetThroughputTrend(v string) {
	x.xxx_hidden_ThroughputTrend = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *PerformanceTrend) SetTrendConfidence(v float64) {
	x.xxx_hidden_TrendConfidence = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *PerformanceTrend) HasLatencyTrend() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PerformanceTrend) HasThroughputTrend() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PerformanceTrend) HasTrendConfidence() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PerformanceTrend) ClearLatencyTrend() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_LatencyTrend = nil
}

func (x *PerformanceTrend) ClearThroughputTrend() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ThroughputTrend = nil
}

func (x *PerformanceTrend) ClearTrendConfidence() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TrendConfidence = 0
}

type PerformanceTrend_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LatencyTrend    *string
	ThroughputTrend *string
	TrendConfidence *float64
}

func (b0 PerformanceTrend_builder) Build() *PerformanceTrend {
	m0 := &PerformanceTrend{}
	b, x := &b0, m0
	_, _ = b, x
	if b.LatencyTrend != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_LatencyTrend = b.LatencyTrend
	}
	if b.ThroughputTrend != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ThroughputTrend = b.ThroughputTrend
	}
	if b.TrendConfidence != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_TrendConfidence = *b.TrendConfidence
	}
	return m0
}

// *
// ResourceUsageTrend contains resource usage trend information.
type ResourceUsageTrend struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MemoryTrend     *string                `protobuf:"bytes,1,opt,name=memory_trend,json=memoryTrend"`
	xxx_hidden_CpuTrend        *string                `protobuf:"bytes,2,opt,name=cpu_trend,json=cpuTrend"`
	xxx_hidden_DiskTrend       *string                `protobuf:"bytes,3,opt,name=disk_trend,json=diskTrend"`
	xxx_hidden_TrendConfidence float64                `protobuf:"fixed64,4,opt,name=trend_confidence,json=trendConfidence"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ResourceUsageTrend) Reset() {
	*x = ResourceUsageTrend{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsageTrend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsageTrend) ProtoMessage() {}

func (x *ResourceUsageTrend) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResourceUsageTrend) GetMemoryTrend() string {
	if x != nil {
		if x.xxx_hidden_MemoryTrend != nil {
			return *x.xxx_hidden_MemoryTrend
		}
		return ""
	}
	return ""
}

func (x *ResourceUsageTrend) GetCpuTrend() string {
	if x != nil {
		if x.xxx_hidden_CpuTrend != nil {
			return *x.xxx_hidden_CpuTrend
		}
		return ""
	}
	return ""
}

func (x *ResourceUsageTrend) GetDiskTrend() string {
	if x != nil {
		if x.xxx_hidden_DiskTrend != nil {
			return *x.xxx_hidden_DiskTrend
		}
		return ""
	}
	return ""
}

func (x *ResourceUsageTrend) GetTrendConfidence() float64 {
	if x != nil {
		return x.xxx_hidden_TrendConfidence
	}
	return 0
}

func (x *ResourceUsageTrend) SetMemoryTrend(v string) {
	x.xxx_hidden_MemoryTrend = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ResourceUsageTrend) SetCpuTrend(v string) {
	x.xxx_hidden_CpuTrend = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ResourceUsageTrend) SetDiskTrend(v string) {
	x.xxx_hidden_DiskTrend = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ResourceUsageTrend) SetTrendConfidence(v float64) {
	x.xxx_hidden_TrendConfidence = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ResourceUsageTrend) HasMemoryTrend() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ResourceUsageTrend) HasCpuTrend() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ResourceUsageTrend) HasDiskTrend() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ResourceUsageTrend) HasTrendConfidence() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ResourceUsageTrend) ClearMemoryTrend() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MemoryTrend = nil
}

func (x *ResourceUsageTrend) ClearCpuTrend() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CpuTrend = nil
}

func (x *ResourceUsageTrend) ClearDiskTrend() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DiskTrend = nil
}

func (x *ResourceUsageTrend) ClearTrendConfidence() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TrendConfidence = 0
}

type ResourceUsageTrend_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MemoryTrend     *string
	CpuTrend        *string
	DiskTrend       *string
	TrendConfidence *float64
}

func (b0 ResourceUsageTrend_builder) Build() *ResourceUsageTrend {
	m0 := &ResourceUsageTrend{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MemoryTrend != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_MemoryTrend = b.MemoryTrend
	}
	if b.CpuTrend != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_CpuTrend = b.CpuTrend
	}
	if b.DiskTrend != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_DiskTrend = b.DiskTrend
	}
	if b.TrendConfidence != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_TrendConfidence = *b.TrendConfidence
	}
	return m0
}

// *
// ErrorTrend contains error trend information.
type ErrorTrend struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ErrorRateTrend     *string                `protobuf:"bytes,1,opt,name=error_rate_trend,json=errorRateTrend"`
	xxx_hidden_TrendConfidence    float64                `protobuf:"fixed64,2,opt,name=trend_confidence,json=trendConfidence"`
	xxx_hidden_EmergingErrorTypes []string               `protobuf:"bytes,3,rep,name=emerging_error_types,json=emergingErrorTypes"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ErrorTrend) Reset() {
	*x = ErrorTrend{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorTrend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTrend) ProtoMessage() {}

func (x *ErrorTrend) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorTrend) GetErrorRateTrend() string {
	if x != nil {
		if x.xxx_hidden_ErrorRateTrend != nil {
			return *x.xxx_hidden_ErrorRateTrend
		}
		return ""
	}
	return ""
}

func (x *ErrorTrend) GetTrendConfidence() float64 {
	if x != nil {
		return x.xxx_hidden_TrendConfidence
	}
	return 0
}

func (x *ErrorTrend) GetEmergingErrorTypes() []string {
	if x != nil {
		return x.xxx_hidden_EmergingErrorTypes
	}
	return nil
}

func (x *ErrorTrend) SetErrorRateTrend(v string) {
	x.xxx_hidden_ErrorRateTrend = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ErrorTrend) SetTrendConfidence(v float64) {
	x.xxx_hidden_TrendConfidence = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ErrorTrend) SetEmergingErrorTypes(v []string) {
	x.xxx_hidden_EmergingErrorTypes = v
}

func (x *ErrorTrend) HasErrorRateTrend() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ErrorTrend) HasTrendConfidence() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ErrorTrend) ClearErrorRateTrend() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ErrorRateTrend = nil
}

func (x *ErrorTrend) ClearTrendConfidence() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TrendConfidence = 0
}

type ErrorTrend_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ErrorRateTrend     *string
	TrendConfidence    *float64
	EmergingErrorTypes []string
}

func (b0 ErrorTrend_builder) Build() *ErrorTrend {
	m0 := &ErrorTrend{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ErrorRateTrend != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ErrorRateTrend = b.ErrorRateTrend
	}
	if b.TrendConfidence != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_TrendConfidence = *b.TrendConfidence
	}
	x.xxx_hidden_EmergingErrorTypes = b.EmergingErrorTypes
	return m0
}

// *
// DataVolumeTrend contains data volume trend information.
type DataVolumeTrend struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VolumeTrend     *string                `protobuf:"bytes,1,opt,name=volume_trend,json=volumeTrend"`
	xxx_hidden_IngestionTrend  *string                `protobuf:"bytes,2,opt,name=ingestion_trend,json=ingestionTrend"`
	xxx_hidden_TrendConfidence float64                `protobuf:"fixed64,3,opt,name=trend_confidence,json=trendConfidence"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *DataVolumeTrend) Reset() {
	*x = DataVolumeTrend{}
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataVolumeTrend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVolumeTrend) ProtoMessage() {}

func (x *DataVolumeTrend) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataVolumeTrend) GetVolumeTrend() string {
	if x != nil {
		if x.xxx_hidden_VolumeTrend != nil {
			return *x.xxx_hidden_VolumeTrend
		}
		return ""
	}
	return ""
}

func (x *DataVolumeTrend) GetIngestionTrend() string {
	if x != nil {
		if x.xxx_hidden_IngestionTrend != nil {
			return *x.xxx_hidden_IngestionTrend
		}
		return ""
	}
	return ""
}

func (x *DataVolumeTrend) GetTrendConfidence() float64 {
	if x != nil {
		return x.xxx_hidden_TrendConfidence
	}
	return 0
}

func (x *DataVolumeTrend) SetVolumeTrend(v string) {
	x.xxx_hidden_VolumeTrend = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *DataVolumeTrend) SetIngestionTrend(v string) {
	x.xxx_hidden_IngestionTrend = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *DataVolumeTrend) SetTrendConfidence(v float64) {
	x.xxx_hidden_TrendConfidence = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *DataVolumeTrend) HasVolumeTrend() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DataVolumeTrend) HasIngestionTrend() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DataVolumeTrend) HasTrendConfidence() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DataVolumeTrend) ClearVolumeTrend() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VolumeTrend = nil
}

func (x *DataVolumeTrend) ClearIngestionTrend() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_IngestionTrend = nil
}

func (x *DataVolumeTrend) ClearTrendConfidence() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TrendConfidence = 0
}

type DataVolumeTrend_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VolumeTrend     *string
	IngestionTrend  *string
	TrendConfidence *float64
}

func (b0 DataVolumeTrend_builder) Build() *DataVolumeTrend {
	m0 := &DataVolumeTrend{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VolumeTrend != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_VolumeTrend = b.VolumeTrend
	}
	if b.IngestionTrend != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_IngestionTrend = b.IngestionTrend
	}
	if b.TrendConfidence != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_TrendConfidence = *b.TrendConfidence
	}
	return m0
}

var File_pkg_metrics_proto_responses_get_provider_stats_response_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_responses_get_provider_stats_response_proto_rawDesc = "" +
	"\n" +
	"=pkg/metrics/proto/responses/get_provider_stats_response.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a%pkg/common/proto/messages/error.proto\x1a)pkg/metrics/proto/types/error_stats.proto\x1a(pkg/metrics/proto/types/time_range.proto\x1a/pkg/metrics/proto/types/performance_stats.proto\x1a)pkg/metrics/proto/types/top_metrics.proto\x1a+pkg/metrics/proto/types/provider_info.proto\x1a5pkg/metrics/proto/types/resource_limits_summary.proto\"\xe6\x02\n" +
	"\x18GetProviderStatsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\x02 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\x12\x1f\n" +
	"\vprovider_id\x18\x03 \x01(\tR\n" +
	"providerId\x12F\n" +
	"\n" +
	"statistics\x18\x04 \x01(\v2&.gcommon.v1.metrics.ProviderStatisticsR\n" +
	"statistics\x12=\n" +
	"\fgenerated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vgeneratedAt\x12<\n" +
	"\n" +
	"time_range\x18\x06 \x01(\v2\x1d.gcommon.v1.metrics.TimeRangeR\ttimeRange\x12\x1a\n" +
	"\bwarnings\x18\a \x03(\tR\bwarnings\"\xb7\x05\n" +
	"\x12ProviderStatistics\x12E\n" +
	"\rprovider_info\x18\x01 \x01(\v2 .gcommon.v1.metrics.ProviderInfoR\fproviderInfo\x12F\n" +
	"\vperformance\x18\x02 \x01(\v2$.gcommon.v1.metrics.PerformanceStatsR\vperformance\x12M\n" +
	"\x0eresource_usage\x18\x03 \x01(\v2&.gcommon.v1.metrics.ResourceUsageStatsR\rresourceUsage\x126\n" +
	"\x06errors\x18\x04 \x01(\v2\x1e.gcommon.v1.metrics.ErrorStatsR\x06errors\x12D\n" +
	"\vdata_volume\x18\x05 \x01(\v2#.gcommon.v1.metrics.DataVolumeStatsR\n" +
	"dataVolume\x129\n" +
	"\aexports\x18\x06 \x01(\v2\x1f.gcommon.v1.metrics.ExportStatsR\aexports\x12L\n" +
	"\x0ehealth_history\x18\a \x03(\v2%.gcommon.v1.metrics.HealthStatusEntryR\rhealthHistory\x12@\n" +
	"\x06config\x18\b \x01(\v2(.gcommon.v1.metrics.ConfigurationSummaryR\x06config\x12?\n" +
	"\vtop_metrics\x18\t \x01(\v2\x1e.gcommon.v1.metrics.TopMetricsR\n" +
	"topMetrics\x129\n" +
	"\x06trends\x18\n" +
	" \x01(\v2!.gcommon.v1.metrics.TrendAnalysisR\x06trends\"\xd4\x01\n" +
	"\x14PerformanceDataPoint\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12$\n" +
	"\x0eops_per_second\x18\x02 \x01(\x01R\fopsPerSecond\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x03 \x01(\x01R\tlatencyMs\x12=\n" +
	"\x1bthroughput_bytes_per_second\x18\x04 \x01(\x01R\x18throughputBytesPerSecond\"\xc4\x02\n" +
	"\x12ResourceUsageStats\x127\n" +
	"\x06memory\x18\x01 \x01(\v2\x1f.gcommon.v1.metrics.MemoryUsageR\x06memory\x12.\n" +
	"\x03cpu\x18\x02 \x01(\v2\x1c.gcommon.v1.metrics.CPUUsageR\x03cpu\x121\n" +
	"\x04disk\x18\x03 \x01(\v2\x1d.gcommon.v1.metrics.DiskUsageR\x04disk\x12:\n" +
	"\anetwork\x18\x04 \x01(\v2 .gcommon.v1.metrics.NetworkUsageR\anetwork\x12V\n" +
	"\x13resource_timeseries\x18\x05 \x03(\v2%.gcommon.v1.metrics.ResourceDataPointR\x12resourceTimeseries\"\x91\x01\n" +
	"\vMemoryUsage\x12\x1d\n" +
	"\n" +
	"used_bytes\x18\x01 \x01(\x03R\tusedBytes\x12\x1f\n" +
	"\vlimit_bytes\x18\x02 \x01(\x03R\n" +
	"limitBytes\x12#\n" +
	"\rusage_percent\x18\x03 \x01(\x01R\fusagePercent\x12\x1d\n" +
	"\n" +
	"peak_bytes\x18\x04 \x01(\x03R\tpeakBytes\"w\n" +
	"\bCPUUsage\x12'\n" +
	"\x0fcurrent_percent\x18\x01 \x01(\x01R\x0ecurrentPercent\x12\x1f\n" +
	"\vavg_percent\x18\x02 \x01(\x01R\n" +
	"avgPercent\x12!\n" +
	"\fpeak_percent\x18\x03 \x01(\x01R\vpeakPercent\"\x84\x01\n" +
	"\tDiskUsage\x12\x1d\n" +
	"\n" +
	"used_bytes\x18\x01 \x01(\x03R\tusedBytes\x12\x1f\n" +
	"\vlimit_bytes\x18\x02 \x01(\x03R\n" +
	"limitBytes\x12#\n" +
	"\rusage_percent\x18\x03 \x01(\x01R\fusagePercent\x12\x12\n" +
	"\x04iops\x18\x04 \x01(\x01R\x04iops\"\xd6\x01\n" +
	"\fNetworkUsage\x12-\n" +
	"\x13bytes_in_per_second\x18\x01 \x01(\x03R\x10bytesInPerSecond\x12/\n" +
	"\x14bytes_out_per_second\x18\x02 \x01(\x03R\x11bytesOutPerSecond\x121\n" +
	"\x15packets_in_per_second\x18\x03 \x01(\x03R\x12packetsInPerSecond\x123\n" +
	"\x16packets_out_per_second\x18\x04 \x01(\x03R\x13packetsOutPerSecond\"\x92\x02\n" +
	"\x11ResourceDataPoint\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x120\n" +
	"\x14memory_usage_percent\x18\x02 \x01(\x01R\x12memoryUsagePercent\x12*\n" +
	"\x11cpu_usage_percent\x18\x03 \x01(\x01R\x0fcpuUsagePercent\x12,\n" +
	"\x12disk_usage_percent\x18\x04 \x01(\x01R\x10diskUsagePercent\x127\n" +
	"\x18network_bytes_per_second\x18\x05 \x01(\x03R\x15networkBytesPerSecond\"y\n" +
	"\x0eErrorTypeStats\x12\x1d\n" +
	"\n" +
	"error_type\x18\x01 \x01(\tR\terrorType\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\x12\x12\n" +
	"\x04rate\x18\x03 \x01(\x01R\x04rate\x12\x1e\n" +
	"\n" +
	"percentage\x18\x04 \x01(\x01R\n" +
	"percentage\"\xa0\x01\n" +
	"\n" +
	"ErrorEntry\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1d\n" +
	"\n" +
	"error_type\x18\x02 \x01(\tR\terrorType\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x05R\x05count\"\x8a\x01\n" +
	"\x0eErrorDataPoint\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1f\n" +
	"\verror_count\x18\x02 \x01(\x03R\n" +
	"errorCount\x12\x1d\n" +
	"\n" +
	"error_rate\x18\x03 \x01(\x01R\terrorRate\"\x94\x03\n" +
	"\x0fDataVolumeStats\x12\x1f\n" +
	"\vtotal_bytes\x18\x01 \x01(\x03R\n" +
	"totalBytes\x12#\n" +
	"\rtotal_metrics\x18\x02 \x01(\x03R\ftotalMetrics\x12*\n" +
	"\x11total_data_points\x18\x03 \x01(\x03R\x0ftotalDataPoints\x12D\n" +
	"\x1fingestion_rate_bytes_per_second\x18\x04 \x01(\x01R\x1bingestionRateBytesPerSecond\x12F\n" +
	" ingestion_rate_points_per_second\x18\x05 \x01(\x01R\x1cingestionRatePointsPerSecond\x12+\n" +
	"\x11compression_ratio\x18\x06 \x01(\x01R\x10compressionRatio\x12T\n" +
	"\x11volume_timeseries\x18\a \x03(\v2'.gcommon.v1.metrics.DataVolumeDataPointR\x10volumeTimeseries\"\xe8\x01\n" +
	"\x13DataVolumeDataPoint\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1f\n" +
	"\vtotal_bytes\x18\x02 \x01(\x03R\n" +
	"totalBytes\x12#\n" +
	"\rtotal_metrics\x18\x03 \x01(\x03R\ftotalMetrics\x12*\n" +
	"\x11total_data_points\x18\x04 \x01(\x03R\x0ftotalDataPoints\x12%\n" +
	"\x0eingestion_rate\x18\x05 \x01(\x01R\ringestionRate\"\xca\x03\n" +
	"\vExportStats\x124\n" +
	"\x16total_exported_metrics\x18\x01 \x01(\x03R\x14totalExportedMetrics\x12;\n" +
	"\x1atotal_exported_data_points\x18\x02 \x01(\x03R\x17totalExportedDataPoints\x12B\n" +
	"\x1eexport_rate_metrics_per_second\x18\x03 \x01(\x01R\x1aexportRateMetricsPerSecond\x12%\n" +
	"\x0efailed_exports\x18\x04 \x01(\x03R\rfailedExports\x12.\n" +
	"\x13export_success_rate\x18\x05 \x01(\x01R\x11exportSuccessRate\x12[\n" +
	"\x13export_destinations\x18\x06 \x03(\v2*.gcommon.v1.metrics.ExportDestinationStatsR\x12exportDestinations\x12P\n" +
	"\x16last_successful_export\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x14lastSuccessfulExport\"\x9c\x02\n" +
	"\x16ExportDestinationStats\x12%\n" +
	"\x0edestination_id\x18\x01 \x01(\tR\rdestinationId\x12)\n" +
	"\x10destination_type\x18\x02 \x01(\tR\x0fdestinationType\x12)\n" +
	"\x10exported_metrics\x18\x03 \x01(\x03R\x0fexportedMetrics\x12%\n" +
	"\x0efailed_exports\x18\x04 \x01(\x03R\rfailedExports\x12!\n" +
	"\fsuccess_rate\x18\x05 \x01(\x01R\vsuccessRate\x12;\n" +
	"\vlast_export\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastExport\"\x99\x01\n" +
	"\x11HealthStatusEntry\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12#\n" +
	"\rhealth_status\x18\x02 \x01(\tR\fhealthStatus\x12%\n" +
	"\x0estatus_message\x18\x03 \x01(\tR\rstatusMessage\"\xf9\x01\n" +
	"\x14ConfigurationSummary\x12%\n" +
	"\x0eexporter_count\x18\x01 \x01(\x05R\rexporterCount\x12?\n" +
	"\bsecurity\x18\x02 \x01(\v2#.gcommon.v1.metrics.SecuritySummaryR\bsecurity\x12R\n" +
	"\x0fresource_limits\x18\x03 \x01(\v2).gcommon.v1.metrics.ResourceLimitsSummaryR\x0eresourceLimits\x12%\n" +
	"\x0econfig_version\x18\x04 \x01(\tR\rconfigVersion\"x\n" +
	"\x0fSecuritySummary\x12!\n" +
	"\fauth_enabled\x18\x01 \x01(\bR\vauthEnabled\x12\x1f\n" +
	"\vtls_enabled\x18\x02 \x01(\bR\n" +
	"tlsEnabled\x12!\n" +
	"\fauth_methods\x18\x03 \x03(\tR\vauthMethods\"\xe2\x01\n" +
	"\rMetricSummary\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1f\n" +
	"\vdata_points\x18\x03 \x01(\x03R\n" +
	"dataPoints\x12*\n" +
	"\x11data_volume_bytes\x18\x04 \x01(\x03R\x0fdataVolumeBytes\x12\x1d\n" +
	"\n" +
	"error_rate\x18\x05 \x01(\x01R\terrorRate\x12=\n" +
	"\flast_updated\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\"\xa4\x02\n" +
	"\rTrendAnalysis\x12F\n" +
	"\vperformance\x18\x01 \x01(\v2$.gcommon.v1.metrics.PerformanceTrendR\vperformance\x12M\n" +
	"\x0eresource_usage\x18\x02 \x01(\v2&.gcommon.v1.metrics.ResourceUsageTrendR\rresourceUsage\x126\n" +
	"\x06errors\x18\x03 \x01(\v2\x1e.gcommon.v1.metrics.ErrorTrendR\x06errors\x12D\n" +
	"\vdata_volume\x18\x04 \x01(\v2#.gcommon.v1.metrics.DataVolumeTrendR\n" +
	"dataVolume\"\x8d\x01\n" +
	"\x10PerformanceTrend\x12#\n" +
	"\rlatency_trend\x18\x01 \x01(\tR\flatencyTrend\x12)\n" +
	"\x10throughput_trend\x18\x02 \x01(\tR\x0fthroughputTrend\x12)\n" +
	"\x10trend_confidence\x18\x03 \x01(\x01R\x0ftrendConfidence\"\x9e\x01\n" +
	"\x12ResourceUsageTrend\x12!\n" +
	"\fmemory_trend\x18\x01 \x01(\tR\vmemoryTrend\x12\x1b\n" +
	"\tcpu_trend\x18\x02 \x01(\tR\bcpuTrend\x12\x1d\n" +
	"\n" +
	"disk_trend\x18\x03 \x01(\tR\tdiskTrend\x12)\n" +
	"\x10trend_confidence\x18\x04 \x01(\x01R\x0ftrendConfidence\"\x93\x01\n" +
	"\n" +
	"ErrorTrend\x12(\n" +
	"\x10error_rate_trend\x18\x01 \x01(\tR\x0eerrorRateTrend\x12)\n" +
	"\x10trend_confidence\x18\x02 \x01(\x01R\x0ftrendConfidence\x120\n" +
	"\x14emerging_error_types\x18\x03 \x03(\tR\x12emergingErrorTypes\"\x88\x01\n" +
	"\x0fDataVolumeTrend\x12!\n" +
	"\fvolume_trend\x18\x01 \x01(\tR\vvolumeTrend\x12'\n" +
	"\x0fingestion_trend\x18\x02 \x01(\tR\x0eingestionTrend\x12)\n" +
	"\x10trend_confidence\x18\x03 \x01(\x01R\x0ftrendConfidenceB\xe0\x01\n" +
	"\x16com.gcommon.v1.metricsB\x1dGetProviderStatsResponseProtoP\x01Z5github.com/jdfalk/gcommon/pkg/metrics/proto/responses\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_pkg_metrics_proto_responses_get_provider_stats_response_proto_goTypes = []any{
	(*GetProviderStatsResponse)(nil),    // 0: gcommon.v1.metrics.GetProviderStatsResponse
	(*ProviderStatistics)(nil),          // 1: gcommon.v1.metrics.ProviderStatistics
	(*PerformanceDataPoint)(nil),        // 2: gcommon.v1.metrics.PerformanceDataPoint
	(*ResourceUsageStats)(nil),          // 3: gcommon.v1.metrics.ResourceUsageStats
	(*MemoryUsage)(nil),                 // 4: gcommon.v1.metrics.MemoryUsage
	(*CPUUsage)(nil),                    // 5: gcommon.v1.metrics.CPUUsage
	(*DiskUsage)(nil),                   // 6: gcommon.v1.metrics.DiskUsage
	(*NetworkUsage)(nil),                // 7: gcommon.v1.metrics.NetworkUsage
	(*ResourceDataPoint)(nil),           // 8: gcommon.v1.metrics.ResourceDataPoint
	(*ErrorTypeStats)(nil),              // 9: gcommon.v1.metrics.ErrorTypeStats
	(*ErrorEntry)(nil),                  // 10: gcommon.v1.metrics.ErrorEntry
	(*ErrorDataPoint)(nil),              // 11: gcommon.v1.metrics.ErrorDataPoint
	(*DataVolumeStats)(nil),             // 12: gcommon.v1.metrics.DataVolumeStats
	(*DataVolumeDataPoint)(nil),         // 13: gcommon.v1.metrics.DataVolumeDataPoint
	(*ExportStats)(nil),                 // 14: gcommon.v1.metrics.ExportStats
	(*ExportDestinationStats)(nil),      // 15: gcommon.v1.metrics.ExportDestinationStats
	(*HealthStatusEntry)(nil),           // 16: gcommon.v1.metrics.HealthStatusEntry
	(*ConfigurationSummary)(nil),        // 17: gcommon.v1.metrics.ConfigurationSummary
	(*SecuritySummary)(nil),             // 18: gcommon.v1.metrics.SecuritySummary
	(*MetricSummary)(nil),               // 19: gcommon.v1.metrics.MetricSummary
	(*TrendAnalysis)(nil),               // 20: gcommon.v1.metrics.TrendAnalysis
	(*PerformanceTrend)(nil),            // 21: gcommon.v1.metrics.PerformanceTrend
	(*ResourceUsageTrend)(nil),          // 22: gcommon.v1.metrics.ResourceUsageTrend
	(*ErrorTrend)(nil),                  // 23: gcommon.v1.metrics.ErrorTrend
	(*DataVolumeTrend)(nil),             // 24: gcommon.v1.metrics.DataVolumeTrend
	(*messages.Error)(nil),              // 25: gcommon.v1.common.Error
	(*timestamppb.Timestamp)(nil),       // 26: google.protobuf.Timestamp
	(*types.TimeRange)(nil),             // 27: gcommon.v1.metrics.TimeRange
	(*types.ProviderInfo)(nil),          // 28: gcommon.v1.metrics.ProviderInfo
	(*types.PerformanceStats)(nil),      // 29: gcommon.v1.metrics.PerformanceStats
	(*types.ErrorStats)(nil),            // 30: gcommon.v1.metrics.ErrorStats
	(*types.TopMetrics)(nil),            // 31: gcommon.v1.metrics.TopMetrics
	(*types.ResourceLimitsSummary)(nil), // 32: gcommon.v1.metrics.ResourceLimitsSummary
}
var file_pkg_metrics_proto_responses_get_provider_stats_response_proto_depIdxs = []int32{
	25, // 0: gcommon.v1.metrics.GetProviderStatsResponse.error:type_name -> gcommon.v1.common.Error
	1,  // 1: gcommon.v1.metrics.GetProviderStatsResponse.statistics:type_name -> gcommon.v1.metrics.ProviderStatistics
	26, // 2: gcommon.v1.metrics.GetProviderStatsResponse.generated_at:type_name -> google.protobuf.Timestamp
	27, // 3: gcommon.v1.metrics.GetProviderStatsResponse.time_range:type_name -> gcommon.v1.metrics.TimeRange
	28, // 4: gcommon.v1.metrics.ProviderStatistics.provider_info:type_name -> gcommon.v1.metrics.ProviderInfo
	29, // 5: gcommon.v1.metrics.ProviderStatistics.performance:type_name -> gcommon.v1.metrics.PerformanceStats
	3,  // 6: gcommon.v1.metrics.ProviderStatistics.resource_usage:type_name -> gcommon.v1.metrics.ResourceUsageStats
	30, // 7: gcommon.v1.metrics.ProviderStatistics.errors:type_name -> gcommon.v1.metrics.ErrorStats
	12, // 8: gcommon.v1.metrics.ProviderStatistics.data_volume:type_name -> gcommon.v1.metrics.DataVolumeStats
	14, // 9: gcommon.v1.metrics.ProviderStatistics.exports:type_name -> gcommon.v1.metrics.ExportStats
	16, // 10: gcommon.v1.metrics.ProviderStatistics.health_history:type_name -> gcommon.v1.metrics.HealthStatusEntry
	17, // 11: gcommon.v1.metrics.ProviderStatistics.config:type_name -> gcommon.v1.metrics.ConfigurationSummary
	31, // 12: gcommon.v1.metrics.ProviderStatistics.top_metrics:type_name -> gcommon.v1.metrics.TopMetrics
	20, // 13: gcommon.v1.metrics.ProviderStatistics.trends:type_name -> gcommon.v1.metrics.TrendAnalysis
	26, // 14: gcommon.v1.metrics.PerformanceDataPoint.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 15: gcommon.v1.metrics.ResourceUsageStats.memory:type_name -> gcommon.v1.metrics.MemoryUsage
	5,  // 16: gcommon.v1.metrics.ResourceUsageStats.cpu:type_name -> gcommon.v1.metrics.CPUUsage
	6,  // 17: gcommon.v1.metrics.ResourceUsageStats.disk:type_name -> gcommon.v1.metrics.DiskUsage
	7,  // 18: gcommon.v1.metrics.ResourceUsageStats.network:type_name -> gcommon.v1.metrics.NetworkUsage
	8,  // 19: gcommon.v1.metrics.ResourceUsageStats.resource_timeseries:type_name -> gcommon.v1.metrics.ResourceDataPoint
	26, // 20: gcommon.v1.metrics.ResourceDataPoint.timestamp:type_name -> google.protobuf.Timestamp
	26, // 21: gcommon.v1.metrics.ErrorEntry.timestamp:type_name -> google.protobuf.Timestamp
	26, // 22: gcommon.v1.metrics.ErrorDataPoint.timestamp:type_name -> google.protobuf.Timestamp
	13, // 23: gcommon.v1.metrics.DataVolumeStats.volume_timeseries:type_name -> gcommon.v1.metrics.DataVolumeDataPoint
	26, // 24: gcommon.v1.metrics.DataVolumeDataPoint.timestamp:type_name -> google.protobuf.Timestamp
	15, // 25: gcommon.v1.metrics.ExportStats.export_destinations:type_name -> gcommon.v1.metrics.ExportDestinationStats
	26, // 26: gcommon.v1.metrics.ExportStats.last_successful_export:type_name -> google.protobuf.Timestamp
	26, // 27: gcommon.v1.metrics.ExportDestinationStats.last_export:type_name -> google.protobuf.Timestamp
	26, // 28: gcommon.v1.metrics.HealthStatusEntry.timestamp:type_name -> google.protobuf.Timestamp
	18, // 29: gcommon.v1.metrics.ConfigurationSummary.security:type_name -> gcommon.v1.metrics.SecuritySummary
	32, // 30: gcommon.v1.metrics.ConfigurationSummary.resource_limits:type_name -> gcommon.v1.metrics.ResourceLimitsSummary
	26, // 31: gcommon.v1.metrics.MetricSummary.last_updated:type_name -> google.protobuf.Timestamp
	21, // 32: gcommon.v1.metrics.TrendAnalysis.performance:type_name -> gcommon.v1.metrics.PerformanceTrend
	22, // 33: gcommon.v1.metrics.TrendAnalysis.resource_usage:type_name -> gcommon.v1.metrics.ResourceUsageTrend
	23, // 34: gcommon.v1.metrics.TrendAnalysis.errors:type_name -> gcommon.v1.metrics.ErrorTrend
	24, // 35: gcommon.v1.metrics.TrendAnalysis.data_volume:type_name -> gcommon.v1.metrics.DataVolumeTrend
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_responses_get_provider_stats_response_proto_init() }
func file_pkg_metrics_proto_responses_get_provider_stats_response_proto_init() {
	if File_pkg_metrics_proto_responses_get_provider_stats_response_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_responses_get_provider_stats_response_proto_rawDesc), len(file_pkg_metrics_proto_responses_get_provider_stats_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_responses_get_provider_stats_response_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_responses_get_provider_stats_response_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_responses_get_provider_stats_response_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_responses_get_provider_stats_response_proto = out.File
	file_pkg_metrics_proto_responses_get_provider_stats_response_proto_goTypes = nil
	file_pkg_metrics_proto_responses_get_provider_stats_response_proto_depIdxs = nil
}
