// filepath: pkg/metrics/proto/responses/get_metrics_response.proto
// file: metrics/proto/responses/get_metrics_response.proto
//
// Get metrics response definitions for metrics module
//
edition = "2023";

package gcommon.v1.metrics;

import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";
import "pkg/common/proto/messages/error.proto";
import "pkg/metrics/proto/messages/metric_data.proto";
import "pkg/metrics/proto/messages/metric_metadata.proto";

option go_package = "github.com/jdfalk/gcommon/pkg/metrics/proto;metricspb";
option features.(pb.go).api_level = API_HYBRID;

/**
 * GetMetricsResponse contains the retrieved metrics data.
 */
message GetMetricsResponse {
  // Success status of the operation
  bool success = 1;

  // Error information if the operation failed
  gcommon.v1.common.Error error = 2;

  // Retrieved metrics data
  repeated MetricData metrics = 3;

  // Metadata for the metrics (if requested)
  repeated MetricMetadata metadata = 4;

  // Pagination information
  PaginationInfo pagination = 5;

  // Query execution statistics
  QueryStats stats = 6;

  // When the response was generated
  google.protobuf.Timestamp generated_at = 7;

  // Time range covered by the response
  TimeRange time_range = 8;

  // Warnings or informational messages
  repeated string warnings = 9;

  // Provider that handled the request
  string provider_id = 10;
}

/**
 * PaginationInfo contains pagination details for the response.
 */
message PaginationInfo {
  // Current page size
  int32 page_size = 1;

  // Token for the next page (if available)
  string next_page_token = 2;

  // Token for the previous page (if available)
  string prev_page_token = 3;

  // Total number of metrics available (if requested)
  int64 total_count = 4;

  // Current page number (0-based)
  int32 current_page = 5;

  // Total number of pages
  int32 total_pages = 6;

  // Whether there are more results available
  bool has_more = 7;
}

/**
 * QueryStats contains performance information about the query.
 */
message QueryStats {
  // Time taken to execute the query (milliseconds)
  int64 execution_time_ms = 1;

  // Number of data points examined
  int64 data_points_examined = 2;

  // Number of metrics returned
  int64 metrics_returned = 3;

  // Number of data points returned
  int64 data_points_returned = 4;

  // Cache hit rate for the query (0.0 to 1.0)
  double cache_hit_rate = 5;

  // Memory used during query execution (bytes)
  int64 memory_used_bytes = 6;

  // Storage backends queried
  repeated string storage_backends = 7;

  // Whether the query was optimized
  bool query_optimized = 8;

  // Query optimization details
  repeated string optimizations_applied = 9;
}