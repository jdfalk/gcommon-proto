// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/responses/register_metric_response.proto

//go:build !protoopaque

package metricspb

import (
	proto "../../../../pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// RegistrationAction indicates what action was taken during registration.
type RegistrationAction int32

const (
	RegistrationAction_REGISTRATION_ACTION_UNSPECIFIED RegistrationAction = 0
	RegistrationAction_REGISTRATION_ACTION_CREATED     RegistrationAction = 1
	RegistrationAction_REGISTRATION_ACTION_UPDATED     RegistrationAction = 2
	RegistrationAction_REGISTRATION_ACTION_REPLACED    RegistrationAction = 3
	RegistrationAction_REGISTRATION_ACTION_NO_CHANGE   RegistrationAction = 4
)

// Enum value maps for RegistrationAction.
var (
	RegistrationAction_name = map[int32]string{
		0: "REGISTRATION_ACTION_UNSPECIFIED",
		1: "REGISTRATION_ACTION_CREATED",
		2: "REGISTRATION_ACTION_UPDATED",
		3: "REGISTRATION_ACTION_REPLACED",
		4: "REGISTRATION_ACTION_NO_CHANGE",
	}
	RegistrationAction_value = map[string]int32{
		"REGISTRATION_ACTION_UNSPECIFIED": 0,
		"REGISTRATION_ACTION_CREATED":     1,
		"REGISTRATION_ACTION_UPDATED":     2,
		"REGISTRATION_ACTION_REPLACED":    3,
		"REGISTRATION_ACTION_NO_CHANGE":   4,
	}
)

func (x RegistrationAction) Enum() *RegistrationAction {
	p := new(RegistrationAction)
	*p = x
	return p
}

func (x RegistrationAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistrationAction) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_metrics_proto_responses_register_metric_response_proto_enumTypes[0].Descriptor()
}

func (RegistrationAction) Type() protoreflect.EnumType {
	return &file_pkg_metrics_proto_responses_register_metric_response_proto_enumTypes[0]
}

func (x RegistrationAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// *
// RegisterMetricResponse contains the result of registering a metric definition.
type RegisterMetricResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Success status of the registration
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Error information if registration failed
	Error *proto.Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	// Unique ID assigned to the registered metric
	MetricId *string `protobuf:"bytes,3,opt,name=metric_id,json=metricId" json:"metric_id,omitempty"`
	// Name of the registered metric
	MetricName *string `protobuf:"bytes,4,opt,name=metric_name,json=metricName" json:"metric_name,omitempty"`
	// When the metric was registered
	RegisteredAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=registered_at,json=registeredAt" json:"registered_at,omitempty"`
	// Provider that handled the registration
	ProviderId *string `protobuf:"bytes,6,opt,name=provider_id,json=providerId" json:"provider_id,omitempty"`
	// Validation results from the registration process
	Validation *RegistrationValidation `protobuf:"bytes,7,opt,name=validation" json:"validation,omitempty"`
	// Information about what was created/updated
	Result *RegistrationResult `protobuf:"bytes,8,opt,name=result" json:"result,omitempty"`
	// Warnings or informational messages
	Warnings []string `protobuf:"bytes,9,rep,name=warnings" json:"warnings,omitempty"`
	// Whether this replaced an existing metric
	ReplacedExisting *bool `protobuf:"varint,10,opt,name=replaced_existing,json=replacedExisting" json:"replaced_existing,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RegisterMetricResponse) Reset() {
	*x = RegisterMetricResponse{}
	mi := &file_pkg_metrics_proto_responses_register_metric_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterMetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMetricResponse) ProtoMessage() {}

func (x *RegisterMetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_register_metric_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterMetricResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *RegisterMetricResponse) GetError() *proto.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RegisterMetricResponse) GetMetricId() string {
	if x != nil && x.MetricId != nil {
		return *x.MetricId
	}
	return ""
}

func (x *RegisterMetricResponse) GetMetricName() string {
	if x != nil && x.MetricName != nil {
		return *x.MetricName
	}
	return ""
}

func (x *RegisterMetricResponse) GetRegisteredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RegisteredAt
	}
	return nil
}

func (x *RegisterMetricResponse) GetProviderId() string {
	if x != nil && x.ProviderId != nil {
		return *x.ProviderId
	}
	return ""
}

func (x *RegisterMetricResponse) GetValidation() *RegistrationValidation {
	if x != nil {
		return x.Validation
	}
	return nil
}

func (x *RegisterMetricResponse) GetResult() *RegistrationResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RegisterMetricResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *RegisterMetricResponse) GetReplacedExisting() bool {
	if x != nil && x.ReplacedExisting != nil {
		return *x.ReplacedExisting
	}
	return false
}

func (x *RegisterMetricResponse) SetSuccess(v bool) {
	x.Success = &v
}

func (x *RegisterMetricResponse) SetError(v *proto.Error) {
	x.Error = v
}

func (x *RegisterMetricResponse) SetMetricId(v string) {
	x.MetricId = &v
}

func (x *RegisterMetricResponse) SetMetricName(v string) {
	x.MetricName = &v
}

func (x *RegisterMetricResponse) SetRegisteredAt(v *timestamppb.Timestamp) {
	x.RegisteredAt = v
}

func (x *RegisterMetricResponse) SetProviderId(v string) {
	x.ProviderId = &v
}

func (x *RegisterMetricResponse) SetValidation(v *RegistrationValidation) {
	x.Validation = v
}

func (x *RegisterMetricResponse) SetResult(v *RegistrationResult) {
	x.Result = v
}

func (x *RegisterMetricResponse) SetWarnings(v []string) {
	x.Warnings = v
}

func (x *RegisterMetricResponse) SetReplacedExisting(v bool) {
	x.ReplacedExisting = &v
}

func (x *RegisterMetricResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *RegisterMetricResponse) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *RegisterMetricResponse) HasMetricId() bool {
	if x == nil {
		return false
	}
	return x.MetricId != nil
}

func (x *RegisterMetricResponse) HasMetricName() bool {
	if x == nil {
		return false
	}
	return x.MetricName != nil
}

func (x *RegisterMetricResponse) HasRegisteredAt() bool {
	if x == nil {
		return false
	}
	return x.RegisteredAt != nil
}

func (x *RegisterMetricResponse) HasProviderId() bool {
	if x == nil {
		return false
	}
	return x.ProviderId != nil
}

func (x *RegisterMetricResponse) HasValidation() bool {
	if x == nil {
		return false
	}
	return x.Validation != nil
}

func (x *RegisterMetricResponse) HasResult() bool {
	if x == nil {
		return false
	}
	return x.Result != nil
}

func (x *RegisterMetricResponse) HasReplacedExisting() bool {
	if x == nil {
		return false
	}
	return x.ReplacedExisting != nil
}

func (x *RegisterMetricResponse) ClearSuccess() {
	x.Success = nil
}

func (x *RegisterMetricResponse) ClearError() {
	x.Error = nil
}

func (x *RegisterMetricResponse) ClearMetricId() {
	x.MetricId = nil
}

func (x *RegisterMetricResponse) ClearMetricName() {
	x.MetricName = nil
}

func (x *RegisterMetricResponse) ClearRegisteredAt() {
	x.RegisteredAt = nil
}

func (x *RegisterMetricResponse) ClearProviderId() {
	x.ProviderId = nil
}

func (x *RegisterMetricResponse) ClearValidation() {
	x.Validation = nil
}

func (x *RegisterMetricResponse) ClearResult() {
	x.Result = nil
}

func (x *RegisterMetricResponse) ClearReplacedExisting() {
	x.ReplacedExisting = nil
}

type RegisterMetricResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Success status of the registration
	Success *bool
	// Error information if registration failed
	Error *proto.Error
	// Unique ID assigned to the registered metric
	MetricId *string
	// Name of the registered metric
	MetricName *string
	// When the metric was registered
	RegisteredAt *timestamppb.Timestamp
	// Provider that handled the registration
	ProviderId *string
	// Validation results from the registration process
	Validation *RegistrationValidation
	// Information about what was created/updated
	Result *RegistrationResult
	// Warnings or informational messages
	Warnings []string
	// Whether this replaced an existing metric
	ReplacedExisting *bool
}

func (b0 RegisterMetricResponse_builder) Build() *RegisterMetricResponse {
	m0 := &RegisterMetricResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Success = b.Success
	x.Error = b.Error
	x.MetricId = b.MetricId
	x.MetricName = b.MetricName
	x.RegisteredAt = b.RegisteredAt
	x.ProviderId = b.ProviderId
	x.Validation = b.Validation
	x.Result = b.Result
	x.Warnings = b.Warnings
	x.ReplacedExisting = b.ReplacedExisting
	return m0
}

// *
// RegistrationValidation contains validation results from registration.
type RegistrationValidation struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Whether the metric definition is valid
	Valid *bool `protobuf:"varint,1,opt,name=valid" json:"valid,omitempty"`
	// Validation errors (if any)
	Errors []string `protobuf:"bytes,2,rep,name=errors" json:"errors,omitempty"`
	// Validation warnings (if any)
	Warnings []string `protobuf:"bytes,3,rep,name=warnings" json:"warnings,omitempty"`
	// Schema version used for validation
	SchemaVersion *string `protobuf:"bytes,4,opt,name=schema_version,json=schemaVersion" json:"schema_version,omitempty"`
	// Suggestions for improving the metric definition
	Suggestions   []string `protobuf:"bytes,5,rep,name=suggestions" json:"suggestions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistrationValidation) Reset() {
	*x = RegistrationValidation{}
	mi := &file_pkg_metrics_proto_responses_register_metric_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationValidation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationValidation) ProtoMessage() {}

func (x *RegistrationValidation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_register_metric_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegistrationValidation) GetValid() bool {
	if x != nil && x.Valid != nil {
		return *x.Valid
	}
	return false
}

func (x *RegistrationValidation) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *RegistrationValidation) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *RegistrationValidation) GetSchemaVersion() string {
	if x != nil && x.SchemaVersion != nil {
		return *x.SchemaVersion
	}
	return ""
}

func (x *RegistrationValidation) GetSuggestions() []string {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

func (x *RegistrationValidation) SetValid(v bool) {
	x.Valid = &v
}

func (x *RegistrationValidation) SetErrors(v []string) {
	x.Errors = v
}

func (x *RegistrationValidation) SetWarnings(v []string) {
	x.Warnings = v
}

func (x *RegistrationValidation) SetSchemaVersion(v string) {
	x.SchemaVersion = &v
}

func (x *RegistrationValidation) SetSuggestions(v []string) {
	x.Suggestions = v
}

func (x *RegistrationValidation) HasValid() bool {
	if x == nil {
		return false
	}
	return x.Valid != nil
}

func (x *RegistrationValidation) HasSchemaVersion() bool {
	if x == nil {
		return false
	}
	return x.SchemaVersion != nil
}

func (x *RegistrationValidation) ClearValid() {
	x.Valid = nil
}

func (x *RegistrationValidation) ClearSchemaVersion() {
	x.SchemaVersion = nil
}

type RegistrationValidation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether the metric definition is valid
	Valid *bool
	// Validation errors (if any)
	Errors []string
	// Validation warnings (if any)
	Warnings []string
	// Schema version used for validation
	SchemaVersion *string
	// Suggestions for improving the metric definition
	Suggestions []string
}

func (b0 RegistrationValidation_builder) Build() *RegistrationValidation {
	m0 := &RegistrationValidation{}
	b, x := &b0, m0
	_, _ = b, x
	x.Valid = b.Valid
	x.Errors = b.Errors
	x.Warnings = b.Warnings
	x.SchemaVersion = b.SchemaVersion
	x.Suggestions = b.Suggestions
	return m0
}

// *
// RegistrationResult contains information about what was created/updated.
type RegistrationResult struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Whether a new metric was created or existing one updated
	Action *RegistrationAction `protobuf:"varint,1,opt,name=action,enum=gcommon.v1.metrics.RegistrationAction" json:"action,omitempty"`
	// Indices that were created for the metric
	CreatedIndices []string `protobuf:"bytes,2,rep,name=created_indices,json=createdIndices" json:"created_indices,omitempty"`
	// Alert rules that were created (if alerting was enabled)
	CreatedAlerts []string `protobuf:"bytes,3,rep,name=created_alerts,json=createdAlerts" json:"created_alerts,omitempty"`
	// Export configurations that were set up
	ConfiguredExports []string `protobuf:"bytes,4,rep,name=configured_exports,json=configuredExports" json:"configured_exports,omitempty"`
	// Retention policies that were applied
	AppliedRetentionPolicies []string `protobuf:"bytes,5,rep,name=applied_retention_policies,json=appliedRetentionPolicies" json:"applied_retention_policies,omitempty"`
	// Schema changes that were made
	SchemaChanges []*SchemaChange `protobuf:"bytes,6,rep,name=schema_changes,json=schemaChanges" json:"schema_changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistrationResult) Reset() {
	*x = RegistrationResult{}
	mi := &file_pkg_metrics_proto_responses_register_metric_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResult) ProtoMessage() {}

func (x *RegistrationResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_register_metric_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegistrationResult) GetAction() RegistrationAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return RegistrationAction_REGISTRATION_ACTION_UNSPECIFIED
}

func (x *RegistrationResult) GetCreatedIndices() []string {
	if x != nil {
		return x.CreatedIndices
	}
	return nil
}

func (x *RegistrationResult) GetCreatedAlerts() []string {
	if x != nil {
		return x.CreatedAlerts
	}
	return nil
}

func (x *RegistrationResult) GetConfiguredExports() []string {
	if x != nil {
		return x.ConfiguredExports
	}
	return nil
}

func (x *RegistrationResult) GetAppliedRetentionPolicies() []string {
	if x != nil {
		return x.AppliedRetentionPolicies
	}
	return nil
}

func (x *RegistrationResult) GetSchemaChanges() []*SchemaChange {
	if x != nil {
		return x.SchemaChanges
	}
	return nil
}

func (x *RegistrationResult) SetAction(v RegistrationAction) {
	x.Action = &v
}

func (x *RegistrationResult) SetCreatedIndices(v []string) {
	x.CreatedIndices = v
}

func (x *RegistrationResult) SetCreatedAlerts(v []string) {
	x.CreatedAlerts = v
}

func (x *RegistrationResult) SetConfiguredExports(v []string) {
	x.ConfiguredExports = v
}

func (x *RegistrationResult) SetAppliedRetentionPolicies(v []string) {
	x.AppliedRetentionPolicies = v
}

func (x *RegistrationResult) SetSchemaChanges(v []*SchemaChange) {
	x.SchemaChanges = v
}

func (x *RegistrationResult) HasAction() bool {
	if x == nil {
		return false
	}
	return x.Action != nil
}

func (x *RegistrationResult) ClearAction() {
	x.Action = nil
}

type RegistrationResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether a new metric was created or existing one updated
	Action *RegistrationAction
	// Indices that were created for the metric
	CreatedIndices []string
	// Alert rules that were created (if alerting was enabled)
	CreatedAlerts []string
	// Export configurations that were set up
	ConfiguredExports []string
	// Retention policies that were applied
	AppliedRetentionPolicies []string
	// Schema changes that were made
	SchemaChanges []*SchemaChange
}

func (b0 RegistrationResult_builder) Build() *RegistrationResult {
	m0 := &RegistrationResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.Action = b.Action
	x.CreatedIndices = b.CreatedIndices
	x.CreatedAlerts = b.CreatedAlerts
	x.ConfiguredExports = b.ConfiguredExports
	x.AppliedRetentionPolicies = b.AppliedRetentionPolicies
	x.SchemaChanges = b.SchemaChanges
	return m0
}

// *
// SchemaChange describes a change made to the metric schema.
type SchemaChange struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Type of change made
	ChangeType *string `protobuf:"bytes,1,opt,name=change_type,json=changeType" json:"change_type,omitempty"`
	// Description of the change
	Description *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Whether this change is backward compatible
	BackwardCompatible *bool `protobuf:"varint,3,opt,name=backward_compatible,json=backwardCompatible" json:"backward_compatible,omitempty"`
	// Migration steps required (if any)
	MigrationSteps []string `protobuf:"bytes,4,rep,name=migration_steps,json=migrationSteps" json:"migration_steps,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SchemaChange) Reset() {
	*x = SchemaChange{}
	mi := &file_pkg_metrics_proto_responses_register_metric_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchemaChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaChange) ProtoMessage() {}

func (x *SchemaChange) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_responses_register_metric_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SchemaChange) GetChangeType() string {
	if x != nil && x.ChangeType != nil {
		return *x.ChangeType
	}
	return ""
}

func (x *SchemaChange) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *SchemaChange) GetBackwardCompatible() bool {
	if x != nil && x.BackwardCompatible != nil {
		return *x.BackwardCompatible
	}
	return false
}

func (x *SchemaChange) GetMigrationSteps() []string {
	if x != nil {
		return x.MigrationSteps
	}
	return nil
}

func (x *SchemaChange) SetChangeType(v string) {
	x.ChangeType = &v
}

func (x *SchemaChange) SetDescription(v string) {
	x.Description = &v
}

func (x *SchemaChange) SetBackwardCompatible(v bool) {
	x.BackwardCompatible = &v
}

func (x *SchemaChange) SetMigrationSteps(v []string) {
	x.MigrationSteps = v
}

func (x *SchemaChange) HasChangeType() bool {
	if x == nil {
		return false
	}
	return x.ChangeType != nil
}

func (x *SchemaChange) HasDescription() bool {
	if x == nil {
		return false
	}
	return x.Description != nil
}

func (x *SchemaChange) HasBackwardCompatible() bool {
	if x == nil {
		return false
	}
	return x.BackwardCompatible != nil
}

func (x *SchemaChange) ClearChangeType() {
	x.ChangeType = nil
}

func (x *SchemaChange) ClearDescription() {
	x.Description = nil
}

func (x *SchemaChange) ClearBackwardCompatible() {
	x.BackwardCompatible = nil
}

type SchemaChange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Type of change made
	ChangeType *string
	// Description of the change
	Description *string
	// Whether this change is backward compatible
	BackwardCompatible *bool
	// Migration steps required (if any)
	MigrationSteps []string
}

func (b0 SchemaChange_builder) Build() *SchemaChange {
	m0 := &SchemaChange{}
	b, x := &b0, m0
	_, _ = b, x
	x.ChangeType = b.ChangeType
	x.Description = b.Description
	x.BackwardCompatible = b.BackwardCompatible
	x.MigrationSteps = b.MigrationSteps
	return m0
}

var File_pkg_metrics_proto_responses_register_metric_response_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_responses_register_metric_response_proto_rawDesc = "" +
	"\n" +
	":pkg/metrics/proto/responses/register_metric_response.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a%pkg/common/proto/messages/error.proto\"\xd7\x03\n" +
	"\x16RegisterMetricResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\x02 \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\x12\x1b\n" +
	"\tmetric_id\x18\x03 \x01(\tR\bmetricId\x12\x1f\n" +
	"\vmetric_name\x18\x04 \x01(\tR\n" +
	"metricName\x12?\n" +
	"\rregistered_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\fregisteredAt\x12\x1f\n" +
	"\vprovider_id\x18\x06 \x01(\tR\n" +
	"providerId\x12J\n" +
	"\n" +
	"validation\x18\a \x01(\v2*.gcommon.v1.metrics.RegistrationValidationR\n" +
	"validation\x12>\n" +
	"\x06result\x18\b \x01(\v2&.gcommon.v1.metrics.RegistrationResultR\x06result\x12\x1a\n" +
	"\bwarnings\x18\t \x03(\tR\bwarnings\x12+\n" +
	"\x11replaced_existing\x18\n" +
	" \x01(\bR\x10replacedExisting\"\xab\x01\n" +
	"\x16RegistrationValidation\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x16\n" +
	"\x06errors\x18\x02 \x03(\tR\x06errors\x12\x1a\n" +
	"\bwarnings\x18\x03 \x03(\tR\bwarnings\x12%\n" +
	"\x0eschema_version\x18\x04 \x01(\tR\rschemaVersion\x12 \n" +
	"\vsuggestions\x18\x05 \x03(\tR\vsuggestions\"\xda\x02\n" +
	"\x12RegistrationResult\x12>\n" +
	"\x06action\x18\x01 \x01(\x0e2&.gcommon.v1.metrics.RegistrationActionR\x06action\x12'\n" +
	"\x0fcreated_indices\x18\x02 \x03(\tR\x0ecreatedIndices\x12%\n" +
	"\x0ecreated_alerts\x18\x03 \x03(\tR\rcreatedAlerts\x12-\n" +
	"\x12configured_exports\x18\x04 \x03(\tR\x11configuredExports\x12<\n" +
	"\x1aapplied_retention_policies\x18\x05 \x03(\tR\x18appliedRetentionPolicies\x12G\n" +
	"\x0eschema_changes\x18\x06 \x03(\v2 .gcommon.v1.metrics.SchemaChangeR\rschemaChanges\"\xab\x01\n" +
	"\fSchemaChange\x12\x1f\n" +
	"\vchange_type\x18\x01 \x01(\tR\n" +
	"changeType\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12/\n" +
	"\x13backward_compatible\x18\x03 \x01(\bR\x12backwardCompatible\x12'\n" +
	"\x0fmigration_steps\x18\x04 \x03(\tR\x0emigrationSteps*\xc0\x01\n" +
	"\x12RegistrationAction\x12#\n" +
	"\x1fREGISTRATION_ACTION_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bREGISTRATION_ACTION_CREATED\x10\x01\x12\x1f\n" +
	"\x1bREGISTRATION_ACTION_UPDATED\x10\x02\x12 \n" +
	"\x1cREGISTRATION_ACTION_REPLACED\x10\x03\x12!\n" +
	"\x1dREGISTRATION_ACTION_NO_CHANGE\x10\x04B\xd0\x01\n" +
	"\x16com.gcommon.v1.metricsB\x1bRegisterMetricResponseProtoP\x01Z'../../../../pkg/metrics/proto;metricspb\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_metrics_proto_responses_register_metric_response_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_metrics_proto_responses_register_metric_response_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_metrics_proto_responses_register_metric_response_proto_goTypes = []any{
	(RegistrationAction)(0),        // 0: gcommon.v1.metrics.RegistrationAction
	(*RegisterMetricResponse)(nil), // 1: gcommon.v1.metrics.RegisterMetricResponse
	(*RegistrationValidation)(nil), // 2: gcommon.v1.metrics.RegistrationValidation
	(*RegistrationResult)(nil),     // 3: gcommon.v1.metrics.RegistrationResult
	(*SchemaChange)(nil),           // 4: gcommon.v1.metrics.SchemaChange
	(*proto.Error)(nil),            // 5: gcommon.v1.common.Error
	(*timestamppb.Timestamp)(nil),  // 6: google.protobuf.Timestamp
}
var file_pkg_metrics_proto_responses_register_metric_response_proto_depIdxs = []int32{
	5, // 0: gcommon.v1.metrics.RegisterMetricResponse.error:type_name -> gcommon.v1.common.Error
	6, // 1: gcommon.v1.metrics.RegisterMetricResponse.registered_at:type_name -> google.protobuf.Timestamp
	2, // 2: gcommon.v1.metrics.RegisterMetricResponse.validation:type_name -> gcommon.v1.metrics.RegistrationValidation
	3, // 3: gcommon.v1.metrics.RegisterMetricResponse.result:type_name -> gcommon.v1.metrics.RegistrationResult
	0, // 4: gcommon.v1.metrics.RegistrationResult.action:type_name -> gcommon.v1.metrics.RegistrationAction
	4, // 5: gcommon.v1.metrics.RegistrationResult.schema_changes:type_name -> gcommon.v1.metrics.SchemaChange
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_responses_register_metric_response_proto_init() }
func file_pkg_metrics_proto_responses_register_metric_response_proto_init() {
	if File_pkg_metrics_proto_responses_register_metric_response_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_responses_register_metric_response_proto_rawDesc), len(file_pkg_metrics_proto_responses_register_metric_response_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_responses_register_metric_response_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_responses_register_metric_response_proto_depIdxs,
		EnumInfos:         file_pkg_metrics_proto_responses_register_metric_response_proto_enumTypes,
		MessageInfos:      file_pkg_metrics_proto_responses_register_metric_response_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_responses_register_metric_response_proto = out.File
	file_pkg_metrics_proto_responses_register_metric_response_proto_goTypes = nil
	file_pkg_metrics_proto_responses_register_metric_response_proto_depIdxs = nil
}
