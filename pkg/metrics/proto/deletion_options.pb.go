// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/metrics/proto/deletion_options.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// DeletionOptions configure the deletion process.
type DeletionOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to delete all associated data
	DeleteData *bool `protobuf:"varint,1,opt,name=delete_data,json=deleteData" json:"delete_data,omitempty"`
	// Whether to delete associated indices
	DeleteIndices *bool `protobuf:"varint,2,opt,name=delete_indices,json=deleteIndices" json:"delete_indices,omitempty"`
	// Whether to delete configuration backups
	DeleteBackups *bool `protobuf:"varint,3,opt,name=delete_backups,json=deleteBackups" json:"delete_backups,omitempty"`
	// Whether to stop all exports before deletion
	StopExports *bool `protobuf:"varint,4,opt,name=stop_exports,json=stopExports" json:"stop_exports,omitempty"`
	// Grace period before actual deletion
	GracePeriod *string `protobuf:"bytes,5,opt,name=grace_period,json=gracePeriod" json:"grace_period,omitempty"`
	// Whether to perform a dry run
	DryRun *bool `protobuf:"varint,6,opt,name=dry_run,json=dryRun" json:"dry_run,omitempty"`
	// Whether to force deletion even if provider is in use
	Force *bool `protobuf:"varint,7,opt,name=force" json:"force,omitempty"`
	// Whether to create a final backup before deletion
	CreateBackup *bool `protobuf:"varint,8,opt,name=create_backup,json=createBackup" json:"create_backup,omitempty"`
	// Cleanup strategy to use
	CleanupStrategy *CleanupStrategy `protobuf:"varint,9,opt,name=cleanup_strategy,json=cleanupStrategy,enum=gcommon.v1.metrics.CleanupStrategy" json:"cleanup_strategy,omitempty"`
	// Whether to wait for ongoing operations to complete
	WaitForCompletion *bool `protobuf:"varint,10,opt,name=wait_for_completion,json=waitForCompletion" json:"wait_for_completion,omitempty"`
	// Maximum time to wait for operations to complete
	CompletionTimeout *string `protobuf:"bytes,11,opt,name=completion_timeout,json=completionTimeout" json:"completion_timeout,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeletionOptions) Reset() {
	*x = DeletionOptions{}
	mi := &file_pkg_metrics_proto_deletion_options_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletionOptions) ProtoMessage() {}

func (x *DeletionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_metrics_proto_deletion_options_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletionOptions.ProtoReflect.Descriptor instead.
func (*DeletionOptions) Descriptor() ([]byte, []int) {
	return file_pkg_metrics_proto_deletion_options_proto_rawDescGZIP(), []int{0}
}

func (x *DeletionOptions) GetDeleteData() bool {
	if x != nil && x.DeleteData != nil {
		return *x.DeleteData
	}
	return false
}

func (x *DeletionOptions) GetDeleteIndices() bool {
	if x != nil && x.DeleteIndices != nil {
		return *x.DeleteIndices
	}
	return false
}

func (x *DeletionOptions) GetDeleteBackups() bool {
	if x != nil && x.DeleteBackups != nil {
		return *x.DeleteBackups
	}
	return false
}

func (x *DeletionOptions) GetStopExports() bool {
	if x != nil && x.StopExports != nil {
		return *x.StopExports
	}
	return false
}

func (x *DeletionOptions) GetGracePeriod() string {
	if x != nil && x.GracePeriod != nil {
		return *x.GracePeriod
	}
	return ""
}

func (x *DeletionOptions) GetDryRun() bool {
	if x != nil && x.DryRun != nil {
		return *x.DryRun
	}
	return false
}

func (x *DeletionOptions) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

func (x *DeletionOptions) GetCreateBackup() bool {
	if x != nil && x.CreateBackup != nil {
		return *x.CreateBackup
	}
	return false
}

func (x *DeletionOptions) GetCleanupStrategy() CleanupStrategy {
	if x != nil && x.CleanupStrategy != nil {
		return *x.CleanupStrategy
	}
	return CleanupStrategy_CLEANUP_STRATEGY_UNSPECIFIED
}

func (x *DeletionOptions) GetWaitForCompletion() bool {
	if x != nil && x.WaitForCompletion != nil {
		return *x.WaitForCompletion
	}
	return false
}

func (x *DeletionOptions) GetCompletionTimeout() string {
	if x != nil && x.CompletionTimeout != nil {
		return *x.CompletionTimeout
	}
	return ""
}

var File_pkg_metrics_proto_deletion_options_proto protoreflect.FileDescriptor

const file_pkg_metrics_proto_deletion_options_proto_rawDesc = "" +
	"\n" +
	"(pkg/metrics/proto/deletion_options.proto\x12\x12gcommon.v1.metrics\x1a(pkg/metrics/proto/cleanup_strategy.proto\"\xc9\x03\n" +
	"\x0fDeletionOptions\x12\x1f\n" +
	"\vdelete_data\x18\x01 \x01(\bR\n" +
	"deleteData\x12%\n" +
	"\x0edelete_indices\x18\x02 \x01(\bR\rdeleteIndices\x12%\n" +
	"\x0edelete_backups\x18\x03 \x01(\bR\rdeleteBackups\x12!\n" +
	"\fstop_exports\x18\x04 \x01(\bR\vstopExports\x12!\n" +
	"\fgrace_period\x18\x05 \x01(\tR\vgracePeriod\x12\x17\n" +
	"\adry_run\x18\x06 \x01(\bR\x06dryRun\x12\x14\n" +
	"\x05force\x18\a \x01(\bR\x05force\x12#\n" +
	"\rcreate_backup\x18\b \x01(\bR\fcreateBackup\x12N\n" +
	"\x10cleanup_strategy\x18\t \x01(\x0e2#.gcommon.v1.metrics.CleanupStrategyR\x0fcleanupStrategy\x12.\n" +
	"\x13wait_for_completion\x18\n" +
	" \x01(\bR\x11waitForCompletion\x12-\n" +
	"\x12completion_timeout\x18\v \x01(\tR\x11completionTimeoutB\xc5\x01\n" +
	"\x16com.gcommon.v1.metricsB\x14DeletionOptionsProtoP\x01Z+github.com/jdfalk/gcommon/pkg/metrics/proto\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metricsb\beditionsp\xe8\a"

var (
	file_pkg_metrics_proto_deletion_options_proto_rawDescOnce sync.Once
	file_pkg_metrics_proto_deletion_options_proto_rawDescData []byte
)

func file_pkg_metrics_proto_deletion_options_proto_rawDescGZIP() []byte {
	file_pkg_metrics_proto_deletion_options_proto_rawDescOnce.Do(func() {
		file_pkg_metrics_proto_deletion_options_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_deletion_options_proto_rawDesc), len(file_pkg_metrics_proto_deletion_options_proto_rawDesc)))
	})
	return file_pkg_metrics_proto_deletion_options_proto_rawDescData
}

var file_pkg_metrics_proto_deletion_options_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_metrics_proto_deletion_options_proto_goTypes = []any{
	(*DeletionOptions)(nil), // 0: gcommon.v1.metrics.DeletionOptions
	(CleanupStrategy)(0),    // 1: gcommon.v1.metrics.CleanupStrategy
}
var file_pkg_metrics_proto_deletion_options_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.metrics.DeletionOptions.cleanup_strategy:type_name -> gcommon.v1.metrics.CleanupStrategy
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_metrics_proto_deletion_options_proto_init() }
func file_pkg_metrics_proto_deletion_options_proto_init() {
	if File_pkg_metrics_proto_deletion_options_proto != nil {
		return
	}
	file_pkg_metrics_proto_cleanup_strategy_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_metrics_proto_deletion_options_proto_rawDesc), len(file_pkg_metrics_proto_deletion_options_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_metrics_proto_deletion_options_proto_goTypes,
		DependencyIndexes: file_pkg_metrics_proto_deletion_options_proto_depIdxs,
		MessageInfos:      file_pkg_metrics_proto_deletion_options_proto_msgTypes,
	}.Build()
	File_pkg_metrics_proto_deletion_options_proto = out.File
	file_pkg_metrics_proto_deletion_options_proto_goTypes = nil
	file_pkg_metrics_proto_deletion_options_proto_depIdxs = nil
}
