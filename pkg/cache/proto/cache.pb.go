// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: cache.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetRequest contains get request data
type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	TypeHint      string                 `protobuf:"bytes,2,opt,name=type_hint,json=typeHint,proto3" json:"type_hint,omitempty"` // Optional hint about the value type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_cache_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetRequest) GetTypeHint() string {
	if x != nil {
		return x.TypeHint
	}
	return ""
}

// GetResponse contains get response data
type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`    // Type information about the value
	Found         bool                   `protobuf:"varint,3,opt,name=found,proto3" json:"found,omitempty"` // Whether the key was found
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_cache_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{1}
}

func (x *GetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GetResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

// SetRequest contains set request data
type SetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Ttl           int64                  `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"` // Time-to-live in seconds
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetRequest) Reset() {
	*x = SetRequest{}
	mi := &file_cache_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequest) ProtoMessage() {}

func (x *SetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequest.ProtoReflect.Descriptor instead.
func (*SetRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{2}
}

func (x *SetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SetRequest) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *SetRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// SetResponse contains set response data
type SetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetResponse) Reset() {
	*x = SetResponse{}
	mi := &file_cache_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetResponse) ProtoMessage() {}

func (x *SetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetResponse.ProtoReflect.Descriptor instead.
func (*SetResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{3}
}

func (x *SetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// DeleteRequest contains delete request data
type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_cache_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// DeleteResponse contains delete response data
type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"` // Whether the key was found
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_cache_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

// ExistsRequest contains exists request data
type ExistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExistsRequest) Reset() {
	*x = ExistsRequest{}
	mi := &file_cache_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsRequest) ProtoMessage() {}

func (x *ExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsRequest.ProtoReflect.Descriptor instead.
func (*ExistsRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{6}
}

func (x *ExistsRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// ExistsResponse contains exists response data
type ExistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExistsResponse) Reset() {
	*x = ExistsResponse{}
	mi := &file_cache_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsResponse) ProtoMessage() {}

func (x *ExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsResponse.ProtoReflect.Descriptor instead.
func (*ExistsResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{7}
}

func (x *ExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// ClearRequest contains clear request data
type ClearRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefix        string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"` // Optional prefix to clear only matching keys
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearRequest) Reset() {
	*x = ClearRequest{}
	mi := &file_cache_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearRequest) ProtoMessage() {}

func (x *ClearRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearRequest.ProtoReflect.Descriptor instead.
func (*ClearRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{8}
}

func (x *ClearRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

// ClearResponse contains clear response data
type ClearResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeletedCount  int64                  `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearResponse) Reset() {
	*x = ClearResponse{}
	mi := &file_cache_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearResponse) ProtoMessage() {}

func (x *ClearResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearResponse.ProtoReflect.Descriptor instead.
func (*ClearResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{9}
}

func (x *ClearResponse) GetDeletedCount() int64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

// GetMultiRequest contains get multi request data
type GetMultiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	TypeHint      string                 `protobuf:"bytes,2,opt,name=type_hint,json=typeHint,proto3" json:"type_hint,omitempty"` // Optional hint about the value type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMultiRequest) Reset() {
	*x = GetMultiRequest{}
	mi := &file_cache_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiRequest) ProtoMessage() {}

func (x *GetMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultiRequest.ProtoReflect.Descriptor instead.
func (*GetMultiRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{10}
}

func (x *GetMultiRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *GetMultiRequest) GetTypeHint() string {
	if x != nil {
		return x.TypeHint
	}
	return ""
}

// GetMultiResponse contains get multi response data
type GetMultiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        map[string][]byte      `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Types         map[string]string      `protobuf:"bytes,2,rep,name=types,proto3" json:"types,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMultiResponse) Reset() {
	*x = GetMultiResponse{}
	mi := &file_cache_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiResponse) ProtoMessage() {}

func (x *GetMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultiResponse.ProtoReflect.Descriptor instead.
func (*GetMultiResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{11}
}

func (x *GetMultiResponse) GetValues() map[string][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *GetMultiResponse) GetTypes() map[string]string {
	if x != nil {
		return x.Types
	}
	return nil
}

// SetMultiRequest contains set multi request data
type SetMultiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         map[string][]byte      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Ttl           int64                  `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"` // Time-to-live in seconds
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMultiRequest) Reset() {
	*x = SetMultiRequest{}
	mi := &file_cache_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMultiRequest) ProtoMessage() {}

func (x *SetMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMultiRequest.ProtoReflect.Descriptor instead.
func (*SetMultiRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{12}
}

func (x *SetMultiRequest) GetItems() map[string][]byte {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SetMultiRequest) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *SetMultiRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// SetMultiResponse contains set multi response data
type SetMultiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       map[string]bool        `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMultiResponse) Reset() {
	*x = SetMultiResponse{}
	mi := &file_cache_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMultiResponse) ProtoMessage() {}

func (x *SetMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMultiResponse.ProtoReflect.Descriptor instead.
func (*SetMultiResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{13}
}

func (x *SetMultiResponse) GetResults() map[string]bool {
	if x != nil {
		return x.Results
	}
	return nil
}

// DeleteMultiRequest contains delete multi request data
type DeleteMultiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMultiRequest) Reset() {
	*x = DeleteMultiRequest{}
	mi := &file_cache_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMultiRequest) ProtoMessage() {}

func (x *DeleteMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMultiRequest.ProtoReflect.Descriptor instead.
func (*DeleteMultiRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteMultiRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

// DeleteMultiResponse contains delete multi response data
type DeleteMultiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       map[string]bool        `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	DeletedCount  int64                  `protobuf:"varint,2,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMultiResponse) Reset() {
	*x = DeleteMultiResponse{}
	mi := &file_cache_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMultiResponse) ProtoMessage() {}

func (x *DeleteMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMultiResponse.ProtoReflect.Descriptor instead.
func (*DeleteMultiResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteMultiResponse) GetResults() map[string]bool {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *DeleteMultiResponse) GetDeletedCount() int64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

// IncrementRequest contains increment request data
type IncrementRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Delta         int64                  `protobuf:"varint,2,opt,name=delta,proto3" json:"delta,omitempty"`
	Initial       int64                  `protobuf:"varint,3,opt,name=initial,proto3" json:"initial,omitempty"` // Initial value if key doesn't exist
	Ttl           int64                  `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`         // Time-to-live in seconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncrementRequest) Reset() {
	*x = IncrementRequest{}
	mi := &file_cache_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncrementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementRequest) ProtoMessage() {}

func (x *IncrementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementRequest.ProtoReflect.Descriptor instead.
func (*IncrementRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{16}
}

func (x *IncrementRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *IncrementRequest) GetDelta() int64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *IncrementRequest) GetInitial() int64 {
	if x != nil {
		return x.Initial
	}
	return 0
}

func (x *IncrementRequest) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// IncrementResponse contains increment response data
type IncrementResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int64                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncrementResponse) Reset() {
	*x = IncrementResponse{}
	mi := &file_cache_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncrementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementResponse) ProtoMessage() {}

func (x *IncrementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementResponse.ProtoReflect.Descriptor instead.
func (*IncrementResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{17}
}

func (x *IncrementResponse) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *IncrementResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// DecrementRequest contains decrement request data
type DecrementRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Delta         int64                  `protobuf:"varint,2,opt,name=delta,proto3" json:"delta,omitempty"`
	Initial       int64                  `protobuf:"varint,3,opt,name=initial,proto3" json:"initial,omitempty"` // Initial value if key doesn't exist
	Ttl           int64                  `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`         // Time-to-live in seconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecrementRequest) Reset() {
	*x = DecrementRequest{}
	mi := &file_cache_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecrementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecrementRequest) ProtoMessage() {}

func (x *DecrementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecrementRequest.ProtoReflect.Descriptor instead.
func (*DecrementRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{18}
}

func (x *DecrementRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DecrementRequest) GetDelta() int64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *DecrementRequest) GetInitial() int64 {
	if x != nil {
		return x.Initial
	}
	return 0
}

func (x *DecrementRequest) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// DecrementResponse contains decrement response data
type DecrementResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int64                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecrementResponse) Reset() {
	*x = DecrementResponse{}
	mi := &file_cache_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecrementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecrementResponse) ProtoMessage() {}

func (x *DecrementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecrementResponse.ProtoReflect.Descriptor instead.
func (*DecrementResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{19}
}

func (x *DecrementResponse) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *DecrementResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// StatsRequest contains stats request data
type StatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsRequest) Reset() {
	*x = StatsRequest{}
	mi := &file_cache_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRequest) ProtoMessage() {}

func (x *StatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRequest.ProtoReflect.Descriptor instead.
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{20}
}

// StatsResponse contains stats response data
type StatsResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Hits              int64                  `protobuf:"varint,1,opt,name=hits,proto3" json:"hits,omitempty"`
	Misses            int64                  `protobuf:"varint,2,opt,name=misses,proto3" json:"misses,omitempty"`
	Size              int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	ItemsCount        int64                  `protobuf:"varint,4,opt,name=items_count,json=itemsCount,proto3" json:"items_count,omitempty"`
	Evictions         int64                  `protobuf:"varint,5,opt,name=evictions,proto3" json:"evictions,omitempty"`
	Expirations       int64                  `protobuf:"varint,6,opt,name=expirations,proto3" json:"expirations,omitempty"`
	Errors            int64                  `protobuf:"varint,7,opt,name=errors,proto3" json:"errors,omitempty"`
	HitRate           float64                `protobuf:"fixed64,8,opt,name=hit_rate,json=hitRate,proto3" json:"hit_rate,omitempty"`
	AverageLoadTimeNs int64                  `protobuf:"varint,9,opt,name=average_load_time_ns,json=averageLoadTimeNs,proto3" json:"average_load_time_ns,omitempty"` // In nanoseconds
	AverageGetTimeNs  int64                  `protobuf:"varint,10,opt,name=average_get_time_ns,json=averageGetTimeNs,proto3" json:"average_get_time_ns,omitempty"`   // In nanoseconds
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	mi := &file_cache_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{21}
}

func (x *StatsResponse) GetHits() int64 {
	if x != nil {
		return x.Hits
	}
	return 0
}

func (x *StatsResponse) GetMisses() int64 {
	if x != nil {
		return x.Misses
	}
	return 0
}

func (x *StatsResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *StatsResponse) GetItemsCount() int64 {
	if x != nil {
		return x.ItemsCount
	}
	return 0
}

func (x *StatsResponse) GetEvictions() int64 {
	if x != nil {
		return x.Evictions
	}
	return 0
}

func (x *StatsResponse) GetExpirations() int64 {
	if x != nil {
		return x.Expirations
	}
	return 0
}

func (x *StatsResponse) GetErrors() int64 {
	if x != nil {
		return x.Errors
	}
	return 0
}

func (x *StatsResponse) GetHitRate() float64 {
	if x != nil {
		return x.HitRate
	}
	return 0
}

func (x *StatsResponse) GetAverageLoadTimeNs() int64 {
	if x != nil {
		return x.AverageLoadTimeNs
	}
	return 0
}

func (x *StatsResponse) GetAverageGetTimeNs() int64 {
	if x != nil {
		return x.AverageGetTimeNs
	}
	return 0
}

var File_cache_proto protoreflect.FileDescriptor

const file_cache_proto_rawDesc = "" +
	"\n" +
	"\vcache.proto\x12\x05cache\";\n" +
	"\n" +
	"GetRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1b\n" +
	"\ttype_hint\x18\x02 \x01(\tR\btypeHint\"M\n" +
	"\vGetResponse\x12\x14\n" +
	"\x05value\x18\x01 \x01(\fR\x05value\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x14\n" +
	"\x05found\x18\x03 \x01(\bR\x05found\"Z\n" +
	"\n" +
	"SetRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x10\n" +
	"\x03ttl\x18\x03 \x01(\x03R\x03ttl\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\"'\n" +
	"\vSetResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"!\n" +
	"\rDeleteRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"@\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\"!\n" +
	"\rExistsRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"(\n" +
	"\x0eExistsResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\"&\n" +
	"\fClearRequest\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\"4\n" +
	"\rClearResponse\x12#\n" +
	"\rdeleted_count\x18\x01 \x01(\x03R\fdeletedCount\"B\n" +
	"\x0fGetMultiRequest\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\x12\x1b\n" +
	"\ttype_hint\x18\x02 \x01(\tR\btypeHint\"\xfe\x01\n" +
	"\x10GetMultiResponse\x12;\n" +
	"\x06values\x18\x01 \x03(\v2#.cache.GetMultiResponse.ValuesEntryR\x06values\x128\n" +
	"\x05types\x18\x02 \x03(\v2\".cache.GetMultiResponse.TypesEntryR\x05types\x1a9\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1a8\n" +
	"\n" +
	"TypesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaa\x01\n" +
	"\x0fSetMultiRequest\x127\n" +
	"\x05items\x18\x01 \x03(\v2!.cache.SetMultiRequest.ItemsEntryR\x05items\x12\x10\n" +
	"\x03ttl\x18\x02 \x01(\x03R\x03ttl\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x1a8\n" +
	"\n" +
	"ItemsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"\x8e\x01\n" +
	"\x10SetMultiResponse\x12>\n" +
	"\aresults\x18\x01 \x03(\v2$.cache.SetMultiResponse.ResultsEntryR\aresults\x1a:\n" +
	"\fResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"(\n" +
	"\x12DeleteMultiRequest\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\"\xb9\x01\n" +
	"\x13DeleteMultiResponse\x12A\n" +
	"\aresults\x18\x01 \x03(\v2'.cache.DeleteMultiResponse.ResultsEntryR\aresults\x12#\n" +
	"\rdeleted_count\x18\x02 \x01(\x03R\fdeletedCount\x1a:\n" +
	"\fResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"f\n" +
	"\x10IncrementRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05delta\x18\x02 \x01(\x03R\x05delta\x12\x18\n" +
	"\ainitial\x18\x03 \x01(\x03R\ainitial\x12\x10\n" +
	"\x03ttl\x18\x04 \x01(\x03R\x03ttl\"C\n" +
	"\x11IncrementResponse\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x03R\x05value\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"f\n" +
	"\x10DecrementRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05delta\x18\x02 \x01(\x03R\x05delta\x12\x18\n" +
	"\ainitial\x18\x03 \x01(\x03R\ainitial\x12\x10\n" +
	"\x03ttl\x18\x04 \x01(\x03R\x03ttl\"C\n" +
	"\x11DecrementResponse\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x03R\x05value\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"\x0e\n" +
	"\fStatsRequest\"\xc3\x02\n" +
	"\rStatsResponse\x12\x12\n" +
	"\x04hits\x18\x01 \x01(\x03R\x04hits\x12\x16\n" +
	"\x06misses\x18\x02 \x01(\x03R\x06misses\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x1f\n" +
	"\vitems_count\x18\x04 \x01(\x03R\n" +
	"itemsCount\x12\x1c\n" +
	"\tevictions\x18\x05 \x01(\x03R\tevictions\x12 \n" +
	"\vexpirations\x18\x06 \x01(\x03R\vexpirations\x12\x16\n" +
	"\x06errors\x18\a \x01(\x03R\x06errors\x12\x19\n" +
	"\bhit_rate\x18\b \x01(\x01R\ahitRate\x12/\n" +
	"\x14average_load_time_ns\x18\t \x01(\x03R\x11averageLoadTimeNs\x12-\n" +
	"\x13average_get_time_ns\x18\n" +
	" \x01(\x03R\x10averageGetTimeNs2\x80\x05\n" +
	"\fCacheService\x12,\n" +
	"\x03Get\x12\x11.cache.GetRequest\x1a\x12.cache.GetResponse\x12,\n" +
	"\x03Set\x12\x11.cache.SetRequest\x1a\x12.cache.SetResponse\x125\n" +
	"\x06Delete\x12\x14.cache.DeleteRequest\x1a\x15.cache.DeleteResponse\x125\n" +
	"\x06Exists\x12\x14.cache.ExistsRequest\x1a\x15.cache.ExistsResponse\x122\n" +
	"\x05Clear\x12\x13.cache.ClearRequest\x1a\x14.cache.ClearResponse\x12;\n" +
	"\bGetMulti\x12\x16.cache.GetMultiRequest\x1a\x17.cache.GetMultiResponse\x12;\n" +
	"\bSetMulti\x12\x16.cache.SetMultiRequest\x1a\x17.cache.SetMultiResponse\x12D\n" +
	"\vDeleteMulti\x12\x19.cache.DeleteMultiRequest\x1a\x1a.cache.DeleteMultiResponse\x12>\n" +
	"\tIncrement\x12\x17.cache.IncrementRequest\x1a\x18.cache.IncrementResponse\x12>\n" +
	"\tDecrement\x12\x17.cache.DecrementRequest\x1a\x18.cache.DecrementResponse\x122\n" +
	"\x05Stats\x12\x13.cache.StatsRequest\x1a\x14.cache.StatsResponseB+Z)github.com/jdfalk/gcommon/pkg/cache/protob\x06proto3"

var (
	file_cache_proto_rawDescOnce sync.Once
	file_cache_proto_rawDescData []byte
)

func file_cache_proto_rawDescGZIP() []byte {
	file_cache_proto_rawDescOnce.Do(func() {
		file_cache_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cache_proto_rawDesc), len(file_cache_proto_rawDesc)))
	})
	return file_cache_proto_rawDescData
}

var file_cache_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_cache_proto_goTypes = []any{
	(*GetRequest)(nil),          // 0: cache.GetRequest
	(*GetResponse)(nil),         // 1: cache.GetResponse
	(*SetRequest)(nil),          // 2: cache.SetRequest
	(*SetResponse)(nil),         // 3: cache.SetResponse
	(*DeleteRequest)(nil),       // 4: cache.DeleteRequest
	(*DeleteResponse)(nil),      // 5: cache.DeleteResponse
	(*ExistsRequest)(nil),       // 6: cache.ExistsRequest
	(*ExistsResponse)(nil),      // 7: cache.ExistsResponse
	(*ClearRequest)(nil),        // 8: cache.ClearRequest
	(*ClearResponse)(nil),       // 9: cache.ClearResponse
	(*GetMultiRequest)(nil),     // 10: cache.GetMultiRequest
	(*GetMultiResponse)(nil),    // 11: cache.GetMultiResponse
	(*SetMultiRequest)(nil),     // 12: cache.SetMultiRequest
	(*SetMultiResponse)(nil),    // 13: cache.SetMultiResponse
	(*DeleteMultiRequest)(nil),  // 14: cache.DeleteMultiRequest
	(*DeleteMultiResponse)(nil), // 15: cache.DeleteMultiResponse
	(*IncrementRequest)(nil),    // 16: cache.IncrementRequest
	(*IncrementResponse)(nil),   // 17: cache.IncrementResponse
	(*DecrementRequest)(nil),    // 18: cache.DecrementRequest
	(*DecrementResponse)(nil),   // 19: cache.DecrementResponse
	(*StatsRequest)(nil),        // 20: cache.StatsRequest
	(*StatsResponse)(nil),       // 21: cache.StatsResponse
	nil,                         // 22: cache.GetMultiResponse.ValuesEntry
	nil,                         // 23: cache.GetMultiResponse.TypesEntry
	nil,                         // 24: cache.SetMultiRequest.ItemsEntry
	nil,                         // 25: cache.SetMultiResponse.ResultsEntry
	nil,                         // 26: cache.DeleteMultiResponse.ResultsEntry
}
var file_cache_proto_depIdxs = []int32{
	22, // 0: cache.GetMultiResponse.values:type_name -> cache.GetMultiResponse.ValuesEntry
	23, // 1: cache.GetMultiResponse.types:type_name -> cache.GetMultiResponse.TypesEntry
	24, // 2: cache.SetMultiRequest.items:type_name -> cache.SetMultiRequest.ItemsEntry
	25, // 3: cache.SetMultiResponse.results:type_name -> cache.SetMultiResponse.ResultsEntry
	26, // 4: cache.DeleteMultiResponse.results:type_name -> cache.DeleteMultiResponse.ResultsEntry
	0,  // 5: cache.CacheService.Get:input_type -> cache.GetRequest
	2,  // 6: cache.CacheService.Set:input_type -> cache.SetRequest
	4,  // 7: cache.CacheService.Delete:input_type -> cache.DeleteRequest
	6,  // 8: cache.CacheService.Exists:input_type -> cache.ExistsRequest
	8,  // 9: cache.CacheService.Clear:input_type -> cache.ClearRequest
	10, // 10: cache.CacheService.GetMulti:input_type -> cache.GetMultiRequest
	12, // 11: cache.CacheService.SetMulti:input_type -> cache.SetMultiRequest
	14, // 12: cache.CacheService.DeleteMulti:input_type -> cache.DeleteMultiRequest
	16, // 13: cache.CacheService.Increment:input_type -> cache.IncrementRequest
	18, // 14: cache.CacheService.Decrement:input_type -> cache.DecrementRequest
	20, // 15: cache.CacheService.Stats:input_type -> cache.StatsRequest
	1,  // 16: cache.CacheService.Get:output_type -> cache.GetResponse
	3,  // 17: cache.CacheService.Set:output_type -> cache.SetResponse
	5,  // 18: cache.CacheService.Delete:output_type -> cache.DeleteResponse
	7,  // 19: cache.CacheService.Exists:output_type -> cache.ExistsResponse
	9,  // 20: cache.CacheService.Clear:output_type -> cache.ClearResponse
	11, // 21: cache.CacheService.GetMulti:output_type -> cache.GetMultiResponse
	13, // 22: cache.CacheService.SetMulti:output_type -> cache.SetMultiResponse
	15, // 23: cache.CacheService.DeleteMulti:output_type -> cache.DeleteMultiResponse
	17, // 24: cache.CacheService.Increment:output_type -> cache.IncrementResponse
	19, // 25: cache.CacheService.Decrement:output_type -> cache.DecrementResponse
	21, // 26: cache.CacheService.Stats:output_type -> cache.StatsResponse
	16, // [16:27] is the sub-list for method output_type
	5,  // [5:16] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_cache_proto_init() }
func file_cache_proto_init() {
	if File_cache_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cache_proto_rawDesc), len(file_cache_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cache_proto_goTypes,
		DependencyIndexes: file_cache_proto_depIdxs,
		MessageInfos:      file_cache_proto_msgTypes,
	}.Build()
	File_cache_proto = out.File
	file_cache_proto_goTypes = nil
	file_cache_proto_depIdxs = nil
}
