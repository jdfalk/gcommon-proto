// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/organization/proto/types/tenant_isolation.proto

//go:build protoopaque

package organizationpb

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// TenantIsolation type defining the isolation configuration for a tenant.
// Specifies how tenant data and resources are separated from other tenants.
type TenantIsolation struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TenantId      *string                `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId"`
	xxx_hidden_Level         IsolationLevel         `protobuf:"varint,2,opt,name=level,enum=gcommon.v1.organization.IsolationLevel"`
	xxx_hidden_Database      *DatabaseIsolation     `protobuf:"bytes,3,opt,name=database"`
	xxx_hidden_Network       *NetworkIsolation      `protobuf:"bytes,4,opt,name=network"`
	xxx_hidden_Storage       *StorageIsolation      `protobuf:"bytes,5,opt,name=storage"`
	xxx_hidden_Compute       *ComputeIsolation      `protobuf:"bytes,6,opt,name=compute"`
	xxx_hidden_Encryption    *EncryptionConfig      `protobuf:"bytes,7,opt,name=encryption"`
	xxx_hidden_AccessControl *AccessControl         `protobuf:"bytes,8,opt,name=access_control,json=accessControl"`
	xxx_hidden_Audit         *AuditConfig           `protobuf:"bytes,9,opt,name=audit"`
	xxx_hidden_Metadata      *[]*proto.KeyValue     `protobuf:"bytes,10,rep,name=metadata"`
	xxx_hidden_CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt"`
	xxx_hidden_UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt"`
	xxx_hidden_ConfiguredBy  *string                `protobuf:"bytes,13,opt,name=configured_by,json=configuredBy"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TenantIsolation) Reset() {
	*x = TenantIsolation{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantIsolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantIsolation) ProtoMessage() {}

func (x *TenantIsolation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TenantIsolation) GetTenantId() string {
	if x != nil {
		if x.xxx_hidden_TenantId != nil {
			return *x.xxx_hidden_TenantId
		}
		return ""
	}
	return ""
}

func (x *TenantIsolation) GetLevel() IsolationLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Level
		}
	}
	return IsolationLevel_ISOLATION_LEVEL_UNSPECIFIED
}

func (x *TenantIsolation) GetDatabase() *DatabaseIsolation {
	if x != nil {
		return x.xxx_hidden_Database
	}
	return nil
}

func (x *TenantIsolation) GetNetwork() *NetworkIsolation {
	if x != nil {
		return x.xxx_hidden_Network
	}
	return nil
}

func (x *TenantIsolation) GetStorage() *StorageIsolation {
	if x != nil {
		return x.xxx_hidden_Storage
	}
	return nil
}

func (x *TenantIsolation) GetCompute() *ComputeIsolation {
	if x != nil {
		return x.xxx_hidden_Compute
	}
	return nil
}

func (x *TenantIsolation) GetEncryption() *EncryptionConfig {
	if x != nil {
		return x.xxx_hidden_Encryption
	}
	return nil
}

func (x *TenantIsolation) GetAccessControl() *AccessControl {
	if x != nil {
		return x.xxx_hidden_AccessControl
	}
	return nil
}

func (x *TenantIsolation) GetAudit() *AuditConfig {
	if x != nil {
		return x.xxx_hidden_Audit
	}
	return nil
}

func (x *TenantIsolation) GetMetadata() []*proto.KeyValue {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 9) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Metadata) {
				protoimpl.X.UnmarshalField(x, 10)
			}
			var rv *[]*proto.KeyValue
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&rv))
			return *rv
		}
	}
	return nil
}

func (x *TenantIsolation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 10) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_CreatedAt) {
				protoimpl.X.UnmarshalField(x, 11)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_CreatedAt), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *TenantIsolation) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 11) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_UpdatedAt) {
				protoimpl.X.UnmarshalField(x, 12)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_UpdatedAt), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *TenantIsolation) GetConfiguredBy() string {
	if x != nil {
		if x.xxx_hidden_ConfiguredBy != nil {
			return *x.xxx_hidden_ConfiguredBy
		}
		return ""
	}
	return ""
}

func (x *TenantIsolation) SetTenantId(v string) {
	x.xxx_hidden_TenantId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 13)
}

func (x *TenantIsolation) SetLevel(v IsolationLevel) {
	x.xxx_hidden_Level = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 13)
}

func (x *TenantIsolation) SetDatabase(v *DatabaseIsolation) {
	x.xxx_hidden_Database = v
}

func (x *TenantIsolation) SetNetwork(v *NetworkIsolation) {
	x.xxx_hidden_Network = v
}

func (x *TenantIsolation) SetStorage(v *StorageIsolation) {
	x.xxx_hidden_Storage = v
}

func (x *TenantIsolation) SetCompute(v *ComputeIsolation) {
	x.xxx_hidden_Compute = v
}

func (x *TenantIsolation) SetEncryption(v *EncryptionConfig) {
	x.xxx_hidden_Encryption = v
}

func (x *TenantIsolation) SetAccessControl(v *AccessControl) {
	x.xxx_hidden_AccessControl = v
}

func (x *TenantIsolation) SetAudit(v *AuditConfig) {
	x.xxx_hidden_Audit = v
}

func (x *TenantIsolation) SetMetadata(v []*proto.KeyValue) {
	var sv *[]*proto.KeyValue
	protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&sv))
	if sv == nil {
		sv = &[]*proto.KeyValue{}
		protoimpl.X.AtomicInitializePointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&sv))
	}
	*sv = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 13)
}

func (x *TenantIsolation) SetCreatedAt(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CreatedAt, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 13)
	}
}

func (x *TenantIsolation) SetUpdatedAt(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_UpdatedAt, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 13)
	}
}

func (x *TenantIsolation) SetConfiguredBy(v string) {
	x.xxx_hidden_ConfiguredBy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 13)
}

func (x *TenantIsolation) HasTenantId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TenantIsolation) HasLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TenantIsolation) HasDatabase() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Database != nil
}

func (x *TenantIsolation) HasNetwork() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Network != nil
}

func (x *TenantIsolation) HasStorage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Storage != nil
}

func (x *TenantIsolation) HasCompute() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Compute != nil
}

func (x *TenantIsolation) HasEncryption() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Encryption != nil
}

func (x *TenantIsolation) HasAccessControl() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AccessControl != nil
}

func (x *TenantIsolation) HasAudit() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Audit != nil
}

func (x *TenantIsolation) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *TenantIsolation) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *TenantIsolation) HasConfiguredBy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *TenantIsolation) ClearTenantId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TenantId = nil
}

func (x *TenantIsolation) ClearLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Level = IsolationLevel_ISOLATION_LEVEL_UNSPECIFIED
}

func (x *TenantIsolation) ClearDatabase() {
	x.xxx_hidden_Database = nil
}

func (x *TenantIsolation) ClearNetwork() {
	x.xxx_hidden_Network = nil
}

func (x *TenantIsolation) ClearStorage() {
	x.xxx_hidden_Storage = nil
}

func (x *TenantIsolation) ClearCompute() {
	x.xxx_hidden_Compute = nil
}

func (x *TenantIsolation) ClearEncryption() {
	x.xxx_hidden_Encryption = nil
}

func (x *TenantIsolation) ClearAccessControl() {
	x.xxx_hidden_AccessControl = nil
}

func (x *TenantIsolation) ClearAudit() {
	x.xxx_hidden_Audit = nil
}

func (x *TenantIsolation) ClearCreatedAt() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CreatedAt, (*timestamppb.Timestamp)(nil))
}

func (x *TenantIsolation) ClearUpdatedAt() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_UpdatedAt, (*timestamppb.Timestamp)(nil))
}

func (x *TenantIsolation) ClearConfiguredBy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_ConfiguredBy = nil
}

type TenantIsolation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Tenant identifier
	TenantId *string
	// Isolation level for this tenant
	Level *IsolationLevel
	// Database isolation configuration
	Database *DatabaseIsolation
	// Network isolation configuration
	Network *NetworkIsolation
	// Storage isolation configuration
	Storage *StorageIsolation
	// Compute isolation configuration
	Compute *ComputeIsolation
	// Encryption configuration for tenant data
	Encryption *EncryptionConfig
	// Access control configuration
	AccessControl *AccessControl
	// Audit and compliance configuration
	Audit *AuditConfig
	// Isolation metadata and custom settings
	Metadata []*proto.KeyValue
	// Isolation configuration creation timestamp
	CreatedAt *timestamppb.Timestamp
	// Last update timestamp
	UpdatedAt *timestamppb.Timestamp
	// User ID who configured this isolation
	ConfiguredBy *string
}

func (b0 TenantIsolation_builder) Build() *TenantIsolation {
	m0 := &TenantIsolation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TenantId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 13)
		x.xxx_hidden_TenantId = b.TenantId
	}
	if b.Level != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 13)
		x.xxx_hidden_Level = *b.Level
	}
	x.xxx_hidden_Database = b.Database
	x.xxx_hidden_Network = b.Network
	x.xxx_hidden_Storage = b.Storage
	x.xxx_hidden_Compute = b.Compute
	x.xxx_hidden_Encryption = b.Encryption
	x.xxx_hidden_AccessControl = b.AccessControl
	x.xxx_hidden_Audit = b.Audit
	if b.Metadata != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 13)
		x.xxx_hidden_Metadata = &b.Metadata
	}
	if b.CreatedAt != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 13)
		x.xxx_hidden_CreatedAt = b.CreatedAt
	}
	if b.UpdatedAt != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 13)
		x.xxx_hidden_UpdatedAt = b.UpdatedAt
	}
	if b.ConfiguredBy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 13)
		x.xxx_hidden_ConfiguredBy = b.ConfiguredBy
	}
	return m0
}

// *
// DatabaseIsolation type defining database-level isolation for a tenant.
type DatabaseIsolation struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DatabaseInstance    *string                `protobuf:"bytes,1,opt,name=database_instance,json=databaseInstance"`
	xxx_hidden_SchemaName          *string                `protobuf:"bytes,2,opt,name=schema_name,json=schemaName"`
	xxx_hidden_ConnectionParams    *[]*proto.KeyValue     `protobuf:"bytes,3,rep,name=connection_params,json=connectionParams"`
	xxx_hidden_DedicatedDatabase   bool                   `protobuf:"varint,4,opt,name=dedicated_database,json=dedicatedDatabase"`
	xxx_hidden_Backup              *BackupConfig          `protobuf:"bytes,5,opt,name=backup"`
	xxx_hidden_AllowedOperations   []string               `protobuf:"bytes,6,rep,name=allowed_operations,json=allowedOperations"`
	xxx_hidden_MaxConnections      int32                  `protobuf:"varint,7,opt,name=max_connections,json=maxConnections"`
	xxx_hidden_QueryTimeoutSeconds int32                  `protobuf:"varint,8,opt,name=query_timeout_seconds,json=queryTimeoutSeconds"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DatabaseIsolation) Reset() {
	*x = DatabaseIsolation{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseIsolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseIsolation) ProtoMessage() {}

func (x *DatabaseIsolation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DatabaseIsolation) GetDatabaseInstance() string {
	if x != nil {
		if x.xxx_hidden_DatabaseInstance != nil {
			return *x.xxx_hidden_DatabaseInstance
		}
		return ""
	}
	return ""
}

func (x *DatabaseIsolation) GetSchemaName() string {
	if x != nil {
		if x.xxx_hidden_SchemaName != nil {
			return *x.xxx_hidden_SchemaName
		}
		return ""
	}
	return ""
}

func (x *DatabaseIsolation) GetConnectionParams() []*proto.KeyValue {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_ConnectionParams) {
				protoimpl.X.UnmarshalField(x, 3)
			}
			var rv *[]*proto.KeyValue
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_ConnectionParams), protoimpl.Pointer(&rv))
			return *rv
		}
	}
	return nil
}

func (x *DatabaseIsolation) GetDedicatedDatabase() bool {
	if x != nil {
		return x.xxx_hidden_DedicatedDatabase
	}
	return false
}

func (x *DatabaseIsolation) GetBackup() *BackupConfig {
	if x != nil {
		return x.xxx_hidden_Backup
	}
	return nil
}

func (x *DatabaseIsolation) GetAllowedOperations() []string {
	if x != nil {
		return x.xxx_hidden_AllowedOperations
	}
	return nil
}

func (x *DatabaseIsolation) GetMaxConnections() int32 {
	if x != nil {
		return x.xxx_hidden_MaxConnections
	}
	return 0
}

func (x *DatabaseIsolation) GetQueryTimeoutSeconds() int32 {
	if x != nil {
		return x.xxx_hidden_QueryTimeoutSeconds
	}
	return 0
}

func (x *DatabaseIsolation) SetDatabaseInstance(v string) {
	x.xxx_hidden_DatabaseInstance = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *DatabaseIsolation) SetSchemaName(v string) {
	x.xxx_hidden_SchemaName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *DatabaseIsolation) SetConnectionParams(v []*proto.KeyValue) {
	var sv *[]*proto.KeyValue
	protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_ConnectionParams), protoimpl.Pointer(&sv))
	if sv == nil {
		sv = &[]*proto.KeyValue{}
		protoimpl.X.AtomicInitializePointer(protoimpl.Pointer(&x.xxx_hidden_ConnectionParams), protoimpl.Pointer(&sv))
	}
	*sv = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *DatabaseIsolation) SetDedicatedDatabase(v bool) {
	x.xxx_hidden_DedicatedDatabase = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *DatabaseIsolation) SetBackup(v *BackupConfig) {
	x.xxx_hidden_Backup = v
}

func (x *DatabaseIsolation) SetAllowedOperations(v []string) {
	x.xxx_hidden_AllowedOperations = v
}

func (x *DatabaseIsolation) SetMaxConnections(v int32) {
	x.xxx_hidden_MaxConnections = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *DatabaseIsolation) SetQueryTimeoutSeconds(v int32) {
	x.xxx_hidden_QueryTimeoutSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *DatabaseIsolation) HasDatabaseInstance() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DatabaseIsolation) HasSchemaName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DatabaseIsolation) HasDedicatedDatabase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DatabaseIsolation) HasBackup() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Backup != nil
}

func (x *DatabaseIsolation) HasMaxConnections() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *DatabaseIsolation) HasQueryTimeoutSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *DatabaseIsolation) ClearDatabaseInstance() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DatabaseInstance = nil
}

func (x *DatabaseIsolation) ClearSchemaName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SchemaName = nil
}

func (x *DatabaseIsolation) ClearDedicatedDatabase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DedicatedDatabase = false
}

func (x *DatabaseIsolation) ClearBackup() {
	x.xxx_hidden_Backup = nil
}

func (x *DatabaseIsolation) ClearMaxConnections() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_MaxConnections = 0
}

func (x *DatabaseIsolation) ClearQueryTimeoutSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_QueryTimeoutSeconds = 0
}

type DatabaseIsolation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Database instance identifier (for INFRASTRUCTURE isolation)
	DatabaseInstance *string
	// Schema or database name for this tenant
	SchemaName *string
	// Database connection parameters
	ConnectionParams []*proto.KeyValue
	// Whether tenant has dedicated database
	DedicatedDatabase *bool
	// Database backup configuration
	Backup *BackupConfig
	// Database access restrictions
	AllowedOperations []string
	// Maximum connections allowed for this tenant
	MaxConnections *int32
	// Query timeout in seconds
	QueryTimeoutSeconds *int32
}

func (b0 DatabaseIsolation_builder) Build() *DatabaseIsolation {
	m0 := &DatabaseIsolation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DatabaseInstance != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_DatabaseInstance = b.DatabaseInstance
	}
	if b.SchemaName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_SchemaName = b.SchemaName
	}
	if b.ConnectionParams != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_ConnectionParams = &b.ConnectionParams
	}
	if b.DedicatedDatabase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_DedicatedDatabase = *b.DedicatedDatabase
	}
	x.xxx_hidden_Backup = b.Backup
	x.xxx_hidden_AllowedOperations = b.AllowedOperations
	if b.MaxConnections != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_MaxConnections = *b.MaxConnections
	}
	if b.QueryTimeoutSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_QueryTimeoutSeconds = *b.QueryTimeoutSeconds
	}
	return m0
}

// *
// NetworkIsolation type defining network-level isolation for a tenant.
type NetworkIsolation struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VpcId            *string                `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId"`
	xxx_hidden_SubnetId         *string                `protobuf:"bytes,2,opt,name=subnet_id,json=subnetId"`
	xxx_hidden_SecurityGroupIds []string               `protobuf:"bytes,3,rep,name=security_group_ids,json=securityGroupIds"`
	xxx_hidden_AclRules         *[]*NetworkACLRule     `protobuf:"bytes,4,rep,name=acl_rules,json=aclRules"`
	xxx_hidden_DedicatedNetwork bool                   `protobuf:"varint,5,opt,name=dedicated_network,json=dedicatedNetwork"`
	xxx_hidden_LoadBalancer     *LoadBalancerConfig    `protobuf:"bytes,6,opt,name=load_balancer,json=loadBalancer"`
	xxx_hidden_Cdn              *CDNConfig             `protobuf:"bytes,7,opt,name=cdn"`
	xxx_hidden_Domain           *DomainConfig          `protobuf:"bytes,8,opt,name=domain"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *NetworkIsolation) Reset() {
	*x = NetworkIsolation{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkIsolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkIsolation) ProtoMessage() {}

func (x *NetworkIsolation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkIsolation) GetVpcId() string {
	if x != nil {
		if x.xxx_hidden_VpcId != nil {
			return *x.xxx_hidden_VpcId
		}
		return ""
	}
	return ""
}

func (x *NetworkIsolation) GetSubnetId() string {
	if x != nil {
		if x.xxx_hidden_SubnetId != nil {
			return *x.xxx_hidden_SubnetId
		}
		return ""
	}
	return ""
}

func (x *NetworkIsolation) GetSecurityGroupIds() []string {
	if x != nil {
		return x.xxx_hidden_SecurityGroupIds
	}
	return nil
}

func (x *NetworkIsolation) GetAclRules() []*NetworkACLRule {
	if x != nil {
		if x.xxx_hidden_AclRules != nil {
			return *x.xxx_hidden_AclRules
		}
	}
	return nil
}

func (x *NetworkIsolation) GetDedicatedNetwork() bool {
	if x != nil {
		return x.xxx_hidden_DedicatedNetwork
	}
	return false
}

func (x *NetworkIsolation) GetLoadBalancer() *LoadBalancerConfig {
	if x != nil {
		return x.xxx_hidden_LoadBalancer
	}
	return nil
}

func (x *NetworkIsolation) GetCdn() *CDNConfig {
	if x != nil {
		return x.xxx_hidden_Cdn
	}
	return nil
}

func (x *NetworkIsolation) GetDomain() *DomainConfig {
	if x != nil {
		return x.xxx_hidden_Domain
	}
	return nil
}

func (x *NetworkIsolation) SetVpcId(v string) {
	x.xxx_hidden_VpcId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *NetworkIsolation) SetSubnetId(v string) {
	x.xxx_hidden_SubnetId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *NetworkIsolation) SetSecurityGroupIds(v []string) {
	x.xxx_hidden_SecurityGroupIds = v
}

func (x *NetworkIsolation) SetAclRules(v []*NetworkACLRule) {
	x.xxx_hidden_AclRules = &v
}

func (x *NetworkIsolation) SetDedicatedNetwork(v bool) {
	x.xxx_hidden_DedicatedNetwork = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *NetworkIsolation) SetLoadBalancer(v *LoadBalancerConfig) {
	x.xxx_hidden_LoadBalancer = v
}

func (x *NetworkIsolation) SetCdn(v *CDNConfig) {
	x.xxx_hidden_Cdn = v
}

func (x *NetworkIsolation) SetDomain(v *DomainConfig) {
	x.xxx_hidden_Domain = v
}

func (x *NetworkIsolation) HasVpcId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkIsolation) HasSubnetId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkIsolation) HasDedicatedNetwork() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *NetworkIsolation) HasLoadBalancer() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LoadBalancer != nil
}

func (x *NetworkIsolation) HasCdn() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cdn != nil
}

func (x *NetworkIsolation) HasDomain() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Domain != nil
}

func (x *NetworkIsolation) ClearVpcId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VpcId = nil
}

func (x *NetworkIsolation) ClearSubnetId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SubnetId = nil
}

func (x *NetworkIsolation) ClearDedicatedNetwork() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DedicatedNetwork = false
}

func (x *NetworkIsolation) ClearLoadBalancer() {
	x.xxx_hidden_LoadBalancer = nil
}

func (x *NetworkIsolation) ClearCdn() {
	x.xxx_hidden_Cdn = nil
}

func (x *NetworkIsolation) ClearDomain() {
	x.xxx_hidden_Domain = nil
}

type NetworkIsolation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Virtual private cloud (VPC) identifier
	VpcId *string
	// Subnet identifier for this tenant
	SubnetId *string
	// Security group identifiers
	SecurityGroupIds []string
	// Network access control list (ACL) rules
	AclRules []*NetworkACLRule
	// Whether tenant has dedicated network
	DedicatedNetwork *bool
	// Load balancer configuration for this tenant
	LoadBalancer *LoadBalancerConfig
	// CDN configuration for this tenant
	Cdn *CDNConfig
	// Custom domain configuration
	Domain *DomainConfig
}

func (b0 NetworkIsolation_builder) Build() *NetworkIsolation {
	m0 := &NetworkIsolation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VpcId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_VpcId = b.VpcId
	}
	if b.SubnetId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_SubnetId = b.SubnetId
	}
	x.xxx_hidden_SecurityGroupIds = b.SecurityGroupIds
	x.xxx_hidden_AclRules = &b.AclRules
	if b.DedicatedNetwork != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_DedicatedNetwork = *b.DedicatedNetwork
	}
	x.xxx_hidden_LoadBalancer = b.LoadBalancer
	x.xxx_hidden_Cdn = b.Cdn
	x.xxx_hidden_Domain = b.Domain
	return m0
}

// *
// StorageIsolation type defining storage-level isolation for a tenant.
type StorageIsolation struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_StorageBucket    *string                `protobuf:"bytes,1,opt,name=storage_bucket,json=storageBucket"`
	xxx_hidden_PathPrefix       *string                `protobuf:"bytes,2,opt,name=path_prefix,json=pathPrefix"`
	xxx_hidden_DedicatedStorage bool                   `protobuf:"varint,3,opt,name=dedicated_storage,json=dedicatedStorage"`
	xxx_hidden_Encryption       *StorageEncryption     `protobuf:"bytes,4,opt,name=encryption"`
	xxx_hidden_Policies         *[]*StoragePolicy      `protobuf:"bytes,5,rep,name=policies"`
	xxx_hidden_Backup           *StorageBackupConfig   `protobuf:"bytes,6,opt,name=backup"`
	xxx_hidden_Quota            *StorageQuota          `protobuf:"bytes,7,opt,name=quota"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *StorageIsolation) Reset() {
	*x = StorageIsolation{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageIsolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageIsolation) ProtoMessage() {}

func (x *StorageIsolation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StorageIsolation) GetStorageBucket() string {
	if x != nil {
		if x.xxx_hidden_StorageBucket != nil {
			return *x.xxx_hidden_StorageBucket
		}
		return ""
	}
	return ""
}

func (x *StorageIsolation) GetPathPrefix() string {
	if x != nil {
		if x.xxx_hidden_PathPrefix != nil {
			return *x.xxx_hidden_PathPrefix
		}
		return ""
	}
	return ""
}

func (x *StorageIsolation) GetDedicatedStorage() bool {
	if x != nil {
		return x.xxx_hidden_DedicatedStorage
	}
	return false
}

func (x *StorageIsolation) GetEncryption() *StorageEncryption {
	if x != nil {
		return x.xxx_hidden_Encryption
	}
	return nil
}

func (x *StorageIsolation) GetPolicies() []*StoragePolicy {
	if x != nil {
		if x.xxx_hidden_Policies != nil {
			return *x.xxx_hidden_Policies
		}
	}
	return nil
}

func (x *StorageIsolation) GetBackup() *StorageBackupConfig {
	if x != nil {
		return x.xxx_hidden_Backup
	}
	return nil
}

func (x *StorageIsolation) GetQuota() *StorageQuota {
	if x != nil {
		return x.xxx_hidden_Quota
	}
	return nil
}

func (x *StorageIsolation) SetStorageBucket(v string) {
	x.xxx_hidden_StorageBucket = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *StorageIsolation) SetPathPrefix(v string) {
	x.xxx_hidden_PathPrefix = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *StorageIsolation) SetDedicatedStorage(v bool) {
	x.xxx_hidden_DedicatedStorage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *StorageIsolation) SetEncryption(v *StorageEncryption) {
	x.xxx_hidden_Encryption = v
}

func (x *StorageIsolation) SetPolicies(v []*StoragePolicy) {
	x.xxx_hidden_Policies = &v
}

func (x *StorageIsolation) SetBackup(v *StorageBackupConfig) {
	x.xxx_hidden_Backup = v
}

func (x *StorageIsolation) SetQuota(v *StorageQuota) {
	x.xxx_hidden_Quota = v
}

func (x *StorageIsolation) HasStorageBucket() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StorageIsolation) HasPathPrefix() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StorageIsolation) HasDedicatedStorage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StorageIsolation) HasEncryption() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Encryption != nil
}

func (x *StorageIsolation) HasBackup() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Backup != nil
}

func (x *StorageIsolation) HasQuota() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Quota != nil
}

func (x *StorageIsolation) ClearStorageBucket() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_StorageBucket = nil
}

func (x *StorageIsolation) ClearPathPrefix() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PathPrefix = nil
}

func (x *StorageIsolation) ClearDedicatedStorage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DedicatedStorage = false
}

func (x *StorageIsolation) ClearEncryption() {
	x.xxx_hidden_Encryption = nil
}

func (x *StorageIsolation) ClearBackup() {
	x.xxx_hidden_Backup = nil
}

func (x *StorageIsolation) ClearQuota() {
	x.xxx_hidden_Quota = nil
}

type StorageIsolation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Storage bucket or container identifier
	StorageBucket *string
	// Storage path prefix for this tenant
	PathPrefix *string
	// Whether tenant has dedicated storage
	DedicatedStorage *bool
	// Storage encryption configuration
	Encryption *StorageEncryption
	// Storage access policies
	Policies []*StoragePolicy
	// Backup and replication configuration
	Backup *StorageBackupConfig
	// Storage quota limits
	Quota *StorageQuota
}

func (b0 StorageIsolation_builder) Build() *StorageIsolation {
	m0 := &StorageIsolation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.StorageBucket != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_StorageBucket = b.StorageBucket
	}
	if b.PathPrefix != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_PathPrefix = b.PathPrefix
	}
	if b.DedicatedStorage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_DedicatedStorage = *b.DedicatedStorage
	}
	x.xxx_hidden_Encryption = b.Encryption
	x.xxx_hidden_Policies = &b.Policies
	x.xxx_hidden_Backup = b.Backup
	x.xxx_hidden_Quota = b.Quota
	return m0
}

// *
// ComputeIsolation type defining compute-level isolation for a tenant.
type ComputeIsolation struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ComputeInstance  *string                `protobuf:"bytes,1,opt,name=compute_instance,json=computeInstance"`
	xxx_hidden_Namespace        *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_Cpu              *CPUAllocation         `protobuf:"bytes,3,opt,name=cpu"`
	xxx_hidden_Memory           *MemoryAllocation      `protobuf:"bytes,4,opt,name=memory"`
	xxx_hidden_DedicatedCompute bool                   `protobuf:"varint,5,opt,name=dedicated_compute,json=dedicatedCompute"`
	xxx_hidden_Limits           *ResourceLimits        `protobuf:"bytes,6,opt,name=limits"`
	xxx_hidden_AutoScaling      *AutoScalingConfig     `protobuf:"bytes,7,opt,name=auto_scaling,json=autoScaling"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ComputeIsolation) Reset() {
	*x = ComputeIsolation{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComputeIsolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeIsolation) ProtoMessage() {}

func (x *ComputeIsolation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComputeIsolation) GetComputeInstance() string {
	if x != nil {
		if x.xxx_hidden_ComputeInstance != nil {
			return *x.xxx_hidden_ComputeInstance
		}
		return ""
	}
	return ""
}

func (x *ComputeIsolation) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ComputeIsolation) GetCpu() *CPUAllocation {
	if x != nil {
		return x.xxx_hidden_Cpu
	}
	return nil
}

func (x *ComputeIsolation) GetMemory() *MemoryAllocation {
	if x != nil {
		return x.xxx_hidden_Memory
	}
	return nil
}

func (x *ComputeIsolation) GetDedicatedCompute() bool {
	if x != nil {
		return x.xxx_hidden_DedicatedCompute
	}
	return false
}

func (x *ComputeIsolation) GetLimits() *ResourceLimits {
	if x != nil {
		return x.xxx_hidden_Limits
	}
	return nil
}

func (x *ComputeIsolation) GetAutoScaling() *AutoScalingConfig {
	if x != nil {
		return x.xxx_hidden_AutoScaling
	}
	return nil
}

func (x *ComputeIsolation) SetComputeInstance(v string) {
	x.xxx_hidden_ComputeInstance = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *ComputeIsolation) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *ComputeIsolation) SetCpu(v *CPUAllocation) {
	x.xxx_hidden_Cpu = v
}

func (x *ComputeIsolation) SetMemory(v *MemoryAllocation) {
	x.xxx_hidden_Memory = v
}

func (x *ComputeIsolation) SetDedicatedCompute(v bool) {
	x.xxx_hidden_DedicatedCompute = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *ComputeIsolation) SetLimits(v *ResourceLimits) {
	x.xxx_hidden_Limits = v
}

func (x *ComputeIsolation) SetAutoScaling(v *AutoScalingConfig) {
	x.xxx_hidden_AutoScaling = v
}

func (x *ComputeIsolation) HasComputeInstance() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComputeIsolation) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComputeIsolation) HasCpu() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cpu != nil
}

func (x *ComputeIsolation) HasMemory() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Memory != nil
}

func (x *ComputeIsolation) HasDedicatedCompute() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComputeIsolation) HasLimits() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Limits != nil
}

func (x *ComputeIsolation) HasAutoScaling() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AutoScaling != nil
}

func (x *ComputeIsolation) ClearComputeInstance() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ComputeInstance = nil
}

func (x *ComputeIsolation) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *ComputeIsolation) ClearCpu() {
	x.xxx_hidden_Cpu = nil
}

func (x *ComputeIsolation) ClearMemory() {
	x.xxx_hidden_Memory = nil
}

func (x *ComputeIsolation) ClearDedicatedCompute() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DedicatedCompute = false
}

func (x *ComputeIsolation) ClearLimits() {
	x.xxx_hidden_Limits = nil
}

func (x *ComputeIsolation) ClearAutoScaling() {
	x.xxx_hidden_AutoScaling = nil
}

type ComputeIsolation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Dedicated compute instance identifier
	ComputeInstance *string
	// Container or namespace identifier
	Namespace *string
	// CPU allocation for this tenant
	Cpu *CPUAllocation
	// Memory allocation for this tenant
	Memory *MemoryAllocation
	// Whether tenant has dedicated compute resources
	DedicatedCompute *bool
	// Resource limits and quotas
	Limits *ResourceLimits
	// Auto-scaling configuration
	AutoScaling *AutoScalingConfig
}

func (b0 ComputeIsolation_builder) Build() *ComputeIsolation {
	m0 := &ComputeIsolation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ComputeInstance != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_ComputeInstance = b.ComputeInstance
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_Cpu = b.Cpu
	x.xxx_hidden_Memory = b.Memory
	if b.DedicatedCompute != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_DedicatedCompute = *b.DedicatedCompute
	}
	x.xxx_hidden_Limits = b.Limits
	x.xxx_hidden_AutoScaling = b.AutoScaling
	return m0
}

// *
// Supporting message types for isolation configuration.
type EncryptionConfig struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_EncryptionAtRest     bool                   `protobuf:"varint,1,opt,name=encryption_at_rest,json=encryptionAtRest"`
	xxx_hidden_EncryptionInTransit  bool                   `protobuf:"varint,2,opt,name=encryption_in_transit,json=encryptionInTransit"`
	xxx_hidden_KeyManagementService *string                `protobuf:"bytes,3,opt,name=key_management_service,json=keyManagementService"`
	xxx_hidden_CustomerKeyId        *string                `protobuf:"bytes,4,opt,name=customer_key_id,json=customerKeyId"`
	xxx_hidden_EncryptionAlgorithm  *string                `protobuf:"bytes,5,opt,name=encryption_algorithm,json=encryptionAlgorithm"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *EncryptionConfig) Reset() {
	*x = EncryptionConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionConfig) ProtoMessage() {}

func (x *EncryptionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EncryptionConfig) GetEncryptionAtRest() bool {
	if x != nil {
		return x.xxx_hidden_EncryptionAtRest
	}
	return false
}

func (x *EncryptionConfig) GetEncryptionInTransit() bool {
	if x != nil {
		return x.xxx_hidden_EncryptionInTransit
	}
	return false
}

func (x *EncryptionConfig) GetKeyManagementService() string {
	if x != nil {
		if x.xxx_hidden_KeyManagementService != nil {
			return *x.xxx_hidden_KeyManagementService
		}
		return ""
	}
	return ""
}

func (x *EncryptionConfig) GetCustomerKeyId() string {
	if x != nil {
		if x.xxx_hidden_CustomerKeyId != nil {
			return *x.xxx_hidden_CustomerKeyId
		}
		return ""
	}
	return ""
}

func (x *EncryptionConfig) GetEncryptionAlgorithm() string {
	if x != nil {
		if x.xxx_hidden_EncryptionAlgorithm != nil {
			return *x.xxx_hidden_EncryptionAlgorithm
		}
		return ""
	}
	return ""
}

func (x *EncryptionConfig) SetEncryptionAtRest(v bool) {
	x.xxx_hidden_EncryptionAtRest = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *EncryptionConfig) SetEncryptionInTransit(v bool) {
	x.xxx_hidden_EncryptionInTransit = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *EncryptionConfig) SetKeyManagementService(v string) {
	x.xxx_hidden_KeyManagementService = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *EncryptionConfig) SetCustomerKeyId(v string) {
	x.xxx_hidden_CustomerKeyId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *EncryptionConfig) SetEncryptionAlgorithm(v string) {
	x.xxx_hidden_EncryptionAlgorithm = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *EncryptionConfig) HasEncryptionAtRest() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EncryptionConfig) HasEncryptionInTransit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EncryptionConfig) HasKeyManagementService() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EncryptionConfig) HasCustomerKeyId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *EncryptionConfig) HasEncryptionAlgorithm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *EncryptionConfig) ClearEncryptionAtRest() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_EncryptionAtRest = false
}

func (x *EncryptionConfig) ClearEncryptionInTransit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_EncryptionInTransit = false
}

func (x *EncryptionConfig) ClearKeyManagementService() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_KeyManagementService = nil
}

func (x *EncryptionConfig) ClearCustomerKeyId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CustomerKeyId = nil
}

func (x *EncryptionConfig) ClearEncryptionAlgorithm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_EncryptionAlgorithm = nil
}

type EncryptionConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether encryption at rest is enabled
	EncryptionAtRest *bool
	// Whether encryption in transit is enabled
	EncryptionInTransit *bool
	// Encryption key management service
	KeyManagementService *string
	// Customer-managed encryption key ID
	CustomerKeyId *string
	// Encryption algorithm used
	EncryptionAlgorithm *string
}

func (b0 EncryptionConfig_builder) Build() *EncryptionConfig {
	m0 := &EncryptionConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.EncryptionAtRest != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_EncryptionAtRest = *b.EncryptionAtRest
	}
	if b.EncryptionInTransit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_EncryptionInTransit = *b.EncryptionInTransit
	}
	if b.KeyManagementService != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_KeyManagementService = b.KeyManagementService
	}
	if b.CustomerKeyId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_CustomerKeyId = b.CustomerKeyId
	}
	if b.EncryptionAlgorithm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_EncryptionAlgorithm = b.EncryptionAlgorithm
	}
	return m0
}

type AccessControl struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_IpWhitelist           []string               `protobuf:"bytes,1,rep,name=ip_whitelist,json=ipWhitelist"`
	xxx_hidden_AuthMethods           []string               `protobuf:"bytes,2,rep,name=auth_methods,json=authMethods"`
	xxx_hidden_SessionTimeout        int32                  `protobuf:"varint,3,opt,name=session_timeout,json=sessionTimeout"`
	xxx_hidden_MaxConcurrentSessions int32                  `protobuf:"varint,4,opt,name=max_concurrent_sessions,json=maxConcurrentSessions"`
	xxx_hidden_AllowedCountries      []string               `protobuf:"bytes,5,rep,name=allowed_countries,json=allowedCountries"`
	xxx_hidden_TimeRestrictions      *[]*TimeRestriction    `protobuf:"bytes,6,rep,name=time_restrictions,json=timeRestrictions"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *AccessControl) Reset() {
	*x = AccessControl{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessControl) ProtoMessage() {}

func (x *AccessControl) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AccessControl) GetIpWhitelist() []string {
	if x != nil {
		return x.xxx_hidden_IpWhitelist
	}
	return nil
}

func (x *AccessControl) GetAuthMethods() []string {
	if x != nil {
		return x.xxx_hidden_AuthMethods
	}
	return nil
}

func (x *AccessControl) GetSessionTimeout() int32 {
	if x != nil {
		return x.xxx_hidden_SessionTimeout
	}
	return 0
}

func (x *AccessControl) GetMaxConcurrentSessions() int32 {
	if x != nil {
		return x.xxx_hidden_MaxConcurrentSessions
	}
	return 0
}

func (x *AccessControl) GetAllowedCountries() []string {
	if x != nil {
		return x.xxx_hidden_AllowedCountries
	}
	return nil
}

func (x *AccessControl) GetTimeRestrictions() []*TimeRestriction {
	if x != nil {
		if x.xxx_hidden_TimeRestrictions != nil {
			return *x.xxx_hidden_TimeRestrictions
		}
	}
	return nil
}

func (x *AccessControl) SetIpWhitelist(v []string) {
	x.xxx_hidden_IpWhitelist = v
}

func (x *AccessControl) SetAuthMethods(v []string) {
	x.xxx_hidden_AuthMethods = v
}

func (x *AccessControl) SetSessionTimeout(v int32) {
	x.xxx_hidden_SessionTimeout = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *AccessControl) SetMaxConcurrentSessions(v int32) {
	x.xxx_hidden_MaxConcurrentSessions = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *AccessControl) SetAllowedCountries(v []string) {
	x.xxx_hidden_AllowedCountries = v
}

func (x *AccessControl) SetTimeRestrictions(v []*TimeRestriction) {
	x.xxx_hidden_TimeRestrictions = &v
}

func (x *AccessControl) HasSessionTimeout() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AccessControl) HasMaxConcurrentSessions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AccessControl) ClearSessionTimeout() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SessionTimeout = 0
}

func (x *AccessControl) ClearMaxConcurrentSessions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MaxConcurrentSessions = 0
}

type AccessControl_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// IP address whitelist for tenant access
	IpWhitelist []string
	// Allowed authentication methods
	AuthMethods []string
	// Session timeout in minutes
	SessionTimeout *int32
	// Maximum concurrent sessions
	MaxConcurrentSessions *int32
	// Geographic access restrictions
	AllowedCountries []string
	// Time-based access restrictions
	TimeRestrictions []*TimeRestriction
}

func (b0 AccessControl_builder) Build() *AccessControl {
	m0 := &AccessControl{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_IpWhitelist = b.IpWhitelist
	x.xxx_hidden_AuthMethods = b.AuthMethods
	if b.SessionTimeout != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_SessionTimeout = *b.SessionTimeout
	}
	if b.MaxConcurrentSessions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_MaxConcurrentSessions = *b.MaxConcurrentSessions
	}
	x.xxx_hidden_AllowedCountries = b.AllowedCountries
	x.xxx_hidden_TimeRestrictions = &b.TimeRestrictions
	return m0
}

type AuditConfig struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AuditEnabled       bool                   `protobuf:"varint,1,opt,name=audit_enabled,json=auditEnabled"`
	xxx_hidden_RetentionDays      int32                  `protobuf:"varint,2,opt,name=retention_days,json=retentionDays"`
	xxx_hidden_StorageLocation    *string                `protobuf:"bytes,3,opt,name=storage_location,json=storageLocation"`
	xxx_hidden_AuditedEvents      []string               `protobuf:"bytes,4,rep,name=audited_events,json=auditedEvents"`
	xxx_hidden_RealTimeMonitoring bool                   `protobuf:"varint,5,opt,name=real_time_monitoring,json=realTimeMonitoring"`
	xxx_hidden_Alerts             *[]*AuditAlert         `protobuf:"bytes,6,rep,name=alerts"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *AuditConfig) Reset() {
	*x = AuditConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditConfig) ProtoMessage() {}

func (x *AuditConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuditConfig) GetAuditEnabled() bool {
	if x != nil {
		return x.xxx_hidden_AuditEnabled
	}
	return false
}

func (x *AuditConfig) GetRetentionDays() int32 {
	if x != nil {
		return x.xxx_hidden_RetentionDays
	}
	return 0
}

func (x *AuditConfig) GetStorageLocation() string {
	if x != nil {
		if x.xxx_hidden_StorageLocation != nil {
			return *x.xxx_hidden_StorageLocation
		}
		return ""
	}
	return ""
}

func (x *AuditConfig) GetAuditedEvents() []string {
	if x != nil {
		return x.xxx_hidden_AuditedEvents
	}
	return nil
}

func (x *AuditConfig) GetRealTimeMonitoring() bool {
	if x != nil {
		return x.xxx_hidden_RealTimeMonitoring
	}
	return false
}

func (x *AuditConfig) GetAlerts() []*AuditAlert {
	if x != nil {
		if x.xxx_hidden_Alerts != nil {
			return *x.xxx_hidden_Alerts
		}
	}
	return nil
}

func (x *AuditConfig) SetAuditEnabled(v bool) {
	x.xxx_hidden_AuditEnabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *AuditConfig) SetRetentionDays(v int32) {
	x.xxx_hidden_RetentionDays = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *AuditConfig) SetStorageLocation(v string) {
	x.xxx_hidden_StorageLocation = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *AuditConfig) SetAuditedEvents(v []string) {
	x.xxx_hidden_AuditedEvents = v
}

func (x *AuditConfig) SetRealTimeMonitoring(v bool) {
	x.xxx_hidden_RealTimeMonitoring = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *AuditConfig) SetAlerts(v []*AuditAlert) {
	x.xxx_hidden_Alerts = &v
}

func (x *AuditConfig) HasAuditEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AuditConfig) HasRetentionDays() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AuditConfig) HasStorageLocation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AuditConfig) HasRealTimeMonitoring() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AuditConfig) ClearAuditEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_AuditEnabled = false
}

func (x *AuditConfig) ClearRetentionDays() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RetentionDays = 0
}

func (x *AuditConfig) ClearStorageLocation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_StorageLocation = nil
}

func (x *AuditConfig) ClearRealTimeMonitoring() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_RealTimeMonitoring = false
}

type AuditConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether audit logging is enabled
	AuditEnabled *bool
	// Audit log retention period in days
	RetentionDays *int32
	// Audit log storage location
	StorageLocation *string
	// Events to audit
	AuditedEvents []string
	// Whether real-time monitoring is enabled
	RealTimeMonitoring *bool
	// Alert configuration for audit events
	Alerts []*AuditAlert
}

func (b0 AuditConfig_builder) Build() *AuditConfig {
	m0 := &AuditConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.AuditEnabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_AuditEnabled = *b.AuditEnabled
	}
	if b.RetentionDays != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_RetentionDays = *b.RetentionDays
	}
	if b.StorageLocation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_StorageLocation = b.StorageLocation
	}
	x.xxx_hidden_AuditedEvents = b.AuditedEvents
	if b.RealTimeMonitoring != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_RealTimeMonitoring = *b.RealTimeMonitoring
	}
	x.xxx_hidden_Alerts = &b.Alerts
	return m0
}

type BackupConfig struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled             bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_Frequency           *string                `protobuf:"bytes,2,opt,name=frequency"`
	xxx_hidden_RetentionDays       int32                  `protobuf:"varint,3,opt,name=retention_days,json=retentionDays"`
	xxx_hidden_StorageLocation     *string                `protobuf:"bytes,4,opt,name=storage_location,json=storageLocation"`
	xxx_hidden_PointInTimeRecovery bool                   `protobuf:"varint,5,opt,name=point_in_time_recovery,json=pointInTimeRecovery"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *BackupConfig) Reset() {
	*x = BackupConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupConfig) ProtoMessage() {}

func (x *BackupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BackupConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *BackupConfig) GetFrequency() string {
	if x != nil {
		if x.xxx_hidden_Frequency != nil {
			return *x.xxx_hidden_Frequency
		}
		return ""
	}
	return ""
}

func (x *BackupConfig) GetRetentionDays() int32 {
	if x != nil {
		return x.xxx_hidden_RetentionDays
	}
	return 0
}

func (x *BackupConfig) GetStorageLocation() string {
	if x != nil {
		if x.xxx_hidden_StorageLocation != nil {
			return *x.xxx_hidden_StorageLocation
		}
		return ""
	}
	return ""
}

func (x *BackupConfig) GetPointInTimeRecovery() bool {
	if x != nil {
		return x.xxx_hidden_PointInTimeRecovery
	}
	return false
}

func (x *BackupConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *BackupConfig) SetFrequency(v string) {
	x.xxx_hidden_Frequency = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *BackupConfig) SetRetentionDays(v int32) {
	x.xxx_hidden_RetentionDays = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *BackupConfig) SetStorageLocation(v string) {
	x.xxx_hidden_StorageLocation = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *BackupConfig) SetPointInTimeRecovery(v bool) {
	x.xxx_hidden_PointInTimeRecovery = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *BackupConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BackupConfig) HasFrequency() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *BackupConfig) HasRetentionDays() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *BackupConfig) HasStorageLocation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *BackupConfig) HasPointInTimeRecovery() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *BackupConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *BackupConfig) ClearFrequency() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Frequency = nil
}

func (x *BackupConfig) ClearRetentionDays() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_RetentionDays = 0
}

func (x *BackupConfig) ClearStorageLocation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_StorageLocation = nil
}

func (x *BackupConfig) ClearPointInTimeRecovery() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_PointInTimeRecovery = false
}

type BackupConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether automated backups are enabled
	Enabled *bool
	// Backup frequency (hourly, daily, weekly)
	Frequency *string
	// Backup retention period in days
	RetentionDays *int32
	// Backup storage location
	StorageLocation *string
	// Whether point-in-time recovery is enabled
	PointInTimeRecovery *bool
}

func (b0 BackupConfig_builder) Build() *BackupConfig {
	m0 := &BackupConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.Frequency != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Frequency = b.Frequency
	}
	if b.RetentionDays != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_RetentionDays = *b.RetentionDays
	}
	if b.StorageLocation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_StorageLocation = b.StorageLocation
	}
	if b.PointInTimeRecovery != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_PointInTimeRecovery = *b.PointInTimeRecovery
	}
	return m0
}

type NetworkACLRule struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Action      *string                `protobuf:"bytes,1,opt,name=action"`
	xxx_hidden_Source      *string                `protobuf:"bytes,2,opt,name=source"`
	xxx_hidden_Destination *string                `protobuf:"bytes,3,opt,name=destination"`
	xxx_hidden_Protocol    *string                `protobuf:"bytes,4,opt,name=protocol"`
	xxx_hidden_PortRange   *string                `protobuf:"bytes,5,opt,name=port_range,json=portRange"`
	xxx_hidden_Priority    int32                  `protobuf:"varint,6,opt,name=priority"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkACLRule) Reset() {
	*x = NetworkACLRule{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkACLRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkACLRule) ProtoMessage() {}

func (x *NetworkACLRule) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkACLRule) GetAction() string {
	if x != nil {
		if x.xxx_hidden_Action != nil {
			return *x.xxx_hidden_Action
		}
		return ""
	}
	return ""
}

func (x *NetworkACLRule) GetSource() string {
	if x != nil {
		if x.xxx_hidden_Source != nil {
			return *x.xxx_hidden_Source
		}
		return ""
	}
	return ""
}

func (x *NetworkACLRule) GetDestination() string {
	if x != nil {
		if x.xxx_hidden_Destination != nil {
			return *x.xxx_hidden_Destination
		}
		return ""
	}
	return ""
}

func (x *NetworkACLRule) GetProtocol() string {
	if x != nil {
		if x.xxx_hidden_Protocol != nil {
			return *x.xxx_hidden_Protocol
		}
		return ""
	}
	return ""
}

func (x *NetworkACLRule) GetPortRange() string {
	if x != nil {
		if x.xxx_hidden_PortRange != nil {
			return *x.xxx_hidden_PortRange
		}
		return ""
	}
	return ""
}

func (x *NetworkACLRule) GetPriority() int32 {
	if x != nil {
		return x.xxx_hidden_Priority
	}
	return 0
}

func (x *NetworkACLRule) SetAction(v string) {
	x.xxx_hidden_Action = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *NetworkACLRule) SetSource(v string) {
	x.xxx_hidden_Source = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *NetworkACLRule) SetDestination(v string) {
	x.xxx_hidden_Destination = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *NetworkACLRule) SetProtocol(v string) {
	x.xxx_hidden_Protocol = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *NetworkACLRule) SetPortRange(v string) {
	x.xxx_hidden_PortRange = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *NetworkACLRule) SetPriority(v int32) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *NetworkACLRule) HasAction() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkACLRule) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkACLRule) HasDestination() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NetworkACLRule) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *NetworkACLRule) HasPortRange() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *NetworkACLRule) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *NetworkACLRule) ClearAction() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Action = nil
}

func (x *NetworkACLRule) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Source = nil
}

func (x *NetworkACLRule) ClearDestination() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Destination = nil
}

func (x *NetworkACLRule) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Protocol = nil
}

func (x *NetworkACLRule) ClearPortRange() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_PortRange = nil
}

func (x *NetworkACLRule) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Priority = 0
}

type NetworkACLRule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Rule action (allow, deny)
	Action *string
	// Source IP or CIDR block
	Source *string
	// Destination IP or CIDR block
	Destination *string
	// Protocol (TCP, UDP, ICMP)
	Protocol *string
	// Port range
	PortRange *string
	// Rule priority
	Priority *int32
}

func (b0 NetworkACLRule_builder) Build() *NetworkACLRule {
	m0 := &NetworkACLRule{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Action != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Action = b.Action
	}
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Source = b.Source
	}
	if b.Destination != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Destination = b.Destination
	}
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Protocol = b.Protocol
	}
	if b.PortRange != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_PortRange = b.PortRange
	}
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Priority = *b.Priority
	}
	return m0
}

type LoadBalancerConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type        *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Algorithm   *string                `protobuf:"bytes,2,opt,name=algorithm"`
	xxx_hidden_HealthCheck *HealthCheckConfig     `protobuf:"bytes,3,opt,name=health_check,json=healthCheck"`
	xxx_hidden_Ssl         *SSLConfig             `protobuf:"bytes,4,opt,name=ssl"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LoadBalancerConfig) Reset() {
	*x = LoadBalancerConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancerConfig) ProtoMessage() {}

func (x *LoadBalancerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LoadBalancerConfig) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *LoadBalancerConfig) GetAlgorithm() string {
	if x != nil {
		if x.xxx_hidden_Algorithm != nil {
			return *x.xxx_hidden_Algorithm
		}
		return ""
	}
	return ""
}

func (x *LoadBalancerConfig) GetHealthCheck() *HealthCheckConfig {
	if x != nil {
		return x.xxx_hidden_HealthCheck
	}
	return nil
}

func (x *LoadBalancerConfig) GetSsl() *SSLConfig {
	if x != nil {
		return x.xxx_hidden_Ssl
	}
	return nil
}

func (x *LoadBalancerConfig) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *LoadBalancerConfig) SetAlgorithm(v string) {
	x.xxx_hidden_Algorithm = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *LoadBalancerConfig) SetHealthCheck(v *HealthCheckConfig) {
	x.xxx_hidden_HealthCheck = v
}

func (x *LoadBalancerConfig) SetSsl(v *SSLConfig) {
	x.xxx_hidden_Ssl = v
}

func (x *LoadBalancerConfig) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LoadBalancerConfig) HasAlgorithm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LoadBalancerConfig) HasHealthCheck() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_HealthCheck != nil
}

func (x *LoadBalancerConfig) HasSsl() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ssl != nil
}

func (x *LoadBalancerConfig) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *LoadBalancerConfig) ClearAlgorithm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Algorithm = nil
}

func (x *LoadBalancerConfig) ClearHealthCheck() {
	x.xxx_hidden_HealthCheck = nil
}

func (x *LoadBalancerConfig) ClearSsl() {
	x.xxx_hidden_Ssl = nil
}

type LoadBalancerConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Load balancer type (application, network)
	Type *string
	// Load balancing algorithm
	Algorithm *string
	// Health check configuration
	HealthCheck *HealthCheckConfig
	// SSL/TLS configuration
	Ssl *SSLConfig
}

func (b0 LoadBalancerConfig_builder) Build() *LoadBalancerConfig {
	m0 := &LoadBalancerConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Type = b.Type
	}
	if b.Algorithm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Algorithm = b.Algorithm
	}
	x.xxx_hidden_HealthCheck = b.HealthCheck
	x.xxx_hidden_Ssl = b.Ssl
	return m0
}

type CDNConfig struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Provider       *string                `protobuf:"bytes,1,opt,name=provider"`
	xxx_hidden_DistributionId *string                `protobuf:"bytes,2,opt,name=distribution_id,json=distributionId"`
	xxx_hidden_CacheBehaviors *[]*CacheBehavior      `protobuf:"bytes,3,rep,name=cache_behaviors,json=cacheBehaviors"`
	xxx_hidden_Origin         *OriginConfig          `protobuf:"bytes,4,opt,name=origin"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CDNConfig) Reset() {
	*x = CDNConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDNConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDNConfig) ProtoMessage() {}

func (x *CDNConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CDNConfig) GetProvider() string {
	if x != nil {
		if x.xxx_hidden_Provider != nil {
			return *x.xxx_hidden_Provider
		}
		return ""
	}
	return ""
}

func (x *CDNConfig) GetDistributionId() string {
	if x != nil {
		if x.xxx_hidden_DistributionId != nil {
			return *x.xxx_hidden_DistributionId
		}
		return ""
	}
	return ""
}

func (x *CDNConfig) GetCacheBehaviors() []*CacheBehavior {
	if x != nil {
		if x.xxx_hidden_CacheBehaviors != nil {
			return *x.xxx_hidden_CacheBehaviors
		}
	}
	return nil
}

func (x *CDNConfig) GetOrigin() *OriginConfig {
	if x != nil {
		return x.xxx_hidden_Origin
	}
	return nil
}

func (x *CDNConfig) SetProvider(v string) {
	x.xxx_hidden_Provider = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CDNConfig) SetDistributionId(v string) {
	x.xxx_hidden_DistributionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CDNConfig) SetCacheBehaviors(v []*CacheBehavior) {
	x.xxx_hidden_CacheBehaviors = &v
}

func (x *CDNConfig) SetOrigin(v *OriginConfig) {
	x.xxx_hidden_Origin = v
}

func (x *CDNConfig) HasProvider() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CDNConfig) HasDistributionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CDNConfig) HasOrigin() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Origin != nil
}

func (x *CDNConfig) ClearProvider() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Provider = nil
}

func (x *CDNConfig) ClearDistributionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DistributionId = nil
}

func (x *CDNConfig) ClearOrigin() {
	x.xxx_hidden_Origin = nil
}

type CDNConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// CDN provider
	Provider *string
	// CDN distribution ID
	DistributionId *string
	// Cache behavior settings
	CacheBehaviors []*CacheBehavior
	// Origin configuration
	Origin *OriginConfig
}

func (b0 CDNConfig_builder) Build() *CDNConfig {
	m0 := &CDNConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Provider != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Provider = b.Provider
	}
	if b.DistributionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_DistributionId = b.DistributionId
	}
	x.xxx_hidden_CacheBehaviors = &b.CacheBehaviors
	x.xxx_hidden_Origin = b.Origin
	return m0
}

type DomainConfig struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DomainName       *string                `protobuf:"bytes,1,opt,name=domain_name,json=domainName"`
	xxx_hidden_SslCertificate   *string                `protobuf:"bytes,2,opt,name=ssl_certificate,json=sslCertificate"`
	xxx_hidden_Dns              *DNSConfig             `protobuf:"bytes,3,opt,name=dns"`
	xxx_hidden_ValidationStatus *string                `protobuf:"bytes,4,opt,name=validation_status,json=validationStatus"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *DomainConfig) Reset() {
	*x = DomainConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainConfig) ProtoMessage() {}

func (x *DomainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DomainConfig) GetDomainName() string {
	if x != nil {
		if x.xxx_hidden_DomainName != nil {
			return *x.xxx_hidden_DomainName
		}
		return ""
	}
	return ""
}

func (x *DomainConfig) GetSslCertificate() string {
	if x != nil {
		if x.xxx_hidden_SslCertificate != nil {
			return *x.xxx_hidden_SslCertificate
		}
		return ""
	}
	return ""
}

func (x *DomainConfig) GetDns() *DNSConfig {
	if x != nil {
		return x.xxx_hidden_Dns
	}
	return nil
}

func (x *DomainConfig) GetValidationStatus() string {
	if x != nil {
		if x.xxx_hidden_ValidationStatus != nil {
			return *x.xxx_hidden_ValidationStatus
		}
		return ""
	}
	return ""
}

func (x *DomainConfig) SetDomainName(v string) {
	x.xxx_hidden_DomainName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DomainConfig) SetSslCertificate(v string) {
	x.xxx_hidden_SslCertificate = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DomainConfig) SetDns(v *DNSConfig) {
	x.xxx_hidden_Dns = v
}

func (x *DomainConfig) SetValidationStatus(v string) {
	x.xxx_hidden_ValidationStatus = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DomainConfig) HasDomainName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DomainConfig) HasSslCertificate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DomainConfig) HasDns() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Dns != nil
}

func (x *DomainConfig) HasValidationStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DomainConfig) ClearDomainName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DomainName = nil
}

func (x *DomainConfig) ClearSslCertificate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SslCertificate = nil
}

func (x *DomainConfig) ClearDns() {
	x.xxx_hidden_Dns = nil
}

func (x *DomainConfig) ClearValidationStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ValidationStatus = nil
}

type DomainConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Custom domain name
	DomainName *string
	// SSL certificate ARN or ID
	SslCertificate *string
	// DNS configuration
	Dns *DNSConfig
	// Domain validation status
	ValidationStatus *string
}

func (b0 DomainConfig_builder) Build() *DomainConfig {
	m0 := &DomainConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DomainName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_DomainName = b.DomainName
	}
	if b.SslCertificate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_SslCertificate = b.SslCertificate
	}
	x.xxx_hidden_Dns = b.Dns
	if b.ValidationStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ValidationStatus = b.ValidationStatus
	}
	return m0
}

type StorageEncryption struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type        *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_KeyId       *string                `protobuf:"bytes,2,opt,name=key_id,json=keyId"`
	xxx_hidden_ServerSide  bool                   `protobuf:"varint,3,opt,name=server_side,json=serverSide"`
	xxx_hidden_ClientSide  bool                   `protobuf:"varint,4,opt,name=client_side,json=clientSide"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StorageEncryption) Reset() {
	*x = StorageEncryption{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageEncryption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageEncryption) ProtoMessage() {}

func (x *StorageEncryption) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StorageEncryption) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *StorageEncryption) GetKeyId() string {
	if x != nil {
		if x.xxx_hidden_KeyId != nil {
			return *x.xxx_hidden_KeyId
		}
		return ""
	}
	return ""
}

func (x *StorageEncryption) GetServerSide() bool {
	if x != nil {
		return x.xxx_hidden_ServerSide
	}
	return false
}

func (x *StorageEncryption) GetClientSide() bool {
	if x != nil {
		return x.xxx_hidden_ClientSide
	}
	return false
}

func (x *StorageEncryption) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *StorageEncryption) SetKeyId(v string) {
	x.xxx_hidden_KeyId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *StorageEncryption) SetServerSide(v bool) {
	x.xxx_hidden_ServerSide = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *StorageEncryption) SetClientSide(v bool) {
	x.xxx_hidden_ClientSide = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *StorageEncryption) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StorageEncryption) HasKeyId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StorageEncryption) HasServerSide() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StorageEncryption) HasClientSide() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *StorageEncryption) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *StorageEncryption) ClearKeyId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_KeyId = nil
}

func (x *StorageEncryption) ClearServerSide() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ServerSide = false
}

func (x *StorageEncryption) ClearClientSide() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ClientSide = false
}

type StorageEncryption_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Encryption type (AES256, KMS)
	Type *string
	// Key ID for KMS encryption
	KeyId *string
	// Whether server-side encryption is enabled
	ServerSide *bool
	// Whether client-side encryption is enabled
	ClientSide *bool
}

func (b0 StorageEncryption_builder) Build() *StorageEncryption {
	m0 := &StorageEncryption{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Type = b.Type
	}
	if b.KeyId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_KeyId = b.KeyId
	}
	if b.ServerSide != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ServerSide = *b.ServerSide
	}
	if b.ClientSide != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ClientSide = *b.ClientSide
	}
	return m0
}

type StoragePolicy struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Statement   *string                `protobuf:"bytes,2,opt,name=statement"`
	xxx_hidden_Effect      *string                `protobuf:"bytes,3,opt,name=effect"`
	xxx_hidden_Resources   []string               `protobuf:"bytes,4,rep,name=resources"`
	xxx_hidden_Actions     []string               `protobuf:"bytes,5,rep,name=actions"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StoragePolicy) Reset() {
	*x = StoragePolicy{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragePolicy) ProtoMessage() {}

func (x *StoragePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StoragePolicy) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *StoragePolicy) GetStatement() string {
	if x != nil {
		if x.xxx_hidden_Statement != nil {
			return *x.xxx_hidden_Statement
		}
		return ""
	}
	return ""
}

func (x *StoragePolicy) GetEffect() string {
	if x != nil {
		if x.xxx_hidden_Effect != nil {
			return *x.xxx_hidden_Effect
		}
		return ""
	}
	return ""
}

func (x *StoragePolicy) GetResources() []string {
	if x != nil {
		return x.xxx_hidden_Resources
	}
	return nil
}

func (x *StoragePolicy) GetActions() []string {
	if x != nil {
		return x.xxx_hidden_Actions
	}
	return nil
}

func (x *StoragePolicy) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *StoragePolicy) SetStatement(v string) {
	x.xxx_hidden_Statement = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *StoragePolicy) SetEffect(v string) {
	x.xxx_hidden_Effect = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *StoragePolicy) SetResources(v []string) {
	x.xxx_hidden_Resources = v
}

func (x *StoragePolicy) SetActions(v []string) {
	x.xxx_hidden_Actions = v
}

func (x *StoragePolicy) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StoragePolicy) HasStatement() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StoragePolicy) HasEffect() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StoragePolicy) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *StoragePolicy) ClearStatement() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Statement = nil
}

func (x *StoragePolicy) ClearEffect() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Effect = nil
}

type StoragePolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Policy name
	Name *string
	// Policy statement (JSON)
	Statement *string
	// Policy effect (Allow, Deny)
	Effect *string
	// Resources covered by this policy
	Resources []string
	// Actions covered by this policy
	Actions []string
}

func (b0 StoragePolicy_builder) Build() *StoragePolicy {
	m0 := &StoragePolicy{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Statement != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Statement = b.Statement
	}
	if b.Effect != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Effect = b.Effect
	}
	x.xxx_hidden_Resources = b.Resources
	x.xxx_hidden_Actions = b.Actions
	return m0
}

type StorageBackupConfig struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled           bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_Schedule          *string                `protobuf:"bytes,2,opt,name=schedule"`
	xxx_hidden_RetentionDays     int32                  `protobuf:"varint,3,opt,name=retention_days,json=retentionDays"`
	xxx_hidden_CrossRegion       bool                   `protobuf:"varint,4,opt,name=cross_region,json=crossRegion"`
	xxx_hidden_EncryptionEnabled bool                   `protobuf:"varint,5,opt,name=encryption_enabled,json=encryptionEnabled"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *StorageBackupConfig) Reset() {
	*x = StorageBackupConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageBackupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageBackupConfig) ProtoMessage() {}

func (x *StorageBackupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StorageBackupConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *StorageBackupConfig) GetSchedule() string {
	if x != nil {
		if x.xxx_hidden_Schedule != nil {
			return *x.xxx_hidden_Schedule
		}
		return ""
	}
	return ""
}

func (x *StorageBackupConfig) GetRetentionDays() int32 {
	if x != nil {
		return x.xxx_hidden_RetentionDays
	}
	return 0
}

func (x *StorageBackupConfig) GetCrossRegion() bool {
	if x != nil {
		return x.xxx_hidden_CrossRegion
	}
	return false
}

func (x *StorageBackupConfig) GetEncryptionEnabled() bool {
	if x != nil {
		return x.xxx_hidden_EncryptionEnabled
	}
	return false
}

func (x *StorageBackupConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *StorageBackupConfig) SetSchedule(v string) {
	x.xxx_hidden_Schedule = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *StorageBackupConfig) SetRetentionDays(v int32) {
	x.xxx_hidden_RetentionDays = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *StorageBackupConfig) SetCrossRegion(v bool) {
	x.xxx_hidden_CrossRegion = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *StorageBackupConfig) SetEncryptionEnabled(v bool) {
	x.xxx_hidden_EncryptionEnabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *StorageBackupConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StorageBackupConfig) HasSchedule() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StorageBackupConfig) HasRetentionDays() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StorageBackupConfig) HasCrossRegion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *StorageBackupConfig) HasEncryptionEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *StorageBackupConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *StorageBackupConfig) ClearSchedule() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Schedule = nil
}

func (x *StorageBackupConfig) ClearRetentionDays() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_RetentionDays = 0
}

func (x *StorageBackupConfig) ClearCrossRegion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CrossRegion = false
}

func (x *StorageBackupConfig) ClearEncryptionEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_EncryptionEnabled = false
}

type StorageBackupConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether backup is enabled
	Enabled *bool
	// Backup schedule (cron expression)
	Schedule *string
	// Backup retention period
	RetentionDays *int32
	// Cross-region backup enabled
	CrossRegion *bool
	// Backup encryption enabled
	EncryptionEnabled *bool
}

func (b0 StorageBackupConfig_builder) Build() *StorageBackupConfig {
	m0 := &StorageBackupConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.Schedule != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Schedule = b.Schedule
	}
	if b.RetentionDays != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_RetentionDays = *b.RetentionDays
	}
	if b.CrossRegion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_CrossRegion = *b.CrossRegion
	}
	if b.EncryptionEnabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_EncryptionEnabled = *b.EncryptionEnabled
	}
	return m0
}

type StorageQuota struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MaxSizeBytes         int64                  `protobuf:"varint,1,opt,name=max_size_bytes,json=maxSizeBytes"`
	xxx_hidden_MaxObjects           int64                  `protobuf:"varint,2,opt,name=max_objects,json=maxObjects"`
	xxx_hidden_MaxRequestsPerSecond int32                  `protobuf:"varint,3,opt,name=max_requests_per_second,json=maxRequestsPerSecond"`
	xxx_hidden_TransferQuotaBytes   int64                  `protobuf:"varint,4,opt,name=transfer_quota_bytes,json=transferQuotaBytes"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *StorageQuota) Reset() {
	*x = StorageQuota{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageQuota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageQuota) ProtoMessage() {}

func (x *StorageQuota) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StorageQuota) GetMaxSizeBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MaxSizeBytes
	}
	return 0
}

func (x *StorageQuota) GetMaxObjects() int64 {
	if x != nil {
		return x.xxx_hidden_MaxObjects
	}
	return 0
}

func (x *StorageQuota) GetMaxRequestsPerSecond() int32 {
	if x != nil {
		return x.xxx_hidden_MaxRequestsPerSecond
	}
	return 0
}

func (x *StorageQuota) GetTransferQuotaBytes() int64 {
	if x != nil {
		return x.xxx_hidden_TransferQuotaBytes
	}
	return 0
}

func (x *StorageQuota) SetMaxSizeBytes(v int64) {
	x.xxx_hidden_MaxSizeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *StorageQuota) SetMaxObjects(v int64) {
	x.xxx_hidden_MaxObjects = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *StorageQuota) SetMaxRequestsPerSecond(v int32) {
	x.xxx_hidden_MaxRequestsPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *StorageQuota) SetTransferQuotaBytes(v int64) {
	x.xxx_hidden_TransferQuotaBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *StorageQuota) HasMaxSizeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StorageQuota) HasMaxObjects() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StorageQuota) HasMaxRequestsPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StorageQuota) HasTransferQuotaBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *StorageQuota) ClearMaxSizeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MaxSizeBytes = 0
}

func (x *StorageQuota) ClearMaxObjects() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxObjects = 0
}

func (x *StorageQuota) ClearMaxRequestsPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxRequestsPerSecond = 0
}

func (x *StorageQuota) ClearTransferQuotaBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TransferQuotaBytes = 0
}

type StorageQuota_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum storage size in bytes
	MaxSizeBytes *int64
	// Maximum number of objects
	MaxObjects *int64
	// Maximum request rate per second
	MaxRequestsPerSecond *int32
	// Transfer quota in bytes per month
	TransferQuotaBytes *int64
}

func (b0 StorageQuota_builder) Build() *StorageQuota {
	m0 := &StorageQuota{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MaxSizeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_MaxSizeBytes = *b.MaxSizeBytes
	}
	if b.MaxObjects != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_MaxObjects = *b.MaxObjects
	}
	if b.MaxRequestsPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_MaxRequestsPerSecond = *b.MaxRequestsPerSecond
	}
	if b.TransferQuotaBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_TransferQuotaBytes = *b.TransferQuotaBytes
	}
	return m0
}

type CPUAllocation struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Cores             int32                  `protobuf:"varint,1,opt,name=cores"`
	xxx_hidden_FrequencyMhz      int32                  `protobuf:"varint,2,opt,name=frequency_mhz,json=frequencyMhz"`
	xxx_hidden_UsageLimitPercent int32                  `protobuf:"varint,3,opt,name=usage_limit_percent,json=usageLimitPercent"`
	xxx_hidden_Priority          int32                  `protobuf:"varint,4,opt,name=priority"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *CPUAllocation) Reset() {
	*x = CPUAllocation{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUAllocation) ProtoMessage() {}

func (x *CPUAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CPUAllocation) GetCores() int32 {
	if x != nil {
		return x.xxx_hidden_Cores
	}
	return 0
}

func (x *CPUAllocation) GetFrequencyMhz() int32 {
	if x != nil {
		return x.xxx_hidden_FrequencyMhz
	}
	return 0
}

func (x *CPUAllocation) GetUsageLimitPercent() int32 {
	if x != nil {
		return x.xxx_hidden_UsageLimitPercent
	}
	return 0
}

func (x *CPUAllocation) GetPriority() int32 {
	if x != nil {
		return x.xxx_hidden_Priority
	}
	return 0
}

func (x *CPUAllocation) SetCores(v int32) {
	x.xxx_hidden_Cores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CPUAllocation) SetFrequencyMhz(v int32) {
	x.xxx_hidden_FrequencyMhz = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CPUAllocation) SetUsageLimitPercent(v int32) {
	x.xxx_hidden_UsageLimitPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *CPUAllocation) SetPriority(v int32) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *CPUAllocation) HasCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CPUAllocation) HasFrequencyMhz() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CPUAllocation) HasUsageLimitPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CPUAllocation) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CPUAllocation) ClearCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Cores = 0
}

func (x *CPUAllocation) ClearFrequencyMhz() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FrequencyMhz = 0
}

func (x *CPUAllocation) ClearUsageLimitPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UsageLimitPercent = 0
}

func (x *CPUAllocation) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Priority = 0
}

type CPUAllocation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Number of CPU cores
	Cores *int32
	// CPU frequency in MHz
	FrequencyMhz *int32
	// CPU usage limit percentage
	UsageLimitPercent *int32
	// CPU priority
	Priority *int32
}

func (b0 CPUAllocation_builder) Build() *CPUAllocation {
	m0 := &CPUAllocation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Cores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Cores = *b.Cores
	}
	if b.FrequencyMhz != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FrequencyMhz = *b.FrequencyMhz
	}
	if b.UsageLimitPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_UsageLimitPercent = *b.UsageLimitPercent
	}
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Priority = *b.Priority
	}
	return m0
}

type MemoryAllocation struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SizeMb            int64                  `protobuf:"varint,1,opt,name=size_mb,json=sizeMb"`
	xxx_hidden_UsageLimitPercent int32                  `protobuf:"varint,2,opt,name=usage_limit_percent,json=usageLimitPercent"`
	xxx_hidden_SwapMb            int64                  `protobuf:"varint,3,opt,name=swap_mb,json=swapMb"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *MemoryAllocation) Reset() {
	*x = MemoryAllocation{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryAllocation) ProtoMessage() {}

func (x *MemoryAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MemoryAllocation) GetSizeMb() int64 {
	if x != nil {
		return x.xxx_hidden_SizeMb
	}
	return 0
}

func (x *MemoryAllocation) GetUsageLimitPercent() int32 {
	if x != nil {
		return x.xxx_hidden_UsageLimitPercent
	}
	return 0
}

func (x *MemoryAllocation) GetSwapMb() int64 {
	if x != nil {
		return x.xxx_hidden_SwapMb
	}
	return 0
}

func (x *MemoryAllocation) SetSizeMb(v int64) {
	x.xxx_hidden_SizeMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *MemoryAllocation) SetUsageLimitPercent(v int32) {
	x.xxx_hidden_UsageLimitPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *MemoryAllocation) SetSwapMb(v int64) {
	x.xxx_hidden_SwapMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *MemoryAllocation) HasSizeMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MemoryAllocation) HasUsageLimitPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MemoryAllocation) HasSwapMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MemoryAllocation) ClearSizeMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SizeMb = 0
}

func (x *MemoryAllocation) ClearUsageLimitPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UsageLimitPercent = 0
}

func (x *MemoryAllocation) ClearSwapMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SwapMb = 0
}

type MemoryAllocation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Memory size in MB
	SizeMb *int64
	// Memory usage limit percentage
	UsageLimitPercent *int32
	// Swap allocation in MB
	SwapMb *int64
}

func (b0 MemoryAllocation_builder) Build() *MemoryAllocation {
	m0 := &MemoryAllocation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SizeMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_SizeMb = *b.SizeMb
	}
	if b.UsageLimitPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_UsageLimitPercent = *b.UsageLimitPercent
	}
	if b.SwapMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_SwapMb = *b.SwapMb
	}
	return m0
}

type ResourceLimits struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MaxCpuPercent      int32                  `protobuf:"varint,1,opt,name=max_cpu_percent,json=maxCpuPercent"`
	xxx_hidden_MaxMemoryMb        int64                  `protobuf:"varint,2,opt,name=max_memory_mb,json=maxMemoryMb"`
	xxx_hidden_MaxDiskIops        int32                  `protobuf:"varint,3,opt,name=max_disk_iops,json=maxDiskIops"`
	xxx_hidden_MaxNetworkMbps     int32                  `protobuf:"varint,4,opt,name=max_network_mbps,json=maxNetworkMbps"`
	xxx_hidden_MaxProcesses       int32                  `protobuf:"varint,5,opt,name=max_processes,json=maxProcesses"`
	xxx_hidden_MaxFileDescriptors int32                  `protobuf:"varint,6,opt,name=max_file_descriptors,json=maxFileDescriptors"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ResourceLimits) Reset() {
	*x = ResourceLimits{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimits) ProtoMessage() {}

func (x *ResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResourceLimits) GetMaxCpuPercent() int32 {
	if x != nil {
		return x.xxx_hidden_MaxCpuPercent
	}
	return 0
}

func (x *ResourceLimits) GetMaxMemoryMb() int64 {
	if x != nil {
		return x.xxx_hidden_MaxMemoryMb
	}
	return 0
}

func (x *ResourceLimits) GetMaxDiskIops() int32 {
	if x != nil {
		return x.xxx_hidden_MaxDiskIops
	}
	return 0
}

func (x *ResourceLimits) GetMaxNetworkMbps() int32 {
	if x != nil {
		return x.xxx_hidden_MaxNetworkMbps
	}
	return 0
}

func (x *ResourceLimits) GetMaxProcesses() int32 {
	if x != nil {
		return x.xxx_hidden_MaxProcesses
	}
	return 0
}

func (x *ResourceLimits) GetMaxFileDescriptors() int32 {
	if x != nil {
		return x.xxx_hidden_MaxFileDescriptors
	}
	return 0
}

func (x *ResourceLimits) SetMaxCpuPercent(v int32) {
	x.xxx_hidden_MaxCpuPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *ResourceLimits) SetMaxMemoryMb(v int64) {
	x.xxx_hidden_MaxMemoryMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *ResourceLimits) SetMaxDiskIops(v int32) {
	x.xxx_hidden_MaxDiskIops = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *ResourceLimits) SetMaxNetworkMbps(v int32) {
	x.xxx_hidden_MaxNetworkMbps = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *ResourceLimits) SetMaxProcesses(v int32) {
	x.xxx_hidden_MaxProcesses = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *ResourceLimits) SetMaxFileDescriptors(v int32) {
	x.xxx_hidden_MaxFileDescriptors = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *ResourceLimits) HasMaxCpuPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ResourceLimits) HasMaxMemoryMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ResourceLimits) HasMaxDiskIops() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ResourceLimits) HasMaxNetworkMbps() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ResourceLimits) HasMaxProcesses() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ResourceLimits) HasMaxFileDescriptors() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ResourceLimits) ClearMaxCpuPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MaxCpuPercent = 0
}

func (x *ResourceLimits) ClearMaxMemoryMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxMemoryMb = 0
}

func (x *ResourceLimits) ClearMaxDiskIops() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxDiskIops = 0
}

func (x *ResourceLimits) ClearMaxNetworkMbps() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MaxNetworkMbps = 0
}

func (x *ResourceLimits) ClearMaxProcesses() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MaxProcesses = 0
}

func (x *ResourceLimits) ClearMaxFileDescriptors() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_MaxFileDescriptors = 0
}

type ResourceLimits_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum CPU usage percentage
	MaxCpuPercent *int32
	// Maximum memory usage in MB
	MaxMemoryMb *int64
	// Maximum disk I/O operations per second
	MaxDiskIops *int32
	// Maximum network bandwidth in Mbps
	MaxNetworkMbps *int32
	// Maximum number of processes
	MaxProcesses *int32
	// Maximum number of file descriptors
	MaxFileDescriptors *int32
}

func (b0 ResourceLimits_builder) Build() *ResourceLimits {
	m0 := &ResourceLimits{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MaxCpuPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_MaxCpuPercent = *b.MaxCpuPercent
	}
	if b.MaxMemoryMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_MaxMemoryMb = *b.MaxMemoryMb
	}
	if b.MaxDiskIops != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_MaxDiskIops = *b.MaxDiskIops
	}
	if b.MaxNetworkMbps != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_MaxNetworkMbps = *b.MaxNetworkMbps
	}
	if b.MaxProcesses != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_MaxProcesses = *b.MaxProcesses
	}
	if b.MaxFileDescriptors != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_MaxFileDescriptors = *b.MaxFileDescriptors
	}
	return m0
}

type AutoScalingConfig struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled             bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_MinInstances        int32                  `protobuf:"varint,2,opt,name=min_instances,json=minInstances"`
	xxx_hidden_MaxInstances        int32                  `protobuf:"varint,3,opt,name=max_instances,json=maxInstances"`
	xxx_hidden_TargetCpuPercent    int32                  `protobuf:"varint,4,opt,name=target_cpu_percent,json=targetCpuPercent"`
	xxx_hidden_TargetMemoryPercent int32                  `protobuf:"varint,5,opt,name=target_memory_percent,json=targetMemoryPercent"`
	xxx_hidden_ScaleUpCooldown     int32                  `protobuf:"varint,6,opt,name=scale_up_cooldown,json=scaleUpCooldown"`
	xxx_hidden_ScaleDownCooldown   int32                  `protobuf:"varint,7,opt,name=scale_down_cooldown,json=scaleDownCooldown"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *AutoScalingConfig) Reset() {
	*x = AutoScalingConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoScalingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScalingConfig) ProtoMessage() {}

func (x *AutoScalingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AutoScalingConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *AutoScalingConfig) GetMinInstances() int32 {
	if x != nil {
		return x.xxx_hidden_MinInstances
	}
	return 0
}

func (x *AutoScalingConfig) GetMaxInstances() int32 {
	if x != nil {
		return x.xxx_hidden_MaxInstances
	}
	return 0
}

func (x *AutoScalingConfig) GetTargetCpuPercent() int32 {
	if x != nil {
		return x.xxx_hidden_TargetCpuPercent
	}
	return 0
}

func (x *AutoScalingConfig) GetTargetMemoryPercent() int32 {
	if x != nil {
		return x.xxx_hidden_TargetMemoryPercent
	}
	return 0
}

func (x *AutoScalingConfig) GetScaleUpCooldown() int32 {
	if x != nil {
		return x.xxx_hidden_ScaleUpCooldown
	}
	return 0
}

func (x *AutoScalingConfig) GetScaleDownCooldown() int32 {
	if x != nil {
		return x.xxx_hidden_ScaleDownCooldown
	}
	return 0
}

func (x *AutoScalingConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *AutoScalingConfig) SetMinInstances(v int32) {
	x.xxx_hidden_MinInstances = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *AutoScalingConfig) SetMaxInstances(v int32) {
	x.xxx_hidden_MaxInstances = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *AutoScalingConfig) SetTargetCpuPercent(v int32) {
	x.xxx_hidden_TargetCpuPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *AutoScalingConfig) SetTargetMemoryPercent(v int32) {
	x.xxx_hidden_TargetMemoryPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *AutoScalingConfig) SetScaleUpCooldown(v int32) {
	x.xxx_hidden_ScaleUpCooldown = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *AutoScalingConfig) SetScaleDownCooldown(v int32) {
	x.xxx_hidden_ScaleDownCooldown = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *AutoScalingConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AutoScalingConfig) HasMinInstances() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AutoScalingConfig) HasMaxInstances() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AutoScalingConfig) HasTargetCpuPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AutoScalingConfig) HasTargetMemoryPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AutoScalingConfig) HasScaleUpCooldown() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *AutoScalingConfig) HasScaleDownCooldown() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *AutoScalingConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *AutoScalingConfig) ClearMinInstances() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MinInstances = 0
}

func (x *AutoScalingConfig) ClearMaxInstances() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxInstances = 0
}

func (x *AutoScalingConfig) ClearTargetCpuPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TargetCpuPercent = 0
}

func (x *AutoScalingConfig) ClearTargetMemoryPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_TargetMemoryPercent = 0
}

func (x *AutoScalingConfig) ClearScaleUpCooldown() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ScaleUpCooldown = 0
}

func (x *AutoScalingConfig) ClearScaleDownCooldown() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ScaleDownCooldown = 0
}

type AutoScalingConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether auto-scaling is enabled
	Enabled *bool
	// Minimum number of instances
	MinInstances *int32
	// Maximum number of instances
	MaxInstances *int32
	// Target CPU utilization percentage
	TargetCpuPercent *int32
	// Target memory utilization percentage
	TargetMemoryPercent *int32
	// Scale-up cooldown period in seconds
	ScaleUpCooldown *int32
	// Scale-down cooldown period in seconds
	ScaleDownCooldown *int32
}

func (b0 AutoScalingConfig_builder) Build() *AutoScalingConfig {
	m0 := &AutoScalingConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.MinInstances != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_MinInstances = *b.MinInstances
	}
	if b.MaxInstances != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_MaxInstances = *b.MaxInstances
	}
	if b.TargetCpuPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_TargetCpuPercent = *b.TargetCpuPercent
	}
	if b.TargetMemoryPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_TargetMemoryPercent = *b.TargetMemoryPercent
	}
	if b.ScaleUpCooldown != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ScaleUpCooldown = *b.ScaleUpCooldown
	}
	if b.ScaleDownCooldown != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_ScaleDownCooldown = *b.ScaleDownCooldown
	}
	return m0
}

type TimeRestriction struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DayOfWeek   int32                  `protobuf:"varint,1,opt,name=day_of_week,json=dayOfWeek"`
	xxx_hidden_StartTime   *string                `protobuf:"bytes,2,opt,name=start_time,json=startTime"`
	xxx_hidden_EndTime     *string                `protobuf:"bytes,3,opt,name=end_time,json=endTime"`
	xxx_hidden_Timezone    *string                `protobuf:"bytes,4,opt,name=timezone"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TimeRestriction) Reset() {
	*x = TimeRestriction{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeRestriction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRestriction) ProtoMessage() {}

func (x *TimeRestriction) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TimeRestriction) GetDayOfWeek() int32 {
	if x != nil {
		return x.xxx_hidden_DayOfWeek
	}
	return 0
}

func (x *TimeRestriction) GetStartTime() string {
	if x != nil {
		if x.xxx_hidden_StartTime != nil {
			return *x.xxx_hidden_StartTime
		}
		return ""
	}
	return ""
}

func (x *TimeRestriction) GetEndTime() string {
	if x != nil {
		if x.xxx_hidden_EndTime != nil {
			return *x.xxx_hidden_EndTime
		}
		return ""
	}
	return ""
}

func (x *TimeRestriction) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *TimeRestriction) SetDayOfWeek(v int32) {
	x.xxx_hidden_DayOfWeek = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *TimeRestriction) SetStartTime(v string) {
	x.xxx_hidden_StartTime = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *TimeRestriction) SetEndTime(v string) {
	x.xxx_hidden_EndTime = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *TimeRestriction) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *TimeRestriction) HasDayOfWeek() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TimeRestriction) HasStartTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TimeRestriction) HasEndTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TimeRestriction) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *TimeRestriction) ClearDayOfWeek() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DayOfWeek = 0
}

func (x *TimeRestriction) ClearStartTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StartTime = nil
}

func (x *TimeRestriction) ClearEndTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EndTime = nil
}

func (x *TimeRestriction) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Timezone = nil
}

type TimeRestriction_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Day of week (0-6, 0=Sunday)
	DayOfWeek *int32
	// Start time (24-hour format, e.g., "09:00")
	StartTime *string
	// End time (24-hour format, e.g., "17:00")
	EndTime *string
	// Timezone for this restriction
	Timezone *string
}

func (b0 TimeRestriction_builder) Build() *TimeRestriction {
	m0 := &TimeRestriction{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DayOfWeek != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_DayOfWeek = *b.DayOfWeek
	}
	if b.StartTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_StartTime = b.StartTime
	}
	if b.EndTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_EndTime = b.EndTime
	}
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Timezone = b.Timezone
	}
	return m0
}

type AuditAlert struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name                 *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_EventPatterns        []string               `protobuf:"bytes,2,rep,name=event_patterns,json=eventPatterns"`
	xxx_hidden_Severity             *string                `protobuf:"bytes,3,opt,name=severity"`
	xxx_hidden_NotificationChannels []string               `protobuf:"bytes,4,rep,name=notification_channels,json=notificationChannels"`
	xxx_hidden_Threshold            int32                  `protobuf:"varint,5,opt,name=threshold"`
	xxx_hidden_TimeWindowMinutes    int32                  `protobuf:"varint,6,opt,name=time_window_minutes,json=timeWindowMinutes"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *AuditAlert) Reset() {
	*x = AuditAlert{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditAlert) ProtoMessage() {}

func (x *AuditAlert) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuditAlert) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *AuditAlert) GetEventPatterns() []string {
	if x != nil {
		return x.xxx_hidden_EventPatterns
	}
	return nil
}

func (x *AuditAlert) GetSeverity() string {
	if x != nil {
		if x.xxx_hidden_Severity != nil {
			return *x.xxx_hidden_Severity
		}
		return ""
	}
	return ""
}

func (x *AuditAlert) GetNotificationChannels() []string {
	if x != nil {
		return x.xxx_hidden_NotificationChannels
	}
	return nil
}

func (x *AuditAlert) GetThreshold() int32 {
	if x != nil {
		return x.xxx_hidden_Threshold
	}
	return 0
}

func (x *AuditAlert) GetTimeWindowMinutes() int32 {
	if x != nil {
		return x.xxx_hidden_TimeWindowMinutes
	}
	return 0
}

func (x *AuditAlert) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *AuditAlert) SetEventPatterns(v []string) {
	x.xxx_hidden_EventPatterns = v
}

func (x *AuditAlert) SetSeverity(v string) {
	x.xxx_hidden_Severity = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *AuditAlert) SetNotificationChannels(v []string) {
	x.xxx_hidden_NotificationChannels = v
}

func (x *AuditAlert) SetThreshold(v int32) {
	x.xxx_hidden_Threshold = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *AuditAlert) SetTimeWindowMinutes(v int32) {
	x.xxx_hidden_TimeWindowMinutes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *AuditAlert) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AuditAlert) HasSeverity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AuditAlert) HasThreshold() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AuditAlert) HasTimeWindowMinutes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *AuditAlert) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *AuditAlert) ClearSeverity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Severity = nil
}

func (x *AuditAlert) ClearThreshold() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Threshold = 0
}

func (x *AuditAlert) ClearTimeWindowMinutes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_TimeWindowMinutes = 0
}

type AuditAlert_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Alert name
	Name *string
	// Event patterns to match
	EventPatterns []string
	// Alert severity level
	Severity *string
	// Notification channels for this alert
	NotificationChannels []string
	// Alert threshold (if applicable)
	Threshold *int32
	// Time window for threshold evaluation in minutes
	TimeWindowMinutes *int32
}

func (b0 AuditAlert_builder) Build() *AuditAlert {
	m0 := &AuditAlert{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_EventPatterns = b.EventPatterns
	if b.Severity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Severity = b.Severity
	}
	x.xxx_hidden_NotificationChannels = b.NotificationChannels
	if b.Threshold != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Threshold = *b.Threshold
	}
	if b.TimeWindowMinutes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_TimeWindowMinutes = *b.TimeWindowMinutes
	}
	return m0
}

type HealthCheckConfig struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Path               *string                `protobuf:"bytes,1,opt,name=path"`
	xxx_hidden_Port               int32                  `protobuf:"varint,2,opt,name=port"`
	xxx_hidden_Protocol           *string                `protobuf:"bytes,3,opt,name=protocol"`
	xxx_hidden_IntervalSeconds    int32                  `protobuf:"varint,4,opt,name=interval_seconds,json=intervalSeconds"`
	xxx_hidden_TimeoutSeconds     int32                  `protobuf:"varint,5,opt,name=timeout_seconds,json=timeoutSeconds"`
	xxx_hidden_HealthyThreshold   int32                  `protobuf:"varint,6,opt,name=healthy_threshold,json=healthyThreshold"`
	xxx_hidden_UnhealthyThreshold int32                  `protobuf:"varint,7,opt,name=unhealthy_threshold,json=unhealthyThreshold"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *HealthCheckConfig) Reset() {
	*x = HealthCheckConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckConfig) ProtoMessage() {}

func (x *HealthCheckConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HealthCheckConfig) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *HealthCheckConfig) GetPort() int32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *HealthCheckConfig) GetProtocol() string {
	if x != nil {
		if x.xxx_hidden_Protocol != nil {
			return *x.xxx_hidden_Protocol
		}
		return ""
	}
	return ""
}

func (x *HealthCheckConfig) GetIntervalSeconds() int32 {
	if x != nil {
		return x.xxx_hidden_IntervalSeconds
	}
	return 0
}

func (x *HealthCheckConfig) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.xxx_hidden_TimeoutSeconds
	}
	return 0
}

func (x *HealthCheckConfig) GetHealthyThreshold() int32 {
	if x != nil {
		return x.xxx_hidden_HealthyThreshold
	}
	return 0
}

func (x *HealthCheckConfig) GetUnhealthyThreshold() int32 {
	if x != nil {
		return x.xxx_hidden_UnhealthyThreshold
	}
	return 0
}

func (x *HealthCheckConfig) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *HealthCheckConfig) SetPort(v int32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *HealthCheckConfig) SetProtocol(v string) {
	x.xxx_hidden_Protocol = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *HealthCheckConfig) SetIntervalSeconds(v int32) {
	x.xxx_hidden_IntervalSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *HealthCheckConfig) SetTimeoutSeconds(v int32) {
	x.xxx_hidden_TimeoutSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *HealthCheckConfig) SetHealthyThreshold(v int32) {
	x.xxx_hidden_HealthyThreshold = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *HealthCheckConfig) SetUnhealthyThreshold(v int32) {
	x.xxx_hidden_UnhealthyThreshold = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *HealthCheckConfig) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *HealthCheckConfig) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *HealthCheckConfig) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *HealthCheckConfig) HasIntervalSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *HealthCheckConfig) HasTimeoutSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *HealthCheckConfig) HasHealthyThreshold() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *HealthCheckConfig) HasUnhealthyThreshold() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *HealthCheckConfig) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Path = nil
}

func (x *HealthCheckConfig) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Port = 0
}

func (x *HealthCheckConfig) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Protocol = nil
}

func (x *HealthCheckConfig) ClearIntervalSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_IntervalSeconds = 0
}

func (x *HealthCheckConfig) ClearTimeoutSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_TimeoutSeconds = 0
}

func (x *HealthCheckConfig) ClearHealthyThreshold() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_HealthyThreshold = 0
}

func (x *HealthCheckConfig) ClearUnhealthyThreshold() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_UnhealthyThreshold = 0
}

type HealthCheckConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Health check path
	Path *string
	// Health check port
	Port *int32
	// Health check protocol (HTTP, HTTPS, TCP)
	Protocol *string
	// Health check interval in seconds
	IntervalSeconds *int32
	// Health check timeout in seconds
	TimeoutSeconds *int32
	// Healthy threshold
	HealthyThreshold *int32
	// Unhealthy threshold
	UnhealthyThreshold *int32
}

func (b0 HealthCheckConfig_builder) Build() *HealthCheckConfig {
	m0 := &HealthCheckConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Path = b.Path
	}
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Port = *b.Port
	}
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Protocol = b.Protocol
	}
	if b.IntervalSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_IntervalSeconds = *b.IntervalSeconds
	}
	if b.TimeoutSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_TimeoutSeconds = *b.TimeoutSeconds
	}
	if b.HealthyThreshold != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_HealthyThreshold = *b.HealthyThreshold
	}
	if b.UnhealthyThreshold != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_UnhealthyThreshold = *b.UnhealthyThreshold
	}
	return m0
}

type SSLConfig struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CertificateId *string                `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId"`
	xxx_hidden_SslPolicy     *string                `protobuf:"bytes,2,opt,name=ssl_policy,json=sslPolicy"`
	xxx_hidden_RedirectHttp  bool                   `protobuf:"varint,3,opt,name=redirect_http,json=redirectHttp"`
	xxx_hidden_MinTlsVersion *string                `protobuf:"bytes,4,opt,name=min_tls_version,json=minTlsVersion"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *SSLConfig) Reset() {
	*x = SSLConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSLConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSLConfig) ProtoMessage() {}

func (x *SSLConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SSLConfig) GetCertificateId() string {
	if x != nil {
		if x.xxx_hidden_CertificateId != nil {
			return *x.xxx_hidden_CertificateId
		}
		return ""
	}
	return ""
}

func (x *SSLConfig) GetSslPolicy() string {
	if x != nil {
		if x.xxx_hidden_SslPolicy != nil {
			return *x.xxx_hidden_SslPolicy
		}
		return ""
	}
	return ""
}

func (x *SSLConfig) GetRedirectHttp() bool {
	if x != nil {
		return x.xxx_hidden_RedirectHttp
	}
	return false
}

func (x *SSLConfig) GetMinTlsVersion() string {
	if x != nil {
		if x.xxx_hidden_MinTlsVersion != nil {
			return *x.xxx_hidden_MinTlsVersion
		}
		return ""
	}
	return ""
}

func (x *SSLConfig) SetCertificateId(v string) {
	x.xxx_hidden_CertificateId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *SSLConfig) SetSslPolicy(v string) {
	x.xxx_hidden_SslPolicy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *SSLConfig) SetRedirectHttp(v bool) {
	x.xxx_hidden_RedirectHttp = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *SSLConfig) SetMinTlsVersion(v string) {
	x.xxx_hidden_MinTlsVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *SSLConfig) HasCertificateId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SSLConfig) HasSslPolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SSLConfig) HasRedirectHttp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SSLConfig) HasMinTlsVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SSLConfig) ClearCertificateId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CertificateId = nil
}

func (x *SSLConfig) ClearSslPolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SslPolicy = nil
}

func (x *SSLConfig) ClearRedirectHttp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_RedirectHttp = false
}

func (x *SSLConfig) ClearMinTlsVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MinTlsVersion = nil
}

type SSLConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// SSL certificate ARN or ID
	CertificateId *string
	// SSL policy
	SslPolicy *string
	// Whether to redirect HTTP to HTTPS
	RedirectHttp *bool
	// Minimum TLS version
	MinTlsVersion *string
}

func (b0 SSLConfig_builder) Build() *SSLConfig {
	m0 := &SSLConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CertificateId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_CertificateId = b.CertificateId
	}
	if b.SslPolicy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_SslPolicy = b.SslPolicy
	}
	if b.RedirectHttp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_RedirectHttp = *b.RedirectHttp
	}
	if b.MinTlsVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_MinTlsVersion = b.MinTlsVersion
	}
	return m0
}

type CacheBehavior struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PathPattern    *string                `protobuf:"bytes,1,opt,name=path_pattern,json=pathPattern"`
	xxx_hidden_TtlSeconds     int64                  `protobuf:"varint,2,opt,name=ttl_seconds,json=ttlSeconds"`
	xxx_hidden_Compress       bool                   `protobuf:"varint,3,opt,name=compress"`
	xxx_hidden_AllowedMethods []string               `protobuf:"bytes,4,rep,name=allowed_methods,json=allowedMethods"`
	xxx_hidden_CacheKey       *CacheKeyPolicy        `protobuf:"bytes,5,opt,name=cache_key,json=cacheKey"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CacheBehavior) Reset() {
	*x = CacheBehavior{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheBehavior) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheBehavior) ProtoMessage() {}

func (x *CacheBehavior) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CacheBehavior) GetPathPattern() string {
	if x != nil {
		if x.xxx_hidden_PathPattern != nil {
			return *x.xxx_hidden_PathPattern
		}
		return ""
	}
	return ""
}

func (x *CacheBehavior) GetTtlSeconds() int64 {
	if x != nil {
		return x.xxx_hidden_TtlSeconds
	}
	return 0
}

func (x *CacheBehavior) GetCompress() bool {
	if x != nil {
		return x.xxx_hidden_Compress
	}
	return false
}

func (x *CacheBehavior) GetAllowedMethods() []string {
	if x != nil {
		return x.xxx_hidden_AllowedMethods
	}
	return nil
}

func (x *CacheBehavior) GetCacheKey() *CacheKeyPolicy {
	if x != nil {
		return x.xxx_hidden_CacheKey
	}
	return nil
}

func (x *CacheBehavior) SetPathPattern(v string) {
	x.xxx_hidden_PathPattern = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *CacheBehavior) SetTtlSeconds(v int64) {
	x.xxx_hidden_TtlSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *CacheBehavior) SetCompress(v bool) {
	x.xxx_hidden_Compress = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *CacheBehavior) SetAllowedMethods(v []string) {
	x.xxx_hidden_AllowedMethods = v
}

func (x *CacheBehavior) SetCacheKey(v *CacheKeyPolicy) {
	x.xxx_hidden_CacheKey = v
}

func (x *CacheBehavior) HasPathPattern() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CacheBehavior) HasTtlSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CacheBehavior) HasCompress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CacheBehavior) HasCacheKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CacheKey != nil
}

func (x *CacheBehavior) ClearPathPattern() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PathPattern = nil
}

func (x *CacheBehavior) ClearTtlSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TtlSeconds = 0
}

func (x *CacheBehavior) ClearCompress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Compress = false
}

func (x *CacheBehavior) ClearCacheKey() {
	x.xxx_hidden_CacheKey = nil
}

type CacheBehavior_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Path pattern for this behavior
	PathPattern *string
	// Cache TTL in seconds
	TtlSeconds *int64
	// Whether to compress objects
	Compress *bool
	// Allowed HTTP methods
	AllowedMethods []string
	// Cache key policy
	CacheKey *CacheKeyPolicy
}

func (b0 CacheBehavior_builder) Build() *CacheBehavior {
	m0 := &CacheBehavior{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PathPattern != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_PathPattern = b.PathPattern
	}
	if b.TtlSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_TtlSeconds = *b.TtlSeconds
	}
	if b.Compress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Compress = *b.Compress
	}
	x.xxx_hidden_AllowedMethods = b.AllowedMethods
	x.xxx_hidden_CacheKey = b.CacheKey
	return m0
}

type OriginConfig struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DomainName     *string                `protobuf:"bytes,1,opt,name=domain_name,json=domainName"`
	xxx_hidden_OriginPath     *string                `protobuf:"bytes,2,opt,name=origin_path,json=originPath"`
	xxx_hidden_ProtocolPolicy *string                `protobuf:"bytes,3,opt,name=protocol_policy,json=protocolPolicy"`
	xxx_hidden_CustomHeaders  *[]*proto.KeyValue     `protobuf:"bytes,4,rep,name=custom_headers,json=customHeaders"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *OriginConfig) Reset() {
	*x = OriginConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OriginConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginConfig) ProtoMessage() {}

func (x *OriginConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OriginConfig) GetDomainName() string {
	if x != nil {
		if x.xxx_hidden_DomainName != nil {
			return *x.xxx_hidden_DomainName
		}
		return ""
	}
	return ""
}

func (x *OriginConfig) GetOriginPath() string {
	if x != nil {
		if x.xxx_hidden_OriginPath != nil {
			return *x.xxx_hidden_OriginPath
		}
		return ""
	}
	return ""
}

func (x *OriginConfig) GetProtocolPolicy() string {
	if x != nil {
		if x.xxx_hidden_ProtocolPolicy != nil {
			return *x.xxx_hidden_ProtocolPolicy
		}
		return ""
	}
	return ""
}

func (x *OriginConfig) GetCustomHeaders() []*proto.KeyValue {
	if x != nil {
		if x.xxx_hidden_CustomHeaders != nil {
			return *x.xxx_hidden_CustomHeaders
		}
	}
	return nil
}

func (x *OriginConfig) SetDomainName(v string) {
	x.xxx_hidden_DomainName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *OriginConfig) SetOriginPath(v string) {
	x.xxx_hidden_OriginPath = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *OriginConfig) SetProtocolPolicy(v string) {
	x.xxx_hidden_ProtocolPolicy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *OriginConfig) SetCustomHeaders(v []*proto.KeyValue) {
	x.xxx_hidden_CustomHeaders = &v
}

func (x *OriginConfig) HasDomainName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OriginConfig) HasOriginPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *OriginConfig) HasProtocolPolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *OriginConfig) ClearDomainName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DomainName = nil
}

func (x *OriginConfig) ClearOriginPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OriginPath = nil
}

func (x *OriginConfig) ClearProtocolPolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ProtocolPolicy = nil
}

type OriginConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Origin domain name
	DomainName *string
	// Origin path
	OriginPath *string
	// Origin protocol policy
	ProtocolPolicy *string
	// Custom headers to send to origin
	CustomHeaders []*proto.KeyValue
}

func (b0 OriginConfig_builder) Build() *OriginConfig {
	m0 := &OriginConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DomainName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_DomainName = b.DomainName
	}
	if b.OriginPath != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_OriginPath = b.OriginPath
	}
	if b.ProtocolPolicy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ProtocolPolicy = b.ProtocolPolicy
	}
	x.xxx_hidden_CustomHeaders = &b.CustomHeaders
	return m0
}

type DNSConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Provider    *string                `protobuf:"bytes,1,opt,name=provider"`
	xxx_hidden_ZoneId      *string                `protobuf:"bytes,2,opt,name=zone_id,json=zoneId"`
	xxx_hidden_Records     *[]*DNSRecord          `protobuf:"bytes,3,rep,name=records"`
	xxx_hidden_Ttl         int32                  `protobuf:"varint,4,opt,name=ttl"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DNSConfig) Reset() {
	*x = DNSConfig{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSConfig) ProtoMessage() {}

func (x *DNSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DNSConfig) GetProvider() string {
	if x != nil {
		if x.xxx_hidden_Provider != nil {
			return *x.xxx_hidden_Provider
		}
		return ""
	}
	return ""
}

func (x *DNSConfig) GetZoneId() string {
	if x != nil {
		if x.xxx_hidden_ZoneId != nil {
			return *x.xxx_hidden_ZoneId
		}
		return ""
	}
	return ""
}

func (x *DNSConfig) GetRecords() []*DNSRecord {
	if x != nil {
		if x.xxx_hidden_Records != nil {
			return *x.xxx_hidden_Records
		}
	}
	return nil
}

func (x *DNSConfig) GetTtl() int32 {
	if x != nil {
		return x.xxx_hidden_Ttl
	}
	return 0
}

func (x *DNSConfig) SetProvider(v string) {
	x.xxx_hidden_Provider = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DNSConfig) SetZoneId(v string) {
	x.xxx_hidden_ZoneId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DNSConfig) SetRecords(v []*DNSRecord) {
	x.xxx_hidden_Records = &v
}

func (x *DNSConfig) SetTtl(v int32) {
	x.xxx_hidden_Ttl = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DNSConfig) HasProvider() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DNSConfig) HasZoneId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DNSConfig) HasTtl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DNSConfig) ClearProvider() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Provider = nil
}

func (x *DNSConfig) ClearZoneId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ZoneId = nil
}

func (x *DNSConfig) ClearTtl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Ttl = 0
}

type DNSConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// DNS provider
	Provider *string
	// DNS zone ID
	ZoneId *string
	// DNS records
	Records []*DNSRecord
	// TTL for DNS records
	Ttl *int32
}

func (b0 DNSConfig_builder) Build() *DNSConfig {
	m0 := &DNSConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Provider != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Provider = b.Provider
	}
	if b.ZoneId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ZoneId = b.ZoneId
	}
	x.xxx_hidden_Records = &b.Records
	if b.Ttl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Ttl = *b.Ttl
	}
	return m0
}

type DNSRecord struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type        *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Value       *string                `protobuf:"bytes,3,opt,name=value"`
	xxx_hidden_Ttl         int32                  `protobuf:"varint,4,opt,name=ttl"`
	xxx_hidden_Priority    int32                  `protobuf:"varint,5,opt,name=priority"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DNSRecord) Reset() {
	*x = DNSRecord{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSRecord) ProtoMessage() {}

func (x *DNSRecord) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DNSRecord) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *DNSRecord) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DNSRecord) GetValue() string {
	if x != nil {
		if x.xxx_hidden_Value != nil {
			return *x.xxx_hidden_Value
		}
		return ""
	}
	return ""
}

func (x *DNSRecord) GetTtl() int32 {
	if x != nil {
		return x.xxx_hidden_Ttl
	}
	return 0
}

func (x *DNSRecord) GetPriority() int32 {
	if x != nil {
		return x.xxx_hidden_Priority
	}
	return 0
}

func (x *DNSRecord) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *DNSRecord) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *DNSRecord) SetValue(v string) {
	x.xxx_hidden_Value = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *DNSRecord) SetTtl(v int32) {
	x.xxx_hidden_Ttl = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *DNSRecord) SetPriority(v int32) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *DNSRecord) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DNSRecord) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DNSRecord) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DNSRecord) HasTtl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DNSRecord) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DNSRecord) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *DNSRecord) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *DNSRecord) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Value = nil
}

func (x *DNSRecord) ClearTtl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Ttl = 0
}

func (x *DNSRecord) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Priority = 0
}

type DNSRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Record type (A, CNAME, TXT, etc.)
	Type *string
	// Record name
	Name *string
	// Record value
	Value *string
	// Record TTL
	Ttl *int32
	// Record priority (for MX records)
	Priority *int32
}

func (b0 DNSRecord_builder) Build() *DNSRecord {
	m0 := &DNSRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Type = b.Type
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Value = b.Value
	}
	if b.Ttl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Ttl = *b.Ttl
	}
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Priority = *b.Priority
	}
	return m0
}

type CacheKeyPolicy struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_IncludeQueryStrings  bool                   `protobuf:"varint,1,opt,name=include_query_strings,json=includeQueryStrings"`
	xxx_hidden_QueryStringWhitelist []string               `protobuf:"bytes,2,rep,name=query_string_whitelist,json=queryStringWhitelist"`
	xxx_hidden_IncludeHeaders       bool                   `protobuf:"varint,3,opt,name=include_headers,json=includeHeaders"`
	xxx_hidden_HeaderWhitelist      []string               `protobuf:"bytes,4,rep,name=header_whitelist,json=headerWhitelist"`
	xxx_hidden_IncludeCookies       bool                   `protobuf:"varint,5,opt,name=include_cookies,json=includeCookies"`
	xxx_hidden_CookieWhitelist      []string               `protobuf:"bytes,6,rep,name=cookie_whitelist,json=cookieWhitelist"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *CacheKeyPolicy) Reset() {
	*x = CacheKeyPolicy{}
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheKeyPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheKeyPolicy) ProtoMessage() {}

func (x *CacheKeyPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CacheKeyPolicy) GetIncludeQueryStrings() bool {
	if x != nil {
		return x.xxx_hidden_IncludeQueryStrings
	}
	return false
}

func (x *CacheKeyPolicy) GetQueryStringWhitelist() []string {
	if x != nil {
		return x.xxx_hidden_QueryStringWhitelist
	}
	return nil
}

func (x *CacheKeyPolicy) GetIncludeHeaders() bool {
	if x != nil {
		return x.xxx_hidden_IncludeHeaders
	}
	return false
}

func (x *CacheKeyPolicy) GetHeaderWhitelist() []string {
	if x != nil {
		return x.xxx_hidden_HeaderWhitelist
	}
	return nil
}

func (x *CacheKeyPolicy) GetIncludeCookies() bool {
	if x != nil {
		return x.xxx_hidden_IncludeCookies
	}
	return false
}

func (x *CacheKeyPolicy) GetCookieWhitelist() []string {
	if x != nil {
		return x.xxx_hidden_CookieWhitelist
	}
	return nil
}

func (x *CacheKeyPolicy) SetIncludeQueryStrings(v bool) {
	x.xxx_hidden_IncludeQueryStrings = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *CacheKeyPolicy) SetQueryStringWhitelist(v []string) {
	x.xxx_hidden_QueryStringWhitelist = v
}

func (x *CacheKeyPolicy) SetIncludeHeaders(v bool) {
	x.xxx_hidden_IncludeHeaders = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *CacheKeyPolicy) SetHeaderWhitelist(v []string) {
	x.xxx_hidden_HeaderWhitelist = v
}

func (x *CacheKeyPolicy) SetIncludeCookies(v bool) {
	x.xxx_hidden_IncludeCookies = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *CacheKeyPolicy) SetCookieWhitelist(v []string) {
	x.xxx_hidden_CookieWhitelist = v
}

func (x *CacheKeyPolicy) HasIncludeQueryStrings() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CacheKeyPolicy) HasIncludeHeaders() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CacheKeyPolicy) HasIncludeCookies() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CacheKeyPolicy) ClearIncludeQueryStrings() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_IncludeQueryStrings = false
}

func (x *CacheKeyPolicy) ClearIncludeHeaders() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_IncludeHeaders = false
}

func (x *CacheKeyPolicy) ClearIncludeCookies() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_IncludeCookies = false
}

type CacheKeyPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether to include query strings in cache key
	IncludeQueryStrings *bool
	// Query string whitelist
	QueryStringWhitelist []string
	// Whether to include headers in cache key
	IncludeHeaders *bool
	// Header whitelist
	HeaderWhitelist []string
	// Whether to include cookies in cache key
	IncludeCookies *bool
	// Cookie whitelist
	CookieWhitelist []string
}

func (b0 CacheKeyPolicy_builder) Build() *CacheKeyPolicy {
	m0 := &CacheKeyPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	if b.IncludeQueryStrings != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_IncludeQueryStrings = *b.IncludeQueryStrings
	}
	x.xxx_hidden_QueryStringWhitelist = b.QueryStringWhitelist
	if b.IncludeHeaders != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_IncludeHeaders = *b.IncludeHeaders
	}
	x.xxx_hidden_HeaderWhitelist = b.HeaderWhitelist
	if b.IncludeCookies != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_IncludeCookies = *b.IncludeCookies
	}
	x.xxx_hidden_CookieWhitelist = b.CookieWhitelist
	return m0
}

var File_pkg_organization_proto_types_tenant_isolation_proto protoreflect.FileDescriptor

const file_pkg_organization_proto_types_tenant_isolation_proto_rawDesc = "" +
	"\n" +
	"3pkg/organization/proto/types/tenant_isolation.proto\x12\x17gcommon.v1.organization\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a2pkg/organization/proto/enums/isolation_level.proto\x1a&pkg/common/proto/types/key_value.proto\"\xba\x06\n" +
	"\x0fTenantIsolation\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12=\n" +
	"\x05level\x18\x02 \x01(\x0e2'.gcommon.v1.organization.IsolationLevelR\x05level\x12F\n" +
	"\bdatabase\x18\x03 \x01(\v2*.gcommon.v1.organization.DatabaseIsolationR\bdatabase\x12C\n" +
	"\anetwork\x18\x04 \x01(\v2).gcommon.v1.organization.NetworkIsolationR\anetwork\x12C\n" +
	"\astorage\x18\x05 \x01(\v2).gcommon.v1.organization.StorageIsolationR\astorage\x12C\n" +
	"\acompute\x18\x06 \x01(\v2).gcommon.v1.organization.ComputeIsolationR\acompute\x12I\n" +
	"\n" +
	"encryption\x18\a \x01(\v2).gcommon.v1.organization.EncryptionConfigR\n" +
	"encryption\x12M\n" +
	"\x0eaccess_control\x18\b \x01(\v2&.gcommon.v1.organization.AccessControlR\raccessControl\x12:\n" +
	"\x05audit\x18\t \x01(\v2$.gcommon.v1.organization.AuditConfigR\x05audit\x12;\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2\x1b.gcommon.v1.common.KeyValueB\x02(\x01R\bmetadata\x12=\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\tcreatedAt\x12=\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\tupdatedAt\x12#\n" +
	"\rconfigured_by\x18\r \x01(\tR\fconfiguredBy\"\xa9\x03\n" +
	"\x11DatabaseIsolation\x12+\n" +
	"\x11database_instance\x18\x01 \x01(\tR\x10databaseInstance\x12\x1f\n" +
	"\vschema_name\x18\x02 \x01(\tR\n" +
	"schemaName\x12L\n" +
	"\x11connection_params\x18\x03 \x03(\v2\x1b.gcommon.v1.common.KeyValueB\x02(\x01R\x10connectionParams\x12-\n" +
	"\x12dedicated_database\x18\x04 \x01(\bR\x11dedicatedDatabase\x12=\n" +
	"\x06backup\x18\x05 \x01(\v2%.gcommon.v1.organization.BackupConfigR\x06backup\x12-\n" +
	"\x12allowed_operations\x18\x06 \x03(\tR\x11allowedOperations\x12'\n" +
	"\x0fmax_connections\x18\a \x01(\x05R\x0emaxConnections\x122\n" +
	"\x15query_timeout_seconds\x18\b \x01(\x05R\x13queryTimeoutSeconds\"\xae\x03\n" +
	"\x10NetworkIsolation\x12\x15\n" +
	"\x06vpc_id\x18\x01 \x01(\tR\x05vpcId\x12\x1b\n" +
	"\tsubnet_id\x18\x02 \x01(\tR\bsubnetId\x12,\n" +
	"\x12security_group_ids\x18\x03 \x03(\tR\x10securityGroupIds\x12D\n" +
	"\tacl_rules\x18\x04 \x03(\v2'.gcommon.v1.organization.NetworkACLRuleR\baclRules\x12+\n" +
	"\x11dedicated_network\x18\x05 \x01(\bR\x10dedicatedNetwork\x12P\n" +
	"\rload_balancer\x18\x06 \x01(\v2+.gcommon.v1.organization.LoadBalancerConfigR\floadBalancer\x124\n" +
	"\x03cdn\x18\a \x01(\v2\".gcommon.v1.organization.CDNConfigR\x03cdn\x12=\n" +
	"\x06domain\x18\b \x01(\v2%.gcommon.v1.organization.DomainConfigR\x06domain\"\x9a\x03\n" +
	"\x10StorageIsolation\x12%\n" +
	"\x0estorage_bucket\x18\x01 \x01(\tR\rstorageBucket\x12\x1f\n" +
	"\vpath_prefix\x18\x02 \x01(\tR\n" +
	"pathPrefix\x12+\n" +
	"\x11dedicated_storage\x18\x03 \x01(\bR\x10dedicatedStorage\x12J\n" +
	"\n" +
	"encryption\x18\x04 \x01(\v2*.gcommon.v1.organization.StorageEncryptionR\n" +
	"encryption\x12B\n" +
	"\bpolicies\x18\x05 \x03(\v2&.gcommon.v1.organization.StoragePolicyR\bpolicies\x12D\n" +
	"\x06backup\x18\x06 \x01(\v2,.gcommon.v1.organization.StorageBackupConfigR\x06backup\x12;\n" +
	"\x05quota\x18\a \x01(\v2%.gcommon.v1.organization.StorageQuotaR\x05quota\"\x95\x03\n" +
	"\x10ComputeIsolation\x12)\n" +
	"\x10compute_instance\x18\x01 \x01(\tR\x0fcomputeInstance\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x128\n" +
	"\x03cpu\x18\x03 \x01(\v2&.gcommon.v1.organization.CPUAllocationR\x03cpu\x12A\n" +
	"\x06memory\x18\x04 \x01(\v2).gcommon.v1.organization.MemoryAllocationR\x06memory\x12+\n" +
	"\x11dedicated_compute\x18\x05 \x01(\bR\x10dedicatedCompute\x12?\n" +
	"\x06limits\x18\x06 \x01(\v2'.gcommon.v1.organization.ResourceLimitsR\x06limits\x12M\n" +
	"\fauto_scaling\x18\a \x01(\v2*.gcommon.v1.organization.AutoScalingConfigR\vautoScaling\"\x85\x02\n" +
	"\x10EncryptionConfig\x12,\n" +
	"\x12encryption_at_rest\x18\x01 \x01(\bR\x10encryptionAtRest\x122\n" +
	"\x15encryption_in_transit\x18\x02 \x01(\bR\x13encryptionInTransit\x124\n" +
	"\x16key_management_service\x18\x03 \x01(\tR\x14keyManagementService\x12&\n" +
	"\x0fcustomer_key_id\x18\x04 \x01(\tR\rcustomerKeyId\x121\n" +
	"\x14encryption_algorithm\x18\x05 \x01(\tR\x13encryptionAlgorithm\"\xba\x02\n" +
	"\rAccessControl\x12!\n" +
	"\fip_whitelist\x18\x01 \x03(\tR\vipWhitelist\x12!\n" +
	"\fauth_methods\x18\x02 \x03(\tR\vauthMethods\x12'\n" +
	"\x0fsession_timeout\x18\x03 \x01(\x05R\x0esessionTimeout\x126\n" +
	"\x17max_concurrent_sessions\x18\x04 \x01(\x05R\x15maxConcurrentSessions\x12+\n" +
	"\x11allowed_countries\x18\x05 \x03(\tR\x10allowedCountries\x12U\n" +
	"\x11time_restrictions\x18\x06 \x03(\v2(.gcommon.v1.organization.TimeRestrictionR\x10timeRestrictions\"\x9a\x02\n" +
	"\vAuditConfig\x12#\n" +
	"\raudit_enabled\x18\x01 \x01(\bR\fauditEnabled\x12%\n" +
	"\x0eretention_days\x18\x02 \x01(\x05R\rretentionDays\x12)\n" +
	"\x10storage_location\x18\x03 \x01(\tR\x0fstorageLocation\x12%\n" +
	"\x0eaudited_events\x18\x04 \x03(\tR\rauditedEvents\x120\n" +
	"\x14real_time_monitoring\x18\x05 \x01(\bR\x12realTimeMonitoring\x12;\n" +
	"\x06alerts\x18\x06 \x03(\v2#.gcommon.v1.organization.AuditAlertR\x06alerts\"\xcd\x01\n" +
	"\fBackupConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1c\n" +
	"\tfrequency\x18\x02 \x01(\tR\tfrequency\x12%\n" +
	"\x0eretention_days\x18\x03 \x01(\x05R\rretentionDays\x12)\n" +
	"\x10storage_location\x18\x04 \x01(\tR\x0fstorageLocation\x123\n" +
	"\x16point_in_time_recovery\x18\x05 \x01(\bR\x13pointInTimeRecovery\"\xb9\x01\n" +
	"\x0eNetworkACLRule\x12\x16\n" +
	"\x06action\x18\x01 \x01(\tR\x06action\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12 \n" +
	"\vdestination\x18\x03 \x01(\tR\vdestination\x12\x1a\n" +
	"\bprotocol\x18\x04 \x01(\tR\bprotocol\x12\x1d\n" +
	"\n" +
	"port_range\x18\x05 \x01(\tR\tportRange\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\x05R\bpriority\"\xcb\x01\n" +
	"\x12LoadBalancerConfig\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x1c\n" +
	"\talgorithm\x18\x02 \x01(\tR\talgorithm\x12M\n" +
	"\fhealth_check\x18\x03 \x01(\v2*.gcommon.v1.organization.HealthCheckConfigR\vhealthCheck\x124\n" +
	"\x03ssl\x18\x04 \x01(\v2\".gcommon.v1.organization.SSLConfigR\x03ssl\"\xe0\x01\n" +
	"\tCDNConfig\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12'\n" +
	"\x0fdistribution_id\x18\x02 \x01(\tR\x0edistributionId\x12O\n" +
	"\x0fcache_behaviors\x18\x03 \x03(\v2&.gcommon.v1.organization.CacheBehaviorR\x0ecacheBehaviors\x12=\n" +
	"\x06origin\x18\x04 \x01(\v2%.gcommon.v1.organization.OriginConfigR\x06origin\"\xbb\x01\n" +
	"\fDomainConfig\x12\x1f\n" +
	"\vdomain_name\x18\x01 \x01(\tR\n" +
	"domainName\x12'\n" +
	"\x0fssl_certificate\x18\x02 \x01(\tR\x0esslCertificate\x124\n" +
	"\x03dns\x18\x03 \x01(\v2\".gcommon.v1.organization.DNSConfigR\x03dns\x12+\n" +
	"\x11validation_status\x18\x04 \x01(\tR\x10validationStatus\"\x80\x01\n" +
	"\x11StorageEncryption\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x15\n" +
	"\x06key_id\x18\x02 \x01(\tR\x05keyId\x12\x1f\n" +
	"\vserver_side\x18\x03 \x01(\bR\n" +
	"serverSide\x12\x1f\n" +
	"\vclient_side\x18\x04 \x01(\bR\n" +
	"clientSide\"\x91\x01\n" +
	"\rStoragePolicy\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tstatement\x18\x02 \x01(\tR\tstatement\x12\x16\n" +
	"\x06effect\x18\x03 \x01(\tR\x06effect\x12\x1c\n" +
	"\tresources\x18\x04 \x03(\tR\tresources\x12\x18\n" +
	"\aactions\x18\x05 \x03(\tR\aactions\"\xc4\x01\n" +
	"\x13StorageBackupConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1a\n" +
	"\bschedule\x18\x02 \x01(\tR\bschedule\x12%\n" +
	"\x0eretention_days\x18\x03 \x01(\x05R\rretentionDays\x12!\n" +
	"\fcross_region\x18\x04 \x01(\bR\vcrossRegion\x12-\n" +
	"\x12encryption_enabled\x18\x05 \x01(\bR\x11encryptionEnabled\"\xbe\x01\n" +
	"\fStorageQuota\x12$\n" +
	"\x0emax_size_bytes\x18\x01 \x01(\x03R\fmaxSizeBytes\x12\x1f\n" +
	"\vmax_objects\x18\x02 \x01(\x03R\n" +
	"maxObjects\x125\n" +
	"\x17max_requests_per_second\x18\x03 \x01(\x05R\x14maxRequestsPerSecond\x120\n" +
	"\x14transfer_quota_bytes\x18\x04 \x01(\x03R\x12transferQuotaBytes\"\x96\x01\n" +
	"\rCPUAllocation\x12\x14\n" +
	"\x05cores\x18\x01 \x01(\x05R\x05cores\x12#\n" +
	"\rfrequency_mhz\x18\x02 \x01(\x05R\ffrequencyMhz\x12.\n" +
	"\x13usage_limit_percent\x18\x03 \x01(\x05R\x11usageLimitPercent\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x05R\bpriority\"t\n" +
	"\x10MemoryAllocation\x12\x17\n" +
	"\asize_mb\x18\x01 \x01(\x03R\x06sizeMb\x12.\n" +
	"\x13usage_limit_percent\x18\x02 \x01(\x05R\x11usageLimitPercent\x12\x17\n" +
	"\aswap_mb\x18\x03 \x01(\x03R\x06swapMb\"\x81\x02\n" +
	"\x0eResourceLimits\x12&\n" +
	"\x0fmax_cpu_percent\x18\x01 \x01(\x05R\rmaxCpuPercent\x12\"\n" +
	"\rmax_memory_mb\x18\x02 \x01(\x03R\vmaxMemoryMb\x12\"\n" +
	"\rmax_disk_iops\x18\x03 \x01(\x05R\vmaxDiskIops\x12(\n" +
	"\x10max_network_mbps\x18\x04 \x01(\x05R\x0emaxNetworkMbps\x12#\n" +
	"\rmax_processes\x18\x05 \x01(\x05R\fmaxProcesses\x120\n" +
	"\x14max_file_descriptors\x18\x06 \x01(\x05R\x12maxFileDescriptors\"\xb5\x02\n" +
	"\x11AutoScalingConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12#\n" +
	"\rmin_instances\x18\x02 \x01(\x05R\fminInstances\x12#\n" +
	"\rmax_instances\x18\x03 \x01(\x05R\fmaxInstances\x12,\n" +
	"\x12target_cpu_percent\x18\x04 \x01(\x05R\x10targetCpuPercent\x122\n" +
	"\x15target_memory_percent\x18\x05 \x01(\x05R\x13targetMemoryPercent\x12*\n" +
	"\x11scale_up_cooldown\x18\x06 \x01(\x05R\x0fscaleUpCooldown\x12.\n" +
	"\x13scale_down_cooldown\x18\a \x01(\x05R\x11scaleDownCooldown\"\x87\x01\n" +
	"\x0fTimeRestriction\x12\x1e\n" +
	"\vday_of_week\x18\x01 \x01(\x05R\tdayOfWeek\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\tR\aendTime\x12\x1a\n" +
	"\btimezone\x18\x04 \x01(\tR\btimezone\"\xe6\x01\n" +
	"\n" +
	"AuditAlert\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\x0eevent_patterns\x18\x02 \x03(\tR\reventPatterns\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\tR\bseverity\x123\n" +
	"\x15notification_channels\x18\x04 \x03(\tR\x14notificationChannels\x12\x1c\n" +
	"\tthreshold\x18\x05 \x01(\x05R\tthreshold\x12.\n" +
	"\x13time_window_minutes\x18\x06 \x01(\x05R\x11timeWindowMinutes\"\x89\x02\n" +
	"\x11HealthCheckConfig\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12)\n" +
	"\x10interval_seconds\x18\x04 \x01(\x05R\x0fintervalSeconds\x12'\n" +
	"\x0ftimeout_seconds\x18\x05 \x01(\x05R\x0etimeoutSeconds\x12+\n" +
	"\x11healthy_threshold\x18\x06 \x01(\x05R\x10healthyThreshold\x12/\n" +
	"\x13unhealthy_threshold\x18\a \x01(\x05R\x12unhealthyThreshold\"\x9e\x01\n" +
	"\tSSLConfig\x12%\n" +
	"\x0ecertificate_id\x18\x01 \x01(\tR\rcertificateId\x12\x1d\n" +
	"\n" +
	"ssl_policy\x18\x02 \x01(\tR\tsslPolicy\x12#\n" +
	"\rredirect_http\x18\x03 \x01(\bR\fredirectHttp\x12&\n" +
	"\x0fmin_tls_version\x18\x04 \x01(\tR\rminTlsVersion\"\xde\x01\n" +
	"\rCacheBehavior\x12!\n" +
	"\fpath_pattern\x18\x01 \x01(\tR\vpathPattern\x12\x1f\n" +
	"\vttl_seconds\x18\x02 \x01(\x03R\n" +
	"ttlSeconds\x12\x1a\n" +
	"\bcompress\x18\x03 \x01(\bR\bcompress\x12'\n" +
	"\x0fallowed_methods\x18\x04 \x03(\tR\x0eallowedMethods\x12D\n" +
	"\tcache_key\x18\x05 \x01(\v2'.gcommon.v1.organization.CacheKeyPolicyR\bcacheKey\"\xbd\x01\n" +
	"\fOriginConfig\x12\x1f\n" +
	"\vdomain_name\x18\x01 \x01(\tR\n" +
	"domainName\x12\x1f\n" +
	"\vorigin_path\x18\x02 \x01(\tR\n" +
	"originPath\x12'\n" +
	"\x0fprotocol_policy\x18\x03 \x01(\tR\x0eprotocolPolicy\x12B\n" +
	"\x0ecustom_headers\x18\x04 \x03(\v2\x1b.gcommon.v1.common.KeyValueR\rcustomHeaders\"\x90\x01\n" +
	"\tDNSConfig\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x17\n" +
	"\azone_id\x18\x02 \x01(\tR\x06zoneId\x12<\n" +
	"\arecords\x18\x03 \x03(\v2\".gcommon.v1.organization.DNSRecordR\arecords\x12\x10\n" +
	"\x03ttl\x18\x04 \x01(\x05R\x03ttl\"w\n" +
	"\tDNSRecord\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12\x10\n" +
	"\x03ttl\x18\x04 \x01(\x05R\x03ttl\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority\"\xa2\x02\n" +
	"\x0eCacheKeyPolicy\x122\n" +
	"\x15include_query_strings\x18\x01 \x01(\bR\x13includeQueryStrings\x124\n" +
	"\x16query_string_whitelist\x18\x02 \x03(\tR\x14queryStringWhitelist\x12'\n" +
	"\x0finclude_headers\x18\x03 \x01(\bR\x0eincludeHeaders\x12)\n" +
	"\x10header_whitelist\x18\x04 \x03(\tR\x0fheaderWhitelist\x12'\n" +
	"\x0finclude_cookies\x18\x05 \x01(\bR\x0eincludeCookies\x12)\n" +
	"\x10cookie_whitelist\x18\x06 \x03(\tR\x0fcookieWhitelistB\xfa\x01\n" +
	"\x1bcom.gcommon.v1.organizationB\x14TenantIsolationProtoP\x01Z?github.com/jdfalk/gcommon/pkg/organization/proto;organizationpb\xa2\x02\x03GVO\xaa\x02\x17Gcommon.V1.Organization\xca\x02\x17Gcommon\\V1\\Organization\xe2\x02#Gcommon\\V1\\Organization\\GPBMetadata\xea\x02\x19Gcommon::V1::Organization\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_pkg_organization_proto_types_tenant_isolation_proto_goTypes = []any{
	(*TenantIsolation)(nil),       // 0: gcommon.v1.organization.TenantIsolation
	(*DatabaseIsolation)(nil),     // 1: gcommon.v1.organization.DatabaseIsolation
	(*NetworkIsolation)(nil),      // 2: gcommon.v1.organization.NetworkIsolation
	(*StorageIsolation)(nil),      // 3: gcommon.v1.organization.StorageIsolation
	(*ComputeIsolation)(nil),      // 4: gcommon.v1.organization.ComputeIsolation
	(*EncryptionConfig)(nil),      // 5: gcommon.v1.organization.EncryptionConfig
	(*AccessControl)(nil),         // 6: gcommon.v1.organization.AccessControl
	(*AuditConfig)(nil),           // 7: gcommon.v1.organization.AuditConfig
	(*BackupConfig)(nil),          // 8: gcommon.v1.organization.BackupConfig
	(*NetworkACLRule)(nil),        // 9: gcommon.v1.organization.NetworkACLRule
	(*LoadBalancerConfig)(nil),    // 10: gcommon.v1.organization.LoadBalancerConfig
	(*CDNConfig)(nil),             // 11: gcommon.v1.organization.CDNConfig
	(*DomainConfig)(nil),          // 12: gcommon.v1.organization.DomainConfig
	(*StorageEncryption)(nil),     // 13: gcommon.v1.organization.StorageEncryption
	(*StoragePolicy)(nil),         // 14: gcommon.v1.organization.StoragePolicy
	(*StorageBackupConfig)(nil),   // 15: gcommon.v1.organization.StorageBackupConfig
	(*StorageQuota)(nil),          // 16: gcommon.v1.organization.StorageQuota
	(*CPUAllocation)(nil),         // 17: gcommon.v1.organization.CPUAllocation
	(*MemoryAllocation)(nil),      // 18: gcommon.v1.organization.MemoryAllocation
	(*ResourceLimits)(nil),        // 19: gcommon.v1.organization.ResourceLimits
	(*AutoScalingConfig)(nil),     // 20: gcommon.v1.organization.AutoScalingConfig
	(*TimeRestriction)(nil),       // 21: gcommon.v1.organization.TimeRestriction
	(*AuditAlert)(nil),            // 22: gcommon.v1.organization.AuditAlert
	(*HealthCheckConfig)(nil),     // 23: gcommon.v1.organization.HealthCheckConfig
	(*SSLConfig)(nil),             // 24: gcommon.v1.organization.SSLConfig
	(*CacheBehavior)(nil),         // 25: gcommon.v1.organization.CacheBehavior
	(*OriginConfig)(nil),          // 26: gcommon.v1.organization.OriginConfig
	(*DNSConfig)(nil),             // 27: gcommon.v1.organization.DNSConfig
	(*DNSRecord)(nil),             // 28: gcommon.v1.organization.DNSRecord
	(*CacheKeyPolicy)(nil),        // 29: gcommon.v1.organization.CacheKeyPolicy
	(IsolationLevel)(0),           // 30: gcommon.v1.organization.IsolationLevel
	(*proto.KeyValue)(nil),        // 31: gcommon.v1.common.KeyValue
	(*timestamppb.Timestamp)(nil), // 32: google.protobuf.Timestamp
}
var file_pkg_organization_proto_types_tenant_isolation_proto_depIdxs = []int32{
	30, // 0: gcommon.v1.organization.TenantIsolation.level:type_name -> gcommon.v1.organization.IsolationLevel
	1,  // 1: gcommon.v1.organization.TenantIsolation.database:type_name -> gcommon.v1.organization.DatabaseIsolation
	2,  // 2: gcommon.v1.organization.TenantIsolation.network:type_name -> gcommon.v1.organization.NetworkIsolation
	3,  // 3: gcommon.v1.organization.TenantIsolation.storage:type_name -> gcommon.v1.organization.StorageIsolation
	4,  // 4: gcommon.v1.organization.TenantIsolation.compute:type_name -> gcommon.v1.organization.ComputeIsolation
	5,  // 5: gcommon.v1.organization.TenantIsolation.encryption:type_name -> gcommon.v1.organization.EncryptionConfig
	6,  // 6: gcommon.v1.organization.TenantIsolation.access_control:type_name -> gcommon.v1.organization.AccessControl
	7,  // 7: gcommon.v1.organization.TenantIsolation.audit:type_name -> gcommon.v1.organization.AuditConfig
	31, // 8: gcommon.v1.organization.TenantIsolation.metadata:type_name -> gcommon.v1.common.KeyValue
	32, // 9: gcommon.v1.organization.TenantIsolation.created_at:type_name -> google.protobuf.Timestamp
	32, // 10: gcommon.v1.organization.TenantIsolation.updated_at:type_name -> google.protobuf.Timestamp
	31, // 11: gcommon.v1.organization.DatabaseIsolation.connection_params:type_name -> gcommon.v1.common.KeyValue
	8,  // 12: gcommon.v1.organization.DatabaseIsolation.backup:type_name -> gcommon.v1.organization.BackupConfig
	9,  // 13: gcommon.v1.organization.NetworkIsolation.acl_rules:type_name -> gcommon.v1.organization.NetworkACLRule
	10, // 14: gcommon.v1.organization.NetworkIsolation.load_balancer:type_name -> gcommon.v1.organization.LoadBalancerConfig
	11, // 15: gcommon.v1.organization.NetworkIsolation.cdn:type_name -> gcommon.v1.organization.CDNConfig
	12, // 16: gcommon.v1.organization.NetworkIsolation.domain:type_name -> gcommon.v1.organization.DomainConfig
	13, // 17: gcommon.v1.organization.StorageIsolation.encryption:type_name -> gcommon.v1.organization.StorageEncryption
	14, // 18: gcommon.v1.organization.StorageIsolation.policies:type_name -> gcommon.v1.organization.StoragePolicy
	15, // 19: gcommon.v1.organization.StorageIsolation.backup:type_name -> gcommon.v1.organization.StorageBackupConfig
	16, // 20: gcommon.v1.organization.StorageIsolation.quota:type_name -> gcommon.v1.organization.StorageQuota
	17, // 21: gcommon.v1.organization.ComputeIsolation.cpu:type_name -> gcommon.v1.organization.CPUAllocation
	18, // 22: gcommon.v1.organization.ComputeIsolation.memory:type_name -> gcommon.v1.organization.MemoryAllocation
	19, // 23: gcommon.v1.organization.ComputeIsolation.limits:type_name -> gcommon.v1.organization.ResourceLimits
	20, // 24: gcommon.v1.organization.ComputeIsolation.auto_scaling:type_name -> gcommon.v1.organization.AutoScalingConfig
	21, // 25: gcommon.v1.organization.AccessControl.time_restrictions:type_name -> gcommon.v1.organization.TimeRestriction
	22, // 26: gcommon.v1.organization.AuditConfig.alerts:type_name -> gcommon.v1.organization.AuditAlert
	23, // 27: gcommon.v1.organization.LoadBalancerConfig.health_check:type_name -> gcommon.v1.organization.HealthCheckConfig
	24, // 28: gcommon.v1.organization.LoadBalancerConfig.ssl:type_name -> gcommon.v1.organization.SSLConfig
	25, // 29: gcommon.v1.organization.CDNConfig.cache_behaviors:type_name -> gcommon.v1.organization.CacheBehavior
	26, // 30: gcommon.v1.organization.CDNConfig.origin:type_name -> gcommon.v1.organization.OriginConfig
	27, // 31: gcommon.v1.organization.DomainConfig.dns:type_name -> gcommon.v1.organization.DNSConfig
	29, // 32: gcommon.v1.organization.CacheBehavior.cache_key:type_name -> gcommon.v1.organization.CacheKeyPolicy
	31, // 33: gcommon.v1.organization.OriginConfig.custom_headers:type_name -> gcommon.v1.common.KeyValue
	28, // 34: gcommon.v1.organization.DNSConfig.records:type_name -> gcommon.v1.organization.DNSRecord
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_pkg_organization_proto_types_tenant_isolation_proto_init() }
func file_pkg_organization_proto_types_tenant_isolation_proto_init() {
	if File_pkg_organization_proto_types_tenant_isolation_proto != nil {
		return
	}
	file_pkg_organization_proto_enums_isolation_level_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_organization_proto_types_tenant_isolation_proto_rawDesc), len(file_pkg_organization_proto_types_tenant_isolation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_organization_proto_types_tenant_isolation_proto_goTypes,
		DependencyIndexes: file_pkg_organization_proto_types_tenant_isolation_proto_depIdxs,
		MessageInfos:      file_pkg_organization_proto_types_tenant_isolation_proto_msgTypes,
	}.Build()
	File_pkg_organization_proto_types_tenant_isolation_proto = out.File
	file_pkg_organization_proto_types_tenant_isolation_proto_goTypes = nil
	file_pkg_organization_proto_types_tenant_isolation_proto_depIdxs = nil
}
