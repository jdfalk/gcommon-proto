// file: pkg/organization/proto/services/tenant_service.proto
edition = "2023";

package gcommon.v1.organization;

import "google/protobuf/go_features.proto";
import "pkg/organization/proto/proto/configure_tenant_isolation_response.proto";
import "pkg/organization/proto/proto/create_tenant_response.proto";
import "pkg/organization/proto/proto/delete_tenant_response.proto";
import "pkg/organization/proto/proto/get_tenant_isolation_response.proto";
import "pkg/organization/proto/proto/get_tenant_response.proto";
import "pkg/organization/proto/proto/get_tenant_usage_response.proto";
import "pkg/organization/proto/proto/list_tenants_response.proto";
import "pkg/organization/proto/proto/update_tenant_quota_response.proto";
import "pkg/organization/proto/proto/update_tenant_response.proto";

option features.(pb.go).api_level = API_OPAQUE;

/**
 * TenantService provides comprehensive tenant management capabilities.
 * Handles tenant CRUD operations, isolation configuration, quota management,
 * and multi-tenant resource administration.
 */
service TenantService {
  // Create a new tenant within an organization
  rpc CreateTenant(CreateTenantRequest) returns (CreateTenantResponse);

  // Get a tenant by ID
  rpc GetTenant(GetTenantRequest) returns (GetTenantResponse);

  // Update an existing tenant
  rpc UpdateTenant(UpdateTenantRequest) returns (UpdateTenantResponse);

  // Delete a tenant (soft delete)
  rpc DeleteTenant(DeleteTenantRequest) returns (DeleteTenantResponse);

  // List tenants within an organization (with pagination and filtering)
  rpc ListTenants(ListTenantsRequest) returns (ListTenantsResponse);

  // Configure tenant isolation settings
  rpc ConfigureTenantIsolation(ConfigureTenantIsolationRequest) returns (ConfigureTenantIsolationResponse);

  // Get tenant isolation configuration
  rpc GetTenantIsolation(GetTenantIsolationRequest) returns (GetTenantIsolationResponse);

  // Update tenant resource quotas
  rpc UpdateTenantQuota(UpdateTenantQuotaRequest) returns (UpdateTenantQuotaResponse);

  // Get tenant resource usage statistics
  rpc GetTenantUsage(GetTenantUsageRequest) returns (GetTenantUsageResponse);
}
