// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/organization/proto/messages/tenant.proto

//go:build !protoopaque

package organizationpb

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Tenant message representing a tenant within an organization.
// Supports multi-tenant architecture with configurable isolation levels,
// resource quotas, and tenant-specific settings.
type Tenant struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Unique tenant identifier (immutable)
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Parent organization identifier
	OrganizationId *string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	// Tenant name (human-readable identifier)
	Name *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// URL-friendly slug for the tenant (e.g., for subdomains)
	Slug *string `protobuf:"bytes,4,opt,name=slug" json:"slug,omitempty"`
	// Tenant description
	Description *string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	// Current status of the tenant
	Status *TenantStatus `protobuf:"varint,6,opt,name=status,enum=gcommon.v1.organization.TenantStatus" json:"status,omitempty"`
	// Isolation level for this tenant
	IsolationLevel *IsolationLevel `protobuf:"varint,7,opt,name=isolation_level,json=isolationLevel,enum=gcommon.v1.organization.IsolationLevel" json:"isolation_level,omitempty"`
	// Tenant metadata and custom attributes
	Metadata []*proto.KeyValue `protobuf:"bytes,8,rep,name=metadata" json:"metadata,omitempty"`
	// Tenant creation timestamp (immutable)
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last update timestamp
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	// User ID who created this tenant
	CreatedBy *string `protobuf:"bytes,11,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	// User ID who last updated this tenant
	UpdatedBy *string `protobuf:"bytes,12,opt,name=updated_by,json=updatedBy" json:"updated_by,omitempty"`
	// Database connection string or identifier (for DATABASE isolation)
	DatabaseConfig *string `protobuf:"bytes,13,opt,name=database_config,json=databaseConfig" json:"database_config,omitempty"`
	// Network configuration (for NETWORK isolation)
	NetworkConfig *string `protobuf:"bytes,14,opt,name=network_config,json=networkConfig" json:"network_config,omitempty"`
	// Resource quotas for this tenant
	Quota *TenantQuota `protobuf:"bytes,15,opt,name=quota" json:"quota,omitempty"`
	// Custom domain for this tenant (if applicable)
	CustomDomain *string `protobuf:"bytes,16,opt,name=custom_domain,json=customDomain" json:"custom_domain,omitempty"`
	// Tenant's timezone override (inherits from organization if not set)
	Timezone *string `protobuf:"bytes,17,opt,name=timezone" json:"timezone,omitempty"`
	// Tenant's locale override (inherits from organization if not set)
	Locale *string `protobuf:"bytes,18,opt,name=locale" json:"locale,omitempty"`
	// Whether this tenant is in trial mode
	TrialMode *bool `protobuf:"varint,19,opt,name=trial_mode,json=trialMode" json:"trial_mode,omitempty"`
	// Trial expiration timestamp (if trial_mode is true)
	TrialExpiresAt *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=trial_expires_at,json=trialExpiresAt" json:"trial_expires_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Tenant) Reset() {
	*x = Tenant{}
	mi := &file_pkg_organization_proto_messages_tenant_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tenant) ProtoMessage() {}

func (x *Tenant) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_messages_tenant_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Tenant) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Tenant) GetOrganizationId() string {
	if x != nil && x.OrganizationId != nil {
		return *x.OrganizationId
	}
	return ""
}

func (x *Tenant) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Tenant) GetSlug() string {
	if x != nil && x.Slug != nil {
		return *x.Slug
	}
	return ""
}

func (x *Tenant) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Tenant) GetStatus() TenantStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return TenantStatus_TENANT_STATUS_UNSPECIFIED
}

func (x *Tenant) GetIsolationLevel() IsolationLevel {
	if x != nil && x.IsolationLevel != nil {
		return *x.IsolationLevel
	}
	return IsolationLevel_ISOLATION_LEVEL_UNSPECIFIED
}

func (x *Tenant) GetMetadata() []*proto.KeyValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Tenant) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Tenant) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Tenant) GetCreatedBy() string {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return ""
}

func (x *Tenant) GetUpdatedBy() string {
	if x != nil && x.UpdatedBy != nil {
		return *x.UpdatedBy
	}
	return ""
}

func (x *Tenant) GetDatabaseConfig() string {
	if x != nil && x.DatabaseConfig != nil {
		return *x.DatabaseConfig
	}
	return ""
}

func (x *Tenant) GetNetworkConfig() string {
	if x != nil && x.NetworkConfig != nil {
		return *x.NetworkConfig
	}
	return ""
}

func (x *Tenant) GetQuota() *TenantQuota {
	if x != nil {
		return x.Quota
	}
	return nil
}

func (x *Tenant) GetCustomDomain() string {
	if x != nil && x.CustomDomain != nil {
		return *x.CustomDomain
	}
	return ""
}

func (x *Tenant) GetTimezone() string {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return ""
}

func (x *Tenant) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

func (x *Tenant) GetTrialMode() bool {
	if x != nil && x.TrialMode != nil {
		return *x.TrialMode
	}
	return false
}

func (x *Tenant) GetTrialExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TrialExpiresAt
	}
	return nil
}

func (x *Tenant) SetId(v string) {
	x.Id = &v
}

func (x *Tenant) SetOrganizationId(v string) {
	x.OrganizationId = &v
}

func (x *Tenant) SetName(v string) {
	x.Name = &v
}

func (x *Tenant) SetSlug(v string) {
	x.Slug = &v
}

func (x *Tenant) SetDescription(v string) {
	x.Description = &v
}

func (x *Tenant) SetStatus(v TenantStatus) {
	x.Status = &v
}

func (x *Tenant) SetIsolationLevel(v IsolationLevel) {
	x.IsolationLevel = &v
}

func (x *Tenant) SetMetadata(v []*proto.KeyValue) {
	x.Metadata = v
}

func (x *Tenant) SetCreatedAt(v *timestamppb.Timestamp) {
	x.CreatedAt = v
}

func (x *Tenant) SetUpdatedAt(v *timestamppb.Timestamp) {
	x.UpdatedAt = v
}

func (x *Tenant) SetCreatedBy(v string) {
	x.CreatedBy = &v
}

func (x *Tenant) SetUpdatedBy(v string) {
	x.UpdatedBy = &v
}

func (x *Tenant) SetDatabaseConfig(v string) {
	x.DatabaseConfig = &v
}

func (x *Tenant) SetNetworkConfig(v string) {
	x.NetworkConfig = &v
}

func (x *Tenant) SetQuota(v *TenantQuota) {
	x.Quota = v
}

func (x *Tenant) SetCustomDomain(v string) {
	x.CustomDomain = &v
}

func (x *Tenant) SetTimezone(v string) {
	x.Timezone = &v
}

func (x *Tenant) SetLocale(v string) {
	x.Locale = &v
}

func (x *Tenant) SetTrialMode(v bool) {
	x.TrialMode = &v
}

func (x *Tenant) SetTrialExpiresAt(v *timestamppb.Timestamp) {
	x.TrialExpiresAt = v
}

func (x *Tenant) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *Tenant) HasOrganizationId() bool {
	if x == nil {
		return false
	}
	return x.OrganizationId != nil
}

func (x *Tenant) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *Tenant) HasSlug() bool {
	if x == nil {
		return false
	}
	return x.Slug != nil
}

func (x *Tenant) HasDescription() bool {
	if x == nil {
		return false
	}
	return x.Description != nil
}

func (x *Tenant) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *Tenant) HasIsolationLevel() bool {
	if x == nil {
		return false
	}
	return x.IsolationLevel != nil
}

func (x *Tenant) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.CreatedAt != nil
}

func (x *Tenant) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return x.UpdatedAt != nil
}

func (x *Tenant) HasCreatedBy() bool {
	if x == nil {
		return false
	}
	return x.CreatedBy != nil
}

func (x *Tenant) HasUpdatedBy() bool {
	if x == nil {
		return false
	}
	return x.UpdatedBy != nil
}

func (x *Tenant) HasDatabaseConfig() bool {
	if x == nil {
		return false
	}
	return x.DatabaseConfig != nil
}

func (x *Tenant) HasNetworkConfig() bool {
	if x == nil {
		return false
	}
	return x.NetworkConfig != nil
}

func (x *Tenant) HasQuota() bool {
	if x == nil {
		return false
	}
	return x.Quota != nil
}

func (x *Tenant) HasCustomDomain() bool {
	if x == nil {
		return false
	}
	return x.CustomDomain != nil
}

func (x *Tenant) HasTimezone() bool {
	if x == nil {
		return false
	}
	return x.Timezone != nil
}

func (x *Tenant) HasLocale() bool {
	if x == nil {
		return false
	}
	return x.Locale != nil
}

func (x *Tenant) HasTrialMode() bool {
	if x == nil {
		return false
	}
	return x.TrialMode != nil
}

func (x *Tenant) HasTrialExpiresAt() bool {
	if x == nil {
		return false
	}
	return x.TrialExpiresAt != nil
}

func (x *Tenant) ClearId() {
	x.Id = nil
}

func (x *Tenant) ClearOrganizationId() {
	x.OrganizationId = nil
}

func (x *Tenant) ClearName() {
	x.Name = nil
}

func (x *Tenant) ClearSlug() {
	x.Slug = nil
}

func (x *Tenant) ClearDescription() {
	x.Description = nil
}

func (x *Tenant) ClearStatus() {
	x.Status = nil
}

func (x *Tenant) ClearIsolationLevel() {
	x.IsolationLevel = nil
}

func (x *Tenant) ClearCreatedAt() {
	x.CreatedAt = nil
}

func (x *Tenant) ClearUpdatedAt() {
	x.UpdatedAt = nil
}

func (x *Tenant) ClearCreatedBy() {
	x.CreatedBy = nil
}

func (x *Tenant) ClearUpdatedBy() {
	x.UpdatedBy = nil
}

func (x *Tenant) ClearDatabaseConfig() {
	x.DatabaseConfig = nil
}

func (x *Tenant) ClearNetworkConfig() {
	x.NetworkConfig = nil
}

func (x *Tenant) ClearQuota() {
	x.Quota = nil
}

func (x *Tenant) ClearCustomDomain() {
	x.CustomDomain = nil
}

func (x *Tenant) ClearTimezone() {
	x.Timezone = nil
}

func (x *Tenant) ClearLocale() {
	x.Locale = nil
}

func (x *Tenant) ClearTrialMode() {
	x.TrialMode = nil
}

func (x *Tenant) ClearTrialExpiresAt() {
	x.TrialExpiresAt = nil
}

type Tenant_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique tenant identifier (immutable)
	Id *string
	// Parent organization identifier
	OrganizationId *string
	// Tenant name (human-readable identifier)
	Name *string
	// URL-friendly slug for the tenant (e.g., for subdomains)
	Slug *string
	// Tenant description
	Description *string
	// Current status of the tenant
	Status *TenantStatus
	// Isolation level for this tenant
	IsolationLevel *IsolationLevel
	// Tenant metadata and custom attributes
	Metadata []*proto.KeyValue
	// Tenant creation timestamp (immutable)
	CreatedAt *timestamppb.Timestamp
	// Last update timestamp
	UpdatedAt *timestamppb.Timestamp
	// User ID who created this tenant
	CreatedBy *string
	// User ID who last updated this tenant
	UpdatedBy *string
	// Database connection string or identifier (for DATABASE isolation)
	DatabaseConfig *string
	// Network configuration (for NETWORK isolation)
	NetworkConfig *string
	// Resource quotas for this tenant
	Quota *TenantQuota
	// Custom domain for this tenant (if applicable)
	CustomDomain *string
	// Tenant's timezone override (inherits from organization if not set)
	Timezone *string
	// Tenant's locale override (inherits from organization if not set)
	Locale *string
	// Whether this tenant is in trial mode
	TrialMode *bool
	// Trial expiration timestamp (if trial_mode is true)
	TrialExpiresAt *timestamppb.Timestamp
}

func (b0 Tenant_builder) Build() *Tenant {
	m0 := &Tenant{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.OrganizationId = b.OrganizationId
	x.Name = b.Name
	x.Slug = b.Slug
	x.Description = b.Description
	x.Status = b.Status
	x.IsolationLevel = b.IsolationLevel
	x.Metadata = b.Metadata
	x.CreatedAt = b.CreatedAt
	x.UpdatedAt = b.UpdatedAt
	x.CreatedBy = b.CreatedBy
	x.UpdatedBy = b.UpdatedBy
	x.DatabaseConfig = b.DatabaseConfig
	x.NetworkConfig = b.NetworkConfig
	x.Quota = b.Quota
	x.CustomDomain = b.CustomDomain
	x.Timezone = b.Timezone
	x.Locale = b.Locale
	x.TrialMode = b.TrialMode
	x.TrialExpiresAt = b.TrialExpiresAt
	return m0
}

// *
// TenantQuota message defining resource limits and quotas for a tenant.
// Used to enforce resource constraints in multi-tenant environments.
type TenantQuota struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Maximum number of users in this tenant
	MaxUsers *int32 `protobuf:"varint,1,opt,name=max_users,json=maxUsers" json:"max_users,omitempty"`
	// Maximum storage size in bytes
	MaxStorageBytes *int64 `protobuf:"varint,2,opt,name=max_storage_bytes,json=maxStorageBytes" json:"max_storage_bytes,omitempty"`
	// Maximum number of API requests per hour
	MaxApiRequestsPerHour *int32 `protobuf:"varint,3,opt,name=max_api_requests_per_hour,json=maxApiRequestsPerHour" json:"max_api_requests_per_hour,omitempty"`
	// Maximum number of concurrent connections
	MaxConcurrentConnections *int32 `protobuf:"varint,4,opt,name=max_concurrent_connections,json=maxConcurrentConnections" json:"max_concurrent_connections,omitempty"`
	// Maximum number of databases/schemas
	MaxDatabases *int32 `protobuf:"varint,5,opt,name=max_databases,json=maxDatabases" json:"max_databases,omitempty"`
	// Maximum number of custom domains
	MaxCustomDomains *int32 `protobuf:"varint,6,opt,name=max_custom_domains,json=maxCustomDomains" json:"max_custom_domains,omitempty"`
	// Custom quota limits (key-value pairs for extensibility)
	CustomLimits  []*proto.KeyValue `protobuf:"bytes,7,rep,name=custom_limits,json=customLimits" json:"custom_limits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TenantQuota) Reset() {
	*x = TenantQuota{}
	mi := &file_pkg_organization_proto_messages_tenant_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantQuota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantQuota) ProtoMessage() {}

func (x *TenantQuota) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_messages_tenant_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TenantQuota) GetMaxUsers() int32 {
	if x != nil && x.MaxUsers != nil {
		return *x.MaxUsers
	}
	return 0
}

func (x *TenantQuota) GetMaxStorageBytes() int64 {
	if x != nil && x.MaxStorageBytes != nil {
		return *x.MaxStorageBytes
	}
	return 0
}

func (x *TenantQuota) GetMaxApiRequestsPerHour() int32 {
	if x != nil && x.MaxApiRequestsPerHour != nil {
		return *x.MaxApiRequestsPerHour
	}
	return 0
}

func (x *TenantQuota) GetMaxConcurrentConnections() int32 {
	if x != nil && x.MaxConcurrentConnections != nil {
		return *x.MaxConcurrentConnections
	}
	return 0
}

func (x *TenantQuota) GetMaxDatabases() int32 {
	if x != nil && x.MaxDatabases != nil {
		return *x.MaxDatabases
	}
	return 0
}

func (x *TenantQuota) GetMaxCustomDomains() int32 {
	if x != nil && x.MaxCustomDomains != nil {
		return *x.MaxCustomDomains
	}
	return 0
}

func (x *TenantQuota) GetCustomLimits() []*proto.KeyValue {
	if x != nil {
		return x.CustomLimits
	}
	return nil
}

func (x *TenantQuota) SetMaxUsers(v int32) {
	x.MaxUsers = &v
}

func (x *TenantQuota) SetMaxStorageBytes(v int64) {
	x.MaxStorageBytes = &v
}

func (x *TenantQuota) SetMaxApiRequestsPerHour(v int32) {
	x.MaxApiRequestsPerHour = &v
}

func (x *TenantQuota) SetMaxConcurrentConnections(v int32) {
	x.MaxConcurrentConnections = &v
}

func (x *TenantQuota) SetMaxDatabases(v int32) {
	x.MaxDatabases = &v
}

func (x *TenantQuota) SetMaxCustomDomains(v int32) {
	x.MaxCustomDomains = &v
}

func (x *TenantQuota) SetCustomLimits(v []*proto.KeyValue) {
	x.CustomLimits = v
}

func (x *TenantQuota) HasMaxUsers() bool {
	if x == nil {
		return false
	}
	return x.MaxUsers != nil
}

func (x *TenantQuota) HasMaxStorageBytes() bool {
	if x == nil {
		return false
	}
	return x.MaxStorageBytes != nil
}

func (x *TenantQuota) HasMaxApiRequestsPerHour() bool {
	if x == nil {
		return false
	}
	return x.MaxApiRequestsPerHour != nil
}

func (x *TenantQuota) HasMaxConcurrentConnections() bool {
	if x == nil {
		return false
	}
	return x.MaxConcurrentConnections != nil
}

func (x *TenantQuota) HasMaxDatabases() bool {
	if x == nil {
		return false
	}
	return x.MaxDatabases != nil
}

func (x *TenantQuota) HasMaxCustomDomains() bool {
	if x == nil {
		return false
	}
	return x.MaxCustomDomains != nil
}

func (x *TenantQuota) ClearMaxUsers() {
	x.MaxUsers = nil
}

func (x *TenantQuota) ClearMaxStorageBytes() {
	x.MaxStorageBytes = nil
}

func (x *TenantQuota) ClearMaxApiRequestsPerHour() {
	x.MaxApiRequestsPerHour = nil
}

func (x *TenantQuota) ClearMaxConcurrentConnections() {
	x.MaxConcurrentConnections = nil
}

func (x *TenantQuota) ClearMaxDatabases() {
	x.MaxDatabases = nil
}

func (x *TenantQuota) ClearMaxCustomDomains() {
	x.MaxCustomDomains = nil
}

type TenantQuota_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum number of users in this tenant
	MaxUsers *int32
	// Maximum storage size in bytes
	MaxStorageBytes *int64
	// Maximum number of API requests per hour
	MaxApiRequestsPerHour *int32
	// Maximum number of concurrent connections
	MaxConcurrentConnections *int32
	// Maximum number of databases/schemas
	MaxDatabases *int32
	// Maximum number of custom domains
	MaxCustomDomains *int32
	// Custom quota limits (key-value pairs for extensibility)
	CustomLimits []*proto.KeyValue
}

func (b0 TenantQuota_builder) Build() *TenantQuota {
	m0 := &TenantQuota{}
	b, x := &b0, m0
	_, _ = b, x
	x.MaxUsers = b.MaxUsers
	x.MaxStorageBytes = b.MaxStorageBytes
	x.MaxApiRequestsPerHour = b.MaxApiRequestsPerHour
	x.MaxConcurrentConnections = b.MaxConcurrentConnections
	x.MaxDatabases = b.MaxDatabases
	x.MaxCustomDomains = b.MaxCustomDomains
	x.CustomLimits = b.CustomLimits
	return m0
}

var File_pkg_organization_proto_messages_tenant_proto protoreflect.FileDescriptor

const file_pkg_organization_proto_messages_tenant_proto_rawDesc = "" +
	"\n" +
	",pkg/organization/proto/messages/tenant.proto\x12\x17gcommon.v1.organization\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a0pkg/organization/proto/enums/tenant_status.proto\x1a2pkg/organization/proto/enums/isolation_level.proto\x1a&pkg/common/proto/types/key_value.proto\"\xe3\x06\n" +
	"\x06Tenant\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x0forganization_id\x18\x02 \x01(\tR\x0eorganizationId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04slug\x18\x04 \x01(\tR\x04slug\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12=\n" +
	"\x06status\x18\x06 \x01(\x0e2%.gcommon.v1.organization.TenantStatusR\x06status\x12P\n" +
	"\x0fisolation_level\x18\a \x01(\x0e2'.gcommon.v1.organization.IsolationLevelR\x0eisolationLevel\x12;\n" +
	"\bmetadata\x18\b \x03(\v2\x1b.gcommon.v1.common.KeyValueB\x02(\x01R\bmetadata\x12=\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\tcreatedAt\x12=\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\v \x01(\tR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"updated_by\x18\f \x01(\tR\tupdatedBy\x12'\n" +
	"\x0fdatabase_config\x18\r \x01(\tR\x0edatabaseConfig\x12%\n" +
	"\x0enetwork_config\x18\x0e \x01(\tR\rnetworkConfig\x12:\n" +
	"\x05quota\x18\x0f \x01(\v2$.gcommon.v1.organization.TenantQuotaR\x05quota\x12#\n" +
	"\rcustom_domain\x18\x10 \x01(\tR\fcustomDomain\x12\x1a\n" +
	"\btimezone\x18\x11 \x01(\tR\btimezone\x12\x16\n" +
	"\x06locale\x18\x12 \x01(\tR\x06locale\x12\x1d\n" +
	"\n" +
	"trial_mode\x18\x13 \x01(\bR\ttrialMode\x12H\n" +
	"\x10trial_expires_at\x18\x14 \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\x0etrialExpiresAt\"\xe7\x02\n" +
	"\vTenantQuota\x12\x1b\n" +
	"\tmax_users\x18\x01 \x01(\x05R\bmaxUsers\x12*\n" +
	"\x11max_storage_bytes\x18\x02 \x01(\x03R\x0fmaxStorageBytes\x128\n" +
	"\x19max_api_requests_per_hour\x18\x03 \x01(\x05R\x15maxApiRequestsPerHour\x12<\n" +
	"\x1amax_concurrent_connections\x18\x04 \x01(\x05R\x18maxConcurrentConnections\x12#\n" +
	"\rmax_databases\x18\x05 \x01(\x05R\fmaxDatabases\x12,\n" +
	"\x12max_custom_domains\x18\x06 \x01(\x05R\x10maxCustomDomains\x12D\n" +
	"\rcustom_limits\x18\a \x03(\v2\x1b.gcommon.v1.common.KeyValueB\x02(\x01R\fcustomLimitsB\xf1\x01\n" +
	"\x1bcom.gcommon.v1.organizationB\vTenantProtoP\x01Z?github.com/jdfalk/gcommon/pkg/organization/proto;organizationpb\xa2\x02\x03GVO\xaa\x02\x17Gcommon.V1.Organization\xca\x02\x17Gcommon\\V1\\Organization\xe2\x02#Gcommon\\V1\\Organization\\GPBMetadata\xea\x02\x19Gcommon::V1::Organization\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_organization_proto_messages_tenant_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_organization_proto_messages_tenant_proto_goTypes = []any{
	(*Tenant)(nil),                // 0: gcommon.v1.organization.Tenant
	(*TenantQuota)(nil),           // 1: gcommon.v1.organization.TenantQuota
	(TenantStatus)(0),             // 2: gcommon.v1.organization.TenantStatus
	(IsolationLevel)(0),           // 3: gcommon.v1.organization.IsolationLevel
	(*proto.KeyValue)(nil),        // 4: gcommon.v1.common.KeyValue
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_pkg_organization_proto_messages_tenant_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.organization.Tenant.status:type_name -> gcommon.v1.organization.TenantStatus
	3, // 1: gcommon.v1.organization.Tenant.isolation_level:type_name -> gcommon.v1.organization.IsolationLevel
	4, // 2: gcommon.v1.organization.Tenant.metadata:type_name -> gcommon.v1.common.KeyValue
	5, // 3: gcommon.v1.organization.Tenant.created_at:type_name -> google.protobuf.Timestamp
	5, // 4: gcommon.v1.organization.Tenant.updated_at:type_name -> google.protobuf.Timestamp
	1, // 5: gcommon.v1.organization.Tenant.quota:type_name -> gcommon.v1.organization.TenantQuota
	5, // 6: gcommon.v1.organization.Tenant.trial_expires_at:type_name -> google.protobuf.Timestamp
	4, // 7: gcommon.v1.organization.TenantQuota.custom_limits:type_name -> gcommon.v1.common.KeyValue
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_organization_proto_messages_tenant_proto_init() }
func file_pkg_organization_proto_messages_tenant_proto_init() {
	if File_pkg_organization_proto_messages_tenant_proto != nil {
		return
	}
	file_pkg_organization_proto_enums_tenant_status_proto_init()
	file_pkg_organization_proto_enums_isolation_level_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_organization_proto_messages_tenant_proto_rawDesc), len(file_pkg_organization_proto_messages_tenant_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_organization_proto_messages_tenant_proto_goTypes,
		DependencyIndexes: file_pkg_organization_proto_messages_tenant_proto_depIdxs,
		MessageInfos:      file_pkg_organization_proto_messages_tenant_proto_msgTypes,
	}.Build()
	File_pkg_organization_proto_messages_tenant_proto = out.File
	file_pkg_organization_proto_messages_tenant_proto_goTypes = nil
	file_pkg_organization_proto_messages_tenant_proto_depIdxs = nil
}
