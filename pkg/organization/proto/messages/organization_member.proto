// file: pkg/organization/proto/messages/organization_member.proto
edition = "2023";

package gcommon.v1.organization;

import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";
import "pkg/organization/proto/enums/member_role.proto";
import "pkg/common/proto/types/key_value.proto";

option go_package = "../../../../pkg/organization/proto;organizationpb";
option features.(pb.go).api_level = API_HYBRID;

/**
 * OrganizationMember message representing a user's membership in an organization.
 * Contains role information, permissions, and membership metadata.
 */
message OrganizationMember {
  // Unique membership identifier
  string id = 1;

  // Organization identifier
  string organization_id = 2;

  // User identifier from the auth system
  string user_id = 3;

  // User's email address (cached for quick access)
  string email = 4;

  // User's display name (cached for quick access)
  string display_name = 5;

  // Primary role of the user in this organization
  MemberRole role = 6;

  // Additional roles the user may have
  repeated MemberRole additional_roles = 7;

  // Specific permissions granted to this member
  repeated string permissions = 8;

  // Department IDs this member belongs to
  repeated string department_ids = 9;

  // Team IDs this member belongs to
  repeated string team_ids = 10;

  // Tenant IDs this member has access to (for multi-tenant organizations)
  repeated string tenant_ids = 11;

  // Member metadata and custom attributes
  repeated gcommon.v1.common.KeyValue metadata = 12 [lazy = true];

  // Membership creation timestamp (when user joined organization)
  google.protobuf.Timestamp created_at = 13 [lazy = true];

  // Last update timestamp
  google.protobuf.Timestamp updated_at = 14 [lazy = true];

  // Last activity timestamp (when user was last active in organization)
  google.protobuf.Timestamp last_active_at = 15 [lazy = true];

  // User ID who added this member to the organization
  string invited_by = 16;

  // User ID who last updated this member's information
  string updated_by = 17;

  // Whether this member is currently active
  bool active = 18;

  // Member's job title within the organization
  string job_title = 19;

  // Member's manager's user ID (if applicable)
  string manager_id = 20;

  // Member's direct reports' user IDs
  repeated string direct_report_ids = 21;

  // Member's avatar/profile picture URL
  string avatar_url = 22;

  // Member's phone number (organization context)
  string phone = 23;

  // Member's office location or workspace
  string location = 24;
}