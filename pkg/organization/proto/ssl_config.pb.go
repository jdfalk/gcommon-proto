// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: pkg/organization/proto/ssl_config.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SSLConfig struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CertificateId *string                `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId"`
	xxx_hidden_SslPolicy     *string                `protobuf:"bytes,2,opt,name=ssl_policy,json=sslPolicy"`
	xxx_hidden_RedirectHttp  bool                   `protobuf:"varint,3,opt,name=redirect_http,json=redirectHttp"`
	xxx_hidden_MinTlsVersion *string                `protobuf:"bytes,4,opt,name=min_tls_version,json=minTlsVersion"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *SSLConfig) Reset() {
	*x = SSLConfig{}
	mi := &file_pkg_organization_proto_ssl_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSLConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSLConfig) ProtoMessage() {}

func (x *SSLConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_organization_proto_ssl_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SSLConfig) GetCertificateId() string {
	if x != nil {
		if x.xxx_hidden_CertificateId != nil {
			return *x.xxx_hidden_CertificateId
		}
		return ""
	}
	return ""
}

func (x *SSLConfig) GetSslPolicy() string {
	if x != nil {
		if x.xxx_hidden_SslPolicy != nil {
			return *x.xxx_hidden_SslPolicy
		}
		return ""
	}
	return ""
}

func (x *SSLConfig) GetRedirectHttp() bool {
	if x != nil {
		return x.xxx_hidden_RedirectHttp
	}
	return false
}

func (x *SSLConfig) GetMinTlsVersion() string {
	if x != nil {
		if x.xxx_hidden_MinTlsVersion != nil {
			return *x.xxx_hidden_MinTlsVersion
		}
		return ""
	}
	return ""
}

func (x *SSLConfig) SetCertificateId(v string) {
	x.xxx_hidden_CertificateId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *SSLConfig) SetSslPolicy(v string) {
	x.xxx_hidden_SslPolicy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *SSLConfig) SetRedirectHttp(v bool) {
	x.xxx_hidden_RedirectHttp = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *SSLConfig) SetMinTlsVersion(v string) {
	x.xxx_hidden_MinTlsVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *SSLConfig) HasCertificateId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SSLConfig) HasSslPolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SSLConfig) HasRedirectHttp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SSLConfig) HasMinTlsVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SSLConfig) ClearCertificateId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CertificateId = nil
}

func (x *SSLConfig) ClearSslPolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SslPolicy = nil
}

func (x *SSLConfig) ClearRedirectHttp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_RedirectHttp = false
}

func (x *SSLConfig) ClearMinTlsVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MinTlsVersion = nil
}

type SSLConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// SSL certificate ARN or ID
	CertificateId *string
	// SSL policy
	SslPolicy *string
	// Whether to redirect HTTP to HTTPS
	RedirectHttp *bool
	// Minimum TLS version
	MinTlsVersion *string
}

func (b0 SSLConfig_builder) Build() *SSLConfig {
	m0 := &SSLConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CertificateId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_CertificateId = b.CertificateId
	}
	if b.SslPolicy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_SslPolicy = b.SslPolicy
	}
	if b.RedirectHttp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_RedirectHttp = *b.RedirectHttp
	}
	if b.MinTlsVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_MinTlsVersion = b.MinTlsVersion
	}
	return m0
}

var File_pkg_organization_proto_ssl_config_proto protoreflect.FileDescriptor

const file_pkg_organization_proto_ssl_config_proto_rawDesc = "" +
	"\n" +
	"'pkg/organization/proto/ssl_config.proto\x12\x17gcommon.v1.organization\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9e\x01\n" +
	"\tSSLConfig\x12%\n" +
	"\x0ecertificate_id\x18\x01 \x01(\tR\rcertificateId\x12\x1d\n" +
	"\n" +
	"ssl_policy\x18\x02 \x01(\tR\tsslPolicy\x12#\n" +
	"\rredirect_http\x18\x03 \x01(\bR\fredirectHttp\x12&\n" +
	"\x0fmin_tls_version\x18\x04 \x01(\tR\rminTlsVersionB\xe5\x01\n" +
	"\x1bcom.gcommon.v1.organizationB\x0eSslConfigProtoP\x01Z0github.com/jdfalk/gcommon/pkg/organization/proto\xa2\x02\x03GVO\xaa\x02\x17Gcommon.V1.Organization\xca\x02\x17Gcommon\\V1\\Organization\xe2\x02#Gcommon\\V1\\Organization\\GPBMetadata\xea\x02\x19Gcommon::V1::Organization\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_organization_proto_ssl_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_organization_proto_ssl_config_proto_goTypes = []any{
	(*SSLConfig)(nil), // 0: gcommon.v1.organization.SSLConfig
}
var file_pkg_organization_proto_ssl_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_organization_proto_ssl_config_proto_init() }
func file_pkg_organization_proto_ssl_config_proto_init() {
	if File_pkg_organization_proto_ssl_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_organization_proto_ssl_config_proto_rawDesc), len(file_pkg_organization_proto_ssl_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_organization_proto_ssl_config_proto_goTypes,
		DependencyIndexes: file_pkg_organization_proto_ssl_config_proto_depIdxs,
		MessageInfos:      file_pkg_organization_proto_ssl_config_proto_msgTypes,
	}.Build()
	File_pkg_organization_proto_ssl_config_proto = out.File
	file_pkg_organization_proto_ssl_config_proto_goTypes = nil
	file_pkg_organization_proto_ssl_config_proto_depIdxs = nil
}
