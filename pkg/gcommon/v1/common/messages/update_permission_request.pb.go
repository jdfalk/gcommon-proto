// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/common/messages/update_permission_request.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Request to update an existing permission.
// Allows modification of permission properties and constraints.
type UpdatePermissionRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PermissionId *string                `protobuf:"bytes,1,opt,name=permission_id,json=permissionId"`
	xxx_hidden_Name         *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Description  *string                `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_Resource     *string                `protobuf:"bytes,4,opt,name=resource"`
	xxx_hidden_Action       *string                `protobuf:"bytes,5,opt,name=action"`
	xxx_hidden_Conditions   []string               `protobuf:"bytes,6,rep,name=conditions"`
	xxx_hidden_Active       bool                   `protobuf:"varint,7,opt,name=active"`
	xxx_hidden_UpdateMask   []string               `protobuf:"bytes,8,rep,name=update_mask,json=updateMask"`
	xxx_hidden_Metadata     *RequestMetadata       `protobuf:"bytes,9,opt,name=metadata"`
	xxx_hidden_Reason       *string                `protobuf:"bytes,10,opt,name=reason"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UpdatePermissionRequest) Reset() {
	*x = UpdatePermissionRequest{}
	mi := &file_gcommon_v1_common_messages_update_permission_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePermissionRequest) ProtoMessage() {}

func (x *UpdatePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_common_messages_update_permission_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdatePermissionRequest) GetPermissionId() string {
	if x != nil {
		if x.xxx_hidden_PermissionId != nil {
			return *x.xxx_hidden_PermissionId
		}
		return ""
	}
	return ""
}

func (x *UpdatePermissionRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdatePermissionRequest) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *UpdatePermissionRequest) GetResource() string {
	if x != nil {
		if x.xxx_hidden_Resource != nil {
			return *x.xxx_hidden_Resource
		}
		return ""
	}
	return ""
}

func (x *UpdatePermissionRequest) GetAction() string {
	if x != nil {
		if x.xxx_hidden_Action != nil {
			return *x.xxx_hidden_Action
		}
		return ""
	}
	return ""
}

func (x *UpdatePermissionRequest) GetConditions() []string {
	if x != nil {
		return x.xxx_hidden_Conditions
	}
	return nil
}

func (x *UpdatePermissionRequest) GetActive() bool {
	if x != nil {
		return x.xxx_hidden_Active
	}
	return false
}

func (x *UpdatePermissionRequest) GetUpdateMask() []string {
	if x != nil {
		return x.xxx_hidden_UpdateMask
	}
	return nil
}

func (x *UpdatePermissionRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *UpdatePermissionRequest) GetReason() string {
	if x != nil {
		if x.xxx_hidden_Reason != nil {
			return *x.xxx_hidden_Reason
		}
		return ""
	}
	return ""
}

func (x *UpdatePermissionRequest) SetPermissionId(v string) {
	x.xxx_hidden_PermissionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *UpdatePermissionRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *UpdatePermissionRequest) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *UpdatePermissionRequest) SetResource(v string) {
	x.xxx_hidden_Resource = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *UpdatePermissionRequest) SetAction(v string) {
	x.xxx_hidden_Action = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *UpdatePermissionRequest) SetConditions(v []string) {
	x.xxx_hidden_Conditions = v
}

func (x *UpdatePermissionRequest) SetActive(v bool) {
	x.xxx_hidden_Active = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *UpdatePermissionRequest) SetUpdateMask(v []string) {
	x.xxx_hidden_UpdateMask = v
}

func (x *UpdatePermissionRequest) SetMetadata(v *RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *UpdatePermissionRequest) SetReason(v string) {
	x.xxx_hidden_Reason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *UpdatePermissionRequest) HasPermissionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdatePermissionRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdatePermissionRequest) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdatePermissionRequest) HasResource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdatePermissionRequest) HasAction() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UpdatePermissionRequest) HasActive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *UpdatePermissionRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *UpdatePermissionRequest) HasReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *UpdatePermissionRequest) ClearPermissionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PermissionId = nil
}

func (x *UpdatePermissionRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *UpdatePermissionRequest) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *UpdatePermissionRequest) ClearResource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Resource = nil
}

func (x *UpdatePermissionRequest) ClearAction() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Action = nil
}

func (x *UpdatePermissionRequest) ClearActive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Active = false
}

func (x *UpdatePermissionRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *UpdatePermissionRequest) ClearReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Reason = nil
}

type UpdatePermissionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Permission ID to update (required)
	PermissionId *string
	// New permission name (optional)
	Name *string
	// New permission description (optional)
	Description *string
	// New resource this permission applies to (optional)
	Resource *string
	// New action this permission allows (optional)
	Action *string
	// New conditions for the permission (optional)
	Conditions []string
	// Whether the permission should be active (optional)
	Active *bool
	// Fields to update (field mask)
	UpdateMask []string
	// Request metadata for tracing and correlation
	Metadata *RequestMetadata
	// Reason for the update
	Reason *string
}

func (b0 UpdatePermissionRequest_builder) Build() *UpdatePermissionRequest {
	m0 := &UpdatePermissionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PermissionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_PermissionId = b.PermissionId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_Name = b.Name
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_Description = b.Description
	}
	if b.Resource != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_Resource = b.Resource
	}
	if b.Action != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_Action = b.Action
	}
	x.xxx_hidden_Conditions = b.Conditions
	if b.Active != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_Active = *b.Active
	}
	x.xxx_hidden_UpdateMask = b.UpdateMask
	x.xxx_hidden_Metadata = b.Metadata
	if b.Reason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_Reason = b.Reason
	}
	return m0
}

var File_gcommon_v1_common_messages_update_permission_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_messages_update_permission_request_proto_rawDesc = "" +
	"\n" +
	":gcommon/v1/common/messages/update_permission_request.proto\x12\x11gcommon.v1.common\x1a1gcommon/v1/common/messages/request_metadata.proto\x1a!google/protobuf/go_features.proto\"\xd9\x02\n" +
	"\x17UpdatePermissionRequest\x12#\n" +
	"\rpermission_id\x18\x01 \x01(\tR\fpermissionId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bresource\x18\x04 \x01(\tR\bresource\x12\x16\n" +
	"\x06action\x18\x05 \x01(\tR\x06action\x12\x1e\n" +
	"\n" +
	"conditions\x18\x06 \x03(\tR\n" +
	"conditions\x12\x16\n" +
	"\x06active\x18\a \x01(\bR\x06active\x12\x1f\n" +
	"\vupdate_mask\x18\b \x03(\tR\n" +
	"updateMask\x12>\n" +
	"\bmetadata\x18\t \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x12\x16\n" +
	"\x06reason\x18\n" +
	" \x01(\tR\x06reasonB\xdd\x01\n" +
	"\x15com.gcommon.v1.commonB\x1cUpdatePermissionRequestProtoP\x01Z8github.com/jdfalk/gcommon/pkg/gcommon/v1/common/messages\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Common\xca\x02\x11Gcommon\\V1\\Common\xe2\x02\x1dGcommon\\V1\\Common\\GPBMetadata\xea\x02\x13Gcommon::V1::Common\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_messages_update_permission_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_common_messages_update_permission_request_proto_goTypes = []any{
	(*UpdatePermissionRequest)(nil), // 0: gcommon.v1.common.UpdatePermissionRequest
	(*RequestMetadata)(nil),         // 1: gcommon.v1.common.RequestMetadata
}
var file_gcommon_v1_common_messages_update_permission_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.common.UpdatePermissionRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_messages_update_permission_request_proto_init() }
func file_gcommon_v1_common_messages_update_permission_request_proto_init() {
	if File_gcommon_v1_common_messages_update_permission_request_proto != nil {
		return
	}
	file_gcommon_v1_common_messages_request_metadata_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_messages_update_permission_request_proto_rawDesc), len(file_gcommon_v1_common_messages_update_permission_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_messages_update_permission_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_messages_update_permission_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_common_messages_update_permission_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_common_messages_update_permission_request_proto = out.File
	file_gcommon_v1_common_messages_update_permission_request_proto_goTypes = nil
	file_gcommon_v1_common_messages_update_permission_request_proto_depIdxs = nil
}
