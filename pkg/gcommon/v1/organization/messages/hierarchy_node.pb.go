// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/organization/messages/hierarchy_node.proto

package messages

import (
	messages "github.com/jdfalk/gcommon/pkg/gcommon/v1/common/messages"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HierarchyNode struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id        *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name      *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_NodeType  *string                `protobuf:"bytes,3,opt,name=node_type,json=nodeType"`
	xxx_hidden_EntityId  *string                `protobuf:"bytes,4,opt,name=entity_id,json=entityId"`
	xxx_hidden_ParentId  *string                `protobuf:"bytes,5,opt,name=parent_id,json=parentId"`
	xxx_hidden_ChildIds  []string               `protobuf:"bytes,6,rep,name=child_ids,json=childIds"`
	xxx_hidden_Level     int32                  `protobuf:"varint,7,opt,name=level"`
	xxx_hidden_Position  int32                  `protobuf:"varint,8,opt,name=position"`
	xxx_hidden_Path      *string                `protobuf:"bytes,9,opt,name=path"`
	xxx_hidden_ManagerId *string                `protobuf:"bytes,10,opt,name=manager_id,json=managerId"`
	xxx_hidden_Metadata  *[]*messages.KeyValue  `protobuf:"bytes,11,rep,name=metadata"`
	xxx_hidden_Active    bool                   `protobuf:"varint,12,opt,name=active"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *HierarchyNode) Reset() {
	*x = HierarchyNode{}
	mi := &file_gcommon_v1_organization_messages_hierarchy_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HierarchyNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HierarchyNode) ProtoMessage() {}

func (x *HierarchyNode) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_organization_messages_hierarchy_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HierarchyNode) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *HierarchyNode) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *HierarchyNode) GetNodeType() string {
	if x != nil {
		if x.xxx_hidden_NodeType != nil {
			return *x.xxx_hidden_NodeType
		}
		return ""
	}
	return ""
}

func (x *HierarchyNode) GetEntityId() string {
	if x != nil {
		if x.xxx_hidden_EntityId != nil {
			return *x.xxx_hidden_EntityId
		}
		return ""
	}
	return ""
}

func (x *HierarchyNode) GetParentId() string {
	if x != nil {
		if x.xxx_hidden_ParentId != nil {
			return *x.xxx_hidden_ParentId
		}
		return ""
	}
	return ""
}

func (x *HierarchyNode) GetChildIds() []string {
	if x != nil {
		return x.xxx_hidden_ChildIds
	}
	return nil
}

func (x *HierarchyNode) GetLevel() int32 {
	if x != nil {
		return x.xxx_hidden_Level
	}
	return 0
}

func (x *HierarchyNode) GetPosition() int32 {
	if x != nil {
		return x.xxx_hidden_Position
	}
	return 0
}

func (x *HierarchyNode) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *HierarchyNode) GetManagerId() string {
	if x != nil {
		if x.xxx_hidden_ManagerId != nil {
			return *x.xxx_hidden_ManagerId
		}
		return ""
	}
	return ""
}

func (x *HierarchyNode) GetMetadata() []*messages.KeyValue {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 10) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Metadata) {
				protoimpl.X.UnmarshalField(x, 11)
			}
			var rv *[]*messages.KeyValue
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&rv))
			return *rv
		}
	}
	return nil
}

func (x *HierarchyNode) GetActive() bool {
	if x != nil {
		return x.xxx_hidden_Active
	}
	return false
}

func (x *HierarchyNode) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 12)
}

func (x *HierarchyNode) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 12)
}

func (x *HierarchyNode) SetNodeType(v string) {
	x.xxx_hidden_NodeType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 12)
}

func (x *HierarchyNode) SetEntityId(v string) {
	x.xxx_hidden_EntityId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 12)
}

func (x *HierarchyNode) SetParentId(v string) {
	x.xxx_hidden_ParentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 12)
}

func (x *HierarchyNode) SetChildIds(v []string) {
	x.xxx_hidden_ChildIds = v
}

func (x *HierarchyNode) SetLevel(v int32) {
	x.xxx_hidden_Level = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 12)
}

func (x *HierarchyNode) SetPosition(v int32) {
	x.xxx_hidden_Position = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 12)
}

func (x *HierarchyNode) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 12)
}

func (x *HierarchyNode) SetManagerId(v string) {
	x.xxx_hidden_ManagerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 12)
}

func (x *HierarchyNode) SetMetadata(v []*messages.KeyValue) {
	var sv *[]*messages.KeyValue
	protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&sv))
	if sv == nil {
		sv = &[]*messages.KeyValue{}
		protoimpl.X.AtomicInitializePointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&sv))
	}
	*sv = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 12)
}

func (x *HierarchyNode) SetActive(v bool) {
	x.xxx_hidden_Active = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 12)
}

func (x *HierarchyNode) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *HierarchyNode) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *HierarchyNode) HasNodeType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *HierarchyNode) HasEntityId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *HierarchyNode) HasParentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *HierarchyNode) HasLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *HierarchyNode) HasPosition() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *HierarchyNode) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *HierarchyNode) HasManagerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *HierarchyNode) HasActive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *HierarchyNode) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *HierarchyNode) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *HierarchyNode) ClearNodeType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_NodeType = nil
}

func (x *HierarchyNode) ClearEntityId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EntityId = nil
}

func (x *HierarchyNode) ClearParentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ParentId = nil
}

func (x *HierarchyNode) ClearLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Level = 0
}

func (x *HierarchyNode) ClearPosition() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Position = 0
}

func (x *HierarchyNode) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Path = nil
}

func (x *HierarchyNode) ClearManagerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_ManagerId = nil
}

func (x *HierarchyNode) ClearActive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_Active = false
}

type HierarchyNode_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique node identifier
	Id *string
	// Node name
	Name *string
	// Type of organizational unit (department, team, project, etc.)
	NodeType *string
	// Reference ID to the actual entity (department_id, team_id, etc.)
	EntityId *string
	// Parent node ID (null for root node)
	ParentId *string
	// List of direct child node IDs
	ChildIds []string
	// Node level in the hierarchy (0 for root)
	Level *int32
	// Node position among siblings (for ordering)
	Position *int32
	// Node path from root (e.g., "/org/dept1/team1")
	Path *string
	// Manager or responsible person for this node
	ManagerId *string
	// Node metadata and custom attributes
	Metadata []*messages.KeyValue
	// Whether this node is currently active
	Active *bool
}

func (b0 HierarchyNode_builder) Build() *HierarchyNode {
	m0 := &HierarchyNode{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 12)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 12)
		x.xxx_hidden_Name = b.Name
	}
	if b.NodeType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 12)
		x.xxx_hidden_NodeType = b.NodeType
	}
	if b.EntityId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 12)
		x.xxx_hidden_EntityId = b.EntityId
	}
	if b.ParentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 12)
		x.xxx_hidden_ParentId = b.ParentId
	}
	x.xxx_hidden_ChildIds = b.ChildIds
	if b.Level != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 12)
		x.xxx_hidden_Level = *b.Level
	}
	if b.Position != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 12)
		x.xxx_hidden_Position = *b.Position
	}
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 12)
		x.xxx_hidden_Path = b.Path
	}
	if b.ManagerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 12)
		x.xxx_hidden_ManagerId = b.ManagerId
	}
	if b.Metadata != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 12)
		x.xxx_hidden_Metadata = &b.Metadata
	}
	if b.Active != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 12)
		x.xxx_hidden_Active = *b.Active
	}
	return m0
}

var File_gcommon_v1_organization_messages_hierarchy_node_proto protoreflect.FileDescriptor

const file_gcommon_v1_organization_messages_hierarchy_node_proto_rawDesc = "" +
	"\n" +
	"5gcommon/v1/organization/messages/hierarchy_node.proto\x12\x17gcommon.v1.organization\x1a*gcommon/v1/common/messages/key_value.proto\x1a!google/protobuf/go_features.proto\"\xe1\x02\n" +
	"\rHierarchyNode\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tnode_type\x18\x03 \x01(\tR\bnodeType\x12\x1b\n" +
	"\tentity_id\x18\x04 \x01(\tR\bentityId\x12\x1b\n" +
	"\tparent_id\x18\x05 \x01(\tR\bparentId\x12\x1b\n" +
	"\tchild_ids\x18\x06 \x03(\tR\bchildIds\x12\x14\n" +
	"\x05level\x18\a \x01(\x05R\x05level\x12\x1a\n" +
	"\bposition\x18\b \x01(\x05R\bposition\x12\x12\n" +
	"\x04path\x18\t \x01(\tR\x04path\x12\x1d\n" +
	"\n" +
	"manager_id\x18\n" +
	" \x01(\tR\tmanagerId\x12;\n" +
	"\bmetadata\x18\v \x03(\v2\x1b.gcommon.v1.common.KeyValueB\x02(\x01R\bmetadata\x12\x16\n" +
	"\x06active\x18\f \x01(\bR\x06activeB\xf7\x01\n" +
	"\x1bcom.gcommon.v1.organizationB\x12HierarchyNodeProtoP\x01Z>github.com/jdfalk/gcommon/pkg/gcommon/v1/organization/messages\xa2\x02\x03GVO\xaa\x02\x17Gcommon.V1.Organization\xca\x02\x17Gcommon\\V1\\Organization\xe2\x02#Gcommon\\V1\\Organization\\GPBMetadata\xea\x02\x19Gcommon::V1::Organization\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_organization_messages_hierarchy_node_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_organization_messages_hierarchy_node_proto_goTypes = []any{
	(*HierarchyNode)(nil),     // 0: gcommon.v1.organization.HierarchyNode
	(*messages.KeyValue)(nil), // 1: gcommon.v1.common.KeyValue
}
var file_gcommon_v1_organization_messages_hierarchy_node_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.organization.HierarchyNode.metadata:type_name -> gcommon.v1.common.KeyValue
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_organization_messages_hierarchy_node_proto_init() }
func file_gcommon_v1_organization_messages_hierarchy_node_proto_init() {
	if File_gcommon_v1_organization_messages_hierarchy_node_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_organization_messages_hierarchy_node_proto_rawDesc), len(file_gcommon_v1_organization_messages_hierarchy_node_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_organization_messages_hierarchy_node_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_organization_messages_hierarchy_node_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_organization_messages_hierarchy_node_proto_msgTypes,
	}.Build()
	File_gcommon_v1_organization_messages_hierarchy_node_proto = out.File
	file_gcommon_v1_organization_messages_hierarchy_node_proto_goTypes = nil
	file_gcommon_v1_organization_messages_hierarchy_node_proto_depIdxs = nil
}
