// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/organization/messages/team.proto

package messages

import (
	messages "github.com/jdfalk/gcommon/pkg/gcommon/v1/common/messages"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Team message representing a team within an organization or department.
// Teams are smaller organizational units focused on specific projects,
// functions, or objectives.
type Team struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                   *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_OrganizationId       *string                `protobuf:"bytes,2,opt,name=organization_id,json=organizationId"`
	xxx_hidden_DepartmentId         *string                `protobuf:"bytes,3,opt,name=department_id,json=departmentId"`
	xxx_hidden_Name                 *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_Slug                 *string                `protobuf:"bytes,5,opt,name=slug"`
	xxx_hidden_Description          *string                `protobuf:"bytes,6,opt,name=description"`
	xxx_hidden_LeadId               *string                `protobuf:"bytes,7,opt,name=lead_id,json=leadId"`
	xxx_hidden_TeamType             *string                `protobuf:"bytes,8,opt,name=team_type,json=teamType"`
	xxx_hidden_FocusArea            *string                `protobuf:"bytes,9,opt,name=focus_area,json=focusArea"`
	xxx_hidden_Metadata             *[]*messages.KeyValue  `protobuf:"bytes,10,rep,name=metadata"`
	xxx_hidden_CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt"`
	xxx_hidden_UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt"`
	xxx_hidden_CreatedBy            *string                `protobuf:"bytes,13,opt,name=created_by,json=createdBy"`
	xxx_hidden_UpdatedBy            *string                `protobuf:"bytes,14,opt,name=updated_by,json=updatedBy"`
	xxx_hidden_Active               bool                   `protobuf:"varint,15,opt,name=active"`
	xxx_hidden_ContactEmail         *string                `protobuf:"bytes,16,opt,name=contact_email,json=contactEmail"`
	xxx_hidden_CommunicationChannel *string                `protobuf:"bytes,17,opt,name=communication_channel,json=communicationChannel"`
	xxx_hidden_MaxMembers           int32                  `protobuf:"varint,18,opt,name=max_members,json=maxMembers"`
	xxx_hidden_BudgetAllocation     float64                `protobuf:"fixed64,19,opt,name=budget_allocation,json=budgetAllocation"`
	xxx_hidden_Timezone             *string                `protobuf:"bytes,20,opt,name=timezone"`
	xxx_hidden_MemberIds            []string               `protobuf:"bytes,21,rep,name=member_ids,json=memberIds"`
	xxx_hidden_ProjectIds           []string               `protobuf:"bytes,22,rep,name=project_ids,json=projectIds"`
	xxx_hidden_Objectives           []string               `protobuf:"bytes,23,rep,name=objectives"`
	xxx_hidden_Kpis                 []string               `protobuf:"bytes,24,rep,name=kpis"`
	xxx_hidden_CrossFunctional      bool                   `protobuf:"varint,25,opt,name=cross_functional,json=crossFunctional"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Team) Reset() {
	*x = Team{}
	mi := &file_gcommon_v1_organization_messages_team_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_organization_messages_team_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Team) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Team) GetOrganizationId() string {
	if x != nil {
		if x.xxx_hidden_OrganizationId != nil {
			return *x.xxx_hidden_OrganizationId
		}
		return ""
	}
	return ""
}

func (x *Team) GetDepartmentId() string {
	if x != nil {
		if x.xxx_hidden_DepartmentId != nil {
			return *x.xxx_hidden_DepartmentId
		}
		return ""
	}
	return ""
}

func (x *Team) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Team) GetSlug() string {
	if x != nil {
		if x.xxx_hidden_Slug != nil {
			return *x.xxx_hidden_Slug
		}
		return ""
	}
	return ""
}

func (x *Team) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Team) GetLeadId() string {
	if x != nil {
		if x.xxx_hidden_LeadId != nil {
			return *x.xxx_hidden_LeadId
		}
		return ""
	}
	return ""
}

func (x *Team) GetTeamType() string {
	if x != nil {
		if x.xxx_hidden_TeamType != nil {
			return *x.xxx_hidden_TeamType
		}
		return ""
	}
	return ""
}

func (x *Team) GetFocusArea() string {
	if x != nil {
		if x.xxx_hidden_FocusArea != nil {
			return *x.xxx_hidden_FocusArea
		}
		return ""
	}
	return ""
}

func (x *Team) GetMetadata() []*messages.KeyValue {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 9) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Metadata) {
				protoimpl.X.UnmarshalField(x, 10)
			}
			var rv *[]*messages.KeyValue
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&rv))
			return *rv
		}
	}
	return nil
}

func (x *Team) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 10) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_CreatedAt) {
				protoimpl.X.UnmarshalField(x, 11)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_CreatedAt), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *Team) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 11) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_UpdatedAt) {
				protoimpl.X.UnmarshalField(x, 12)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_UpdatedAt), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *Team) GetCreatedBy() string {
	if x != nil {
		if x.xxx_hidden_CreatedBy != nil {
			return *x.xxx_hidden_CreatedBy
		}
		return ""
	}
	return ""
}

func (x *Team) GetUpdatedBy() string {
	if x != nil {
		if x.xxx_hidden_UpdatedBy != nil {
			return *x.xxx_hidden_UpdatedBy
		}
		return ""
	}
	return ""
}

func (x *Team) GetActive() bool {
	if x != nil {
		return x.xxx_hidden_Active
	}
	return false
}

func (x *Team) GetContactEmail() string {
	if x != nil {
		if x.xxx_hidden_ContactEmail != nil {
			return *x.xxx_hidden_ContactEmail
		}
		return ""
	}
	return ""
}

func (x *Team) GetCommunicationChannel() string {
	if x != nil {
		if x.xxx_hidden_CommunicationChannel != nil {
			return *x.xxx_hidden_CommunicationChannel
		}
		return ""
	}
	return ""
}

func (x *Team) GetMaxMembers() int32 {
	if x != nil {
		return x.xxx_hidden_MaxMembers
	}
	return 0
}

func (x *Team) GetBudgetAllocation() float64 {
	if x != nil {
		return x.xxx_hidden_BudgetAllocation
	}
	return 0
}

func (x *Team) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *Team) GetMemberIds() []string {
	if x != nil {
		return x.xxx_hidden_MemberIds
	}
	return nil
}

func (x *Team) GetProjectIds() []string {
	if x != nil {
		return x.xxx_hidden_ProjectIds
	}
	return nil
}

func (x *Team) GetObjectives() []string {
	if x != nil {
		return x.xxx_hidden_Objectives
	}
	return nil
}

func (x *Team) GetKpis() []string {
	if x != nil {
		return x.xxx_hidden_Kpis
	}
	return nil
}

func (x *Team) GetCrossFunctional() bool {
	if x != nil {
		return x.xxx_hidden_CrossFunctional
	}
	return false
}

func (x *Team) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 25)
}

func (x *Team) SetOrganizationId(v string) {
	x.xxx_hidden_OrganizationId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 25)
}

func (x *Team) SetDepartmentId(v string) {
	x.xxx_hidden_DepartmentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 25)
}

func (x *Team) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 25)
}

func (x *Team) SetSlug(v string) {
	x.xxx_hidden_Slug = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 25)
}

func (x *Team) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 25)
}

func (x *Team) SetLeadId(v string) {
	x.xxx_hidden_LeadId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 25)
}

func (x *Team) SetTeamType(v string) {
	x.xxx_hidden_TeamType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 25)
}

func (x *Team) SetFocusArea(v string) {
	x.xxx_hidden_FocusArea = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 25)
}

func (x *Team) SetMetadata(v []*messages.KeyValue) {
	var sv *[]*messages.KeyValue
	protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&sv))
	if sv == nil {
		sv = &[]*messages.KeyValue{}
		protoimpl.X.AtomicInitializePointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&sv))
	}
	*sv = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 25)
}

func (x *Team) SetCreatedAt(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CreatedAt, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 25)
	}
}

func (x *Team) SetUpdatedAt(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_UpdatedAt, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 25)
	}
}

func (x *Team) SetCreatedBy(v string) {
	x.xxx_hidden_CreatedBy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 25)
}

func (x *Team) SetUpdatedBy(v string) {
	x.xxx_hidden_UpdatedBy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 25)
}

func (x *Team) SetActive(v bool) {
	x.xxx_hidden_Active = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 25)
}

func (x *Team) SetContactEmail(v string) {
	x.xxx_hidden_ContactEmail = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 25)
}

func (x *Team) SetCommunicationChannel(v string) {
	x.xxx_hidden_CommunicationChannel = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 25)
}

func (x *Team) SetMaxMembers(v int32) {
	x.xxx_hidden_MaxMembers = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 17, 25)
}

func (x *Team) SetBudgetAllocation(v float64) {
	x.xxx_hidden_BudgetAllocation = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 18, 25)
}

func (x *Team) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 19, 25)
}

func (x *Team) SetMemberIds(v []string) {
	x.xxx_hidden_MemberIds = v
}

func (x *Team) SetProjectIds(v []string) {
	x.xxx_hidden_ProjectIds = v
}

func (x *Team) SetObjectives(v []string) {
	x.xxx_hidden_Objectives = v
}

func (x *Team) SetKpis(v []string) {
	x.xxx_hidden_Kpis = v
}

func (x *Team) SetCrossFunctional(v bool) {
	x.xxx_hidden_CrossFunctional = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 24, 25)
}

func (x *Team) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Team) HasOrganizationId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Team) HasDepartmentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Team) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Team) HasSlug() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Team) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Team) HasLeadId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Team) HasTeamType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Team) HasFocusArea() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Team) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *Team) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *Team) HasCreatedBy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *Team) HasUpdatedBy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *Team) HasActive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *Team) HasContactEmail() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *Team) HasCommunicationChannel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *Team) HasMaxMembers() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 17)
}

func (x *Team) HasBudgetAllocation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 18)
}

func (x *Team) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 19)
}

func (x *Team) HasCrossFunctional() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 24)
}

func (x *Team) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Team) ClearOrganizationId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OrganizationId = nil
}

func (x *Team) ClearDepartmentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DepartmentId = nil
}

func (x *Team) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *Team) ClearSlug() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Slug = nil
}

func (x *Team) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

func (x *Team) ClearLeadId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_LeadId = nil
}

func (x *Team) ClearTeamType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_TeamType = nil
}

func (x *Team) ClearFocusArea() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_FocusArea = nil
}

func (x *Team) ClearCreatedAt() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CreatedAt, (*timestamppb.Timestamp)(nil))
}

func (x *Team) ClearUpdatedAt() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_UpdatedAt, (*timestamppb.Timestamp)(nil))
}

func (x *Team) ClearCreatedBy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_CreatedBy = nil
}

func (x *Team) ClearUpdatedBy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_UpdatedBy = nil
}

func (x *Team) ClearActive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_Active = false
}

func (x *Team) ClearContactEmail() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_ContactEmail = nil
}

func (x *Team) ClearCommunicationChannel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_CommunicationChannel = nil
}

func (x *Team) ClearMaxMembers() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 17)
	x.xxx_hidden_MaxMembers = 0
}

func (x *Team) ClearBudgetAllocation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 18)
	x.xxx_hidden_BudgetAllocation = 0
}

func (x *Team) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 19)
	x.xxx_hidden_Timezone = nil
}

func (x *Team) ClearCrossFunctional() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 24)
	x.xxx_hidden_CrossFunctional = false
}

type Team_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique team identifier
	Id *string
	// Organization identifier
	OrganizationId *string
	// Department identifier (teams can belong to departments)
	DepartmentId *string
	// Team name
	Name *string
	// URL-friendly slug for the team
	Slug *string
	// Team description or purpose
	Description *string
	// Team lead/manager user ID
	LeadId *string
	// Team type or category (e.g., "engineering", "marketing", "sales")
	TeamType *string
	// Team's primary focus area or mission
	FocusArea *string
	// Team metadata and custom attributes
	Metadata []*messages.KeyValue
	// Team creation timestamp
	CreatedAt *timestamppb.Timestamp
	// Last update timestamp
	UpdatedAt *timestamppb.Timestamp
	// User ID who created this team
	CreatedBy *string
	// User ID who last updated this team
	UpdatedBy *string
	// Whether this team is currently active
	Active *bool
	// Team's email address for external communications
	ContactEmail *string
	// Team's communication channel (e.g., Slack channel, Discord server)
	CommunicationChannel *string
	// Maximum number of members in this team
	MaxMembers *int32
	// Team's budget allocation (in organization's currency)
	BudgetAllocation *float64
	// Team's timezone (inherits from department/organization if not set)
	Timezone *string
	// List of member user IDs in this team
	MemberIds []string
	// List of project IDs this team is responsible for
	ProjectIds []string
	// Team's goals or objectives for the current period
	Objectives []string
	// Team's key performance indicators or metrics
	Kpis []string
	// Whether this team is cross-functional (spans multiple departments)
	CrossFunctional *bool
}

func (b0 Team_builder) Build() *Team {
	m0 := &Team{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 25)
		x.xxx_hidden_Id = b.Id
	}
	if b.OrganizationId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 25)
		x.xxx_hidden_OrganizationId = b.OrganizationId
	}
	if b.DepartmentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 25)
		x.xxx_hidden_DepartmentId = b.DepartmentId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 25)
		x.xxx_hidden_Name = b.Name
	}
	if b.Slug != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 25)
		x.xxx_hidden_Slug = b.Slug
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 25)
		x.xxx_hidden_Description = b.Description
	}
	if b.LeadId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 25)
		x.xxx_hidden_LeadId = b.LeadId
	}
	if b.TeamType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 25)
		x.xxx_hidden_TeamType = b.TeamType
	}
	if b.FocusArea != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 25)
		x.xxx_hidden_FocusArea = b.FocusArea
	}
	if b.Metadata != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 25)
		x.xxx_hidden_Metadata = &b.Metadata
	}
	if b.CreatedAt != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 25)
		x.xxx_hidden_CreatedAt = b.CreatedAt
	}
	if b.UpdatedAt != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 25)
		x.xxx_hidden_UpdatedAt = b.UpdatedAt
	}
	if b.CreatedBy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 25)
		x.xxx_hidden_CreatedBy = b.CreatedBy
	}
	if b.UpdatedBy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 25)
		x.xxx_hidden_UpdatedBy = b.UpdatedBy
	}
	if b.Active != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 25)
		x.xxx_hidden_Active = *b.Active
	}
	if b.ContactEmail != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 25)
		x.xxx_hidden_ContactEmail = b.ContactEmail
	}
	if b.CommunicationChannel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 25)
		x.xxx_hidden_CommunicationChannel = b.CommunicationChannel
	}
	if b.MaxMembers != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 17, 25)
		x.xxx_hidden_MaxMembers = *b.MaxMembers
	}
	if b.BudgetAllocation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 18, 25)
		x.xxx_hidden_BudgetAllocation = *b.BudgetAllocation
	}
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 19, 25)
		x.xxx_hidden_Timezone = b.Timezone
	}
	x.xxx_hidden_MemberIds = b.MemberIds
	x.xxx_hidden_ProjectIds = b.ProjectIds
	x.xxx_hidden_Objectives = b.Objectives
	x.xxx_hidden_Kpis = b.Kpis
	if b.CrossFunctional != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 24, 25)
		x.xxx_hidden_CrossFunctional = *b.CrossFunctional
	}
	return m0
}

var File_gcommon_v1_organization_messages_team_proto protoreflect.FileDescriptor

const file_gcommon_v1_organization_messages_team_proto_rawDesc = "" +
	"\n" +
	"+gcommon/v1/organization/messages/team.proto\x12\x17gcommon.v1.organization\x1a*gcommon/v1/common/messages/key_value.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf7\x06\n" +
	"\x04Team\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x0forganization_id\x18\x02 \x01(\tR\x0eorganizationId\x12#\n" +
	"\rdepartment_id\x18\x03 \x01(\tR\fdepartmentId\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x12\n" +
	"\x04slug\x18\x05 \x01(\tR\x04slug\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x17\n" +
	"\alead_id\x18\a \x01(\tR\x06leadId\x12\x1b\n" +
	"\tteam_type\x18\b \x01(\tR\bteamType\x12\x1d\n" +
	"\n" +
	"focus_area\x18\t \x01(\tR\tfocusArea\x12;\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2\x1b.gcommon.v1.common.KeyValueB\x02(\x01R\bmetadata\x12=\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\tcreatedAt\x12=\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\r \x01(\tR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"updated_by\x18\x0e \x01(\tR\tupdatedBy\x12\x16\n" +
	"\x06active\x18\x0f \x01(\bR\x06active\x12#\n" +
	"\rcontact_email\x18\x10 \x01(\tR\fcontactEmail\x123\n" +
	"\x15communication_channel\x18\x11 \x01(\tR\x14communicationChannel\x12\x1f\n" +
	"\vmax_members\x18\x12 \x01(\x05R\n" +
	"maxMembers\x12+\n" +
	"\x11budget_allocation\x18\x13 \x01(\x01R\x10budgetAllocation\x12\x1a\n" +
	"\btimezone\x18\x14 \x01(\tR\btimezone\x12\x1d\n" +
	"\n" +
	"member_ids\x18\x15 \x03(\tR\tmemberIds\x12\x1f\n" +
	"\vproject_ids\x18\x16 \x03(\tR\n" +
	"projectIds\x12\x1e\n" +
	"\n" +
	"objectives\x18\x17 \x03(\tR\n" +
	"objectives\x12\x12\n" +
	"\x04kpis\x18\x18 \x03(\tR\x04kpis\x12)\n" +
	"\x10cross_functional\x18\x19 \x01(\bR\x0fcrossFunctionalB\xee\x01\n" +
	"\x1bcom.gcommon.v1.organizationB\tTeamProtoP\x01Z>github.com/jdfalk/gcommon/pkg/gcommon/v1/organization/messages\xa2\x02\x03GVO\xaa\x02\x17Gcommon.V1.Organization\xca\x02\x17Gcommon\\V1\\Organization\xe2\x02#Gcommon\\V1\\Organization\\GPBMetadata\xea\x02\x19Gcommon::V1::Organization\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_organization_messages_team_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_organization_messages_team_proto_goTypes = []any{
	(*Team)(nil),                  // 0: gcommon.v1.organization.Team
	(*messages.KeyValue)(nil),     // 1: gcommon.v1.common.KeyValue
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_gcommon_v1_organization_messages_team_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.organization.Team.metadata:type_name -> gcommon.v1.common.KeyValue
	2, // 1: gcommon.v1.organization.Team.created_at:type_name -> google.protobuf.Timestamp
	2, // 2: gcommon.v1.organization.Team.updated_at:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gcommon_v1_organization_messages_team_proto_init() }
func file_gcommon_v1_organization_messages_team_proto_init() {
	if File_gcommon_v1_organization_messages_team_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_organization_messages_team_proto_rawDesc), len(file_gcommon_v1_organization_messages_team_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_organization_messages_team_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_organization_messages_team_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_organization_messages_team_proto_msgTypes,
	}.Build()
	File_gcommon_v1_organization_messages_team_proto = out.File
	file_gcommon_v1_organization_messages_team_proto_goTypes = nil
	file_gcommon_v1_organization_messages_team_proto_depIdxs = nil
}
