// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/metrics/messages/disk_usage.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiskUsage struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UsedBytes    int64                  `protobuf:"varint,1,opt,name=used_bytes,json=usedBytes"`
	xxx_hidden_LimitBytes   int64                  `protobuf:"varint,2,opt,name=limit_bytes,json=limitBytes"`
	xxx_hidden_UsagePercent float64                `protobuf:"fixed64,3,opt,name=usage_percent,json=usagePercent"`
	xxx_hidden_Iops         float64                `protobuf:"fixed64,4,opt,name=iops"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DiskUsage) Reset() {
	*x = DiskUsage{}
	mi := &file_gcommon_v1_metrics_messages_disk_usage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskUsage) ProtoMessage() {}

func (x *DiskUsage) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_metrics_messages_disk_usage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DiskUsage) GetUsedBytes() int64 {
	if x != nil {
		return x.xxx_hidden_UsedBytes
	}
	return 0
}

func (x *DiskUsage) GetLimitBytes() int64 {
	if x != nil {
		return x.xxx_hidden_LimitBytes
	}
	return 0
}

func (x *DiskUsage) GetUsagePercent() float64 {
	if x != nil {
		return x.xxx_hidden_UsagePercent
	}
	return 0
}

func (x *DiskUsage) GetIops() float64 {
	if x != nil {
		return x.xxx_hidden_Iops
	}
	return 0
}

func (x *DiskUsage) SetUsedBytes(v int64) {
	x.xxx_hidden_UsedBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DiskUsage) SetLimitBytes(v int64) {
	x.xxx_hidden_LimitBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DiskUsage) SetUsagePercent(v float64) {
	x.xxx_hidden_UsagePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DiskUsage) SetIops(v float64) {
	x.xxx_hidden_Iops = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DiskUsage) HasUsedBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DiskUsage) HasLimitBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DiskUsage) HasUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DiskUsage) HasIops() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DiskUsage) ClearUsedBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UsedBytes = 0
}

func (x *DiskUsage) ClearLimitBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_LimitBytes = 0
}

func (x *DiskUsage) ClearUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UsagePercent = 0
}

func (x *DiskUsage) ClearIops() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Iops = 0
}

type DiskUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Currently used disk space (bytes)
	UsedBytes *int64
	// Disk space limit (bytes)
	LimitBytes *int64
	// Usage percentage
	UsagePercent *float64
	// I/O operations per second
	Iops *float64
}

func (b0 DiskUsage_builder) Build() *DiskUsage {
	m0 := &DiskUsage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UsedBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_UsedBytes = *b.UsedBytes
	}
	if b.LimitBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_LimitBytes = *b.LimitBytes
	}
	if b.UsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_UsagePercent = *b.UsagePercent
	}
	if b.Iops != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Iops = *b.Iops
	}
	return m0
}

var File_gcommon_v1_metrics_messages_disk_usage_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_messages_disk_usage_proto_rawDesc = "" +
	"\n" +
	",gcommon/v1/metrics/messages/disk_usage.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\"\x84\x01\n" +
	"\tDiskUsage\x12\x1d\n" +
	"\n" +
	"used_bytes\x18\x01 \x01(\x03R\tusedBytes\x12\x1f\n" +
	"\vlimit_bytes\x18\x02 \x01(\x03R\n" +
	"limitBytes\x12#\n" +
	"\rusage_percent\x18\x03 \x01(\x01R\fusagePercent\x12\x12\n" +
	"\x04iops\x18\x04 \x01(\x01R\x04iopsB\xd5\x01\n" +
	"\x16com.gcommon.v1.metricsB\x0eDiskUsageProtoP\x01Z9github.com/jdfalk/gcommon/pkg/gcommon/v1/metrics/messages\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_messages_disk_usage_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_metrics_messages_disk_usage_proto_goTypes = []any{
	(*DiskUsage)(nil), // 0: gcommon.v1.metrics.DiskUsage
}
var file_gcommon_v1_metrics_messages_disk_usage_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_messages_disk_usage_proto_init() }
func file_gcommon_v1_metrics_messages_disk_usage_proto_init() {
	if File_gcommon_v1_metrics_messages_disk_usage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_messages_disk_usage_proto_rawDesc), len(file_gcommon_v1_metrics_messages_disk_usage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_messages_disk_usage_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_messages_disk_usage_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_metrics_messages_disk_usage_proto_msgTypes,
	}.Build()
	File_gcommon_v1_metrics_messages_disk_usage_proto = out.File
	file_gcommon_v1_metrics_messages_disk_usage_proto_goTypes = nil
	file_gcommon_v1_metrics_messages_disk_usage_proto_depIdxs = nil
}
