// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/metrics/messages/cpu_usage.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CPUUsage struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CurrentPercent float64                `protobuf:"fixed64,1,opt,name=current_percent,json=currentPercent"`
	xxx_hidden_AvgPercent     float64                `protobuf:"fixed64,2,opt,name=avg_percent,json=avgPercent"`
	xxx_hidden_PeakPercent    float64                `protobuf:"fixed64,3,opt,name=peak_percent,json=peakPercent"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CPUUsage) Reset() {
	*x = CPUUsage{}
	mi := &file_gcommon_v1_metrics_messages_cpu_usage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUUsage) ProtoMessage() {}

func (x *CPUUsage) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_metrics_messages_cpu_usage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CPUUsage) GetCurrentPercent() float64 {
	if x != nil {
		return x.xxx_hidden_CurrentPercent
	}
	return 0
}

func (x *CPUUsage) GetAvgPercent() float64 {
	if x != nil {
		return x.xxx_hidden_AvgPercent
	}
	return 0
}

func (x *CPUUsage) GetPeakPercent() float64 {
	if x != nil {
		return x.xxx_hidden_PeakPercent
	}
	return 0
}

func (x *CPUUsage) SetCurrentPercent(v float64) {
	x.xxx_hidden_CurrentPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CPUUsage) SetAvgPercent(v float64) {
	x.xxx_hidden_AvgPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *CPUUsage) SetPeakPercent(v float64) {
	x.xxx_hidden_PeakPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *CPUUsage) HasCurrentPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CPUUsage) HasAvgPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CPUUsage) HasPeakPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CPUUsage) ClearCurrentPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CurrentPercent = 0
}

func (x *CPUUsage) ClearAvgPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AvgPercent = 0
}

func (x *CPUUsage) ClearPeakPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PeakPercent = 0
}

type CPUUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Current CPU usage (percentage)
	CurrentPercent *float64
	// Average CPU usage (percentage)
	AvgPercent *float64
	// Peak CPU usage (percentage)
	PeakPercent *float64
}

func (b0 CPUUsage_builder) Build() *CPUUsage {
	m0 := &CPUUsage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CurrentPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_CurrentPercent = *b.CurrentPercent
	}
	if b.AvgPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_AvgPercent = *b.AvgPercent
	}
	if b.PeakPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_PeakPercent = *b.PeakPercent
	}
	return m0
}

var File_gcommon_v1_metrics_messages_cpu_usage_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_messages_cpu_usage_proto_rawDesc = "" +
	"\n" +
	"+gcommon/v1/metrics/messages/cpu_usage.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\"w\n" +
	"\bCPUUsage\x12'\n" +
	"\x0fcurrent_percent\x18\x01 \x01(\x01R\x0ecurrentPercent\x12\x1f\n" +
	"\vavg_percent\x18\x02 \x01(\x01R\n" +
	"avgPercent\x12!\n" +
	"\fpeak_percent\x18\x03 \x01(\x01R\vpeakPercentB\xd4\x01\n" +
	"\x16com.gcommon.v1.metricsB\rCpuUsageProtoP\x01Z9github.com/jdfalk/gcommon/pkg/gcommon/v1/metrics/messages\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_messages_cpu_usage_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_metrics_messages_cpu_usage_proto_goTypes = []any{
	(*CPUUsage)(nil), // 0: gcommon.v1.metrics.CPUUsage
}
var file_gcommon_v1_metrics_messages_cpu_usage_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_messages_cpu_usage_proto_init() }
func file_gcommon_v1_metrics_messages_cpu_usage_proto_init() {
	if File_gcommon_v1_metrics_messages_cpu_usage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_messages_cpu_usage_proto_rawDesc), len(file_gcommon_v1_metrics_messages_cpu_usage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_messages_cpu_usage_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_messages_cpu_usage_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_metrics_messages_cpu_usage_proto_msgTypes,
	}.Build()
	File_gcommon_v1_metrics_messages_cpu_usage_proto = out.File
	file_gcommon_v1_metrics_messages_cpu_usage_proto_goTypes = nil
	file_gcommon_v1_metrics_messages_cpu_usage_proto_depIdxs = nil
}
