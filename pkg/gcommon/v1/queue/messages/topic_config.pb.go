// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/topic_config.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Configuration settings for a topic.
type TopicConfig struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MaxMessages       uint64                 `protobuf:"varint,1,opt,name=max_messages,json=maxMessages"`
	xxx_hidden_MaxSizeBytes      uint64                 `protobuf:"varint,2,opt,name=max_size_bytes,json=maxSizeBytes"`
	xxx_hidden_RetentionPolicy   *QueueRetentionPolicy  `protobuf:"bytes,3,opt,name=retention_policy,json=retentionPolicy"`
	xxx_hidden_PartitionConfig   *PartitionConfig       `protobuf:"bytes,4,opt,name=partition_config,json=partitionConfig"`
	xxx_hidden_Persistent        bool                   `protobuf:"varint,5,opt,name=persistent"`
	xxx_hidden_Replicated        bool                   `protobuf:"varint,6,opt,name=replicated"`
	xxx_hidden_ReplicationFactor uint32                 `protobuf:"varint,7,opt,name=replication_factor,json=replicationFactor"`
	xxx_hidden_EnableCompaction  bool                   `protobuf:"varint,8,opt,name=enable_compaction,json=enableCompaction"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *TopicConfig) Reset() {
	*x = TopicConfig{}
	mi := &file_gcommon_v1_queue_messages_topic_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicConfig) ProtoMessage() {}

func (x *TopicConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_topic_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TopicConfig) GetMaxMessages() uint64 {
	if x != nil {
		return x.xxx_hidden_MaxMessages
	}
	return 0
}

func (x *TopicConfig) GetMaxSizeBytes() uint64 {
	if x != nil {
		return x.xxx_hidden_MaxSizeBytes
	}
	return 0
}

func (x *TopicConfig) GetRetentionPolicy() *QueueRetentionPolicy {
	if x != nil {
		return x.xxx_hidden_RetentionPolicy
	}
	return nil
}

func (x *TopicConfig) GetPartitionConfig() *PartitionConfig {
	if x != nil {
		return x.xxx_hidden_PartitionConfig
	}
	return nil
}

func (x *TopicConfig) GetPersistent() bool {
	if x != nil {
		return x.xxx_hidden_Persistent
	}
	return false
}

func (x *TopicConfig) GetReplicated() bool {
	if x != nil {
		return x.xxx_hidden_Replicated
	}
	return false
}

func (x *TopicConfig) GetReplicationFactor() uint32 {
	if x != nil {
		return x.xxx_hidden_ReplicationFactor
	}
	return 0
}

func (x *TopicConfig) GetEnableCompaction() bool {
	if x != nil {
		return x.xxx_hidden_EnableCompaction
	}
	return false
}

func (x *TopicConfig) SetMaxMessages(v uint64) {
	x.xxx_hidden_MaxMessages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *TopicConfig) SetMaxSizeBytes(v uint64) {
	x.xxx_hidden_MaxSizeBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *TopicConfig) SetRetentionPolicy(v *QueueRetentionPolicy) {
	x.xxx_hidden_RetentionPolicy = v
}

func (x *TopicConfig) SetPartitionConfig(v *PartitionConfig) {
	x.xxx_hidden_PartitionConfig = v
}

func (x *TopicConfig) SetPersistent(v bool) {
	x.xxx_hidden_Persistent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *TopicConfig) SetReplicated(v bool) {
	x.xxx_hidden_Replicated = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *TopicConfig) SetReplicationFactor(v uint32) {
	x.xxx_hidden_ReplicationFactor = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *TopicConfig) SetEnableCompaction(v bool) {
	x.xxx_hidden_EnableCompaction = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *TopicConfig) HasMaxMessages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TopicConfig) HasMaxSizeBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TopicConfig) HasRetentionPolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RetentionPolicy != nil
}

func (x *TopicConfig) HasPartitionConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PartitionConfig != nil
}

func (x *TopicConfig) HasPersistent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *TopicConfig) HasReplicated() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *TopicConfig) HasReplicationFactor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *TopicConfig) HasEnableCompaction() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *TopicConfig) ClearMaxMessages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MaxMessages = 0
}

func (x *TopicConfig) ClearMaxSizeBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxSizeBytes = 0
}

func (x *TopicConfig) ClearRetentionPolicy() {
	x.xxx_hidden_RetentionPolicy = nil
}

func (x *TopicConfig) ClearPartitionConfig() {
	x.xxx_hidden_PartitionConfig = nil
}

func (x *TopicConfig) ClearPersistent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Persistent = false
}

func (x *TopicConfig) ClearReplicated() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Replicated = false
}

func (x *TopicConfig) ClearReplicationFactor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ReplicationFactor = 0
}

func (x *TopicConfig) ClearEnableCompaction() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_EnableCompaction = false
}

type TopicConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum number of messages in the topic
	MaxMessages *uint64
	// Maximum size of the topic in bytes
	MaxSizeBytes *uint64
	// Message retention policy
	RetentionPolicy *QueueRetentionPolicy
	// Partitioning configuration
	PartitionConfig *PartitionConfig
	// Whether messages are persistent
	Persistent *bool
	// Whether topic is replicated
	Replicated *bool
	// Replication factor
	ReplicationFactor *uint32
	// Whether to compact duplicate messages
	EnableCompaction *bool
}

func (b0 TopicConfig_builder) Build() *TopicConfig {
	m0 := &TopicConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MaxMessages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_MaxMessages = *b.MaxMessages
	}
	if b.MaxSizeBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_MaxSizeBytes = *b.MaxSizeBytes
	}
	x.xxx_hidden_RetentionPolicy = b.RetentionPolicy
	x.xxx_hidden_PartitionConfig = b.PartitionConfig
	if b.Persistent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_Persistent = *b.Persistent
	}
	if b.Replicated != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_Replicated = *b.Replicated
	}
	if b.ReplicationFactor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_ReplicationFactor = *b.ReplicationFactor
	}
	if b.EnableCompaction != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_EnableCompaction = *b.EnableCompaction
	}
	return m0
}

var File_gcommon_v1_queue_messages_topic_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_topic_config_proto_rawDesc = "" +
	"\n" +
	",gcommon/v1/queue/messages/topic_config.proto\x12\x10gcommon.v1.queue\x1a0gcommon/v1/queue/messages/partition_config.proto\x1a0gcommon/v1/queue/messages/retention_policy.proto\x1a!google/protobuf/go_features.proto\"\x93\x03\n" +
	"\vTopicConfig\x12!\n" +
	"\fmax_messages\x18\x01 \x01(\x04R\vmaxMessages\x12$\n" +
	"\x0emax_size_bytes\x18\x02 \x01(\x04R\fmaxSizeBytes\x12Q\n" +
	"\x10retention_policy\x18\x03 \x01(\v2&.gcommon.v1.queue.QueueRetentionPolicyR\x0fretentionPolicy\x12L\n" +
	"\x10partition_config\x18\x04 \x01(\v2!.gcommon.v1.queue.PartitionConfigR\x0fpartitionConfig\x12\x1e\n" +
	"\n" +
	"persistent\x18\x05 \x01(\bR\n" +
	"persistent\x12\x1e\n" +
	"\n" +
	"replicated\x18\x06 \x01(\bR\n" +
	"replicated\x12-\n" +
	"\x12replication_factor\x18\a \x01(\rR\x11replicationFactor\x12+\n" +
	"\x11enable_compaction\x18\b \x01(\bR\x10enableCompactionB\xcb\x01\n" +
	"\x14com.gcommon.v1.queueB\x10TopicConfigProtoP\x01Z7github.com/jdfalk/gcommon/pkg/gcommon/v1/queue/messages\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_topic_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_topic_config_proto_goTypes = []any{
	(*TopicConfig)(nil),          // 0: gcommon.v1.queue.TopicConfig
	(*QueueRetentionPolicy)(nil), // 1: gcommon.v1.queue.QueueRetentionPolicy
	(*PartitionConfig)(nil),      // 2: gcommon.v1.queue.PartitionConfig
}
var file_gcommon_v1_queue_messages_topic_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.TopicConfig.retention_policy:type_name -> gcommon.v1.queue.QueueRetentionPolicy
	2, // 1: gcommon.v1.queue.TopicConfig.partition_config:type_name -> gcommon.v1.queue.PartitionConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_topic_config_proto_init() }
func file_gcommon_v1_queue_messages_topic_config_proto_init() {
	if File_gcommon_v1_queue_messages_topic_config_proto != nil {
		return
	}
	file_gcommon_v1_queue_messages_partition_config_proto_init()
	file_gcommon_v1_queue_messages_retention_policy_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_topic_config_proto_rawDesc), len(file_gcommon_v1_queue_messages_topic_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_topic_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_topic_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_topic_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_topic_config_proto = out.File
	file_gcommon_v1_queue_messages_topic_config_proto_goTypes = nil
	file_gcommon_v1_queue_messages_topic_config_proto_depIdxs = nil
}
