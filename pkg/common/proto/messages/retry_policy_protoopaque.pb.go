// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/common/proto/messages/retry_policy.proto

//go:build protoopaque

package messages

import (
	enums "github.com/jdfalk/gcommon/pkg/common/proto/enums"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Retry policy configuration for resilient operation handling.
// Defines retry behavior with exponential backoff, jitter,
// and configurable error handling for robust service interactions.
type RetryPolicy struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MaxAttempts       int32                  `protobuf:"varint,1,opt,name=max_attempts,json=maxAttempts"`
	xxx_hidden_InitialDelay      *durationpb.Duration   `protobuf:"bytes,2,opt,name=initial_delay,json=initialDelay"`
	xxx_hidden_MaxDelay          *durationpb.Duration   `protobuf:"bytes,3,opt,name=max_delay,json=maxDelay"`
	xxx_hidden_BackoffMultiplier float64                `protobuf:"fixed64,4,opt,name=backoff_multiplier,json=backoffMultiplier"`
	xxx_hidden_EnableJitter      bool                   `protobuf:"varint,5,opt,name=enable_jitter,json=enableJitter"`
	xxx_hidden_RetryableErrors   []enums.ErrorCode      `protobuf:"varint,6,rep,packed,name=retryable_errors,json=retryableErrors,enum=gcommon.v1.common.ErrorCode"`
	xxx_hidden_TotalTimeout      *durationpb.Duration   `protobuf:"bytes,7,opt,name=total_timeout,json=totalTimeout"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *RetryPolicy) Reset() {
	*x = RetryPolicy{}
	mi := &file_pkg_common_proto_messages_retry_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryPolicy) ProtoMessage() {}

func (x *RetryPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_messages_retry_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RetryPolicy) GetMaxAttempts() int32 {
	if x != nil {
		return x.xxx_hidden_MaxAttempts
	}
	return 0
}

func (x *RetryPolicy) GetInitialDelay() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_InitialDelay
	}
	return nil
}

func (x *RetryPolicy) GetMaxDelay() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_MaxDelay
	}
	return nil
}

func (x *RetryPolicy) GetBackoffMultiplier() float64 {
	if x != nil {
		return x.xxx_hidden_BackoffMultiplier
	}
	return 0
}

func (x *RetryPolicy) GetEnableJitter() bool {
	if x != nil {
		return x.xxx_hidden_EnableJitter
	}
	return false
}

func (x *RetryPolicy) GetRetryableErrors() []enums.ErrorCode {
	if x != nil {
		return x.xxx_hidden_RetryableErrors
	}
	return nil
}

func (x *RetryPolicy) GetTotalTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_TotalTimeout
	}
	return nil
}

func (x *RetryPolicy) SetMaxAttempts(v int32) {
	x.xxx_hidden_MaxAttempts = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *RetryPolicy) SetInitialDelay(v *durationpb.Duration) {
	x.xxx_hidden_InitialDelay = v
}

func (x *RetryPolicy) SetMaxDelay(v *durationpb.Duration) {
	x.xxx_hidden_MaxDelay = v
}

func (x *RetryPolicy) SetBackoffMultiplier(v float64) {
	x.xxx_hidden_BackoffMultiplier = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *RetryPolicy) SetEnableJitter(v bool) {
	x.xxx_hidden_EnableJitter = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *RetryPolicy) SetRetryableErrors(v []enums.ErrorCode) {
	x.xxx_hidden_RetryableErrors = v
}

func (x *RetryPolicy) SetTotalTimeout(v *durationpb.Duration) {
	x.xxx_hidden_TotalTimeout = v
}

func (x *RetryPolicy) HasMaxAttempts() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RetryPolicy) HasInitialDelay() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InitialDelay != nil
}

func (x *RetryPolicy) HasMaxDelay() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_MaxDelay != nil
}

func (x *RetryPolicy) HasBackoffMultiplier() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RetryPolicy) HasEnableJitter() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RetryPolicy) HasTotalTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TotalTimeout != nil
}

func (x *RetryPolicy) ClearMaxAttempts() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MaxAttempts = 0
}

func (x *RetryPolicy) ClearInitialDelay() {
	x.xxx_hidden_InitialDelay = nil
}

func (x *RetryPolicy) ClearMaxDelay() {
	x.xxx_hidden_MaxDelay = nil
}

func (x *RetryPolicy) ClearBackoffMultiplier() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_BackoffMultiplier = 0
}

func (x *RetryPolicy) ClearEnableJitter() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_EnableJitter = false
}

func (x *RetryPolicy) ClearTotalTimeout() {
	x.xxx_hidden_TotalTimeout = nil
}

type RetryPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum number of retry attempts (including initial attempt)
	MaxAttempts *int32
	// Initial delay before first retry
	InitialDelay *durationpb.Duration
	// Maximum delay between retry attempts
	MaxDelay *durationpb.Duration
	// Multiplier for exponential backoff (e.g., 2.0 for doubling)
	BackoffMultiplier *float64
	// Whether to add random jitter to retry timing
	EnableJitter *bool
	// List of error codes that should trigger retries
	RetryableErrors []enums.ErrorCode
	// Total timeout for all retry attempts combined
	TotalTimeout *durationpb.Duration
}

func (b0 RetryPolicy_builder) Build() *RetryPolicy {
	m0 := &RetryPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MaxAttempts != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_MaxAttempts = *b.MaxAttempts
	}
	x.xxx_hidden_InitialDelay = b.InitialDelay
	x.xxx_hidden_MaxDelay = b.MaxDelay
	if b.BackoffMultiplier != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_BackoffMultiplier = *b.BackoffMultiplier
	}
	if b.EnableJitter != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_EnableJitter = *b.EnableJitter
	}
	x.xxx_hidden_RetryableErrors = b.RetryableErrors
	x.xxx_hidden_TotalTimeout = b.TotalTimeout
	return m0
}

var File_pkg_common_proto_messages_retry_policy_proto protoreflect.FileDescriptor

const file_pkg_common_proto_messages_retry_policy_proto_rawDesc = "" +
	"\n" +
	",pkg/common/proto/messages/retry_policy.proto\x12\x11gcommon.v1.common\x1a!google/protobuf/go_features.proto\x1a\x1egoogle/protobuf/duration.proto\x1a'pkg/common/proto/enums/error_code.proto\"\x85\x03\n" +
	"\vRetryPolicy\x12!\n" +
	"\fmax_attempts\x18\x01 \x01(\x05R\vmaxAttempts\x12>\n" +
	"\rinitial_delay\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\finitialDelay\x126\n" +
	"\tmax_delay\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\bmaxDelay\x12-\n" +
	"\x12backoff_multiplier\x18\x04 \x01(\x01R\x11backoffMultiplier\x12#\n" +
	"\renable_jitter\x18\x05 \x01(\bR\fenableJitter\x12G\n" +
	"\x10retryable_errors\x18\x06 \x03(\x0e2\x1c.gcommon.v1.common.ErrorCodeR\x0fretryableErrors\x12>\n" +
	"\rtotal_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\ftotalTimeoutB\xcc\x01\n" +
	"\x15com.gcommon.v1.commonB\x10RetryPolicyProtoP\x01Z3github.com/jdfalk/gcommon/pkg/common/proto/messages\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Common\xca\x02\x11Gcommon\\V1\\Common\xe2\x02\x1dGcommon\\V1\\Common\\GPBMetadata\xea\x02\x13Gcommon::V1::Common\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_common_proto_messages_retry_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_common_proto_messages_retry_policy_proto_goTypes = []any{
	(*RetryPolicy)(nil),         // 0: gcommon.v1.common.RetryPolicy
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
	(enums.ErrorCode)(0),        // 2: gcommon.v1.common.ErrorCode
}
var file_pkg_common_proto_messages_retry_policy_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.common.RetryPolicy.initial_delay:type_name -> google.protobuf.Duration
	1, // 1: gcommon.v1.common.RetryPolicy.max_delay:type_name -> google.protobuf.Duration
	2, // 2: gcommon.v1.common.RetryPolicy.retryable_errors:type_name -> gcommon.v1.common.ErrorCode
	1, // 3: gcommon.v1.common.RetryPolicy.total_timeout:type_name -> google.protobuf.Duration
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_common_proto_messages_retry_policy_proto_init() }
func file_pkg_common_proto_messages_retry_policy_proto_init() {
	if File_pkg_common_proto_messages_retry_policy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_common_proto_messages_retry_policy_proto_rawDesc), len(file_pkg_common_proto_messages_retry_policy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_common_proto_messages_retry_policy_proto_goTypes,
		DependencyIndexes: file_pkg_common_proto_messages_retry_policy_proto_depIdxs,
		MessageInfos:      file_pkg_common_proto_messages_retry_policy_proto_msgTypes,
	}.Build()
	File_pkg_common_proto_messages_retry_policy_proto = out.File
	file_pkg_common_proto_messages_retry_policy_proto_goTypes = nil
	file_pkg_common_proto_messages_retry_policy_proto_depIdxs = nil
}
