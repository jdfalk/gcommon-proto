// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/common/proto/messages/debug_info.proto

//go:build !protoopaque

package commonpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// DebugInfo provides supplemental debugging information
// that can be included in request or response messages.
// It captures contextual details useful for tracing and
// troubleshooting complex issues.
type DebugInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Service or component name emitting this debug info
	Service *string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	// Optional method or operation identifier
	Method *string `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
	// Time when this debug info was generated
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
	// Arbitrary key/value details for debugging
	Details map[string]string `protobuf:"bytes,4,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Additional tags to categorize or filter debug entries
	Tags          []string `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebugInfo) Reset() {
	*x = DebugInfo{}
	mi := &file_pkg_common_proto_messages_debug_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugInfo) ProtoMessage() {}

func (x *DebugInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_messages_debug_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DebugInfo) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *DebugInfo) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *DebugInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DebugInfo) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *DebugInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DebugInfo) SetService(v string) {
	x.Service = &v
}

func (x *DebugInfo) SetMethod(v string) {
	x.Method = &v
}

func (x *DebugInfo) SetTimestamp(v *timestamppb.Timestamp) {
	x.Timestamp = v
}

func (x *DebugInfo) SetDetails(v map[string]string) {
	x.Details = v
}

func (x *DebugInfo) SetTags(v []string) {
	x.Tags = v
}

func (x *DebugInfo) HasService() bool {
	if x == nil {
		return false
	}
	return x.Service != nil
}

func (x *DebugInfo) HasMethod() bool {
	if x == nil {
		return false
	}
	return x.Method != nil
}

func (x *DebugInfo) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.Timestamp != nil
}

func (x *DebugInfo) ClearService() {
	x.Service = nil
}

func (x *DebugInfo) ClearMethod() {
	x.Method = nil
}

func (x *DebugInfo) ClearTimestamp() {
	x.Timestamp = nil
}

type DebugInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Service or component name emitting this debug info
	Service *string
	// Optional method or operation identifier
	Method *string
	// Time when this debug info was generated
	Timestamp *timestamppb.Timestamp
	// Arbitrary key/value details for debugging
	Details map[string]string
	// Additional tags to categorize or filter debug entries
	Tags []string
}

func (b0 DebugInfo_builder) Build() *DebugInfo {
	m0 := &DebugInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.Service = b.Service
	x.Method = b.Method
	x.Timestamp = b.Timestamp
	x.Details = b.Details
	x.Tags = b.Tags
	return m0
}

var File_pkg_common_proto_messages_debug_info_proto protoreflect.FileDescriptor

const file_pkg_common_proto_messages_debug_info_proto_rawDesc = "" +
	"\n" +
	"*pkg/common/proto/messages/debug_info.proto\x12\x11gcommon.v1.common\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8c\x02\n" +
	"\tDebugInfo\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12C\n" +
	"\adetails\x18\x04 \x03(\v2).gcommon.v1.common.DebugInfo.DetailsEntryR\adetails\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xca\x01\n" +
	"\x15com.gcommon.v1.commonB\x0eDebugInfoProtoP\x01Z3github.com/jdfalk/gcommon/pkg/common/proto;commonpb\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Common\xca\x02\x11Gcommon\\V1\\Common\xe2\x02\x1dGcommon\\V1\\Common\\GPBMetadata\xea\x02\x13Gcommon::V1::Common\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_common_proto_messages_debug_info_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_common_proto_messages_debug_info_proto_goTypes = []any{
	(*DebugInfo)(nil),             // 0: gcommon.v1.common.DebugInfo
	nil,                           // 1: gcommon.v1.common.DebugInfo.DetailsEntry
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_pkg_common_proto_messages_debug_info_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.common.DebugInfo.timestamp:type_name -> google.protobuf.Timestamp
	1, // 1: gcommon.v1.common.DebugInfo.details:type_name -> gcommon.v1.common.DebugInfo.DetailsEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_common_proto_messages_debug_info_proto_init() }
func file_pkg_common_proto_messages_debug_info_proto_init() {
	if File_pkg_common_proto_messages_debug_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_common_proto_messages_debug_info_proto_rawDesc), len(file_pkg_common_proto_messages_debug_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_common_proto_messages_debug_info_proto_goTypes,
		DependencyIndexes: file_pkg_common_proto_messages_debug_info_proto_depIdxs,
		MessageInfos:      file_pkg_common_proto_messages_debug_info_proto_msgTypes,
	}.Build()
	File_pkg_common_proto_messages_debug_info_proto = out.File
	file_pkg_common_proto_messages_debug_info_proto_goTypes = nil
	file_pkg_common_proto_messages_debug_info_proto_depIdxs = nil
}
