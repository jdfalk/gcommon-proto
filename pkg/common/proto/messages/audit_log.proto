// file: pkg/common/proto/messages/audit_log.proto
edition = "2023";

package gcommon.v1.common;

import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";
import "pkg/common/proto/types/resource_reference.proto";
import "pkg/common/proto/enums/audit_result.proto";

option go_package = "github.com/jdfalk/gcommon/pkg/common/proto;commonpb";
option features.(pb.go).api_level = API_HYBRID;

/**
 * Audit log entry for tracking operations and security events.
 * Provides comprehensive audit trail with user identification,
 * action details, and contextual metadata for compliance and debugging.
 */
message AuditLog {
  // Unique audit log entry identifier
  string id = 1;

  // User identifier who performed the action
  string user_id = 2;

  // Action or operation that was performed
  string action = 3;

  // Resource that was acted upon
  ResourceReference resource = 4;

  // Timestamp when the action occurred
  google.protobuf.Timestamp timestamp = 5;

  // Source IP address of the request
  string source_ip = 6;

  // User agent string from the client
  string user_agent = 7;

  // Additional contextual metadata about the action
  map<string, string> metadata = 8;

  // Result of the action (success, failure, partial)
  AuditResult result = 9;

  // Session identifier if applicable
  string session_id = 10;
}
