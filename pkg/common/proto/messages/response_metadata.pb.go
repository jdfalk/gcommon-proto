// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/common/proto/messages/response_metadata.proto

//go:build !protoopaque

package commonpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ResponseMetadata provides standardized metadata for all service responses
//
// This message contains common fields that should be included in response
// messages for observability, tracing, and error handling.
type ResponseMetadata struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Trace ID from the corresponding request for correlation
	TraceId *string `protobuf:"bytes,1,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	// Request ID for unique identification of this specific request
	RequestId *string `protobuf:"bytes,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Timestamp when the response was generated
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
	// Total processing time for the request
	ProcessingTime *durationpb.Duration `protobuf:"bytes,4,opt,name=processing_time,json=processingTime" json:"processing_time,omitempty"`
	// Service version that processed the request
	ServiceVersion *string `protobuf:"bytes,5,opt,name=service_version,json=serviceVersion" json:"service_version,omitempty"`
	// Success indicator (true if operation succeeded)
	Success *bool `protobuf:"varint,6,opt,name=success" json:"success,omitempty"`
	// Error information if the operation failed
	Error *Error `protobuf:"bytes,7,opt,name=error" json:"error,omitempty"`
	// Additional metadata specific to the response
	Metadata map[string]string `protobuf:"bytes,8,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Rate limiting information
	RateLimit *RateLimitInfo `protobuf:"bytes,9,opt,name=rate_limit,json=rateLimit" json:"rate_limit,omitempty"`
	// Pagination information for list responses
	Pagination    *PaginationInfo `protobuf:"bytes,10,opt,name=pagination" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseMetadata) Reset() {
	*x = ResponseMetadata{}
	mi := &file_pkg_common_proto_messages_response_metadata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMetadata) ProtoMessage() {}

func (x *ResponseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_messages_response_metadata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResponseMetadata) GetTraceId() string {
	if x != nil && x.TraceId != nil {
		return *x.TraceId
	}
	return ""
}

func (x *ResponseMetadata) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *ResponseMetadata) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ResponseMetadata) GetProcessingTime() *durationpb.Duration {
	if x != nil {
		return x.ProcessingTime
	}
	return nil
}

func (x *ResponseMetadata) GetServiceVersion() string {
	if x != nil && x.ServiceVersion != nil {
		return *x.ServiceVersion
	}
	return ""
}

func (x *ResponseMetadata) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ResponseMetadata) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResponseMetadata) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ResponseMetadata) GetRateLimit() *RateLimitInfo {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

func (x *ResponseMetadata) GetPagination() *PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ResponseMetadata) SetTraceId(v string) {
	x.TraceId = &v
}

func (x *ResponseMetadata) SetRequestId(v string) {
	x.RequestId = &v
}

func (x *ResponseMetadata) SetTimestamp(v *timestamppb.Timestamp) {
	x.Timestamp = v
}

func (x *ResponseMetadata) SetProcessingTime(v *durationpb.Duration) {
	x.ProcessingTime = v
}

func (x *ResponseMetadata) SetServiceVersion(v string) {
	x.ServiceVersion = &v
}

func (x *ResponseMetadata) SetSuccess(v bool) {
	x.Success = &v
}

func (x *ResponseMetadata) SetError(v *Error) {
	x.Error = v
}

func (x *ResponseMetadata) SetMetadata(v map[string]string) {
	x.Metadata = v
}

func (x *ResponseMetadata) SetRateLimit(v *RateLimitInfo) {
	x.RateLimit = v
}

func (x *ResponseMetadata) SetPagination(v *PaginationInfo) {
	x.Pagination = v
}

func (x *ResponseMetadata) HasTraceId() bool {
	if x == nil {
		return false
	}
	return x.TraceId != nil
}

func (x *ResponseMetadata) HasRequestId() bool {
	if x == nil {
		return false
	}
	return x.RequestId != nil
}

func (x *ResponseMetadata) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.Timestamp != nil
}

func (x *ResponseMetadata) HasProcessingTime() bool {
	if x == nil {
		return false
	}
	return x.ProcessingTime != nil
}

func (x *ResponseMetadata) HasServiceVersion() bool {
	if x == nil {
		return false
	}
	return x.ServiceVersion != nil
}

func (x *ResponseMetadata) HasSuccess() bool {
	if x == nil {
		return false
	}
	return x.Success != nil
}

func (x *ResponseMetadata) HasError() bool {
	if x == nil {
		return false
	}
	return x.Error != nil
}

func (x *ResponseMetadata) HasRateLimit() bool {
	if x == nil {
		return false
	}
	return x.RateLimit != nil
}

func (x *ResponseMetadata) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.Pagination != nil
}

func (x *ResponseMetadata) ClearTraceId() {
	x.TraceId = nil
}

func (x *ResponseMetadata) ClearRequestId() {
	x.RequestId = nil
}

func (x *ResponseMetadata) ClearTimestamp() {
	x.Timestamp = nil
}

func (x *ResponseMetadata) ClearProcessingTime() {
	x.ProcessingTime = nil
}

func (x *ResponseMetadata) ClearServiceVersion() {
	x.ServiceVersion = nil
}

func (x *ResponseMetadata) ClearSuccess() {
	x.Success = nil
}

func (x *ResponseMetadata) ClearError() {
	x.Error = nil
}

func (x *ResponseMetadata) ClearRateLimit() {
	x.RateLimit = nil
}

func (x *ResponseMetadata) ClearPagination() {
	x.Pagination = nil
}

type ResponseMetadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Trace ID from the corresponding request for correlation
	TraceId *string
	// Request ID for unique identification of this specific request
	RequestId *string
	// Timestamp when the response was generated
	Timestamp *timestamppb.Timestamp
	// Total processing time for the request
	ProcessingTime *durationpb.Duration
	// Service version that processed the request
	ServiceVersion *string
	// Success indicator (true if operation succeeded)
	Success *bool
	// Error information if the operation failed
	Error *Error
	// Additional metadata specific to the response
	Metadata map[string]string
	// Rate limiting information
	RateLimit *RateLimitInfo
	// Pagination information for list responses
	Pagination *PaginationInfo
}

func (b0 ResponseMetadata_builder) Build() *ResponseMetadata {
	m0 := &ResponseMetadata{}
	b, x := &b0, m0
	_, _ = b, x
	x.TraceId = b.TraceId
	x.RequestId = b.RequestId
	x.Timestamp = b.Timestamp
	x.ProcessingTime = b.ProcessingTime
	x.ServiceVersion = b.ServiceVersion
	x.Success = b.Success
	x.Error = b.Error
	x.Metadata = b.Metadata
	x.RateLimit = b.RateLimit
	x.Pagination = b.Pagination
	return m0
}

// Rate limiting information in response metadata
type RateLimitInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Number of requests remaining in the current window
	Remaining *int64 `protobuf:"varint,1,opt,name=remaining" json:"remaining,omitempty"`
	// Total requests allowed in the current window
	Limit *int64 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	// Time when the current rate limit window resets
	ResetTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=reset_time,json=resetTime" json:"reset_time,omitempty"`
	// Duration until the rate limit resets
	RetryAfter    *durationpb.Duration `protobuf:"bytes,4,opt,name=retry_after,json=retryAfter" json:"retry_after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimitInfo) Reset() {
	*x = RateLimitInfo{}
	mi := &file_pkg_common_proto_messages_response_metadata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitInfo) ProtoMessage() {}

func (x *RateLimitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_messages_response_metadata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RateLimitInfo) GetRemaining() int64 {
	if x != nil && x.Remaining != nil {
		return *x.Remaining
	}
	return 0
}

func (x *RateLimitInfo) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *RateLimitInfo) GetResetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ResetTime
	}
	return nil
}

func (x *RateLimitInfo) GetRetryAfter() *durationpb.Duration {
	if x != nil {
		return x.RetryAfter
	}
	return nil
}

func (x *RateLimitInfo) SetRemaining(v int64) {
	x.Remaining = &v
}

func (x *RateLimitInfo) SetLimit(v int64) {
	x.Limit = &v
}

func (x *RateLimitInfo) SetResetTime(v *timestamppb.Timestamp) {
	x.ResetTime = v
}

func (x *RateLimitInfo) SetRetryAfter(v *durationpb.Duration) {
	x.RetryAfter = v
}

func (x *RateLimitInfo) HasRemaining() bool {
	if x == nil {
		return false
	}
	return x.Remaining != nil
}

func (x *RateLimitInfo) HasLimit() bool {
	if x == nil {
		return false
	}
	return x.Limit != nil
}

func (x *RateLimitInfo) HasResetTime() bool {
	if x == nil {
		return false
	}
	return x.ResetTime != nil
}

func (x *RateLimitInfo) HasRetryAfter() bool {
	if x == nil {
		return false
	}
	return x.RetryAfter != nil
}

func (x *RateLimitInfo) ClearRemaining() {
	x.Remaining = nil
}

func (x *RateLimitInfo) ClearLimit() {
	x.Limit = nil
}

func (x *RateLimitInfo) ClearResetTime() {
	x.ResetTime = nil
}

func (x *RateLimitInfo) ClearRetryAfter() {
	x.RetryAfter = nil
}

type RateLimitInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Number of requests remaining in the current window
	Remaining *int64
	// Total requests allowed in the current window
	Limit *int64
	// Time when the current rate limit window resets
	ResetTime *timestamppb.Timestamp
	// Duration until the rate limit resets
	RetryAfter *durationpb.Duration
}

func (b0 RateLimitInfo_builder) Build() *RateLimitInfo {
	m0 := &RateLimitInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.Remaining = b.Remaining
	x.Limit = b.Limit
	x.ResetTime = b.ResetTime
	x.RetryAfter = b.RetryAfter
	return m0
}

// Pagination information for list responses
type PaginationInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Current page number (1-based)
	CurrentPage *int32 `protobuf:"varint,1,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	// Number of items per page
	PageSize *int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// Total number of items available
	TotalItems *int64 `protobuf:"varint,3,opt,name=total_items,json=totalItems" json:"total_items,omitempty"`
	// Total number of pages available
	TotalPages *int32 `protobuf:"varint,4,opt,name=total_pages,json=totalPages" json:"total_pages,omitempty"`
	// Whether there is a next page
	HasNext *bool `protobuf:"varint,5,opt,name=has_next,json=hasNext" json:"has_next,omitempty"`
	// Whether there is a previous page
	HasPrevious *bool `protobuf:"varint,6,opt,name=has_previous,json=hasPrevious" json:"has_previous,omitempty"`
	// Token for retrieving the next page
	NextPageToken *string `protobuf:"bytes,7,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	// Token for retrieving the previous page
	PreviousPageToken *string `protobuf:"bytes,8,opt,name=previous_page_token,json=previousPageToken" json:"previous_page_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PaginationInfo) Reset() {
	*x = PaginationInfo{}
	mi := &file_pkg_common_proto_messages_response_metadata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationInfo) ProtoMessage() {}

func (x *PaginationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_messages_response_metadata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PaginationInfo) GetCurrentPage() int32 {
	if x != nil && x.CurrentPage != nil {
		return *x.CurrentPage
	}
	return 0
}

func (x *PaginationInfo) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *PaginationInfo) GetTotalItems() int64 {
	if x != nil && x.TotalItems != nil {
		return *x.TotalItems
	}
	return 0
}

func (x *PaginationInfo) GetTotalPages() int32 {
	if x != nil && x.TotalPages != nil {
		return *x.TotalPages
	}
	return 0
}

func (x *PaginationInfo) GetHasNext() bool {
	if x != nil && x.HasNext != nil {
		return *x.HasNext
	}
	return false
}

func (x *PaginationInfo) GetHasPrevious() bool {
	if x != nil && x.HasPrevious != nil {
		return *x.HasPrevious
	}
	return false
}

func (x *PaginationInfo) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *PaginationInfo) GetPreviousPageToken() string {
	if x != nil && x.PreviousPageToken != nil {
		return *x.PreviousPageToken
	}
	return ""
}

func (x *PaginationInfo) SetCurrentPage(v int32) {
	x.CurrentPage = &v
}

func (x *PaginationInfo) SetPageSize(v int32) {
	x.PageSize = &v
}

func (x *PaginationInfo) SetTotalItems(v int64) {
	x.TotalItems = &v
}

func (x *PaginationInfo) SetTotalPages(v int32) {
	x.TotalPages = &v
}

func (x *PaginationInfo) SetHasNext(v bool) {
	x.HasNext = &v
}

func (x *PaginationInfo) SetHasPrevious(v bool) {
	x.HasPrevious = &v
}

func (x *PaginationInfo) SetNextPageToken(v string) {
	x.NextPageToken = &v
}

func (x *PaginationInfo) SetPreviousPageToken(v string) {
	x.PreviousPageToken = &v
}

func (x *PaginationInfo) HasCurrentPage() bool {
	if x == nil {
		return false
	}
	return x.CurrentPage != nil
}

func (x *PaginationInfo) HasPageSize() bool {
	if x == nil {
		return false
	}
	return x.PageSize != nil
}

func (x *PaginationInfo) HasTotalItems() bool {
	if x == nil {
		return false
	}
	return x.TotalItems != nil
}

func (x *PaginationInfo) HasTotalPages() bool {
	if x == nil {
		return false
	}
	return x.TotalPages != nil
}

func (x *PaginationInfo) HasHasNext() bool {
	if x == nil {
		return false
	}
	return x.HasNext != nil
}

func (x *PaginationInfo) HasHasPrevious() bool {
	if x == nil {
		return false
	}
	return x.HasPrevious != nil
}

func (x *PaginationInfo) HasNextPageToken() bool {
	if x == nil {
		return false
	}
	return x.NextPageToken != nil
}

func (x *PaginationInfo) HasPreviousPageToken() bool {
	if x == nil {
		return false
	}
	return x.PreviousPageToken != nil
}

func (x *PaginationInfo) ClearCurrentPage() {
	x.CurrentPage = nil
}

func (x *PaginationInfo) ClearPageSize() {
	x.PageSize = nil
}

func (x *PaginationInfo) ClearTotalItems() {
	x.TotalItems = nil
}

func (x *PaginationInfo) ClearTotalPages() {
	x.TotalPages = nil
}

func (x *PaginationInfo) ClearHasNext() {
	x.HasNext = nil
}

func (x *PaginationInfo) ClearHasPrevious() {
	x.HasPrevious = nil
}

func (x *PaginationInfo) ClearNextPageToken() {
	x.NextPageToken = nil
}

func (x *PaginationInfo) ClearPreviousPageToken() {
	x.PreviousPageToken = nil
}

type PaginationInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Current page number (1-based)
	CurrentPage *int32
	// Number of items per page
	PageSize *int32
	// Total number of items available
	TotalItems *int64
	// Total number of pages available
	TotalPages *int32
	// Whether there is a next page
	HasNext *bool
	// Whether there is a previous page
	HasPrevious *bool
	// Token for retrieving the next page
	NextPageToken *string
	// Token for retrieving the previous page
	PreviousPageToken *string
}

func (b0 PaginationInfo_builder) Build() *PaginationInfo {
	m0 := &PaginationInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.CurrentPage = b.CurrentPage
	x.PageSize = b.PageSize
	x.TotalItems = b.TotalItems
	x.TotalPages = b.TotalPages
	x.HasNext = b.HasNext
	x.HasPrevious = b.HasPrevious
	x.NextPageToken = b.NextPageToken
	x.PreviousPageToken = b.PreviousPageToken
	return m0
}

var File_pkg_common_proto_messages_response_metadata_proto protoreflect.FileDescriptor

const file_pkg_common_proto_messages_response_metadata_proto_rawDesc = "" +
	"\n" +
	"1pkg/common/proto/messages/response_metadata.proto\x12\x11gcommon.v1.common\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a%pkg/common/proto/messages/error.proto\"\xcd\x04\n" +
	"\x10ResponseMetadata\x12\x19\n" +
	"\btrace_id\x18\x01 \x01(\tR\atraceId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12B\n" +
	"\x0fprocessing_time\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x0eprocessingTime\x12'\n" +
	"\x0fservice_version\x18\x05 \x01(\tR\x0eserviceVersion\x12\x18\n" +
	"\asuccess\x18\x06 \x01(\bR\asuccess\x12.\n" +
	"\x05error\x18\a \x01(\v2\x18.gcommon.v1.common.ErrorR\x05error\x12M\n" +
	"\bmetadata\x18\b \x03(\v21.gcommon.v1.common.ResponseMetadata.MetadataEntryR\bmetadata\x12?\n" +
	"\n" +
	"rate_limit\x18\t \x01(\v2 .gcommon.v1.common.RateLimitInfoR\trateLimit\x12A\n" +
	"\n" +
	"pagination\x18\n" +
	" \x01(\v2!.gcommon.v1.common.PaginationInfoR\n" +
	"pagination\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xba\x01\n" +
	"\rRateLimitInfo\x12\x1c\n" +
	"\tremaining\x18\x01 \x01(\x03R\tremaining\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x03R\x05limit\x129\n" +
	"\n" +
	"reset_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tresetTime\x12:\n" +
	"\vretry_after\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"retryAfter\"\xa8\x02\n" +
	"\x0ePaginationInfo\x12!\n" +
	"\fcurrent_page\x18\x01 \x01(\x05R\vcurrentPage\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1f\n" +
	"\vtotal_items\x18\x03 \x01(\x03R\n" +
	"totalItems\x12\x1f\n" +
	"\vtotal_pages\x18\x04 \x01(\x05R\n" +
	"totalPages\x12\x19\n" +
	"\bhas_next\x18\x05 \x01(\bR\ahasNext\x12!\n" +
	"\fhas_previous\x18\x06 \x01(\bR\vhasPrevious\x12&\n" +
	"\x0fnext_page_token\x18\a \x01(\tR\rnextPageToken\x12.\n" +
	"\x13previous_page_token\x18\b \x01(\tR\x11previousPageTokenB\xd1\x01\n" +
	"\x15com.gcommon.v1.commonB\x15ResponseMetadataProtoP\x01Z3github.com/jdfalk/gcommon/pkg/common/proto;commonpb\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Common\xca\x02\x11Gcommon\\V1\\Common\xe2\x02\x1dGcommon\\V1\\Common\\GPBMetadata\xea\x02\x13Gcommon::V1::Common\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_common_proto_messages_response_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_common_proto_messages_response_metadata_proto_goTypes = []any{
	(*ResponseMetadata)(nil),      // 0: gcommon.v1.common.ResponseMetadata
	(*RateLimitInfo)(nil),         // 1: gcommon.v1.common.RateLimitInfo
	(*PaginationInfo)(nil),        // 2: gcommon.v1.common.PaginationInfo
	nil,                           // 3: gcommon.v1.common.ResponseMetadata.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 5: google.protobuf.Duration
	(*Error)(nil),                 // 6: gcommon.v1.common.Error
}
var file_pkg_common_proto_messages_response_metadata_proto_depIdxs = []int32{
	4, // 0: gcommon.v1.common.ResponseMetadata.timestamp:type_name -> google.protobuf.Timestamp
	5, // 1: gcommon.v1.common.ResponseMetadata.processing_time:type_name -> google.protobuf.Duration
	6, // 2: gcommon.v1.common.ResponseMetadata.error:type_name -> gcommon.v1.common.Error
	3, // 3: gcommon.v1.common.ResponseMetadata.metadata:type_name -> gcommon.v1.common.ResponseMetadata.MetadataEntry
	1, // 4: gcommon.v1.common.ResponseMetadata.rate_limit:type_name -> gcommon.v1.common.RateLimitInfo
	2, // 5: gcommon.v1.common.ResponseMetadata.pagination:type_name -> gcommon.v1.common.PaginationInfo
	4, // 6: gcommon.v1.common.RateLimitInfo.reset_time:type_name -> google.protobuf.Timestamp
	5, // 7: gcommon.v1.common.RateLimitInfo.retry_after:type_name -> google.protobuf.Duration
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_common_proto_messages_response_metadata_proto_init() }
func file_pkg_common_proto_messages_response_metadata_proto_init() {
	if File_pkg_common_proto_messages_response_metadata_proto != nil {
		return
	}
	file_pkg_common_proto_messages_error_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_common_proto_messages_response_metadata_proto_rawDesc), len(file_pkg_common_proto_messages_response_metadata_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_common_proto_messages_response_metadata_proto_goTypes,
		DependencyIndexes: file_pkg_common_proto_messages_response_metadata_proto_depIdxs,
		MessageInfos:      file_pkg_common_proto_messages_response_metadata_proto_msgTypes,
	}.Build()
	File_pkg_common_proto_messages_response_metadata_proto = out.File
	file_pkg_common_proto_messages_response_metadata_proto_goTypes = nil
	file_pkg_common_proto_messages_response_metadata_proto_depIdxs = nil
}
