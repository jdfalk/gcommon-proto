// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/common/proto/service_version.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Service version information for deployment tracking and compatibility.
// Provides comprehensive build and version metadata for service
// identification, debugging, and compatibility checking.
type ServiceVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Service name identifier
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Semantic version string (e.g., "1.2.3")
	Version *string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// Git commit hash used for the build
	Commit *string `protobuf:"bytes,3,opt,name=commit" json:"commit,omitempty"`
	// Timestamp when the service was built
	BuildTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=build_time,json=buildTime" json:"build_time,omitempty"`
	// Go version used for compilation
	GoVersion     *string `protobuf:"bytes,5,opt,name=go_version,json=goVersion" json:"go_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceVersion) Reset() {
	*x = ServiceVersion{}
	mi := &file_pkg_common_proto_service_version_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceVersion) ProtoMessage() {}

func (x *ServiceVersion) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_service_version_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceVersion.ProtoReflect.Descriptor instead.
func (*ServiceVersion) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_service_version_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceVersion) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ServiceVersion) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ServiceVersion) GetCommit() string {
	if x != nil && x.Commit != nil {
		return *x.Commit
	}
	return ""
}

func (x *ServiceVersion) GetBuildTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BuildTime
	}
	return nil
}

func (x *ServiceVersion) GetGoVersion() string {
	if x != nil && x.GoVersion != nil {
		return *x.GoVersion
	}
	return ""
}

var File_pkg_common_proto_service_version_proto protoreflect.FileDescriptor

const file_pkg_common_proto_service_version_proto_rawDesc = "" +
	"\n" +
	"&pkg/common/proto/service_version.proto\x12\x11gcommon.v1.common\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb0\x01\n" +
	"\x0eServiceVersion\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x16\n" +
	"\x06commit\x18\x03 \x01(\tR\x06commit\x129\n" +
	"\n" +
	"build_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tbuildTime\x12\x1d\n" +
	"\n" +
	"go_version\x18\x05 \x01(\tR\tgoVersionB\xbe\x01\n" +
	"\x15com.gcommon.v1.commonB\x13ServiceVersionProtoP\x01Z*github.com/jdfalk/gcommon/pkg/common/proto\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Common\xca\x02\x11Gcommon\\V1\\Common\xe2\x02\x1dGcommon\\V1\\Common\\GPBMetadata\xea\x02\x13Gcommon::V1::Commonb\beditionsp\xe8\a"

var (
	file_pkg_common_proto_service_version_proto_rawDescOnce sync.Once
	file_pkg_common_proto_service_version_proto_rawDescData []byte
)

func file_pkg_common_proto_service_version_proto_rawDescGZIP() []byte {
	file_pkg_common_proto_service_version_proto_rawDescOnce.Do(func() {
		file_pkg_common_proto_service_version_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_common_proto_service_version_proto_rawDesc), len(file_pkg_common_proto_service_version_proto_rawDesc)))
	})
	return file_pkg_common_proto_service_version_proto_rawDescData
}

var file_pkg_common_proto_service_version_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_common_proto_service_version_proto_goTypes = []any{
	(*ServiceVersion)(nil),        // 0: gcommon.v1.common.ServiceVersion
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_pkg_common_proto_service_version_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.common.ServiceVersion.build_time:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_common_proto_service_version_proto_init() }
func file_pkg_common_proto_service_version_proto_init() {
	if File_pkg_common_proto_service_version_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_common_proto_service_version_proto_rawDesc), len(file_pkg_common_proto_service_version_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_common_proto_service_version_proto_goTypes,
		DependencyIndexes: file_pkg_common_proto_service_version_proto_depIdxs,
		MessageInfos:      file_pkg_common_proto_service_version_proto_msgTypes,
	}.Build()
	File_pkg_common_proto_service_version_proto = out.File
	file_pkg_common_proto_service_version_proto_goTypes = nil
	file_pkg_common_proto_service_version_proto_depIdxs = nil
}
