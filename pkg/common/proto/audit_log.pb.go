// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/common/proto/audit_log.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Audit log entry for tracking operations and security events.
// Provides comprehensive audit trail with user identification,
// action details, and contextual metadata for compliance and debugging.
type AuditLog struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique audit log entry identifier
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// User identifier who performed the action
	UserId *string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// Action or operation that was performed
	Action *string `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	// Resource that was acted upon
	Resource *ResourceReference `protobuf:"bytes,4,opt,name=resource" json:"resource,omitempty"`
	// Timestamp when the action occurred
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	// Source IP address of the request
	SourceIp *string `protobuf:"bytes,6,opt,name=source_ip,json=sourceIp" json:"source_ip,omitempty"`
	// User agent string from the client
	UserAgent *string `protobuf:"bytes,7,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// Additional contextual metadata about the action
	Metadata map[string]string `protobuf:"bytes,8,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Result of the action (success, failure, partial)
	Result *AuditResult `protobuf:"varint,9,opt,name=result,enum=gcommon.v1.common.AuditResult" json:"result,omitempty"`
	// Session identifier if applicable
	SessionId     *string `protobuf:"bytes,10,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditLog) Reset() {
	*x = AuditLog{}
	mi := &file_pkg_common_proto_audit_log_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLog) ProtoMessage() {}

func (x *AuditLog) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_audit_log_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLog.ProtoReflect.Descriptor instead.
func (*AuditLog) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_audit_log_proto_rawDescGZIP(), []int{0}
}

func (x *AuditLog) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *AuditLog) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *AuditLog) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *AuditLog) GetResource() *ResourceReference {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *AuditLog) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AuditLog) GetSourceIp() string {
	if x != nil && x.SourceIp != nil {
		return *x.SourceIp
	}
	return ""
}

func (x *AuditLog) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *AuditLog) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AuditLog) GetResult() AuditResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return AuditResult_AUDIT_RESULT_UNSPECIFIED
}

func (x *AuditLog) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

var File_pkg_common_proto_audit_log_proto protoreflect.FileDescriptor

const file_pkg_common_proto_audit_log_proto_rawDesc = "" +
	"\n" +
	" pkg/common/proto/audit_log.proto\x12\x11gcommon.v1.common\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#pkg/common/proto/audit_result.proto\x1a)pkg/common/proto/resource_reference.proto\"\xde\x03\n" +
	"\bAuditLog\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12@\n" +
	"\bresource\x18\x04 \x01(\v2$.gcommon.v1.common.ResourceReferenceR\bresource\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tsource_ip\x18\x06 \x01(\tR\bsourceIp\x12\x1d\n" +
	"\n" +
	"user_agent\x18\a \x01(\tR\tuserAgent\x12E\n" +
	"\bmetadata\x18\b \x03(\v2).gcommon.v1.common.AuditLog.MetadataEntryR\bmetadata\x126\n" +
	"\x06result\x18\t \x01(\x0e2\x1e.gcommon.v1.common.AuditResultR\x06result\x12\x1d\n" +
	"\n" +
	"session_id\x18\n" +
	" \x01(\tR\tsessionId\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xb8\x01\n" +
	"\x15com.gcommon.v1.commonB\rAuditLogProtoP\x01Z*github.com/jdfalk/gcommon/pkg/common/proto\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Common\xca\x02\x11Gcommon\\V1\\Common\xe2\x02\x1dGcommon\\V1\\Common\\GPBMetadata\xea\x02\x13Gcommon::V1::Commonb\beditionsp\xe8\a"

var (
	file_pkg_common_proto_audit_log_proto_rawDescOnce sync.Once
	file_pkg_common_proto_audit_log_proto_rawDescData []byte
)

func file_pkg_common_proto_audit_log_proto_rawDescGZIP() []byte {
	file_pkg_common_proto_audit_log_proto_rawDescOnce.Do(func() {
		file_pkg_common_proto_audit_log_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_common_proto_audit_log_proto_rawDesc), len(file_pkg_common_proto_audit_log_proto_rawDesc)))
	})
	return file_pkg_common_proto_audit_log_proto_rawDescData
}

var file_pkg_common_proto_audit_log_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_common_proto_audit_log_proto_goTypes = []any{
	(*AuditLog)(nil),              // 0: gcommon.v1.common.AuditLog
	nil,                           // 1: gcommon.v1.common.AuditLog.MetadataEntry
	(*ResourceReference)(nil),     // 2: gcommon.v1.common.ResourceReference
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(AuditResult)(0),              // 4: gcommon.v1.common.AuditResult
}
var file_pkg_common_proto_audit_log_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.common.AuditLog.resource:type_name -> gcommon.v1.common.ResourceReference
	3, // 1: gcommon.v1.common.AuditLog.timestamp:type_name -> google.protobuf.Timestamp
	1, // 2: gcommon.v1.common.AuditLog.metadata:type_name -> gcommon.v1.common.AuditLog.MetadataEntry
	4, // 3: gcommon.v1.common.AuditLog.result:type_name -> gcommon.v1.common.AuditResult
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_common_proto_audit_log_proto_init() }
func file_pkg_common_proto_audit_log_proto_init() {
	if File_pkg_common_proto_audit_log_proto != nil {
		return
	}
	file_pkg_common_proto_audit_result_proto_init()
	file_pkg_common_proto_resource_reference_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_common_proto_audit_log_proto_rawDesc), len(file_pkg_common_proto_audit_log_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_common_proto_audit_log_proto_goTypes,
		DependencyIndexes: file_pkg_common_proto_audit_log_proto_depIdxs,
		MessageInfos:      file_pkg_common_proto_audit_log_proto_msgTypes,
	}.Build()
	File_pkg_common_proto_audit_log_proto = out.File
	file_pkg_common_proto_audit_log_proto_goTypes = nil
	file_pkg_common_proto_audit_log_proto_depIdxs = nil
}
