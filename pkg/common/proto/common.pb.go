// file: pkg/common/proto/common.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: common.proto

package commonpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Standardized error codes following gRPC conventions
type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_UNSPECIFIED         ErrorCode = 0
	ErrorCode_ERROR_CODE_INVALID_ARGUMENT    ErrorCode = 1
	ErrorCode_ERROR_CODE_NOT_FOUND           ErrorCode = 2
	ErrorCode_ERROR_CODE_ALREADY_EXISTS      ErrorCode = 3
	ErrorCode_ERROR_CODE_PERMISSION_DENIED   ErrorCode = 4
	ErrorCode_ERROR_CODE_UNAUTHENTICATED     ErrorCode = 5
	ErrorCode_ERROR_CODE_INTERNAL            ErrorCode = 6
	ErrorCode_ERROR_CODE_UNAVAILABLE         ErrorCode = 7
	ErrorCode_ERROR_CODE_TIMEOUT             ErrorCode = 8
	ErrorCode_ERROR_CODE_RESOURCE_EXHAUSTED  ErrorCode = 9
	ErrorCode_ERROR_CODE_FAILED_PRECONDITION ErrorCode = 10
	ErrorCode_ERROR_CODE_ABORTED             ErrorCode = 11
	ErrorCode_ERROR_CODE_OUT_OF_RANGE        ErrorCode = 12
	ErrorCode_ERROR_CODE_UNIMPLEMENTED       ErrorCode = 13
	ErrorCode_ERROR_CODE_DATA_LOSS           ErrorCode = 14
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:  "ERROR_CODE_UNSPECIFIED",
		1:  "ERROR_CODE_INVALID_ARGUMENT",
		2:  "ERROR_CODE_NOT_FOUND",
		3:  "ERROR_CODE_ALREADY_EXISTS",
		4:  "ERROR_CODE_PERMISSION_DENIED",
		5:  "ERROR_CODE_UNAUTHENTICATED",
		6:  "ERROR_CODE_INTERNAL",
		7:  "ERROR_CODE_UNAVAILABLE",
		8:  "ERROR_CODE_TIMEOUT",
		9:  "ERROR_CODE_RESOURCE_EXHAUSTED",
		10: "ERROR_CODE_FAILED_PRECONDITION",
		11: "ERROR_CODE_ABORTED",
		12: "ERROR_CODE_OUT_OF_RANGE",
		13: "ERROR_CODE_UNIMPLEMENTED",
		14: "ERROR_CODE_DATA_LOSS",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_UNSPECIFIED":         0,
		"ERROR_CODE_INVALID_ARGUMENT":    1,
		"ERROR_CODE_NOT_FOUND":           2,
		"ERROR_CODE_ALREADY_EXISTS":      3,
		"ERROR_CODE_PERMISSION_DENIED":   4,
		"ERROR_CODE_UNAUTHENTICATED":     5,
		"ERROR_CODE_INTERNAL":            6,
		"ERROR_CODE_UNAVAILABLE":         7,
		"ERROR_CODE_TIMEOUT":             8,
		"ERROR_CODE_RESOURCE_EXHAUSTED":  9,
		"ERROR_CODE_FAILED_PRECONDITION": 10,
		"ERROR_CODE_ABORTED":             11,
		"ERROR_CODE_OUT_OF_RANGE":        12,
		"ERROR_CODE_UNIMPLEMENTED":       13,
		"ERROR_CODE_DATA_LOSS":           14,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

// Sort direction enumeration
type SortDirection int32

const (
	SortDirection_SORT_DIRECTION_UNSPECIFIED SortDirection = 0
	SortDirection_SORT_DIRECTION_ASC         SortDirection = 1
	SortDirection_SORT_DIRECTION_DESC        SortDirection = 2
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "SORT_DIRECTION_UNSPECIFIED",
		1: "SORT_DIRECTION_ASC",
		2: "SORT_DIRECTION_DESC",
	}
	SortDirection_value = map[string]int32{
		"SORT_DIRECTION_UNSPECIFIED": 0,
		"SORT_DIRECTION_ASC":         1,
		"SORT_DIRECTION_DESC":        2,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

// Filter operation types
type FilterOperation int32

const (
	FilterOperation_FILTER_OPERATION_UNSPECIFIED           FilterOperation = 0
	FilterOperation_FILTER_OPERATION_EQUALS                FilterOperation = 1
	FilterOperation_FILTER_OPERATION_NOT_EQUALS            FilterOperation = 2
	FilterOperation_FILTER_OPERATION_GREATER_THAN          FilterOperation = 3
	FilterOperation_FILTER_OPERATION_LESS_THAN             FilterOperation = 4
	FilterOperation_FILTER_OPERATION_GREATER_THAN_OR_EQUAL FilterOperation = 5
	FilterOperation_FILTER_OPERATION_LESS_THAN_OR_EQUAL    FilterOperation = 6
	FilterOperation_FILTER_OPERATION_CONTAINS              FilterOperation = 7
	FilterOperation_FILTER_OPERATION_STARTS_WITH           FilterOperation = 8
	FilterOperation_FILTER_OPERATION_ENDS_WITH             FilterOperation = 9
	FilterOperation_FILTER_OPERATION_IN                    FilterOperation = 10
	FilterOperation_FILTER_OPERATION_NOT_IN                FilterOperation = 11
)

// Enum value maps for FilterOperation.
var (
	FilterOperation_name = map[int32]string{
		0:  "FILTER_OPERATION_UNSPECIFIED",
		1:  "FILTER_OPERATION_EQUALS",
		2:  "FILTER_OPERATION_NOT_EQUALS",
		3:  "FILTER_OPERATION_GREATER_THAN",
		4:  "FILTER_OPERATION_LESS_THAN",
		5:  "FILTER_OPERATION_GREATER_THAN_OR_EQUAL",
		6:  "FILTER_OPERATION_LESS_THAN_OR_EQUAL",
		7:  "FILTER_OPERATION_CONTAINS",
		8:  "FILTER_OPERATION_STARTS_WITH",
		9:  "FILTER_OPERATION_ENDS_WITH",
		10: "FILTER_OPERATION_IN",
		11: "FILTER_OPERATION_NOT_IN",
	}
	FilterOperation_value = map[string]int32{
		"FILTER_OPERATION_UNSPECIFIED":           0,
		"FILTER_OPERATION_EQUALS":                1,
		"FILTER_OPERATION_NOT_EQUALS":            2,
		"FILTER_OPERATION_GREATER_THAN":          3,
		"FILTER_OPERATION_LESS_THAN":             4,
		"FILTER_OPERATION_GREATER_THAN_OR_EQUAL": 5,
		"FILTER_OPERATION_LESS_THAN_OR_EQUAL":    6,
		"FILTER_OPERATION_CONTAINS":              7,
		"FILTER_OPERATION_STARTS_WITH":           8,
		"FILTER_OPERATION_ENDS_WITH":             9,
		"FILTER_OPERATION_IN":                    10,
		"FILTER_OPERATION_NOT_IN":                11,
	}
)

func (x FilterOperation) Enum() *FilterOperation {
	p := new(FilterOperation)
	*p = x
	return p
}

func (x FilterOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (FilterOperation) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x FilterOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterOperation.Descriptor instead.
func (FilterOperation) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

// Common health status used across modules
type HealthStatus int32

const (
	HealthStatus_HEALTH_STATUS_UNSPECIFIED HealthStatus = 0
	HealthStatus_HEALTH_STATUS_HEALTHY     HealthStatus = 1
	HealthStatus_HEALTH_STATUS_UNHEALTHY   HealthStatus = 2
	HealthStatus_HEALTH_STATUS_DEGRADED    HealthStatus = 3
	HealthStatus_HEALTH_STATUS_STARTING    HealthStatus = 4
	HealthStatus_HEALTH_STATUS_STOPPING    HealthStatus = 5
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "HEALTH_STATUS_UNSPECIFIED",
		1: "HEALTH_STATUS_HEALTHY",
		2: "HEALTH_STATUS_UNHEALTHY",
		3: "HEALTH_STATUS_DEGRADED",
		4: "HEALTH_STATUS_STARTING",
		5: "HEALTH_STATUS_STOPPING",
	}
	HealthStatus_value = map[string]int32{
		"HEALTH_STATUS_UNSPECIFIED": 0,
		"HEALTH_STATUS_HEALTHY":     1,
		"HEALTH_STATUS_UNHEALTHY":   2,
		"HEALTH_STATUS_DEGRADED":    3,
		"HEALTH_STATUS_STARTING":    4,
		"HEALTH_STATUS_STOPPING":    5,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus.Descriptor instead.
func (HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

// Common resource status
type ResourceStatus int32

const (
	ResourceStatus_RESOURCE_STATUS_UNSPECIFIED ResourceStatus = 0
	ResourceStatus_RESOURCE_STATUS_ACTIVE      ResourceStatus = 1
	ResourceStatus_RESOURCE_STATUS_INACTIVE    ResourceStatus = 2
	ResourceStatus_RESOURCE_STATUS_PENDING     ResourceStatus = 3
	ResourceStatus_RESOURCE_STATUS_DELETED     ResourceStatus = 4
	ResourceStatus_RESOURCE_STATUS_ERROR       ResourceStatus = 5
)

// Enum value maps for ResourceStatus.
var (
	ResourceStatus_name = map[int32]string{
		0: "RESOURCE_STATUS_UNSPECIFIED",
		1: "RESOURCE_STATUS_ACTIVE",
		2: "RESOURCE_STATUS_INACTIVE",
		3: "RESOURCE_STATUS_PENDING",
		4: "RESOURCE_STATUS_DELETED",
		5: "RESOURCE_STATUS_ERROR",
	}
	ResourceStatus_value = map[string]int32{
		"RESOURCE_STATUS_UNSPECIFIED": 0,
		"RESOURCE_STATUS_ACTIVE":      1,
		"RESOURCE_STATUS_INACTIVE":    2,
		"RESOURCE_STATUS_PENDING":     3,
		"RESOURCE_STATUS_DELETED":     4,
		"RESOURCE_STATUS_ERROR":       5,
	}
)

func (x ResourceStatus) Enum() *ResourceStatus {
	p := new(ResourceStatus)
	*p = x
	return p
}

func (x ResourceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[4].Descriptor()
}

func (ResourceStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[4]
}

func (x ResourceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceStatus.Descriptor instead.
func (ResourceStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

// Value type enumeration
type ValueType int32

const (
	ValueType_VALUE_TYPE_UNSPECIFIED ValueType = 0
	ValueType_VALUE_TYPE_STRING      ValueType = 1
	ValueType_VALUE_TYPE_INT         ValueType = 2
	ValueType_VALUE_TYPE_DOUBLE      ValueType = 3
	ValueType_VALUE_TYPE_BOOL        ValueType = 4
	ValueType_VALUE_TYPE_BYTES       ValueType = 5
	ValueType_VALUE_TYPE_JSON        ValueType = 6
	ValueType_VALUE_TYPE_YAML        ValueType = 7
)

// Enum value maps for ValueType.
var (
	ValueType_name = map[int32]string{
		0: "VALUE_TYPE_UNSPECIFIED",
		1: "VALUE_TYPE_STRING",
		2: "VALUE_TYPE_INT",
		3: "VALUE_TYPE_DOUBLE",
		4: "VALUE_TYPE_BOOL",
		5: "VALUE_TYPE_BYTES",
		6: "VALUE_TYPE_JSON",
		7: "VALUE_TYPE_YAML",
	}
	ValueType_value = map[string]int32{
		"VALUE_TYPE_UNSPECIFIED": 0,
		"VALUE_TYPE_STRING":      1,
		"VALUE_TYPE_INT":         2,
		"VALUE_TYPE_DOUBLE":      3,
		"VALUE_TYPE_BOOL":        4,
		"VALUE_TYPE_BYTES":       5,
		"VALUE_TYPE_JSON":        6,
		"VALUE_TYPE_YAML":        7,
	}
)

func (x ValueType) Enum() *ValueType {
	p := new(ValueType)
	*p = x
	return p
}

func (x ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[5].Descriptor()
}

func (ValueType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[5]
}

func (x ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueType.Descriptor instead.
func (ValueType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

// Audit result enumeration
type AuditResult int32

const (
	AuditResult_AUDIT_RESULT_UNSPECIFIED AuditResult = 0
	AuditResult_AUDIT_RESULT_SUCCESS     AuditResult = 1
	AuditResult_AUDIT_RESULT_FAILURE     AuditResult = 2
	AuditResult_AUDIT_RESULT_PARTIAL     AuditResult = 3
)

// Enum value maps for AuditResult.
var (
	AuditResult_name = map[int32]string{
		0: "AUDIT_RESULT_UNSPECIFIED",
		1: "AUDIT_RESULT_SUCCESS",
		2: "AUDIT_RESULT_FAILURE",
		3: "AUDIT_RESULT_PARTIAL",
	}
	AuditResult_value = map[string]int32{
		"AUDIT_RESULT_UNSPECIFIED": 0,
		"AUDIT_RESULT_SUCCESS":     1,
		"AUDIT_RESULT_FAILURE":     2,
		"AUDIT_RESULT_PARTIAL":     3,
	}
)

func (x AuditResult) Enum() *AuditResult {
	p := new(AuditResult)
	*p = x
	return p
}

func (x AuditResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditResult) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[6].Descriptor()
}

func (AuditResult) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[6]
}

func (x AuditResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditResult.Descriptor instead.
func (AuditResult) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

// Subscription status enumeration
type SubscriptionStatus int32

const (
	SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED SubscriptionStatus = 0
	SubscriptionStatus_SUBSCRIPTION_STATUS_ACTIVE      SubscriptionStatus = 1
	SubscriptionStatus_SUBSCRIPTION_STATUS_PAUSED      SubscriptionStatus = 2
	SubscriptionStatus_SUBSCRIPTION_STATUS_CANCELLED   SubscriptionStatus = 3
	SubscriptionStatus_SUBSCRIPTION_STATUS_ERROR       SubscriptionStatus = 4
)

// Enum value maps for SubscriptionStatus.
var (
	SubscriptionStatus_name = map[int32]string{
		0: "SUBSCRIPTION_STATUS_UNSPECIFIED",
		1: "SUBSCRIPTION_STATUS_ACTIVE",
		2: "SUBSCRIPTION_STATUS_PAUSED",
		3: "SUBSCRIPTION_STATUS_CANCELLED",
		4: "SUBSCRIPTION_STATUS_ERROR",
	}
	SubscriptionStatus_value = map[string]int32{
		"SUBSCRIPTION_STATUS_UNSPECIFIED": 0,
		"SUBSCRIPTION_STATUS_ACTIVE":      1,
		"SUBSCRIPTION_STATUS_PAUSED":      2,
		"SUBSCRIPTION_STATUS_CANCELLED":   3,
		"SUBSCRIPTION_STATUS_ERROR":       4,
	}
)

func (x SubscriptionStatus) Enum() *SubscriptionStatus {
	p := new(SubscriptionStatus)
	*p = x
	return p
}

func (x SubscriptionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[7].Descriptor()
}

func (SubscriptionStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[7]
}

func (x SubscriptionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionStatus.Descriptor instead.
func (SubscriptionStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

// Acknowledgment mode enumeration
type AckMode int32

const (
	AckMode_ACK_MODE_UNSPECIFIED AckMode = 0
	AckMode_ACK_MODE_MANUAL      AckMode = 1
	AckMode_ACK_MODE_AUTO        AckMode = 2
	AckMode_ACK_MODE_CLIENT      AckMode = 3
)

// Enum value maps for AckMode.
var (
	AckMode_name = map[int32]string{
		0: "ACK_MODE_UNSPECIFIED",
		1: "ACK_MODE_MANUAL",
		2: "ACK_MODE_AUTO",
		3: "ACK_MODE_CLIENT",
	}
	AckMode_value = map[string]int32{
		"ACK_MODE_UNSPECIFIED": 0,
		"ACK_MODE_MANUAL":      1,
		"ACK_MODE_AUTO":        2,
		"ACK_MODE_CLIENT":      3,
	}
)

func (x AckMode) Enum() *AckMode {
	p := new(AckMode)
	*p = x
	return p
}

func (x AckMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AckMode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[8].Descriptor()
}

func (AckMode) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[8]
}

func (x AckMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AckMode.Descriptor instead.
func (AckMode) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

// Cache expiration policy
type ExpirationPolicy int32

const (
	ExpirationPolicy_EXPIRATION_POLICY_UNSPECIFIED ExpirationPolicy = 0
	ExpirationPolicy_EXPIRATION_POLICY_TTL         ExpirationPolicy = 1
	ExpirationPolicy_EXPIRATION_POLICY_IDLE        ExpirationPolicy = 2
	ExpirationPolicy_EXPIRATION_POLICY_WRITE       ExpirationPolicy = 3
	ExpirationPolicy_EXPIRATION_POLICY_NEVER       ExpirationPolicy = 4
)

// Enum value maps for ExpirationPolicy.
var (
	ExpirationPolicy_name = map[int32]string{
		0: "EXPIRATION_POLICY_UNSPECIFIED",
		1: "EXPIRATION_POLICY_TTL",
		2: "EXPIRATION_POLICY_IDLE",
		3: "EXPIRATION_POLICY_WRITE",
		4: "EXPIRATION_POLICY_NEVER",
	}
	ExpirationPolicy_value = map[string]int32{
		"EXPIRATION_POLICY_UNSPECIFIED": 0,
		"EXPIRATION_POLICY_TTL":         1,
		"EXPIRATION_POLICY_IDLE":        2,
		"EXPIRATION_POLICY_WRITE":       3,
		"EXPIRATION_POLICY_NEVER":       4,
	}
)

func (x ExpirationPolicy) Enum() *ExpirationPolicy {
	p := new(ExpirationPolicy)
	*p = x
	return p
}

func (x ExpirationPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExpirationPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[9].Descriptor()
}

func (ExpirationPolicy) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[9]
}

func (x ExpirationPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExpirationPolicy.Descriptor instead.
func (ExpirationPolicy) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

// Cache eviction policy
type EvictionPolicy int32

const (
	EvictionPolicy_EVICTION_POLICY_UNSPECIFIED EvictionPolicy = 0
	EvictionPolicy_EVICTION_POLICY_LRU         EvictionPolicy = 1
	EvictionPolicy_EVICTION_POLICY_LFU         EvictionPolicy = 2
	EvictionPolicy_EVICTION_POLICY_FIFO        EvictionPolicy = 3
	EvictionPolicy_EVICTION_POLICY_RANDOM      EvictionPolicy = 4
)

// Enum value maps for EvictionPolicy.
var (
	EvictionPolicy_name = map[int32]string{
		0: "EVICTION_POLICY_UNSPECIFIED",
		1: "EVICTION_POLICY_LRU",
		2: "EVICTION_POLICY_LFU",
		3: "EVICTION_POLICY_FIFO",
		4: "EVICTION_POLICY_RANDOM",
	}
	EvictionPolicy_value = map[string]int32{
		"EVICTION_POLICY_UNSPECIFIED": 0,
		"EVICTION_POLICY_LRU":         1,
		"EVICTION_POLICY_LFU":         2,
		"EVICTION_POLICY_FIFO":        3,
		"EVICTION_POLICY_RANDOM":      4,
	}
)

func (x EvictionPolicy) Enum() *EvictionPolicy {
	p := new(EvictionPolicy)
	*p = x
	return p
}

func (x EvictionPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvictionPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[10].Descriptor()
}

func (EvictionPolicy) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[10]
}

func (x EvictionPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvictionPolicy.Descriptor instead.
func (EvictionPolicy) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

// Circuit breaker state enumeration
type CircuitBreakerState int32

const (
	CircuitBreakerState_CIRCUIT_BREAKER_STATE_UNSPECIFIED CircuitBreakerState = 0
	CircuitBreakerState_CIRCUIT_BREAKER_STATE_CLOSED      CircuitBreakerState = 1
	CircuitBreakerState_CIRCUIT_BREAKER_STATE_OPEN        CircuitBreakerState = 2
	CircuitBreakerState_CIRCUIT_BREAKER_STATE_HALF_OPEN   CircuitBreakerState = 3
)

// Enum value maps for CircuitBreakerState.
var (
	CircuitBreakerState_name = map[int32]string{
		0: "CIRCUIT_BREAKER_STATE_UNSPECIFIED",
		1: "CIRCUIT_BREAKER_STATE_CLOSED",
		2: "CIRCUIT_BREAKER_STATE_OPEN",
		3: "CIRCUIT_BREAKER_STATE_HALF_OPEN",
	}
	CircuitBreakerState_value = map[string]int32{
		"CIRCUIT_BREAKER_STATE_UNSPECIFIED": 0,
		"CIRCUIT_BREAKER_STATE_CLOSED":      1,
		"CIRCUIT_BREAKER_STATE_OPEN":        2,
		"CIRCUIT_BREAKER_STATE_HALF_OPEN":   3,
	}
)

func (x CircuitBreakerState) Enum() *CircuitBreakerState {
	p := new(CircuitBreakerState)
	*p = x
	return p
}

func (x CircuitBreakerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CircuitBreakerState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[11].Descriptor()
}

func (CircuitBreakerState) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[11]
}

func (x CircuitBreakerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CircuitBreakerState.Descriptor instead.
func (CircuitBreakerState) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

// Common error handling across all GCommon modules
type Error struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Standardized error code for programmatic handling
	Code *ErrorCode `protobuf:"varint,1,opt,name=code,enum=gcommon.common.v1.ErrorCode" json:"code,omitempty"`
	// Human-readable error message
	Message *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// Additional error details for debugging
	Details map[string]string `protobuf:"bytes,3,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Trace ID for request correlation
	TraceId *string `protobuf:"bytes,4,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	// Timestamp when error occurred
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	// Source module that generated the error
	Source        *string `protobuf:"bytes,6,opt,name=source" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() ErrorCode {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (x *Error) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *Error) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Error) GetTraceId() string {
	if x != nil && x.TraceId != nil {
		return *x.TraceId
	}
	return ""
}

func (x *Error) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Error) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

// Common pagination parameters for list operations
type Pagination struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum number of items to return (0 means use default)
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// Token for the next page (empty for first page)
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	// Optional: specific page number (alternative to page_token)
	PageNumber    *int32 `protobuf:"varint,3,opt,name=page_number,json=pageNumber" json:"page_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *Pagination) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *Pagination) GetPageNumber() int32 {
	if x != nil && x.PageNumber != nil {
		return *x.PageNumber
	}
	return 0
}

// Standard pagination response metadata
type PaginatedResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Token for the next page (empty if no more pages)
	NextPageToken *string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	// Token for the previous page (empty if first page)
	PrevPageToken *string `protobuf:"bytes,2,opt,name=prev_page_token,json=prevPageToken" json:"prev_page_token,omitempty"`
	// Total number of items across all pages
	TotalCount *int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	// Current page number
	CurrentPage *int32 `protobuf:"varint,4,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	// Total number of pages
	TotalPages *int32 `protobuf:"varint,5,opt,name=total_pages,json=totalPages" json:"total_pages,omitempty"`
	// Number of items in current page
	PageSize      *int32 `protobuf:"varint,6,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaginatedResponse) Reset() {
	*x = PaginatedResponse{}
	mi := &file_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedResponse) ProtoMessage() {}

func (x *PaginatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedResponse.ProtoReflect.Descriptor instead.
func (*PaginatedResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *PaginatedResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *PaginatedResponse) GetPrevPageToken() string {
	if x != nil && x.PrevPageToken != nil {
		return *x.PrevPageToken
	}
	return ""
}

func (x *PaginatedResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

func (x *PaginatedResponse) GetCurrentPage() int32 {
	if x != nil && x.CurrentPage != nil {
		return *x.CurrentPage
	}
	return 0
}

func (x *PaginatedResponse) GetTotalPages() int32 {
	if x != nil && x.TotalPages != nil {
		return *x.TotalPages
	}
	return 0
}

func (x *PaginatedResponse) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

// Common request metadata for observability and security
type RequestMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Distributed tracing ID
	TraceId *string `protobuf:"bytes,1,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	// User ID making the request
	UserId *string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// Correlation ID for request grouping
	CorrelationId *string `protobuf:"bytes,3,opt,name=correlation_id,json=correlationId" json:"correlation_id,omitempty"`
	// Request headers
	Headers map[string]string `protobuf:"bytes,4,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Client information
	Client *ClientInfo `protobuf:"bytes,5,opt,name=client" json:"client,omitempty"`
	// Request timestamp
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp" json:"timestamp,omitempty"`
	// Session ID if applicable
	SessionId     *string `protobuf:"bytes,7,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestMetadata) Reset() {
	*x = RequestMetadata{}
	mi := &file_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMetadata) ProtoMessage() {}

func (x *RequestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMetadata.ProtoReflect.Descriptor instead.
func (*RequestMetadata) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *RequestMetadata) GetTraceId() string {
	if x != nil && x.TraceId != nil {
		return *x.TraceId
	}
	return ""
}

func (x *RequestMetadata) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *RequestMetadata) GetCorrelationId() string {
	if x != nil && x.CorrelationId != nil {
		return *x.CorrelationId
	}
	return ""
}

func (x *RequestMetadata) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *RequestMetadata) GetClient() *ClientInfo {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *RequestMetadata) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *RequestMetadata) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

// Client information for requests
type ClientInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Client application name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Client version
	Version *string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// Client IP address
	IpAddress *string `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	// User agent string
	UserAgent *string `protobuf:"bytes,4,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// Platform information
	Platform      *string `protobuf:"bytes,5,opt,name=platform" json:"platform,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	mi := &file_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *ClientInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ClientInfo) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ClientInfo) GetIpAddress() string {
	if x != nil && x.IpAddress != nil {
		return *x.IpAddress
	}
	return ""
}

func (x *ClientInfo) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *ClientInfo) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

// Common time range for filtering operations
type TimeRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Start time (inclusive)
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	// End time (exclusive)
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	mi := &file_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *TimeRange) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TimeRange) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// Common sorting parameters
type SortOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field to sort by
	Field *string `protobuf:"bytes,1,opt,name=field" json:"field,omitempty"`
	// Sort direction
	Direction     *SortDirection `protobuf:"varint,2,opt,name=direction,enum=gcommon.common.v1.SortDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortOptions) Reset() {
	*x = SortOptions{}
	mi := &file_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOptions) ProtoMessage() {}

func (x *SortOptions) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOptions.ProtoReflect.Descriptor instead.
func (*SortOptions) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *SortOptions) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *SortOptions) GetDirection() SortDirection {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return SortDirection_SORT_DIRECTION_UNSPECIFIED
}

// Common filtering options
type FilterOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field-based filters
	Filters map[string]*FilterValue `protobuf:"bytes,1,rep,name=filters" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Text search query
	SearchQuery *string `protobuf:"bytes,2,opt,name=search_query,json=searchQuery" json:"search_query,omitempty"`
	// Time range filter
	TimeRange     *TimeRange `protobuf:"bytes,3,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterOptions) Reset() {
	*x = FilterOptions{}
	mi := &file_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterOptions) ProtoMessage() {}

func (x *FilterOptions) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterOptions.ProtoReflect.Descriptor instead.
func (*FilterOptions) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *FilterOptions) GetFilters() map[string]*FilterValue {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *FilterOptions) GetSearchQuery() string {
	if x != nil && x.SearchQuery != nil {
		return *x.SearchQuery
	}
	return ""
}

func (x *FilterOptions) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

// Filter value with multiple type support
type FilterValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*FilterValue_StringValue
	//	*FilterValue_IntValue
	//	*FilterValue_DoubleValue
	//	*FilterValue_BoolValue
	//	*FilterValue_StringArray
	//	*FilterValue_IntArray
	Value isFilterValue_Value `protobuf_oneof:"value"`
	// Filter operation type
	Operation     *FilterOperation `protobuf:"varint,7,opt,name=operation,enum=gcommon.common.v1.FilterOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterValue) Reset() {
	*x = FilterValue{}
	mi := &file_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterValue) ProtoMessage() {}

func (x *FilterValue) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterValue.ProtoReflect.Descriptor instead.
func (*FilterValue) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *FilterValue) GetValue() isFilterValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *FilterValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*FilterValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *FilterValue) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*FilterValue_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *FilterValue) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*FilterValue_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *FilterValue) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*FilterValue_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *FilterValue) GetStringArray() *StringArray {
	if x != nil {
		if x, ok := x.Value.(*FilterValue_StringArray); ok {
			return x.StringArray
		}
	}
	return nil
}

func (x *FilterValue) GetIntArray() *Int64Array {
	if x != nil {
		if x, ok := x.Value.(*FilterValue_IntArray); ok {
			return x.IntArray
		}
	}
	return nil
}

func (x *FilterValue) GetOperation() FilterOperation {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return FilterOperation_FILTER_OPERATION_UNSPECIFIED
}

type isFilterValue_Value interface {
	isFilterValue_Value()
}

type FilterValue_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,oneof"`
}

type FilterValue_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,oneof"`
}

type FilterValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,oneof"`
}

type FilterValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,oneof"`
}

type FilterValue_StringArray struct {
	StringArray *StringArray `protobuf:"bytes,5,opt,name=string_array,json=stringArray,oneof"`
}

type FilterValue_IntArray struct {
	IntArray *Int64Array `protobuf:"bytes,6,opt,name=int_array,json=intArray,oneof"`
}

func (*FilterValue_StringValue) isFilterValue_Value() {}

func (*FilterValue_IntValue) isFilterValue_Value() {}

func (*FilterValue_DoubleValue) isFilterValue_Value() {}

func (*FilterValue_BoolValue) isFilterValue_Value() {}

func (*FilterValue_StringArray) isFilterValue_Value() {}

func (*FilterValue_IntArray) isFilterValue_Value() {}

// String array wrapper for oneof usage
type StringArray struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringArray) Reset() {
	*x = StringArray{}
	mi := &file_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringArray) ProtoMessage() {}

func (x *StringArray) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringArray.ProtoReflect.Descriptor instead.
func (*StringArray) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

func (x *StringArray) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Int64 array wrapper for oneof usage
type Int64Array struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []int64                `protobuf:"varint,1,rep,packed,name=values" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Int64Array) Reset() {
	*x = Int64Array{}
	mi := &file_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int64Array) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64Array) ProtoMessage() {}

func (x *Int64Array) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64Array.ProtoReflect.Descriptor instead.
func (*Int64Array) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

func (x *Int64Array) GetValues() []int64 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Generic key-value pair for metadata
type KeyValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	mi := &file_common_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

func (x *KeyValue) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// Resource reference for cross-module operations
type ResourceReference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Resource type (e.g., "user", "config", "queue")
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Resource ID
	Id *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// Resource name (human-readable)
	Name *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// Module that owns this resource
	Module        *string `protobuf:"bytes,4,opt,name=module" json:"module,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceReference) Reset() {
	*x = ResourceReference{}
	mi := &file_common_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceReference) ProtoMessage() {}

func (x *ResourceReference) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceReference.ProtoReflect.Descriptor instead.
func (*ResourceReference) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{12}
}

func (x *ResourceReference) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ResourceReference) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ResourceReference) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceReference) GetModule() string {
	if x != nil && x.Module != nil {
		return *x.Module
	}
	return ""
}

// Common metrics data point
type MetricPoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metric name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Metric value
	Value *float64 `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
	// Timestamp when metric was recorded
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
	// Metric labels
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Metric unit
	Unit          *string `protobuf:"bytes,5,opt,name=unit" json:"unit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricPoint) Reset() {
	*x = MetricPoint{}
	mi := &file_common_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricPoint) ProtoMessage() {}

func (x *MetricPoint) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricPoint.ProtoReflect.Descriptor instead.
func (*MetricPoint) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{13}
}

func (x *MetricPoint) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MetricPoint) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *MetricPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MetricPoint) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MetricPoint) GetUnit() string {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return ""
}

// Configuration value with type information
type ConfigValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*ConfigValue_StringValue
	//	*ConfigValue_IntValue
	//	*ConfigValue_DoubleValue
	//	*ConfigValue_BoolValue
	//	*ConfigValue_BytesValue
	//	*ConfigValue_AnyValue
	Value isConfigValue_Value `protobuf_oneof:"value"`
	// Value type for validation
	Type *ValueType `protobuf:"varint,7,opt,name=type,enum=gcommon.common.v1.ValueType" json:"type,omitempty"`
	// Whether value is encrypted
	Encrypted *bool `protobuf:"varint,8,opt,name=encrypted" json:"encrypted,omitempty"`
	// Value metadata
	Metadata      map[string]string `protobuf:"bytes,9,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigValue) Reset() {
	*x = ConfigValue{}
	mi := &file_common_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigValue) ProtoMessage() {}

func (x *ConfigValue) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigValue.ProtoReflect.Descriptor instead.
func (*ConfigValue) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{14}
}

func (x *ConfigValue) GetValue() isConfigValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ConfigValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*ConfigValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *ConfigValue) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*ConfigValue_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *ConfigValue) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*ConfigValue_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *ConfigValue) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*ConfigValue_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *ConfigValue) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*ConfigValue_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

func (x *ConfigValue) GetAnyValue() *anypb.Any {
	if x != nil {
		if x, ok := x.Value.(*ConfigValue_AnyValue); ok {
			return x.AnyValue
		}
	}
	return nil
}

func (x *ConfigValue) GetType() ValueType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ValueType_VALUE_TYPE_UNSPECIFIED
}

func (x *ConfigValue) GetEncrypted() bool {
	if x != nil && x.Encrypted != nil {
		return *x.Encrypted
	}
	return false
}

func (x *ConfigValue) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isConfigValue_Value interface {
	isConfigValue_Value()
}

type ConfigValue_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,oneof"`
}

type ConfigValue_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,oneof"`
}

type ConfigValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,oneof"`
}

type ConfigValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,oneof"`
}

type ConfigValue_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,5,opt,name=bytes_value,json=bytesValue,oneof"`
}

type ConfigValue_AnyValue struct {
	AnyValue *anypb.Any `protobuf:"bytes,6,opt,name=any_value,json=anyValue,oneof"`
}

func (*ConfigValue_StringValue) isConfigValue_Value() {}

func (*ConfigValue_IntValue) isConfigValue_Value() {}

func (*ConfigValue_DoubleValue) isConfigValue_Value() {}

func (*ConfigValue_BoolValue) isConfigValue_Value() {}

func (*ConfigValue_BytesValue) isConfigValue_Value() {}

func (*ConfigValue_AnyValue) isConfigValue_Value() {}

// Rate limiting information
type RateLimit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum requests per window
	Limit *int32 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	// Time window duration
	Window *durationpb.Duration `protobuf:"bytes,2,opt,name=window" json:"window,omitempty"`
	// Remaining requests in current window
	Remaining *int32 `protobuf:"varint,3,opt,name=remaining" json:"remaining,omitempty"`
	// Time until window resets
	ResetTime     *durationpb.Duration `protobuf:"bytes,4,opt,name=reset_time,json=resetTime" json:"reset_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimit) Reset() {
	*x = RateLimit{}
	mi := &file_common_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimit) ProtoMessage() {}

func (x *RateLimit) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimit.ProtoReflect.Descriptor instead.
func (*RateLimit) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{15}
}

func (x *RateLimit) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *RateLimit) GetWindow() *durationpb.Duration {
	if x != nil {
		return x.Window
	}
	return nil
}

func (x *RateLimit) GetRemaining() int32 {
	if x != nil && x.Remaining != nil {
		return *x.Remaining
	}
	return 0
}

func (x *RateLimit) GetResetTime() *durationpb.Duration {
	if x != nil {
		return x.ResetTime
	}
	return nil
}

// Service version information
type ServiceVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Service name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Semantic version
	Version *string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// Build commit hash
	Commit *string `protobuf:"bytes,3,opt,name=commit" json:"commit,omitempty"`
	// Build timestamp
	BuildTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=build_time,json=buildTime" json:"build_time,omitempty"`
	// Go version used for build
	GoVersion     *string `protobuf:"bytes,5,opt,name=go_version,json=goVersion" json:"go_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceVersion) Reset() {
	*x = ServiceVersion{}
	mi := &file_common_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceVersion) ProtoMessage() {}

func (x *ServiceVersion) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceVersion.ProtoReflect.Descriptor instead.
func (*ServiceVersion) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{16}
}

func (x *ServiceVersion) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ServiceVersion) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ServiceVersion) GetCommit() string {
	if x != nil && x.Commit != nil {
		return *x.Commit
	}
	return ""
}

func (x *ServiceVersion) GetBuildTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BuildTime
	}
	return nil
}

func (x *ServiceVersion) GetGoVersion() string {
	if x != nil && x.GoVersion != nil {
		return *x.GoVersion
	}
	return ""
}

// Audit log entry for tracking operations across modules
type AuditLog struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique audit log ID
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// User who performed the action
	UserId *string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// Action performed
	Action *string `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	// Resource that was acted upon
	Resource *ResourceReference `protobuf:"bytes,4,opt,name=resource" json:"resource,omitempty"`
	// Timestamp of the action
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	// Source IP address
	SourceIp *string `protobuf:"bytes,6,opt,name=source_ip,json=sourceIp" json:"source_ip,omitempty"`
	// User agent
	UserAgent *string `protobuf:"bytes,7,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// Additional metadata about the action
	Metadata map[string]string `protobuf:"bytes,8,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Result of the action (success/failure)
	Result *AuditResult `protobuf:"varint,9,opt,name=result,enum=gcommon.common.v1.AuditResult" json:"result,omitempty"`
	// Session ID if applicable
	SessionId     *string `protobuf:"bytes,10,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditLog) Reset() {
	*x = AuditLog{}
	mi := &file_common_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLog) ProtoMessage() {}

func (x *AuditLog) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLog.ProtoReflect.Descriptor instead.
func (*AuditLog) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{17}
}

func (x *AuditLog) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *AuditLog) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *AuditLog) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *AuditLog) GetResource() *ResourceReference {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *AuditLog) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AuditLog) GetSourceIp() string {
	if x != nil && x.SourceIp != nil {
		return *x.SourceIp
	}
	return ""
}

func (x *AuditLog) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *AuditLog) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AuditLog) GetResult() AuditResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return AuditResult_AUDIT_RESULT_UNSPECIFIED
}

func (x *AuditLog) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

// Batch operation wrapper for bulk requests
type BatchOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique batch ID
	BatchId *string `protobuf:"bytes,1,opt,name=batch_id,json=batchId" json:"batch_id,omitempty"`
	// Operation type
	OperationType *string `protobuf:"bytes,2,opt,name=operation_type,json=operationType" json:"operation_type,omitempty"`
	// Individual operations in the batch
	Operations []*anypb.Any `protobuf:"bytes,3,rep,name=operations" json:"operations,omitempty"`
	// Batch processing options
	Options *BatchOptions `protobuf:"bytes,4,opt,name=options" json:"options,omitempty"`
	// Request metadata
	Metadata      *RequestMetadata `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchOperation) Reset() {
	*x = BatchOperation{}
	mi := &file_common_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOperation) ProtoMessage() {}

func (x *BatchOperation) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOperation.ProtoReflect.Descriptor instead.
func (*BatchOperation) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{18}
}

func (x *BatchOperation) GetBatchId() string {
	if x != nil && x.BatchId != nil {
		return *x.BatchId
	}
	return ""
}

func (x *BatchOperation) GetOperationType() string {
	if x != nil && x.OperationType != nil {
		return *x.OperationType
	}
	return ""
}

func (x *BatchOperation) GetOperations() []*anypb.Any {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *BatchOperation) GetOptions() *BatchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *BatchOperation) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Batch processing options
type BatchOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum number of operations to process in parallel
	MaxParallel *int32 `protobuf:"varint,1,opt,name=max_parallel,json=maxParallel" json:"max_parallel,omitempty"`
	// Whether to stop on first error
	FailFast *bool `protobuf:"varint,2,opt,name=fail_fast,json=failFast" json:"fail_fast,omitempty"`
	// Timeout for the entire batch
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout" json:"timeout,omitempty"`
	// Whether to return partial results on timeout
	ReturnPartial *bool `protobuf:"varint,4,opt,name=return_partial,json=returnPartial" json:"return_partial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchOptions) Reset() {
	*x = BatchOptions{}
	mi := &file_common_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOptions) ProtoMessage() {}

func (x *BatchOptions) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOptions.ProtoReflect.Descriptor instead.
func (*BatchOptions) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{19}
}

func (x *BatchOptions) GetMaxParallel() int32 {
	if x != nil && x.MaxParallel != nil {
		return *x.MaxParallel
	}
	return 0
}

func (x *BatchOptions) GetFailFast() bool {
	if x != nil && x.FailFast != nil {
		return *x.FailFast
	}
	return false
}

func (x *BatchOptions) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *BatchOptions) GetReturnPartial() bool {
	if x != nil && x.ReturnPartial != nil {
		return *x.ReturnPartial
	}
	return false
}

// Subscription information for streaming operations
type SubscriptionInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique subscription ID
	SubscriptionId *string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId" json:"subscription_id,omitempty"`
	// Filter criteria for the subscription
	Filter *FilterOptions `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	// Subscription start time
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	// Optional end time for the subscription
	EndTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	// Subscriber information
	Subscriber *ClientInfo `protobuf:"bytes,5,opt,name=subscriber" json:"subscriber,omitempty"`
	// Subscription options
	Options *SubscriptionOptions `protobuf:"bytes,6,opt,name=options" json:"options,omitempty"`
	// Current status of the subscription
	Status        *SubscriptionStatus `protobuf:"varint,7,opt,name=status,enum=gcommon.common.v1.SubscriptionStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscriptionInfo) Reset() {
	*x = SubscriptionInfo{}
	mi := &file_common_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionInfo) ProtoMessage() {}

func (x *SubscriptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionInfo.ProtoReflect.Descriptor instead.
func (*SubscriptionInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{20}
}

func (x *SubscriptionInfo) GetSubscriptionId() string {
	if x != nil && x.SubscriptionId != nil {
		return *x.SubscriptionId
	}
	return ""
}

func (x *SubscriptionInfo) GetFilter() *FilterOptions {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *SubscriptionInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SubscriptionInfo) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *SubscriptionInfo) GetSubscriber() *ClientInfo {
	if x != nil {
		return x.Subscriber
	}
	return nil
}

func (x *SubscriptionInfo) GetOptions() *SubscriptionOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SubscriptionInfo) GetStatus() SubscriptionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED
}

// Subscription options
type SubscriptionOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to include historical data
	IncludeHistory *bool `protobuf:"varint,1,opt,name=include_history,json=includeHistory" json:"include_history,omitempty"`
	// Maximum events per batch
	MaxBatchSize *int32 `protobuf:"varint,2,opt,name=max_batch_size,json=maxBatchSize" json:"max_batch_size,omitempty"`
	// Acknowledgment mode
	AckMode *AckMode `protobuf:"varint,3,opt,name=ack_mode,json=ackMode,enum=gcommon.common.v1.AckMode" json:"ack_mode,omitempty"`
	// Keep alive interval
	KeepAlive     *durationpb.Duration `protobuf:"bytes,4,opt,name=keep_alive,json=keepAlive" json:"keep_alive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscriptionOptions) Reset() {
	*x = SubscriptionOptions{}
	mi := &file_common_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionOptions) ProtoMessage() {}

func (x *SubscriptionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionOptions.ProtoReflect.Descriptor instead.
func (*SubscriptionOptions) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{21}
}

func (x *SubscriptionOptions) GetIncludeHistory() bool {
	if x != nil && x.IncludeHistory != nil {
		return *x.IncludeHistory
	}
	return false
}

func (x *SubscriptionOptions) GetMaxBatchSize() int32 {
	if x != nil && x.MaxBatchSize != nil {
		return *x.MaxBatchSize
	}
	return 0
}

func (x *SubscriptionOptions) GetAckMode() AckMode {
	if x != nil && x.AckMode != nil {
		return *x.AckMode
	}
	return AckMode_ACK_MODE_UNSPECIFIED
}

func (x *SubscriptionOptions) GetKeepAlive() *durationpb.Duration {
	if x != nil {
		return x.KeepAlive
	}
	return nil
}

// Cache policy configuration
type CachePolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cache expiration policy
	Expiration *ExpirationPolicy `protobuf:"varint,1,opt,name=expiration,enum=gcommon.common.v1.ExpirationPolicy" json:"expiration,omitempty"`
	// Eviction policy when cache is full
	Eviction *EvictionPolicy `protobuf:"varint,2,opt,name=eviction,enum=gcommon.common.v1.EvictionPolicy" json:"eviction,omitempty"`
	// Maximum cache size (in bytes)
	MaxSizeBytes *int64 `protobuf:"varint,3,opt,name=max_size_bytes,json=maxSizeBytes" json:"max_size_bytes,omitempty"`
	// Maximum number of entries
	MaxEntries *int64 `protobuf:"varint,4,opt,name=max_entries,json=maxEntries" json:"max_entries,omitempty"`
	// Default TTL for cache entries
	DefaultTtl *durationpb.Duration `protobuf:"bytes,5,opt,name=default_ttl,json=defaultTtl" json:"default_ttl,omitempty"`
	// Whether to refresh entries before expiration
	RefreshAhead *bool `protobuf:"varint,6,opt,name=refresh_ahead,json=refreshAhead" json:"refresh_ahead,omitempty"`
	// Cache statistics collection enabled
	EnableStats   *bool `protobuf:"varint,7,opt,name=enable_stats,json=enableStats" json:"enable_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CachePolicy) Reset() {
	*x = CachePolicy{}
	mi := &file_common_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CachePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachePolicy) ProtoMessage() {}

func (x *CachePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CachePolicy.ProtoReflect.Descriptor instead.
func (*CachePolicy) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{22}
}

func (x *CachePolicy) GetExpiration() ExpirationPolicy {
	if x != nil && x.Expiration != nil {
		return *x.Expiration
	}
	return ExpirationPolicy_EXPIRATION_POLICY_UNSPECIFIED
}

func (x *CachePolicy) GetEviction() EvictionPolicy {
	if x != nil && x.Eviction != nil {
		return *x.Eviction
	}
	return EvictionPolicy_EVICTION_POLICY_UNSPECIFIED
}

func (x *CachePolicy) GetMaxSizeBytes() int64 {
	if x != nil && x.MaxSizeBytes != nil {
		return *x.MaxSizeBytes
	}
	return 0
}

func (x *CachePolicy) GetMaxEntries() int64 {
	if x != nil && x.MaxEntries != nil {
		return *x.MaxEntries
	}
	return 0
}

func (x *CachePolicy) GetDefaultTtl() *durationpb.Duration {
	if x != nil {
		return x.DefaultTtl
	}
	return nil
}

func (x *CachePolicy) GetRefreshAhead() bool {
	if x != nil && x.RefreshAhead != nil {
		return *x.RefreshAhead
	}
	return false
}

func (x *CachePolicy) GetEnableStats() bool {
	if x != nil && x.EnableStats != nil {
		return *x.EnableStats
	}
	return false
}

// Retry policy configuration
type RetryPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum number of retry attempts
	MaxAttempts *int32 `protobuf:"varint,1,opt,name=max_attempts,json=maxAttempts" json:"max_attempts,omitempty"`
	// Initial retry delay
	InitialDelay *durationpb.Duration `protobuf:"bytes,2,opt,name=initial_delay,json=initialDelay" json:"initial_delay,omitempty"`
	// Maximum retry delay
	MaxDelay *durationpb.Duration `protobuf:"bytes,3,opt,name=max_delay,json=maxDelay" json:"max_delay,omitempty"`
	// Backoff multiplier (exponential backoff)
	BackoffMultiplier *float64 `protobuf:"fixed64,4,opt,name=backoff_multiplier,json=backoffMultiplier" json:"backoff_multiplier,omitempty"`
	// Jitter for retry timing
	EnableJitter *bool `protobuf:"varint,5,opt,name=enable_jitter,json=enableJitter" json:"enable_jitter,omitempty"`
	// Retryable error codes
	RetryableErrors []ErrorCode `protobuf:"varint,6,rep,packed,name=retryable_errors,json=retryableErrors,enum=gcommon.common.v1.ErrorCode" json:"retryable_errors,omitempty"`
	// Total timeout for all retry attempts
	TotalTimeout  *durationpb.Duration `protobuf:"bytes,7,opt,name=total_timeout,json=totalTimeout" json:"total_timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryPolicy) Reset() {
	*x = RetryPolicy{}
	mi := &file_common_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryPolicy) ProtoMessage() {}

func (x *RetryPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryPolicy.ProtoReflect.Descriptor instead.
func (*RetryPolicy) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{23}
}

func (x *RetryPolicy) GetMaxAttempts() int32 {
	if x != nil && x.MaxAttempts != nil {
		return *x.MaxAttempts
	}
	return 0
}

func (x *RetryPolicy) GetInitialDelay() *durationpb.Duration {
	if x != nil {
		return x.InitialDelay
	}
	return nil
}

func (x *RetryPolicy) GetMaxDelay() *durationpb.Duration {
	if x != nil {
		return x.MaxDelay
	}
	return nil
}

func (x *RetryPolicy) GetBackoffMultiplier() float64 {
	if x != nil && x.BackoffMultiplier != nil {
		return *x.BackoffMultiplier
	}
	return 0
}

func (x *RetryPolicy) GetEnableJitter() bool {
	if x != nil && x.EnableJitter != nil {
		return *x.EnableJitter
	}
	return false
}

func (x *RetryPolicy) GetRetryableErrors() []ErrorCode {
	if x != nil {
		return x.RetryableErrors
	}
	return nil
}

func (x *RetryPolicy) GetTotalTimeout() *durationpb.Duration {
	if x != nil {
		return x.TotalTimeout
	}
	return nil
}

// Circuit breaker configuration
type CircuitBreakerConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Failure threshold to open circuit
	FailureThreshold *int32 `protobuf:"varint,1,opt,name=failure_threshold,json=failureThreshold" json:"failure_threshold,omitempty"`
	// Success threshold to close circuit
	SuccessThreshold *int32 `protobuf:"varint,2,opt,name=success_threshold,json=successThreshold" json:"success_threshold,omitempty"`
	// Timeout for circuit to remain open
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout" json:"timeout,omitempty"`
	// Maximum number of concurrent requests in half-open state
	MaxRequests *int32 `protobuf:"varint,4,opt,name=max_requests,json=maxRequests" json:"max_requests,omitempty"`
	// Window size for failure counting
	WindowSize *durationpb.Duration `protobuf:"bytes,5,opt,name=window_size,json=windowSize" json:"window_size,omitempty"`
	// Current circuit breaker state
	State         *CircuitBreakerState `protobuf:"varint,6,opt,name=state,enum=gcommon.common.v1.CircuitBreakerState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CircuitBreakerConfig) Reset() {
	*x = CircuitBreakerConfig{}
	mi := &file_common_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CircuitBreakerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CircuitBreakerConfig) ProtoMessage() {}

func (x *CircuitBreakerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CircuitBreakerConfig.ProtoReflect.Descriptor instead.
func (*CircuitBreakerConfig) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{24}
}

func (x *CircuitBreakerConfig) GetFailureThreshold() int32 {
	if x != nil && x.FailureThreshold != nil {
		return *x.FailureThreshold
	}
	return 0
}

func (x *CircuitBreakerConfig) GetSuccessThreshold() int32 {
	if x != nil && x.SuccessThreshold != nil {
		return *x.SuccessThreshold
	}
	return 0
}

func (x *CircuitBreakerConfig) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *CircuitBreakerConfig) GetMaxRequests() int32 {
	if x != nil && x.MaxRequests != nil {
		return *x.MaxRequests
	}
	return 0
}

func (x *CircuitBreakerConfig) GetWindowSize() *durationpb.Duration {
	if x != nil {
		return x.WindowSize
	}
	return nil
}

func (x *CircuitBreakerConfig) GetState() CircuitBreakerState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return CircuitBreakerState_CIRCUIT_BREAKER_STATE_UNSPECIFIED
}

var File_common_proto protoreflect.FileDescriptor

const file_common_proto_rawDesc = "" +
	"\n" +
	"\fcommon.proto\x12\x11gcommon.common.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x19google/protobuf/any.proto\"\xbd\x02\n" +
	"\x05Error\x120\n" +
	"\x04code\x18\x01 \x01(\x0e2\x1c.gcommon.common.v1.ErrorCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12?\n" +
	"\adetails\x18\x03 \x03(\v2%.gcommon.common.v1.Error.DetailsEntryR\adetails\x12\x19\n" +
	"\btrace_id\x18\x04 \x01(\tR\atraceId\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x16\n" +
	"\x06source\x18\x06 \x01(\tR\x06source\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\n" +
	"Pagination\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x1f\n" +
	"\vpage_number\x18\x03 \x01(\x05R\n" +
	"pageNumber\"\xe5\x01\n" +
	"\x11PaginatedResponse\x12&\n" +
	"\x0fnext_page_token\x18\x01 \x01(\tR\rnextPageToken\x12&\n" +
	"\x0fprev_page_token\x18\x02 \x01(\tR\rprevPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12!\n" +
	"\fcurrent_page\x18\x04 \x01(\x05R\vcurrentPage\x12\x1f\n" +
	"\vtotal_pages\x18\x05 \x01(\x05R\n" +
	"totalPages\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\"\x83\x03\n" +
	"\x0fRequestMetadata\x12\x19\n" +
	"\btrace_id\x18\x01 \x01(\tR\atraceId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12%\n" +
	"\x0ecorrelation_id\x18\x03 \x01(\tR\rcorrelationId\x12I\n" +
	"\aheaders\x18\x04 \x03(\v2/.gcommon.common.v1.RequestMetadata.HeadersEntryR\aheaders\x125\n" +
	"\x06client\x18\x05 \x01(\v2\x1d.gcommon.common.v1.ClientInfoR\x06client\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1d\n" +
	"\n" +
	"session_id\x18\a \x01(\tR\tsessionId\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x94\x01\n" +
	"\n" +
	"ClientInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x04 \x01(\tR\tuserAgent\x12\x1a\n" +
	"\bplatform\x18\x05 \x01(\tR\bplatform\"}\n" +
	"\tTimeRange\x129\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"c\n" +
	"\vSortOptions\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12>\n" +
	"\tdirection\x18\x02 \x01(\x0e2 .gcommon.common.v1.SortDirectionR\tdirection\"\x94\x02\n" +
	"\rFilterOptions\x12G\n" +
	"\afilters\x18\x01 \x03(\v2-.gcommon.common.v1.FilterOptions.FiltersEntryR\afilters\x12!\n" +
	"\fsearch_query\x18\x02 \x01(\tR\vsearchQuery\x12;\n" +
	"\n" +
	"time_range\x18\x03 \x01(\v2\x1c.gcommon.common.v1.TimeRangeR\ttimeRange\x1aZ\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.gcommon.common.v1.FilterValueR\x05value:\x028\x01\"\xe5\x02\n" +
	"\vFilterValue\x12#\n" +
	"\fstring_value\x18\x01 \x01(\tH\x00R\vstringValue\x12\x1d\n" +
	"\tint_value\x18\x02 \x01(\x03H\x00R\bintValue\x12#\n" +
	"\fdouble_value\x18\x03 \x01(\x01H\x00R\vdoubleValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x04 \x01(\bH\x00R\tboolValue\x12C\n" +
	"\fstring_array\x18\x05 \x01(\v2\x1e.gcommon.common.v1.StringArrayH\x00R\vstringArray\x12<\n" +
	"\tint_array\x18\x06 \x01(\v2\x1d.gcommon.common.v1.Int64ArrayH\x00R\bintArray\x12@\n" +
	"\toperation\x18\a \x01(\x0e2\".gcommon.common.v1.FilterOperationR\toperationB\a\n" +
	"\x05value\"%\n" +
	"\vStringArray\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\"$\n" +
	"\n" +
	"Int64Array\x12\x16\n" +
	"\x06values\x18\x01 \x03(\x03R\x06values\"2\n" +
	"\bKeyValue\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"c\n" +
	"\x11ResourceReference\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x16\n" +
	"\x06module\x18\x04 \x01(\tR\x06module\"\x84\x02\n" +
	"\vMetricPoint\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12B\n" +
	"\x06labels\x18\x04 \x03(\v2*.gcommon.common.v1.MetricPoint.LabelsEntryR\x06labels\x12\x12\n" +
	"\x04unit\x18\x05 \x01(\tR\x04unit\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcf\x03\n" +
	"\vConfigValue\x12#\n" +
	"\fstring_value\x18\x01 \x01(\tH\x00R\vstringValue\x12\x1d\n" +
	"\tint_value\x18\x02 \x01(\x03H\x00R\bintValue\x12#\n" +
	"\fdouble_value\x18\x03 \x01(\x01H\x00R\vdoubleValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x04 \x01(\bH\x00R\tboolValue\x12!\n" +
	"\vbytes_value\x18\x05 \x01(\fH\x00R\n" +
	"bytesValue\x123\n" +
	"\tany_value\x18\x06 \x01(\v2\x14.google.protobuf.AnyH\x00R\banyValue\x120\n" +
	"\x04type\x18\a \x01(\x0e2\x1c.gcommon.common.v1.ValueTypeR\x04type\x12\x1c\n" +
	"\tencrypted\x18\b \x01(\bR\tencrypted\x12H\n" +
	"\bmetadata\x18\t \x03(\v2,.gcommon.common.v1.ConfigValue.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\a\n" +
	"\x05value\"\xac\x01\n" +
	"\tRateLimit\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x121\n" +
	"\x06window\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x06window\x12\x1c\n" +
	"\tremaining\x18\x03 \x01(\x05R\tremaining\x128\n" +
	"\n" +
	"reset_time\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\tresetTime\"\xb0\x01\n" +
	"\x0eServiceVersion\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x16\n" +
	"\x06commit\x18\x03 \x01(\tR\x06commit\x129\n" +
	"\n" +
	"build_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tbuildTime\x12\x1d\n" +
	"\n" +
	"go_version\x18\x05 \x01(\tR\tgoVersion\"\xde\x03\n" +
	"\bAuditLog\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12@\n" +
	"\bresource\x18\x04 \x01(\v2$.gcommon.common.v1.ResourceReferenceR\bresource\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tsource_ip\x18\x06 \x01(\tR\bsourceIp\x12\x1d\n" +
	"\n" +
	"user_agent\x18\a \x01(\tR\tuserAgent\x12E\n" +
	"\bmetadata\x18\b \x03(\v2).gcommon.common.v1.AuditLog.MetadataEntryR\bmetadata\x126\n" +
	"\x06result\x18\t \x01(\x0e2\x1e.gcommon.common.v1.AuditResultR\x06result\x12\x1d\n" +
	"\n" +
	"session_id\x18\n" +
	" \x01(\tR\tsessionId\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x83\x02\n" +
	"\x0eBatchOperation\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12%\n" +
	"\x0eoperation_type\x18\x02 \x01(\tR\roperationType\x124\n" +
	"\n" +
	"operations\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\n" +
	"operations\x129\n" +
	"\aoptions\x18\x04 \x01(\v2\x1f.gcommon.common.v1.BatchOptionsR\aoptions\x12>\n" +
	"\bmetadata\x18\x05 \x01(\v2\".gcommon.common.v1.RequestMetadataR\bmetadata\"\xaa\x01\n" +
	"\fBatchOptions\x12!\n" +
	"\fmax_parallel\x18\x01 \x01(\x05R\vmaxParallel\x12\x1b\n" +
	"\tfail_fast\x18\x02 \x01(\bR\bfailFast\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12%\n" +
	"\x0ereturn_partial\x18\x04 \x01(\bR\rreturnPartial\"\xa7\x03\n" +
	"\x10SubscriptionInfo\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x128\n" +
	"\x06filter\x18\x02 \x01(\v2 .gcommon.common.v1.FilterOptionsR\x06filter\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12=\n" +
	"\n" +
	"subscriber\x18\x05 \x01(\v2\x1d.gcommon.common.v1.ClientInfoR\n" +
	"subscriber\x12@\n" +
	"\aoptions\x18\x06 \x01(\v2&.gcommon.common.v1.SubscriptionOptionsR\aoptions\x12=\n" +
	"\x06status\x18\a \x01(\x0e2%.gcommon.common.v1.SubscriptionStatusR\x06status\"\xd5\x01\n" +
	"\x13SubscriptionOptions\x12'\n" +
	"\x0finclude_history\x18\x01 \x01(\bR\x0eincludeHistory\x12$\n" +
	"\x0emax_batch_size\x18\x02 \x01(\x05R\fmaxBatchSize\x125\n" +
	"\back_mode\x18\x03 \x01(\x0e2\x1a.gcommon.common.v1.AckModeR\aackMode\x128\n" +
	"\n" +
	"keep_alive\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\tkeepAlive\"\xdc\x02\n" +
	"\vCachePolicy\x12C\n" +
	"\n" +
	"expiration\x18\x01 \x01(\x0e2#.gcommon.common.v1.ExpirationPolicyR\n" +
	"expiration\x12=\n" +
	"\beviction\x18\x02 \x01(\x0e2!.gcommon.common.v1.EvictionPolicyR\beviction\x12$\n" +
	"\x0emax_size_bytes\x18\x03 \x01(\x03R\fmaxSizeBytes\x12\x1f\n" +
	"\vmax_entries\x18\x04 \x01(\x03R\n" +
	"maxEntries\x12:\n" +
	"\vdefault_ttl\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"defaultTtl\x12#\n" +
	"\rrefresh_ahead\x18\x06 \x01(\bR\frefreshAhead\x12!\n" +
	"\fenable_stats\x18\a \x01(\bR\venableStats\"\x85\x03\n" +
	"\vRetryPolicy\x12!\n" +
	"\fmax_attempts\x18\x01 \x01(\x05R\vmaxAttempts\x12>\n" +
	"\rinitial_delay\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\finitialDelay\x126\n" +
	"\tmax_delay\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\bmaxDelay\x12-\n" +
	"\x12backoff_multiplier\x18\x04 \x01(\x01R\x11backoffMultiplier\x12#\n" +
	"\renable_jitter\x18\x05 \x01(\bR\fenableJitter\x12G\n" +
	"\x10retryable_errors\x18\x06 \x03(\x0e2\x1c.gcommon.common.v1.ErrorCodeR\x0fretryableErrors\x12>\n" +
	"\rtotal_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\ftotalTimeout\"\xc2\x02\n" +
	"\x14CircuitBreakerConfig\x12+\n" +
	"\x11failure_threshold\x18\x01 \x01(\x05R\x10failureThreshold\x12+\n" +
	"\x11success_threshold\x18\x02 \x01(\x05R\x10successThreshold\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12!\n" +
	"\fmax_requests\x18\x04 \x01(\x05R\vmaxRequests\x12:\n" +
	"\vwindow_size\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"windowSize\x12<\n" +
	"\x05state\x18\x06 \x01(\x0e2&.gcommon.common.v1.CircuitBreakerStateR\x05state*\xc4\x03\n" +
	"\tErrorCode\x12\x1a\n" +
	"\x16ERROR_CODE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bERROR_CODE_INVALID_ARGUMENT\x10\x01\x12\x18\n" +
	"\x14ERROR_CODE_NOT_FOUND\x10\x02\x12\x1d\n" +
	"\x19ERROR_CODE_ALREADY_EXISTS\x10\x03\x12 \n" +
	"\x1cERROR_CODE_PERMISSION_DENIED\x10\x04\x12\x1e\n" +
	"\x1aERROR_CODE_UNAUTHENTICATED\x10\x05\x12\x17\n" +
	"\x13ERROR_CODE_INTERNAL\x10\x06\x12\x1a\n" +
	"\x16ERROR_CODE_UNAVAILABLE\x10\a\x12\x16\n" +
	"\x12ERROR_CODE_TIMEOUT\x10\b\x12!\n" +
	"\x1dERROR_CODE_RESOURCE_EXHAUSTED\x10\t\x12\"\n" +
	"\x1eERROR_CODE_FAILED_PRECONDITION\x10\n" +
	"\x12\x16\n" +
	"\x12ERROR_CODE_ABORTED\x10\v\x12\x1b\n" +
	"\x17ERROR_CODE_OUT_OF_RANGE\x10\f\x12\x1c\n" +
	"\x18ERROR_CODE_UNIMPLEMENTED\x10\r\x12\x18\n" +
	"\x14ERROR_CODE_DATA_LOSS\x10\x0e*`\n" +
	"\rSortDirection\x12\x1e\n" +
	"\x1aSORT_DIRECTION_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12SORT_DIRECTION_ASC\x10\x01\x12\x17\n" +
	"\x13SORT_DIRECTION_DESC\x10\x02*\xa0\x03\n" +
	"\x0fFilterOperation\x12 \n" +
	"\x1cFILTER_OPERATION_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17FILTER_OPERATION_EQUALS\x10\x01\x12\x1f\n" +
	"\x1bFILTER_OPERATION_NOT_EQUALS\x10\x02\x12!\n" +
	"\x1dFILTER_OPERATION_GREATER_THAN\x10\x03\x12\x1e\n" +
	"\x1aFILTER_OPERATION_LESS_THAN\x10\x04\x12*\n" +
	"&FILTER_OPERATION_GREATER_THAN_OR_EQUAL\x10\x05\x12'\n" +
	"#FILTER_OPERATION_LESS_THAN_OR_EQUAL\x10\x06\x12\x1d\n" +
	"\x19FILTER_OPERATION_CONTAINS\x10\a\x12 \n" +
	"\x1cFILTER_OPERATION_STARTS_WITH\x10\b\x12\x1e\n" +
	"\x1aFILTER_OPERATION_ENDS_WITH\x10\t\x12\x17\n" +
	"\x13FILTER_OPERATION_IN\x10\n" +
	"\x12\x1b\n" +
	"\x17FILTER_OPERATION_NOT_IN\x10\v*\xb9\x01\n" +
	"\fHealthStatus\x12\x1d\n" +
	"\x19HEALTH_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15HEALTH_STATUS_HEALTHY\x10\x01\x12\x1b\n" +
	"\x17HEALTH_STATUS_UNHEALTHY\x10\x02\x12\x1a\n" +
	"\x16HEALTH_STATUS_DEGRADED\x10\x03\x12\x1a\n" +
	"\x16HEALTH_STATUS_STARTING\x10\x04\x12\x1a\n" +
	"\x16HEALTH_STATUS_STOPPING\x10\x05*\xc0\x01\n" +
	"\x0eResourceStatus\x12\x1f\n" +
	"\x1bRESOURCE_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16RESOURCE_STATUS_ACTIVE\x10\x01\x12\x1c\n" +
	"\x18RESOURCE_STATUS_INACTIVE\x10\x02\x12\x1b\n" +
	"\x17RESOURCE_STATUS_PENDING\x10\x03\x12\x1b\n" +
	"\x17RESOURCE_STATUS_DELETED\x10\x04\x12\x19\n" +
	"\x15RESOURCE_STATUS_ERROR\x10\x05*\xbe\x01\n" +
	"\tValueType\x12\x1a\n" +
	"\x16VALUE_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11VALUE_TYPE_STRING\x10\x01\x12\x12\n" +
	"\x0eVALUE_TYPE_INT\x10\x02\x12\x15\n" +
	"\x11VALUE_TYPE_DOUBLE\x10\x03\x12\x13\n" +
	"\x0fVALUE_TYPE_BOOL\x10\x04\x12\x14\n" +
	"\x10VALUE_TYPE_BYTES\x10\x05\x12\x13\n" +
	"\x0fVALUE_TYPE_JSON\x10\x06\x12\x13\n" +
	"\x0fVALUE_TYPE_YAML\x10\a*y\n" +
	"\vAuditResult\x12\x1c\n" +
	"\x18AUDIT_RESULT_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14AUDIT_RESULT_SUCCESS\x10\x01\x12\x18\n" +
	"\x14AUDIT_RESULT_FAILURE\x10\x02\x12\x18\n" +
	"\x14AUDIT_RESULT_PARTIAL\x10\x03*\xbb\x01\n" +
	"\x12SubscriptionStatus\x12#\n" +
	"\x1fSUBSCRIPTION_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aSUBSCRIPTION_STATUS_ACTIVE\x10\x01\x12\x1e\n" +
	"\x1aSUBSCRIPTION_STATUS_PAUSED\x10\x02\x12!\n" +
	"\x1dSUBSCRIPTION_STATUS_CANCELLED\x10\x03\x12\x1d\n" +
	"\x19SUBSCRIPTION_STATUS_ERROR\x10\x04*`\n" +
	"\aAckMode\x12\x18\n" +
	"\x14ACK_MODE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fACK_MODE_MANUAL\x10\x01\x12\x11\n" +
	"\rACK_MODE_AUTO\x10\x02\x12\x13\n" +
	"\x0fACK_MODE_CLIENT\x10\x03*\xa6\x01\n" +
	"\x10ExpirationPolicy\x12!\n" +
	"\x1dEXPIRATION_POLICY_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15EXPIRATION_POLICY_TTL\x10\x01\x12\x1a\n" +
	"\x16EXPIRATION_POLICY_IDLE\x10\x02\x12\x1b\n" +
	"\x17EXPIRATION_POLICY_WRITE\x10\x03\x12\x1b\n" +
	"\x17EXPIRATION_POLICY_NEVER\x10\x04*\x99\x01\n" +
	"\x0eEvictionPolicy\x12\x1f\n" +
	"\x1bEVICTION_POLICY_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13EVICTION_POLICY_LRU\x10\x01\x12\x17\n" +
	"\x13EVICTION_POLICY_LFU\x10\x02\x12\x18\n" +
	"\x14EVICTION_POLICY_FIFO\x10\x03\x12\x1a\n" +
	"\x16EVICTION_POLICY_RANDOM\x10\x04*\xa3\x01\n" +
	"\x13CircuitBreakerState\x12%\n" +
	"!CIRCUIT_BREAKER_STATE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cCIRCUIT_BREAKER_STATE_CLOSED\x10\x01\x12\x1e\n" +
	"\x1aCIRCUIT_BREAKER_STATE_OPEN\x10\x02\x12#\n" +
	"\x1fCIRCUIT_BREAKER_STATE_HALF_OPEN\x10\x03B5Z3github.com/jdfalk/gcommon/pkg/common/proto;commonpbb\beditionsp\xe8\a"

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData []byte
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)))
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_common_proto_goTypes = []any{
	(ErrorCode)(0),                // 0: gcommon.common.v1.ErrorCode
	(SortDirection)(0),            // 1: gcommon.common.v1.SortDirection
	(FilterOperation)(0),          // 2: gcommon.common.v1.FilterOperation
	(HealthStatus)(0),             // 3: gcommon.common.v1.HealthStatus
	(ResourceStatus)(0),           // 4: gcommon.common.v1.ResourceStatus
	(ValueType)(0),                // 5: gcommon.common.v1.ValueType
	(AuditResult)(0),              // 6: gcommon.common.v1.AuditResult
	(SubscriptionStatus)(0),       // 7: gcommon.common.v1.SubscriptionStatus
	(AckMode)(0),                  // 8: gcommon.common.v1.AckMode
	(ExpirationPolicy)(0),         // 9: gcommon.common.v1.ExpirationPolicy
	(EvictionPolicy)(0),           // 10: gcommon.common.v1.EvictionPolicy
	(CircuitBreakerState)(0),      // 11: gcommon.common.v1.CircuitBreakerState
	(*Error)(nil),                 // 12: gcommon.common.v1.Error
	(*Pagination)(nil),            // 13: gcommon.common.v1.Pagination
	(*PaginatedResponse)(nil),     // 14: gcommon.common.v1.PaginatedResponse
	(*RequestMetadata)(nil),       // 15: gcommon.common.v1.RequestMetadata
	(*ClientInfo)(nil),            // 16: gcommon.common.v1.ClientInfo
	(*TimeRange)(nil),             // 17: gcommon.common.v1.TimeRange
	(*SortOptions)(nil),           // 18: gcommon.common.v1.SortOptions
	(*FilterOptions)(nil),         // 19: gcommon.common.v1.FilterOptions
	(*FilterValue)(nil),           // 20: gcommon.common.v1.FilterValue
	(*StringArray)(nil),           // 21: gcommon.common.v1.StringArray
	(*Int64Array)(nil),            // 22: gcommon.common.v1.Int64Array
	(*KeyValue)(nil),              // 23: gcommon.common.v1.KeyValue
	(*ResourceReference)(nil),     // 24: gcommon.common.v1.ResourceReference
	(*MetricPoint)(nil),           // 25: gcommon.common.v1.MetricPoint
	(*ConfigValue)(nil),           // 26: gcommon.common.v1.ConfigValue
	(*RateLimit)(nil),             // 27: gcommon.common.v1.RateLimit
	(*ServiceVersion)(nil),        // 28: gcommon.common.v1.ServiceVersion
	(*AuditLog)(nil),              // 29: gcommon.common.v1.AuditLog
	(*BatchOperation)(nil),        // 30: gcommon.common.v1.BatchOperation
	(*BatchOptions)(nil),          // 31: gcommon.common.v1.BatchOptions
	(*SubscriptionInfo)(nil),      // 32: gcommon.common.v1.SubscriptionInfo
	(*SubscriptionOptions)(nil),   // 33: gcommon.common.v1.SubscriptionOptions
	(*CachePolicy)(nil),           // 34: gcommon.common.v1.CachePolicy
	(*RetryPolicy)(nil),           // 35: gcommon.common.v1.RetryPolicy
	(*CircuitBreakerConfig)(nil),  // 36: gcommon.common.v1.CircuitBreakerConfig
	nil,                           // 37: gcommon.common.v1.Error.DetailsEntry
	nil,                           // 38: gcommon.common.v1.RequestMetadata.HeadersEntry
	nil,                           // 39: gcommon.common.v1.FilterOptions.FiltersEntry
	nil,                           // 40: gcommon.common.v1.MetricPoint.LabelsEntry
	nil,                           // 41: gcommon.common.v1.ConfigValue.MetadataEntry
	nil,                           // 42: gcommon.common.v1.AuditLog.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 43: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 44: google.protobuf.Any
	(*durationpb.Duration)(nil),   // 45: google.protobuf.Duration
}
var file_common_proto_depIdxs = []int32{
	0,  // 0: gcommon.common.v1.Error.code:type_name -> gcommon.common.v1.ErrorCode
	37, // 1: gcommon.common.v1.Error.details:type_name -> gcommon.common.v1.Error.DetailsEntry
	43, // 2: gcommon.common.v1.Error.timestamp:type_name -> google.protobuf.Timestamp
	38, // 3: gcommon.common.v1.RequestMetadata.headers:type_name -> gcommon.common.v1.RequestMetadata.HeadersEntry
	16, // 4: gcommon.common.v1.RequestMetadata.client:type_name -> gcommon.common.v1.ClientInfo
	43, // 5: gcommon.common.v1.RequestMetadata.timestamp:type_name -> google.protobuf.Timestamp
	43, // 6: gcommon.common.v1.TimeRange.start_time:type_name -> google.protobuf.Timestamp
	43, // 7: gcommon.common.v1.TimeRange.end_time:type_name -> google.protobuf.Timestamp
	1,  // 8: gcommon.common.v1.SortOptions.direction:type_name -> gcommon.common.v1.SortDirection
	39, // 9: gcommon.common.v1.FilterOptions.filters:type_name -> gcommon.common.v1.FilterOptions.FiltersEntry
	17, // 10: gcommon.common.v1.FilterOptions.time_range:type_name -> gcommon.common.v1.TimeRange
	21, // 11: gcommon.common.v1.FilterValue.string_array:type_name -> gcommon.common.v1.StringArray
	22, // 12: gcommon.common.v1.FilterValue.int_array:type_name -> gcommon.common.v1.Int64Array
	2,  // 13: gcommon.common.v1.FilterValue.operation:type_name -> gcommon.common.v1.FilterOperation
	43, // 14: gcommon.common.v1.MetricPoint.timestamp:type_name -> google.protobuf.Timestamp
	40, // 15: gcommon.common.v1.MetricPoint.labels:type_name -> gcommon.common.v1.MetricPoint.LabelsEntry
	44, // 16: gcommon.common.v1.ConfigValue.any_value:type_name -> google.protobuf.Any
	5,  // 17: gcommon.common.v1.ConfigValue.type:type_name -> gcommon.common.v1.ValueType
	41, // 18: gcommon.common.v1.ConfigValue.metadata:type_name -> gcommon.common.v1.ConfigValue.MetadataEntry
	45, // 19: gcommon.common.v1.RateLimit.window:type_name -> google.protobuf.Duration
	45, // 20: gcommon.common.v1.RateLimit.reset_time:type_name -> google.protobuf.Duration
	43, // 21: gcommon.common.v1.ServiceVersion.build_time:type_name -> google.protobuf.Timestamp
	24, // 22: gcommon.common.v1.AuditLog.resource:type_name -> gcommon.common.v1.ResourceReference
	43, // 23: gcommon.common.v1.AuditLog.timestamp:type_name -> google.protobuf.Timestamp
	42, // 24: gcommon.common.v1.AuditLog.metadata:type_name -> gcommon.common.v1.AuditLog.MetadataEntry
	6,  // 25: gcommon.common.v1.AuditLog.result:type_name -> gcommon.common.v1.AuditResult
	44, // 26: gcommon.common.v1.BatchOperation.operations:type_name -> google.protobuf.Any
	31, // 27: gcommon.common.v1.BatchOperation.options:type_name -> gcommon.common.v1.BatchOptions
	15, // 28: gcommon.common.v1.BatchOperation.metadata:type_name -> gcommon.common.v1.RequestMetadata
	45, // 29: gcommon.common.v1.BatchOptions.timeout:type_name -> google.protobuf.Duration
	19, // 30: gcommon.common.v1.SubscriptionInfo.filter:type_name -> gcommon.common.v1.FilterOptions
	43, // 31: gcommon.common.v1.SubscriptionInfo.start_time:type_name -> google.protobuf.Timestamp
	43, // 32: gcommon.common.v1.SubscriptionInfo.end_time:type_name -> google.protobuf.Timestamp
	16, // 33: gcommon.common.v1.SubscriptionInfo.subscriber:type_name -> gcommon.common.v1.ClientInfo
	33, // 34: gcommon.common.v1.SubscriptionInfo.options:type_name -> gcommon.common.v1.SubscriptionOptions
	7,  // 35: gcommon.common.v1.SubscriptionInfo.status:type_name -> gcommon.common.v1.SubscriptionStatus
	8,  // 36: gcommon.common.v1.SubscriptionOptions.ack_mode:type_name -> gcommon.common.v1.AckMode
	45, // 37: gcommon.common.v1.SubscriptionOptions.keep_alive:type_name -> google.protobuf.Duration
	9,  // 38: gcommon.common.v1.CachePolicy.expiration:type_name -> gcommon.common.v1.ExpirationPolicy
	10, // 39: gcommon.common.v1.CachePolicy.eviction:type_name -> gcommon.common.v1.EvictionPolicy
	45, // 40: gcommon.common.v1.CachePolicy.default_ttl:type_name -> google.protobuf.Duration
	45, // 41: gcommon.common.v1.RetryPolicy.initial_delay:type_name -> google.protobuf.Duration
	45, // 42: gcommon.common.v1.RetryPolicy.max_delay:type_name -> google.protobuf.Duration
	0,  // 43: gcommon.common.v1.RetryPolicy.retryable_errors:type_name -> gcommon.common.v1.ErrorCode
	45, // 44: gcommon.common.v1.RetryPolicy.total_timeout:type_name -> google.protobuf.Duration
	45, // 45: gcommon.common.v1.CircuitBreakerConfig.timeout:type_name -> google.protobuf.Duration
	45, // 46: gcommon.common.v1.CircuitBreakerConfig.window_size:type_name -> google.protobuf.Duration
	11, // 47: gcommon.common.v1.CircuitBreakerConfig.state:type_name -> gcommon.common.v1.CircuitBreakerState
	20, // 48: gcommon.common.v1.FilterOptions.FiltersEntry.value:type_name -> gcommon.common.v1.FilterValue
	49, // [49:49] is the sub-list for method output_type
	49, // [49:49] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	file_common_proto_msgTypes[8].OneofWrappers = []any{
		(*FilterValue_StringValue)(nil),
		(*FilterValue_IntValue)(nil),
		(*FilterValue_DoubleValue)(nil),
		(*FilterValue_BoolValue)(nil),
		(*FilterValue_StringArray)(nil),
		(*FilterValue_IntArray)(nil),
	}
	file_common_proto_msgTypes[14].OneofWrappers = []any{
		(*ConfigValue_StringValue)(nil),
		(*ConfigValue_IntValue)(nil),
		(*ConfigValue_DoubleValue)(nil),
		(*ConfigValue_BoolValue)(nil),
		(*ConfigValue_BytesValue)(nil),
		(*ConfigValue_AnyValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)),
			NumEnums:      12,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
