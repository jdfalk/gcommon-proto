// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: pkg/queue/proto/subscribe_request.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SubscribeRequest creates a new subscription to a queue or topic
type SubscribeRequest struct {
	state                       protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Topic            *string                    `protobuf:"bytes,1,opt,name=topic"`
	xxx_hidden_SubscriptionName *string                    `protobuf:"bytes,2,opt,name=subscription_name,json=subscriptionName"`
	xxx_hidden_ConsumerGroupId  *string                    `protobuf:"bytes,3,opt,name=consumer_group_id,json=consumerGroupId"`
	xxx_hidden_ConsumerId       *string                    `protobuf:"bytes,4,opt,name=consumer_id,json=consumerId"`
	xxx_hidden_Config           *SubscriptionConfiguration `protobuf:"bytes,5,opt,name=config"`
	xxx_hidden_FilterConfig     *MessageFilterConfig       `protobuf:"bytes,6,opt,name=filter_config,json=filterConfig"`
	xxx_hidden_DeliveryConfig   *DeliveryConfiguration     `protobuf:"bytes,7,opt,name=delivery_config,json=deliveryConfig"`
	xxx_hidden_ErrorHandling    *ErrorHandlingConfig       `protobuf:"bytes,8,opt,name=error_handling,json=errorHandling"`
	xxx_hidden_Metadata         map[string]string          `protobuf:"bytes,9,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SubscribeRequest) GetTopic() string {
	if x != nil {
		if x.xxx_hidden_Topic != nil {
			return *x.xxx_hidden_Topic
		}
		return ""
	}
	return ""
}

func (x *SubscribeRequest) GetSubscriptionName() string {
	if x != nil {
		if x.xxx_hidden_SubscriptionName != nil {
			return *x.xxx_hidden_SubscriptionName
		}
		return ""
	}
	return ""
}

func (x *SubscribeRequest) GetConsumerGroupId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerGroupId != nil {
			return *x.xxx_hidden_ConsumerGroupId
		}
		return ""
	}
	return ""
}

func (x *SubscribeRequest) GetConsumerId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerId != nil {
			return *x.xxx_hidden_ConsumerId
		}
		return ""
	}
	return ""
}

func (x *SubscribeRequest) GetConfig() *SubscriptionConfiguration {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *SubscribeRequest) GetFilterConfig() *MessageFilterConfig {
	if x != nil {
		return x.xxx_hidden_FilterConfig
	}
	return nil
}

func (x *SubscribeRequest) GetDeliveryConfig() *DeliveryConfiguration {
	if x != nil {
		return x.xxx_hidden_DeliveryConfig
	}
	return nil
}

func (x *SubscribeRequest) GetErrorHandling() *ErrorHandlingConfig {
	if x != nil {
		return x.xxx_hidden_ErrorHandling
	}
	return nil
}

func (x *SubscribeRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *SubscribeRequest) SetTopic(v string) {
	x.xxx_hidden_Topic = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *SubscribeRequest) SetSubscriptionName(v string) {
	x.xxx_hidden_SubscriptionName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *SubscribeRequest) SetConsumerGroupId(v string) {
	x.xxx_hidden_ConsumerGroupId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *SubscribeRequest) SetConsumerId(v string) {
	x.xxx_hidden_ConsumerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *SubscribeRequest) SetConfig(v *SubscriptionConfiguration) {
	x.xxx_hidden_Config = v
}

func (x *SubscribeRequest) SetFilterConfig(v *MessageFilterConfig) {
	x.xxx_hidden_FilterConfig = v
}

func (x *SubscribeRequest) SetDeliveryConfig(v *DeliveryConfiguration) {
	x.xxx_hidden_DeliveryConfig = v
}

func (x *SubscribeRequest) SetErrorHandling(v *ErrorHandlingConfig) {
	x.xxx_hidden_ErrorHandling = v
}

func (x *SubscribeRequest) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *SubscribeRequest) HasTopic() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SubscribeRequest) HasSubscriptionName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SubscribeRequest) HasConsumerGroupId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SubscribeRequest) HasConsumerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SubscribeRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Config != nil
}

func (x *SubscribeRequest) HasFilterConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FilterConfig != nil
}

func (x *SubscribeRequest) HasDeliveryConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DeliveryConfig != nil
}

func (x *SubscribeRequest) HasErrorHandling() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ErrorHandling != nil
}

func (x *SubscribeRequest) ClearTopic() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Topic = nil
}

func (x *SubscribeRequest) ClearSubscriptionName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SubscriptionName = nil
}

func (x *SubscribeRequest) ClearConsumerGroupId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ConsumerGroupId = nil
}

func (x *SubscribeRequest) ClearConsumerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ConsumerId = nil
}

func (x *SubscribeRequest) ClearConfig() {
	x.xxx_hidden_Config = nil
}

func (x *SubscribeRequest) ClearFilterConfig() {
	x.xxx_hidden_FilterConfig = nil
}

func (x *SubscribeRequest) ClearDeliveryConfig() {
	x.xxx_hidden_DeliveryConfig = nil
}

func (x *SubscribeRequest) ClearErrorHandling() {
	x.xxx_hidden_ErrorHandling = nil
}

type SubscribeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Topic or queue to subscribe to
	Topic *string
	// Subscription name/identifier
	SubscriptionName *string
	// Consumer group ID for coordinated consumption
	ConsumerGroupId *string
	// Individual consumer ID
	ConsumerId *string
	// Subscription configuration
	Config *SubscriptionConfiguration
	// Message filtering criteria
	FilterConfig *MessageFilterConfig
	// Delivery configuration
	DeliveryConfig *DeliveryConfiguration
	// Error handling configuration
	ErrorHandling *ErrorHandlingConfig
	// Subscription metadata
	Metadata map[string]string
}

func (b0 SubscribeRequest_builder) Build() *SubscribeRequest {
	m0 := &SubscribeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Topic != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Topic = b.Topic
	}
	if b.SubscriptionName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_SubscriptionName = b.SubscriptionName
	}
	if b.ConsumerGroupId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_ConsumerGroupId = b.ConsumerGroupId
	}
	if b.ConsumerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_ConsumerId = b.ConsumerId
	}
	x.xxx_hidden_Config = b.Config
	x.xxx_hidden_FilterConfig = b.FilterConfig
	x.xxx_hidden_DeliveryConfig = b.DeliveryConfig
	x.xxx_hidden_ErrorHandling = b.ErrorHandling
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Configuration for the subscription
type SubscriptionConfiguration struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AckLevel             AckLevel               `protobuf:"varint,1,opt,name=ack_level,json=ackLevel,enum=gcommon.v1.queue.AckLevel"`
	xxx_hidden_DeliveryMode         DeliveryMode           `protobuf:"varint,2,opt,name=delivery_mode,json=deliveryMode,enum=gcommon.v1.queue.DeliveryMode"`
	xxx_hidden_MaxUnackedMessages   int32                  `protobuf:"varint,3,opt,name=max_unacked_messages,json=maxUnackedMessages"`
	xxx_hidden_AckTimeoutMs         int32                  `protobuf:"varint,4,opt,name=ack_timeout_ms,json=ackTimeoutMs"`
	xxx_hidden_MinPriority          int32                  `protobuf:"varint,5,opt,name=min_priority,json=minPriority"`
	xxx_hidden_OrderedDelivery      bool                   `protobuf:"varint,6,opt,name=ordered_delivery,json=orderedDelivery"`
	xxx_hidden_AutoAcknowledge      bool                   `protobuf:"varint,7,opt,name=auto_acknowledge,json=autoAcknowledge"`
	xxx_hidden_ExpirationSeconds    int64                  `protobuf:"varint,8,opt,name=expiration_seconds,json=expirationSeconds"`
	xxx_hidden_DuplicateDetection   bool                   `protobuf:"varint,9,opt,name=duplicate_detection,json=duplicateDetection"`
	xxx_hidden_MaxMessageAgeSeconds int64                  `protobuf:"varint,10,opt,name=max_message_age_seconds,json=maxMessageAgeSeconds"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *SubscriptionConfiguration) Reset() {
	*x = SubscriptionConfiguration{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionConfiguration) ProtoMessage() {}

func (x *SubscriptionConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SubscriptionConfiguration) GetAckLevel() AckLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_AckLevel
		}
	}
	return AckLevel_ACK_LEVEL_UNSPECIFIED
}

func (x *SubscriptionConfiguration) GetDeliveryMode() DeliveryMode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_DeliveryMode
		}
	}
	return DeliveryMode_DELIVERY_MODE_UNSPECIFIED
}

func (x *SubscriptionConfiguration) GetMaxUnackedMessages() int32 {
	if x != nil {
		return x.xxx_hidden_MaxUnackedMessages
	}
	return 0
}

func (x *SubscriptionConfiguration) GetAckTimeoutMs() int32 {
	if x != nil {
		return x.xxx_hidden_AckTimeoutMs
	}
	return 0
}

func (x *SubscriptionConfiguration) GetMinPriority() int32 {
	if x != nil {
		return x.xxx_hidden_MinPriority
	}
	return 0
}

func (x *SubscriptionConfiguration) GetOrderedDelivery() bool {
	if x != nil {
		return x.xxx_hidden_OrderedDelivery
	}
	return false
}

func (x *SubscriptionConfiguration) GetAutoAcknowledge() bool {
	if x != nil {
		return x.xxx_hidden_AutoAcknowledge
	}
	return false
}

func (x *SubscriptionConfiguration) GetExpirationSeconds() int64 {
	if x != nil {
		return x.xxx_hidden_ExpirationSeconds
	}
	return 0
}

func (x *SubscriptionConfiguration) GetDuplicateDetection() bool {
	if x != nil {
		return x.xxx_hidden_DuplicateDetection
	}
	return false
}

func (x *SubscriptionConfiguration) GetMaxMessageAgeSeconds() int64 {
	if x != nil {
		return x.xxx_hidden_MaxMessageAgeSeconds
	}
	return 0
}

func (x *SubscriptionConfiguration) SetAckLevel(v AckLevel) {
	x.xxx_hidden_AckLevel = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *SubscriptionConfiguration) SetDeliveryMode(v DeliveryMode) {
	x.xxx_hidden_DeliveryMode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *SubscriptionConfiguration) SetMaxUnackedMessages(v int32) {
	x.xxx_hidden_MaxUnackedMessages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *SubscriptionConfiguration) SetAckTimeoutMs(v int32) {
	x.xxx_hidden_AckTimeoutMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *SubscriptionConfiguration) SetMinPriority(v int32) {
	x.xxx_hidden_MinPriority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *SubscriptionConfiguration) SetOrderedDelivery(v bool) {
	x.xxx_hidden_OrderedDelivery = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *SubscriptionConfiguration) SetAutoAcknowledge(v bool) {
	x.xxx_hidden_AutoAcknowledge = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *SubscriptionConfiguration) SetExpirationSeconds(v int64) {
	x.xxx_hidden_ExpirationSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 10)
}

func (x *SubscriptionConfiguration) SetDuplicateDetection(v bool) {
	x.xxx_hidden_DuplicateDetection = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
}

func (x *SubscriptionConfiguration) SetMaxMessageAgeSeconds(v int64) {
	x.xxx_hidden_MaxMessageAgeSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *SubscriptionConfiguration) HasAckLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SubscriptionConfiguration) HasDeliveryMode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SubscriptionConfiguration) HasMaxUnackedMessages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SubscriptionConfiguration) HasAckTimeoutMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SubscriptionConfiguration) HasMinPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *SubscriptionConfiguration) HasOrderedDelivery() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *SubscriptionConfiguration) HasAutoAcknowledge() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *SubscriptionConfiguration) HasExpirationSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *SubscriptionConfiguration) HasDuplicateDetection() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *SubscriptionConfiguration) HasMaxMessageAgeSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *SubscriptionConfiguration) ClearAckLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_AckLevel = AckLevel_ACK_LEVEL_UNSPECIFIED
}

func (x *SubscriptionConfiguration) ClearDeliveryMode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DeliveryMode = DeliveryMode_DELIVERY_MODE_UNSPECIFIED
}

func (x *SubscriptionConfiguration) ClearMaxUnackedMessages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxUnackedMessages = 0
}

func (x *SubscriptionConfiguration) ClearAckTimeoutMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_AckTimeoutMs = 0
}

func (x *SubscriptionConfiguration) ClearMinPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MinPriority = 0
}

func (x *SubscriptionConfiguration) ClearOrderedDelivery() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_OrderedDelivery = false
}

func (x *SubscriptionConfiguration) ClearAutoAcknowledge() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_AutoAcknowledge = false
}

func (x *SubscriptionConfiguration) ClearExpirationSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ExpirationSeconds = 0
}

func (x *SubscriptionConfiguration) ClearDuplicateDetection() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_DuplicateDetection = false
}

func (x *SubscriptionConfiguration) ClearMaxMessageAgeSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_MaxMessageAgeSeconds = 0
}

type SubscriptionConfiguration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Acknowledgment level required
	AckLevel *AckLevel
	// Delivery mode for messages
	DeliveryMode *DeliveryMode
	// Maximum number of unacknowledged messages
	MaxUnackedMessages *int32
	// Acknowledgment timeout (milliseconds)
	AckTimeoutMs *int32
	// Message priority filter (minimum priority)
	MinPriority *int32
	// Enable message ordering
	OrderedDelivery *bool
	// Auto-acknowledge messages after delivery
	AutoAcknowledge *bool
	// Subscription expiration time (seconds, 0 = no expiration)
	ExpirationSeconds *int64
	// Enable duplicate message detection
	DuplicateDetection *bool
	// Maximum message age to accept (seconds)
	MaxMessageAgeSeconds *int64
}

func (b0 SubscriptionConfiguration_builder) Build() *SubscriptionConfiguration {
	m0 := &SubscriptionConfiguration{}
	b, x := &b0, m0
	_, _ = b, x
	if b.AckLevel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_AckLevel = *b.AckLevel
	}
	if b.DeliveryMode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_DeliveryMode = *b.DeliveryMode
	}
	if b.MaxUnackedMessages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_MaxUnackedMessages = *b.MaxUnackedMessages
	}
	if b.AckTimeoutMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_AckTimeoutMs = *b.AckTimeoutMs
	}
	if b.MinPriority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_MinPriority = *b.MinPriority
	}
	if b.OrderedDelivery != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_OrderedDelivery = *b.OrderedDelivery
	}
	if b.AutoAcknowledge != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_AutoAcknowledge = *b.AutoAcknowledge
	}
	if b.ExpirationSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 10)
		x.xxx_hidden_ExpirationSeconds = *b.ExpirationSeconds
	}
	if b.DuplicateDetection != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_DuplicateDetection = *b.DuplicateDetection
	}
	if b.MaxMessageAgeSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_MaxMessageAgeSeconds = *b.MaxMessageAgeSeconds
	}
	return m0
}

// Message filtering configuration
type MessageFilterConfig struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_HeaderFilters      map[string]string      `protobuf:"bytes,1,rep,name=header_filters,json=headerFilters" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_ContentFilters     *[]*ContentFilter      `protobuf:"bytes,2,rep,name=content_filters,json=contentFilters"`
	xxx_hidden_RoutingKeyPatterns []string               `protobuf:"bytes,3,rep,name=routing_key_patterns,json=routingKeyPatterns"`
	xxx_hidden_MessageTypes       []string               `protobuf:"bytes,4,rep,name=message_types,json=messageTypes"`
	xxx_hidden_FilterExpressions  []string               `protobuf:"bytes,5,rep,name=filter_expressions,json=filterExpressions"`
	xxx_hidden_ExcludeMatching    bool                   `protobuf:"varint,6,opt,name=exclude_matching,json=excludeMatching"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *MessageFilterConfig) Reset() {
	*x = MessageFilterConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageFilterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageFilterConfig) ProtoMessage() {}

func (x *MessageFilterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MessageFilterConfig) GetHeaderFilters() map[string]string {
	if x != nil {
		return x.xxx_hidden_HeaderFilters
	}
	return nil
}

func (x *MessageFilterConfig) GetContentFilters() []*ContentFilter {
	if x != nil {
		if x.xxx_hidden_ContentFilters != nil {
			return *x.xxx_hidden_ContentFilters
		}
	}
	return nil
}

func (x *MessageFilterConfig) GetRoutingKeyPatterns() []string {
	if x != nil {
		return x.xxx_hidden_RoutingKeyPatterns
	}
	return nil
}

func (x *MessageFilterConfig) GetMessageTypes() []string {
	if x != nil {
		return x.xxx_hidden_MessageTypes
	}
	return nil
}

func (x *MessageFilterConfig) GetFilterExpressions() []string {
	if x != nil {
		return x.xxx_hidden_FilterExpressions
	}
	return nil
}

func (x *MessageFilterConfig) GetExcludeMatching() bool {
	if x != nil {
		return x.xxx_hidden_ExcludeMatching
	}
	return false
}

func (x *MessageFilterConfig) SetHeaderFilters(v map[string]string) {
	x.xxx_hidden_HeaderFilters = v
}

func (x *MessageFilterConfig) SetContentFilters(v []*ContentFilter) {
	x.xxx_hidden_ContentFilters = &v
}

func (x *MessageFilterConfig) SetRoutingKeyPatterns(v []string) {
	x.xxx_hidden_RoutingKeyPatterns = v
}

func (x *MessageFilterConfig) SetMessageTypes(v []string) {
	x.xxx_hidden_MessageTypes = v
}

func (x *MessageFilterConfig) SetFilterExpressions(v []string) {
	x.xxx_hidden_FilterExpressions = v
}

func (x *MessageFilterConfig) SetExcludeMatching(v bool) {
	x.xxx_hidden_ExcludeMatching = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *MessageFilterConfig) HasExcludeMatching() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *MessageFilterConfig) ClearExcludeMatching() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ExcludeMatching = false
}

type MessageFilterConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Header-based filters
	HeaderFilters map[string]string
	// Content-based filters
	ContentFilters []*ContentFilter
	// Routing key patterns
	RoutingKeyPatterns []string
	// Message type filters
	MessageTypes []string
	// Custom filter expressions
	FilterExpressions []string
	// Exclude messages matching these criteria
	ExcludeMatching *bool
}

func (b0 MessageFilterConfig_builder) Build() *MessageFilterConfig {
	m0 := &MessageFilterConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_HeaderFilters = b.HeaderFilters
	x.xxx_hidden_ContentFilters = &b.ContentFilters
	x.xxx_hidden_RoutingKeyPatterns = b.RoutingKeyPatterns
	x.xxx_hidden_MessageTypes = b.MessageTypes
	x.xxx_hidden_FilterExpressions = b.FilterExpressions
	if b.ExcludeMatching != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_ExcludeMatching = *b.ExcludeMatching
	}
	return m0
}

// Content-based message filter
type ContentFilter struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FieldPath     *string                `protobuf:"bytes,1,opt,name=field_path,json=fieldPath"`
	xxx_hidden_Operator      *string                `protobuf:"bytes,2,opt,name=operator"`
	xxx_hidden_Value         *string                `protobuf:"bytes,3,opt,name=value"`
	xxx_hidden_CaseSensitive bool                   `protobuf:"varint,4,opt,name=case_sensitive,json=caseSensitive"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ContentFilter) Reset() {
	*x = ContentFilter{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentFilter) ProtoMessage() {}

func (x *ContentFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ContentFilter) GetFieldPath() string {
	if x != nil {
		if x.xxx_hidden_FieldPath != nil {
			return *x.xxx_hidden_FieldPath
		}
		return ""
	}
	return ""
}

func (x *ContentFilter) GetOperator() string {
	if x != nil {
		if x.xxx_hidden_Operator != nil {
			return *x.xxx_hidden_Operator
		}
		return ""
	}
	return ""
}

func (x *ContentFilter) GetValue() string {
	if x != nil {
		if x.xxx_hidden_Value != nil {
			return *x.xxx_hidden_Value
		}
		return ""
	}
	return ""
}

func (x *ContentFilter) GetCaseSensitive() bool {
	if x != nil {
		return x.xxx_hidden_CaseSensitive
	}
	return false
}

func (x *ContentFilter) SetFieldPath(v string) {
	x.xxx_hidden_FieldPath = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ContentFilter) SetOperator(v string) {
	x.xxx_hidden_Operator = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ContentFilter) SetValue(v string) {
	x.xxx_hidden_Value = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ContentFilter) SetCaseSensitive(v bool) {
	x.xxx_hidden_CaseSensitive = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ContentFilter) HasFieldPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ContentFilter) HasOperator() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ContentFilter) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ContentFilter) HasCaseSensitive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ContentFilter) ClearFieldPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FieldPath = nil
}

func (x *ContentFilter) ClearOperator() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Operator = nil
}

func (x *ContentFilter) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Value = nil
}

func (x *ContentFilter) ClearCaseSensitive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CaseSensitive = false
}

type ContentFilter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// JSON path or field name
	FieldPath *string
	// Filter operator (equals, contains, regex, gt, lt, etc.)
	Operator *string
	// Filter value
	Value *string
	// Case sensitive matching
	CaseSensitive *bool
}

func (b0 ContentFilter_builder) Build() *ContentFilter {
	m0 := &ContentFilter{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FieldPath != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_FieldPath = b.FieldPath
	}
	if b.Operator != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Operator = b.Operator
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Value = b.Value
	}
	if b.CaseSensitive != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_CaseSensitive = *b.CaseSensitive
	}
	return m0
}

// Delivery configuration for the subscription
type DeliveryConfiguration struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PushEndpoint      *string                `protobuf:"bytes,1,opt,name=push_endpoint,json=pushEndpoint"`
	xxx_hidden_DeliveryTimeoutMs int32                  `protobuf:"varint,2,opt,name=delivery_timeout_ms,json=deliveryTimeoutMs"`
	xxx_hidden_RetryConfig       *DeliveryRetryConfig   `protobuf:"bytes,3,opt,name=retry_config,json=retryConfig"`
	xxx_hidden_BatchConfig       *BatchDeliveryConfig   `protobuf:"bytes,4,opt,name=batch_config,json=batchConfig"`
	xxx_hidden_FlowControl       *FlowControlSettings   `protobuf:"bytes,5,opt,name=flow_control,json=flowControl"`
	xxx_hidden_EnableCompression bool                   `protobuf:"varint,6,opt,name=enable_compression,json=enableCompression"`
	xxx_hidden_AuthHeaders       map[string]string      `protobuf:"bytes,7,rep,name=auth_headers,json=authHeaders" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *DeliveryConfiguration) Reset() {
	*x = DeliveryConfiguration{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliveryConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryConfiguration) ProtoMessage() {}

func (x *DeliveryConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeliveryConfiguration) GetPushEndpoint() string {
	if x != nil {
		if x.xxx_hidden_PushEndpoint != nil {
			return *x.xxx_hidden_PushEndpoint
		}
		return ""
	}
	return ""
}

func (x *DeliveryConfiguration) GetDeliveryTimeoutMs() int32 {
	if x != nil {
		return x.xxx_hidden_DeliveryTimeoutMs
	}
	return 0
}

func (x *DeliveryConfiguration) GetRetryConfig() *DeliveryRetryConfig {
	if x != nil {
		return x.xxx_hidden_RetryConfig
	}
	return nil
}

func (x *DeliveryConfiguration) GetBatchConfig() *BatchDeliveryConfig {
	if x != nil {
		return x.xxx_hidden_BatchConfig
	}
	return nil
}

func (x *DeliveryConfiguration) GetFlowControl() *FlowControlSettings {
	if x != nil {
		return x.xxx_hidden_FlowControl
	}
	return nil
}

func (x *DeliveryConfiguration) GetEnableCompression() bool {
	if x != nil {
		return x.xxx_hidden_EnableCompression
	}
	return false
}

func (x *DeliveryConfiguration) GetAuthHeaders() map[string]string {
	if x != nil {
		return x.xxx_hidden_AuthHeaders
	}
	return nil
}

func (x *DeliveryConfiguration) SetPushEndpoint(v string) {
	x.xxx_hidden_PushEndpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *DeliveryConfiguration) SetDeliveryTimeoutMs(v int32) {
	x.xxx_hidden_DeliveryTimeoutMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *DeliveryConfiguration) SetRetryConfig(v *DeliveryRetryConfig) {
	x.xxx_hidden_RetryConfig = v
}

func (x *DeliveryConfiguration) SetBatchConfig(v *BatchDeliveryConfig) {
	x.xxx_hidden_BatchConfig = v
}

func (x *DeliveryConfiguration) SetFlowControl(v *FlowControlSettings) {
	x.xxx_hidden_FlowControl = v
}

func (x *DeliveryConfiguration) SetEnableCompression(v bool) {
	x.xxx_hidden_EnableCompression = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *DeliveryConfiguration) SetAuthHeaders(v map[string]string) {
	x.xxx_hidden_AuthHeaders = v
}

func (x *DeliveryConfiguration) HasPushEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeliveryConfiguration) HasDeliveryTimeoutMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeliveryConfiguration) HasRetryConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RetryConfig != nil
}

func (x *DeliveryConfiguration) HasBatchConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BatchConfig != nil
}

func (x *DeliveryConfiguration) HasFlowControl() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FlowControl != nil
}

func (x *DeliveryConfiguration) HasEnableCompression() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DeliveryConfiguration) ClearPushEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PushEndpoint = nil
}

func (x *DeliveryConfiguration) ClearDeliveryTimeoutMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DeliveryTimeoutMs = 0
}

func (x *DeliveryConfiguration) ClearRetryConfig() {
	x.xxx_hidden_RetryConfig = nil
}

func (x *DeliveryConfiguration) ClearBatchConfig() {
	x.xxx_hidden_BatchConfig = nil
}

func (x *DeliveryConfiguration) ClearFlowControl() {
	x.xxx_hidden_FlowControl = nil
}

func (x *DeliveryConfiguration) ClearEnableCompression() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_EnableCompression = false
}

type DeliveryConfiguration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Delivery endpoint (for push subscriptions)
	PushEndpoint *string
	// Delivery timeout (milliseconds)
	DeliveryTimeoutMs *int32
	// Retry configuration for failed deliveries
	RetryConfig *DeliveryRetryConfig
	// Batch delivery settings
	BatchConfig *BatchDeliveryConfig
	// Flow control settings
	FlowControl *FlowControlSettings
	// Enable compression for delivery
	EnableCompression *bool
	// Authentication for push endpoints
	AuthHeaders map[string]string
}

func (b0 DeliveryConfiguration_builder) Build() *DeliveryConfiguration {
	m0 := &DeliveryConfiguration{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PushEndpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_PushEndpoint = b.PushEndpoint
	}
	if b.DeliveryTimeoutMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_DeliveryTimeoutMs = *b.DeliveryTimeoutMs
	}
	x.xxx_hidden_RetryConfig = b.RetryConfig
	x.xxx_hidden_BatchConfig = b.BatchConfig
	x.xxx_hidden_FlowControl = b.FlowControl
	if b.EnableCompression != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_EnableCompression = *b.EnableCompression
	}
	x.xxx_hidden_AuthHeaders = b.AuthHeaders
	return m0
}

// Retry configuration for delivery failures
type DeliveryRetryConfig struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled           bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_MaxRetries        int32                  `protobuf:"varint,2,opt,name=max_retries,json=maxRetries"`
	xxx_hidden_InitialDelayMs    int32                  `protobuf:"varint,3,opt,name=initial_delay_ms,json=initialDelayMs"`
	xxx_hidden_MaxDelayMs        int32                  `protobuf:"varint,4,opt,name=max_delay_ms,json=maxDelayMs"`
	xxx_hidden_BackoffMultiplier float64                `protobuf:"fixed64,5,opt,name=backoff_multiplier,json=backoffMultiplier"`
	xxx_hidden_RetryErrorCodes   []string               `protobuf:"bytes,6,rep,name=retry_error_codes,json=retryErrorCodes"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *DeliveryRetryConfig) Reset() {
	*x = DeliveryRetryConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliveryRetryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryRetryConfig) ProtoMessage() {}

func (x *DeliveryRetryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeliveryRetryConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *DeliveryRetryConfig) GetMaxRetries() int32 {
	if x != nil {
		return x.xxx_hidden_MaxRetries
	}
	return 0
}

func (x *DeliveryRetryConfig) GetInitialDelayMs() int32 {
	if x != nil {
		return x.xxx_hidden_InitialDelayMs
	}
	return 0
}

func (x *DeliveryRetryConfig) GetMaxDelayMs() int32 {
	if x != nil {
		return x.xxx_hidden_MaxDelayMs
	}
	return 0
}

func (x *DeliveryRetryConfig) GetBackoffMultiplier() float64 {
	if x != nil {
		return x.xxx_hidden_BackoffMultiplier
	}
	return 0
}

func (x *DeliveryRetryConfig) GetRetryErrorCodes() []string {
	if x != nil {
		return x.xxx_hidden_RetryErrorCodes
	}
	return nil
}

func (x *DeliveryRetryConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *DeliveryRetryConfig) SetMaxRetries(v int32) {
	x.xxx_hidden_MaxRetries = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *DeliveryRetryConfig) SetInitialDelayMs(v int32) {
	x.xxx_hidden_InitialDelayMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *DeliveryRetryConfig) SetMaxDelayMs(v int32) {
	x.xxx_hidden_MaxDelayMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *DeliveryRetryConfig) SetBackoffMultiplier(v float64) {
	x.xxx_hidden_BackoffMultiplier = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *DeliveryRetryConfig) SetRetryErrorCodes(v []string) {
	x.xxx_hidden_RetryErrorCodes = v
}

func (x *DeliveryRetryConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeliveryRetryConfig) HasMaxRetries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeliveryRetryConfig) HasInitialDelayMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeliveryRetryConfig) HasMaxDelayMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeliveryRetryConfig) HasBackoffMultiplier() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DeliveryRetryConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *DeliveryRetryConfig) ClearMaxRetries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxRetries = 0
}

func (x *DeliveryRetryConfig) ClearInitialDelayMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_InitialDelayMs = 0
}

func (x *DeliveryRetryConfig) ClearMaxDelayMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MaxDelayMs = 0
}

func (x *DeliveryRetryConfig) ClearBackoffMultiplier() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_BackoffMultiplier = 0
}

type DeliveryRetryConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable retry on delivery failures
	Enabled *bool
	// Maximum retry attempts
	MaxRetries *int32
	// Initial retry delay (milliseconds)
	InitialDelayMs *int32
	// Maximum retry delay (milliseconds)
	MaxDelayMs *int32
	// Backoff multiplier
	BackoffMultiplier *float64
	// Retry only for specific error codes
	RetryErrorCodes []string
}

func (b0 DeliveryRetryConfig_builder) Build() *DeliveryRetryConfig {
	m0 := &DeliveryRetryConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.MaxRetries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_MaxRetries = *b.MaxRetries
	}
	if b.InitialDelayMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_InitialDelayMs = *b.InitialDelayMs
	}
	if b.MaxDelayMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_MaxDelayMs = *b.MaxDelayMs
	}
	if b.BackoffMultiplier != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_BackoffMultiplier = *b.BackoffMultiplier
	}
	x.xxx_hidden_RetryErrorCodes = b.RetryErrorCodes
	return m0
}

// Batch delivery configuration
type BatchDeliveryConfig struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled        bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_MaxBatchSize   int32                  `protobuf:"varint,2,opt,name=max_batch_size,json=maxBatchSize"`
	xxx_hidden_MaxBatchBytes  int64                  `protobuf:"varint,3,opt,name=max_batch_bytes,json=maxBatchBytes"`
	xxx_hidden_BatchTimeoutMs int32                  `protobuf:"varint,4,opt,name=batch_timeout_ms,json=batchTimeoutMs"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *BatchDeliveryConfig) Reset() {
	*x = BatchDeliveryConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeliveryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeliveryConfig) ProtoMessage() {}

func (x *BatchDeliveryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatchDeliveryConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *BatchDeliveryConfig) GetMaxBatchSize() int32 {
	if x != nil {
		return x.xxx_hidden_MaxBatchSize
	}
	return 0
}

func (x *BatchDeliveryConfig) GetMaxBatchBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MaxBatchBytes
	}
	return 0
}

func (x *BatchDeliveryConfig) GetBatchTimeoutMs() int32 {
	if x != nil {
		return x.xxx_hidden_BatchTimeoutMs
	}
	return 0
}

func (x *BatchDeliveryConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *BatchDeliveryConfig) SetMaxBatchSize(v int32) {
	x.xxx_hidden_MaxBatchSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *BatchDeliveryConfig) SetMaxBatchBytes(v int64) {
	x.xxx_hidden_MaxBatchBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *BatchDeliveryConfig) SetBatchTimeoutMs(v int32) {
	x.xxx_hidden_BatchTimeoutMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *BatchDeliveryConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BatchDeliveryConfig) HasMaxBatchSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *BatchDeliveryConfig) HasMaxBatchBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *BatchDeliveryConfig) HasBatchTimeoutMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *BatchDeliveryConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *BatchDeliveryConfig) ClearMaxBatchSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxBatchSize = 0
}

func (x *BatchDeliveryConfig) ClearMaxBatchBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxBatchBytes = 0
}

func (x *BatchDeliveryConfig) ClearBatchTimeoutMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_BatchTimeoutMs = 0
}

type BatchDeliveryConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable batch delivery
	Enabled *bool
	// Maximum messages per batch
	MaxBatchSize *int32
	// Maximum batch size in bytes
	MaxBatchBytes *int64
	// Maximum time to wait for batch completion (milliseconds)
	BatchTimeoutMs *int32
}

func (b0 BatchDeliveryConfig_builder) Build() *BatchDeliveryConfig {
	m0 := &BatchDeliveryConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.MaxBatchSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_MaxBatchSize = *b.MaxBatchSize
	}
	if b.MaxBatchBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_MaxBatchBytes = *b.MaxBatchBytes
	}
	if b.BatchTimeoutMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_BatchTimeoutMs = *b.BatchTimeoutMs
	}
	return m0
}

// Flow control settings
type FlowControlSettings struct {
	state                             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MaxOutstandingMessages int32                  `protobuf:"varint,1,opt,name=max_outstanding_messages,json=maxOutstandingMessages"`
	xxx_hidden_MaxOutstandingBytes    int64                  `protobuf:"varint,2,opt,name=max_outstanding_bytes,json=maxOutstandingBytes"`
	xxx_hidden_Algorithm              *string                `protobuf:"bytes,3,opt,name=algorithm"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *FlowControlSettings) Reset() {
	*x = FlowControlSettings{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlowControlSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowControlSettings) ProtoMessage() {}

func (x *FlowControlSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FlowControlSettings) GetMaxOutstandingMessages() int32 {
	if x != nil {
		return x.xxx_hidden_MaxOutstandingMessages
	}
	return 0
}

func (x *FlowControlSettings) GetMaxOutstandingBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MaxOutstandingBytes
	}
	return 0
}

func (x *FlowControlSettings) GetAlgorithm() string {
	if x != nil {
		if x.xxx_hidden_Algorithm != nil {
			return *x.xxx_hidden_Algorithm
		}
		return ""
	}
	return ""
}

func (x *FlowControlSettings) SetMaxOutstandingMessages(v int32) {
	x.xxx_hidden_MaxOutstandingMessages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *FlowControlSettings) SetMaxOutstandingBytes(v int64) {
	x.xxx_hidden_MaxOutstandingBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *FlowControlSettings) SetAlgorithm(v string) {
	x.xxx_hidden_Algorithm = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *FlowControlSettings) HasMaxOutstandingMessages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FlowControlSettings) HasMaxOutstandingBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FlowControlSettings) HasAlgorithm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FlowControlSettings) ClearMaxOutstandingMessages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MaxOutstandingMessages = 0
}

func (x *FlowControlSettings) ClearMaxOutstandingBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxOutstandingBytes = 0
}

func (x *FlowControlSettings) ClearAlgorithm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Algorithm = nil
}

type FlowControlSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum outstanding messages
	MaxOutstandingMessages *int32
	// Maximum outstanding bytes
	MaxOutstandingBytes *int64
	// Flow control algorithm
	Algorithm *string
}

func (b0 FlowControlSettings_builder) Build() *FlowControlSettings {
	m0 := &FlowControlSettings{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MaxOutstandingMessages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_MaxOutstandingMessages = *b.MaxOutstandingMessages
	}
	if b.MaxOutstandingBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_MaxOutstandingBytes = *b.MaxOutstandingBytes
	}
	if b.Algorithm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Algorithm = b.Algorithm
	}
	return m0
}

// Error handling configuration
type ErrorHandlingConfig struct {
	state                          protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_DlqConfig           *DeadLetterQueueConfig   `protobuf:"bytes,1,opt,name=dlq_config,json=dlqConfig"`
	xxx_hidden_MaxDeliveryAttempts int32                    `protobuf:"varint,2,opt,name=max_delivery_attempts,json=maxDeliveryAttempts"`
	xxx_hidden_ErrorActions        *[]*ErrorActionConfig    `protobuf:"bytes,3,rep,name=error_actions,json=errorActions"`
	xxx_hidden_EnableErrorLogging  bool                     `protobuf:"varint,4,opt,name=enable_error_logging,json=enableErrorLogging"`
	xxx_hidden_NotificationConfig  *ErrorNotificationConfig `protobuf:"bytes,5,opt,name=notification_config,json=notificationConfig"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ErrorHandlingConfig) Reset() {
	*x = ErrorHandlingConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorHandlingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorHandlingConfig) ProtoMessage() {}

func (x *ErrorHandlingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorHandlingConfig) GetDlqConfig() *DeadLetterQueueConfig {
	if x != nil {
		return x.xxx_hidden_DlqConfig
	}
	return nil
}

func (x *ErrorHandlingConfig) GetMaxDeliveryAttempts() int32 {
	if x != nil {
		return x.xxx_hidden_MaxDeliveryAttempts
	}
	return 0
}

func (x *ErrorHandlingConfig) GetErrorActions() []*ErrorActionConfig {
	if x != nil {
		if x.xxx_hidden_ErrorActions != nil {
			return *x.xxx_hidden_ErrorActions
		}
	}
	return nil
}

func (x *ErrorHandlingConfig) GetEnableErrorLogging() bool {
	if x != nil {
		return x.xxx_hidden_EnableErrorLogging
	}
	return false
}

func (x *ErrorHandlingConfig) GetNotificationConfig() *ErrorNotificationConfig {
	if x != nil {
		return x.xxx_hidden_NotificationConfig
	}
	return nil
}

func (x *ErrorHandlingConfig) SetDlqConfig(v *DeadLetterQueueConfig) {
	x.xxx_hidden_DlqConfig = v
}

func (x *ErrorHandlingConfig) SetMaxDeliveryAttempts(v int32) {
	x.xxx_hidden_MaxDeliveryAttempts = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ErrorHandlingConfig) SetErrorActions(v []*ErrorActionConfig) {
	x.xxx_hidden_ErrorActions = &v
}

func (x *ErrorHandlingConfig) SetEnableErrorLogging(v bool) {
	x.xxx_hidden_EnableErrorLogging = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ErrorHandlingConfig) SetNotificationConfig(v *ErrorNotificationConfig) {
	x.xxx_hidden_NotificationConfig = v
}

func (x *ErrorHandlingConfig) HasDlqConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DlqConfig != nil
}

func (x *ErrorHandlingConfig) HasMaxDeliveryAttempts() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ErrorHandlingConfig) HasEnableErrorLogging() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ErrorHandlingConfig) HasNotificationConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_NotificationConfig != nil
}

func (x *ErrorHandlingConfig) ClearDlqConfig() {
	x.xxx_hidden_DlqConfig = nil
}

func (x *ErrorHandlingConfig) ClearMaxDeliveryAttempts() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxDeliveryAttempts = 0
}

func (x *ErrorHandlingConfig) ClearEnableErrorLogging() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EnableErrorLogging = false
}

func (x *ErrorHandlingConfig) ClearNotificationConfig() {
	x.xxx_hidden_NotificationConfig = nil
}

type ErrorHandlingConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Dead letter queue configuration
	DlqConfig *DeadLetterQueueConfig
	// Maximum delivery attempts before DLQ
	MaxDeliveryAttempts *int32
	// Actions to take on specific errors
	ErrorActions []*ErrorActionConfig
	// Enable error logging
	EnableErrorLogging *bool
	// Error notification settings
	NotificationConfig *ErrorNotificationConfig
}

func (b0 ErrorHandlingConfig_builder) Build() *ErrorHandlingConfig {
	m0 := &ErrorHandlingConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DlqConfig = b.DlqConfig
	if b.MaxDeliveryAttempts != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_MaxDeliveryAttempts = *b.MaxDeliveryAttempts
	}
	x.xxx_hidden_ErrorActions = &b.ErrorActions
	if b.EnableErrorLogging != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_EnableErrorLogging = *b.EnableErrorLogging
	}
	x.xxx_hidden_NotificationConfig = b.NotificationConfig
	return m0
}

// Dead letter queue configuration
type DeadLetterQueueConfig struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled          bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_DlqTopic         *string                `protobuf:"bytes,2,opt,name=dlq_topic,json=dlqTopic"`
	xxx_hidden_DlqMaxAgeSeconds int64                  `protobuf:"varint,3,opt,name=dlq_max_age_seconds,json=dlqMaxAgeSeconds"`
	xxx_hidden_IncludeErrorInfo bool                   `protobuf:"varint,4,opt,name=include_error_info,json=includeErrorInfo"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *DeadLetterQueueConfig) Reset() {
	*x = DeadLetterQueueConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeadLetterQueueConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeadLetterQueueConfig) ProtoMessage() {}

func (x *DeadLetterQueueConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeadLetterQueueConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *DeadLetterQueueConfig) GetDlqTopic() string {
	if x != nil {
		if x.xxx_hidden_DlqTopic != nil {
			return *x.xxx_hidden_DlqTopic
		}
		return ""
	}
	return ""
}

func (x *DeadLetterQueueConfig) GetDlqMaxAgeSeconds() int64 {
	if x != nil {
		return x.xxx_hidden_DlqMaxAgeSeconds
	}
	return 0
}

func (x *DeadLetterQueueConfig) GetIncludeErrorInfo() bool {
	if x != nil {
		return x.xxx_hidden_IncludeErrorInfo
	}
	return false
}

func (x *DeadLetterQueueConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeadLetterQueueConfig) SetDlqTopic(v string) {
	x.xxx_hidden_DlqTopic = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeadLetterQueueConfig) SetDlqMaxAgeSeconds(v int64) {
	x.xxx_hidden_DlqMaxAgeSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeadLetterQueueConfig) SetIncludeErrorInfo(v bool) {
	x.xxx_hidden_IncludeErrorInfo = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeadLetterQueueConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeadLetterQueueConfig) HasDlqTopic() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeadLetterQueueConfig) HasDlqMaxAgeSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeadLetterQueueConfig) HasIncludeErrorInfo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeadLetterQueueConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *DeadLetterQueueConfig) ClearDlqTopic() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DlqTopic = nil
}

func (x *DeadLetterQueueConfig) ClearDlqMaxAgeSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DlqMaxAgeSeconds = 0
}

func (x *DeadLetterQueueConfig) ClearIncludeErrorInfo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_IncludeErrorInfo = false
}

type DeadLetterQueueConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable dead letter queue
	Enabled *bool
	// Dead letter queue topic
	DlqTopic *string
	// Maximum message age in DLQ (seconds)
	DlqMaxAgeSeconds *int64
	// Include original error information
	IncludeErrorInfo *bool
}

func (b0 DeadLetterQueueConfig_builder) Build() *DeadLetterQueueConfig {
	m0 := &DeadLetterQueueConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.DlqTopic != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_DlqTopic = b.DlqTopic
	}
	if b.DlqMaxAgeSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_DlqMaxAgeSeconds = *b.DlqMaxAgeSeconds
	}
	if b.IncludeErrorInfo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_IncludeErrorInfo = *b.IncludeErrorInfo
	}
	return m0
}

// Error action configuration
type ErrorActionConfig struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ErrorPattern *string                `protobuf:"bytes,1,opt,name=error_pattern,json=errorPattern"`
	xxx_hidden_Action       *string                `protobuf:"bytes,2,opt,name=action"`
	xxx_hidden_ActionParams map[string]string      `protobuf:"bytes,3,rep,name=action_params,json=actionParams" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ErrorActionConfig) Reset() {
	*x = ErrorActionConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorActionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorActionConfig) ProtoMessage() {}

func (x *ErrorActionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorActionConfig) GetErrorPattern() string {
	if x != nil {
		if x.xxx_hidden_ErrorPattern != nil {
			return *x.xxx_hidden_ErrorPattern
		}
		return ""
	}
	return ""
}

func (x *ErrorActionConfig) GetAction() string {
	if x != nil {
		if x.xxx_hidden_Action != nil {
			return *x.xxx_hidden_Action
		}
		return ""
	}
	return ""
}

func (x *ErrorActionConfig) GetActionParams() map[string]string {
	if x != nil {
		return x.xxx_hidden_ActionParams
	}
	return nil
}

func (x *ErrorActionConfig) SetErrorPattern(v string) {
	x.xxx_hidden_ErrorPattern = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ErrorActionConfig) SetAction(v string) {
	x.xxx_hidden_Action = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ErrorActionConfig) SetActionParams(v map[string]string) {
	x.xxx_hidden_ActionParams = v
}

func (x *ErrorActionConfig) HasErrorPattern() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ErrorActionConfig) HasAction() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ErrorActionConfig) ClearErrorPattern() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ErrorPattern = nil
}

func (x *ErrorActionConfig) ClearAction() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Action = nil
}

type ErrorActionConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Error code or pattern
	ErrorPattern *string
	// Action to take (retry, dlq, drop, pause)
	Action *string
	// Action parameters
	ActionParams map[string]string
}

func (b0 ErrorActionConfig_builder) Build() *ErrorActionConfig {
	m0 := &ErrorActionConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ErrorPattern != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ErrorPattern = b.ErrorPattern
	}
	if b.Action != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Action = b.Action
	}
	x.xxx_hidden_ActionParams = b.ActionParams
	return m0
}

// Error notification configuration
type ErrorNotificationConfig struct {
	state                                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled                      bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_NotificationChannels         []string               `protobuf:"bytes,2,rep,name=notification_channels,json=notificationChannels"`
	xxx_hidden_ErrorThreshold               int32                  `protobuf:"varint,3,opt,name=error_threshold,json=errorThreshold"`
	xxx_hidden_NotificationFrequencySeconds int32                  `protobuf:"varint,4,opt,name=notification_frequency_seconds,json=notificationFrequencySeconds"`
	XXX_raceDetectHookData                  protoimpl.RaceDetectHookData
	XXX_presence                            [1]uint32
	unknownFields                           protoimpl.UnknownFields
	sizeCache                               protoimpl.SizeCache
}

func (x *ErrorNotificationConfig) Reset() {
	*x = ErrorNotificationConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorNotificationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorNotificationConfig) ProtoMessage() {}

func (x *ErrorNotificationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorNotificationConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *ErrorNotificationConfig) GetNotificationChannels() []string {
	if x != nil {
		return x.xxx_hidden_NotificationChannels
	}
	return nil
}

func (x *ErrorNotificationConfig) GetErrorThreshold() int32 {
	if x != nil {
		return x.xxx_hidden_ErrorThreshold
	}
	return 0
}

func (x *ErrorNotificationConfig) GetNotificationFrequencySeconds() int32 {
	if x != nil {
		return x.xxx_hidden_NotificationFrequencySeconds
	}
	return 0
}

func (x *ErrorNotificationConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ErrorNotificationConfig) SetNotificationChannels(v []string) {
	x.xxx_hidden_NotificationChannels = v
}

func (x *ErrorNotificationConfig) SetErrorThreshold(v int32) {
	x.xxx_hidden_ErrorThreshold = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ErrorNotificationConfig) SetNotificationFrequencySeconds(v int32) {
	x.xxx_hidden_NotificationFrequencySeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ErrorNotificationConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ErrorNotificationConfig) HasErrorThreshold() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ErrorNotificationConfig) HasNotificationFrequencySeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ErrorNotificationConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *ErrorNotificationConfig) ClearErrorThreshold() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ErrorThreshold = 0
}

func (x *ErrorNotificationConfig) ClearNotificationFrequencySeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_NotificationFrequencySeconds = 0
}

type ErrorNotificationConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable error notifications
	Enabled *bool
	// Notification channels
	NotificationChannels []string
	// Error threshold for notifications
	ErrorThreshold *int32
	// Notification frequency (seconds)
	NotificationFrequencySeconds *int32
}

func (b0 ErrorNotificationConfig_builder) Build() *ErrorNotificationConfig {
	m0 := &ErrorNotificationConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	x.xxx_hidden_NotificationChannels = b.NotificationChannels
	if b.ErrorThreshold != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ErrorThreshold = *b.ErrorThreshold
	}
	if b.NotificationFrequencySeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_NotificationFrequencySeconds = *b.NotificationFrequencySeconds
	}
	return m0
}

var File_pkg_queue_proto_subscribe_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_subscribe_request_proto_rawDesc = "" +
	"\n" +
	"'pkg/queue/proto/subscribe_request.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\x1a\x1fpkg/queue/proto/ack_level.proto\x1a#pkg/queue/proto/delivery_mode.proto\"\xde\x04\n" +
	"\x10SubscribeRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12+\n" +
	"\x11subscription_name\x18\x02 \x01(\tR\x10subscriptionName\x12*\n" +
	"\x11consumer_group_id\x18\x03 \x01(\tR\x0fconsumerGroupId\x12\x1f\n" +
	"\vconsumer_id\x18\x04 \x01(\tR\n" +
	"consumerId\x12C\n" +
	"\x06config\x18\x05 \x01(\v2+.gcommon.v1.queue.SubscriptionConfigurationR\x06config\x12J\n" +
	"\rfilter_config\x18\x06 \x01(\v2%.gcommon.v1.queue.MessageFilterConfigR\ffilterConfig\x12P\n" +
	"\x0fdelivery_config\x18\a \x01(\v2'.gcommon.v1.queue.DeliveryConfigurationR\x0edeliveryConfig\x12L\n" +
	"\x0eerror_handling\x18\b \x01(\v2%.gcommon.v1.queue.ErrorHandlingConfigR\rerrorHandling\x12L\n" +
	"\bmetadata\x18\t \x03(\v20.gcommon.v1.queue.SubscribeRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x81\x04\n" +
	"\x19SubscriptionConfiguration\x127\n" +
	"\tack_level\x18\x01 \x01(\x0e2\x1a.gcommon.v1.queue.AckLevelR\backLevel\x12C\n" +
	"\rdelivery_mode\x18\x02 \x01(\x0e2\x1e.gcommon.v1.queue.DeliveryModeR\fdeliveryMode\x120\n" +
	"\x14max_unacked_messages\x18\x03 \x01(\x05R\x12maxUnackedMessages\x12$\n" +
	"\x0eack_timeout_ms\x18\x04 \x01(\x05R\fackTimeoutMs\x12!\n" +
	"\fmin_priority\x18\x05 \x01(\x05R\vminPriority\x12)\n" +
	"\x10ordered_delivery\x18\x06 \x01(\bR\x0forderedDelivery\x12)\n" +
	"\x10auto_acknowledge\x18\a \x01(\bR\x0fautoAcknowledge\x12-\n" +
	"\x12expiration_seconds\x18\b \x01(\x03R\x11expirationSeconds\x12/\n" +
	"\x13duplicate_detection\x18\t \x01(\bR\x12duplicateDetection\x125\n" +
	"\x17max_message_age_seconds\x18\n" +
	" \x01(\x03R\x14maxMessageAgeSeconds\"\xb3\x03\n" +
	"\x13MessageFilterConfig\x12_\n" +
	"\x0eheader_filters\x18\x01 \x03(\v28.gcommon.v1.queue.MessageFilterConfig.HeaderFiltersEntryR\rheaderFilters\x12H\n" +
	"\x0fcontent_filters\x18\x02 \x03(\v2\x1f.gcommon.v1.queue.ContentFilterR\x0econtentFilters\x120\n" +
	"\x14routing_key_patterns\x18\x03 \x03(\tR\x12routingKeyPatterns\x12#\n" +
	"\rmessage_types\x18\x04 \x03(\tR\fmessageTypes\x12-\n" +
	"\x12filter_expressions\x18\x05 \x03(\tR\x11filterExpressions\x12)\n" +
	"\x10exclude_matching\x18\x06 \x01(\bR\x0fexcludeMatching\x1a@\n" +
	"\x12HeaderFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x87\x01\n" +
	"\rContentFilter\x12\x1d\n" +
	"\n" +
	"field_path\x18\x01 \x01(\tR\tfieldPath\x12\x1a\n" +
	"\boperator\x18\x02 \x01(\tR\boperator\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12%\n" +
	"\x0ecase_sensitive\x18\x04 \x01(\bR\rcaseSensitive\"\x96\x04\n" +
	"\x15DeliveryConfiguration\x12#\n" +
	"\rpush_endpoint\x18\x01 \x01(\tR\fpushEndpoint\x12.\n" +
	"\x13delivery_timeout_ms\x18\x02 \x01(\x05R\x11deliveryTimeoutMs\x12H\n" +
	"\fretry_config\x18\x03 \x01(\v2%.gcommon.v1.queue.DeliveryRetryConfigR\vretryConfig\x12H\n" +
	"\fbatch_config\x18\x04 \x01(\v2%.gcommon.v1.queue.BatchDeliveryConfigR\vbatchConfig\x12H\n" +
	"\fflow_control\x18\x05 \x01(\v2%.gcommon.v1.queue.FlowControlSettingsR\vflowControl\x12-\n" +
	"\x12enable_compression\x18\x06 \x01(\bR\x11enableCompression\x12[\n" +
	"\fauth_headers\x18\a \x03(\v28.gcommon.v1.queue.DeliveryConfiguration.AuthHeadersEntryR\vauthHeaders\x1a>\n" +
	"\x10AuthHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf7\x01\n" +
	"\x13DeliveryRetryConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1f\n" +
	"\vmax_retries\x18\x02 \x01(\x05R\n" +
	"maxRetries\x12(\n" +
	"\x10initial_delay_ms\x18\x03 \x01(\x05R\x0einitialDelayMs\x12 \n" +
	"\fmax_delay_ms\x18\x04 \x01(\x05R\n" +
	"maxDelayMs\x12-\n" +
	"\x12backoff_multiplier\x18\x05 \x01(\x01R\x11backoffMultiplier\x12*\n" +
	"\x11retry_error_codes\x18\x06 \x03(\tR\x0fretryErrorCodes\"\xa7\x01\n" +
	"\x13BatchDeliveryConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12$\n" +
	"\x0emax_batch_size\x18\x02 \x01(\x05R\fmaxBatchSize\x12&\n" +
	"\x0fmax_batch_bytes\x18\x03 \x01(\x03R\rmaxBatchBytes\x12(\n" +
	"\x10batch_timeout_ms\x18\x04 \x01(\x05R\x0ebatchTimeoutMs\"\xa1\x01\n" +
	"\x13FlowControlSettings\x128\n" +
	"\x18max_outstanding_messages\x18\x01 \x01(\x05R\x16maxOutstandingMessages\x122\n" +
	"\x15max_outstanding_bytes\x18\x02 \x01(\x03R\x13maxOutstandingBytes\x12\x1c\n" +
	"\talgorithm\x18\x03 \x01(\tR\talgorithm\"\xe9\x02\n" +
	"\x13ErrorHandlingConfig\x12F\n" +
	"\n" +
	"dlq_config\x18\x01 \x01(\v2'.gcommon.v1.queue.DeadLetterQueueConfigR\tdlqConfig\x122\n" +
	"\x15max_delivery_attempts\x18\x02 \x01(\x05R\x13maxDeliveryAttempts\x12H\n" +
	"\rerror_actions\x18\x03 \x03(\v2#.gcommon.v1.queue.ErrorActionConfigR\ferrorActions\x120\n" +
	"\x14enable_error_logging\x18\x04 \x01(\bR\x12enableErrorLogging\x12Z\n" +
	"\x13notification_config\x18\x05 \x01(\v2).gcommon.v1.queue.ErrorNotificationConfigR\x12notificationConfig\"\xab\x01\n" +
	"\x15DeadLetterQueueConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1b\n" +
	"\tdlq_topic\x18\x02 \x01(\tR\bdlqTopic\x12-\n" +
	"\x13dlq_max_age_seconds\x18\x03 \x01(\x03R\x10dlqMaxAgeSeconds\x12,\n" +
	"\x12include_error_info\x18\x04 \x01(\bR\x10includeErrorInfo\"\xed\x01\n" +
	"\x11ErrorActionConfig\x12#\n" +
	"\rerror_pattern\x18\x01 \x01(\tR\ferrorPattern\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\x12Z\n" +
	"\raction_params\x18\x03 \x03(\v25.gcommon.v1.queue.ErrorActionConfig.ActionParamsEntryR\factionParams\x1a?\n" +
	"\x11ActionParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x01\n" +
	"\x17ErrorNotificationConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x123\n" +
	"\x15notification_channels\x18\x02 \x03(\tR\x14notificationChannels\x12'\n" +
	"\x0ferror_threshold\x18\x03 \x01(\x05R\x0eerrorThreshold\x12D\n" +
	"\x1enotification_frequency_seconds\x18\x04 \x01(\x05R\x1cnotificationFrequencySecondsB\xc2\x01\n" +
	"\x14com.gcommon.v1.queueB\x15SubscribeRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_queue_proto_subscribe_request_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_pkg_queue_proto_subscribe_request_proto_goTypes = []any{
	(*SubscribeRequest)(nil),          // 0: gcommon.v1.queue.SubscribeRequest
	(*SubscriptionConfiguration)(nil), // 1: gcommon.v1.queue.SubscriptionConfiguration
	(*MessageFilterConfig)(nil),       // 2: gcommon.v1.queue.MessageFilterConfig
	(*ContentFilter)(nil),             // 3: gcommon.v1.queue.ContentFilter
	(*DeliveryConfiguration)(nil),     // 4: gcommon.v1.queue.DeliveryConfiguration
	(*DeliveryRetryConfig)(nil),       // 5: gcommon.v1.queue.DeliveryRetryConfig
	(*BatchDeliveryConfig)(nil),       // 6: gcommon.v1.queue.BatchDeliveryConfig
	(*FlowControlSettings)(nil),       // 7: gcommon.v1.queue.FlowControlSettings
	(*ErrorHandlingConfig)(nil),       // 8: gcommon.v1.queue.ErrorHandlingConfig
	(*DeadLetterQueueConfig)(nil),     // 9: gcommon.v1.queue.DeadLetterQueueConfig
	(*ErrorActionConfig)(nil),         // 10: gcommon.v1.queue.ErrorActionConfig
	(*ErrorNotificationConfig)(nil),   // 11: gcommon.v1.queue.ErrorNotificationConfig
	nil,                               // 12: gcommon.v1.queue.SubscribeRequest.MetadataEntry
	nil,                               // 13: gcommon.v1.queue.MessageFilterConfig.HeaderFiltersEntry
	nil,                               // 14: gcommon.v1.queue.DeliveryConfiguration.AuthHeadersEntry
	nil,                               // 15: gcommon.v1.queue.ErrorActionConfig.ActionParamsEntry
	(AckLevel)(0),                     // 16: gcommon.v1.queue.AckLevel
	(DeliveryMode)(0),                 // 17: gcommon.v1.queue.DeliveryMode
}
var file_pkg_queue_proto_subscribe_request_proto_depIdxs = []int32{
	1,  // 0: gcommon.v1.queue.SubscribeRequest.config:type_name -> gcommon.v1.queue.SubscriptionConfiguration
	2,  // 1: gcommon.v1.queue.SubscribeRequest.filter_config:type_name -> gcommon.v1.queue.MessageFilterConfig
	4,  // 2: gcommon.v1.queue.SubscribeRequest.delivery_config:type_name -> gcommon.v1.queue.DeliveryConfiguration
	8,  // 3: gcommon.v1.queue.SubscribeRequest.error_handling:type_name -> gcommon.v1.queue.ErrorHandlingConfig
	12, // 4: gcommon.v1.queue.SubscribeRequest.metadata:type_name -> gcommon.v1.queue.SubscribeRequest.MetadataEntry
	16, // 5: gcommon.v1.queue.SubscriptionConfiguration.ack_level:type_name -> gcommon.v1.queue.AckLevel
	17, // 6: gcommon.v1.queue.SubscriptionConfiguration.delivery_mode:type_name -> gcommon.v1.queue.DeliveryMode
	13, // 7: gcommon.v1.queue.MessageFilterConfig.header_filters:type_name -> gcommon.v1.queue.MessageFilterConfig.HeaderFiltersEntry
	3,  // 8: gcommon.v1.queue.MessageFilterConfig.content_filters:type_name -> gcommon.v1.queue.ContentFilter
	5,  // 9: gcommon.v1.queue.DeliveryConfiguration.retry_config:type_name -> gcommon.v1.queue.DeliveryRetryConfig
	6,  // 10: gcommon.v1.queue.DeliveryConfiguration.batch_config:type_name -> gcommon.v1.queue.BatchDeliveryConfig
	7,  // 11: gcommon.v1.queue.DeliveryConfiguration.flow_control:type_name -> gcommon.v1.queue.FlowControlSettings
	14, // 12: gcommon.v1.queue.DeliveryConfiguration.auth_headers:type_name -> gcommon.v1.queue.DeliveryConfiguration.AuthHeadersEntry
	9,  // 13: gcommon.v1.queue.ErrorHandlingConfig.dlq_config:type_name -> gcommon.v1.queue.DeadLetterQueueConfig
	10, // 14: gcommon.v1.queue.ErrorHandlingConfig.error_actions:type_name -> gcommon.v1.queue.ErrorActionConfig
	11, // 15: gcommon.v1.queue.ErrorHandlingConfig.notification_config:type_name -> gcommon.v1.queue.ErrorNotificationConfig
	15, // 16: gcommon.v1.queue.ErrorActionConfig.action_params:type_name -> gcommon.v1.queue.ErrorActionConfig.ActionParamsEntry
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_subscribe_request_proto_init() }
func file_pkg_queue_proto_subscribe_request_proto_init() {
	if File_pkg_queue_proto_subscribe_request_proto != nil {
		return
	}
	file_pkg_queue_proto_ack_level_proto_init()
	file_pkg_queue_proto_delivery_mode_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_subscribe_request_proto_rawDesc), len(file_pkg_queue_proto_subscribe_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_subscribe_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_subscribe_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_subscribe_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_subscribe_request_proto = out.File
	file_pkg_queue_proto_subscribe_request_proto_goTypes = nil
	file_pkg_queue_proto_subscribe_request_proto_depIdxs = nil
}
