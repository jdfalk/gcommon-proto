// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/subscribe_request.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SubscribeRequest creates a new subscription to a queue or topic
type SubscribeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Topic or queue to subscribe to
	Topic *string `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
	// Subscription name/identifier
	SubscriptionName *string `protobuf:"bytes,2,opt,name=subscription_name,json=subscriptionName" json:"subscription_name,omitempty"`
	// Consumer group ID for coordinated consumption
	ConsumerGroupId *string `protobuf:"bytes,3,opt,name=consumer_group_id,json=consumerGroupId" json:"consumer_group_id,omitempty"`
	// Individual consumer ID
	ConsumerId *string `protobuf:"bytes,4,opt,name=consumer_id,json=consumerId" json:"consumer_id,omitempty"`
	// Subscription configuration
	Config *SubscriptionConfiguration `protobuf:"bytes,5,opt,name=config" json:"config,omitempty"`
	// Message filtering criteria
	FilterConfig *MessageFilterConfig `protobuf:"bytes,6,opt,name=filter_config,json=filterConfig" json:"filter_config,omitempty"`
	// Delivery configuration
	DeliveryConfig *DeliveryConfiguration `protobuf:"bytes,7,opt,name=delivery_config,json=deliveryConfig" json:"delivery_config,omitempty"`
	// Error handling configuration
	ErrorHandling *ErrorHandlingConfig `protobuf:"bytes,8,opt,name=error_handling,json=errorHandling" json:"error_handling,omitempty"`
	// Subscription metadata
	Metadata      map[string]string `protobuf:"bytes,9,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetTopic() string {
	if x != nil && x.Topic != nil {
		return *x.Topic
	}
	return ""
}

func (x *SubscribeRequest) GetSubscriptionName() string {
	if x != nil && x.SubscriptionName != nil {
		return *x.SubscriptionName
	}
	return ""
}

func (x *SubscribeRequest) GetConsumerGroupId() string {
	if x != nil && x.ConsumerGroupId != nil {
		return *x.ConsumerGroupId
	}
	return ""
}

func (x *SubscribeRequest) GetConsumerId() string {
	if x != nil && x.ConsumerId != nil {
		return *x.ConsumerId
	}
	return ""
}

func (x *SubscribeRequest) GetConfig() *SubscriptionConfiguration {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *SubscribeRequest) GetFilterConfig() *MessageFilterConfig {
	if x != nil {
		return x.FilterConfig
	}
	return nil
}

func (x *SubscribeRequest) GetDeliveryConfig() *DeliveryConfiguration {
	if x != nil {
		return x.DeliveryConfig
	}
	return nil
}

func (x *SubscribeRequest) GetErrorHandling() *ErrorHandlingConfig {
	if x != nil {
		return x.ErrorHandling
	}
	return nil
}

func (x *SubscribeRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Configuration for the subscription
type SubscriptionConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Acknowledgment level required
	AckLevel *AckLevel `protobuf:"varint,1,opt,name=ack_level,json=ackLevel,enum=gcommon.v1.queue.AckLevel" json:"ack_level,omitempty"`
	// Delivery mode for messages
	DeliveryMode *DeliveryMode `protobuf:"varint,2,opt,name=delivery_mode,json=deliveryMode,enum=gcommon.v1.queue.DeliveryMode" json:"delivery_mode,omitempty"`
	// Maximum number of unacknowledged messages
	MaxUnackedMessages *int32 `protobuf:"varint,3,opt,name=max_unacked_messages,json=maxUnackedMessages" json:"max_unacked_messages,omitempty"`
	// Acknowledgment timeout (milliseconds)
	AckTimeoutMs *int32 `protobuf:"varint,4,opt,name=ack_timeout_ms,json=ackTimeoutMs" json:"ack_timeout_ms,omitempty"`
	// Message priority filter (minimum priority)
	MinPriority *int32 `protobuf:"varint,5,opt,name=min_priority,json=minPriority" json:"min_priority,omitempty"`
	// Enable message ordering
	OrderedDelivery *bool `protobuf:"varint,6,opt,name=ordered_delivery,json=orderedDelivery" json:"ordered_delivery,omitempty"`
	// Auto-acknowledge messages after delivery
	AutoAcknowledge *bool `protobuf:"varint,7,opt,name=auto_acknowledge,json=autoAcknowledge" json:"auto_acknowledge,omitempty"`
	// Subscription expiration time (seconds, 0 = no expiration)
	ExpirationSeconds *int64 `protobuf:"varint,8,opt,name=expiration_seconds,json=expirationSeconds" json:"expiration_seconds,omitempty"`
	// Enable duplicate message detection
	DuplicateDetection *bool `protobuf:"varint,9,opt,name=duplicate_detection,json=duplicateDetection" json:"duplicate_detection,omitempty"`
	// Maximum message age to accept (seconds)
	MaxMessageAgeSeconds *int64 `protobuf:"varint,10,opt,name=max_message_age_seconds,json=maxMessageAgeSeconds" json:"max_message_age_seconds,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SubscriptionConfiguration) Reset() {
	*x = SubscriptionConfiguration{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionConfiguration) ProtoMessage() {}

func (x *SubscriptionConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionConfiguration.ProtoReflect.Descriptor instead.
func (*SubscriptionConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{1}
}

func (x *SubscriptionConfiguration) GetAckLevel() AckLevel {
	if x != nil && x.AckLevel != nil {
		return *x.AckLevel
	}
	return AckLevel_ACK_LEVEL_UNSPECIFIED
}

func (x *SubscriptionConfiguration) GetDeliveryMode() DeliveryMode {
	if x != nil && x.DeliveryMode != nil {
		return *x.DeliveryMode
	}
	return DeliveryMode_DELIVERY_MODE_UNSPECIFIED
}

func (x *SubscriptionConfiguration) GetMaxUnackedMessages() int32 {
	if x != nil && x.MaxUnackedMessages != nil {
		return *x.MaxUnackedMessages
	}
	return 0
}

func (x *SubscriptionConfiguration) GetAckTimeoutMs() int32 {
	if x != nil && x.AckTimeoutMs != nil {
		return *x.AckTimeoutMs
	}
	return 0
}

func (x *SubscriptionConfiguration) GetMinPriority() int32 {
	if x != nil && x.MinPriority != nil {
		return *x.MinPriority
	}
	return 0
}

func (x *SubscriptionConfiguration) GetOrderedDelivery() bool {
	if x != nil && x.OrderedDelivery != nil {
		return *x.OrderedDelivery
	}
	return false
}

func (x *SubscriptionConfiguration) GetAutoAcknowledge() bool {
	if x != nil && x.AutoAcknowledge != nil {
		return *x.AutoAcknowledge
	}
	return false
}

func (x *SubscriptionConfiguration) GetExpirationSeconds() int64 {
	if x != nil && x.ExpirationSeconds != nil {
		return *x.ExpirationSeconds
	}
	return 0
}

func (x *SubscriptionConfiguration) GetDuplicateDetection() bool {
	if x != nil && x.DuplicateDetection != nil {
		return *x.DuplicateDetection
	}
	return false
}

func (x *SubscriptionConfiguration) GetMaxMessageAgeSeconds() int64 {
	if x != nil && x.MaxMessageAgeSeconds != nil {
		return *x.MaxMessageAgeSeconds
	}
	return 0
}

// Message filtering configuration
type MessageFilterConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Header-based filters
	HeaderFilters map[string]string `protobuf:"bytes,1,rep,name=header_filters,json=headerFilters" json:"header_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Content-based filters
	ContentFilters []*ContentFilter `protobuf:"bytes,2,rep,name=content_filters,json=contentFilters" json:"content_filters,omitempty"`
	// Routing key patterns
	RoutingKeyPatterns []string `protobuf:"bytes,3,rep,name=routing_key_patterns,json=routingKeyPatterns" json:"routing_key_patterns,omitempty"`
	// Message type filters
	MessageTypes []string `protobuf:"bytes,4,rep,name=message_types,json=messageTypes" json:"message_types,omitempty"`
	// Custom filter expressions
	FilterExpressions []string `protobuf:"bytes,5,rep,name=filter_expressions,json=filterExpressions" json:"filter_expressions,omitempty"`
	// Exclude messages matching these criteria
	ExcludeMatching *bool `protobuf:"varint,6,opt,name=exclude_matching,json=excludeMatching" json:"exclude_matching,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MessageFilterConfig) Reset() {
	*x = MessageFilterConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageFilterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageFilterConfig) ProtoMessage() {}

func (x *MessageFilterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageFilterConfig.ProtoReflect.Descriptor instead.
func (*MessageFilterConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{2}
}

func (x *MessageFilterConfig) GetHeaderFilters() map[string]string {
	if x != nil {
		return x.HeaderFilters
	}
	return nil
}

func (x *MessageFilterConfig) GetContentFilters() []*ContentFilter {
	if x != nil {
		return x.ContentFilters
	}
	return nil
}

func (x *MessageFilterConfig) GetRoutingKeyPatterns() []string {
	if x != nil {
		return x.RoutingKeyPatterns
	}
	return nil
}

func (x *MessageFilterConfig) GetMessageTypes() []string {
	if x != nil {
		return x.MessageTypes
	}
	return nil
}

func (x *MessageFilterConfig) GetFilterExpressions() []string {
	if x != nil {
		return x.FilterExpressions
	}
	return nil
}

func (x *MessageFilterConfig) GetExcludeMatching() bool {
	if x != nil && x.ExcludeMatching != nil {
		return *x.ExcludeMatching
	}
	return false
}

// Content-based message filter
type ContentFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON path or field name
	FieldPath *string `protobuf:"bytes,1,opt,name=field_path,json=fieldPath" json:"field_path,omitempty"`
	// Filter operator (equals, contains, regex, gt, lt, etc.)
	Operator *string `protobuf:"bytes,2,opt,name=operator" json:"operator,omitempty"`
	// Filter value
	Value *string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	// Case sensitive matching
	CaseSensitive *bool `protobuf:"varint,4,opt,name=case_sensitive,json=caseSensitive" json:"case_sensitive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentFilter) Reset() {
	*x = ContentFilter{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentFilter) ProtoMessage() {}

func (x *ContentFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentFilter.ProtoReflect.Descriptor instead.
func (*ContentFilter) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{3}
}

func (x *ContentFilter) GetFieldPath() string {
	if x != nil && x.FieldPath != nil {
		return *x.FieldPath
	}
	return ""
}

func (x *ContentFilter) GetOperator() string {
	if x != nil && x.Operator != nil {
		return *x.Operator
	}
	return ""
}

func (x *ContentFilter) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *ContentFilter) GetCaseSensitive() bool {
	if x != nil && x.CaseSensitive != nil {
		return *x.CaseSensitive
	}
	return false
}

// Delivery configuration for the subscription
type DeliveryConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Delivery endpoint (for push subscriptions)
	PushEndpoint *string `protobuf:"bytes,1,opt,name=push_endpoint,json=pushEndpoint" json:"push_endpoint,omitempty"`
	// Delivery timeout (milliseconds)
	DeliveryTimeoutMs *int32 `protobuf:"varint,2,opt,name=delivery_timeout_ms,json=deliveryTimeoutMs" json:"delivery_timeout_ms,omitempty"`
	// Retry configuration for failed deliveries
	RetryConfig *DeliveryRetryConfig `protobuf:"bytes,3,opt,name=retry_config,json=retryConfig" json:"retry_config,omitempty"`
	// Batch delivery settings
	BatchConfig *BatchDeliveryConfig `protobuf:"bytes,4,opt,name=batch_config,json=batchConfig" json:"batch_config,omitempty"`
	// Flow control settings
	FlowControl *FlowControlSettings `protobuf:"bytes,5,opt,name=flow_control,json=flowControl" json:"flow_control,omitempty"`
	// Enable compression for delivery
	EnableCompression *bool `protobuf:"varint,6,opt,name=enable_compression,json=enableCompression" json:"enable_compression,omitempty"`
	// Authentication for push endpoints
	AuthHeaders   map[string]string `protobuf:"bytes,7,rep,name=auth_headers,json=authHeaders" json:"auth_headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeliveryConfiguration) Reset() {
	*x = DeliveryConfiguration{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliveryConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryConfiguration) ProtoMessage() {}

func (x *DeliveryConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryConfiguration.ProtoReflect.Descriptor instead.
func (*DeliveryConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{4}
}

func (x *DeliveryConfiguration) GetPushEndpoint() string {
	if x != nil && x.PushEndpoint != nil {
		return *x.PushEndpoint
	}
	return ""
}

func (x *DeliveryConfiguration) GetDeliveryTimeoutMs() int32 {
	if x != nil && x.DeliveryTimeoutMs != nil {
		return *x.DeliveryTimeoutMs
	}
	return 0
}

func (x *DeliveryConfiguration) GetRetryConfig() *DeliveryRetryConfig {
	if x != nil {
		return x.RetryConfig
	}
	return nil
}

func (x *DeliveryConfiguration) GetBatchConfig() *BatchDeliveryConfig {
	if x != nil {
		return x.BatchConfig
	}
	return nil
}

func (x *DeliveryConfiguration) GetFlowControl() *FlowControlSettings {
	if x != nil {
		return x.FlowControl
	}
	return nil
}

func (x *DeliveryConfiguration) GetEnableCompression() bool {
	if x != nil && x.EnableCompression != nil {
		return *x.EnableCompression
	}
	return false
}

func (x *DeliveryConfiguration) GetAuthHeaders() map[string]string {
	if x != nil {
		return x.AuthHeaders
	}
	return nil
}

// Retry configuration for delivery failures
type DeliveryRetryConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable retry on delivery failures
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Maximum retry attempts
	MaxRetries *int32 `protobuf:"varint,2,opt,name=max_retries,json=maxRetries" json:"max_retries,omitempty"`
	// Initial retry delay (milliseconds)
	InitialDelayMs *int32 `protobuf:"varint,3,opt,name=initial_delay_ms,json=initialDelayMs" json:"initial_delay_ms,omitempty"`
	// Maximum retry delay (milliseconds)
	MaxDelayMs *int32 `protobuf:"varint,4,opt,name=max_delay_ms,json=maxDelayMs" json:"max_delay_ms,omitempty"`
	// Backoff multiplier
	BackoffMultiplier *float64 `protobuf:"fixed64,5,opt,name=backoff_multiplier,json=backoffMultiplier" json:"backoff_multiplier,omitempty"`
	// Retry only for specific error codes
	RetryErrorCodes []string `protobuf:"bytes,6,rep,name=retry_error_codes,json=retryErrorCodes" json:"retry_error_codes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeliveryRetryConfig) Reset() {
	*x = DeliveryRetryConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliveryRetryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryRetryConfig) ProtoMessage() {}

func (x *DeliveryRetryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryRetryConfig.ProtoReflect.Descriptor instead.
func (*DeliveryRetryConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{5}
}

func (x *DeliveryRetryConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *DeliveryRetryConfig) GetMaxRetries() int32 {
	if x != nil && x.MaxRetries != nil {
		return *x.MaxRetries
	}
	return 0
}

func (x *DeliveryRetryConfig) GetInitialDelayMs() int32 {
	if x != nil && x.InitialDelayMs != nil {
		return *x.InitialDelayMs
	}
	return 0
}

func (x *DeliveryRetryConfig) GetMaxDelayMs() int32 {
	if x != nil && x.MaxDelayMs != nil {
		return *x.MaxDelayMs
	}
	return 0
}

func (x *DeliveryRetryConfig) GetBackoffMultiplier() float64 {
	if x != nil && x.BackoffMultiplier != nil {
		return *x.BackoffMultiplier
	}
	return 0
}

func (x *DeliveryRetryConfig) GetRetryErrorCodes() []string {
	if x != nil {
		return x.RetryErrorCodes
	}
	return nil
}

// Batch delivery configuration
type BatchDeliveryConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable batch delivery
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Maximum messages per batch
	MaxBatchSize *int32 `protobuf:"varint,2,opt,name=max_batch_size,json=maxBatchSize" json:"max_batch_size,omitempty"`
	// Maximum batch size in bytes
	MaxBatchBytes *int64 `protobuf:"varint,3,opt,name=max_batch_bytes,json=maxBatchBytes" json:"max_batch_bytes,omitempty"`
	// Maximum time to wait for batch completion (milliseconds)
	BatchTimeoutMs *int32 `protobuf:"varint,4,opt,name=batch_timeout_ms,json=batchTimeoutMs" json:"batch_timeout_ms,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchDeliveryConfig) Reset() {
	*x = BatchDeliveryConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeliveryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeliveryConfig) ProtoMessage() {}

func (x *BatchDeliveryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeliveryConfig.ProtoReflect.Descriptor instead.
func (*BatchDeliveryConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{6}
}

func (x *BatchDeliveryConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *BatchDeliveryConfig) GetMaxBatchSize() int32 {
	if x != nil && x.MaxBatchSize != nil {
		return *x.MaxBatchSize
	}
	return 0
}

func (x *BatchDeliveryConfig) GetMaxBatchBytes() int64 {
	if x != nil && x.MaxBatchBytes != nil {
		return *x.MaxBatchBytes
	}
	return 0
}

func (x *BatchDeliveryConfig) GetBatchTimeoutMs() int32 {
	if x != nil && x.BatchTimeoutMs != nil {
		return *x.BatchTimeoutMs
	}
	return 0
}

// Flow control settings
type FlowControlSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum outstanding messages
	MaxOutstandingMessages *int32 `protobuf:"varint,1,opt,name=max_outstanding_messages,json=maxOutstandingMessages" json:"max_outstanding_messages,omitempty"`
	// Maximum outstanding bytes
	MaxOutstandingBytes *int64 `protobuf:"varint,2,opt,name=max_outstanding_bytes,json=maxOutstandingBytes" json:"max_outstanding_bytes,omitempty"`
	// Flow control algorithm
	Algorithm     *string `protobuf:"bytes,3,opt,name=algorithm" json:"algorithm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlowControlSettings) Reset() {
	*x = FlowControlSettings{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlowControlSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowControlSettings) ProtoMessage() {}

func (x *FlowControlSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowControlSettings.ProtoReflect.Descriptor instead.
func (*FlowControlSettings) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{7}
}

func (x *FlowControlSettings) GetMaxOutstandingMessages() int32 {
	if x != nil && x.MaxOutstandingMessages != nil {
		return *x.MaxOutstandingMessages
	}
	return 0
}

func (x *FlowControlSettings) GetMaxOutstandingBytes() int64 {
	if x != nil && x.MaxOutstandingBytes != nil {
		return *x.MaxOutstandingBytes
	}
	return 0
}

func (x *FlowControlSettings) GetAlgorithm() string {
	if x != nil && x.Algorithm != nil {
		return *x.Algorithm
	}
	return ""
}

// Error handling configuration
type ErrorHandlingConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dead letter queue configuration
	DlqConfig *DeadLetterQueueConfig `protobuf:"bytes,1,opt,name=dlq_config,json=dlqConfig" json:"dlq_config,omitempty"`
	// Maximum delivery attempts before DLQ
	MaxDeliveryAttempts *int32 `protobuf:"varint,2,opt,name=max_delivery_attempts,json=maxDeliveryAttempts" json:"max_delivery_attempts,omitempty"`
	// Actions to take on specific errors
	ErrorActions []*ErrorActionConfig `protobuf:"bytes,3,rep,name=error_actions,json=errorActions" json:"error_actions,omitempty"`
	// Enable error logging
	EnableErrorLogging *bool `protobuf:"varint,4,opt,name=enable_error_logging,json=enableErrorLogging" json:"enable_error_logging,omitempty"`
	// Error notification settings
	NotificationConfig *ErrorNotificationConfig `protobuf:"bytes,5,opt,name=notification_config,json=notificationConfig" json:"notification_config,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ErrorHandlingConfig) Reset() {
	*x = ErrorHandlingConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorHandlingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorHandlingConfig) ProtoMessage() {}

func (x *ErrorHandlingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorHandlingConfig.ProtoReflect.Descriptor instead.
func (*ErrorHandlingConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{8}
}

func (x *ErrorHandlingConfig) GetDlqConfig() *DeadLetterQueueConfig {
	if x != nil {
		return x.DlqConfig
	}
	return nil
}

func (x *ErrorHandlingConfig) GetMaxDeliveryAttempts() int32 {
	if x != nil && x.MaxDeliveryAttempts != nil {
		return *x.MaxDeliveryAttempts
	}
	return 0
}

func (x *ErrorHandlingConfig) GetErrorActions() []*ErrorActionConfig {
	if x != nil {
		return x.ErrorActions
	}
	return nil
}

func (x *ErrorHandlingConfig) GetEnableErrorLogging() bool {
	if x != nil && x.EnableErrorLogging != nil {
		return *x.EnableErrorLogging
	}
	return false
}

func (x *ErrorHandlingConfig) GetNotificationConfig() *ErrorNotificationConfig {
	if x != nil {
		return x.NotificationConfig
	}
	return nil
}

// Dead letter queue configuration
type DeadLetterQueueConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable dead letter queue
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Dead letter queue topic
	DlqTopic *string `protobuf:"bytes,2,opt,name=dlq_topic,json=dlqTopic" json:"dlq_topic,omitempty"`
	// Maximum message age in DLQ (seconds)
	DlqMaxAgeSeconds *int64 `protobuf:"varint,3,opt,name=dlq_max_age_seconds,json=dlqMaxAgeSeconds" json:"dlq_max_age_seconds,omitempty"`
	// Include original error information
	IncludeErrorInfo *bool `protobuf:"varint,4,opt,name=include_error_info,json=includeErrorInfo" json:"include_error_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeadLetterQueueConfig) Reset() {
	*x = DeadLetterQueueConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeadLetterQueueConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeadLetterQueueConfig) ProtoMessage() {}

func (x *DeadLetterQueueConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeadLetterQueueConfig.ProtoReflect.Descriptor instead.
func (*DeadLetterQueueConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{9}
}

func (x *DeadLetterQueueConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *DeadLetterQueueConfig) GetDlqTopic() string {
	if x != nil && x.DlqTopic != nil {
		return *x.DlqTopic
	}
	return ""
}

func (x *DeadLetterQueueConfig) GetDlqMaxAgeSeconds() int64 {
	if x != nil && x.DlqMaxAgeSeconds != nil {
		return *x.DlqMaxAgeSeconds
	}
	return 0
}

func (x *DeadLetterQueueConfig) GetIncludeErrorInfo() bool {
	if x != nil && x.IncludeErrorInfo != nil {
		return *x.IncludeErrorInfo
	}
	return false
}

// Error action configuration
type ErrorActionConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Error code or pattern
	ErrorPattern *string `protobuf:"bytes,1,opt,name=error_pattern,json=errorPattern" json:"error_pattern,omitempty"`
	// Action to take (retry, dlq, drop, pause)
	Action *string `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
	// Action parameters
	ActionParams  map[string]string `protobuf:"bytes,3,rep,name=action_params,json=actionParams" json:"action_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorActionConfig) Reset() {
	*x = ErrorActionConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorActionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorActionConfig) ProtoMessage() {}

func (x *ErrorActionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorActionConfig.ProtoReflect.Descriptor instead.
func (*ErrorActionConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{10}
}

func (x *ErrorActionConfig) GetErrorPattern() string {
	if x != nil && x.ErrorPattern != nil {
		return *x.ErrorPattern
	}
	return ""
}

func (x *ErrorActionConfig) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *ErrorActionConfig) GetActionParams() map[string]string {
	if x != nil {
		return x.ActionParams
	}
	return nil
}

// Error notification configuration
type ErrorNotificationConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable error notifications
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Notification channels
	NotificationChannels []string `protobuf:"bytes,2,rep,name=notification_channels,json=notificationChannels" json:"notification_channels,omitempty"`
	// Error threshold for notifications
	ErrorThreshold *int32 `protobuf:"varint,3,opt,name=error_threshold,json=errorThreshold" json:"error_threshold,omitempty"`
	// Notification frequency (seconds)
	NotificationFrequencySeconds *int32 `protobuf:"varint,4,opt,name=notification_frequency_seconds,json=notificationFrequencySeconds" json:"notification_frequency_seconds,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *ErrorNotificationConfig) Reset() {
	*x = ErrorNotificationConfig{}
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorNotificationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorNotificationConfig) ProtoMessage() {}

func (x *ErrorNotificationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_subscribe_request_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorNotificationConfig.ProtoReflect.Descriptor instead.
func (*ErrorNotificationConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP(), []int{11}
}

func (x *ErrorNotificationConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ErrorNotificationConfig) GetNotificationChannels() []string {
	if x != nil {
		return x.NotificationChannels
	}
	return nil
}

func (x *ErrorNotificationConfig) GetErrorThreshold() int32 {
	if x != nil && x.ErrorThreshold != nil {
		return *x.ErrorThreshold
	}
	return 0
}

func (x *ErrorNotificationConfig) GetNotificationFrequencySeconds() int32 {
	if x != nil && x.NotificationFrequencySeconds != nil {
		return *x.NotificationFrequencySeconds
	}
	return 0
}

var File_pkg_queue_proto_subscribe_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_subscribe_request_proto_rawDesc = "" +
	"\n" +
	"'pkg/queue/proto/subscribe_request.proto\x12\x10gcommon.v1.queue\x1a\x1fpkg/queue/proto/ack_level.proto\x1a#pkg/queue/proto/delivery_mode.proto\"\xde\x04\n" +
	"\x10SubscribeRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12+\n" +
	"\x11subscription_name\x18\x02 \x01(\tR\x10subscriptionName\x12*\n" +
	"\x11consumer_group_id\x18\x03 \x01(\tR\x0fconsumerGroupId\x12\x1f\n" +
	"\vconsumer_id\x18\x04 \x01(\tR\n" +
	"consumerId\x12C\n" +
	"\x06config\x18\x05 \x01(\v2+.gcommon.v1.queue.SubscriptionConfigurationR\x06config\x12J\n" +
	"\rfilter_config\x18\x06 \x01(\v2%.gcommon.v1.queue.MessageFilterConfigR\ffilterConfig\x12P\n" +
	"\x0fdelivery_config\x18\a \x01(\v2'.gcommon.v1.queue.DeliveryConfigurationR\x0edeliveryConfig\x12L\n" +
	"\x0eerror_handling\x18\b \x01(\v2%.gcommon.v1.queue.ErrorHandlingConfigR\rerrorHandling\x12L\n" +
	"\bmetadata\x18\t \x03(\v20.gcommon.v1.queue.SubscribeRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x81\x04\n" +
	"\x19SubscriptionConfiguration\x127\n" +
	"\tack_level\x18\x01 \x01(\x0e2\x1a.gcommon.v1.queue.AckLevelR\backLevel\x12C\n" +
	"\rdelivery_mode\x18\x02 \x01(\x0e2\x1e.gcommon.v1.queue.DeliveryModeR\fdeliveryMode\x120\n" +
	"\x14max_unacked_messages\x18\x03 \x01(\x05R\x12maxUnackedMessages\x12$\n" +
	"\x0eack_timeout_ms\x18\x04 \x01(\x05R\fackTimeoutMs\x12!\n" +
	"\fmin_priority\x18\x05 \x01(\x05R\vminPriority\x12)\n" +
	"\x10ordered_delivery\x18\x06 \x01(\bR\x0forderedDelivery\x12)\n" +
	"\x10auto_acknowledge\x18\a \x01(\bR\x0fautoAcknowledge\x12-\n" +
	"\x12expiration_seconds\x18\b \x01(\x03R\x11expirationSeconds\x12/\n" +
	"\x13duplicate_detection\x18\t \x01(\bR\x12duplicateDetection\x125\n" +
	"\x17max_message_age_seconds\x18\n" +
	" \x01(\x03R\x14maxMessageAgeSeconds\"\xb3\x03\n" +
	"\x13MessageFilterConfig\x12_\n" +
	"\x0eheader_filters\x18\x01 \x03(\v28.gcommon.v1.queue.MessageFilterConfig.HeaderFiltersEntryR\rheaderFilters\x12H\n" +
	"\x0fcontent_filters\x18\x02 \x03(\v2\x1f.gcommon.v1.queue.ContentFilterR\x0econtentFilters\x120\n" +
	"\x14routing_key_patterns\x18\x03 \x03(\tR\x12routingKeyPatterns\x12#\n" +
	"\rmessage_types\x18\x04 \x03(\tR\fmessageTypes\x12-\n" +
	"\x12filter_expressions\x18\x05 \x03(\tR\x11filterExpressions\x12)\n" +
	"\x10exclude_matching\x18\x06 \x01(\bR\x0fexcludeMatching\x1a@\n" +
	"\x12HeaderFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x87\x01\n" +
	"\rContentFilter\x12\x1d\n" +
	"\n" +
	"field_path\x18\x01 \x01(\tR\tfieldPath\x12\x1a\n" +
	"\boperator\x18\x02 \x01(\tR\boperator\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12%\n" +
	"\x0ecase_sensitive\x18\x04 \x01(\bR\rcaseSensitive\"\x96\x04\n" +
	"\x15DeliveryConfiguration\x12#\n" +
	"\rpush_endpoint\x18\x01 \x01(\tR\fpushEndpoint\x12.\n" +
	"\x13delivery_timeout_ms\x18\x02 \x01(\x05R\x11deliveryTimeoutMs\x12H\n" +
	"\fretry_config\x18\x03 \x01(\v2%.gcommon.v1.queue.DeliveryRetryConfigR\vretryConfig\x12H\n" +
	"\fbatch_config\x18\x04 \x01(\v2%.gcommon.v1.queue.BatchDeliveryConfigR\vbatchConfig\x12H\n" +
	"\fflow_control\x18\x05 \x01(\v2%.gcommon.v1.queue.FlowControlSettingsR\vflowControl\x12-\n" +
	"\x12enable_compression\x18\x06 \x01(\bR\x11enableCompression\x12[\n" +
	"\fauth_headers\x18\a \x03(\v28.gcommon.v1.queue.DeliveryConfiguration.AuthHeadersEntryR\vauthHeaders\x1a>\n" +
	"\x10AuthHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf7\x01\n" +
	"\x13DeliveryRetryConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1f\n" +
	"\vmax_retries\x18\x02 \x01(\x05R\n" +
	"maxRetries\x12(\n" +
	"\x10initial_delay_ms\x18\x03 \x01(\x05R\x0einitialDelayMs\x12 \n" +
	"\fmax_delay_ms\x18\x04 \x01(\x05R\n" +
	"maxDelayMs\x12-\n" +
	"\x12backoff_multiplier\x18\x05 \x01(\x01R\x11backoffMultiplier\x12*\n" +
	"\x11retry_error_codes\x18\x06 \x03(\tR\x0fretryErrorCodes\"\xa7\x01\n" +
	"\x13BatchDeliveryConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12$\n" +
	"\x0emax_batch_size\x18\x02 \x01(\x05R\fmaxBatchSize\x12&\n" +
	"\x0fmax_batch_bytes\x18\x03 \x01(\x03R\rmaxBatchBytes\x12(\n" +
	"\x10batch_timeout_ms\x18\x04 \x01(\x05R\x0ebatchTimeoutMs\"\xa1\x01\n" +
	"\x13FlowControlSettings\x128\n" +
	"\x18max_outstanding_messages\x18\x01 \x01(\x05R\x16maxOutstandingMessages\x122\n" +
	"\x15max_outstanding_bytes\x18\x02 \x01(\x03R\x13maxOutstandingBytes\x12\x1c\n" +
	"\talgorithm\x18\x03 \x01(\tR\talgorithm\"\xe9\x02\n" +
	"\x13ErrorHandlingConfig\x12F\n" +
	"\n" +
	"dlq_config\x18\x01 \x01(\v2'.gcommon.v1.queue.DeadLetterQueueConfigR\tdlqConfig\x122\n" +
	"\x15max_delivery_attempts\x18\x02 \x01(\x05R\x13maxDeliveryAttempts\x12H\n" +
	"\rerror_actions\x18\x03 \x03(\v2#.gcommon.v1.queue.ErrorActionConfigR\ferrorActions\x120\n" +
	"\x14enable_error_logging\x18\x04 \x01(\bR\x12enableErrorLogging\x12Z\n" +
	"\x13notification_config\x18\x05 \x01(\v2).gcommon.v1.queue.ErrorNotificationConfigR\x12notificationConfig\"\xab\x01\n" +
	"\x15DeadLetterQueueConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1b\n" +
	"\tdlq_topic\x18\x02 \x01(\tR\bdlqTopic\x12-\n" +
	"\x13dlq_max_age_seconds\x18\x03 \x01(\x03R\x10dlqMaxAgeSeconds\x12,\n" +
	"\x12include_error_info\x18\x04 \x01(\bR\x10includeErrorInfo\"\xed\x01\n" +
	"\x11ErrorActionConfig\x12#\n" +
	"\rerror_pattern\x18\x01 \x01(\tR\ferrorPattern\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\x12Z\n" +
	"\raction_params\x18\x03 \x03(\v25.gcommon.v1.queue.ErrorActionConfig.ActionParamsEntryR\factionParams\x1a?\n" +
	"\x11ActionParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x01\n" +
	"\x17ErrorNotificationConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x123\n" +
	"\x15notification_channels\x18\x02 \x03(\tR\x14notificationChannels\x12'\n" +
	"\x0ferror_threshold\x18\x03 \x01(\x05R\x0eerrorThreshold\x12D\n" +
	"\x1enotification_frequency_seconds\x18\x04 \x01(\x05R\x1cnotificationFrequencySecondsB\xba\x01\n" +
	"\x14com.gcommon.v1.queueB\x15SubscribeRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_subscribe_request_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_subscribe_request_proto_rawDescData []byte
)

func file_pkg_queue_proto_subscribe_request_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_subscribe_request_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_subscribe_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_subscribe_request_proto_rawDesc), len(file_pkg_queue_proto_subscribe_request_proto_rawDesc)))
	})
	return file_pkg_queue_proto_subscribe_request_proto_rawDescData
}

var file_pkg_queue_proto_subscribe_request_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_pkg_queue_proto_subscribe_request_proto_goTypes = []any{
	(*SubscribeRequest)(nil),          // 0: gcommon.v1.queue.SubscribeRequest
	(*SubscriptionConfiguration)(nil), // 1: gcommon.v1.queue.SubscriptionConfiguration
	(*MessageFilterConfig)(nil),       // 2: gcommon.v1.queue.MessageFilterConfig
	(*ContentFilter)(nil),             // 3: gcommon.v1.queue.ContentFilter
	(*DeliveryConfiguration)(nil),     // 4: gcommon.v1.queue.DeliveryConfiguration
	(*DeliveryRetryConfig)(nil),       // 5: gcommon.v1.queue.DeliveryRetryConfig
	(*BatchDeliveryConfig)(nil),       // 6: gcommon.v1.queue.BatchDeliveryConfig
	(*FlowControlSettings)(nil),       // 7: gcommon.v1.queue.FlowControlSettings
	(*ErrorHandlingConfig)(nil),       // 8: gcommon.v1.queue.ErrorHandlingConfig
	(*DeadLetterQueueConfig)(nil),     // 9: gcommon.v1.queue.DeadLetterQueueConfig
	(*ErrorActionConfig)(nil),         // 10: gcommon.v1.queue.ErrorActionConfig
	(*ErrorNotificationConfig)(nil),   // 11: gcommon.v1.queue.ErrorNotificationConfig
	nil,                               // 12: gcommon.v1.queue.SubscribeRequest.MetadataEntry
	nil,                               // 13: gcommon.v1.queue.MessageFilterConfig.HeaderFiltersEntry
	nil,                               // 14: gcommon.v1.queue.DeliveryConfiguration.AuthHeadersEntry
	nil,                               // 15: gcommon.v1.queue.ErrorActionConfig.ActionParamsEntry
	(AckLevel)(0),                     // 16: gcommon.v1.queue.AckLevel
	(DeliveryMode)(0),                 // 17: gcommon.v1.queue.DeliveryMode
}
var file_pkg_queue_proto_subscribe_request_proto_depIdxs = []int32{
	1,  // 0: gcommon.v1.queue.SubscribeRequest.config:type_name -> gcommon.v1.queue.SubscriptionConfiguration
	2,  // 1: gcommon.v1.queue.SubscribeRequest.filter_config:type_name -> gcommon.v1.queue.MessageFilterConfig
	4,  // 2: gcommon.v1.queue.SubscribeRequest.delivery_config:type_name -> gcommon.v1.queue.DeliveryConfiguration
	8,  // 3: gcommon.v1.queue.SubscribeRequest.error_handling:type_name -> gcommon.v1.queue.ErrorHandlingConfig
	12, // 4: gcommon.v1.queue.SubscribeRequest.metadata:type_name -> gcommon.v1.queue.SubscribeRequest.MetadataEntry
	16, // 5: gcommon.v1.queue.SubscriptionConfiguration.ack_level:type_name -> gcommon.v1.queue.AckLevel
	17, // 6: gcommon.v1.queue.SubscriptionConfiguration.delivery_mode:type_name -> gcommon.v1.queue.DeliveryMode
	13, // 7: gcommon.v1.queue.MessageFilterConfig.header_filters:type_name -> gcommon.v1.queue.MessageFilterConfig.HeaderFiltersEntry
	3,  // 8: gcommon.v1.queue.MessageFilterConfig.content_filters:type_name -> gcommon.v1.queue.ContentFilter
	5,  // 9: gcommon.v1.queue.DeliveryConfiguration.retry_config:type_name -> gcommon.v1.queue.DeliveryRetryConfig
	6,  // 10: gcommon.v1.queue.DeliveryConfiguration.batch_config:type_name -> gcommon.v1.queue.BatchDeliveryConfig
	7,  // 11: gcommon.v1.queue.DeliveryConfiguration.flow_control:type_name -> gcommon.v1.queue.FlowControlSettings
	14, // 12: gcommon.v1.queue.DeliveryConfiguration.auth_headers:type_name -> gcommon.v1.queue.DeliveryConfiguration.AuthHeadersEntry
	9,  // 13: gcommon.v1.queue.ErrorHandlingConfig.dlq_config:type_name -> gcommon.v1.queue.DeadLetterQueueConfig
	10, // 14: gcommon.v1.queue.ErrorHandlingConfig.error_actions:type_name -> gcommon.v1.queue.ErrorActionConfig
	11, // 15: gcommon.v1.queue.ErrorHandlingConfig.notification_config:type_name -> gcommon.v1.queue.ErrorNotificationConfig
	15, // 16: gcommon.v1.queue.ErrorActionConfig.action_params:type_name -> gcommon.v1.queue.ErrorActionConfig.ActionParamsEntry
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_subscribe_request_proto_init() }
func file_pkg_queue_proto_subscribe_request_proto_init() {
	if File_pkg_queue_proto_subscribe_request_proto != nil {
		return
	}
	file_pkg_queue_proto_ack_level_proto_init()
	file_pkg_queue_proto_delivery_mode_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_subscribe_request_proto_rawDesc), len(file_pkg_queue_proto_subscribe_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_subscribe_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_subscribe_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_subscribe_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_subscribe_request_proto = out.File
	file_pkg_queue_proto_subscribe_request_proto_goTypes = nil
	file_pkg_queue_proto_subscribe_request_proto_depIdxs = nil
}
