// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/update_subscription_config_request.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UpdateSubscriptionConfigRequest modifies subscription configuration settings
type UpdateSubscriptionConfigRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Subscription identifier
	SubscriptionId *string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId" json:"subscription_id,omitempty"`
	// Configuration updates to apply
	ConfigUpdate *SubscriptionConfigUpdate `protobuf:"bytes,2,opt,name=config_update,json=configUpdate" json:"config_update,omitempty"`
	// Specify which fields to update (empty = update all)
	UpdateFields []string `protobuf:"bytes,3,rep,name=update_fields,json=updateFields" json:"update_fields,omitempty"`
	// Validate configuration without applying changes
	ValidateOnly *bool `protobuf:"varint,4,opt,name=validate_only,json=validateOnly" json:"validate_only,omitempty"`
	// Force update even if subscription is active
	ForceUpdate *bool `protobuf:"varint,5,opt,name=force_update,json=forceUpdate" json:"force_update,omitempty"`
	// Apply changes immediately or schedule for later
	ImmediateApply *bool `protobuf:"varint,6,opt,name=immediate_apply,json=immediateApply" json:"immediate_apply,omitempty"`
	// Optional reason for the configuration change
	ChangeReason *string `protobuf:"bytes,7,opt,name=change_reason,json=changeReason" json:"change_reason,omitempty"`
	// Metadata for the update operation
	Metadata      map[string]string `protobuf:"bytes,8,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSubscriptionConfigRequest) Reset() {
	*x = UpdateSubscriptionConfigRequest{}
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubscriptionConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionConfigRequest) ProtoMessage() {}

func (x *UpdateSubscriptionConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_update_subscription_config_request_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateSubscriptionConfigRequest) GetSubscriptionId() string {
	if x != nil && x.SubscriptionId != nil {
		return *x.SubscriptionId
	}
	return ""
}

func (x *UpdateSubscriptionConfigRequest) GetConfigUpdate() *SubscriptionConfigUpdate {
	if x != nil {
		return x.ConfigUpdate
	}
	return nil
}

func (x *UpdateSubscriptionConfigRequest) GetUpdateFields() []string {
	if x != nil {
		return x.UpdateFields
	}
	return nil
}

func (x *UpdateSubscriptionConfigRequest) GetValidateOnly() bool {
	if x != nil && x.ValidateOnly != nil {
		return *x.ValidateOnly
	}
	return false
}

func (x *UpdateSubscriptionConfigRequest) GetForceUpdate() bool {
	if x != nil && x.ForceUpdate != nil {
		return *x.ForceUpdate
	}
	return false
}

func (x *UpdateSubscriptionConfigRequest) GetImmediateApply() bool {
	if x != nil && x.ImmediateApply != nil {
		return *x.ImmediateApply
	}
	return false
}

func (x *UpdateSubscriptionConfigRequest) GetChangeReason() string {
	if x != nil && x.ChangeReason != nil {
		return *x.ChangeReason
	}
	return ""
}

func (x *UpdateSubscriptionConfigRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Configuration updates for a subscription
type SubscriptionConfigUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Updated subscription name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Updated delivery settings
	DeliverySettings *DeliverySettings `protobuf:"bytes,2,opt,name=delivery_settings,json=deliverySettings" json:"delivery_settings,omitempty"`
	// Updated retry configuration
	RetrySettings *RetrySettings `protobuf:"bytes,3,opt,name=retry_settings,json=retrySettings" json:"retry_settings,omitempty"`
	// Updated filtering rules
	FilterSettings *FilterSettings `protobuf:"bytes,4,opt,name=filter_settings,json=filterSettings" json:"filter_settings,omitempty"`
	// Updated routing configuration
	RoutingSettings *RoutingSettings `protobuf:"bytes,5,opt,name=routing_settings,json=routingSettings" json:"routing_settings,omitempty"`
	// Maximum inflight messages
	MaxInflightMessages *int32 `protobuf:"varint,6,opt,name=max_inflight_messages,json=maxInflightMessages" json:"max_inflight_messages,omitempty"`
	// Acknowledgment timeout (milliseconds)
	AckTimeoutMs *int32 `protobuf:"varint,7,opt,name=ack_timeout_ms,json=ackTimeoutMs" json:"ack_timeout_ms,omitempty"`
	// Priority level for messages
	PriorityLevel *int32 `protobuf:"varint,8,opt,name=priority_level,json=priorityLevel" json:"priority_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscriptionConfigUpdate) Reset() {
	*x = SubscriptionConfigUpdate{}
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionConfigUpdate) ProtoMessage() {}

func (x *SubscriptionConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionConfigUpdate.ProtoReflect.Descriptor instead.
func (*SubscriptionConfigUpdate) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_update_subscription_config_request_proto_rawDescGZIP(), []int{1}
}

func (x *SubscriptionConfigUpdate) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SubscriptionConfigUpdate) GetDeliverySettings() *DeliverySettings {
	if x != nil {
		return x.DeliverySettings
	}
	return nil
}

func (x *SubscriptionConfigUpdate) GetRetrySettings() *RetrySettings {
	if x != nil {
		return x.RetrySettings
	}
	return nil
}

func (x *SubscriptionConfigUpdate) GetFilterSettings() *FilterSettings {
	if x != nil {
		return x.FilterSettings
	}
	return nil
}

func (x *SubscriptionConfigUpdate) GetRoutingSettings() *RoutingSettings {
	if x != nil {
		return x.RoutingSettings
	}
	return nil
}

func (x *SubscriptionConfigUpdate) GetMaxInflightMessages() int32 {
	if x != nil && x.MaxInflightMessages != nil {
		return *x.MaxInflightMessages
	}
	return 0
}

func (x *SubscriptionConfigUpdate) GetAckTimeoutMs() int32 {
	if x != nil && x.AckTimeoutMs != nil {
		return *x.AckTimeoutMs
	}
	return 0
}

func (x *SubscriptionConfigUpdate) GetPriorityLevel() int32 {
	if x != nil && x.PriorityLevel != nil {
		return *x.PriorityLevel
	}
	return 0
}

// Delivery settings for subscription
type DeliverySettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Delivery mode (push, pull, streaming)
	DeliveryMode *string `protobuf:"bytes,1,opt,name=delivery_mode,json=deliveryMode" json:"delivery_mode,omitempty"`
	// Endpoint for push delivery
	PushEndpoint *string `protobuf:"bytes,2,opt,name=push_endpoint,json=pushEndpoint" json:"push_endpoint,omitempty"`
	// Delivery timeout (milliseconds)
	DeliveryTimeoutMs *int32 `protobuf:"varint,3,opt,name=delivery_timeout_ms,json=deliveryTimeoutMs" json:"delivery_timeout_ms,omitempty"`
	// Enable ordered delivery
	OrderedDelivery *bool `protobuf:"varint,4,opt,name=ordered_delivery,json=orderedDelivery" json:"ordered_delivery,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeliverySettings) Reset() {
	*x = DeliverySettings{}
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliverySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliverySettings) ProtoMessage() {}

func (x *DeliverySettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliverySettings.ProtoReflect.Descriptor instead.
func (*DeliverySettings) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_update_subscription_config_request_proto_rawDescGZIP(), []int{2}
}

func (x *DeliverySettings) GetDeliveryMode() string {
	if x != nil && x.DeliveryMode != nil {
		return *x.DeliveryMode
	}
	return ""
}

func (x *DeliverySettings) GetPushEndpoint() string {
	if x != nil && x.PushEndpoint != nil {
		return *x.PushEndpoint
	}
	return ""
}

func (x *DeliverySettings) GetDeliveryTimeoutMs() int32 {
	if x != nil && x.DeliveryTimeoutMs != nil {
		return *x.DeliveryTimeoutMs
	}
	return 0
}

func (x *DeliverySettings) GetOrderedDelivery() bool {
	if x != nil && x.OrderedDelivery != nil {
		return *x.OrderedDelivery
	}
	return false
}

// Retry settings for failed deliveries
type RetrySettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum retry attempts
	MaxRetries *int32 `protobuf:"varint,1,opt,name=max_retries,json=maxRetries" json:"max_retries,omitempty"`
	// Initial retry delay (milliseconds)
	InitialDelayMs *int32 `protobuf:"varint,2,opt,name=initial_delay_ms,json=initialDelayMs" json:"initial_delay_ms,omitempty"`
	// Maximum retry delay (milliseconds)
	MaxDelayMs *int32 `protobuf:"varint,3,opt,name=max_delay_ms,json=maxDelayMs" json:"max_delay_ms,omitempty"`
	// Backoff multiplier
	BackoffMultiplier *float64 `protobuf:"fixed64,4,opt,name=backoff_multiplier,json=backoffMultiplier" json:"backoff_multiplier,omitempty"`
	// Dead letter queue topic
	DeadLetterTopic *string `protobuf:"bytes,5,opt,name=dead_letter_topic,json=deadLetterTopic" json:"dead_letter_topic,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RetrySettings) Reset() {
	*x = RetrySettings{}
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrySettings) ProtoMessage() {}

func (x *RetrySettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrySettings.ProtoReflect.Descriptor instead.
func (*RetrySettings) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_update_subscription_config_request_proto_rawDescGZIP(), []int{3}
}

func (x *RetrySettings) GetMaxRetries() int32 {
	if x != nil && x.MaxRetries != nil {
		return *x.MaxRetries
	}
	return 0
}

func (x *RetrySettings) GetInitialDelayMs() int32 {
	if x != nil && x.InitialDelayMs != nil {
		return *x.InitialDelayMs
	}
	return 0
}

func (x *RetrySettings) GetMaxDelayMs() int32 {
	if x != nil && x.MaxDelayMs != nil {
		return *x.MaxDelayMs
	}
	return 0
}

func (x *RetrySettings) GetBackoffMultiplier() float64 {
	if x != nil && x.BackoffMultiplier != nil {
		return *x.BackoffMultiplier
	}
	return 0
}

func (x *RetrySettings) GetDeadLetterTopic() string {
	if x != nil && x.DeadLetterTopic != nil {
		return *x.DeadLetterTopic
	}
	return ""
}

// Message filtering settings
type FilterSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Content-based filters
	ContentFilters map[string]string `protobuf:"bytes,1,rep,name=content_filters,json=contentFilters" json:"content_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Header-based filters
	HeaderFilters map[string]string `protobuf:"bytes,2,rep,name=header_filters,json=headerFilters" json:"header_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Filter expression
	FilterExpression *string `protobuf:"bytes,3,opt,name=filter_expression,json=filterExpression" json:"filter_expression,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FilterSettings) Reset() {
	*x = FilterSettings{}
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterSettings) ProtoMessage() {}

func (x *FilterSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterSettings.ProtoReflect.Descriptor instead.
func (*FilterSettings) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_update_subscription_config_request_proto_rawDescGZIP(), []int{4}
}

func (x *FilterSettings) GetContentFilters() map[string]string {
	if x != nil {
		return x.ContentFilters
	}
	return nil
}

func (x *FilterSettings) GetHeaderFilters() map[string]string {
	if x != nil {
		return x.HeaderFilters
	}
	return nil
}

func (x *FilterSettings) GetFilterExpression() string {
	if x != nil && x.FilterExpression != nil {
		return *x.FilterExpression
	}
	return ""
}

// Message routing settings
type RoutingSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Routing key pattern
	RoutingKeyPattern *string `protobuf:"bytes,1,opt,name=routing_key_pattern,json=routingKeyPattern" json:"routing_key_pattern,omitempty"`
	// Target partitions
	TargetPartitions []int32 `protobuf:"varint,2,rep,packed,name=target_partitions,json=targetPartitions" json:"target_partitions,omitempty"`
	// Routing strategy
	RoutingStrategy *string `protobuf:"bytes,3,opt,name=routing_strategy,json=routingStrategy" json:"routing_strategy,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RoutingSettings) Reset() {
	*x = RoutingSettings{}
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingSettings) ProtoMessage() {}

func (x *RoutingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingSettings.ProtoReflect.Descriptor instead.
func (*RoutingSettings) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_update_subscription_config_request_proto_rawDescGZIP(), []int{5}
}

func (x *RoutingSettings) GetRoutingKeyPattern() string {
	if x != nil && x.RoutingKeyPattern != nil {
		return *x.RoutingKeyPattern
	}
	return ""
}

func (x *RoutingSettings) GetTargetPartitions() []int32 {
	if x != nil {
		return x.TargetPartitions
	}
	return nil
}

func (x *RoutingSettings) GetRoutingStrategy() string {
	if x != nil && x.RoutingStrategy != nil {
		return *x.RoutingStrategy
	}
	return ""
}

var File_pkg_queue_proto_update_subscription_config_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_update_subscription_config_request_proto_rawDesc = "" +
	"\n" +
	"8pkg/queue/proto/update_subscription_config_request.proto\x12\x10gcommon.v1.queue\"\xf0\x03\n" +
	"\x1fUpdateSubscriptionConfigRequest\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12O\n" +
	"\rconfig_update\x18\x02 \x01(\v2*.gcommon.v1.queue.SubscriptionConfigUpdateR\fconfigUpdate\x12#\n" +
	"\rupdate_fields\x18\x03 \x03(\tR\fupdateFields\x12#\n" +
	"\rvalidate_only\x18\x04 \x01(\bR\fvalidateOnly\x12!\n" +
	"\fforce_update\x18\x05 \x01(\bR\vforceUpdate\x12'\n" +
	"\x0fimmediate_apply\x18\x06 \x01(\bR\x0eimmediateApply\x12#\n" +
	"\rchange_reason\x18\a \x01(\tR\fchangeReason\x12[\n" +
	"\bmetadata\x18\b \x03(\v2?.gcommon.v1.queue.UpdateSubscriptionConfigRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe1\x03\n" +
	"\x18SubscriptionConfigUpdate\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12O\n" +
	"\x11delivery_settings\x18\x02 \x01(\v2\".gcommon.v1.queue.DeliverySettingsR\x10deliverySettings\x12F\n" +
	"\x0eretry_settings\x18\x03 \x01(\v2\x1f.gcommon.v1.queue.RetrySettingsR\rretrySettings\x12I\n" +
	"\x0ffilter_settings\x18\x04 \x01(\v2 .gcommon.v1.queue.FilterSettingsR\x0efilterSettings\x12L\n" +
	"\x10routing_settings\x18\x05 \x01(\v2!.gcommon.v1.queue.RoutingSettingsR\x0froutingSettings\x122\n" +
	"\x15max_inflight_messages\x18\x06 \x01(\x05R\x13maxInflightMessages\x12$\n" +
	"\x0eack_timeout_ms\x18\a \x01(\x05R\fackTimeoutMs\x12%\n" +
	"\x0epriority_level\x18\b \x01(\x05R\rpriorityLevel\"\xb7\x01\n" +
	"\x10DeliverySettings\x12#\n" +
	"\rdelivery_mode\x18\x01 \x01(\tR\fdeliveryMode\x12#\n" +
	"\rpush_endpoint\x18\x02 \x01(\tR\fpushEndpoint\x12.\n" +
	"\x13delivery_timeout_ms\x18\x03 \x01(\x05R\x11deliveryTimeoutMs\x12)\n" +
	"\x10ordered_delivery\x18\x04 \x01(\bR\x0forderedDelivery\"\xd7\x01\n" +
	"\rRetrySettings\x12\x1f\n" +
	"\vmax_retries\x18\x01 \x01(\x05R\n" +
	"maxRetries\x12(\n" +
	"\x10initial_delay_ms\x18\x02 \x01(\x05R\x0einitialDelayMs\x12 \n" +
	"\fmax_delay_ms\x18\x03 \x01(\x05R\n" +
	"maxDelayMs\x12-\n" +
	"\x12backoff_multiplier\x18\x04 \x01(\x01R\x11backoffMultiplier\x12*\n" +
	"\x11dead_letter_topic\x18\x05 \x01(\tR\x0fdeadLetterTopic\"\xfd\x02\n" +
	"\x0eFilterSettings\x12]\n" +
	"\x0fcontent_filters\x18\x01 \x03(\v24.gcommon.v1.queue.FilterSettings.ContentFiltersEntryR\x0econtentFilters\x12Z\n" +
	"\x0eheader_filters\x18\x02 \x03(\v23.gcommon.v1.queue.FilterSettings.HeaderFiltersEntryR\rheaderFilters\x12+\n" +
	"\x11filter_expression\x18\x03 \x01(\tR\x10filterExpression\x1aA\n" +
	"\x13ContentFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a@\n" +
	"\x12HeaderFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x99\x01\n" +
	"\x0fRoutingSettings\x12.\n" +
	"\x13routing_key_pattern\x18\x01 \x01(\tR\x11routingKeyPattern\x12+\n" +
	"\x11target_partitions\x18\x02 \x03(\x05R\x10targetPartitions\x12)\n" +
	"\x10routing_strategy\x18\x03 \x01(\tR\x0froutingStrategyB\xc9\x01\n" +
	"\x14com.gcommon.v1.queueB$UpdateSubscriptionConfigRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_update_subscription_config_request_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_update_subscription_config_request_proto_rawDescData []byte
)

func file_pkg_queue_proto_update_subscription_config_request_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_update_subscription_config_request_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_update_subscription_config_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_update_subscription_config_request_proto_rawDesc), len(file_pkg_queue_proto_update_subscription_config_request_proto_rawDesc)))
	})
	return file_pkg_queue_proto_update_subscription_config_request_proto_rawDescData
}

var file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pkg_queue_proto_update_subscription_config_request_proto_goTypes = []any{
	(*UpdateSubscriptionConfigRequest)(nil), // 0: gcommon.v1.queue.UpdateSubscriptionConfigRequest
	(*SubscriptionConfigUpdate)(nil),        // 1: gcommon.v1.queue.SubscriptionConfigUpdate
	(*DeliverySettings)(nil),                // 2: gcommon.v1.queue.DeliverySettings
	(*RetrySettings)(nil),                   // 3: gcommon.v1.queue.RetrySettings
	(*FilterSettings)(nil),                  // 4: gcommon.v1.queue.FilterSettings
	(*RoutingSettings)(nil),                 // 5: gcommon.v1.queue.RoutingSettings
	nil,                                     // 6: gcommon.v1.queue.UpdateSubscriptionConfigRequest.MetadataEntry
	nil,                                     // 7: gcommon.v1.queue.FilterSettings.ContentFiltersEntry
	nil,                                     // 8: gcommon.v1.queue.FilterSettings.HeaderFiltersEntry
}
var file_pkg_queue_proto_update_subscription_config_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.UpdateSubscriptionConfigRequest.config_update:type_name -> gcommon.v1.queue.SubscriptionConfigUpdate
	6, // 1: gcommon.v1.queue.UpdateSubscriptionConfigRequest.metadata:type_name -> gcommon.v1.queue.UpdateSubscriptionConfigRequest.MetadataEntry
	2, // 2: gcommon.v1.queue.SubscriptionConfigUpdate.delivery_settings:type_name -> gcommon.v1.queue.DeliverySettings
	3, // 3: gcommon.v1.queue.SubscriptionConfigUpdate.retry_settings:type_name -> gcommon.v1.queue.RetrySettings
	4, // 4: gcommon.v1.queue.SubscriptionConfigUpdate.filter_settings:type_name -> gcommon.v1.queue.FilterSettings
	5, // 5: gcommon.v1.queue.SubscriptionConfigUpdate.routing_settings:type_name -> gcommon.v1.queue.RoutingSettings
	7, // 6: gcommon.v1.queue.FilterSettings.content_filters:type_name -> gcommon.v1.queue.FilterSettings.ContentFiltersEntry
	8, // 7: gcommon.v1.queue.FilterSettings.header_filters:type_name -> gcommon.v1.queue.FilterSettings.HeaderFiltersEntry
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_update_subscription_config_request_proto_init() }
func file_pkg_queue_proto_update_subscription_config_request_proto_init() {
	if File_pkg_queue_proto_update_subscription_config_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_update_subscription_config_request_proto_rawDesc), len(file_pkg_queue_proto_update_subscription_config_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_update_subscription_config_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_update_subscription_config_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_update_subscription_config_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_update_subscription_config_request_proto = out.File
	file_pkg_queue_proto_update_subscription_config_request_proto_goTypes = nil
	file_pkg_queue_proto_update_subscription_config_request_proto_depIdxs = nil
}
