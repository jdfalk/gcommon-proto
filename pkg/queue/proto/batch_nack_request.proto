// file: pkg/queue/proto/batch_nack_request.proto
// version: 1.1.0
// Request to negative acknowledge multiple messages in batch

edition = "2023";

package gcommon.v1.queue;

import "pkg/queue/proto/nack_error_category.proto";

option go_package = "github.com/jdfalk/gcommon/pkg/queue/proto;queuepb";

// BatchNackRequest negatively acknowledges multiple messages at once
message BatchNackRequest {
  // Consumer group ID performing the nack
  string consumer_group_id = 1;

  // Consumer ID within the group
  string consumer_id = 2;

  // Messages to negative acknowledge
  repeated MessageNack message_nacks = 3;

  // Requeue messages after nack
  bool requeue_messages = 4;

  // Delay before requeuing (milliseconds)
  int64 requeue_delay_ms = 5;

  // Maximum number of requeue attempts
  int32 max_requeue_attempts = 6;

  // Send failed messages to dead letter queue
  bool send_to_dlq = 7;

  // Reason for batch nack operation
  string nack_reason = 8;

  // Additional metadata for the nack operation
  map<string, string> metadata = 9;
}

// Individual message negative acknowledgment
message MessageNack {
  // Message identifier
  string message_id = 1;

  // Message delivery tag
  string delivery_tag = 2;

  // Partition ID containing the message
  int32 partition_id = 3;

  // Message offset
  int64 message_offset = 4;

  // Reason for negative acknowledgment
  string nack_reason = 5;

  // Error category for the nack
  NackErrorCategory error_category = 6;

  // Specific error code
  string error_code = 7;

  // Retry this specific message
  bool retry_message = 8;

  // Custom retry delay for this message (milliseconds)
  int64 retry_delay_ms = 9;

  // Message-specific metadata
  map<string, string> message_metadata = 10;
}
