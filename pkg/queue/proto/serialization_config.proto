// filepath: pkg/queue/proto/messages/serialization_config.proto
// file: queue/proto/messages/serialization_config.proto
// version: 1.0.0
// guid: 2a3b4c5d-6e7f-8a9b-0c1d-2e3f4a5b6c7d
//
// Message definitions for queue module
//
edition = "2023";

package gcommon.v1.queue;

import "google/protobuf/go_features.proto";
import "pkg/queue/proto/serialization_format.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/queue/proto;queuepb";

/**
 * Configuration for message serialization and deserialization.
 */
message SerializationConfig {
  // Default serialization format
  gcommon.v1.queue.SerializationFormat default_format = 1;

  // Supported serialization formats
  repeated gcommon.v1.queue.SerializationFormat supported_formats = 2;

  // Whether to auto-detect format from message headers
  bool auto_detect_format = 3;

  // Content encoding for compressed serialization
  string content_encoding = 4;

  // Whether to validate message format
  bool validate_format = 5;

  // Custom serialization settings
  map<string, string> custom_settings = 6;

  // Serialization options per format
  repeated FormatOptions format_options = 7;

  // Whether to preserve type information
  bool preserve_type_info = 8;
}

/**
 * Serialization options for a specific format.
 */
message FormatOptions {
  // Serialization format
  gcommon.v1.queue.SerializationFormat format = 1;

  // Format-specific configuration
  map<string, string> options = 2;

  // Whether to enable compression for this format
  bool enable_compression = 3;

  // Compression algorithm
  CompressionAlgorithm compression_algorithm = 4;

  // Maximum message size for this format
  int64 max_message_size = 5;
}

/**
 * Compression algorithms for serialization.
 */
enum CompressionAlgorithm {
  // Default unspecified algorithm
  COMPRESSION_ALGORITHM_UNSPECIFIED = 0;

  // No compression
  COMPRESSION_ALGORITHM_NONE = 1;

  // GZIP compression
  COMPRESSION_ALGORITHM_GZIP = 2;

  // LZ4 compression
  COMPRESSION_ALGORITHM_LZ4 = 3;

  // Snappy compression
  COMPRESSION_ALGORITHM_SNAPPY = 4;

  // ZSTD compression
  COMPRESSION_ALGORITHM_ZSTD = 5;

  // Brotli compression
  COMPRESSION_ALGORITHM_BROTLI = 6;
}
