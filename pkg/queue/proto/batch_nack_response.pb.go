// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/batch_nack_response.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Response for batch negative acknowledgment operations
type BatchNackResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of messages successfully nacked
	SuccessfulCount *int32 `protobuf:"varint,1,opt,name=successful_count,json=successfulCount" json:"successful_count,omitempty"`
	// Number of messages that failed to nack
	FailedCount *int32 `protobuf:"varint,2,opt,name=failed_count,json=failedCount" json:"failed_count,omitempty"`
	// List of message IDs that were successfully nacked
	SuccessfulMessageIds []string `protobuf:"bytes,3,rep,name=successful_message_ids,json=successfulMessageIds" json:"successful_message_ids,omitempty"`
	// List of message IDs that failed to nack
	FailedMessageIds []string `protobuf:"bytes,4,rep,name=failed_message_ids,json=failedMessageIds" json:"failed_message_ids,omitempty"`
	// Error messages for failed nacks (indexed by failed_message_ids)
	ErrorMessages []string `protobuf:"bytes,5,rep,name=error_messages,json=errorMessages" json:"error_messages,omitempty"`
	// Overall operation error if any
	Error         *string `protobuf:"bytes,6,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchNackResponse) Reset() {
	*x = BatchNackResponse{}
	mi := &file_pkg_queue_proto_batch_nack_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchNackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchNackResponse) ProtoMessage() {}

func (x *BatchNackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_batch_nack_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchNackResponse.ProtoReflect.Descriptor instead.
func (*BatchNackResponse) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_batch_nack_response_proto_rawDescGZIP(), []int{0}
}

func (x *BatchNackResponse) GetSuccessfulCount() int32 {
	if x != nil && x.SuccessfulCount != nil {
		return *x.SuccessfulCount
	}
	return 0
}

func (x *BatchNackResponse) GetFailedCount() int32 {
	if x != nil && x.FailedCount != nil {
		return *x.FailedCount
	}
	return 0
}

func (x *BatchNackResponse) GetSuccessfulMessageIds() []string {
	if x != nil {
		return x.SuccessfulMessageIds
	}
	return nil
}

func (x *BatchNackResponse) GetFailedMessageIds() []string {
	if x != nil {
		return x.FailedMessageIds
	}
	return nil
}

func (x *BatchNackResponse) GetErrorMessages() []string {
	if x != nil {
		return x.ErrorMessages
	}
	return nil
}

func (x *BatchNackResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

var File_pkg_queue_proto_batch_nack_response_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_batch_nack_response_proto_rawDesc = "" +
	"\n" +
	")pkg/queue/proto/batch_nack_response.proto\x12\x10gcommon.v1.queue\"\x82\x02\n" +
	"\x11BatchNackResponse\x12)\n" +
	"\x10successful_count\x18\x01 \x01(\x05R\x0fsuccessfulCount\x12!\n" +
	"\ffailed_count\x18\x02 \x01(\x05R\vfailedCount\x124\n" +
	"\x16successful_message_ids\x18\x03 \x03(\tR\x14successfulMessageIds\x12,\n" +
	"\x12failed_message_ids\x18\x04 \x03(\tR\x10failedMessageIds\x12%\n" +
	"\x0eerror_messages\x18\x05 \x03(\tR\rerrorMessages\x12\x14\n" +
	"\x05error\x18\x06 \x01(\tR\x05errorB\xbb\x01\n" +
	"\x14com.gcommon.v1.queueB\x16BatchNackResponseProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_batch_nack_response_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_batch_nack_response_proto_rawDescData []byte
)

func file_pkg_queue_proto_batch_nack_response_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_batch_nack_response_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_batch_nack_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_batch_nack_response_proto_rawDesc), len(file_pkg_queue_proto_batch_nack_response_proto_rawDesc)))
	})
	return file_pkg_queue_proto_batch_nack_response_proto_rawDescData
}

var file_pkg_queue_proto_batch_nack_response_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_batch_nack_response_proto_goTypes = []any{
	(*BatchNackResponse)(nil), // 0: gcommon.v1.queue.BatchNackResponse
}
var file_pkg_queue_proto_batch_nack_response_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_batch_nack_response_proto_init() }
func file_pkg_queue_proto_batch_nack_response_proto_init() {
	if File_pkg_queue_proto_batch_nack_response_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_batch_nack_response_proto_rawDesc), len(file_pkg_queue_proto_batch_nack_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_batch_nack_response_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_batch_nack_response_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_batch_nack_response_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_batch_nack_response_proto = out.File
	file_pkg_queue_proto_batch_nack_response_proto_goTypes = nil
	file_pkg_queue_proto_batch_nack_response_proto_depIdxs = nil
}
