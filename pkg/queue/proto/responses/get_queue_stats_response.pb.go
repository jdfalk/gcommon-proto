// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/responses/get_queue_stats_response.proto

//go:build !protoopaque

package responses

import (
	_ "github.com/jdfalk/gcommon/pkg/common/proto"
	messages "github.com/jdfalk/gcommon/pkg/common/proto/messages"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetQueueStatsResponse contains comprehensive queue statistics
//
// This message provides detailed metrics about queue performance,
// message processing, and system health.
type GetQueueStatsResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Standard response metadata
	Metadata *messages.ResponseMetadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Overall statistics summary
	Summary *QueueStatsSummary `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	// Per-queue statistics (if multiple queues requested)
	QueueStats []*QueueStats `protobuf:"bytes,3,rep,name=queue_stats,json=queueStats" json:"queue_stats,omitempty"`
	// Consumer statistics (if requested)
	ConsumerStats []*ConsumerStats `protobuf:"bytes,4,rep,name=consumer_stats,json=consumerStats" json:"consumer_stats,omitempty"`
	// Historical statistics (if requested)
	HistoricalStats *HistoricalStats `protobuf:"bytes,5,opt,name=historical_stats,json=historicalStats" json:"historical_stats,omitempty"`
	// Error statistics (if requested)
	ErrorStats *ErrorStats `protobuf:"bytes,6,opt,name=error_stats,json=errorStats" json:"error_stats,omitempty"`
	// Performance metrics
	PerformanceMetrics *PerformanceMetrics `protobuf:"bytes,7,opt,name=performance_metrics,json=performanceMetrics" json:"performance_metrics,omitempty"`
	// Timestamp when these statistics were generated
	GeneratedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=generated_at,json=generatedAt" json:"generated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueStatsResponse) Reset() {
	*x = GetQueueStatsResponse{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueStatsResponse) ProtoMessage() {}

func (x *GetQueueStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetQueueStatsResponse) GetMetadata() *messages.ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetQueueStatsResponse) GetSummary() *QueueStatsSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *GetQueueStatsResponse) GetQueueStats() []*QueueStats {
	if x != nil {
		return x.QueueStats
	}
	return nil
}

func (x *GetQueueStatsResponse) GetConsumerStats() []*ConsumerStats {
	if x != nil {
		return x.ConsumerStats
	}
	return nil
}

func (x *GetQueueStatsResponse) GetHistoricalStats() *HistoricalStats {
	if x != nil {
		return x.HistoricalStats
	}
	return nil
}

func (x *GetQueueStatsResponse) GetErrorStats() *ErrorStats {
	if x != nil {
		return x.ErrorStats
	}
	return nil
}

func (x *GetQueueStatsResponse) GetPerformanceMetrics() *PerformanceMetrics {
	if x != nil {
		return x.PerformanceMetrics
	}
	return nil
}

func (x *GetQueueStatsResponse) GetGeneratedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.GeneratedAt
	}
	return nil
}

func (x *GetQueueStatsResponse) SetMetadata(v *messages.ResponseMetadata) {
	x.Metadata = v
}

func (x *GetQueueStatsResponse) SetSummary(v *QueueStatsSummary) {
	x.Summary = v
}

func (x *GetQueueStatsResponse) SetQueueStats(v []*QueueStats) {
	x.QueueStats = v
}

func (x *GetQueueStatsResponse) SetConsumerStats(v []*ConsumerStats) {
	x.ConsumerStats = v
}

func (x *GetQueueStatsResponse) SetHistoricalStats(v *HistoricalStats) {
	x.HistoricalStats = v
}

func (x *GetQueueStatsResponse) SetErrorStats(v *ErrorStats) {
	x.ErrorStats = v
}

func (x *GetQueueStatsResponse) SetPerformanceMetrics(v *PerformanceMetrics) {
	x.PerformanceMetrics = v
}

func (x *GetQueueStatsResponse) SetGeneratedAt(v *timestamppb.Timestamp) {
	x.GeneratedAt = v
}

func (x *GetQueueStatsResponse) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *GetQueueStatsResponse) HasSummary() bool {
	if x == nil {
		return false
	}
	return x.Summary != nil
}

func (x *GetQueueStatsResponse) HasHistoricalStats() bool {
	if x == nil {
		return false
	}
	return x.HistoricalStats != nil
}

func (x *GetQueueStatsResponse) HasErrorStats() bool {
	if x == nil {
		return false
	}
	return x.ErrorStats != nil
}

func (x *GetQueueStatsResponse) HasPerformanceMetrics() bool {
	if x == nil {
		return false
	}
	return x.PerformanceMetrics != nil
}

func (x *GetQueueStatsResponse) HasGeneratedAt() bool {
	if x == nil {
		return false
	}
	return x.GeneratedAt != nil
}

func (x *GetQueueStatsResponse) ClearMetadata() {
	x.Metadata = nil
}

func (x *GetQueueStatsResponse) ClearSummary() {
	x.Summary = nil
}

func (x *GetQueueStatsResponse) ClearHistoricalStats() {
	x.HistoricalStats = nil
}

func (x *GetQueueStatsResponse) ClearErrorStats() {
	x.ErrorStats = nil
}

func (x *GetQueueStatsResponse) ClearPerformanceMetrics() {
	x.PerformanceMetrics = nil
}

func (x *GetQueueStatsResponse) ClearGeneratedAt() {
	x.GeneratedAt = nil
}

type GetQueueStatsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Standard response metadata
	Metadata *messages.ResponseMetadata
	// Overall statistics summary
	Summary *QueueStatsSummary
	// Per-queue statistics (if multiple queues requested)
	QueueStats []*QueueStats
	// Consumer statistics (if requested)
	ConsumerStats []*ConsumerStats
	// Historical statistics (if requested)
	HistoricalStats *HistoricalStats
	// Error statistics (if requested)
	ErrorStats *ErrorStats
	// Performance metrics
	PerformanceMetrics *PerformanceMetrics
	// Timestamp when these statistics were generated
	GeneratedAt *timestamppb.Timestamp
}

func (b0 GetQueueStatsResponse_builder) Build() *GetQueueStatsResponse {
	m0 := &GetQueueStatsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Metadata = b.Metadata
	x.Summary = b.Summary
	x.QueueStats = b.QueueStats
	x.ConsumerStats = b.ConsumerStats
	x.HistoricalStats = b.HistoricalStats
	x.ErrorStats = b.ErrorStats
	x.PerformanceMetrics = b.PerformanceMetrics
	x.GeneratedAt = b.GeneratedAt
	return m0
}

// Summary of overall queue system statistics
type QueueStatsSummary struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Total number of queues
	TotalQueues *int64 `protobuf:"varint,1,opt,name=total_queues,json=totalQueues" json:"total_queues,omitempty"`
	// Total messages across all queues
	TotalMessages *int64 `protobuf:"varint,2,opt,name=total_messages,json=totalMessages" json:"total_messages,omitempty"`
	// Total messages processed in the last hour
	MessagesProcessedLastHour *int64 `protobuf:"varint,3,opt,name=messages_processed_last_hour,json=messagesProcessedLastHour" json:"messages_processed_last_hour,omitempty"`
	// Average processing time across all queues
	AverageProcessingTime *durationpb.Duration `protobuf:"bytes,4,opt,name=average_processing_time,json=averageProcessingTime" json:"average_processing_time,omitempty"`
	// Overall system health score (0-100)
	HealthScore *int32 `protobuf:"varint,5,opt,name=health_score,json=healthScore" json:"health_score,omitempty"`
	// Total active consumers
	ActiveConsumers *int64 `protobuf:"varint,6,opt,name=active_consumers,json=activeConsumers" json:"active_consumers,omitempty"`
	// Total storage used by messages
	TotalStorageBytes *int64 `protobuf:"varint,7,opt,name=total_storage_bytes,json=totalStorageBytes" json:"total_storage_bytes,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QueueStatsSummary) Reset() {
	*x = QueueStatsSummary{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueStatsSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueStatsSummary) ProtoMessage() {}

func (x *QueueStatsSummary) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueueStatsSummary) GetTotalQueues() int64 {
	if x != nil && x.TotalQueues != nil {
		return *x.TotalQueues
	}
	return 0
}

func (x *QueueStatsSummary) GetTotalMessages() int64 {
	if x != nil && x.TotalMessages != nil {
		return *x.TotalMessages
	}
	return 0
}

func (x *QueueStatsSummary) GetMessagesProcessedLastHour() int64 {
	if x != nil && x.MessagesProcessedLastHour != nil {
		return *x.MessagesProcessedLastHour
	}
	return 0
}

func (x *QueueStatsSummary) GetAverageProcessingTime() *durationpb.Duration {
	if x != nil {
		return x.AverageProcessingTime
	}
	return nil
}

func (x *QueueStatsSummary) GetHealthScore() int32 {
	if x != nil && x.HealthScore != nil {
		return *x.HealthScore
	}
	return 0
}

func (x *QueueStatsSummary) GetActiveConsumers() int64 {
	if x != nil && x.ActiveConsumers != nil {
		return *x.ActiveConsumers
	}
	return 0
}

func (x *QueueStatsSummary) GetTotalStorageBytes() int64 {
	if x != nil && x.TotalStorageBytes != nil {
		return *x.TotalStorageBytes
	}
	return 0
}

func (x *QueueStatsSummary) SetTotalQueues(v int64) {
	x.TotalQueues = &v
}

func (x *QueueStatsSummary) SetTotalMessages(v int64) {
	x.TotalMessages = &v
}

func (x *QueueStatsSummary) SetMessagesProcessedLastHour(v int64) {
	x.MessagesProcessedLastHour = &v
}

func (x *QueueStatsSummary) SetAverageProcessingTime(v *durationpb.Duration) {
	x.AverageProcessingTime = v
}

func (x *QueueStatsSummary) SetHealthScore(v int32) {
	x.HealthScore = &v
}

func (x *QueueStatsSummary) SetActiveConsumers(v int64) {
	x.ActiveConsumers = &v
}

func (x *QueueStatsSummary) SetTotalStorageBytes(v int64) {
	x.TotalStorageBytes = &v
}

func (x *QueueStatsSummary) HasTotalQueues() bool {
	if x == nil {
		return false
	}
	return x.TotalQueues != nil
}

func (x *QueueStatsSummary) HasTotalMessages() bool {
	if x == nil {
		return false
	}
	return x.TotalMessages != nil
}

func (x *QueueStatsSummary) HasMessagesProcessedLastHour() bool {
	if x == nil {
		return false
	}
	return x.MessagesProcessedLastHour != nil
}

func (x *QueueStatsSummary) HasAverageProcessingTime() bool {
	if x == nil {
		return false
	}
	return x.AverageProcessingTime != nil
}

func (x *QueueStatsSummary) HasHealthScore() bool {
	if x == nil {
		return false
	}
	return x.HealthScore != nil
}

func (x *QueueStatsSummary) HasActiveConsumers() bool {
	if x == nil {
		return false
	}
	return x.ActiveConsumers != nil
}

func (x *QueueStatsSummary) HasTotalStorageBytes() bool {
	if x == nil {
		return false
	}
	return x.TotalStorageBytes != nil
}

func (x *QueueStatsSummary) ClearTotalQueues() {
	x.TotalQueues = nil
}

func (x *QueueStatsSummary) ClearTotalMessages() {
	x.TotalMessages = nil
}

func (x *QueueStatsSummary) ClearMessagesProcessedLastHour() {
	x.MessagesProcessedLastHour = nil
}

func (x *QueueStatsSummary) ClearAverageProcessingTime() {
	x.AverageProcessingTime = nil
}

func (x *QueueStatsSummary) ClearHealthScore() {
	x.HealthScore = nil
}

func (x *QueueStatsSummary) ClearActiveConsumers() {
	x.ActiveConsumers = nil
}

func (x *QueueStatsSummary) ClearTotalStorageBytes() {
	x.TotalStorageBytes = nil
}

type QueueStatsSummary_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total number of queues
	TotalQueues *int64
	// Total messages across all queues
	TotalMessages *int64
	// Total messages processed in the last hour
	MessagesProcessedLastHour *int64
	// Average processing time across all queues
	AverageProcessingTime *durationpb.Duration
	// Overall system health score (0-100)
	HealthScore *int32
	// Total active consumers
	ActiveConsumers *int64
	// Total storage used by messages
	TotalStorageBytes *int64
}

func (b0 QueueStatsSummary_builder) Build() *QueueStatsSummary {
	m0 := &QueueStatsSummary{}
	b, x := &b0, m0
	_, _ = b, x
	x.TotalQueues = b.TotalQueues
	x.TotalMessages = b.TotalMessages
	x.MessagesProcessedLastHour = b.MessagesProcessedLastHour
	x.AverageProcessingTime = b.AverageProcessingTime
	x.HealthScore = b.HealthScore
	x.ActiveConsumers = b.ActiveConsumers
	x.TotalStorageBytes = b.TotalStorageBytes
	return m0
}

// Statistics for a specific queue
type QueueStats struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Queue name
	QueueName *string `protobuf:"bytes,1,opt,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	// Current message count
	MessageCount *int64 `protobuf:"varint,2,opt,name=message_count,json=messageCount" json:"message_count,omitempty"`
	// Messages in different states
	StateCounts *MessageStateCounts `protobuf:"bytes,3,opt,name=state_counts,json=stateCounts" json:"state_counts,omitempty"`
	// Throughput metrics
	Throughput *ThroughputMetrics `protobuf:"bytes,4,opt,name=throughput" json:"throughput,omitempty"`
	// Latency metrics
	Latency *LatencyMetrics `protobuf:"bytes,5,opt,name=latency" json:"latency,omitempty"`
	// Queue depth over time
	DepthSamples []*QueueDepthSample `protobuf:"bytes,6,rep,name=depth_samples,json=depthSamples" json:"depth_samples,omitempty"`
	// Message size distribution
	SizeDistribution *SizeDistribution `protobuf:"bytes,7,opt,name=size_distribution,json=sizeDistribution" json:"size_distribution,omitempty"`
	// Message age distribution
	AgeDistribution *AgeDistribution `protobuf:"bytes,8,opt,name=age_distribution,json=ageDistribution" json:"age_distribution,omitempty"`
	// Queue configuration details
	Configuration *QueueConfiguration `protobuf:"bytes,9,opt,name=configuration" json:"configuration,omitempty"`
	// Last activity timestamp
	LastActivity  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_activity,json=lastActivity" json:"last_activity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueStats) Reset() {
	*x = QueueStats{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueStats) ProtoMessage() {}

func (x *QueueStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueueStats) GetQueueName() string {
	if x != nil && x.QueueName != nil {
		return *x.QueueName
	}
	return ""
}

func (x *QueueStats) GetMessageCount() int64 {
	if x != nil && x.MessageCount != nil {
		return *x.MessageCount
	}
	return 0
}

func (x *QueueStats) GetStateCounts() *MessageStateCounts {
	if x != nil {
		return x.StateCounts
	}
	return nil
}

func (x *QueueStats) GetThroughput() *ThroughputMetrics {
	if x != nil {
		return x.Throughput
	}
	return nil
}

func (x *QueueStats) GetLatency() *LatencyMetrics {
	if x != nil {
		return x.Latency
	}
	return nil
}

func (x *QueueStats) GetDepthSamples() []*QueueDepthSample {
	if x != nil {
		return x.DepthSamples
	}
	return nil
}

func (x *QueueStats) GetSizeDistribution() *SizeDistribution {
	if x != nil {
		return x.SizeDistribution
	}
	return nil
}

func (x *QueueStats) GetAgeDistribution() *AgeDistribution {
	if x != nil {
		return x.AgeDistribution
	}
	return nil
}

func (x *QueueStats) GetConfiguration() *QueueConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *QueueStats) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

func (x *QueueStats) SetQueueName(v string) {
	x.QueueName = &v
}

func (x *QueueStats) SetMessageCount(v int64) {
	x.MessageCount = &v
}

func (x *QueueStats) SetStateCounts(v *MessageStateCounts) {
	x.StateCounts = v
}

func (x *QueueStats) SetThroughput(v *ThroughputMetrics) {
	x.Throughput = v
}

func (x *QueueStats) SetLatency(v *LatencyMetrics) {
	x.Latency = v
}

func (x *QueueStats) SetDepthSamples(v []*QueueDepthSample) {
	x.DepthSamples = v
}

func (x *QueueStats) SetSizeDistribution(v *SizeDistribution) {
	x.SizeDistribution = v
}

func (x *QueueStats) SetAgeDistribution(v *AgeDistribution) {
	x.AgeDistribution = v
}

func (x *QueueStats) SetConfiguration(v *QueueConfiguration) {
	x.Configuration = v
}

func (x *QueueStats) SetLastActivity(v *timestamppb.Timestamp) {
	x.LastActivity = v
}

func (x *QueueStats) HasQueueName() bool {
	if x == nil {
		return false
	}
	return x.QueueName != nil
}

func (x *QueueStats) HasMessageCount() bool {
	if x == nil {
		return false
	}
	return x.MessageCount != nil
}

func (x *QueueStats) HasStateCounts() bool {
	if x == nil {
		return false
	}
	return x.StateCounts != nil
}

func (x *QueueStats) HasThroughput() bool {
	if x == nil {
		return false
	}
	return x.Throughput != nil
}

func (x *QueueStats) HasLatency() bool {
	if x == nil {
		return false
	}
	return x.Latency != nil
}

func (x *QueueStats) HasSizeDistribution() bool {
	if x == nil {
		return false
	}
	return x.SizeDistribution != nil
}

func (x *QueueStats) HasAgeDistribution() bool {
	if x == nil {
		return false
	}
	return x.AgeDistribution != nil
}

func (x *QueueStats) HasConfiguration() bool {
	if x == nil {
		return false
	}
	return x.Configuration != nil
}

func (x *QueueStats) HasLastActivity() bool {
	if x == nil {
		return false
	}
	return x.LastActivity != nil
}

func (x *QueueStats) ClearQueueName() {
	x.QueueName = nil
}

func (x *QueueStats) ClearMessageCount() {
	x.MessageCount = nil
}

func (x *QueueStats) ClearStateCounts() {
	x.StateCounts = nil
}

func (x *QueueStats) ClearThroughput() {
	x.Throughput = nil
}

func (x *QueueStats) ClearLatency() {
	x.Latency = nil
}

func (x *QueueStats) ClearSizeDistribution() {
	x.SizeDistribution = nil
}

func (x *QueueStats) ClearAgeDistribution() {
	x.AgeDistribution = nil
}

func (x *QueueStats) ClearConfiguration() {
	x.Configuration = nil
}

func (x *QueueStats) ClearLastActivity() {
	x.LastActivity = nil
}

type QueueStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Queue name
	QueueName *string
	// Current message count
	MessageCount *int64
	// Messages in different states
	StateCounts *MessageStateCounts
	// Throughput metrics
	Throughput *ThroughputMetrics
	// Latency metrics
	Latency *LatencyMetrics
	// Queue depth over time
	DepthSamples []*QueueDepthSample
	// Message size distribution
	SizeDistribution *SizeDistribution
	// Message age distribution
	AgeDistribution *AgeDistribution
	// Queue configuration details
	Configuration *QueueConfiguration
	// Last activity timestamp
	LastActivity *timestamppb.Timestamp
}

func (b0 QueueStats_builder) Build() *QueueStats {
	m0 := &QueueStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.QueueName = b.QueueName
	x.MessageCount = b.MessageCount
	x.StateCounts = b.StateCounts
	x.Throughput = b.Throughput
	x.Latency = b.Latency
	x.DepthSamples = b.DepthSamples
	x.SizeDistribution = b.SizeDistribution
	x.AgeDistribution = b.AgeDistribution
	x.Configuration = b.Configuration
	x.LastActivity = b.LastActivity
	return m0
}

// Message counts by state
type MessageStateCounts struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Pending       *int64                 `protobuf:"varint,1,opt,name=pending" json:"pending,omitempty"`
	Processing    *int64                 `protobuf:"varint,2,opt,name=processing" json:"processing,omitempty"`
	Completed     *int64                 `protobuf:"varint,3,opt,name=completed" json:"completed,omitempty"`
	Failed        *int64                 `protobuf:"varint,4,opt,name=failed" json:"failed,omitempty"`
	Retrying      *int64                 `protobuf:"varint,5,opt,name=retrying" json:"retrying,omitempty"`
	DeadLetter    *int64                 `protobuf:"varint,6,opt,name=dead_letter,json=deadLetter" json:"dead_letter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageStateCounts) Reset() {
	*x = MessageStateCounts{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageStateCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageStateCounts) ProtoMessage() {}

func (x *MessageStateCounts) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MessageStateCounts) GetPending() int64 {
	if x != nil && x.Pending != nil {
		return *x.Pending
	}
	return 0
}

func (x *MessageStateCounts) GetProcessing() int64 {
	if x != nil && x.Processing != nil {
		return *x.Processing
	}
	return 0
}

func (x *MessageStateCounts) GetCompleted() int64 {
	if x != nil && x.Completed != nil {
		return *x.Completed
	}
	return 0
}

func (x *MessageStateCounts) GetFailed() int64 {
	if x != nil && x.Failed != nil {
		return *x.Failed
	}
	return 0
}

func (x *MessageStateCounts) GetRetrying() int64 {
	if x != nil && x.Retrying != nil {
		return *x.Retrying
	}
	return 0
}

func (x *MessageStateCounts) GetDeadLetter() int64 {
	if x != nil && x.DeadLetter != nil {
		return *x.DeadLetter
	}
	return 0
}

func (x *MessageStateCounts) SetPending(v int64) {
	x.Pending = &v
}

func (x *MessageStateCounts) SetProcessing(v int64) {
	x.Processing = &v
}

func (x *MessageStateCounts) SetCompleted(v int64) {
	x.Completed = &v
}

func (x *MessageStateCounts) SetFailed(v int64) {
	x.Failed = &v
}

func (x *MessageStateCounts) SetRetrying(v int64) {
	x.Retrying = &v
}

func (x *MessageStateCounts) SetDeadLetter(v int64) {
	x.DeadLetter = &v
}

func (x *MessageStateCounts) HasPending() bool {
	if x == nil {
		return false
	}
	return x.Pending != nil
}

func (x *MessageStateCounts) HasProcessing() bool {
	if x == nil {
		return false
	}
	return x.Processing != nil
}

func (x *MessageStateCounts) HasCompleted() bool {
	if x == nil {
		return false
	}
	return x.Completed != nil
}

func (x *MessageStateCounts) HasFailed() bool {
	if x == nil {
		return false
	}
	return x.Failed != nil
}

func (x *MessageStateCounts) HasRetrying() bool {
	if x == nil {
		return false
	}
	return x.Retrying != nil
}

func (x *MessageStateCounts) HasDeadLetter() bool {
	if x == nil {
		return false
	}
	return x.DeadLetter != nil
}

func (x *MessageStateCounts) ClearPending() {
	x.Pending = nil
}

func (x *MessageStateCounts) ClearProcessing() {
	x.Processing = nil
}

func (x *MessageStateCounts) ClearCompleted() {
	x.Completed = nil
}

func (x *MessageStateCounts) ClearFailed() {
	x.Failed = nil
}

func (x *MessageStateCounts) ClearRetrying() {
	x.Retrying = nil
}

func (x *MessageStateCounts) ClearDeadLetter() {
	x.DeadLetter = nil
}

type MessageStateCounts_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Pending    *int64
	Processing *int64
	Completed  *int64
	Failed     *int64
	Retrying   *int64
	DeadLetter *int64
}

func (b0 MessageStateCounts_builder) Build() *MessageStateCounts {
	m0 := &MessageStateCounts{}
	b, x := &b0, m0
	_, _ = b, x
	x.Pending = b.Pending
	x.Processing = b.Processing
	x.Completed = b.Completed
	x.Failed = b.Failed
	x.Retrying = b.Retrying
	x.DeadLetter = b.DeadLetter
	return m0
}

// Throughput-related metrics
type ThroughputMetrics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Messages per second over different time windows
	MessagesPerSecond_1M  *float64 `protobuf:"fixed64,1,opt,name=messages_per_second_1m,json=messagesPerSecond1m" json:"messages_per_second_1m,omitempty"`
	MessagesPerSecond_5M  *float64 `protobuf:"fixed64,2,opt,name=messages_per_second_5m,json=messagesPerSecond5m" json:"messages_per_second_5m,omitempty"`
	MessagesPerSecond_15M *float64 `protobuf:"fixed64,3,opt,name=messages_per_second_15m,json=messagesPerSecond15m" json:"messages_per_second_15m,omitempty"`
	MessagesPerSecond_1H  *float64 `protobuf:"fixed64,4,opt,name=messages_per_second_1h,json=messagesPerSecond1h" json:"messages_per_second_1h,omitempty"`
	// Peak throughput observed
	PeakMessagesPerSecond *float64               `protobuf:"fixed64,5,opt,name=peak_messages_per_second,json=peakMessagesPerSecond" json:"peak_messages_per_second,omitempty"`
	PeakTimestamp         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=peak_timestamp,json=peakTimestamp" json:"peak_timestamp,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ThroughputMetrics) Reset() {
	*x = ThroughputMetrics{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThroughputMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThroughputMetrics) ProtoMessage() {}

func (x *ThroughputMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ThroughputMetrics) GetMessagesPerSecond_1M() float64 {
	if x != nil && x.MessagesPerSecond_1M != nil {
		return *x.MessagesPerSecond_1M
	}
	return 0
}

func (x *ThroughputMetrics) GetMessagesPerSecond_5M() float64 {
	if x != nil && x.MessagesPerSecond_5M != nil {
		return *x.MessagesPerSecond_5M
	}
	return 0
}

func (x *ThroughputMetrics) GetMessagesPerSecond_15M() float64 {
	if x != nil && x.MessagesPerSecond_15M != nil {
		return *x.MessagesPerSecond_15M
	}
	return 0
}

func (x *ThroughputMetrics) GetMessagesPerSecond_1H() float64 {
	if x != nil && x.MessagesPerSecond_1H != nil {
		return *x.MessagesPerSecond_1H
	}
	return 0
}

func (x *ThroughputMetrics) GetPeakMessagesPerSecond() float64 {
	if x != nil && x.PeakMessagesPerSecond != nil {
		return *x.PeakMessagesPerSecond
	}
	return 0
}

func (x *ThroughputMetrics) GetPeakTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.PeakTimestamp
	}
	return nil
}

func (x *ThroughputMetrics) SetMessagesPerSecond_1M(v float64) {
	x.MessagesPerSecond_1M = &v
}

func (x *ThroughputMetrics) SetMessagesPerSecond_5M(v float64) {
	x.MessagesPerSecond_5M = &v
}

func (x *ThroughputMetrics) SetMessagesPerSecond_15M(v float64) {
	x.MessagesPerSecond_15M = &v
}

func (x *ThroughputMetrics) SetMessagesPerSecond_1H(v float64) {
	x.MessagesPerSecond_1H = &v
}

func (x *ThroughputMetrics) SetPeakMessagesPerSecond(v float64) {
	x.PeakMessagesPerSecond = &v
}

func (x *ThroughputMetrics) SetPeakTimestamp(v *timestamppb.Timestamp) {
	x.PeakTimestamp = v
}

func (x *ThroughputMetrics) HasMessagesPerSecond_1M() bool {
	if x == nil {
		return false
	}
	return x.MessagesPerSecond_1M != nil
}

func (x *ThroughputMetrics) HasMessagesPerSecond_5M() bool {
	if x == nil {
		return false
	}
	return x.MessagesPerSecond_5M != nil
}

func (x *ThroughputMetrics) HasMessagesPerSecond_15M() bool {
	if x == nil {
		return false
	}
	return x.MessagesPerSecond_15M != nil
}

func (x *ThroughputMetrics) HasMessagesPerSecond_1H() bool {
	if x == nil {
		return false
	}
	return x.MessagesPerSecond_1H != nil
}

func (x *ThroughputMetrics) HasPeakMessagesPerSecond() bool {
	if x == nil {
		return false
	}
	return x.PeakMessagesPerSecond != nil
}

func (x *ThroughputMetrics) HasPeakTimestamp() bool {
	if x == nil {
		return false
	}
	return x.PeakTimestamp != nil
}

func (x *ThroughputMetrics) ClearMessagesPerSecond_1M() {
	x.MessagesPerSecond_1M = nil
}

func (x *ThroughputMetrics) ClearMessagesPerSecond_5M() {
	x.MessagesPerSecond_5M = nil
}

func (x *ThroughputMetrics) ClearMessagesPerSecond_15M() {
	x.MessagesPerSecond_15M = nil
}

func (x *ThroughputMetrics) ClearMessagesPerSecond_1H() {
	x.MessagesPerSecond_1H = nil
}

func (x *ThroughputMetrics) ClearPeakMessagesPerSecond() {
	x.PeakMessagesPerSecond = nil
}

func (x *ThroughputMetrics) ClearPeakTimestamp() {
	x.PeakTimestamp = nil
}

type ThroughputMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Messages per second over different time windows
	MessagesPerSecond_1M  *float64
	MessagesPerSecond_5M  *float64
	MessagesPerSecond_15M *float64
	MessagesPerSecond_1H  *float64
	// Peak throughput observed
	PeakMessagesPerSecond *float64
	PeakTimestamp         *timestamppb.Timestamp
}

func (b0 ThroughputMetrics_builder) Build() *ThroughputMetrics {
	m0 := &ThroughputMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.MessagesPerSecond_1M = b.MessagesPerSecond_1M
	x.MessagesPerSecond_5M = b.MessagesPerSecond_5M
	x.MessagesPerSecond_15M = b.MessagesPerSecond_15M
	x.MessagesPerSecond_1H = b.MessagesPerSecond_1H
	x.PeakMessagesPerSecond = b.PeakMessagesPerSecond
	x.PeakTimestamp = b.PeakTimestamp
	return m0
}

// Latency-related metrics
type LatencyMetrics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Processing latency percentiles (in milliseconds)
	P50ProcessingLatencyMs *float64 `protobuf:"fixed64,1,opt,name=p50_processing_latency_ms,json=p50ProcessingLatencyMs" json:"p50_processing_latency_ms,omitempty"`
	P95ProcessingLatencyMs *float64 `protobuf:"fixed64,2,opt,name=p95_processing_latency_ms,json=p95ProcessingLatencyMs" json:"p95_processing_latency_ms,omitempty"`
	P99ProcessingLatencyMs *float64 `protobuf:"fixed64,3,opt,name=p99_processing_latency_ms,json=p99ProcessingLatencyMs" json:"p99_processing_latency_ms,omitempty"`
	// Queue latency (time from enqueue to dequeue)
	AverageQueueLatencyMs *float64 `protobuf:"fixed64,4,opt,name=average_queue_latency_ms,json=averageQueueLatencyMs" json:"average_queue_latency_ms,omitempty"`
	P95QueueLatencyMs     *float64 `protobuf:"fixed64,5,opt,name=p95_queue_latency_ms,json=p95QueueLatencyMs" json:"p95_queue_latency_ms,omitempty"`
	// End-to-end latency (enqueue to completion)
	AverageE2ELatencyMs *float64 `protobuf:"fixed64,6,opt,name=average_e2e_latency_ms,json=averageE2eLatencyMs" json:"average_e2e_latency_ms,omitempty"`
	P95E2ELatencyMs     *float64 `protobuf:"fixed64,7,opt,name=p95_e2e_latency_ms,json=p95E2eLatencyMs" json:"p95_e2e_latency_ms,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *LatencyMetrics) Reset() {
	*x = LatencyMetrics{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatencyMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyMetrics) ProtoMessage() {}

func (x *LatencyMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LatencyMetrics) GetP50ProcessingLatencyMs() float64 {
	if x != nil && x.P50ProcessingLatencyMs != nil {
		return *x.P50ProcessingLatencyMs
	}
	return 0
}

func (x *LatencyMetrics) GetP95ProcessingLatencyMs() float64 {
	if x != nil && x.P95ProcessingLatencyMs != nil {
		return *x.P95ProcessingLatencyMs
	}
	return 0
}

func (x *LatencyMetrics) GetP99ProcessingLatencyMs() float64 {
	if x != nil && x.P99ProcessingLatencyMs != nil {
		return *x.P99ProcessingLatencyMs
	}
	return 0
}

func (x *LatencyMetrics) GetAverageQueueLatencyMs() float64 {
	if x != nil && x.AverageQueueLatencyMs != nil {
		return *x.AverageQueueLatencyMs
	}
	return 0
}

func (x *LatencyMetrics) GetP95QueueLatencyMs() float64 {
	if x != nil && x.P95QueueLatencyMs != nil {
		return *x.P95QueueLatencyMs
	}
	return 0
}

func (x *LatencyMetrics) GetAverageE2ELatencyMs() float64 {
	if x != nil && x.AverageE2ELatencyMs != nil {
		return *x.AverageE2ELatencyMs
	}
	return 0
}

func (x *LatencyMetrics) GetP95E2ELatencyMs() float64 {
	if x != nil && x.P95E2ELatencyMs != nil {
		return *x.P95E2ELatencyMs
	}
	return 0
}

func (x *LatencyMetrics) SetP50ProcessingLatencyMs(v float64) {
	x.P50ProcessingLatencyMs = &v
}

func (x *LatencyMetrics) SetP95ProcessingLatencyMs(v float64) {
	x.P95ProcessingLatencyMs = &v
}

func (x *LatencyMetrics) SetP99ProcessingLatencyMs(v float64) {
	x.P99ProcessingLatencyMs = &v
}

func (x *LatencyMetrics) SetAverageQueueLatencyMs(v float64) {
	x.AverageQueueLatencyMs = &v
}

func (x *LatencyMetrics) SetP95QueueLatencyMs(v float64) {
	x.P95QueueLatencyMs = &v
}

func (x *LatencyMetrics) SetAverageE2ELatencyMs(v float64) {
	x.AverageE2ELatencyMs = &v
}

func (x *LatencyMetrics) SetP95E2ELatencyMs(v float64) {
	x.P95E2ELatencyMs = &v
}

func (x *LatencyMetrics) HasP50ProcessingLatencyMs() bool {
	if x == nil {
		return false
	}
	return x.P50ProcessingLatencyMs != nil
}

func (x *LatencyMetrics) HasP95ProcessingLatencyMs() bool {
	if x == nil {
		return false
	}
	return x.P95ProcessingLatencyMs != nil
}

func (x *LatencyMetrics) HasP99ProcessingLatencyMs() bool {
	if x == nil {
		return false
	}
	return x.P99ProcessingLatencyMs != nil
}

func (x *LatencyMetrics) HasAverageQueueLatencyMs() bool {
	if x == nil {
		return false
	}
	return x.AverageQueueLatencyMs != nil
}

func (x *LatencyMetrics) HasP95QueueLatencyMs() bool {
	if x == nil {
		return false
	}
	return x.P95QueueLatencyMs != nil
}

func (x *LatencyMetrics) HasAverageE2ELatencyMs() bool {
	if x == nil {
		return false
	}
	return x.AverageE2ELatencyMs != nil
}

func (x *LatencyMetrics) HasP95E2ELatencyMs() bool {
	if x == nil {
		return false
	}
	return x.P95E2ELatencyMs != nil
}

func (x *LatencyMetrics) ClearP50ProcessingLatencyMs() {
	x.P50ProcessingLatencyMs = nil
}

func (x *LatencyMetrics) ClearP95ProcessingLatencyMs() {
	x.P95ProcessingLatencyMs = nil
}

func (x *LatencyMetrics) ClearP99ProcessingLatencyMs() {
	x.P99ProcessingLatencyMs = nil
}

func (x *LatencyMetrics) ClearAverageQueueLatencyMs() {
	x.AverageQueueLatencyMs = nil
}

func (x *LatencyMetrics) ClearP95QueueLatencyMs() {
	x.P95QueueLatencyMs = nil
}

func (x *LatencyMetrics) ClearAverageE2ELatencyMs() {
	x.AverageE2ELatencyMs = nil
}

func (x *LatencyMetrics) ClearP95E2ELatencyMs() {
	x.P95E2ELatencyMs = nil
}

type LatencyMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Processing latency percentiles (in milliseconds)
	P50ProcessingLatencyMs *float64
	P95ProcessingLatencyMs *float64
	P99ProcessingLatencyMs *float64
	// Queue latency (time from enqueue to dequeue)
	AverageQueueLatencyMs *float64
	P95QueueLatencyMs     *float64
	// End-to-end latency (enqueue to completion)
	AverageE2ELatencyMs *float64
	P95E2ELatencyMs     *float64
}

func (b0 LatencyMetrics_builder) Build() *LatencyMetrics {
	m0 := &LatencyMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.P50ProcessingLatencyMs = b.P50ProcessingLatencyMs
	x.P95ProcessingLatencyMs = b.P95ProcessingLatencyMs
	x.P99ProcessingLatencyMs = b.P99ProcessingLatencyMs
	x.AverageQueueLatencyMs = b.AverageQueueLatencyMs
	x.P95QueueLatencyMs = b.P95QueueLatencyMs
	x.AverageE2ELatencyMs = b.AverageE2ELatencyMs
	x.P95E2ELatencyMs = b.P95E2ELatencyMs
	return m0
}

// Queue depth at a specific time
type QueueDepthSample struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Depth         *int64                 `protobuf:"varint,2,opt,name=depth" json:"depth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueDepthSample) Reset() {
	*x = QueueDepthSample{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueDepthSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueDepthSample) ProtoMessage() {}

func (x *QueueDepthSample) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueueDepthSample) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *QueueDepthSample) GetDepth() int64 {
	if x != nil && x.Depth != nil {
		return *x.Depth
	}
	return 0
}

func (x *QueueDepthSample) SetTimestamp(v *timestamppb.Timestamp) {
	x.Timestamp = v
}

func (x *QueueDepthSample) SetDepth(v int64) {
	x.Depth = &v
}

func (x *QueueDepthSample) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.Timestamp != nil
}

func (x *QueueDepthSample) HasDepth() bool {
	if x == nil {
		return false
	}
	return x.Depth != nil
}

func (x *QueueDepthSample) ClearTimestamp() {
	x.Timestamp = nil
}

func (x *QueueDepthSample) ClearDepth() {
	x.Depth = nil
}

type QueueDepthSample_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp *timestamppb.Timestamp
	Depth     *int64
}

func (b0 QueueDepthSample_builder) Build() *QueueDepthSample {
	m0 := &QueueDepthSample{}
	b, x := &b0, m0
	_, _ = b, x
	x.Timestamp = b.Timestamp
	x.Depth = b.Depth
	return m0
}

// Distribution of message sizes
type SizeDistribution struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Size buckets in bytes
	Buckets []*SizeBucket `protobuf:"bytes,1,rep,name=buckets" json:"buckets,omitempty"`
	// Summary statistics
	MinSizeBytes     *int64   `protobuf:"varint,2,opt,name=min_size_bytes,json=minSizeBytes" json:"min_size_bytes,omitempty"`
	MaxSizeBytes     *int64   `protobuf:"varint,3,opt,name=max_size_bytes,json=maxSizeBytes" json:"max_size_bytes,omitempty"`
	AverageSizeBytes *float64 `protobuf:"fixed64,4,opt,name=average_size_bytes,json=averageSizeBytes" json:"average_size_bytes,omitempty"`
	MedianSizeBytes  *float64 `protobuf:"fixed64,5,opt,name=median_size_bytes,json=medianSizeBytes" json:"median_size_bytes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SizeDistribution) Reset() {
	*x = SizeDistribution{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SizeDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeDistribution) ProtoMessage() {}

func (x *SizeDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SizeDistribution) GetBuckets() []*SizeBucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *SizeDistribution) GetMinSizeBytes() int64 {
	if x != nil && x.MinSizeBytes != nil {
		return *x.MinSizeBytes
	}
	return 0
}

func (x *SizeDistribution) GetMaxSizeBytes() int64 {
	if x != nil && x.MaxSizeBytes != nil {
		return *x.MaxSizeBytes
	}
	return 0
}

func (x *SizeDistribution) GetAverageSizeBytes() float64 {
	if x != nil && x.AverageSizeBytes != nil {
		return *x.AverageSizeBytes
	}
	return 0
}

func (x *SizeDistribution) GetMedianSizeBytes() float64 {
	if x != nil && x.MedianSizeBytes != nil {
		return *x.MedianSizeBytes
	}
	return 0
}

func (x *SizeDistribution) SetBuckets(v []*SizeBucket) {
	x.Buckets = v
}

func (x *SizeDistribution) SetMinSizeBytes(v int64) {
	x.MinSizeBytes = &v
}

func (x *SizeDistribution) SetMaxSizeBytes(v int64) {
	x.MaxSizeBytes = &v
}

func (x *SizeDistribution) SetAverageSizeBytes(v float64) {
	x.AverageSizeBytes = &v
}

func (x *SizeDistribution) SetMedianSizeBytes(v float64) {
	x.MedianSizeBytes = &v
}

func (x *SizeDistribution) HasMinSizeBytes() bool {
	if x == nil {
		return false
	}
	return x.MinSizeBytes != nil
}

func (x *SizeDistribution) HasMaxSizeBytes() bool {
	if x == nil {
		return false
	}
	return x.MaxSizeBytes != nil
}

func (x *SizeDistribution) HasAverageSizeBytes() bool {
	if x == nil {
		return false
	}
	return x.AverageSizeBytes != nil
}

func (x *SizeDistribution) HasMedianSizeBytes() bool {
	if x == nil {
		return false
	}
	return x.MedianSizeBytes != nil
}

func (x *SizeDistribution) ClearMinSizeBytes() {
	x.MinSizeBytes = nil
}

func (x *SizeDistribution) ClearMaxSizeBytes() {
	x.MaxSizeBytes = nil
}

func (x *SizeDistribution) ClearAverageSizeBytes() {
	x.AverageSizeBytes = nil
}

func (x *SizeDistribution) ClearMedianSizeBytes() {
	x.MedianSizeBytes = nil
}

type SizeDistribution_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Size buckets in bytes
	Buckets []*SizeBucket
	// Summary statistics
	MinSizeBytes     *int64
	MaxSizeBytes     *int64
	AverageSizeBytes *float64
	MedianSizeBytes  *float64
}

func (b0 SizeDistribution_builder) Build() *SizeDistribution {
	m0 := &SizeDistribution{}
	b, x := &b0, m0
	_, _ = b, x
	x.Buckets = b.Buckets
	x.MinSizeBytes = b.MinSizeBytes
	x.MaxSizeBytes = b.MaxSizeBytes
	x.AverageSizeBytes = b.AverageSizeBytes
	x.MedianSizeBytes = b.MedianSizeBytes
	return m0
}

// Size bucket for distribution
type SizeBucket struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	MinSizeBytes  *int64                 `protobuf:"varint,1,opt,name=min_size_bytes,json=minSizeBytes" json:"min_size_bytes,omitempty"`
	MaxSizeBytes  *int64                 `protobuf:"varint,2,opt,name=max_size_bytes,json=maxSizeBytes" json:"max_size_bytes,omitempty"`
	MessageCount  *int64                 `protobuf:"varint,3,opt,name=message_count,json=messageCount" json:"message_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SizeBucket) Reset() {
	*x = SizeBucket{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SizeBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeBucket) ProtoMessage() {}

func (x *SizeBucket) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SizeBucket) GetMinSizeBytes() int64 {
	if x != nil && x.MinSizeBytes != nil {
		return *x.MinSizeBytes
	}
	return 0
}

func (x *SizeBucket) GetMaxSizeBytes() int64 {
	if x != nil && x.MaxSizeBytes != nil {
		return *x.MaxSizeBytes
	}
	return 0
}

func (x *SizeBucket) GetMessageCount() int64 {
	if x != nil && x.MessageCount != nil {
		return *x.MessageCount
	}
	return 0
}

func (x *SizeBucket) SetMinSizeBytes(v int64) {
	x.MinSizeBytes = &v
}

func (x *SizeBucket) SetMaxSizeBytes(v int64) {
	x.MaxSizeBytes = &v
}

func (x *SizeBucket) SetMessageCount(v int64) {
	x.MessageCount = &v
}

func (x *SizeBucket) HasMinSizeBytes() bool {
	if x == nil {
		return false
	}
	return x.MinSizeBytes != nil
}

func (x *SizeBucket) HasMaxSizeBytes() bool {
	if x == nil {
		return false
	}
	return x.MaxSizeBytes != nil
}

func (x *SizeBucket) HasMessageCount() bool {
	if x == nil {
		return false
	}
	return x.MessageCount != nil
}

func (x *SizeBucket) ClearMinSizeBytes() {
	x.MinSizeBytes = nil
}

func (x *SizeBucket) ClearMaxSizeBytes() {
	x.MaxSizeBytes = nil
}

func (x *SizeBucket) ClearMessageCount() {
	x.MessageCount = nil
}

type SizeBucket_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MinSizeBytes *int64
	MaxSizeBytes *int64
	MessageCount *int64
}

func (b0 SizeBucket_builder) Build() *SizeBucket {
	m0 := &SizeBucket{}
	b, x := &b0, m0
	_, _ = b, x
	x.MinSizeBytes = b.MinSizeBytes
	x.MaxSizeBytes = b.MaxSizeBytes
	x.MessageCount = b.MessageCount
	return m0
}

// Distribution of message ages
type AgeDistribution struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Age buckets in seconds
	Buckets []*AgeBucket `protobuf:"bytes,1,rep,name=buckets" json:"buckets,omitempty"`
	// Summary statistics
	AverageAgeSeconds       *float64 `protobuf:"fixed64,2,opt,name=average_age_seconds,json=averageAgeSeconds" json:"average_age_seconds,omitempty"`
	OldestMessageAgeSeconds *float64 `protobuf:"fixed64,3,opt,name=oldest_message_age_seconds,json=oldestMessageAgeSeconds" json:"oldest_message_age_seconds,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *AgeDistribution) Reset() {
	*x = AgeDistribution{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgeDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgeDistribution) ProtoMessage() {}

func (x *AgeDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AgeDistribution) GetBuckets() []*AgeBucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *AgeDistribution) GetAverageAgeSeconds() float64 {
	if x != nil && x.AverageAgeSeconds != nil {
		return *x.AverageAgeSeconds
	}
	return 0
}

func (x *AgeDistribution) GetOldestMessageAgeSeconds() float64 {
	if x != nil && x.OldestMessageAgeSeconds != nil {
		return *x.OldestMessageAgeSeconds
	}
	return 0
}

func (x *AgeDistribution) SetBuckets(v []*AgeBucket) {
	x.Buckets = v
}

func (x *AgeDistribution) SetAverageAgeSeconds(v float64) {
	x.AverageAgeSeconds = &v
}

func (x *AgeDistribution) SetOldestMessageAgeSeconds(v float64) {
	x.OldestMessageAgeSeconds = &v
}

func (x *AgeDistribution) HasAverageAgeSeconds() bool {
	if x == nil {
		return false
	}
	return x.AverageAgeSeconds != nil
}

func (x *AgeDistribution) HasOldestMessageAgeSeconds() bool {
	if x == nil {
		return false
	}
	return x.OldestMessageAgeSeconds != nil
}

func (x *AgeDistribution) ClearAverageAgeSeconds() {
	x.AverageAgeSeconds = nil
}

func (x *AgeDistribution) ClearOldestMessageAgeSeconds() {
	x.OldestMessageAgeSeconds = nil
}

type AgeDistribution_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Age buckets in seconds
	Buckets []*AgeBucket
	// Summary statistics
	AverageAgeSeconds       *float64
	OldestMessageAgeSeconds *float64
}

func (b0 AgeDistribution_builder) Build() *AgeDistribution {
	m0 := &AgeDistribution{}
	b, x := &b0, m0
	_, _ = b, x
	x.Buckets = b.Buckets
	x.AverageAgeSeconds = b.AverageAgeSeconds
	x.OldestMessageAgeSeconds = b.OldestMessageAgeSeconds
	return m0
}

// Age bucket for distribution
type AgeBucket struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	MinAgeSeconds *int64                 `protobuf:"varint,1,opt,name=min_age_seconds,json=minAgeSeconds" json:"min_age_seconds,omitempty"`
	MaxAgeSeconds *int64                 `protobuf:"varint,2,opt,name=max_age_seconds,json=maxAgeSeconds" json:"max_age_seconds,omitempty"`
	MessageCount  *int64                 `protobuf:"varint,3,opt,name=message_count,json=messageCount" json:"message_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgeBucket) Reset() {
	*x = AgeBucket{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgeBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgeBucket) ProtoMessage() {}

func (x *AgeBucket) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AgeBucket) GetMinAgeSeconds() int64 {
	if x != nil && x.MinAgeSeconds != nil {
		return *x.MinAgeSeconds
	}
	return 0
}

func (x *AgeBucket) GetMaxAgeSeconds() int64 {
	if x != nil && x.MaxAgeSeconds != nil {
		return *x.MaxAgeSeconds
	}
	return 0
}

func (x *AgeBucket) GetMessageCount() int64 {
	if x != nil && x.MessageCount != nil {
		return *x.MessageCount
	}
	return 0
}

func (x *AgeBucket) SetMinAgeSeconds(v int64) {
	x.MinAgeSeconds = &v
}

func (x *AgeBucket) SetMaxAgeSeconds(v int64) {
	x.MaxAgeSeconds = &v
}

func (x *AgeBucket) SetMessageCount(v int64) {
	x.MessageCount = &v
}

func (x *AgeBucket) HasMinAgeSeconds() bool {
	if x == nil {
		return false
	}
	return x.MinAgeSeconds != nil
}

func (x *AgeBucket) HasMaxAgeSeconds() bool {
	if x == nil {
		return false
	}
	return x.MaxAgeSeconds != nil
}

func (x *AgeBucket) HasMessageCount() bool {
	if x == nil {
		return false
	}
	return x.MessageCount != nil
}

func (x *AgeBucket) ClearMinAgeSeconds() {
	x.MinAgeSeconds = nil
}

func (x *AgeBucket) ClearMaxAgeSeconds() {
	x.MaxAgeSeconds = nil
}

func (x *AgeBucket) ClearMessageCount() {
	x.MessageCount = nil
}

type AgeBucket_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MinAgeSeconds *int64
	MaxAgeSeconds *int64
	MessageCount  *int64
}

func (b0 AgeBucket_builder) Build() *AgeBucket {
	m0 := &AgeBucket{}
	b, x := &b0, m0
	_, _ = b, x
	x.MinAgeSeconds = b.MinAgeSeconds
	x.MaxAgeSeconds = b.MaxAgeSeconds
	x.MessageCount = b.MessageCount
	return m0
}

// Queue configuration information
type QueueConfiguration struct {
	state                  protoimpl.MessageState `protogen:"hybrid.v1"`
	MaxMessages            *int64                 `protobuf:"varint,1,opt,name=max_messages,json=maxMessages" json:"max_messages,omitempty"`
	VisibilityTimeout      *durationpb.Duration   `protobuf:"bytes,2,opt,name=visibility_timeout,json=visibilityTimeout" json:"visibility_timeout,omitempty"`
	MessageRetentionPeriod *durationpb.Duration   `protobuf:"bytes,3,opt,name=message_retention_period,json=messageRetentionPeriod" json:"message_retention_period,omitempty"`
	MaxRetryAttempts       *int32                 `protobuf:"varint,4,opt,name=max_retry_attempts,json=maxRetryAttempts" json:"max_retry_attempts,omitempty"`
	DeadLetterQueueEnabled *bool                  `protobuf:"varint,5,opt,name=dead_letter_queue_enabled,json=deadLetterQueueEnabled" json:"dead_letter_queue_enabled,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *QueueConfiguration) Reset() {
	*x = QueueConfiguration{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueConfiguration) ProtoMessage() {}

func (x *QueueConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueueConfiguration) GetMaxMessages() int64 {
	if x != nil && x.MaxMessages != nil {
		return *x.MaxMessages
	}
	return 0
}

func (x *QueueConfiguration) GetVisibilityTimeout() *durationpb.Duration {
	if x != nil {
		return x.VisibilityTimeout
	}
	return nil
}

func (x *QueueConfiguration) GetMessageRetentionPeriod() *durationpb.Duration {
	if x != nil {
		return x.MessageRetentionPeriod
	}
	return nil
}

func (x *QueueConfiguration) GetMaxRetryAttempts() int32 {
	if x != nil && x.MaxRetryAttempts != nil {
		return *x.MaxRetryAttempts
	}
	return 0
}

func (x *QueueConfiguration) GetDeadLetterQueueEnabled() bool {
	if x != nil && x.DeadLetterQueueEnabled != nil {
		return *x.DeadLetterQueueEnabled
	}
	return false
}

func (x *QueueConfiguration) SetMaxMessages(v int64) {
	x.MaxMessages = &v
}

func (x *QueueConfiguration) SetVisibilityTimeout(v *durationpb.Duration) {
	x.VisibilityTimeout = v
}

func (x *QueueConfiguration) SetMessageRetentionPeriod(v *durationpb.Duration) {
	x.MessageRetentionPeriod = v
}

func (x *QueueConfiguration) SetMaxRetryAttempts(v int32) {
	x.MaxRetryAttempts = &v
}

func (x *QueueConfiguration) SetDeadLetterQueueEnabled(v bool) {
	x.DeadLetterQueueEnabled = &v
}

func (x *QueueConfiguration) HasMaxMessages() bool {
	if x == nil {
		return false
	}
	return x.MaxMessages != nil
}

func (x *QueueConfiguration) HasVisibilityTimeout() bool {
	if x == nil {
		return false
	}
	return x.VisibilityTimeout != nil
}

func (x *QueueConfiguration) HasMessageRetentionPeriod() bool {
	if x == nil {
		return false
	}
	return x.MessageRetentionPeriod != nil
}

func (x *QueueConfiguration) HasMaxRetryAttempts() bool {
	if x == nil {
		return false
	}
	return x.MaxRetryAttempts != nil
}

func (x *QueueConfiguration) HasDeadLetterQueueEnabled() bool {
	if x == nil {
		return false
	}
	return x.DeadLetterQueueEnabled != nil
}

func (x *QueueConfiguration) ClearMaxMessages() {
	x.MaxMessages = nil
}

func (x *QueueConfiguration) ClearVisibilityTimeout() {
	x.VisibilityTimeout = nil
}

func (x *QueueConfiguration) ClearMessageRetentionPeriod() {
	x.MessageRetentionPeriod = nil
}

func (x *QueueConfiguration) ClearMaxRetryAttempts() {
	x.MaxRetryAttempts = nil
}

func (x *QueueConfiguration) ClearDeadLetterQueueEnabled() {
	x.DeadLetterQueueEnabled = nil
}

type QueueConfiguration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MaxMessages            *int64
	VisibilityTimeout      *durationpb.Duration
	MessageRetentionPeriod *durationpb.Duration
	MaxRetryAttempts       *int32
	DeadLetterQueueEnabled *bool
}

func (b0 QueueConfiguration_builder) Build() *QueueConfiguration {
	m0 := &QueueConfiguration{}
	b, x := &b0, m0
	_, _ = b, x
	x.MaxMessages = b.MaxMessages
	x.VisibilityTimeout = b.VisibilityTimeout
	x.MessageRetentionPeriod = b.MessageRetentionPeriod
	x.MaxRetryAttempts = b.MaxRetryAttempts
	x.DeadLetterQueueEnabled = b.DeadLetterQueueEnabled
	return m0
}

// Statistics for individual consumers
type ConsumerStats struct {
	state                 protoimpl.MessageState `protogen:"hybrid.v1"`
	ConsumerId            *string                `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId" json:"consumer_id,omitempty"`
	QueueName             *string                `protobuf:"bytes,2,opt,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	MessagesProcessed     *int64                 `protobuf:"varint,3,opt,name=messages_processed,json=messagesProcessed" json:"messages_processed,omitempty"`
	ProcessingRate        *float64               `protobuf:"fixed64,4,opt,name=processing_rate,json=processingRate" json:"processing_rate,omitempty"`
	SuccessRate           *float64               `protobuf:"fixed64,5,opt,name=success_rate,json=successRate" json:"success_rate,omitempty"`
	LastActivity          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_activity,json=lastActivity" json:"last_activity,omitempty"`
	AverageProcessingTime *durationpb.Duration   `protobuf:"bytes,7,opt,name=average_processing_time,json=averageProcessingTime" json:"average_processing_time,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ConsumerStats) Reset() {
	*x = ConsumerStats{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerStats) ProtoMessage() {}

func (x *ConsumerStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConsumerStats) GetConsumerId() string {
	if x != nil && x.ConsumerId != nil {
		return *x.ConsumerId
	}
	return ""
}

func (x *ConsumerStats) GetQueueName() string {
	if x != nil && x.QueueName != nil {
		return *x.QueueName
	}
	return ""
}

func (x *ConsumerStats) GetMessagesProcessed() int64 {
	if x != nil && x.MessagesProcessed != nil {
		return *x.MessagesProcessed
	}
	return 0
}

func (x *ConsumerStats) GetProcessingRate() float64 {
	if x != nil && x.ProcessingRate != nil {
		return *x.ProcessingRate
	}
	return 0
}

func (x *ConsumerStats) GetSuccessRate() float64 {
	if x != nil && x.SuccessRate != nil {
		return *x.SuccessRate
	}
	return 0
}

func (x *ConsumerStats) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

func (x *ConsumerStats) GetAverageProcessingTime() *durationpb.Duration {
	if x != nil {
		return x.AverageProcessingTime
	}
	return nil
}

func (x *ConsumerStats) SetConsumerId(v string) {
	x.ConsumerId = &v
}

func (x *ConsumerStats) SetQueueName(v string) {
	x.QueueName = &v
}

func (x *ConsumerStats) SetMessagesProcessed(v int64) {
	x.MessagesProcessed = &v
}

func (x *ConsumerStats) SetProcessingRate(v float64) {
	x.ProcessingRate = &v
}

func (x *ConsumerStats) SetSuccessRate(v float64) {
	x.SuccessRate = &v
}

func (x *ConsumerStats) SetLastActivity(v *timestamppb.Timestamp) {
	x.LastActivity = v
}

func (x *ConsumerStats) SetAverageProcessingTime(v *durationpb.Duration) {
	x.AverageProcessingTime = v
}

func (x *ConsumerStats) HasConsumerId() bool {
	if x == nil {
		return false
	}
	return x.ConsumerId != nil
}

func (x *ConsumerStats) HasQueueName() bool {
	if x == nil {
		return false
	}
	return x.QueueName != nil
}

func (x *ConsumerStats) HasMessagesProcessed() bool {
	if x == nil {
		return false
	}
	return x.MessagesProcessed != nil
}

func (x *ConsumerStats) HasProcessingRate() bool {
	if x == nil {
		return false
	}
	return x.ProcessingRate != nil
}

func (x *ConsumerStats) HasSuccessRate() bool {
	if x == nil {
		return false
	}
	return x.SuccessRate != nil
}

func (x *ConsumerStats) HasLastActivity() bool {
	if x == nil {
		return false
	}
	return x.LastActivity != nil
}

func (x *ConsumerStats) HasAverageProcessingTime() bool {
	if x == nil {
		return false
	}
	return x.AverageProcessingTime != nil
}

func (x *ConsumerStats) ClearConsumerId() {
	x.ConsumerId = nil
}

func (x *ConsumerStats) ClearQueueName() {
	x.QueueName = nil
}

func (x *ConsumerStats) ClearMessagesProcessed() {
	x.MessagesProcessed = nil
}

func (x *ConsumerStats) ClearProcessingRate() {
	x.ProcessingRate = nil
}

func (x *ConsumerStats) ClearSuccessRate() {
	x.SuccessRate = nil
}

func (x *ConsumerStats) ClearLastActivity() {
	x.LastActivity = nil
}

func (x *ConsumerStats) ClearAverageProcessingTime() {
	x.AverageProcessingTime = nil
}

type ConsumerStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ConsumerId            *string
	QueueName             *string
	MessagesProcessed     *int64
	ProcessingRate        *float64
	SuccessRate           *float64
	LastActivity          *timestamppb.Timestamp
	AverageProcessingTime *durationpb.Duration
}

func (b0 ConsumerStats_builder) Build() *ConsumerStats {
	m0 := &ConsumerStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.ConsumerId = b.ConsumerId
	x.QueueName = b.QueueName
	x.MessagesProcessed = b.MessagesProcessed
	x.ProcessingRate = b.ProcessingRate
	x.SuccessRate = b.SuccessRate
	x.LastActivity = b.LastActivity
	x.AverageProcessingTime = b.AverageProcessingTime
	return m0
}

// Historical statistics over time
type HistoricalStats struct {
	state             protoimpl.MessageState `protogen:"hybrid.v1"`
	DataPoints        []*HistoricalDataPoint `protobuf:"bytes,1,rep,name=data_points,json=dataPoints" json:"data_points,omitempty"`
	AggregationPeriod *durationpb.Duration   `protobuf:"bytes,2,opt,name=aggregation_period,json=aggregationPeriod" json:"aggregation_period,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HistoricalStats) Reset() {
	*x = HistoricalStats{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricalStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalStats) ProtoMessage() {}

func (x *HistoricalStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HistoricalStats) GetDataPoints() []*HistoricalDataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *HistoricalStats) GetAggregationPeriod() *durationpb.Duration {
	if x != nil {
		return x.AggregationPeriod
	}
	return nil
}

func (x *HistoricalStats) SetDataPoints(v []*HistoricalDataPoint) {
	x.DataPoints = v
}

func (x *HistoricalStats) SetAggregationPeriod(v *durationpb.Duration) {
	x.AggregationPeriod = v
}

func (x *HistoricalStats) HasAggregationPeriod() bool {
	if x == nil {
		return false
	}
	return x.AggregationPeriod != nil
}

func (x *HistoricalStats) ClearAggregationPeriod() {
	x.AggregationPeriod = nil
}

type HistoricalStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DataPoints        []*HistoricalDataPoint
	AggregationPeriod *durationpb.Duration
}

func (b0 HistoricalStats_builder) Build() *HistoricalStats {
	m0 := &HistoricalStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.DataPoints = b.DataPoints
	x.AggregationPeriod = b.AggregationPeriod
	return m0
}

// A single historical data point
type HistoricalDataPoint struct {
	state            protoimpl.MessageState `protogen:"hybrid.v1"`
	Timestamp        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MessageCount     *int64                 `protobuf:"varint,2,opt,name=message_count,json=messageCount" json:"message_count,omitempty"`
	Throughput       *float64               `protobuf:"fixed64,3,opt,name=throughput" json:"throughput,omitempty"`
	AverageLatencyMs *float64               `protobuf:"fixed64,4,opt,name=average_latency_ms,json=averageLatencyMs" json:"average_latency_ms,omitempty"`
	ErrorRate        *float64               `protobuf:"fixed64,5,opt,name=error_rate,json=errorRate" json:"error_rate,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HistoricalDataPoint) Reset() {
	*x = HistoricalDataPoint{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricalDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalDataPoint) ProtoMessage() {}

func (x *HistoricalDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HistoricalDataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HistoricalDataPoint) GetMessageCount() int64 {
	if x != nil && x.MessageCount != nil {
		return *x.MessageCount
	}
	return 0
}

func (x *HistoricalDataPoint) GetThroughput() float64 {
	if x != nil && x.Throughput != nil {
		return *x.Throughput
	}
	return 0
}

func (x *HistoricalDataPoint) GetAverageLatencyMs() float64 {
	if x != nil && x.AverageLatencyMs != nil {
		return *x.AverageLatencyMs
	}
	return 0
}

func (x *HistoricalDataPoint) GetErrorRate() float64 {
	if x != nil && x.ErrorRate != nil {
		return *x.ErrorRate
	}
	return 0
}

func (x *HistoricalDataPoint) SetTimestamp(v *timestamppb.Timestamp) {
	x.Timestamp = v
}

func (x *HistoricalDataPoint) SetMessageCount(v int64) {
	x.MessageCount = &v
}

func (x *HistoricalDataPoint) SetThroughput(v float64) {
	x.Throughput = &v
}

func (x *HistoricalDataPoint) SetAverageLatencyMs(v float64) {
	x.AverageLatencyMs = &v
}

func (x *HistoricalDataPoint) SetErrorRate(v float64) {
	x.ErrorRate = &v
}

func (x *HistoricalDataPoint) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.Timestamp != nil
}

func (x *HistoricalDataPoint) HasMessageCount() bool {
	if x == nil {
		return false
	}
	return x.MessageCount != nil
}

func (x *HistoricalDataPoint) HasThroughput() bool {
	if x == nil {
		return false
	}
	return x.Throughput != nil
}

func (x *HistoricalDataPoint) HasAverageLatencyMs() bool {
	if x == nil {
		return false
	}
	return x.AverageLatencyMs != nil
}

func (x *HistoricalDataPoint) HasErrorRate() bool {
	if x == nil {
		return false
	}
	return x.ErrorRate != nil
}

func (x *HistoricalDataPoint) ClearTimestamp() {
	x.Timestamp = nil
}

func (x *HistoricalDataPoint) ClearMessageCount() {
	x.MessageCount = nil
}

func (x *HistoricalDataPoint) ClearThroughput() {
	x.Throughput = nil
}

func (x *HistoricalDataPoint) ClearAverageLatencyMs() {
	x.AverageLatencyMs = nil
}

func (x *HistoricalDataPoint) ClearErrorRate() {
	x.ErrorRate = nil
}

type HistoricalDataPoint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp        *timestamppb.Timestamp
	MessageCount     *int64
	Throughput       *float64
	AverageLatencyMs *float64
	ErrorRate        *float64
}

func (b0 HistoricalDataPoint_builder) Build() *HistoricalDataPoint {
	m0 := &HistoricalDataPoint{}
	b, x := &b0, m0
	_, _ = b, x
	x.Timestamp = b.Timestamp
	x.MessageCount = b.MessageCount
	x.Throughput = b.Throughput
	x.AverageLatencyMs = b.AverageLatencyMs
	x.ErrorRate = b.ErrorRate
	return m0
}

// Error-related statistics
type ErrorStats struct {
	state               protoimpl.MessageState `protogen:"hybrid.v1"`
	TotalErrors         *int64                 `protobuf:"varint,1,opt,name=total_errors,json=totalErrors" json:"total_errors,omitempty"`
	ErrorRate           *float64               `protobuf:"fixed64,2,opt,name=error_rate,json=errorRate" json:"error_rate,omitempty"`
	ErrorTypes          []*ErrorTypeStat       `protobuf:"bytes,3,rep,name=error_types,json=errorTypes" json:"error_types,omitempty"`
	RecentErrorMessages []string               `protobuf:"bytes,4,rep,name=recent_error_messages,json=recentErrorMessages" json:"recent_error_messages,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ErrorStats) Reset() {
	*x = ErrorStats{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorStats) ProtoMessage() {}

func (x *ErrorStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorStats) GetTotalErrors() int64 {
	if x != nil && x.TotalErrors != nil {
		return *x.TotalErrors
	}
	return 0
}

func (x *ErrorStats) GetErrorRate() float64 {
	if x != nil && x.ErrorRate != nil {
		return *x.ErrorRate
	}
	return 0
}

func (x *ErrorStats) GetErrorTypes() []*ErrorTypeStat {
	if x != nil {
		return x.ErrorTypes
	}
	return nil
}

func (x *ErrorStats) GetRecentErrorMessages() []string {
	if x != nil {
		return x.RecentErrorMessages
	}
	return nil
}

func (x *ErrorStats) SetTotalErrors(v int64) {
	x.TotalErrors = &v
}

func (x *ErrorStats) SetErrorRate(v float64) {
	x.ErrorRate = &v
}

func (x *ErrorStats) SetErrorTypes(v []*ErrorTypeStat) {
	x.ErrorTypes = v
}

func (x *ErrorStats) SetRecentErrorMessages(v []string) {
	x.RecentErrorMessages = v
}

func (x *ErrorStats) HasTotalErrors() bool {
	if x == nil {
		return false
	}
	return x.TotalErrors != nil
}

func (x *ErrorStats) HasErrorRate() bool {
	if x == nil {
		return false
	}
	return x.ErrorRate != nil
}

func (x *ErrorStats) ClearTotalErrors() {
	x.TotalErrors = nil
}

func (x *ErrorStats) ClearErrorRate() {
	x.ErrorRate = nil
}

type ErrorStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TotalErrors         *int64
	ErrorRate           *float64
	ErrorTypes          []*ErrorTypeStat
	RecentErrorMessages []string
}

func (b0 ErrorStats_builder) Build() *ErrorStats {
	m0 := &ErrorStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.TotalErrors = b.TotalErrors
	x.ErrorRate = b.ErrorRate
	x.ErrorTypes = b.ErrorTypes
	x.RecentErrorMessages = b.RecentErrorMessages
	return m0
}

// Statistics for a specific error type
type ErrorTypeStat struct {
	state          protoimpl.MessageState `protogen:"hybrid.v1"`
	ErrorType      *string                `protobuf:"bytes,1,opt,name=error_type,json=errorType" json:"error_type,omitempty"`
	Count          *int64                 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Rate           *float64               `protobuf:"fixed64,3,opt,name=rate" json:"rate,omitempty"`
	LastOccurrence *string                `protobuf:"bytes,4,opt,name=last_occurrence,json=lastOccurrence" json:"last_occurrence,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ErrorTypeStat) Reset() {
	*x = ErrorTypeStat{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorTypeStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeStat) ProtoMessage() {}

func (x *ErrorTypeStat) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorTypeStat) GetErrorType() string {
	if x != nil && x.ErrorType != nil {
		return *x.ErrorType
	}
	return ""
}

func (x *ErrorTypeStat) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *ErrorTypeStat) GetRate() float64 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

func (x *ErrorTypeStat) GetLastOccurrence() string {
	if x != nil && x.LastOccurrence != nil {
		return *x.LastOccurrence
	}
	return ""
}

func (x *ErrorTypeStat) SetErrorType(v string) {
	x.ErrorType = &v
}

func (x *ErrorTypeStat) SetCount(v int64) {
	x.Count = &v
}

func (x *ErrorTypeStat) SetRate(v float64) {
	x.Rate = &v
}

func (x *ErrorTypeStat) SetLastOccurrence(v string) {
	x.LastOccurrence = &v
}

func (x *ErrorTypeStat) HasErrorType() bool {
	if x == nil {
		return false
	}
	return x.ErrorType != nil
}

func (x *ErrorTypeStat) HasCount() bool {
	if x == nil {
		return false
	}
	return x.Count != nil
}

func (x *ErrorTypeStat) HasRate() bool {
	if x == nil {
		return false
	}
	return x.Rate != nil
}

func (x *ErrorTypeStat) HasLastOccurrence() bool {
	if x == nil {
		return false
	}
	return x.LastOccurrence != nil
}

func (x *ErrorTypeStat) ClearErrorType() {
	x.ErrorType = nil
}

func (x *ErrorTypeStat) ClearCount() {
	x.Count = nil
}

func (x *ErrorTypeStat) ClearRate() {
	x.Rate = nil
}

func (x *ErrorTypeStat) ClearLastOccurrence() {
	x.LastOccurrence = nil
}

type ErrorTypeStat_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ErrorType      *string
	Count          *int64
	Rate           *float64
	LastOccurrence *string
}

func (b0 ErrorTypeStat_builder) Build() *ErrorTypeStat {
	m0 := &ErrorTypeStat{}
	b, x := &b0, m0
	_, _ = b, x
	x.ErrorType = b.ErrorType
	x.Count = b.Count
	x.Rate = b.Rate
	x.LastOccurrence = b.LastOccurrence
	return m0
}

// Performance metrics for the queue system
type PerformanceMetrics struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Memory usage
	MemoryUsedBytes      *int64 `protobuf:"varint,1,opt,name=memory_used_bytes,json=memoryUsedBytes" json:"memory_used_bytes,omitempty"`
	MemoryAvailableBytes *int64 `protobuf:"varint,2,opt,name=memory_available_bytes,json=memoryAvailableBytes" json:"memory_available_bytes,omitempty"`
	// CPU usage percentage
	CpuUsagePercent *float64 `protobuf:"fixed64,3,opt,name=cpu_usage_percent,json=cpuUsagePercent" json:"cpu_usage_percent,omitempty"`
	// Disk usage for persistent storage
	DiskUsedBytes      *int64 `protobuf:"varint,4,opt,name=disk_used_bytes,json=diskUsedBytes" json:"disk_used_bytes,omitempty"`
	DiskAvailableBytes *int64 `protobuf:"varint,5,opt,name=disk_available_bytes,json=diskAvailableBytes" json:"disk_available_bytes,omitempty"`
	// Network metrics
	NetworkBytesPerSecond *float64 `protobuf:"fixed64,6,opt,name=network_bytes_per_second,json=networkBytesPerSecond" json:"network_bytes_per_second,omitempty"`
	// Connection metrics
	ActiveConnections *int32 `protobuf:"varint,7,opt,name=active_connections,json=activeConnections" json:"active_connections,omitempty"`
	MaxConnections    *int32 `protobuf:"varint,8,opt,name=max_connections,json=maxConnections" json:"max_connections,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PerformanceMetrics) Reset() {
	*x = PerformanceMetrics{}
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceMetrics) ProtoMessage() {}

func (x *PerformanceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PerformanceMetrics) GetMemoryUsedBytes() int64 {
	if x != nil && x.MemoryUsedBytes != nil {
		return *x.MemoryUsedBytes
	}
	return 0
}

func (x *PerformanceMetrics) GetMemoryAvailableBytes() int64 {
	if x != nil && x.MemoryAvailableBytes != nil {
		return *x.MemoryAvailableBytes
	}
	return 0
}

func (x *PerformanceMetrics) GetCpuUsagePercent() float64 {
	if x != nil && x.CpuUsagePercent != nil {
		return *x.CpuUsagePercent
	}
	return 0
}

func (x *PerformanceMetrics) GetDiskUsedBytes() int64 {
	if x != nil && x.DiskUsedBytes != nil {
		return *x.DiskUsedBytes
	}
	return 0
}

func (x *PerformanceMetrics) GetDiskAvailableBytes() int64 {
	if x != nil && x.DiskAvailableBytes != nil {
		return *x.DiskAvailableBytes
	}
	return 0
}

func (x *PerformanceMetrics) GetNetworkBytesPerSecond() float64 {
	if x != nil && x.NetworkBytesPerSecond != nil {
		return *x.NetworkBytesPerSecond
	}
	return 0
}

func (x *PerformanceMetrics) GetActiveConnections() int32 {
	if x != nil && x.ActiveConnections != nil {
		return *x.ActiveConnections
	}
	return 0
}

func (x *PerformanceMetrics) GetMaxConnections() int32 {
	if x != nil && x.MaxConnections != nil {
		return *x.MaxConnections
	}
	return 0
}

func (x *PerformanceMetrics) SetMemoryUsedBytes(v int64) {
	x.MemoryUsedBytes = &v
}

func (x *PerformanceMetrics) SetMemoryAvailableBytes(v int64) {
	x.MemoryAvailableBytes = &v
}

func (x *PerformanceMetrics) SetCpuUsagePercent(v float64) {
	x.CpuUsagePercent = &v
}

func (x *PerformanceMetrics) SetDiskUsedBytes(v int64) {
	x.DiskUsedBytes = &v
}

func (x *PerformanceMetrics) SetDiskAvailableBytes(v int64) {
	x.DiskAvailableBytes = &v
}

func (x *PerformanceMetrics) SetNetworkBytesPerSecond(v float64) {
	x.NetworkBytesPerSecond = &v
}

func (x *PerformanceMetrics) SetActiveConnections(v int32) {
	x.ActiveConnections = &v
}

func (x *PerformanceMetrics) SetMaxConnections(v int32) {
	x.MaxConnections = &v
}

func (x *PerformanceMetrics) HasMemoryUsedBytes() bool {
	if x == nil {
		return false
	}
	return x.MemoryUsedBytes != nil
}

func (x *PerformanceMetrics) HasMemoryAvailableBytes() bool {
	if x == nil {
		return false
	}
	return x.MemoryAvailableBytes != nil
}

func (x *PerformanceMetrics) HasCpuUsagePercent() bool {
	if x == nil {
		return false
	}
	return x.CpuUsagePercent != nil
}

func (x *PerformanceMetrics) HasDiskUsedBytes() bool {
	if x == nil {
		return false
	}
	return x.DiskUsedBytes != nil
}

func (x *PerformanceMetrics) HasDiskAvailableBytes() bool {
	if x == nil {
		return false
	}
	return x.DiskAvailableBytes != nil
}

func (x *PerformanceMetrics) HasNetworkBytesPerSecond() bool {
	if x == nil {
		return false
	}
	return x.NetworkBytesPerSecond != nil
}

func (x *PerformanceMetrics) HasActiveConnections() bool {
	if x == nil {
		return false
	}
	return x.ActiveConnections != nil
}

func (x *PerformanceMetrics) HasMaxConnections() bool {
	if x == nil {
		return false
	}
	return x.MaxConnections != nil
}

func (x *PerformanceMetrics) ClearMemoryUsedBytes() {
	x.MemoryUsedBytes = nil
}

func (x *PerformanceMetrics) ClearMemoryAvailableBytes() {
	x.MemoryAvailableBytes = nil
}

func (x *PerformanceMetrics) ClearCpuUsagePercent() {
	x.CpuUsagePercent = nil
}

func (x *PerformanceMetrics) ClearDiskUsedBytes() {
	x.DiskUsedBytes = nil
}

func (x *PerformanceMetrics) ClearDiskAvailableBytes() {
	x.DiskAvailableBytes = nil
}

func (x *PerformanceMetrics) ClearNetworkBytesPerSecond() {
	x.NetworkBytesPerSecond = nil
}

func (x *PerformanceMetrics) ClearActiveConnections() {
	x.ActiveConnections = nil
}

func (x *PerformanceMetrics) ClearMaxConnections() {
	x.MaxConnections = nil
}

type PerformanceMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Memory usage
	MemoryUsedBytes      *int64
	MemoryAvailableBytes *int64
	// CPU usage percentage
	CpuUsagePercent *float64
	// Disk usage for persistent storage
	DiskUsedBytes      *int64
	DiskAvailableBytes *int64
	// Network metrics
	NetworkBytesPerSecond *float64
	// Connection metrics
	ActiveConnections *int32
	MaxConnections    *int32
}

func (b0 PerformanceMetrics_builder) Build() *PerformanceMetrics {
	m0 := &PerformanceMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.MemoryUsedBytes = b.MemoryUsedBytes
	x.MemoryAvailableBytes = b.MemoryAvailableBytes
	x.CpuUsagePercent = b.CpuUsagePercent
	x.DiskUsedBytes = b.DiskUsedBytes
	x.DiskAvailableBytes = b.DiskAvailableBytes
	x.NetworkBytesPerSecond = b.NetworkBytesPerSecond
	x.ActiveConnections = b.ActiveConnections
	x.MaxConnections = b.MaxConnections
	return m0
}

var File_pkg_queue_proto_responses_get_queue_stats_response_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_responses_get_queue_stats_response_proto_rawDesc = "" +
	"\n" +
	"8pkg/queue/proto/responses/get_queue_stats_response.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1dpkg/common/proto/common.proto\"\xc1\x04\n" +
	"\x15GetQueueStatsResponse\x12?\n" +
	"\bmetadata\x18\x01 \x01(\v2#.gcommon.v1.common.ResponseMetadataR\bmetadata\x12=\n" +
	"\asummary\x18\x02 \x01(\v2#.gcommon.v1.queue.QueueStatsSummaryR\asummary\x12=\n" +
	"\vqueue_stats\x18\x03 \x03(\v2\x1c.gcommon.v1.queue.QueueStatsR\n" +
	"queueStats\x12F\n" +
	"\x0econsumer_stats\x18\x04 \x03(\v2\x1f.gcommon.v1.queue.ConsumerStatsR\rconsumerStats\x12L\n" +
	"\x10historical_stats\x18\x05 \x01(\v2!.gcommon.v1.queue.HistoricalStatsR\x0fhistoricalStats\x12=\n" +
	"\verror_stats\x18\x06 \x01(\v2\x1c.gcommon.v1.queue.ErrorStatsR\n" +
	"errorStats\x12U\n" +
	"\x13performance_metrics\x18\a \x01(\v2$.gcommon.v1.queue.PerformanceMetricsR\x12performanceMetrics\x12=\n" +
	"\fgenerated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vgeneratedAt\"\xef\x02\n" +
	"\x11QueueStatsSummary\x12!\n" +
	"\ftotal_queues\x18\x01 \x01(\x03R\vtotalQueues\x12%\n" +
	"\x0etotal_messages\x18\x02 \x01(\x03R\rtotalMessages\x12?\n" +
	"\x1cmessages_processed_last_hour\x18\x03 \x01(\x03R\x19messagesProcessedLastHour\x12Q\n" +
	"\x17average_processing_time\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x15averageProcessingTime\x12!\n" +
	"\fhealth_score\x18\x05 \x01(\x05R\vhealthScore\x12)\n" +
	"\x10active_consumers\x18\x06 \x01(\x03R\x0factiveConsumers\x12.\n" +
	"\x13total_storage_bytes\x18\a \x01(\x03R\x11totalStorageBytes\"\x8f\x05\n" +
	"\n" +
	"QueueStats\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12#\n" +
	"\rmessage_count\x18\x02 \x01(\x03R\fmessageCount\x12G\n" +
	"\fstate_counts\x18\x03 \x01(\v2$.gcommon.v1.queue.MessageStateCountsR\vstateCounts\x12C\n" +
	"\n" +
	"throughput\x18\x04 \x01(\v2#.gcommon.v1.queue.ThroughputMetricsR\n" +
	"throughput\x12:\n" +
	"\alatency\x18\x05 \x01(\v2 .gcommon.v1.queue.LatencyMetricsR\alatency\x12G\n" +
	"\rdepth_samples\x18\x06 \x03(\v2\".gcommon.v1.queue.QueueDepthSampleR\fdepthSamples\x12O\n" +
	"\x11size_distribution\x18\a \x01(\v2\".gcommon.v1.queue.SizeDistributionR\x10sizeDistribution\x12L\n" +
	"\x10age_distribution\x18\b \x01(\v2!.gcommon.v1.queue.AgeDistributionR\x0fageDistribution\x12J\n" +
	"\rconfiguration\x18\t \x01(\v2$.gcommon.v1.queue.QueueConfigurationR\rconfiguration\x12?\n" +
	"\rlast_activity\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\flastActivity\"\xc1\x01\n" +
	"\x12MessageStateCounts\x12\x18\n" +
	"\apending\x18\x01 \x01(\x03R\apending\x12\x1e\n" +
	"\n" +
	"processing\x18\x02 \x01(\x03R\n" +
	"processing\x12\x1c\n" +
	"\tcompleted\x18\x03 \x01(\x03R\tcompleted\x12\x16\n" +
	"\x06failed\x18\x04 \x01(\x03R\x06failed\x12\x1a\n" +
	"\bretrying\x18\x05 \x01(\x03R\bretrying\x12\x1f\n" +
	"\vdead_letter\x18\x06 \x01(\x03R\n" +
	"deadLetter\"\xe5\x02\n" +
	"\x11ThroughputMetrics\x123\n" +
	"\x16messages_per_second_1m\x18\x01 \x01(\x01R\x13messagesPerSecond1m\x123\n" +
	"\x16messages_per_second_5m\x18\x02 \x01(\x01R\x13messagesPerSecond5m\x125\n" +
	"\x17messages_per_second_15m\x18\x03 \x01(\x01R\x14messagesPerSecond15m\x123\n" +
	"\x16messages_per_second_1h\x18\x04 \x01(\x01R\x13messagesPerSecond1h\x127\n" +
	"\x18peak_messages_per_second\x18\x05 \x01(\x01R\x15peakMessagesPerSecond\x12A\n" +
	"\x0epeak_timestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\rpeakTimestamp\"\x8d\x03\n" +
	"\x0eLatencyMetrics\x129\n" +
	"\x19p50_processing_latency_ms\x18\x01 \x01(\x01R\x16p50ProcessingLatencyMs\x129\n" +
	"\x19p95_processing_latency_ms\x18\x02 \x01(\x01R\x16p95ProcessingLatencyMs\x129\n" +
	"\x19p99_processing_latency_ms\x18\x03 \x01(\x01R\x16p99ProcessingLatencyMs\x127\n" +
	"\x18average_queue_latency_ms\x18\x04 \x01(\x01R\x15averageQueueLatencyMs\x12/\n" +
	"\x14p95_queue_latency_ms\x18\x05 \x01(\x01R\x11p95QueueLatencyMs\x123\n" +
	"\x16average_e2e_latency_ms\x18\x06 \x01(\x01R\x13averageE2eLatencyMs\x12+\n" +
	"\x12p95_e2e_latency_ms\x18\a \x01(\x01R\x0fp95E2eLatencyMs\"b\n" +
	"\x10QueueDepthSample\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05depth\x18\x02 \x01(\x03R\x05depth\"\xf0\x01\n" +
	"\x10SizeDistribution\x126\n" +
	"\abuckets\x18\x01 \x03(\v2\x1c.gcommon.v1.queue.SizeBucketR\abuckets\x12$\n" +
	"\x0emin_size_bytes\x18\x02 \x01(\x03R\fminSizeBytes\x12$\n" +
	"\x0emax_size_bytes\x18\x03 \x01(\x03R\fmaxSizeBytes\x12,\n" +
	"\x12average_size_bytes\x18\x04 \x01(\x01R\x10averageSizeBytes\x12*\n" +
	"\x11median_size_bytes\x18\x05 \x01(\x01R\x0fmedianSizeBytes\"}\n" +
	"\n" +
	"SizeBucket\x12$\n" +
	"\x0emin_size_bytes\x18\x01 \x01(\x03R\fminSizeBytes\x12$\n" +
	"\x0emax_size_bytes\x18\x02 \x01(\x03R\fmaxSizeBytes\x12#\n" +
	"\rmessage_count\x18\x03 \x01(\x03R\fmessageCount\"\xb5\x01\n" +
	"\x0fAgeDistribution\x125\n" +
	"\abuckets\x18\x01 \x03(\v2\x1b.gcommon.v1.queue.AgeBucketR\abuckets\x12.\n" +
	"\x13average_age_seconds\x18\x02 \x01(\x01R\x11averageAgeSeconds\x12;\n" +
	"\x1aoldest_message_age_seconds\x18\x03 \x01(\x01R\x17oldestMessageAgeSeconds\"\x80\x01\n" +
	"\tAgeBucket\x12&\n" +
	"\x0fmin_age_seconds\x18\x01 \x01(\x03R\rminAgeSeconds\x12&\n" +
	"\x0fmax_age_seconds\x18\x02 \x01(\x03R\rmaxAgeSeconds\x12#\n" +
	"\rmessage_count\x18\x03 \x01(\x03R\fmessageCount\"\xbf\x02\n" +
	"\x12QueueConfiguration\x12!\n" +
	"\fmax_messages\x18\x01 \x01(\x03R\vmaxMessages\x12H\n" +
	"\x12visibility_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x11visibilityTimeout\x12S\n" +
	"\x18message_retention_period\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x16messageRetentionPeriod\x12,\n" +
	"\x12max_retry_attempts\x18\x04 \x01(\x05R\x10maxRetryAttempts\x129\n" +
	"\x19dead_letter_queue_enabled\x18\x05 \x01(\bR\x16deadLetterQueueEnabled\"\xde\x02\n" +
	"\rConsumerStats\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x02 \x01(\tR\tqueueName\x12-\n" +
	"\x12messages_processed\x18\x03 \x01(\x03R\x11messagesProcessed\x12'\n" +
	"\x0fprocessing_rate\x18\x04 \x01(\x01R\x0eprocessingRate\x12!\n" +
	"\fsuccess_rate\x18\x05 \x01(\x01R\vsuccessRate\x12?\n" +
	"\rlast_activity\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\flastActivity\x12Q\n" +
	"\x17average_processing_time\x18\a \x01(\v2\x19.google.protobuf.DurationR\x15averageProcessingTime\"\xa3\x01\n" +
	"\x0fHistoricalStats\x12F\n" +
	"\vdata_points\x18\x01 \x03(\v2%.gcommon.v1.queue.HistoricalDataPointR\n" +
	"dataPoints\x12H\n" +
	"\x12aggregation_period\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x11aggregationPeriod\"\xe1\x01\n" +
	"\x13HistoricalDataPoint\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12#\n" +
	"\rmessage_count\x18\x02 \x01(\x03R\fmessageCount\x12\x1e\n" +
	"\n" +
	"throughput\x18\x03 \x01(\x01R\n" +
	"throughput\x12,\n" +
	"\x12average_latency_ms\x18\x04 \x01(\x01R\x10averageLatencyMs\x12\x1d\n" +
	"\n" +
	"error_rate\x18\x05 \x01(\x01R\terrorRate\"\xc4\x01\n" +
	"\n" +
	"ErrorStats\x12!\n" +
	"\ftotal_errors\x18\x01 \x01(\x03R\vtotalErrors\x12\x1d\n" +
	"\n" +
	"error_rate\x18\x02 \x01(\x01R\terrorRate\x12@\n" +
	"\verror_types\x18\x03 \x03(\v2\x1f.gcommon.v1.queue.ErrorTypeStatR\n" +
	"errorTypes\x122\n" +
	"\x15recent_error_messages\x18\x04 \x03(\tR\x13recentErrorMessages\"\x81\x01\n" +
	"\rErrorTypeStat\x12\x1d\n" +
	"\n" +
	"error_type\x18\x01 \x01(\tR\terrorType\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\x12\x12\n" +
	"\x04rate\x18\x03 \x01(\x01R\x04rate\x12'\n" +
	"\x0flast_occurrence\x18\x04 \x01(\tR\x0elastOccurrence\"\x8d\x03\n" +
	"\x12PerformanceMetrics\x12*\n" +
	"\x11memory_used_bytes\x18\x01 \x01(\x03R\x0fmemoryUsedBytes\x124\n" +
	"\x16memory_available_bytes\x18\x02 \x01(\x03R\x14memoryAvailableBytes\x12*\n" +
	"\x11cpu_usage_percent\x18\x03 \x01(\x01R\x0fcpuUsagePercent\x12&\n" +
	"\x0fdisk_used_bytes\x18\x04 \x01(\x03R\rdiskUsedBytes\x120\n" +
	"\x14disk_available_bytes\x18\x05 \x01(\x03R\x12diskAvailableBytes\x127\n" +
	"\x18network_bytes_per_second\x18\x06 \x01(\x01R\x15networkBytesPerSecond\x12-\n" +
	"\x12active_connections\x18\a \x01(\x05R\x11activeConnections\x12'\n" +
	"\x0fmax_connections\x18\b \x01(\x05R\x0emaxConnectionsB\xd1\x01\n" +
	"\x14com.gcommon.v1.queueB\x1aGetQueueStatsResponseProtoP\x01Z3github.com/jdfalk/gcommon/pkg/queue/proto/responses\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_pkg_queue_proto_responses_get_queue_stats_response_proto_goTypes = []any{
	(*GetQueueStatsResponse)(nil),     // 0: gcommon.v1.queue.GetQueueStatsResponse
	(*QueueStatsSummary)(nil),         // 1: gcommon.v1.queue.QueueStatsSummary
	(*QueueStats)(nil),                // 2: gcommon.v1.queue.QueueStats
	(*MessageStateCounts)(nil),        // 3: gcommon.v1.queue.MessageStateCounts
	(*ThroughputMetrics)(nil),         // 4: gcommon.v1.queue.ThroughputMetrics
	(*LatencyMetrics)(nil),            // 5: gcommon.v1.queue.LatencyMetrics
	(*QueueDepthSample)(nil),          // 6: gcommon.v1.queue.QueueDepthSample
	(*SizeDistribution)(nil),          // 7: gcommon.v1.queue.SizeDistribution
	(*SizeBucket)(nil),                // 8: gcommon.v1.queue.SizeBucket
	(*AgeDistribution)(nil),           // 9: gcommon.v1.queue.AgeDistribution
	(*AgeBucket)(nil),                 // 10: gcommon.v1.queue.AgeBucket
	(*QueueConfiguration)(nil),        // 11: gcommon.v1.queue.QueueConfiguration
	(*ConsumerStats)(nil),             // 12: gcommon.v1.queue.ConsumerStats
	(*HistoricalStats)(nil),           // 13: gcommon.v1.queue.HistoricalStats
	(*HistoricalDataPoint)(nil),       // 14: gcommon.v1.queue.HistoricalDataPoint
	(*ErrorStats)(nil),                // 15: gcommon.v1.queue.ErrorStats
	(*ErrorTypeStat)(nil),             // 16: gcommon.v1.queue.ErrorTypeStat
	(*PerformanceMetrics)(nil),        // 17: gcommon.v1.queue.PerformanceMetrics
	(*messages.ResponseMetadata)(nil), // 18: gcommon.v1.common.ResponseMetadata
	(*timestamppb.Timestamp)(nil),     // 19: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),       // 20: google.protobuf.Duration
}
var file_pkg_queue_proto_responses_get_queue_stats_response_proto_depIdxs = []int32{
	18, // 0: gcommon.v1.queue.GetQueueStatsResponse.metadata:type_name -> gcommon.v1.common.ResponseMetadata
	1,  // 1: gcommon.v1.queue.GetQueueStatsResponse.summary:type_name -> gcommon.v1.queue.QueueStatsSummary
	2,  // 2: gcommon.v1.queue.GetQueueStatsResponse.queue_stats:type_name -> gcommon.v1.queue.QueueStats
	12, // 3: gcommon.v1.queue.GetQueueStatsResponse.consumer_stats:type_name -> gcommon.v1.queue.ConsumerStats
	13, // 4: gcommon.v1.queue.GetQueueStatsResponse.historical_stats:type_name -> gcommon.v1.queue.HistoricalStats
	15, // 5: gcommon.v1.queue.GetQueueStatsResponse.error_stats:type_name -> gcommon.v1.queue.ErrorStats
	17, // 6: gcommon.v1.queue.GetQueueStatsResponse.performance_metrics:type_name -> gcommon.v1.queue.PerformanceMetrics
	19, // 7: gcommon.v1.queue.GetQueueStatsResponse.generated_at:type_name -> google.protobuf.Timestamp
	20, // 8: gcommon.v1.queue.QueueStatsSummary.average_processing_time:type_name -> google.protobuf.Duration
	3,  // 9: gcommon.v1.queue.QueueStats.state_counts:type_name -> gcommon.v1.queue.MessageStateCounts
	4,  // 10: gcommon.v1.queue.QueueStats.throughput:type_name -> gcommon.v1.queue.ThroughputMetrics
	5,  // 11: gcommon.v1.queue.QueueStats.latency:type_name -> gcommon.v1.queue.LatencyMetrics
	6,  // 12: gcommon.v1.queue.QueueStats.depth_samples:type_name -> gcommon.v1.queue.QueueDepthSample
	7,  // 13: gcommon.v1.queue.QueueStats.size_distribution:type_name -> gcommon.v1.queue.SizeDistribution
	9,  // 14: gcommon.v1.queue.QueueStats.age_distribution:type_name -> gcommon.v1.queue.AgeDistribution
	11, // 15: gcommon.v1.queue.QueueStats.configuration:type_name -> gcommon.v1.queue.QueueConfiguration
	19, // 16: gcommon.v1.queue.QueueStats.last_activity:type_name -> google.protobuf.Timestamp
	19, // 17: gcommon.v1.queue.ThroughputMetrics.peak_timestamp:type_name -> google.protobuf.Timestamp
	19, // 18: gcommon.v1.queue.QueueDepthSample.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 19: gcommon.v1.queue.SizeDistribution.buckets:type_name -> gcommon.v1.queue.SizeBucket
	10, // 20: gcommon.v1.queue.AgeDistribution.buckets:type_name -> gcommon.v1.queue.AgeBucket
	20, // 21: gcommon.v1.queue.QueueConfiguration.visibility_timeout:type_name -> google.protobuf.Duration
	20, // 22: gcommon.v1.queue.QueueConfiguration.message_retention_period:type_name -> google.protobuf.Duration
	19, // 23: gcommon.v1.queue.ConsumerStats.last_activity:type_name -> google.protobuf.Timestamp
	20, // 24: gcommon.v1.queue.ConsumerStats.average_processing_time:type_name -> google.protobuf.Duration
	14, // 25: gcommon.v1.queue.HistoricalStats.data_points:type_name -> gcommon.v1.queue.HistoricalDataPoint
	20, // 26: gcommon.v1.queue.HistoricalStats.aggregation_period:type_name -> google.protobuf.Duration
	19, // 27: gcommon.v1.queue.HistoricalDataPoint.timestamp:type_name -> google.protobuf.Timestamp
	16, // 28: gcommon.v1.queue.ErrorStats.error_types:type_name -> gcommon.v1.queue.ErrorTypeStat
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_responses_get_queue_stats_response_proto_init() }
func file_pkg_queue_proto_responses_get_queue_stats_response_proto_init() {
	if File_pkg_queue_proto_responses_get_queue_stats_response_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_responses_get_queue_stats_response_proto_rawDesc), len(file_pkg_queue_proto_responses_get_queue_stats_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_responses_get_queue_stats_response_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_responses_get_queue_stats_response_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_responses_get_queue_stats_response_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_responses_get_queue_stats_response_proto = out.File
	file_pkg_queue_proto_responses_get_queue_stats_response_proto_goTypes = nil
	file_pkg_queue_proto_responses_get_queue_stats_response_proto_depIdxs = nil
}
