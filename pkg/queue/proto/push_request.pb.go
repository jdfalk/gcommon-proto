// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/push_request.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PushRequest publishes one or more messages to a queue or topic
type PushRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Target topic or queue identifier
	Topic *string `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
	// Messages to publish
	Messages []*Message `protobuf:"bytes,2,rep,name=messages" json:"messages,omitempty"`
	// Publishing configuration
	PublishConfig *PublishConfig `protobuf:"bytes,3,opt,name=publish_config,json=publishConfig" json:"publish_config,omitempty"`
	// Batch publishing settings
	BatchSettings *BatchSettings `protobuf:"bytes,4,opt,name=batch_settings,json=batchSettings" json:"batch_settings,omitempty"`
	// Transaction ID for transactional publishing
	TransactionId *string `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	// Producer ID for message tracking
	ProducerId *string `protobuf:"bytes,6,opt,name=producer_id,json=producerId" json:"producer_id,omitempty"`
	// Publishing metadata
	Metadata      map[string]string `protobuf:"bytes,7,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushRequest) Reset() {
	*x = PushRequest{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRequest) ProtoMessage() {}

func (x *PushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushRequest.ProtoReflect.Descriptor instead.
func (*PushRequest) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_push_request_proto_rawDescGZIP(), []int{0}
}

func (x *PushRequest) GetTopic() string {
	if x != nil && x.Topic != nil {
		return *x.Topic
	}
	return ""
}

func (x *PushRequest) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *PushRequest) GetPublishConfig() *PublishConfig {
	if x != nil {
		return x.PublishConfig
	}
	return nil
}

func (x *PushRequest) GetBatchSettings() *BatchSettings {
	if x != nil {
		return x.BatchSettings
	}
	return nil
}

func (x *PushRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *PushRequest) GetProducerId() string {
	if x != nil && x.ProducerId != nil {
		return *x.ProducerId
	}
	return ""
}

func (x *PushRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Individual message to be published
type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Message payload
	Payload *anypb.Any `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
	// Message headers
	Headers map[string]string `protobuf:"bytes,2,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Message properties
	Properties *MessageProperties `protobuf:"bytes,3,opt,name=properties" json:"properties,omitempty"`
	// Routing information
	RoutingInfo *RoutingInfo `protobuf:"bytes,4,opt,name=routing_info,json=routingInfo" json:"routing_info,omitempty"`
	// Message metadata - references existing MessageMetadata
	MessageMetadata *MessageMetadata `protobuf:"bytes,5,opt,name=message_metadata,json=messageMetadata" json:"message_metadata,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_push_request_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Message) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Message) GetProperties() *MessageProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Message) GetRoutingInfo() *RoutingInfo {
	if x != nil {
		return x.RoutingInfo
	}
	return nil
}

func (x *Message) GetMessageMetadata() *MessageMetadata {
	if x != nil {
		return x.MessageMetadata
	}
	return nil
}

// Message properties and configuration
type MessageProperties struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Message priority level
	Priority *PriorityLevel `protobuf:"varint,1,opt,name=priority,enum=gcommon.v1.queue.PriorityLevel" json:"priority,omitempty"`
	// Delivery mode for the message
	DeliveryMode *DeliveryMode `protobuf:"varint,2,opt,name=delivery_mode,json=deliveryMode,enum=gcommon.v1.queue.DeliveryMode" json:"delivery_mode,omitempty"`
	// Message expiration time
	ExpirationTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
	// Correlation ID for request-response patterns
	CorrelationId *string `protobuf:"bytes,4,opt,name=correlation_id,json=correlationId" json:"correlation_id,omitempty"`
	// Reply-to address/topic
	ReplyTo *string `protobuf:"bytes,5,opt,name=reply_to,json=replyTo" json:"reply_to,omitempty"`
	// Content type of the payload
	ContentType *string `protobuf:"bytes,6,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	// Content encoding
	ContentEncoding *string `protobuf:"bytes,7,opt,name=content_encoding,json=contentEncoding" json:"content_encoding,omitempty"`
	// Compression applied to payload
	Compression *string `protobuf:"bytes,8,opt,name=compression" json:"compression,omitempty"`
	// Message deduplication ID
	DeduplicationId *string `protobuf:"bytes,9,opt,name=deduplication_id,json=deduplicationId" json:"deduplication_id,omitempty"`
	// Delay before message becomes available (milliseconds)
	DeliveryDelayMs *int64 `protobuf:"varint,10,opt,name=delivery_delay_ms,json=deliveryDelayMs" json:"delivery_delay_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MessageProperties) Reset() {
	*x = MessageProperties{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageProperties) ProtoMessage() {}

func (x *MessageProperties) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageProperties.ProtoReflect.Descriptor instead.
func (*MessageProperties) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_push_request_proto_rawDescGZIP(), []int{2}
}

func (x *MessageProperties) GetPriority() PriorityLevel {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return PriorityLevel_PRIORITY_LEVEL_UNSPECIFIED
}

func (x *MessageProperties) GetDeliveryMode() DeliveryMode {
	if x != nil && x.DeliveryMode != nil {
		return *x.DeliveryMode
	}
	return DeliveryMode_DELIVERY_MODE_UNSPECIFIED
}

func (x *MessageProperties) GetExpirationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationTime
	}
	return nil
}

func (x *MessageProperties) GetCorrelationId() string {
	if x != nil && x.CorrelationId != nil {
		return *x.CorrelationId
	}
	return ""
}

func (x *MessageProperties) GetReplyTo() string {
	if x != nil && x.ReplyTo != nil {
		return *x.ReplyTo
	}
	return ""
}

func (x *MessageProperties) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

func (x *MessageProperties) GetContentEncoding() string {
	if x != nil && x.ContentEncoding != nil {
		return *x.ContentEncoding
	}
	return ""
}

func (x *MessageProperties) GetCompression() string {
	if x != nil && x.Compression != nil {
		return *x.Compression
	}
	return ""
}

func (x *MessageProperties) GetDeduplicationId() string {
	if x != nil && x.DeduplicationId != nil {
		return *x.DeduplicationId
	}
	return ""
}

func (x *MessageProperties) GetDeliveryDelayMs() int64 {
	if x != nil && x.DeliveryDelayMs != nil {
		return *x.DeliveryDelayMs
	}
	return 0
}

// Message routing information
type RoutingInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Routing key for topic-based routing
	RoutingKey *string `protobuf:"bytes,1,opt,name=routing_key,json=routingKey" json:"routing_key,omitempty"`
	// Specific partition ID (if applicable)
	PartitionId *int32 `protobuf:"varint,2,opt,name=partition_id,json=partitionId" json:"partition_id,omitempty"`
	// Partition key for automatic partitioning
	PartitionKey *string `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey" json:"partition_key,omitempty"`
	// Exchange name (for exchange-based routing)
	ExchangeName *string `protobuf:"bytes,4,opt,name=exchange_name,json=exchangeName" json:"exchange_name,omitempty"`
	// Routing tags for advanced routing
	RoutingTags   []string `protobuf:"bytes,5,rep,name=routing_tags,json=routingTags" json:"routing_tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoutingInfo) Reset() {
	*x = RoutingInfo{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingInfo) ProtoMessage() {}

func (x *RoutingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingInfo.ProtoReflect.Descriptor instead.
func (*RoutingInfo) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_push_request_proto_rawDescGZIP(), []int{3}
}

func (x *RoutingInfo) GetRoutingKey() string {
	if x != nil && x.RoutingKey != nil {
		return *x.RoutingKey
	}
	return ""
}

func (x *RoutingInfo) GetPartitionId() int32 {
	if x != nil && x.PartitionId != nil {
		return *x.PartitionId
	}
	return 0
}

func (x *RoutingInfo) GetPartitionKey() string {
	if x != nil && x.PartitionKey != nil {
		return *x.PartitionKey
	}
	return ""
}

func (x *RoutingInfo) GetExchangeName() string {
	if x != nil && x.ExchangeName != nil {
		return *x.ExchangeName
	}
	return ""
}

func (x *RoutingInfo) GetRoutingTags() []string {
	if x != nil {
		return x.RoutingTags
	}
	return nil
}

// Publishing configuration
type PublishConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Wait for acknowledgment before returning
	WaitForAck *bool `protobuf:"varint,1,opt,name=wait_for_ack,json=waitForAck" json:"wait_for_ack,omitempty"`
	// Acknowledgment timeout (milliseconds)
	AckTimeoutMs *int32 `protobuf:"varint,2,opt,name=ack_timeout_ms,json=ackTimeoutMs" json:"ack_timeout_ms,omitempty"`
	// Enable duplicate detection
	DuplicateDetection *bool `protobuf:"varint,3,opt,name=duplicate_detection,json=duplicateDetection" json:"duplicate_detection,omitempty"`
	// Compression for message batch
	EnableCompression *bool `protobuf:"varint,4,opt,name=enable_compression,json=enableCompression" json:"enable_compression,omitempty"`
	// Enable message ordering
	EnableOrdering *bool `protobuf:"varint,5,opt,name=enable_ordering,json=enableOrdering" json:"enable_ordering,omitempty"`
	// Retry configuration for failed publishes - references existing RetryConfig
	RetryConfig *RetryConfig `protobuf:"bytes,6,opt,name=retry_config,json=retryConfig" json:"retry_config,omitempty"`
	// Persistence level required
	PersistenceLevel *string `protobuf:"bytes,7,opt,name=persistence_level,json=persistenceLevel" json:"persistence_level,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PublishConfig) Reset() {
	*x = PublishConfig{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishConfig) ProtoMessage() {}

func (x *PublishConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishConfig.ProtoReflect.Descriptor instead.
func (*PublishConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_push_request_proto_rawDescGZIP(), []int{4}
}

func (x *PublishConfig) GetWaitForAck() bool {
	if x != nil && x.WaitForAck != nil {
		return *x.WaitForAck
	}
	return false
}

func (x *PublishConfig) GetAckTimeoutMs() int32 {
	if x != nil && x.AckTimeoutMs != nil {
		return *x.AckTimeoutMs
	}
	return 0
}

func (x *PublishConfig) GetDuplicateDetection() bool {
	if x != nil && x.DuplicateDetection != nil {
		return *x.DuplicateDetection
	}
	return false
}

func (x *PublishConfig) GetEnableCompression() bool {
	if x != nil && x.EnableCompression != nil {
		return *x.EnableCompression
	}
	return false
}

func (x *PublishConfig) GetEnableOrdering() bool {
	if x != nil && x.EnableOrdering != nil {
		return *x.EnableOrdering
	}
	return false
}

func (x *PublishConfig) GetRetryConfig() *RetryConfig {
	if x != nil {
		return x.RetryConfig
	}
	return nil
}

func (x *PublishConfig) GetPersistenceLevel() string {
	if x != nil && x.PersistenceLevel != nil {
		return *x.PersistenceLevel
	}
	return ""
}

// Batch publishing settings
type BatchSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable batch publishing
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Maximum messages per batch
	MaxBatchSize *int32 `protobuf:"varint,2,opt,name=max_batch_size,json=maxBatchSize" json:"max_batch_size,omitempty"`
	// Maximum batch size in bytes
	MaxBatchBytes *int64 `protobuf:"varint,3,opt,name=max_batch_bytes,json=maxBatchBytes" json:"max_batch_bytes,omitempty"`
	// Maximum time to wait for batch completion (milliseconds)
	BatchTimeoutMs *int32 `protobuf:"varint,4,opt,name=batch_timeout_ms,json=batchTimeoutMs" json:"batch_timeout_ms,omitempty"`
	// Flush batch on publish request completion
	FlushOnComplete *bool `protobuf:"varint,5,opt,name=flush_on_complete,json=flushOnComplete" json:"flush_on_complete,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BatchSettings) Reset() {
	*x = BatchSettings{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSettings) ProtoMessage() {}

func (x *BatchSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSettings.ProtoReflect.Descriptor instead.
func (*BatchSettings) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_push_request_proto_rawDescGZIP(), []int{5}
}

func (x *BatchSettings) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *BatchSettings) GetMaxBatchSize() int32 {
	if x != nil && x.MaxBatchSize != nil {
		return *x.MaxBatchSize
	}
	return 0
}

func (x *BatchSettings) GetMaxBatchBytes() int64 {
	if x != nil && x.MaxBatchBytes != nil {
		return *x.MaxBatchBytes
	}
	return 0
}

func (x *BatchSettings) GetBatchTimeoutMs() int32 {
	if x != nil && x.BatchTimeoutMs != nil {
		return *x.BatchTimeoutMs
	}
	return 0
}

func (x *BatchSettings) GetFlushOnComplete() bool {
	if x != nil && x.FlushOnComplete != nil {
		return *x.FlushOnComplete
	}
	return false
}

var File_pkg_queue_proto_push_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_push_request_proto_rawDesc = "" +
	"\n" +
	"\"pkg/queue/proto/push_request.proto\x12\x10gcommon.v1.queue\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a$pkg/queue/proto/priority_level.proto\x1a#pkg/queue/proto/delivery_mode.proto\x1a&pkg/queue/proto/message_metadata.proto\x1a\"pkg/queue/proto/retry_config.proto\"\xb8\x03\n" +
	"\vPushRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x125\n" +
	"\bmessages\x18\x02 \x03(\v2\x19.gcommon.v1.queue.MessageR\bmessages\x12F\n" +
	"\x0epublish_config\x18\x03 \x01(\v2\x1f.gcommon.v1.queue.PublishConfigR\rpublishConfig\x12F\n" +
	"\x0ebatch_settings\x18\x04 \x01(\v2\x1f.gcommon.v1.queue.BatchSettingsR\rbatchSettings\x12%\n" +
	"\x0etransaction_id\x18\x05 \x01(\tR\rtransactionId\x12\x1f\n" +
	"\vproducer_id\x18\x06 \x01(\tR\n" +
	"producerId\x12G\n" +
	"\bmetadata\x18\a \x03(\v2+.gcommon.v1.queue.PushRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8c\x03\n" +
	"\aMessage\x12.\n" +
	"\apayload\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\apayload\x12@\n" +
	"\aheaders\x18\x02 \x03(\v2&.gcommon.v1.queue.Message.HeadersEntryR\aheaders\x12C\n" +
	"\n" +
	"properties\x18\x03 \x01(\v2#.gcommon.v1.queue.MessagePropertiesR\n" +
	"properties\x12@\n" +
	"\frouting_info\x18\x04 \x01(\v2\x1d.gcommon.v1.queue.RoutingInfoR\vroutingInfo\x12L\n" +
	"\x10message_metadata\x18\x05 \x01(\v2!.gcommon.v1.queue.MessageMetadataR\x0fmessageMetadata\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe3\x03\n" +
	"\x11MessageProperties\x12;\n" +
	"\bpriority\x18\x01 \x01(\x0e2\x1f.gcommon.v1.queue.PriorityLevelR\bpriority\x12C\n" +
	"\rdelivery_mode\x18\x02 \x01(\x0e2\x1e.gcommon.v1.queue.DeliveryModeR\fdeliveryMode\x12C\n" +
	"\x0fexpiration_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0eexpirationTime\x12%\n" +
	"\x0ecorrelation_id\x18\x04 \x01(\tR\rcorrelationId\x12\x19\n" +
	"\breply_to\x18\x05 \x01(\tR\areplyTo\x12!\n" +
	"\fcontent_type\x18\x06 \x01(\tR\vcontentType\x12)\n" +
	"\x10content_encoding\x18\a \x01(\tR\x0fcontentEncoding\x12 \n" +
	"\vcompression\x18\b \x01(\tR\vcompression\x12)\n" +
	"\x10deduplication_id\x18\t \x01(\tR\x0fdeduplicationId\x12*\n" +
	"\x11delivery_delay_ms\x18\n" +
	" \x01(\x03R\x0fdeliveryDelayMs\"\xbe\x01\n" +
	"\vRoutingInfo\x12\x1f\n" +
	"\vrouting_key\x18\x01 \x01(\tR\n" +
	"routingKey\x12!\n" +
	"\fpartition_id\x18\x02 \x01(\x05R\vpartitionId\x12#\n" +
	"\rpartition_key\x18\x03 \x01(\tR\fpartitionKey\x12#\n" +
	"\rexchange_name\x18\x04 \x01(\tR\fexchangeName\x12!\n" +
	"\frouting_tags\x18\x05 \x03(\tR\vroutingTags\"\xcf\x02\n" +
	"\rPublishConfig\x12 \n" +
	"\fwait_for_ack\x18\x01 \x01(\bR\n" +
	"waitForAck\x12$\n" +
	"\x0eack_timeout_ms\x18\x02 \x01(\x05R\fackTimeoutMs\x12/\n" +
	"\x13duplicate_detection\x18\x03 \x01(\bR\x12duplicateDetection\x12-\n" +
	"\x12enable_compression\x18\x04 \x01(\bR\x11enableCompression\x12'\n" +
	"\x0fenable_ordering\x18\x05 \x01(\bR\x0eenableOrdering\x12@\n" +
	"\fretry_config\x18\x06 \x01(\v2\x1d.gcommon.v1.queue.RetryConfigR\vretryConfig\x12+\n" +
	"\x11persistence_level\x18\a \x01(\tR\x10persistenceLevel\"\xcd\x01\n" +
	"\rBatchSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12$\n" +
	"\x0emax_batch_size\x18\x02 \x01(\x05R\fmaxBatchSize\x12&\n" +
	"\x0fmax_batch_bytes\x18\x03 \x01(\x03R\rmaxBatchBytes\x12(\n" +
	"\x10batch_timeout_ms\x18\x04 \x01(\x05R\x0ebatchTimeoutMs\x12*\n" +
	"\x11flush_on_complete\x18\x05 \x01(\bR\x0fflushOnCompleteB\xb5\x01\n" +
	"\x14com.gcommon.v1.queueB\x10PushRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_push_request_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_push_request_proto_rawDescData []byte
)

func file_pkg_queue_proto_push_request_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_push_request_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_push_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_push_request_proto_rawDesc), len(file_pkg_queue_proto_push_request_proto_rawDesc)))
	})
	return file_pkg_queue_proto_push_request_proto_rawDescData
}

var file_pkg_queue_proto_push_request_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pkg_queue_proto_push_request_proto_goTypes = []any{
	(*PushRequest)(nil),           // 0: gcommon.v1.queue.PushRequest
	(*Message)(nil),               // 1: gcommon.v1.queue.Message
	(*MessageProperties)(nil),     // 2: gcommon.v1.queue.MessageProperties
	(*RoutingInfo)(nil),           // 3: gcommon.v1.queue.RoutingInfo
	(*PublishConfig)(nil),         // 4: gcommon.v1.queue.PublishConfig
	(*BatchSettings)(nil),         // 5: gcommon.v1.queue.BatchSettings
	nil,                           // 6: gcommon.v1.queue.PushRequest.MetadataEntry
	nil,                           // 7: gcommon.v1.queue.Message.HeadersEntry
	(*anypb.Any)(nil),             // 8: google.protobuf.Any
	(*MessageMetadata)(nil),       // 9: gcommon.v1.queue.MessageMetadata
	(PriorityLevel)(0),            // 10: gcommon.v1.queue.PriorityLevel
	(DeliveryMode)(0),             // 11: gcommon.v1.queue.DeliveryMode
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(*RetryConfig)(nil),           // 13: gcommon.v1.queue.RetryConfig
}
var file_pkg_queue_proto_push_request_proto_depIdxs = []int32{
	1,  // 0: gcommon.v1.queue.PushRequest.messages:type_name -> gcommon.v1.queue.Message
	4,  // 1: gcommon.v1.queue.PushRequest.publish_config:type_name -> gcommon.v1.queue.PublishConfig
	5,  // 2: gcommon.v1.queue.PushRequest.batch_settings:type_name -> gcommon.v1.queue.BatchSettings
	6,  // 3: gcommon.v1.queue.PushRequest.metadata:type_name -> gcommon.v1.queue.PushRequest.MetadataEntry
	8,  // 4: gcommon.v1.queue.Message.payload:type_name -> google.protobuf.Any
	7,  // 5: gcommon.v1.queue.Message.headers:type_name -> gcommon.v1.queue.Message.HeadersEntry
	2,  // 6: gcommon.v1.queue.Message.properties:type_name -> gcommon.v1.queue.MessageProperties
	3,  // 7: gcommon.v1.queue.Message.routing_info:type_name -> gcommon.v1.queue.RoutingInfo
	9,  // 8: gcommon.v1.queue.Message.message_metadata:type_name -> gcommon.v1.queue.MessageMetadata
	10, // 9: gcommon.v1.queue.MessageProperties.priority:type_name -> gcommon.v1.queue.PriorityLevel
	11, // 10: gcommon.v1.queue.MessageProperties.delivery_mode:type_name -> gcommon.v1.queue.DeliveryMode
	12, // 11: gcommon.v1.queue.MessageProperties.expiration_time:type_name -> google.protobuf.Timestamp
	13, // 12: gcommon.v1.queue.PublishConfig.retry_config:type_name -> gcommon.v1.queue.RetryConfig
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_push_request_proto_init() }
func file_pkg_queue_proto_push_request_proto_init() {
	if File_pkg_queue_proto_push_request_proto != nil {
		return
	}
	file_pkg_queue_proto_priority_level_proto_init()
	file_pkg_queue_proto_delivery_mode_proto_init()
	file_pkg_queue_proto_message_metadata_proto_init()
	file_pkg_queue_proto_retry_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_push_request_proto_rawDesc), len(file_pkg_queue_proto_push_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_push_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_push_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_push_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_push_request_proto = out.File
	file_pkg_queue_proto_push_request_proto_goTypes = nil
	file_pkg_queue_proto_push_request_proto_depIdxs = nil
}
