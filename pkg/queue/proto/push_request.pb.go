// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: pkg/queue/proto/push_request.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PushRequest publishes one or more messages to a queue or topic
type PushRequest struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Topic         *string                `protobuf:"bytes,1,opt,name=topic"`
	xxx_hidden_Messages      *[]*Message            `protobuf:"bytes,2,rep,name=messages"`
	xxx_hidden_PublishConfig *PublishConfig         `protobuf:"bytes,3,opt,name=publish_config,json=publishConfig"`
	xxx_hidden_BatchSettings *BatchSettings         `protobuf:"bytes,4,opt,name=batch_settings,json=batchSettings"`
	xxx_hidden_TransactionId *string                `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId"`
	xxx_hidden_ProducerId    *string                `protobuf:"bytes,6,opt,name=producer_id,json=producerId"`
	xxx_hidden_Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *PushRequest) Reset() {
	*x = PushRequest{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRequest) ProtoMessage() {}

func (x *PushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PushRequest) GetTopic() string {
	if x != nil {
		if x.xxx_hidden_Topic != nil {
			return *x.xxx_hidden_Topic
		}
		return ""
	}
	return ""
}

func (x *PushRequest) GetMessages() []*Message {
	if x != nil {
		if x.xxx_hidden_Messages != nil {
			return *x.xxx_hidden_Messages
		}
	}
	return nil
}

func (x *PushRequest) GetPublishConfig() *PublishConfig {
	if x != nil {
		return x.xxx_hidden_PublishConfig
	}
	return nil
}

func (x *PushRequest) GetBatchSettings() *BatchSettings {
	if x != nil {
		return x.xxx_hidden_BatchSettings
	}
	return nil
}

func (x *PushRequest) GetTransactionId() string {
	if x != nil {
		if x.xxx_hidden_TransactionId != nil {
			return *x.xxx_hidden_TransactionId
		}
		return ""
	}
	return ""
}

func (x *PushRequest) GetProducerId() string {
	if x != nil {
		if x.xxx_hidden_ProducerId != nil {
			return *x.xxx_hidden_ProducerId
		}
		return ""
	}
	return ""
}

func (x *PushRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *PushRequest) SetTopic(v string) {
	x.xxx_hidden_Topic = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *PushRequest) SetMessages(v []*Message) {
	x.xxx_hidden_Messages = &v
}

func (x *PushRequest) SetPublishConfig(v *PublishConfig) {
	x.xxx_hidden_PublishConfig = v
}

func (x *PushRequest) SetBatchSettings(v *BatchSettings) {
	x.xxx_hidden_BatchSettings = v
}

func (x *PushRequest) SetTransactionId(v string) {
	x.xxx_hidden_TransactionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *PushRequest) SetProducerId(v string) {
	x.xxx_hidden_ProducerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *PushRequest) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *PushRequest) HasTopic() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PushRequest) HasPublishConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PublishConfig != nil
}

func (x *PushRequest) HasBatchSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BatchSettings != nil
}

func (x *PushRequest) HasTransactionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *PushRequest) HasProducerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *PushRequest) ClearTopic() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Topic = nil
}

func (x *PushRequest) ClearPublishConfig() {
	x.xxx_hidden_PublishConfig = nil
}

func (x *PushRequest) ClearBatchSettings() {
	x.xxx_hidden_BatchSettings = nil
}

func (x *PushRequest) ClearTransactionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_TransactionId = nil
}

func (x *PushRequest) ClearProducerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ProducerId = nil
}

type PushRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Target topic or queue identifier
	Topic *string
	// Messages to publish
	Messages []*Message
	// Publishing configuration
	PublishConfig *PublishConfig
	// Batch publishing settings
	BatchSettings *BatchSettings
	// Transaction ID for transactional publishing
	TransactionId *string
	// Producer ID for message tracking
	ProducerId *string
	// Publishing metadata
	Metadata map[string]string
}

func (b0 PushRequest_builder) Build() *PushRequest {
	m0 := &PushRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Topic != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Topic = b.Topic
	}
	x.xxx_hidden_Messages = &b.Messages
	x.xxx_hidden_PublishConfig = b.PublishConfig
	x.xxx_hidden_BatchSettings = b.BatchSettings
	if b.TransactionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_TransactionId = b.TransactionId
	}
	if b.ProducerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ProducerId = b.ProducerId
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Individual message to be published
type Message struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Payload         *anypb.Any             `protobuf:"bytes,1,opt,name=payload"`
	xxx_hidden_Headers         map[string]string      `protobuf:"bytes,2,rep,name=headers" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Properties      *MessageProperties     `protobuf:"bytes,3,opt,name=properties"`
	xxx_hidden_RoutingInfo     *RoutingInfo           `protobuf:"bytes,4,opt,name=routing_info,json=routingInfo"`
	xxx_hidden_MessageMetadata *MessageMetadata       `protobuf:"bytes,5,opt,name=message_metadata,json=messageMetadata"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Message) GetPayload() *anypb.Any {
	if x != nil {
		return x.xxx_hidden_Payload
	}
	return nil
}

func (x *Message) GetHeaders() map[string]string {
	if x != nil {
		return x.xxx_hidden_Headers
	}
	return nil
}

func (x *Message) GetProperties() *MessageProperties {
	if x != nil {
		return x.xxx_hidden_Properties
	}
	return nil
}

func (x *Message) GetRoutingInfo() *RoutingInfo {
	if x != nil {
		return x.xxx_hidden_RoutingInfo
	}
	return nil
}

func (x *Message) GetMessageMetadata() *MessageMetadata {
	if x != nil {
		return x.xxx_hidden_MessageMetadata
	}
	return nil
}

func (x *Message) SetPayload(v *anypb.Any) {
	x.xxx_hidden_Payload = v
}

func (x *Message) SetHeaders(v map[string]string) {
	x.xxx_hidden_Headers = v
}

func (x *Message) SetProperties(v *MessageProperties) {
	x.xxx_hidden_Properties = v
}

func (x *Message) SetRoutingInfo(v *RoutingInfo) {
	x.xxx_hidden_RoutingInfo = v
}

func (x *Message) SetMessageMetadata(v *MessageMetadata) {
	x.xxx_hidden_MessageMetadata = v
}

func (x *Message) HasPayload() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Payload != nil
}

func (x *Message) HasProperties() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Properties != nil
}

func (x *Message) HasRoutingInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RoutingInfo != nil
}

func (x *Message) HasMessageMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_MessageMetadata != nil
}

func (x *Message) ClearPayload() {
	x.xxx_hidden_Payload = nil
}

func (x *Message) ClearProperties() {
	x.xxx_hidden_Properties = nil
}

func (x *Message) ClearRoutingInfo() {
	x.xxx_hidden_RoutingInfo = nil
}

func (x *Message) ClearMessageMetadata() {
	x.xxx_hidden_MessageMetadata = nil
}

type Message_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Message payload
	Payload *anypb.Any
	// Message headers
	Headers map[string]string
	// Message properties
	Properties *MessageProperties
	// Routing information
	RoutingInfo *RoutingInfo
	// Message metadata - references existing MessageMetadata
	MessageMetadata *MessageMetadata
}

func (b0 Message_builder) Build() *Message {
	m0 := &Message{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Payload = b.Payload
	x.xxx_hidden_Headers = b.Headers
	x.xxx_hidden_Properties = b.Properties
	x.xxx_hidden_RoutingInfo = b.RoutingInfo
	x.xxx_hidden_MessageMetadata = b.MessageMetadata
	return m0
}

// Message properties and configuration
type MessageProperties struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Priority        PriorityLevel          `protobuf:"varint,1,opt,name=priority,enum=gcommon.v1.queue.PriorityLevel"`
	xxx_hidden_DeliveryMode    DeliveryMode           `protobuf:"varint,2,opt,name=delivery_mode,json=deliveryMode,enum=gcommon.v1.queue.DeliveryMode"`
	xxx_hidden_ExpirationTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expiration_time,json=expirationTime"`
	xxx_hidden_CorrelationId   *string                `protobuf:"bytes,4,opt,name=correlation_id,json=correlationId"`
	xxx_hidden_ReplyTo         *string                `protobuf:"bytes,5,opt,name=reply_to,json=replyTo"`
	xxx_hidden_ContentType     *string                `protobuf:"bytes,6,opt,name=content_type,json=contentType"`
	xxx_hidden_ContentEncoding *string                `protobuf:"bytes,7,opt,name=content_encoding,json=contentEncoding"`
	xxx_hidden_Compression     *string                `protobuf:"bytes,8,opt,name=compression"`
	xxx_hidden_DeduplicationId *string                `protobuf:"bytes,9,opt,name=deduplication_id,json=deduplicationId"`
	xxx_hidden_DeliveryDelayMs int64                  `protobuf:"varint,10,opt,name=delivery_delay_ms,json=deliveryDelayMs"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *MessageProperties) Reset() {
	*x = MessageProperties{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageProperties) ProtoMessage() {}

func (x *MessageProperties) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MessageProperties) GetPriority() PriorityLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Priority
		}
	}
	return PriorityLevel_PRIORITY_LEVEL_UNSPECIFIED
}

func (x *MessageProperties) GetDeliveryMode() DeliveryMode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_DeliveryMode
		}
	}
	return DeliveryMode_DELIVERY_MODE_UNSPECIFIED
}

func (x *MessageProperties) GetExpirationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ExpirationTime
	}
	return nil
}

func (x *MessageProperties) GetCorrelationId() string {
	if x != nil {
		if x.xxx_hidden_CorrelationId != nil {
			return *x.xxx_hidden_CorrelationId
		}
		return ""
	}
	return ""
}

func (x *MessageProperties) GetReplyTo() string {
	if x != nil {
		if x.xxx_hidden_ReplyTo != nil {
			return *x.xxx_hidden_ReplyTo
		}
		return ""
	}
	return ""
}

func (x *MessageProperties) GetContentType() string {
	if x != nil {
		if x.xxx_hidden_ContentType != nil {
			return *x.xxx_hidden_ContentType
		}
		return ""
	}
	return ""
}

func (x *MessageProperties) GetContentEncoding() string {
	if x != nil {
		if x.xxx_hidden_ContentEncoding != nil {
			return *x.xxx_hidden_ContentEncoding
		}
		return ""
	}
	return ""
}

func (x *MessageProperties) GetCompression() string {
	if x != nil {
		if x.xxx_hidden_Compression != nil {
			return *x.xxx_hidden_Compression
		}
		return ""
	}
	return ""
}

func (x *MessageProperties) GetDeduplicationId() string {
	if x != nil {
		if x.xxx_hidden_DeduplicationId != nil {
			return *x.xxx_hidden_DeduplicationId
		}
		return ""
	}
	return ""
}

func (x *MessageProperties) GetDeliveryDelayMs() int64 {
	if x != nil {
		return x.xxx_hidden_DeliveryDelayMs
	}
	return 0
}

func (x *MessageProperties) SetPriority(v PriorityLevel) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *MessageProperties) SetDeliveryMode(v DeliveryMode) {
	x.xxx_hidden_DeliveryMode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *MessageProperties) SetExpirationTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_ExpirationTime = v
}

func (x *MessageProperties) SetCorrelationId(v string) {
	x.xxx_hidden_CorrelationId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *MessageProperties) SetReplyTo(v string) {
	x.xxx_hidden_ReplyTo = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *MessageProperties) SetContentType(v string) {
	x.xxx_hidden_ContentType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *MessageProperties) SetContentEncoding(v string) {
	x.xxx_hidden_ContentEncoding = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *MessageProperties) SetCompression(v string) {
	x.xxx_hidden_Compression = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 10)
}

func (x *MessageProperties) SetDeduplicationId(v string) {
	x.xxx_hidden_DeduplicationId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
}

func (x *MessageProperties) SetDeliveryDelayMs(v int64) {
	x.xxx_hidden_DeliveryDelayMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *MessageProperties) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MessageProperties) HasDeliveryMode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MessageProperties) HasExpirationTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ExpirationTime != nil
}

func (x *MessageProperties) HasCorrelationId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MessageProperties) HasReplyTo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *MessageProperties) HasContentType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *MessageProperties) HasContentEncoding() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *MessageProperties) HasCompression() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *MessageProperties) HasDeduplicationId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *MessageProperties) HasDeliveryDelayMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *MessageProperties) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Priority = PriorityLevel_PRIORITY_LEVEL_UNSPECIFIED
}

func (x *MessageProperties) ClearDeliveryMode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DeliveryMode = DeliveryMode_DELIVERY_MODE_UNSPECIFIED
}

func (x *MessageProperties) ClearExpirationTime() {
	x.xxx_hidden_ExpirationTime = nil
}

func (x *MessageProperties) ClearCorrelationId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CorrelationId = nil
}

func (x *MessageProperties) ClearReplyTo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ReplyTo = nil
}

func (x *MessageProperties) ClearContentType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ContentType = nil
}

func (x *MessageProperties) ClearContentEncoding() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ContentEncoding = nil
}

func (x *MessageProperties) ClearCompression() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Compression = nil
}

func (x *MessageProperties) ClearDeduplicationId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_DeduplicationId = nil
}

func (x *MessageProperties) ClearDeliveryDelayMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_DeliveryDelayMs = 0
}

type MessageProperties_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Message priority level
	Priority *PriorityLevel
	// Delivery mode for the message
	DeliveryMode *DeliveryMode
	// Message expiration time
	ExpirationTime *timestamppb.Timestamp
	// Correlation ID for request-response patterns
	CorrelationId *string
	// Reply-to address/topic
	ReplyTo *string
	// Content type of the payload
	ContentType *string
	// Content encoding
	ContentEncoding *string
	// Compression applied to payload
	Compression *string
	// Message deduplication ID
	DeduplicationId *string
	// Delay before message becomes available (milliseconds)
	DeliveryDelayMs *int64
}

func (b0 MessageProperties_builder) Build() *MessageProperties {
	m0 := &MessageProperties{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_Priority = *b.Priority
	}
	if b.DeliveryMode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_DeliveryMode = *b.DeliveryMode
	}
	x.xxx_hidden_ExpirationTime = b.ExpirationTime
	if b.CorrelationId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_CorrelationId = b.CorrelationId
	}
	if b.ReplyTo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_ReplyTo = b.ReplyTo
	}
	if b.ContentType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_ContentType = b.ContentType
	}
	if b.ContentEncoding != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_ContentEncoding = b.ContentEncoding
	}
	if b.Compression != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 10)
		x.xxx_hidden_Compression = b.Compression
	}
	if b.DeduplicationId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_DeduplicationId = b.DeduplicationId
	}
	if b.DeliveryDelayMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_DeliveryDelayMs = *b.DeliveryDelayMs
	}
	return m0
}

// Message routing information
type RoutingInfo struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RoutingKey   *string                `protobuf:"bytes,1,opt,name=routing_key,json=routingKey"`
	xxx_hidden_PartitionId  int32                  `protobuf:"varint,2,opt,name=partition_id,json=partitionId"`
	xxx_hidden_PartitionKey *string                `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey"`
	xxx_hidden_ExchangeName *string                `protobuf:"bytes,4,opt,name=exchange_name,json=exchangeName"`
	xxx_hidden_RoutingTags  []string               `protobuf:"bytes,5,rep,name=routing_tags,json=routingTags"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RoutingInfo) Reset() {
	*x = RoutingInfo{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingInfo) ProtoMessage() {}

func (x *RoutingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RoutingInfo) GetRoutingKey() string {
	if x != nil {
		if x.xxx_hidden_RoutingKey != nil {
			return *x.xxx_hidden_RoutingKey
		}
		return ""
	}
	return ""
}

func (x *RoutingInfo) GetPartitionId() int32 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *RoutingInfo) GetPartitionKey() string {
	if x != nil {
		if x.xxx_hidden_PartitionKey != nil {
			return *x.xxx_hidden_PartitionKey
		}
		return ""
	}
	return ""
}

func (x *RoutingInfo) GetExchangeName() string {
	if x != nil {
		if x.xxx_hidden_ExchangeName != nil {
			return *x.xxx_hidden_ExchangeName
		}
		return ""
	}
	return ""
}

func (x *RoutingInfo) GetRoutingTags() []string {
	if x != nil {
		return x.xxx_hidden_RoutingTags
	}
	return nil
}

func (x *RoutingInfo) SetRoutingKey(v string) {
	x.xxx_hidden_RoutingKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *RoutingInfo) SetPartitionId(v int32) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *RoutingInfo) SetPartitionKey(v string) {
	x.xxx_hidden_PartitionKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *RoutingInfo) SetExchangeName(v string) {
	x.xxx_hidden_ExchangeName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *RoutingInfo) SetRoutingTags(v []string) {
	x.xxx_hidden_RoutingTags = v
}

func (x *RoutingInfo) HasRoutingKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RoutingInfo) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RoutingInfo) HasPartitionKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RoutingInfo) HasExchangeName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RoutingInfo) ClearRoutingKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RoutingKey = nil
}

func (x *RoutingInfo) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PartitionId = 0
}

func (x *RoutingInfo) ClearPartitionKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartitionKey = nil
}

func (x *RoutingInfo) ClearExchangeName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ExchangeName = nil
}

type RoutingInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Routing key for topic-based routing
	RoutingKey *string
	// Specific partition ID (if applicable)
	PartitionId *int32
	// Partition key for automatic partitioning
	PartitionKey *string
	// Exchange name (for exchange-based routing)
	ExchangeName *string
	// Routing tags for advanced routing
	RoutingTags []string
}

func (b0 RoutingInfo_builder) Build() *RoutingInfo {
	m0 := &RoutingInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RoutingKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_RoutingKey = b.RoutingKey
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.PartitionKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_PartitionKey = b.PartitionKey
	}
	if b.ExchangeName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_ExchangeName = b.ExchangeName
	}
	x.xxx_hidden_RoutingTags = b.RoutingTags
	return m0
}

// Publishing configuration
type PublishConfig struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_WaitForAck         bool                   `protobuf:"varint,1,opt,name=wait_for_ack,json=waitForAck"`
	xxx_hidden_AckTimeoutMs       int32                  `protobuf:"varint,2,opt,name=ack_timeout_ms,json=ackTimeoutMs"`
	xxx_hidden_DuplicateDetection bool                   `protobuf:"varint,3,opt,name=duplicate_detection,json=duplicateDetection"`
	xxx_hidden_EnableCompression  bool                   `protobuf:"varint,4,opt,name=enable_compression,json=enableCompression"`
	xxx_hidden_EnableOrdering     bool                   `protobuf:"varint,5,opt,name=enable_ordering,json=enableOrdering"`
	xxx_hidden_RetryConfig        *RetryConfig           `protobuf:"bytes,6,opt,name=retry_config,json=retryConfig"`
	xxx_hidden_PersistenceLevel   *string                `protobuf:"bytes,7,opt,name=persistence_level,json=persistenceLevel"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *PublishConfig) Reset() {
	*x = PublishConfig{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishConfig) ProtoMessage() {}

func (x *PublishConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PublishConfig) GetWaitForAck() bool {
	if x != nil {
		return x.xxx_hidden_WaitForAck
	}
	return false
}

func (x *PublishConfig) GetAckTimeoutMs() int32 {
	if x != nil {
		return x.xxx_hidden_AckTimeoutMs
	}
	return 0
}

func (x *PublishConfig) GetDuplicateDetection() bool {
	if x != nil {
		return x.xxx_hidden_DuplicateDetection
	}
	return false
}

func (x *PublishConfig) GetEnableCompression() bool {
	if x != nil {
		return x.xxx_hidden_EnableCompression
	}
	return false
}

func (x *PublishConfig) GetEnableOrdering() bool {
	if x != nil {
		return x.xxx_hidden_EnableOrdering
	}
	return false
}

func (x *PublishConfig) GetRetryConfig() *RetryConfig {
	if x != nil {
		return x.xxx_hidden_RetryConfig
	}
	return nil
}

func (x *PublishConfig) GetPersistenceLevel() string {
	if x != nil {
		if x.xxx_hidden_PersistenceLevel != nil {
			return *x.xxx_hidden_PersistenceLevel
		}
		return ""
	}
	return ""
}

func (x *PublishConfig) SetWaitForAck(v bool) {
	x.xxx_hidden_WaitForAck = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *PublishConfig) SetAckTimeoutMs(v int32) {
	x.xxx_hidden_AckTimeoutMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *PublishConfig) SetDuplicateDetection(v bool) {
	x.xxx_hidden_DuplicateDetection = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *PublishConfig) SetEnableCompression(v bool) {
	x.xxx_hidden_EnableCompression = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *PublishConfig) SetEnableOrdering(v bool) {
	x.xxx_hidden_EnableOrdering = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *PublishConfig) SetRetryConfig(v *RetryConfig) {
	x.xxx_hidden_RetryConfig = v
}

func (x *PublishConfig) SetPersistenceLevel(v string) {
	x.xxx_hidden_PersistenceLevel = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *PublishConfig) HasWaitForAck() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PublishConfig) HasAckTimeoutMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PublishConfig) HasDuplicateDetection() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PublishConfig) HasEnableCompression() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PublishConfig) HasEnableOrdering() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *PublishConfig) HasRetryConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RetryConfig != nil
}

func (x *PublishConfig) HasPersistenceLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *PublishConfig) ClearWaitForAck() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_WaitForAck = false
}

func (x *PublishConfig) ClearAckTimeoutMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AckTimeoutMs = 0
}

func (x *PublishConfig) ClearDuplicateDetection() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DuplicateDetection = false
}

func (x *PublishConfig) ClearEnableCompression() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EnableCompression = false
}

func (x *PublishConfig) ClearEnableOrdering() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_EnableOrdering = false
}

func (x *PublishConfig) ClearRetryConfig() {
	x.xxx_hidden_RetryConfig = nil
}

func (x *PublishConfig) ClearPersistenceLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_PersistenceLevel = nil
}

type PublishConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Wait for acknowledgment before returning
	WaitForAck *bool
	// Acknowledgment timeout (milliseconds)
	AckTimeoutMs *int32
	// Enable duplicate detection
	DuplicateDetection *bool
	// Compression for message batch
	EnableCompression *bool
	// Enable message ordering
	EnableOrdering *bool
	// Retry configuration for failed publishes - references existing RetryConfig
	RetryConfig *RetryConfig
	// Persistence level required
	PersistenceLevel *string
}

func (b0 PublishConfig_builder) Build() *PublishConfig {
	m0 := &PublishConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.WaitForAck != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_WaitForAck = *b.WaitForAck
	}
	if b.AckTimeoutMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_AckTimeoutMs = *b.AckTimeoutMs
	}
	if b.DuplicateDetection != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_DuplicateDetection = *b.DuplicateDetection
	}
	if b.EnableCompression != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_EnableCompression = *b.EnableCompression
	}
	if b.EnableOrdering != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_EnableOrdering = *b.EnableOrdering
	}
	x.xxx_hidden_RetryConfig = b.RetryConfig
	if b.PersistenceLevel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_PersistenceLevel = b.PersistenceLevel
	}
	return m0
}

// Batch publishing settings
type BatchSettings struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled         bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_MaxBatchSize    int32                  `protobuf:"varint,2,opt,name=max_batch_size,json=maxBatchSize"`
	xxx_hidden_MaxBatchBytes   int64                  `protobuf:"varint,3,opt,name=max_batch_bytes,json=maxBatchBytes"`
	xxx_hidden_BatchTimeoutMs  int32                  `protobuf:"varint,4,opt,name=batch_timeout_ms,json=batchTimeoutMs"`
	xxx_hidden_FlushOnComplete bool                   `protobuf:"varint,5,opt,name=flush_on_complete,json=flushOnComplete"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *BatchSettings) Reset() {
	*x = BatchSettings{}
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSettings) ProtoMessage() {}

func (x *BatchSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_push_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatchSettings) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *BatchSettings) GetMaxBatchSize() int32 {
	if x != nil {
		return x.xxx_hidden_MaxBatchSize
	}
	return 0
}

func (x *BatchSettings) GetMaxBatchBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MaxBatchBytes
	}
	return 0
}

func (x *BatchSettings) GetBatchTimeoutMs() int32 {
	if x != nil {
		return x.xxx_hidden_BatchTimeoutMs
	}
	return 0
}

func (x *BatchSettings) GetFlushOnComplete() bool {
	if x != nil {
		return x.xxx_hidden_FlushOnComplete
	}
	return false
}

func (x *BatchSettings) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *BatchSettings) SetMaxBatchSize(v int32) {
	x.xxx_hidden_MaxBatchSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *BatchSettings) SetMaxBatchBytes(v int64) {
	x.xxx_hidden_MaxBatchBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *BatchSettings) SetBatchTimeoutMs(v int32) {
	x.xxx_hidden_BatchTimeoutMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *BatchSettings) SetFlushOnComplete(v bool) {
	x.xxx_hidden_FlushOnComplete = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *BatchSettings) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BatchSettings) HasMaxBatchSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *BatchSettings) HasMaxBatchBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *BatchSettings) HasBatchTimeoutMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *BatchSettings) HasFlushOnComplete() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *BatchSettings) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *BatchSettings) ClearMaxBatchSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxBatchSize = 0
}

func (x *BatchSettings) ClearMaxBatchBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxBatchBytes = 0
}

func (x *BatchSettings) ClearBatchTimeoutMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_BatchTimeoutMs = 0
}

func (x *BatchSettings) ClearFlushOnComplete() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_FlushOnComplete = false
}

type BatchSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable batch publishing
	Enabled *bool
	// Maximum messages per batch
	MaxBatchSize *int32
	// Maximum batch size in bytes
	MaxBatchBytes *int64
	// Maximum time to wait for batch completion (milliseconds)
	BatchTimeoutMs *int32
	// Flush batch on publish request completion
	FlushOnComplete *bool
}

func (b0 BatchSettings_builder) Build() *BatchSettings {
	m0 := &BatchSettings{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.MaxBatchSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_MaxBatchSize = *b.MaxBatchSize
	}
	if b.MaxBatchBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_MaxBatchBytes = *b.MaxBatchBytes
	}
	if b.BatchTimeoutMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_BatchTimeoutMs = *b.BatchTimeoutMs
	}
	if b.FlushOnComplete != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_FlushOnComplete = *b.FlushOnComplete
	}
	return m0
}

var File_pkg_queue_proto_push_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_push_request_proto_rawDesc = "" +
	"\n" +
	"\"pkg/queue/proto/push_request.proto\x12\x10gcommon.v1.queue\x1a\x19google/protobuf/any.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#pkg/queue/proto/delivery_mode.proto\x1a&pkg/queue/proto/message_metadata.proto\x1a$pkg/queue/proto/priority_level.proto\x1a\"pkg/queue/proto/retry_config.proto\"\xb8\x03\n" +
	"\vPushRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x125\n" +
	"\bmessages\x18\x02 \x03(\v2\x19.gcommon.v1.queue.MessageR\bmessages\x12F\n" +
	"\x0epublish_config\x18\x03 \x01(\v2\x1f.gcommon.v1.queue.PublishConfigR\rpublishConfig\x12F\n" +
	"\x0ebatch_settings\x18\x04 \x01(\v2\x1f.gcommon.v1.queue.BatchSettingsR\rbatchSettings\x12%\n" +
	"\x0etransaction_id\x18\x05 \x01(\tR\rtransactionId\x12\x1f\n" +
	"\vproducer_id\x18\x06 \x01(\tR\n" +
	"producerId\x12G\n" +
	"\bmetadata\x18\a \x03(\v2+.gcommon.v1.queue.PushRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8c\x03\n" +
	"\aMessage\x12.\n" +
	"\apayload\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\apayload\x12@\n" +
	"\aheaders\x18\x02 \x03(\v2&.gcommon.v1.queue.Message.HeadersEntryR\aheaders\x12C\n" +
	"\n" +
	"properties\x18\x03 \x01(\v2#.gcommon.v1.queue.MessagePropertiesR\n" +
	"properties\x12@\n" +
	"\frouting_info\x18\x04 \x01(\v2\x1d.gcommon.v1.queue.RoutingInfoR\vroutingInfo\x12L\n" +
	"\x10message_metadata\x18\x05 \x01(\v2!.gcommon.v1.queue.MessageMetadataR\x0fmessageMetadata\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe3\x03\n" +
	"\x11MessageProperties\x12;\n" +
	"\bpriority\x18\x01 \x01(\x0e2\x1f.gcommon.v1.queue.PriorityLevelR\bpriority\x12C\n" +
	"\rdelivery_mode\x18\x02 \x01(\x0e2\x1e.gcommon.v1.queue.DeliveryModeR\fdeliveryMode\x12C\n" +
	"\x0fexpiration_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0eexpirationTime\x12%\n" +
	"\x0ecorrelation_id\x18\x04 \x01(\tR\rcorrelationId\x12\x19\n" +
	"\breply_to\x18\x05 \x01(\tR\areplyTo\x12!\n" +
	"\fcontent_type\x18\x06 \x01(\tR\vcontentType\x12)\n" +
	"\x10content_encoding\x18\a \x01(\tR\x0fcontentEncoding\x12 \n" +
	"\vcompression\x18\b \x01(\tR\vcompression\x12)\n" +
	"\x10deduplication_id\x18\t \x01(\tR\x0fdeduplicationId\x12*\n" +
	"\x11delivery_delay_ms\x18\n" +
	" \x01(\x03R\x0fdeliveryDelayMs\"\xbe\x01\n" +
	"\vRoutingInfo\x12\x1f\n" +
	"\vrouting_key\x18\x01 \x01(\tR\n" +
	"routingKey\x12!\n" +
	"\fpartition_id\x18\x02 \x01(\x05R\vpartitionId\x12#\n" +
	"\rpartition_key\x18\x03 \x01(\tR\fpartitionKey\x12#\n" +
	"\rexchange_name\x18\x04 \x01(\tR\fexchangeName\x12!\n" +
	"\frouting_tags\x18\x05 \x03(\tR\vroutingTags\"\xcf\x02\n" +
	"\rPublishConfig\x12 \n" +
	"\fwait_for_ack\x18\x01 \x01(\bR\n" +
	"waitForAck\x12$\n" +
	"\x0eack_timeout_ms\x18\x02 \x01(\x05R\fackTimeoutMs\x12/\n" +
	"\x13duplicate_detection\x18\x03 \x01(\bR\x12duplicateDetection\x12-\n" +
	"\x12enable_compression\x18\x04 \x01(\bR\x11enableCompression\x12'\n" +
	"\x0fenable_ordering\x18\x05 \x01(\bR\x0eenableOrdering\x12@\n" +
	"\fretry_config\x18\x06 \x01(\v2\x1d.gcommon.v1.queue.RetryConfigR\vretryConfig\x12+\n" +
	"\x11persistence_level\x18\a \x01(\tR\x10persistenceLevel\"\xcd\x01\n" +
	"\rBatchSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12$\n" +
	"\x0emax_batch_size\x18\x02 \x01(\x05R\fmaxBatchSize\x12&\n" +
	"\x0fmax_batch_bytes\x18\x03 \x01(\x03R\rmaxBatchBytes\x12(\n" +
	"\x10batch_timeout_ms\x18\x04 \x01(\x05R\x0ebatchTimeoutMs\x12*\n" +
	"\x11flush_on_complete\x18\x05 \x01(\bR\x0fflushOnCompleteB\xbd\x01\n" +
	"\x14com.gcommon.v1.queueB\x10PushRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_queue_proto_push_request_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pkg_queue_proto_push_request_proto_goTypes = []any{
	(*PushRequest)(nil),           // 0: gcommon.v1.queue.PushRequest
	(*Message)(nil),               // 1: gcommon.v1.queue.Message
	(*MessageProperties)(nil),     // 2: gcommon.v1.queue.MessageProperties
	(*RoutingInfo)(nil),           // 3: gcommon.v1.queue.RoutingInfo
	(*PublishConfig)(nil),         // 4: gcommon.v1.queue.PublishConfig
	(*BatchSettings)(nil),         // 5: gcommon.v1.queue.BatchSettings
	nil,                           // 6: gcommon.v1.queue.PushRequest.MetadataEntry
	nil,                           // 7: gcommon.v1.queue.Message.HeadersEntry
	(*anypb.Any)(nil),             // 8: google.protobuf.Any
	(*MessageMetadata)(nil),       // 9: gcommon.v1.queue.MessageMetadata
	(PriorityLevel)(0),            // 10: gcommon.v1.queue.PriorityLevel
	(DeliveryMode)(0),             // 11: gcommon.v1.queue.DeliveryMode
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(*RetryConfig)(nil),           // 13: gcommon.v1.queue.RetryConfig
}
var file_pkg_queue_proto_push_request_proto_depIdxs = []int32{
	1,  // 0: gcommon.v1.queue.PushRequest.messages:type_name -> gcommon.v1.queue.Message
	4,  // 1: gcommon.v1.queue.PushRequest.publish_config:type_name -> gcommon.v1.queue.PublishConfig
	5,  // 2: gcommon.v1.queue.PushRequest.batch_settings:type_name -> gcommon.v1.queue.BatchSettings
	6,  // 3: gcommon.v1.queue.PushRequest.metadata:type_name -> gcommon.v1.queue.PushRequest.MetadataEntry
	8,  // 4: gcommon.v1.queue.Message.payload:type_name -> google.protobuf.Any
	7,  // 5: gcommon.v1.queue.Message.headers:type_name -> gcommon.v1.queue.Message.HeadersEntry
	2,  // 6: gcommon.v1.queue.Message.properties:type_name -> gcommon.v1.queue.MessageProperties
	3,  // 7: gcommon.v1.queue.Message.routing_info:type_name -> gcommon.v1.queue.RoutingInfo
	9,  // 8: gcommon.v1.queue.Message.message_metadata:type_name -> gcommon.v1.queue.MessageMetadata
	10, // 9: gcommon.v1.queue.MessageProperties.priority:type_name -> gcommon.v1.queue.PriorityLevel
	11, // 10: gcommon.v1.queue.MessageProperties.delivery_mode:type_name -> gcommon.v1.queue.DeliveryMode
	12, // 11: gcommon.v1.queue.MessageProperties.expiration_time:type_name -> google.protobuf.Timestamp
	13, // 12: gcommon.v1.queue.PublishConfig.retry_config:type_name -> gcommon.v1.queue.RetryConfig
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_push_request_proto_init() }
func file_pkg_queue_proto_push_request_proto_init() {
	if File_pkg_queue_proto_push_request_proto != nil {
		return
	}
	file_pkg_queue_proto_delivery_mode_proto_init()
	file_pkg_queue_proto_message_metadata_proto_init()
	file_pkg_queue_proto_priority_level_proto_init()
	file_pkg_queue_proto_retry_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_push_request_proto_rawDesc), len(file_pkg_queue_proto_push_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_push_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_push_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_push_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_push_request_proto = out.File
	file_pkg_queue_proto_push_request_proto_goTypes = nil
	file_pkg_queue_proto_push_request_proto_depIdxs = nil
}
