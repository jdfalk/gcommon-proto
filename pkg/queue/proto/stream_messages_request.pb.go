// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/stream_messages_request.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StreamMessagesRequest initiates a message stream from a queue or topic
type StreamMessagesRequest struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Topic           *string                `protobuf:"bytes,1,opt,name=topic"`
	xxx_hidden_ConsumerGroupId *string                `protobuf:"bytes,2,opt,name=consumer_group_id,json=consumerGroupId"`
	xxx_hidden_ConsumerId      *string                `protobuf:"bytes,3,opt,name=consumer_id,json=consumerId"`
	xxx_hidden_OffsetConfig    *OffsetConfig          `protobuf:"bytes,4,opt,name=offset_config,json=offsetConfig"`
	xxx_hidden_MaxMessages     int64                  `protobuf:"varint,5,opt,name=max_messages,json=maxMessages"`
	xxx_hidden_StreamTimeoutMs int32                  `protobuf:"varint,6,opt,name=stream_timeout_ms,json=streamTimeoutMs"`
	xxx_hidden_AckLevel        AckLevel               `protobuf:"varint,7,opt,name=ack_level,json=ackLevel,enum=gcommon.v1.queue.AckLevel"`
	xxx_hidden_BatchSize       int32                  `protobuf:"varint,8,opt,name=batch_size,json=batchSize"`
	xxx_hidden_Filter          *MessageFilter         `protobuf:"bytes,9,opt,name=filter"`
	xxx_hidden_AutoAcknowledge bool                   `protobuf:"varint,10,opt,name=auto_acknowledge,json=autoAcknowledge"`
	xxx_hidden_PauseOnError    bool                   `protobuf:"varint,11,opt,name=pause_on_error,json=pauseOnError"`
	xxx_hidden_IncludeMetadata bool                   `protobuf:"varint,12,opt,name=include_metadata,json=includeMetadata"`
	xxx_hidden_PartitionIds    []int32                `protobuf:"varint,13,rep,packed,name=partition_ids,json=partitionIds"`
	xxx_hidden_StreamConfig    *StreamConfig          `protobuf:"bytes,14,opt,name=stream_config,json=streamConfig"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *StreamMessagesRequest) Reset() {
	*x = StreamMessagesRequest{}
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessagesRequest) ProtoMessage() {}

func (x *StreamMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamMessagesRequest) GetTopic() string {
	if x != nil {
		if x.xxx_hidden_Topic != nil {
			return *x.xxx_hidden_Topic
		}
		return ""
	}
	return ""
}

func (x *StreamMessagesRequest) GetConsumerGroupId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerGroupId != nil {
			return *x.xxx_hidden_ConsumerGroupId
		}
		return ""
	}
	return ""
}

func (x *StreamMessagesRequest) GetConsumerId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerId != nil {
			return *x.xxx_hidden_ConsumerId
		}
		return ""
	}
	return ""
}

func (x *StreamMessagesRequest) GetOffsetConfig() *OffsetConfig {
	if x != nil {
		return x.xxx_hidden_OffsetConfig
	}
	return nil
}

func (x *StreamMessagesRequest) GetMaxMessages() int64 {
	if x != nil {
		return x.xxx_hidden_MaxMessages
	}
	return 0
}

func (x *StreamMessagesRequest) GetStreamTimeoutMs() int32 {
	if x != nil {
		return x.xxx_hidden_StreamTimeoutMs
	}
	return 0
}

func (x *StreamMessagesRequest) GetAckLevel() AckLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_AckLevel
		}
	}
	return AckLevel_ACK_LEVEL_UNSPECIFIED
}

func (x *StreamMessagesRequest) GetBatchSize() int32 {
	if x != nil {
		return x.xxx_hidden_BatchSize
	}
	return 0
}

func (x *StreamMessagesRequest) GetFilter() *MessageFilter {
	if x != nil {
		return x.xxx_hidden_Filter
	}
	return nil
}

func (x *StreamMessagesRequest) GetAutoAcknowledge() bool {
	if x != nil {
		return x.xxx_hidden_AutoAcknowledge
	}
	return false
}

func (x *StreamMessagesRequest) GetPauseOnError() bool {
	if x != nil {
		return x.xxx_hidden_PauseOnError
	}
	return false
}

func (x *StreamMessagesRequest) GetIncludeMetadata() bool {
	if x != nil {
		return x.xxx_hidden_IncludeMetadata
	}
	return false
}

func (x *StreamMessagesRequest) GetPartitionIds() []int32 {
	if x != nil {
		return x.xxx_hidden_PartitionIds
	}
	return nil
}

func (x *StreamMessagesRequest) GetStreamConfig() *StreamConfig {
	if x != nil {
		return x.xxx_hidden_StreamConfig
	}
	return nil
}

func (x *StreamMessagesRequest) SetTopic(v string) {
	x.xxx_hidden_Topic = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 14)
}

func (x *StreamMessagesRequest) SetConsumerGroupId(v string) {
	x.xxx_hidden_ConsumerGroupId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 14)
}

func (x *StreamMessagesRequest) SetConsumerId(v string) {
	x.xxx_hidden_ConsumerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 14)
}

func (x *StreamMessagesRequest) SetOffsetConfig(v *OffsetConfig) {
	x.xxx_hidden_OffsetConfig = v
}

func (x *StreamMessagesRequest) SetMaxMessages(v int64) {
	x.xxx_hidden_MaxMessages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 14)
}

func (x *StreamMessagesRequest) SetStreamTimeoutMs(v int32) {
	x.xxx_hidden_StreamTimeoutMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 14)
}

func (x *StreamMessagesRequest) SetAckLevel(v AckLevel) {
	x.xxx_hidden_AckLevel = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 14)
}

func (x *StreamMessagesRequest) SetBatchSize(v int32) {
	x.xxx_hidden_BatchSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 14)
}

func (x *StreamMessagesRequest) SetFilter(v *MessageFilter) {
	x.xxx_hidden_Filter = v
}

func (x *StreamMessagesRequest) SetAutoAcknowledge(v bool) {
	x.xxx_hidden_AutoAcknowledge = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 14)
}

func (x *StreamMessagesRequest) SetPauseOnError(v bool) {
	x.xxx_hidden_PauseOnError = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 14)
}

func (x *StreamMessagesRequest) SetIncludeMetadata(v bool) {
	x.xxx_hidden_IncludeMetadata = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 14)
}

func (x *StreamMessagesRequest) SetPartitionIds(v []int32) {
	x.xxx_hidden_PartitionIds = v
}

func (x *StreamMessagesRequest) SetStreamConfig(v *StreamConfig) {
	x.xxx_hidden_StreamConfig = v
}

func (x *StreamMessagesRequest) HasTopic() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StreamMessagesRequest) HasConsumerGroupId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StreamMessagesRequest) HasConsumerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StreamMessagesRequest) HasOffsetConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OffsetConfig != nil
}

func (x *StreamMessagesRequest) HasMaxMessages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *StreamMessagesRequest) HasStreamTimeoutMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *StreamMessagesRequest) HasAckLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *StreamMessagesRequest) HasBatchSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *StreamMessagesRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Filter != nil
}

func (x *StreamMessagesRequest) HasAutoAcknowledge() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *StreamMessagesRequest) HasPauseOnError() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *StreamMessagesRequest) HasIncludeMetadata() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *StreamMessagesRequest) HasStreamConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StreamConfig != nil
}

func (x *StreamMessagesRequest) ClearTopic() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Topic = nil
}

func (x *StreamMessagesRequest) ClearConsumerGroupId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ConsumerGroupId = nil
}

func (x *StreamMessagesRequest) ClearConsumerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ConsumerId = nil
}

func (x *StreamMessagesRequest) ClearOffsetConfig() {
	x.xxx_hidden_OffsetConfig = nil
}

func (x *StreamMessagesRequest) ClearMaxMessages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MaxMessages = 0
}

func (x *StreamMessagesRequest) ClearStreamTimeoutMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_StreamTimeoutMs = 0
}

func (x *StreamMessagesRequest) ClearAckLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_AckLevel = AckLevel_ACK_LEVEL_UNSPECIFIED
}

func (x *StreamMessagesRequest) ClearBatchSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_BatchSize = 0
}

func (x *StreamMessagesRequest) ClearFilter() {
	x.xxx_hidden_Filter = nil
}

func (x *StreamMessagesRequest) ClearAutoAcknowledge() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_AutoAcknowledge = false
}

func (x *StreamMessagesRequest) ClearPauseOnError() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_PauseOnError = false
}

func (x *StreamMessagesRequest) ClearIncludeMetadata() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_IncludeMetadata = false
}

func (x *StreamMessagesRequest) ClearStreamConfig() {
	x.xxx_hidden_StreamConfig = nil
}

type StreamMessagesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Topic or queue identifier to stream from
	Topic *string
	// Consumer group ID for coordinated consumption
	ConsumerGroupId *string
	// Individual consumer ID within the group
	ConsumerId *string
	// Starting offset configuration
	OffsetConfig *OffsetConfig
	// Maximum number of messages to stream
	MaxMessages *int64
	// Maximum time to keep stream open (milliseconds)
	StreamTimeoutMs *int32
	// Acknowledgment level required
	AckLevel *AckLevel
	// Batch size for message delivery
	BatchSize *int32
	// Message filter criteria
	Filter *MessageFilter
	// Auto-acknowledge messages after delivery
	AutoAcknowledge *bool
	// Pause stream on error
	PauseOnError *bool
	// Include message metadata in stream
	IncludeMetadata *bool
	// Specific partition IDs to stream from (empty = all partitions)
	PartitionIds []int32
	// Stream configuration options
	StreamConfig *StreamConfig
}

func (b0 StreamMessagesRequest_builder) Build() *StreamMessagesRequest {
	m0 := &StreamMessagesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Topic != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 14)
		x.xxx_hidden_Topic = b.Topic
	}
	if b.ConsumerGroupId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 14)
		x.xxx_hidden_ConsumerGroupId = b.ConsumerGroupId
	}
	if b.ConsumerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 14)
		x.xxx_hidden_ConsumerId = b.ConsumerId
	}
	x.xxx_hidden_OffsetConfig = b.OffsetConfig
	if b.MaxMessages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 14)
		x.xxx_hidden_MaxMessages = *b.MaxMessages
	}
	if b.StreamTimeoutMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 14)
		x.xxx_hidden_StreamTimeoutMs = *b.StreamTimeoutMs
	}
	if b.AckLevel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 14)
		x.xxx_hidden_AckLevel = *b.AckLevel
	}
	if b.BatchSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 14)
		x.xxx_hidden_BatchSize = *b.BatchSize
	}
	x.xxx_hidden_Filter = b.Filter
	if b.AutoAcknowledge != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 14)
		x.xxx_hidden_AutoAcknowledge = *b.AutoAcknowledge
	}
	if b.PauseOnError != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 14)
		x.xxx_hidden_PauseOnError = *b.PauseOnError
	}
	if b.IncludeMetadata != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 14)
		x.xxx_hidden_IncludeMetadata = *b.IncludeMetadata
	}
	x.xxx_hidden_PartitionIds = b.PartitionIds
	x.xxx_hidden_StreamConfig = b.StreamConfig
	return m0
}

// Offset configuration for stream starting point
type OffsetConfig struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_OffsetType      OffsetType             `protobuf:"varint,1,opt,name=offset_type,json=offsetType,enum=gcommon.v1.queue.OffsetType"`
	xxx_hidden_OffsetValue     int64                  `protobuf:"varint,2,opt,name=offset_value,json=offsetValue"`
	xxx_hidden_StartTimestamp  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_timestamp,json=startTimestamp"`
	xxx_hidden_ResetOnNotFound bool                   `protobuf:"varint,4,opt,name=reset_on_not_found,json=resetOnNotFound"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *OffsetConfig) Reset() {
	*x = OffsetConfig{}
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffsetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffsetConfig) ProtoMessage() {}

func (x *OffsetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OffsetConfig) GetOffsetType() OffsetType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_OffsetType
		}
	}
	return OffsetType_OFFSET_TYPE_UNSPECIFIED
}

func (x *OffsetConfig) GetOffsetValue() int64 {
	if x != nil {
		return x.xxx_hidden_OffsetValue
	}
	return 0
}

func (x *OffsetConfig) GetStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_StartTimestamp
	}
	return nil
}

func (x *OffsetConfig) GetResetOnNotFound() bool {
	if x != nil {
		return x.xxx_hidden_ResetOnNotFound
	}
	return false
}

func (x *OffsetConfig) SetOffsetType(v OffsetType) {
	x.xxx_hidden_OffsetType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *OffsetConfig) SetOffsetValue(v int64) {
	x.xxx_hidden_OffsetValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *OffsetConfig) SetStartTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_StartTimestamp = v
}

func (x *OffsetConfig) SetResetOnNotFound(v bool) {
	x.xxx_hidden_ResetOnNotFound = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *OffsetConfig) HasOffsetType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OffsetConfig) HasOffsetValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *OffsetConfig) HasStartTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StartTimestamp != nil
}

func (x *OffsetConfig) HasResetOnNotFound() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *OffsetConfig) ClearOffsetType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_OffsetType = OffsetType_OFFSET_TYPE_UNSPECIFIED
}

func (x *OffsetConfig) ClearOffsetValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OffsetValue = 0
}

func (x *OffsetConfig) ClearStartTimestamp() {
	x.xxx_hidden_StartTimestamp = nil
}

func (x *OffsetConfig) ClearResetOnNotFound() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ResetOnNotFound = false
}

type OffsetConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Offset type (earliest, latest, timestamp, specific)
	OffsetType *OffsetType
	// Specific offset value (when offset_type = specific)
	OffsetValue *int64
	// Timestamp to start from (when offset_type = timestamp)
	StartTimestamp *timestamppb.Timestamp
	// Reset to beginning if offset not found
	ResetOnNotFound *bool
}

func (b0 OffsetConfig_builder) Build() *OffsetConfig {
	m0 := &OffsetConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.OffsetType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_OffsetType = *b.OffsetType
	}
	if b.OffsetValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_OffsetValue = *b.OffsetValue
	}
	x.xxx_hidden_StartTimestamp = b.StartTimestamp
	if b.ResetOnNotFound != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ResetOnNotFound = *b.ResetOnNotFound
	}
	return m0
}

// Message filtering criteria
type MessageFilter struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_HeaderFilters    map[string]string      `protobuf:"bytes,1,rep,name=header_filters,json=headerFilters" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_PropertyFilters  map[string]string      `protobuf:"bytes,2,rep,name=property_filters,json=propertyFilters" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MinPriority      int32                  `protobuf:"varint,3,opt,name=min_priority,json=minPriority"`
	xxx_hidden_MaxAgeSeconds    int32                  `protobuf:"varint,4,opt,name=max_age_seconds,json=maxAgeSeconds"`
	xxx_hidden_ContentType      *string                `protobuf:"bytes,5,opt,name=content_type,json=contentType"`
	xxx_hidden_FilterExpression *string                `protobuf:"bytes,6,opt,name=filter_expression,json=filterExpression"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *MessageFilter) Reset() {
	*x = MessageFilter{}
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageFilter) ProtoMessage() {}

func (x *MessageFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MessageFilter) GetHeaderFilters() map[string]string {
	if x != nil {
		return x.xxx_hidden_HeaderFilters
	}
	return nil
}

func (x *MessageFilter) GetPropertyFilters() map[string]string {
	if x != nil {
		return x.xxx_hidden_PropertyFilters
	}
	return nil
}

func (x *MessageFilter) GetMinPriority() int32 {
	if x != nil {
		return x.xxx_hidden_MinPriority
	}
	return 0
}

func (x *MessageFilter) GetMaxAgeSeconds() int32 {
	if x != nil {
		return x.xxx_hidden_MaxAgeSeconds
	}
	return 0
}

func (x *MessageFilter) GetContentType() string {
	if x != nil {
		if x.xxx_hidden_ContentType != nil {
			return *x.xxx_hidden_ContentType
		}
		return ""
	}
	return ""
}

func (x *MessageFilter) GetFilterExpression() string {
	if x != nil {
		if x.xxx_hidden_FilterExpression != nil {
			return *x.xxx_hidden_FilterExpression
		}
		return ""
	}
	return ""
}

func (x *MessageFilter) SetHeaderFilters(v map[string]string) {
	x.xxx_hidden_HeaderFilters = v
}

func (x *MessageFilter) SetPropertyFilters(v map[string]string) {
	x.xxx_hidden_PropertyFilters = v
}

func (x *MessageFilter) SetMinPriority(v int32) {
	x.xxx_hidden_MinPriority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *MessageFilter) SetMaxAgeSeconds(v int32) {
	x.xxx_hidden_MaxAgeSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *MessageFilter) SetContentType(v string) {
	x.xxx_hidden_ContentType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *MessageFilter) SetFilterExpression(v string) {
	x.xxx_hidden_FilterExpression = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *MessageFilter) HasMinPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MessageFilter) HasMaxAgeSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MessageFilter) HasContentType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *MessageFilter) HasFilterExpression() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *MessageFilter) ClearMinPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MinPriority = 0
}

func (x *MessageFilter) ClearMaxAgeSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MaxAgeSeconds = 0
}

func (x *MessageFilter) ClearContentType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ContentType = nil
}

func (x *MessageFilter) ClearFilterExpression() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_FilterExpression = nil
}

type MessageFilter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Filter by message headers
	HeaderFilters map[string]string
	// Filter by message properties
	PropertyFilters map[string]string
	// Minimum message priority
	MinPriority *int32
	// Maximum message age (seconds)
	MaxAgeSeconds *int32
	// Content type filter
	ContentType *string
	// Custom filter expression
	FilterExpression *string
}

func (b0 MessageFilter_builder) Build() *MessageFilter {
	m0 := &MessageFilter{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_HeaderFilters = b.HeaderFilters
	x.xxx_hidden_PropertyFilters = b.PropertyFilters
	if b.MinPriority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_MinPriority = *b.MinPriority
	}
	if b.MaxAgeSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_MaxAgeSeconds = *b.MaxAgeSeconds
	}
	if b.ContentType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_ContentType = b.ContentType
	}
	if b.FilterExpression != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_FilterExpression = b.FilterExpression
	}
	return m0
}

// Flow control configuration
type FlowControlConfig struct {
	state                             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled                bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_MaxOutstandingMessages int32                  `protobuf:"varint,2,opt,name=max_outstanding_messages,json=maxOutstandingMessages"`
	xxx_hidden_MaxOutstandingBytes    int64                  `protobuf:"varint,3,opt,name=max_outstanding_bytes,json=maxOutstandingBytes"`
	xxx_hidden_Algorithm              *string                `protobuf:"bytes,4,opt,name=algorithm"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *FlowControlConfig) Reset() {
	*x = FlowControlConfig{}
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlowControlConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowControlConfig) ProtoMessage() {}

func (x *FlowControlConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FlowControlConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *FlowControlConfig) GetMaxOutstandingMessages() int32 {
	if x != nil {
		return x.xxx_hidden_MaxOutstandingMessages
	}
	return 0
}

func (x *FlowControlConfig) GetMaxOutstandingBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MaxOutstandingBytes
	}
	return 0
}

func (x *FlowControlConfig) GetAlgorithm() string {
	if x != nil {
		if x.xxx_hidden_Algorithm != nil {
			return *x.xxx_hidden_Algorithm
		}
		return ""
	}
	return ""
}

func (x *FlowControlConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *FlowControlConfig) SetMaxOutstandingMessages(v int32) {
	x.xxx_hidden_MaxOutstandingMessages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *FlowControlConfig) SetMaxOutstandingBytes(v int64) {
	x.xxx_hidden_MaxOutstandingBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *FlowControlConfig) SetAlgorithm(v string) {
	x.xxx_hidden_Algorithm = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *FlowControlConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FlowControlConfig) HasMaxOutstandingMessages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FlowControlConfig) HasMaxOutstandingBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FlowControlConfig) HasAlgorithm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FlowControlConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *FlowControlConfig) ClearMaxOutstandingMessages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxOutstandingMessages = 0
}

func (x *FlowControlConfig) ClearMaxOutstandingBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxOutstandingBytes = 0
}

func (x *FlowControlConfig) ClearAlgorithm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Algorithm = nil
}

type FlowControlConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Enable flow control
	Enabled *bool
	// Maximum outstanding messages
	MaxOutstandingMessages *int32
	// Maximum outstanding bytes
	MaxOutstandingBytes *int64
	// Flow control algorithm (token_bucket, leaky_bucket, sliding_window)
	Algorithm *string
}

func (b0 FlowControlConfig_builder) Build() *FlowControlConfig {
	m0 := &FlowControlConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.MaxOutstandingMessages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_MaxOutstandingMessages = *b.MaxOutstandingMessages
	}
	if b.MaxOutstandingBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_MaxOutstandingBytes = *b.MaxOutstandingBytes
	}
	if b.Algorithm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Algorithm = b.Algorithm
	}
	return m0
}

var File_pkg_queue_proto_stream_messages_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_stream_messages_request_proto_rawDesc = "" +
	"\n" +
	"-pkg/queue/proto/stream_messages_request.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1fpkg/queue/proto/ack_level.proto\x1a!pkg/queue/proto/offset_type.proto\x1a#pkg/queue/proto/stream_config.proto\"\x85\x05\n" +
	"\x15StreamMessagesRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12*\n" +
	"\x11consumer_group_id\x18\x02 \x01(\tR\x0fconsumerGroupId\x12\x1f\n" +
	"\vconsumer_id\x18\x03 \x01(\tR\n" +
	"consumerId\x12C\n" +
	"\roffset_config\x18\x04 \x01(\v2\x1e.gcommon.v1.queue.OffsetConfigR\foffsetConfig\x12!\n" +
	"\fmax_messages\x18\x05 \x01(\x03R\vmaxMessages\x12*\n" +
	"\x11stream_timeout_ms\x18\x06 \x01(\x05R\x0fstreamTimeoutMs\x127\n" +
	"\tack_level\x18\a \x01(\x0e2\x1a.gcommon.v1.queue.AckLevelR\backLevel\x12\x1d\n" +
	"\n" +
	"batch_size\x18\b \x01(\x05R\tbatchSize\x127\n" +
	"\x06filter\x18\t \x01(\v2\x1f.gcommon.v1.queue.MessageFilterR\x06filter\x12)\n" +
	"\x10auto_acknowledge\x18\n" +
	" \x01(\bR\x0fautoAcknowledge\x12$\n" +
	"\x0epause_on_error\x18\v \x01(\bR\fpauseOnError\x12)\n" +
	"\x10include_metadata\x18\f \x01(\bR\x0fincludeMetadata\x12#\n" +
	"\rpartition_ids\x18\r \x03(\x05R\fpartitionIds\x12C\n" +
	"\rstream_config\x18\x0e \x01(\v2\x1e.gcommon.v1.queue.StreamConfigR\fstreamConfig\"\xe2\x01\n" +
	"\fOffsetConfig\x12=\n" +
	"\voffset_type\x18\x01 \x01(\x0e2\x1c.gcommon.v1.queue.OffsetTypeR\n" +
	"offsetType\x12!\n" +
	"\foffset_value\x18\x02 \x01(\x03R\voffsetValue\x12C\n" +
	"\x0fstart_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0estartTimestamp\x12+\n" +
	"\x12reset_on_not_found\x18\x04 \x01(\bR\x0fresetOnNotFound\"\xec\x03\n" +
	"\rMessageFilter\x12Y\n" +
	"\x0eheader_filters\x18\x01 \x03(\v22.gcommon.v1.queue.MessageFilter.HeaderFiltersEntryR\rheaderFilters\x12_\n" +
	"\x10property_filters\x18\x02 \x03(\v24.gcommon.v1.queue.MessageFilter.PropertyFiltersEntryR\x0fpropertyFilters\x12!\n" +
	"\fmin_priority\x18\x03 \x01(\x05R\vminPriority\x12&\n" +
	"\x0fmax_age_seconds\x18\x04 \x01(\x05R\rmaxAgeSeconds\x12!\n" +
	"\fcontent_type\x18\x05 \x01(\tR\vcontentType\x12+\n" +
	"\x11filter_expression\x18\x06 \x01(\tR\x10filterExpression\x1a@\n" +
	"\x12HeaderFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14PropertyFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb9\x01\n" +
	"\x11FlowControlConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x128\n" +
	"\x18max_outstanding_messages\x18\x02 \x01(\x05R\x16maxOutstandingMessages\x122\n" +
	"\x15max_outstanding_bytes\x18\x03 \x01(\x03R\x13maxOutstandingBytes\x12\x1c\n" +
	"\talgorithm\x18\x04 \x01(\tR\talgorithmB\xc7\x01\n" +
	"\x14com.gcommon.v1.queueB\x1aStreamMessagesRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_queue_proto_stream_messages_request_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_queue_proto_stream_messages_request_proto_goTypes = []any{
	(*StreamMessagesRequest)(nil), // 0: gcommon.v1.queue.StreamMessagesRequest
	(*OffsetConfig)(nil),          // 1: gcommon.v1.queue.OffsetConfig
	(*MessageFilter)(nil),         // 2: gcommon.v1.queue.MessageFilter
	(*FlowControlConfig)(nil),     // 3: gcommon.v1.queue.FlowControlConfig
	nil,                           // 4: gcommon.v1.queue.MessageFilter.HeaderFiltersEntry
	nil,                           // 5: gcommon.v1.queue.MessageFilter.PropertyFiltersEntry
	(AckLevel)(0),                 // 6: gcommon.v1.queue.AckLevel
	(*StreamConfig)(nil),          // 7: gcommon.v1.queue.StreamConfig
	(OffsetType)(0),               // 8: gcommon.v1.queue.OffsetType
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_pkg_queue_proto_stream_messages_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.StreamMessagesRequest.offset_config:type_name -> gcommon.v1.queue.OffsetConfig
	6, // 1: gcommon.v1.queue.StreamMessagesRequest.ack_level:type_name -> gcommon.v1.queue.AckLevel
	2, // 2: gcommon.v1.queue.StreamMessagesRequest.filter:type_name -> gcommon.v1.queue.MessageFilter
	7, // 3: gcommon.v1.queue.StreamMessagesRequest.stream_config:type_name -> gcommon.v1.queue.StreamConfig
	8, // 4: gcommon.v1.queue.OffsetConfig.offset_type:type_name -> gcommon.v1.queue.OffsetType
	9, // 5: gcommon.v1.queue.OffsetConfig.start_timestamp:type_name -> google.protobuf.Timestamp
	4, // 6: gcommon.v1.queue.MessageFilter.header_filters:type_name -> gcommon.v1.queue.MessageFilter.HeaderFiltersEntry
	5, // 7: gcommon.v1.queue.MessageFilter.property_filters:type_name -> gcommon.v1.queue.MessageFilter.PropertyFiltersEntry
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_stream_messages_request_proto_init() }
func file_pkg_queue_proto_stream_messages_request_proto_init() {
	if File_pkg_queue_proto_stream_messages_request_proto != nil {
		return
	}
	file_pkg_queue_proto_ack_level_proto_init()
	file_pkg_queue_proto_offset_type_proto_init()
	file_pkg_queue_proto_stream_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_stream_messages_request_proto_rawDesc), len(file_pkg_queue_proto_stream_messages_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_stream_messages_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_stream_messages_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_stream_messages_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_stream_messages_request_proto = out.File
	file_pkg_queue_proto_stream_messages_request_proto_goTypes = nil
	file_pkg_queue_proto_stream_messages_request_proto_depIdxs = nil
}
