// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/stream_messages_request.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StreamMessagesRequest initiates a message stream from a queue or topic
type StreamMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Topic or queue identifier to stream from
	Topic *string `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
	// Consumer group ID for coordinated consumption
	ConsumerGroupId *string `protobuf:"bytes,2,opt,name=consumer_group_id,json=consumerGroupId" json:"consumer_group_id,omitempty"`
	// Individual consumer ID within the group
	ConsumerId *string `protobuf:"bytes,3,opt,name=consumer_id,json=consumerId" json:"consumer_id,omitempty"`
	// Starting offset configuration
	OffsetConfig *OffsetConfig `protobuf:"bytes,4,opt,name=offset_config,json=offsetConfig" json:"offset_config,omitempty"`
	// Maximum number of messages to stream
	MaxMessages *int64 `protobuf:"varint,5,opt,name=max_messages,json=maxMessages" json:"max_messages,omitempty"`
	// Maximum time to keep stream open (milliseconds)
	StreamTimeoutMs *int32 `protobuf:"varint,6,opt,name=stream_timeout_ms,json=streamTimeoutMs" json:"stream_timeout_ms,omitempty"`
	// Acknowledgment level required
	AckLevel *AckLevel `protobuf:"varint,7,opt,name=ack_level,json=ackLevel,enum=gcommon.v1.queue.AckLevel" json:"ack_level,omitempty"`
	// Batch size for message delivery
	BatchSize *int32 `protobuf:"varint,8,opt,name=batch_size,json=batchSize" json:"batch_size,omitempty"`
	// Message filter criteria
	Filter *MessageFilter `protobuf:"bytes,9,opt,name=filter" json:"filter,omitempty"`
	// Auto-acknowledge messages after delivery
	AutoAcknowledge *bool `protobuf:"varint,10,opt,name=auto_acknowledge,json=autoAcknowledge" json:"auto_acknowledge,omitempty"`
	// Pause stream on error
	PauseOnError *bool `protobuf:"varint,11,opt,name=pause_on_error,json=pauseOnError" json:"pause_on_error,omitempty"`
	// Include message metadata in stream
	IncludeMetadata *bool `protobuf:"varint,12,opt,name=include_metadata,json=includeMetadata" json:"include_metadata,omitempty"`
	// Specific partition IDs to stream from (empty = all partitions)
	PartitionIds []int32 `protobuf:"varint,13,rep,packed,name=partition_ids,json=partitionIds" json:"partition_ids,omitempty"`
	// Stream configuration options
	StreamConfig  *StreamConfig `protobuf:"bytes,14,opt,name=stream_config,json=streamConfig" json:"stream_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamMessagesRequest) Reset() {
	*x = StreamMessagesRequest{}
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessagesRequest) ProtoMessage() {}

func (x *StreamMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessagesRequest.ProtoReflect.Descriptor instead.
func (*StreamMessagesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_stream_messages_request_proto_rawDescGZIP(), []int{0}
}

func (x *StreamMessagesRequest) GetTopic() string {
	if x != nil && x.Topic != nil {
		return *x.Topic
	}
	return ""
}

func (x *StreamMessagesRequest) GetConsumerGroupId() string {
	if x != nil && x.ConsumerGroupId != nil {
		return *x.ConsumerGroupId
	}
	return ""
}

func (x *StreamMessagesRequest) GetConsumerId() string {
	if x != nil && x.ConsumerId != nil {
		return *x.ConsumerId
	}
	return ""
}

func (x *StreamMessagesRequest) GetOffsetConfig() *OffsetConfig {
	if x != nil {
		return x.OffsetConfig
	}
	return nil
}

func (x *StreamMessagesRequest) GetMaxMessages() int64 {
	if x != nil && x.MaxMessages != nil {
		return *x.MaxMessages
	}
	return 0
}

func (x *StreamMessagesRequest) GetStreamTimeoutMs() int32 {
	if x != nil && x.StreamTimeoutMs != nil {
		return *x.StreamTimeoutMs
	}
	return 0
}

func (x *StreamMessagesRequest) GetAckLevel() AckLevel {
	if x != nil && x.AckLevel != nil {
		return *x.AckLevel
	}
	return AckLevel_ACK_LEVEL_UNSPECIFIED
}

func (x *StreamMessagesRequest) GetBatchSize() int32 {
	if x != nil && x.BatchSize != nil {
		return *x.BatchSize
	}
	return 0
}

func (x *StreamMessagesRequest) GetFilter() *MessageFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *StreamMessagesRequest) GetAutoAcknowledge() bool {
	if x != nil && x.AutoAcknowledge != nil {
		return *x.AutoAcknowledge
	}
	return false
}

func (x *StreamMessagesRequest) GetPauseOnError() bool {
	if x != nil && x.PauseOnError != nil {
		return *x.PauseOnError
	}
	return false
}

func (x *StreamMessagesRequest) GetIncludeMetadata() bool {
	if x != nil && x.IncludeMetadata != nil {
		return *x.IncludeMetadata
	}
	return false
}

func (x *StreamMessagesRequest) GetPartitionIds() []int32 {
	if x != nil {
		return x.PartitionIds
	}
	return nil
}

func (x *StreamMessagesRequest) GetStreamConfig() *StreamConfig {
	if x != nil {
		return x.StreamConfig
	}
	return nil
}

// Offset configuration for stream starting point
type OffsetConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Offset type (earliest, latest, timestamp, specific)
	OffsetType *OffsetType `protobuf:"varint,1,opt,name=offset_type,json=offsetType,enum=gcommon.v1.queue.OffsetType" json:"offset_type,omitempty"`
	// Specific offset value (when offset_type = specific)
	OffsetValue *int64 `protobuf:"varint,2,opt,name=offset_value,json=offsetValue" json:"offset_value,omitempty"`
	// Timestamp to start from (when offset_type = timestamp)
	StartTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	// Reset to beginning if offset not found
	ResetOnNotFound *bool `protobuf:"varint,4,opt,name=reset_on_not_found,json=resetOnNotFound" json:"reset_on_not_found,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OffsetConfig) Reset() {
	*x = OffsetConfig{}
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffsetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffsetConfig) ProtoMessage() {}

func (x *OffsetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffsetConfig.ProtoReflect.Descriptor instead.
func (*OffsetConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_stream_messages_request_proto_rawDescGZIP(), []int{1}
}

func (x *OffsetConfig) GetOffsetType() OffsetType {
	if x != nil && x.OffsetType != nil {
		return *x.OffsetType
	}
	return OffsetType_OFFSET_TYPE_UNSPECIFIED
}

func (x *OffsetConfig) GetOffsetValue() int64 {
	if x != nil && x.OffsetValue != nil {
		return *x.OffsetValue
	}
	return 0
}

func (x *OffsetConfig) GetStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTimestamp
	}
	return nil
}

func (x *OffsetConfig) GetResetOnNotFound() bool {
	if x != nil && x.ResetOnNotFound != nil {
		return *x.ResetOnNotFound
	}
	return false
}

// Message filtering criteria
type MessageFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filter by message headers
	HeaderFilters map[string]string `protobuf:"bytes,1,rep,name=header_filters,json=headerFilters" json:"header_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Filter by message properties
	PropertyFilters map[string]string `protobuf:"bytes,2,rep,name=property_filters,json=propertyFilters" json:"property_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Minimum message priority
	MinPriority *int32 `protobuf:"varint,3,opt,name=min_priority,json=minPriority" json:"min_priority,omitempty"`
	// Maximum message age (seconds)
	MaxAgeSeconds *int32 `protobuf:"varint,4,opt,name=max_age_seconds,json=maxAgeSeconds" json:"max_age_seconds,omitempty"`
	// Content type filter
	ContentType *string `protobuf:"bytes,5,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	// Custom filter expression
	FilterExpression *string `protobuf:"bytes,6,opt,name=filter_expression,json=filterExpression" json:"filter_expression,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MessageFilter) Reset() {
	*x = MessageFilter{}
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageFilter) ProtoMessage() {}

func (x *MessageFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageFilter.ProtoReflect.Descriptor instead.
func (*MessageFilter) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_stream_messages_request_proto_rawDescGZIP(), []int{2}
}

func (x *MessageFilter) GetHeaderFilters() map[string]string {
	if x != nil {
		return x.HeaderFilters
	}
	return nil
}

func (x *MessageFilter) GetPropertyFilters() map[string]string {
	if x != nil {
		return x.PropertyFilters
	}
	return nil
}

func (x *MessageFilter) GetMinPriority() int32 {
	if x != nil && x.MinPriority != nil {
		return *x.MinPriority
	}
	return 0
}

func (x *MessageFilter) GetMaxAgeSeconds() int32 {
	if x != nil && x.MaxAgeSeconds != nil {
		return *x.MaxAgeSeconds
	}
	return 0
}

func (x *MessageFilter) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

func (x *MessageFilter) GetFilterExpression() string {
	if x != nil && x.FilterExpression != nil {
		return *x.FilterExpression
	}
	return ""
}

// Flow control configuration
type FlowControlConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable flow control
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Maximum outstanding messages
	MaxOutstandingMessages *int32 `protobuf:"varint,2,opt,name=max_outstanding_messages,json=maxOutstandingMessages" json:"max_outstanding_messages,omitempty"`
	// Maximum outstanding bytes
	MaxOutstandingBytes *int64 `protobuf:"varint,3,opt,name=max_outstanding_bytes,json=maxOutstandingBytes" json:"max_outstanding_bytes,omitempty"`
	// Flow control algorithm (token_bucket, leaky_bucket, sliding_window)
	Algorithm     *string `protobuf:"bytes,4,opt,name=algorithm" json:"algorithm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlowControlConfig) Reset() {
	*x = FlowControlConfig{}
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlowControlConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowControlConfig) ProtoMessage() {}

func (x *FlowControlConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_stream_messages_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowControlConfig.ProtoReflect.Descriptor instead.
func (*FlowControlConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_stream_messages_request_proto_rawDescGZIP(), []int{3}
}

func (x *FlowControlConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *FlowControlConfig) GetMaxOutstandingMessages() int32 {
	if x != nil && x.MaxOutstandingMessages != nil {
		return *x.MaxOutstandingMessages
	}
	return 0
}

func (x *FlowControlConfig) GetMaxOutstandingBytes() int64 {
	if x != nil && x.MaxOutstandingBytes != nil {
		return *x.MaxOutstandingBytes
	}
	return 0
}

func (x *FlowControlConfig) GetAlgorithm() string {
	if x != nil && x.Algorithm != nil {
		return *x.Algorithm
	}
	return ""
}

var File_pkg_queue_proto_stream_messages_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_stream_messages_request_proto_rawDesc = "" +
	"\n" +
	"-pkg/queue/proto/stream_messages_request.proto\x12\x10gcommon.v1.queue\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1fpkg/queue/proto/ack_level.proto\x1a!pkg/queue/proto/offset_type.proto\x1a#pkg/queue/proto/stream_config.proto\"\x85\x05\n" +
	"\x15StreamMessagesRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12*\n" +
	"\x11consumer_group_id\x18\x02 \x01(\tR\x0fconsumerGroupId\x12\x1f\n" +
	"\vconsumer_id\x18\x03 \x01(\tR\n" +
	"consumerId\x12C\n" +
	"\roffset_config\x18\x04 \x01(\v2\x1e.gcommon.v1.queue.OffsetConfigR\foffsetConfig\x12!\n" +
	"\fmax_messages\x18\x05 \x01(\x03R\vmaxMessages\x12*\n" +
	"\x11stream_timeout_ms\x18\x06 \x01(\x05R\x0fstreamTimeoutMs\x127\n" +
	"\tack_level\x18\a \x01(\x0e2\x1a.gcommon.v1.queue.AckLevelR\backLevel\x12\x1d\n" +
	"\n" +
	"batch_size\x18\b \x01(\x05R\tbatchSize\x127\n" +
	"\x06filter\x18\t \x01(\v2\x1f.gcommon.v1.queue.MessageFilterR\x06filter\x12)\n" +
	"\x10auto_acknowledge\x18\n" +
	" \x01(\bR\x0fautoAcknowledge\x12$\n" +
	"\x0epause_on_error\x18\v \x01(\bR\fpauseOnError\x12)\n" +
	"\x10include_metadata\x18\f \x01(\bR\x0fincludeMetadata\x12#\n" +
	"\rpartition_ids\x18\r \x03(\x05R\fpartitionIds\x12C\n" +
	"\rstream_config\x18\x0e \x01(\v2\x1e.gcommon.v1.queue.StreamConfigR\fstreamConfig\"\xe2\x01\n" +
	"\fOffsetConfig\x12=\n" +
	"\voffset_type\x18\x01 \x01(\x0e2\x1c.gcommon.v1.queue.OffsetTypeR\n" +
	"offsetType\x12!\n" +
	"\foffset_value\x18\x02 \x01(\x03R\voffsetValue\x12C\n" +
	"\x0fstart_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0estartTimestamp\x12+\n" +
	"\x12reset_on_not_found\x18\x04 \x01(\bR\x0fresetOnNotFound\"\xec\x03\n" +
	"\rMessageFilter\x12Y\n" +
	"\x0eheader_filters\x18\x01 \x03(\v22.gcommon.v1.queue.MessageFilter.HeaderFiltersEntryR\rheaderFilters\x12_\n" +
	"\x10property_filters\x18\x02 \x03(\v24.gcommon.v1.queue.MessageFilter.PropertyFiltersEntryR\x0fpropertyFilters\x12!\n" +
	"\fmin_priority\x18\x03 \x01(\x05R\vminPriority\x12&\n" +
	"\x0fmax_age_seconds\x18\x04 \x01(\x05R\rmaxAgeSeconds\x12!\n" +
	"\fcontent_type\x18\x05 \x01(\tR\vcontentType\x12+\n" +
	"\x11filter_expression\x18\x06 \x01(\tR\x10filterExpression\x1a@\n" +
	"\x12HeaderFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14PropertyFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb9\x01\n" +
	"\x11FlowControlConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x128\n" +
	"\x18max_outstanding_messages\x18\x02 \x01(\x05R\x16maxOutstandingMessages\x122\n" +
	"\x15max_outstanding_bytes\x18\x03 \x01(\x03R\x13maxOutstandingBytes\x12\x1c\n" +
	"\talgorithm\x18\x04 \x01(\tR\talgorithmB\xbf\x01\n" +
	"\x14com.gcommon.v1.queueB\x1aStreamMessagesRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_stream_messages_request_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_stream_messages_request_proto_rawDescData []byte
)

func file_pkg_queue_proto_stream_messages_request_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_stream_messages_request_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_stream_messages_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_stream_messages_request_proto_rawDesc), len(file_pkg_queue_proto_stream_messages_request_proto_rawDesc)))
	})
	return file_pkg_queue_proto_stream_messages_request_proto_rawDescData
}

var file_pkg_queue_proto_stream_messages_request_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_queue_proto_stream_messages_request_proto_goTypes = []any{
	(*StreamMessagesRequest)(nil), // 0: gcommon.v1.queue.StreamMessagesRequest
	(*OffsetConfig)(nil),          // 1: gcommon.v1.queue.OffsetConfig
	(*MessageFilter)(nil),         // 2: gcommon.v1.queue.MessageFilter
	(*FlowControlConfig)(nil),     // 3: gcommon.v1.queue.FlowControlConfig
	nil,                           // 4: gcommon.v1.queue.MessageFilter.HeaderFiltersEntry
	nil,                           // 5: gcommon.v1.queue.MessageFilter.PropertyFiltersEntry
	(AckLevel)(0),                 // 6: gcommon.v1.queue.AckLevel
	(*StreamConfig)(nil),          // 7: gcommon.v1.queue.StreamConfig
	(OffsetType)(0),               // 8: gcommon.v1.queue.OffsetType
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_pkg_queue_proto_stream_messages_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.StreamMessagesRequest.offset_config:type_name -> gcommon.v1.queue.OffsetConfig
	6, // 1: gcommon.v1.queue.StreamMessagesRequest.ack_level:type_name -> gcommon.v1.queue.AckLevel
	2, // 2: gcommon.v1.queue.StreamMessagesRequest.filter:type_name -> gcommon.v1.queue.MessageFilter
	7, // 3: gcommon.v1.queue.StreamMessagesRequest.stream_config:type_name -> gcommon.v1.queue.StreamConfig
	8, // 4: gcommon.v1.queue.OffsetConfig.offset_type:type_name -> gcommon.v1.queue.OffsetType
	9, // 5: gcommon.v1.queue.OffsetConfig.start_timestamp:type_name -> google.protobuf.Timestamp
	4, // 6: gcommon.v1.queue.MessageFilter.header_filters:type_name -> gcommon.v1.queue.MessageFilter.HeaderFiltersEntry
	5, // 7: gcommon.v1.queue.MessageFilter.property_filters:type_name -> gcommon.v1.queue.MessageFilter.PropertyFiltersEntry
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_stream_messages_request_proto_init() }
func file_pkg_queue_proto_stream_messages_request_proto_init() {
	if File_pkg_queue_proto_stream_messages_request_proto != nil {
		return
	}
	file_pkg_queue_proto_ack_level_proto_init()
	file_pkg_queue_proto_offset_type_proto_init()
	file_pkg_queue_proto_stream_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_stream_messages_request_proto_rawDesc), len(file_pkg_queue_proto_stream_messages_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_stream_messages_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_stream_messages_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_stream_messages_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_stream_messages_request_proto = out.File
	file_pkg_queue_proto_stream_messages_request_proto_goTypes = nil
	file_pkg_queue_proto_stream_messages_request_proto_depIdxs = nil
}
