// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/delete_request.proto

package proto

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Request to delete a specific message from a queue.
type DeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the queue containing the message
	QueueName *string `protobuf:"bytes,1,opt,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	// Unique identifier of the message to delete
	MessageId *string `protobuf:"bytes,2,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	// Acknowledgment token (if message was previously consumed)
	AckToken *string `protobuf:"bytes,3,opt,name=ack_token,json=ackToken" json:"ack_token,omitempty"`
	// Whether to force deletion even if message is locked
	Force *bool `protobuf:"varint,4,opt,name=force" json:"force,omitempty"`
	// Reason for deletion
	Reason *string `protobuf:"bytes,5,opt,name=reason" json:"reason,omitempty"`
	// Delete criteria (alternative to message_id)
	Criteria *DeleteCriteria `protobuf:"bytes,6,opt,name=criteria" json:"criteria,omitempty"`
	// Request metadata for tracing and correlation
	Metadata      *proto.RequestMetadata `protobuf:"bytes,100,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_pkg_queue_proto_delete_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_delete_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_delete_request_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteRequest) GetQueueName() string {
	if x != nil && x.QueueName != nil {
		return *x.QueueName
	}
	return ""
}

func (x *DeleteRequest) GetMessageId() string {
	if x != nil && x.MessageId != nil {
		return *x.MessageId
	}
	return ""
}

func (x *DeleteRequest) GetAckToken() string {
	if x != nil && x.AckToken != nil {
		return *x.AckToken
	}
	return ""
}

func (x *DeleteRequest) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

func (x *DeleteRequest) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *DeleteRequest) GetCriteria() *DeleteCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *DeleteRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// *
// Criteria for deleting messages based on conditions.
type DeleteCriteria struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Delete messages older than this timestamp
	OlderThanTimestamp *int64 `protobuf:"varint,1,opt,name=older_than_timestamp,json=olderThanTimestamp" json:"older_than_timestamp,omitempty"`
	// Delete messages with specific headers
	HeaderFilters map[string]string `protobuf:"bytes,2,rep,name=header_filters,json=headerFilters" json:"header_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Delete messages with specific priority
	Priority *int32 `protobuf:"varint,3,opt,name=priority" json:"priority,omitempty"`
	// Delete messages with specific correlation ID
	CorrelationId *string `protobuf:"bytes,4,opt,name=correlation_id,json=correlationId" json:"correlation_id,omitempty"`
	// Maximum number of messages to delete
	MaxMessages *int32 `protobuf:"varint,5,opt,name=max_messages,json=maxMessages" json:"max_messages,omitempty"`
	// Delete messages in specific state
	State         *MessageState `protobuf:"varint,6,opt,name=state,enum=gcommon.v1.queue.MessageState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCriteria) Reset() {
	*x = DeleteCriteria{}
	mi := &file_pkg_queue_proto_delete_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCriteria) ProtoMessage() {}

func (x *DeleteCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_delete_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCriteria.ProtoReflect.Descriptor instead.
func (*DeleteCriteria) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_delete_request_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteCriteria) GetOlderThanTimestamp() int64 {
	if x != nil && x.OlderThanTimestamp != nil {
		return *x.OlderThanTimestamp
	}
	return 0
}

func (x *DeleteCriteria) GetHeaderFilters() map[string]string {
	if x != nil {
		return x.HeaderFilters
	}
	return nil
}

func (x *DeleteCriteria) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *DeleteCriteria) GetCorrelationId() string {
	if x != nil && x.CorrelationId != nil {
		return *x.CorrelationId
	}
	return ""
}

func (x *DeleteCriteria) GetMaxMessages() int32 {
	if x != nil && x.MaxMessages != nil {
		return *x.MaxMessages
	}
	return 0
}

func (x *DeleteCriteria) GetState() MessageState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return MessageState_MESSAGE_STATE_UNSPECIFIED
}

var File_pkg_queue_proto_delete_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_delete_request_proto_rawDesc = "" +
	"\n" +
	"$pkg/queue/proto/delete_request.proto\x12\x10gcommon.v1.queue\x1a'pkg/common/proto/request_metadata.proto\x1a#pkg/queue/proto/message_state.proto\"\x96\x02\n" +
	"\rDeleteRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12\x1b\n" +
	"\tack_token\x18\x03 \x01(\tR\backToken\x12\x14\n" +
	"\x05force\x18\x04 \x01(\bR\x05force\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12<\n" +
	"\bcriteria\x18\x06 \x01(\v2 .gcommon.v1.queue.DeleteCriteriaR\bcriteria\x12>\n" +
	"\bmetadata\x18d \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\"\xfc\x02\n" +
	"\x0eDeleteCriteria\x120\n" +
	"\x14older_than_timestamp\x18\x01 \x01(\x03R\x12olderThanTimestamp\x12Z\n" +
	"\x0eheader_filters\x18\x02 \x03(\v23.gcommon.v1.queue.DeleteCriteria.HeaderFiltersEntryR\rheaderFilters\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\x05R\bpriority\x12%\n" +
	"\x0ecorrelation_id\x18\x04 \x01(\tR\rcorrelationId\x12!\n" +
	"\fmax_messages\x18\x05 \x01(\x05R\vmaxMessages\x124\n" +
	"\x05state\x18\x06 \x01(\x0e2\x1e.gcommon.v1.queue.MessageStateR\x05state\x1a@\n" +
	"\x12HeaderFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xb7\x01\n" +
	"\x14com.gcommon.v1.queueB\x12DeleteRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_delete_request_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_delete_request_proto_rawDescData []byte
)

func file_pkg_queue_proto_delete_request_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_delete_request_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_delete_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_delete_request_proto_rawDesc), len(file_pkg_queue_proto_delete_request_proto_rawDesc)))
	})
	return file_pkg_queue_proto_delete_request_proto_rawDescData
}

var file_pkg_queue_proto_delete_request_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_queue_proto_delete_request_proto_goTypes = []any{
	(*DeleteRequest)(nil),         // 0: gcommon.v1.queue.DeleteRequest
	(*DeleteCriteria)(nil),        // 1: gcommon.v1.queue.DeleteCriteria
	nil,                           // 2: gcommon.v1.queue.DeleteCriteria.HeaderFiltersEntry
	(*proto.RequestMetadata)(nil), // 3: gcommon.v1.common.RequestMetadata
	(MessageState)(0),             // 4: gcommon.v1.queue.MessageState
}
var file_pkg_queue_proto_delete_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.DeleteRequest.criteria:type_name -> gcommon.v1.queue.DeleteCriteria
	3, // 1: gcommon.v1.queue.DeleteRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	2, // 2: gcommon.v1.queue.DeleteCriteria.header_filters:type_name -> gcommon.v1.queue.DeleteCriteria.HeaderFiltersEntry
	4, // 3: gcommon.v1.queue.DeleteCriteria.state:type_name -> gcommon.v1.queue.MessageState
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_delete_request_proto_init() }
func file_pkg_queue_proto_delete_request_proto_init() {
	if File_pkg_queue_proto_delete_request_proto != nil {
		return
	}
	file_pkg_queue_proto_message_state_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_delete_request_proto_rawDesc), len(file_pkg_queue_proto_delete_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_delete_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_delete_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_delete_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_delete_request_proto = out.File
	file_pkg_queue_proto_delete_request_proto_goTypes = nil
	file_pkg_queue_proto_delete_request_proto_depIdxs = nil
}
