// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/get_subscription_info_response.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Response message for subscription information retrieval.
type GetSubscriptionInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the subscription
	SubscriptionId *string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId" json:"subscription_id,omitempty"`
	// Name of the subscription
	SubscriptionName *string `protobuf:"bytes,2,opt,name=subscription_name,json=subscriptionName" json:"subscription_name,omitempty"`
	// Topic this subscription is bound to
	TopicName *string `protobuf:"bytes,3,opt,name=topic_name,json=topicName" json:"topic_name,omitempty"`
	// Current state of the subscription
	State *string `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	// Consumer group associated with this subscription
	ConsumerGroup *string `protobuf:"bytes,5,opt,name=consumer_group,json=consumerGroup" json:"consumer_group,omitempty"`
	// Current message offset position
	CurrentOffset *uint64 `protobuf:"varint,6,opt,name=current_offset,json=currentOffset" json:"current_offset,omitempty"`
	// Latest available message offset
	LatestOffset *uint64 `protobuf:"varint,7,opt,name=latest_offset,json=latestOffset" json:"latest_offset,omitempty"`
	// Number of unacknowledged messages
	UnackedCount *uint64 `protobuf:"varint,8,opt,name=unacked_count,json=unackedCount" json:"unacked_count,omitempty"`
	// Subscription creation timestamp
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last activity timestamp
	LastActivity *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_activity,json=lastActivity" json:"last_activity,omitempty"`
	// Number of active consumers
	ActiveConsumers *uint32 `protobuf:"varint,11,opt,name=active_consumers,json=activeConsumers" json:"active_consumers,omitempty"`
	// Total messages consumed
	TotalConsumed *uint64 `protobuf:"varint,12,opt,name=total_consumed,json=totalConsumed" json:"total_consumed,omitempty"`
	// Message consumption rate (messages per second)
	ConsumptionRate *float64 `protobuf:"fixed64,13,opt,name=consumption_rate,json=consumptionRate" json:"consumption_rate,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetSubscriptionInfoResponse) Reset() {
	*x = GetSubscriptionInfoResponse{}
	mi := &file_pkg_queue_proto_get_subscription_info_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionInfoResponse) ProtoMessage() {}

func (x *GetSubscriptionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_get_subscription_info_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionInfoResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_get_subscription_info_response_proto_rawDescGZIP(), []int{0}
}

func (x *GetSubscriptionInfoResponse) GetSubscriptionId() string {
	if x != nil && x.SubscriptionId != nil {
		return *x.SubscriptionId
	}
	return ""
}

func (x *GetSubscriptionInfoResponse) GetSubscriptionName() string {
	if x != nil && x.SubscriptionName != nil {
		return *x.SubscriptionName
	}
	return ""
}

func (x *GetSubscriptionInfoResponse) GetTopicName() string {
	if x != nil && x.TopicName != nil {
		return *x.TopicName
	}
	return ""
}

func (x *GetSubscriptionInfoResponse) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *GetSubscriptionInfoResponse) GetConsumerGroup() string {
	if x != nil && x.ConsumerGroup != nil {
		return *x.ConsumerGroup
	}
	return ""
}

func (x *GetSubscriptionInfoResponse) GetCurrentOffset() uint64 {
	if x != nil && x.CurrentOffset != nil {
		return *x.CurrentOffset
	}
	return 0
}

func (x *GetSubscriptionInfoResponse) GetLatestOffset() uint64 {
	if x != nil && x.LatestOffset != nil {
		return *x.LatestOffset
	}
	return 0
}

func (x *GetSubscriptionInfoResponse) GetUnackedCount() uint64 {
	if x != nil && x.UnackedCount != nil {
		return *x.UnackedCount
	}
	return 0
}

func (x *GetSubscriptionInfoResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetSubscriptionInfoResponse) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

func (x *GetSubscriptionInfoResponse) GetActiveConsumers() uint32 {
	if x != nil && x.ActiveConsumers != nil {
		return *x.ActiveConsumers
	}
	return 0
}

func (x *GetSubscriptionInfoResponse) GetTotalConsumed() uint64 {
	if x != nil && x.TotalConsumed != nil {
		return *x.TotalConsumed
	}
	return 0
}

func (x *GetSubscriptionInfoResponse) GetConsumptionRate() float64 {
	if x != nil && x.ConsumptionRate != nil {
		return *x.ConsumptionRate
	}
	return 0
}

var File_pkg_queue_proto_get_subscription_info_response_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_get_subscription_info_response_proto_rawDesc = "" +
	"\n" +
	"4pkg/queue/proto/get_subscription_info_response.proto\x12\x10gcommon.v1.queue\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb9\x04\n" +
	"\x1bGetSubscriptionInfoResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12+\n" +
	"\x11subscription_name\x18\x02 \x01(\tR\x10subscriptionName\x12\x1d\n" +
	"\n" +
	"topic_name\x18\x03 \x01(\tR\ttopicName\x12\x14\n" +
	"\x05state\x18\x04 \x01(\tR\x05state\x12%\n" +
	"\x0econsumer_group\x18\x05 \x01(\tR\rconsumerGroup\x12%\n" +
	"\x0ecurrent_offset\x18\x06 \x01(\x04R\rcurrentOffset\x12#\n" +
	"\rlatest_offset\x18\a \x01(\x04R\flatestOffset\x12#\n" +
	"\runacked_count\x18\b \x01(\x04R\funackedCount\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12?\n" +
	"\rlast_activity\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\flastActivity\x12)\n" +
	"\x10active_consumers\x18\v \x01(\rR\x0factiveConsumers\x12%\n" +
	"\x0etotal_consumed\x18\f \x01(\x04R\rtotalConsumed\x12)\n" +
	"\x10consumption_rate\x18\r \x01(\x01R\x0fconsumptionRateB\xc5\x01\n" +
	"\x14com.gcommon.v1.queueB GetSubscriptionInfoResponseProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_get_subscription_info_response_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_get_subscription_info_response_proto_rawDescData []byte
)

func file_pkg_queue_proto_get_subscription_info_response_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_get_subscription_info_response_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_get_subscription_info_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_get_subscription_info_response_proto_rawDesc), len(file_pkg_queue_proto_get_subscription_info_response_proto_rawDesc)))
	})
	return file_pkg_queue_proto_get_subscription_info_response_proto_rawDescData
}

var file_pkg_queue_proto_get_subscription_info_response_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_get_subscription_info_response_proto_goTypes = []any{
	(*GetSubscriptionInfoResponse)(nil), // 0: gcommon.v1.queue.GetSubscriptionInfoResponse
	(*timestamppb.Timestamp)(nil),       // 1: google.protobuf.Timestamp
}
var file_pkg_queue_proto_get_subscription_info_response_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.GetSubscriptionInfoResponse.created_at:type_name -> google.protobuf.Timestamp
	1, // 1: gcommon.v1.queue.GetSubscriptionInfoResponse.last_activity:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_get_subscription_info_response_proto_init() }
func file_pkg_queue_proto_get_subscription_info_response_proto_init() {
	if File_pkg_queue_proto_get_subscription_info_response_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_get_subscription_info_response_proto_rawDesc), len(file_pkg_queue_proto_get_subscription_info_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_get_subscription_info_response_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_get_subscription_info_response_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_get_subscription_info_response_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_get_subscription_info_response_proto = out.File
	file_pkg_queue_proto_get_subscription_info_response_proto_goTypes = nil
	file_pkg_queue_proto_get_subscription_info_response_proto_depIdxs = nil
}
