// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/get_topic_info_response.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetTopicInfoResponse returns detailed information about a topic
type GetTopicInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Topic identifier
	TopicId *string `protobuf:"bytes,1,opt,name=topic_id,json=topicId" json:"topic_id,omitempty"`
	// Topic name
	TopicName *string `protobuf:"bytes,2,opt,name=topic_name,json=topicName" json:"topic_name,omitempty"`
	// Topic description
	Description *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// Topic creation timestamp
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last modification timestamp
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	// Topic statistics
	Stats *TopicStats `protobuf:"bytes,6,opt,name=stats" json:"stats,omitempty"`
	// Partition information
	Partitions []*PartitionInfo `protobuf:"bytes,7,rep,name=partitions" json:"partitions,omitempty"`
	// Topic configuration
	Config *TopicConfiguration `protobuf:"bytes,8,opt,name=config" json:"config,omitempty"`
	// Topic state (active, paused, deleted)
	State *string `protobuf:"bytes,9,opt,name=state" json:"state,omitempty"`
	// Access permissions for the requesting user
	Permissions *TopicPermissions `protobuf:"bytes,10,opt,name=permissions" json:"permissions,omitempty"`
	// Topic metadata
	Metadata map[string]string `protobuf:"bytes,11,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Topic tags for categorization
	Tags []string `protobuf:"bytes,12,rep,name=tags" json:"tags,omitempty"`
	// Owner information
	Owner *OwnerInfo `protobuf:"bytes,13,opt,name=owner" json:"owner,omitempty"`
	// Retention policy details
	Retention     *RetentionInfo `protobuf:"bytes,14,opt,name=retention" json:"retention,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTopicInfoResponse) Reset() {
	*x = GetTopicInfoResponse{}
	mi := &file_pkg_queue_proto_get_topic_info_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopicInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicInfoResponse) ProtoMessage() {}

func (x *GetTopicInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_get_topic_info_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicInfoResponse.ProtoReflect.Descriptor instead.
func (*GetTopicInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_get_topic_info_response_proto_rawDescGZIP(), []int{0}
}

func (x *GetTopicInfoResponse) GetTopicId() string {
	if x != nil && x.TopicId != nil {
		return *x.TopicId
	}
	return ""
}

func (x *GetTopicInfoResponse) GetTopicName() string {
	if x != nil && x.TopicName != nil {
		return *x.TopicName
	}
	return ""
}

func (x *GetTopicInfoResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetTopicInfoResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetTopicInfoResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetTopicInfoResponse) GetStats() *TopicStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetTopicInfoResponse) GetPartitions() []*PartitionInfo {
	if x != nil {
		return x.Partitions
	}
	return nil
}

func (x *GetTopicInfoResponse) GetConfig() *TopicConfiguration {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetTopicInfoResponse) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *GetTopicInfoResponse) GetPermissions() *TopicPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *GetTopicInfoResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetTopicInfoResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetTopicInfoResponse) GetOwner() *OwnerInfo {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *GetTopicInfoResponse) GetRetention() *RetentionInfo {
	if x != nil {
		return x.Retention
	}
	return nil
}

// Topic configuration details
type TopicConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of partitions
	PartitionCount *int32 `protobuf:"varint,1,opt,name=partition_count,json=partitionCount" json:"partition_count,omitempty"`
	// Replication factor
	ReplicationFactor *int32 `protobuf:"varint,2,opt,name=replication_factor,json=replicationFactor" json:"replication_factor,omitempty"`
	// Message retention period (seconds)
	RetentionPeriodSeconds *int64 `protobuf:"varint,3,opt,name=retention_period_seconds,json=retentionPeriodSeconds" json:"retention_period_seconds,omitempty"`
	// Maximum message size (bytes)
	MaxMessageSizeBytes *int64 `protobuf:"varint,4,opt,name=max_message_size_bytes,json=maxMessageSizeBytes" json:"max_message_size_bytes,omitempty"`
	// Compression enabled
	CompressionEnabled *bool `protobuf:"varint,5,opt,name=compression_enabled,json=compressionEnabled" json:"compression_enabled,omitempty"`
	// Compression algorithm
	CompressionAlgorithm *string `protobuf:"bytes,6,opt,name=compression_algorithm,json=compressionAlgorithm" json:"compression_algorithm,omitempty"`
	// Encryption enabled
	EncryptionEnabled *bool `protobuf:"varint,7,opt,name=encryption_enabled,json=encryptionEnabled" json:"encryption_enabled,omitempty"`
	// Cleanup policy (delete, compact)
	CleanupPolicy *string `protobuf:"bytes,8,opt,name=cleanup_policy,json=cleanupPolicy" json:"cleanup_policy,omitempty"`
	// Minimum in-sync replicas
	MinInsyncReplicas *int32 `protobuf:"varint,9,opt,name=min_insync_replicas,json=minInsyncReplicas" json:"min_insync_replicas,omitempty"`
	// Segment size (bytes)
	SegmentSizeBytes *int64 `protobuf:"varint,10,opt,name=segment_size_bytes,json=segmentSizeBytes" json:"segment_size_bytes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TopicConfiguration) Reset() {
	*x = TopicConfiguration{}
	mi := &file_pkg_queue_proto_get_topic_info_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicConfiguration) ProtoMessage() {}

func (x *TopicConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_get_topic_info_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicConfiguration.ProtoReflect.Descriptor instead.
func (*TopicConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_get_topic_info_response_proto_rawDescGZIP(), []int{1}
}

func (x *TopicConfiguration) GetPartitionCount() int32 {
	if x != nil && x.PartitionCount != nil {
		return *x.PartitionCount
	}
	return 0
}

func (x *TopicConfiguration) GetReplicationFactor() int32 {
	if x != nil && x.ReplicationFactor != nil {
		return *x.ReplicationFactor
	}
	return 0
}

func (x *TopicConfiguration) GetRetentionPeriodSeconds() int64 {
	if x != nil && x.RetentionPeriodSeconds != nil {
		return *x.RetentionPeriodSeconds
	}
	return 0
}

func (x *TopicConfiguration) GetMaxMessageSizeBytes() int64 {
	if x != nil && x.MaxMessageSizeBytes != nil {
		return *x.MaxMessageSizeBytes
	}
	return 0
}

func (x *TopicConfiguration) GetCompressionEnabled() bool {
	if x != nil && x.CompressionEnabled != nil {
		return *x.CompressionEnabled
	}
	return false
}

func (x *TopicConfiguration) GetCompressionAlgorithm() string {
	if x != nil && x.CompressionAlgorithm != nil {
		return *x.CompressionAlgorithm
	}
	return ""
}

func (x *TopicConfiguration) GetEncryptionEnabled() bool {
	if x != nil && x.EncryptionEnabled != nil {
		return *x.EncryptionEnabled
	}
	return false
}

func (x *TopicConfiguration) GetCleanupPolicy() string {
	if x != nil && x.CleanupPolicy != nil {
		return *x.CleanupPolicy
	}
	return ""
}

func (x *TopicConfiguration) GetMinInsyncReplicas() int32 {
	if x != nil && x.MinInsyncReplicas != nil {
		return *x.MinInsyncReplicas
	}
	return 0
}

func (x *TopicConfiguration) GetSegmentSizeBytes() int64 {
	if x != nil && x.SegmentSizeBytes != nil {
		return *x.SegmentSizeBytes
	}
	return 0
}

// Topic access permissions
type TopicPermissions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Can read messages from topic
	CanRead *bool `protobuf:"varint,1,opt,name=can_read,json=canRead" json:"can_read,omitempty"`
	// Can write messages to topic
	CanWrite *bool `protobuf:"varint,2,opt,name=can_write,json=canWrite" json:"can_write,omitempty"`
	// Can modify topic configuration
	CanConfigure *bool `protobuf:"varint,3,opt,name=can_configure,json=canConfigure" json:"can_configure,omitempty"`
	// Can delete the topic
	CanDelete *bool `protobuf:"varint,4,opt,name=can_delete,json=canDelete" json:"can_delete,omitempty"`
	// Can manage topic permissions
	CanManagePermissions *bool `protobuf:"varint,5,opt,name=can_manage_permissions,json=canManagePermissions" json:"can_manage_permissions,omitempty"`
	// Can view topic statistics
	CanViewStats  *bool `protobuf:"varint,6,opt,name=can_view_stats,json=canViewStats" json:"can_view_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicPermissions) Reset() {
	*x = TopicPermissions{}
	mi := &file_pkg_queue_proto_get_topic_info_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicPermissions) ProtoMessage() {}

func (x *TopicPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_get_topic_info_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicPermissions.ProtoReflect.Descriptor instead.
func (*TopicPermissions) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_get_topic_info_response_proto_rawDescGZIP(), []int{2}
}

func (x *TopicPermissions) GetCanRead() bool {
	if x != nil && x.CanRead != nil {
		return *x.CanRead
	}
	return false
}

func (x *TopicPermissions) GetCanWrite() bool {
	if x != nil && x.CanWrite != nil {
		return *x.CanWrite
	}
	return false
}

func (x *TopicPermissions) GetCanConfigure() bool {
	if x != nil && x.CanConfigure != nil {
		return *x.CanConfigure
	}
	return false
}

func (x *TopicPermissions) GetCanDelete() bool {
	if x != nil && x.CanDelete != nil {
		return *x.CanDelete
	}
	return false
}

func (x *TopicPermissions) GetCanManagePermissions() bool {
	if x != nil && x.CanManagePermissions != nil {
		return *x.CanManagePermissions
	}
	return false
}

func (x *TopicPermissions) GetCanViewStats() bool {
	if x != nil && x.CanViewStats != nil {
		return *x.CanViewStats
	}
	return false
}

// Topic owner information
type OwnerInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Owner user ID
	UserId *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// Owner username
	Username *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// Owner email
	Email *string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	// Organization/team
	Organization *string `protobuf:"bytes,4,opt,name=organization" json:"organization,omitempty"`
	// Ownership timestamp
	OwnedSince    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=owned_since,json=ownedSince" json:"owned_since,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OwnerInfo) Reset() {
	*x = OwnerInfo{}
	mi := &file_pkg_queue_proto_get_topic_info_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OwnerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerInfo) ProtoMessage() {}

func (x *OwnerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_get_topic_info_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerInfo.ProtoReflect.Descriptor instead.
func (*OwnerInfo) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_get_topic_info_response_proto_rawDescGZIP(), []int{3}
}

func (x *OwnerInfo) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *OwnerInfo) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *OwnerInfo) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *OwnerInfo) GetOrganization() string {
	if x != nil && x.Organization != nil {
		return *x.Organization
	}
	return ""
}

func (x *OwnerInfo) GetOwnedSince() *timestamppb.Timestamp {
	if x != nil {
		return x.OwnedSince
	}
	return nil
}

// Topic retention information
type RetentionInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Current retention policy
	RetentionPolicy *string `protobuf:"bytes,1,opt,name=retention_policy,json=retentionPolicy" json:"retention_policy,omitempty"`
	// Retention period (seconds)
	RetentionSeconds *int64 `protobuf:"varint,2,opt,name=retention_seconds,json=retentionSeconds" json:"retention_seconds,omitempty"`
	// Size-based retention limit (bytes)
	RetentionBytes *int64 `protobuf:"varint,3,opt,name=retention_bytes,json=retentionBytes" json:"retention_bytes,omitempty"`
	// Number of messages retained
	RetainedMessages *int64 `protobuf:"varint,4,opt,name=retained_messages,json=retainedMessages" json:"retained_messages,omitempty"`
	// Oldest message timestamp
	OldestMessageTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=oldest_message_time,json=oldestMessageTime" json:"oldest_message_time,omitempty"`
	// Next cleanup scheduled time
	NextCleanupTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=next_cleanup_time,json=nextCleanupTime" json:"next_cleanup_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RetentionInfo) Reset() {
	*x = RetentionInfo{}
	mi := &file_pkg_queue_proto_get_topic_info_response_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetentionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetentionInfo) ProtoMessage() {}

func (x *RetentionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_get_topic_info_response_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetentionInfo.ProtoReflect.Descriptor instead.
func (*RetentionInfo) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_get_topic_info_response_proto_rawDescGZIP(), []int{4}
}

func (x *RetentionInfo) GetRetentionPolicy() string {
	if x != nil && x.RetentionPolicy != nil {
		return *x.RetentionPolicy
	}
	return ""
}

func (x *RetentionInfo) GetRetentionSeconds() int64 {
	if x != nil && x.RetentionSeconds != nil {
		return *x.RetentionSeconds
	}
	return 0
}

func (x *RetentionInfo) GetRetentionBytes() int64 {
	if x != nil && x.RetentionBytes != nil {
		return *x.RetentionBytes
	}
	return 0
}

func (x *RetentionInfo) GetRetainedMessages() int64 {
	if x != nil && x.RetainedMessages != nil {
		return *x.RetainedMessages
	}
	return 0
}

func (x *RetentionInfo) GetOldestMessageTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OldestMessageTime
	}
	return nil
}

func (x *RetentionInfo) GetNextCleanupTime() *timestamppb.Timestamp {
	if x != nil {
		return x.NextCleanupTime
	}
	return nil
}

var File_pkg_queue_proto_get_topic_info_response_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_get_topic_info_response_proto_rawDesc = "" +
	"\n" +
	"-pkg/queue/proto/get_topic_info_response.proto\x12\x10gcommon.v1.queue\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!pkg/queue/proto/topic_stats.proto\x1a$pkg/queue/proto/partition_info.proto\"\x8c\x06\n" +
	"\x14GetTopicInfoResponse\x12\x19\n" +
	"\btopic_id\x18\x01 \x01(\tR\atopicId\x12\x1d\n" +
	"\n" +
	"topic_name\x18\x02 \x01(\tR\ttopicName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x122\n" +
	"\x05stats\x18\x06 \x01(\v2\x1c.gcommon.v1.queue.TopicStatsR\x05stats\x12?\n" +
	"\n" +
	"partitions\x18\a \x03(\v2\x1f.gcommon.v1.queue.PartitionInfoR\n" +
	"partitions\x12<\n" +
	"\x06config\x18\b \x01(\v2$.gcommon.v1.queue.TopicConfigurationR\x06config\x12\x14\n" +
	"\x05state\x18\t \x01(\tR\x05state\x12D\n" +
	"\vpermissions\x18\n" +
	" \x01(\v2\".gcommon.v1.queue.TopicPermissionsR\vpermissions\x12P\n" +
	"\bmetadata\x18\v \x03(\v24.gcommon.v1.queue.GetTopicInfoResponse.MetadataEntryR\bmetadata\x12\x12\n" +
	"\x04tags\x18\f \x03(\tR\x04tags\x121\n" +
	"\x05owner\x18\r \x01(\v2\x1b.gcommon.v1.queue.OwnerInfoR\x05owner\x12=\n" +
	"\tretention\x18\x0e \x01(\v2\x1f.gcommon.v1.queue.RetentionInfoR\tretention\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf5\x03\n" +
	"\x12TopicConfiguration\x12'\n" +
	"\x0fpartition_count\x18\x01 \x01(\x05R\x0epartitionCount\x12-\n" +
	"\x12replication_factor\x18\x02 \x01(\x05R\x11replicationFactor\x128\n" +
	"\x18retention_period_seconds\x18\x03 \x01(\x03R\x16retentionPeriodSeconds\x123\n" +
	"\x16max_message_size_bytes\x18\x04 \x01(\x03R\x13maxMessageSizeBytes\x12/\n" +
	"\x13compression_enabled\x18\x05 \x01(\bR\x12compressionEnabled\x123\n" +
	"\x15compression_algorithm\x18\x06 \x01(\tR\x14compressionAlgorithm\x12-\n" +
	"\x12encryption_enabled\x18\a \x01(\bR\x11encryptionEnabled\x12%\n" +
	"\x0ecleanup_policy\x18\b \x01(\tR\rcleanupPolicy\x12.\n" +
	"\x13min_insync_replicas\x18\t \x01(\x05R\x11minInsyncReplicas\x12,\n" +
	"\x12segment_size_bytes\x18\n" +
	" \x01(\x03R\x10segmentSizeBytes\"\xea\x01\n" +
	"\x10TopicPermissions\x12\x19\n" +
	"\bcan_read\x18\x01 \x01(\bR\acanRead\x12\x1b\n" +
	"\tcan_write\x18\x02 \x01(\bR\bcanWrite\x12#\n" +
	"\rcan_configure\x18\x03 \x01(\bR\fcanConfigure\x12\x1d\n" +
	"\n" +
	"can_delete\x18\x04 \x01(\bR\tcanDelete\x124\n" +
	"\x16can_manage_permissions\x18\x05 \x01(\bR\x14canManagePermissions\x12$\n" +
	"\x0ecan_view_stats\x18\x06 \x01(\bR\fcanViewStats\"\xb7\x01\n" +
	"\tOwnerInfo\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\"\n" +
	"\forganization\x18\x04 \x01(\tR\forganization\x12;\n" +
	"\vowned_since\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"ownedSince\"\xd1\x02\n" +
	"\rRetentionInfo\x12)\n" +
	"\x10retention_policy\x18\x01 \x01(\tR\x0fretentionPolicy\x12+\n" +
	"\x11retention_seconds\x18\x02 \x01(\x03R\x10retentionSeconds\x12'\n" +
	"\x0fretention_bytes\x18\x03 \x01(\x03R\x0eretentionBytes\x12+\n" +
	"\x11retained_messages\x18\x04 \x01(\x03R\x10retainedMessages\x12J\n" +
	"\x13oldest_message_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x11oldestMessageTime\x12F\n" +
	"\x11next_cleanup_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0fnextCleanupTimeB\xbe\x01\n" +
	"\x14com.gcommon.v1.queueB\x19GetTopicInfoResponseProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_get_topic_info_response_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_get_topic_info_response_proto_rawDescData []byte
)

func file_pkg_queue_proto_get_topic_info_response_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_get_topic_info_response_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_get_topic_info_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_get_topic_info_response_proto_rawDesc), len(file_pkg_queue_proto_get_topic_info_response_proto_rawDesc)))
	})
	return file_pkg_queue_proto_get_topic_info_response_proto_rawDescData
}

var file_pkg_queue_proto_get_topic_info_response_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_queue_proto_get_topic_info_response_proto_goTypes = []any{
	(*GetTopicInfoResponse)(nil),  // 0: gcommon.v1.queue.GetTopicInfoResponse
	(*TopicConfiguration)(nil),    // 1: gcommon.v1.queue.TopicConfiguration
	(*TopicPermissions)(nil),      // 2: gcommon.v1.queue.TopicPermissions
	(*OwnerInfo)(nil),             // 3: gcommon.v1.queue.OwnerInfo
	(*RetentionInfo)(nil),         // 4: gcommon.v1.queue.RetentionInfo
	nil,                           // 5: gcommon.v1.queue.GetTopicInfoResponse.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*TopicStats)(nil),            // 7: gcommon.v1.queue.TopicStats
	(*PartitionInfo)(nil),         // 8: gcommon.v1.queue.PartitionInfo
}
var file_pkg_queue_proto_get_topic_info_response_proto_depIdxs = []int32{
	6,  // 0: gcommon.v1.queue.GetTopicInfoResponse.created_at:type_name -> google.protobuf.Timestamp
	6,  // 1: gcommon.v1.queue.GetTopicInfoResponse.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 2: gcommon.v1.queue.GetTopicInfoResponse.stats:type_name -> gcommon.v1.queue.TopicStats
	8,  // 3: gcommon.v1.queue.GetTopicInfoResponse.partitions:type_name -> gcommon.v1.queue.PartitionInfo
	1,  // 4: gcommon.v1.queue.GetTopicInfoResponse.config:type_name -> gcommon.v1.queue.TopicConfiguration
	2,  // 5: gcommon.v1.queue.GetTopicInfoResponse.permissions:type_name -> gcommon.v1.queue.TopicPermissions
	5,  // 6: gcommon.v1.queue.GetTopicInfoResponse.metadata:type_name -> gcommon.v1.queue.GetTopicInfoResponse.MetadataEntry
	3,  // 7: gcommon.v1.queue.GetTopicInfoResponse.owner:type_name -> gcommon.v1.queue.OwnerInfo
	4,  // 8: gcommon.v1.queue.GetTopicInfoResponse.retention:type_name -> gcommon.v1.queue.RetentionInfo
	6,  // 9: gcommon.v1.queue.OwnerInfo.owned_since:type_name -> google.protobuf.Timestamp
	6,  // 10: gcommon.v1.queue.RetentionInfo.oldest_message_time:type_name -> google.protobuf.Timestamp
	6,  // 11: gcommon.v1.queue.RetentionInfo.next_cleanup_time:type_name -> google.protobuf.Timestamp
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_get_topic_info_response_proto_init() }
func file_pkg_queue_proto_get_topic_info_response_proto_init() {
	if File_pkg_queue_proto_get_topic_info_response_proto != nil {
		return
	}
	file_pkg_queue_proto_topic_stats_proto_init()
	file_pkg_queue_proto_partition_info_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_get_topic_info_response_proto_rawDesc), len(file_pkg_queue_proto_get_topic_info_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_get_topic_info_response_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_get_topic_info_response_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_get_topic_info_response_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_get_topic_info_response_proto = out.File
	file_pkg_queue_proto_get_topic_info_response_proto_goTypes = nil
	file_pkg_queue_proto_get_topic_info_response_proto_depIdxs = nil
}
