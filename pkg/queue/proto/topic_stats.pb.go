// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/topic_stats.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Statistics information for a topic.
type TopicStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the topic
	TopicName *string `protobuf:"bytes,1,opt,name=topic_name,json=topicName" json:"topic_name,omitempty"`
	// Total number of messages in the topic
	TotalMessages *uint64 `protobuf:"varint,2,opt,name=total_messages,json=totalMessages" json:"total_messages,omitempty"`
	// Total size of all messages in bytes
	TotalSizeBytes *uint64 `protobuf:"varint,3,opt,name=total_size_bytes,json=totalSizeBytes" json:"total_size_bytes,omitempty"`
	// Number of active subscriptions
	SubscriptionCount *uint32 `protobuf:"varint,4,opt,name=subscription_count,json=subscriptionCount" json:"subscription_count,omitempty"`
	// Number of producers
	ProducerCount *uint32 `protobuf:"varint,5,opt,name=producer_count,json=producerCount" json:"producer_count,omitempty"`
	// Messages produced per second
	MessagesPerSecond *float64 `protobuf:"fixed64,6,opt,name=messages_per_second,json=messagesPerSecond" json:"messages_per_second,omitempty"`
	// Bytes produced per second
	BytesPerSecond *float64 `protobuf:"fixed64,7,opt,name=bytes_per_second,json=bytesPerSecond" json:"bytes_per_second,omitempty"`
	// Last message timestamp
	LastMessageTime *uint64 `protobuf:"varint,8,opt,name=last_message_time,json=lastMessageTime" json:"last_message_time,omitempty"`
	// Average message size in bytes
	AverageMessageSize *float64 `protobuf:"fixed64,9,opt,name=average_message_size,json=averageMessageSize" json:"average_message_size,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TopicStats) Reset() {
	*x = TopicStats{}
	mi := &file_pkg_queue_proto_topic_stats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicStats) ProtoMessage() {}

func (x *TopicStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_topic_stats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicStats.ProtoReflect.Descriptor instead.
func (*TopicStats) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_topic_stats_proto_rawDescGZIP(), []int{0}
}

func (x *TopicStats) GetTopicName() string {
	if x != nil && x.TopicName != nil {
		return *x.TopicName
	}
	return ""
}

func (x *TopicStats) GetTotalMessages() uint64 {
	if x != nil && x.TotalMessages != nil {
		return *x.TotalMessages
	}
	return 0
}

func (x *TopicStats) GetTotalSizeBytes() uint64 {
	if x != nil && x.TotalSizeBytes != nil {
		return *x.TotalSizeBytes
	}
	return 0
}

func (x *TopicStats) GetSubscriptionCount() uint32 {
	if x != nil && x.SubscriptionCount != nil {
		return *x.SubscriptionCount
	}
	return 0
}

func (x *TopicStats) GetProducerCount() uint32 {
	if x != nil && x.ProducerCount != nil {
		return *x.ProducerCount
	}
	return 0
}

func (x *TopicStats) GetMessagesPerSecond() float64 {
	if x != nil && x.MessagesPerSecond != nil {
		return *x.MessagesPerSecond
	}
	return 0
}

func (x *TopicStats) GetBytesPerSecond() float64 {
	if x != nil && x.BytesPerSecond != nil {
		return *x.BytesPerSecond
	}
	return 0
}

func (x *TopicStats) GetLastMessageTime() uint64 {
	if x != nil && x.LastMessageTime != nil {
		return *x.LastMessageTime
	}
	return 0
}

func (x *TopicStats) GetAverageMessageSize() float64 {
	if x != nil && x.AverageMessageSize != nil {
		return *x.AverageMessageSize
	}
	return 0
}

var File_pkg_queue_proto_topic_stats_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_topic_stats_proto_rawDesc = "" +
	"\n" +
	"!pkg/queue/proto/topic_stats.proto\x12\x10gcommon.v1.queue\"\x8a\x03\n" +
	"\n" +
	"TopicStats\x12\x1d\n" +
	"\n" +
	"topic_name\x18\x01 \x01(\tR\ttopicName\x12%\n" +
	"\x0etotal_messages\x18\x02 \x01(\x04R\rtotalMessages\x12(\n" +
	"\x10total_size_bytes\x18\x03 \x01(\x04R\x0etotalSizeBytes\x12-\n" +
	"\x12subscription_count\x18\x04 \x01(\rR\x11subscriptionCount\x12%\n" +
	"\x0eproducer_count\x18\x05 \x01(\rR\rproducerCount\x12.\n" +
	"\x13messages_per_second\x18\x06 \x01(\x01R\x11messagesPerSecond\x12(\n" +
	"\x10bytes_per_second\x18\a \x01(\x01R\x0ebytesPerSecond\x12*\n" +
	"\x11last_message_time\x18\b \x01(\x04R\x0flastMessageTime\x120\n" +
	"\x14average_message_size\x18\t \x01(\x01R\x12averageMessageSizeB\xb4\x01\n" +
	"\x14com.gcommon.v1.queueB\x0fTopicStatsProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_topic_stats_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_topic_stats_proto_rawDescData []byte
)

func file_pkg_queue_proto_topic_stats_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_topic_stats_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_topic_stats_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_topic_stats_proto_rawDesc), len(file_pkg_queue_proto_topic_stats_proto_rawDesc)))
	})
	return file_pkg_queue_proto_topic_stats_proto_rawDescData
}

var file_pkg_queue_proto_topic_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_topic_stats_proto_goTypes = []any{
	(*TopicStats)(nil), // 0: gcommon.v1.queue.TopicStats
}
var file_pkg_queue_proto_topic_stats_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_topic_stats_proto_init() }
func file_pkg_queue_proto_topic_stats_proto_init() {
	if File_pkg_queue_proto_topic_stats_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_topic_stats_proto_rawDesc), len(file_pkg_queue_proto_topic_stats_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_topic_stats_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_topic_stats_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_topic_stats_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_topic_stats_proto = out.File
	file_pkg_queue_proto_topic_stats_proto_goTypes = nil
	file_pkg_queue_proto_topic_stats_proto_depIdxs = nil
}
