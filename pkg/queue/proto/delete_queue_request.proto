// file: pkg/queue/proto/requests/delete_queue_request.proto
// file: queue/proto/requests/delete_queue_request.proto
// version: 1.0.0
// guid: 9a0b1c2d-3e4f-5a6b-7c8d-9e0f1a2b3c4d
//
// Request definitions for queue module
//
edition = "2023";

package gcommon.v1.queue;

import "google/protobuf/go_features.proto";
import "pkg/common/proto/request_metadata.proto";
option go_package = "github.com/jdfalk/gcommon/pkg/queue/proto";


option features.(pb.go).api_level = API_OPAQUE;

/**
 * Request to delete a queue and all its messages.
 * This is a destructive operation that cannot be undone.
 */
message DeleteQueueRequest {
  // Name of the queue to delete (required)
  string queue_name = 1;

  // Whether to force deletion even if queue has active consumers
  bool force = 2;

  // Whether to ignore if queue doesn't exist (no error if missing)
  bool if_exists = 3;

  // Whether to purge all messages before deletion
  bool purge_messages = 4;

  // Confirmation token to prevent accidental deletion
  string confirmation_token = 5;

  // Request metadata for tracing and correlation
  gcommon.v1.common.RequestMetadata metadata = 100;
}
// SKELETON_FILE: Compilation temporarily disabled
// This file needs proper implementation
