// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/nack_request.proto

package proto

import (
	proto "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Request to negatively acknowledge (NACK) a message.
// This indicates that the message could not be processed and may need to be requeued.
type NackRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Acknowledgment token received with the message
	AckToken *string `protobuf:"bytes,1,opt,name=ack_token,json=ackToken" json:"ack_token,omitempty"`
	// Whether the message should be requeued for retry
	Requeue *bool `protobuf:"varint,2,opt,name=requeue" json:"requeue,omitempty"`
	// Reason for the negative acknowledgment
	Reason *string `protobuf:"bytes,3,opt,name=reason" json:"reason,omitempty"`
	// Error details if processing failed
	Error *NackError `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	// Delay before requeuing (if requeue is true)
	RequeueDelaySeconds *int64 `protobuf:"varint,5,opt,name=requeue_delay_seconds,json=requeueDelaySeconds" json:"requeue_delay_seconds,omitempty"`
	// Maximum number of retry attempts for this message
	MaxRetries *int32 `protobuf:"varint,6,opt,name=max_retries,json=maxRetries" json:"max_retries,omitempty"`
	// Request metadata for tracing and correlation
	Metadata      *proto.RequestMetadata `protobuf:"bytes,100,opt,name=metadata" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NackRequest) Reset() {
	*x = NackRequest{}
	mi := &file_pkg_queue_proto_nack_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NackRequest) ProtoMessage() {}

func (x *NackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_nack_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NackRequest.ProtoReflect.Descriptor instead.
func (*NackRequest) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_nack_request_proto_rawDescGZIP(), []int{0}
}

func (x *NackRequest) GetAckToken() string {
	if x != nil && x.AckToken != nil {
		return *x.AckToken
	}
	return ""
}

func (x *NackRequest) GetRequeue() bool {
	if x != nil && x.Requeue != nil {
		return *x.Requeue
	}
	return false
}

func (x *NackRequest) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *NackRequest) GetError() *NackError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *NackRequest) GetRequeueDelaySeconds() int64 {
	if x != nil && x.RequeueDelaySeconds != nil {
		return *x.RequeueDelaySeconds
	}
	return 0
}

func (x *NackRequest) GetMaxRetries() int32 {
	if x != nil && x.MaxRetries != nil {
		return *x.MaxRetries
	}
	return 0
}

func (x *NackRequest) GetMetadata() *proto.RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_pkg_queue_proto_nack_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_nack_request_proto_rawDesc = "" +
	"\n" +
	"\"pkg/queue/proto/nack_request.proto\x12\x10gcommon.v1.queue\x1a'pkg/common/proto/request_metadata.proto\x1a pkg/queue/proto/nack_error.proto\"\xa4\x02\n" +
	"\vNackRequest\x12\x1b\n" +
	"\tack_token\x18\x01 \x01(\tR\backToken\x12\x18\n" +
	"\arequeue\x18\x02 \x01(\bR\arequeue\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x121\n" +
	"\x05error\x18\x04 \x01(\v2\x1b.gcommon.v1.queue.NackErrorR\x05error\x122\n" +
	"\x15requeue_delay_seconds\x18\x05 \x01(\x03R\x13requeueDelaySeconds\x12\x1f\n" +
	"\vmax_retries\x18\x06 \x01(\x05R\n" +
	"maxRetries\x12>\n" +
	"\bmetadata\x18d \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadataB\xb5\x01\n" +
	"\x14com.gcommon.v1.queueB\x10NackRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_nack_request_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_nack_request_proto_rawDescData []byte
)

func file_pkg_queue_proto_nack_request_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_nack_request_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_nack_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_nack_request_proto_rawDesc), len(file_pkg_queue_proto_nack_request_proto_rawDesc)))
	})
	return file_pkg_queue_proto_nack_request_proto_rawDescData
}

var file_pkg_queue_proto_nack_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_nack_request_proto_goTypes = []any{
	(*NackRequest)(nil),           // 0: gcommon.v1.queue.NackRequest
	(*NackError)(nil),             // 1: gcommon.v1.queue.NackError
	(*proto.RequestMetadata)(nil), // 2: gcommon.v1.common.RequestMetadata
}
var file_pkg_queue_proto_nack_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.NackRequest.error:type_name -> gcommon.v1.queue.NackError
	2, // 1: gcommon.v1.queue.NackRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_nack_request_proto_init() }
func file_pkg_queue_proto_nack_request_proto_init() {
	if File_pkg_queue_proto_nack_request_proto != nil {
		return
	}
	file_pkg_queue_proto_nack_error_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_nack_request_proto_rawDesc), len(file_pkg_queue_proto_nack_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_nack_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_nack_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_nack_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_nack_request_proto = out.File
	file_pkg_queue_proto_nack_request_proto_goTypes = nil
	file_pkg_queue_proto_nack_request_proto_depIdxs = nil
}
