// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/nack_error.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Error information for NACK operations.
type NackError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Error code
	Code *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	// Error message
	Message *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// Error category
	Category *NackErrorCategory `protobuf:"varint,3,opt,name=category,enum=gcommon.v1.queue.NackErrorCategory" json:"category,omitempty"`
	// Whether the error is retryable
	Retryable *bool `protobuf:"varint,4,opt,name=retryable" json:"retryable,omitempty"`
	// Stack trace or additional details
	Details       *string `protobuf:"bytes,5,opt,name=details" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NackError) Reset() {
	*x = NackError{}
	mi := &file_pkg_queue_proto_nack_error_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NackError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NackError) ProtoMessage() {}

func (x *NackError) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_nack_error_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NackError.ProtoReflect.Descriptor instead.
func (*NackError) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_nack_error_proto_rawDescGZIP(), []int{0}
}

func (x *NackError) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *NackError) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *NackError) GetCategory() NackErrorCategory {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return NackErrorCategory_NACK_ERROR_CATEGORY_UNSPECIFIED
}

func (x *NackError) GetRetryable() bool {
	if x != nil && x.Retryable != nil {
		return *x.Retryable
	}
	return false
}

func (x *NackError) GetDetails() string {
	if x != nil && x.Details != nil {
		return *x.Details
	}
	return ""
}

var File_pkg_queue_proto_nack_error_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_nack_error_proto_rawDesc = "" +
	"\n" +
	" pkg/queue/proto/nack_error.proto\x12\x10gcommon.v1.queue\x1a)pkg/queue/proto/nack_error_category.proto\"\xb2\x01\n" +
	"\tNackError\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12?\n" +
	"\bcategory\x18\x03 \x01(\x0e2#.gcommon.v1.queue.NackErrorCategoryR\bcategory\x12\x1c\n" +
	"\tretryable\x18\x04 \x01(\bR\tretryable\x12\x18\n" +
	"\adetails\x18\x05 \x01(\tR\adetailsB\xb3\x01\n" +
	"\x14com.gcommon.v1.queueB\x0eNackErrorProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_nack_error_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_nack_error_proto_rawDescData []byte
)

func file_pkg_queue_proto_nack_error_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_nack_error_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_nack_error_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_nack_error_proto_rawDesc), len(file_pkg_queue_proto_nack_error_proto_rawDesc)))
	})
	return file_pkg_queue_proto_nack_error_proto_rawDescData
}

var file_pkg_queue_proto_nack_error_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_nack_error_proto_goTypes = []any{
	(*NackError)(nil),      // 0: gcommon.v1.queue.NackError
	(NackErrorCategory)(0), // 1: gcommon.v1.queue.NackErrorCategory
}
var file_pkg_queue_proto_nack_error_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.NackError.category:type_name -> gcommon.v1.queue.NackErrorCategory
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_nack_error_proto_init() }
func file_pkg_queue_proto_nack_error_proto_init() {
	if File_pkg_queue_proto_nack_error_proto != nil {
		return
	}
	file_pkg_queue_proto_nack_error_category_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_nack_error_proto_rawDesc), len(file_pkg_queue_proto_nack_error_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_nack_error_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_nack_error_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_nack_error_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_nack_error_proto = out.File
	file_pkg_queue_proto_nack_error_proto_goTypes = nil
	file_pkg_queue_proto_nack_error_proto_depIdxs = nil
}
