// filepath: pkg/queue/proto/requests/purge_request.proto
// file: queue/proto/requests/purge_request.proto
// version: 1.0.0
// guid: 0a1b2c3d-4e5f-6a7b-8c9d-0e1f2a3b4c5d
//
// Request definitions for queue module
//
edition = "2023";

package gcommon.v1.queue;

import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";
import "pkg/common/proto/request_metadata.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/queue/proto;queuepb";

/**
 * Request to purge (delete) messages from a queue.
 * Can purge all messages or selectively based on criteria.
 */
message PurgeRequest {
  // Name of the queue to purge
  string queue_name = 1;

  // Purge options
  PurgeOptions options = 2;

  // Request metadata for tracing and correlation
  gcommon.v1.common.RequestMetadata metadata = 100;
}

/**
 * Options for purging messages from a queue.
 */
message PurgeOptions {
  // Whether to purge all messages (if true, other filters are ignored)
  bool purge_all = 1;

  // Purge messages older than this timestamp
  google.protobuf.Timestamp older_than = 2;

  // Purge messages with specific headers (all headers must match)
  map<string, string> header_filters = 3;

  // Purge messages with priority below this value
  int32 priority_below = 4;

  // Purge messages with priority above this value
  int32 priority_above = 5;

  // Maximum number of messages to purge (0 = no limit)
  int64 max_messages = 6;

  // Whether to purge only failed/undeliverable messages
  bool only_failed = 7;

  // Whether to purge only expired messages
  bool only_expired = 8;
}
// SKELETON_FILE: Compilation temporarily disabled
// This file needs proper implementation
