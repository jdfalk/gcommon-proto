// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/get_partition_info_request.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetPartitionInfoRequest retrieves information about topic partitions
type GetPartitionInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Topic identifier
	TopicId *string `protobuf:"bytes,1,opt,name=topic_id,json=topicId" json:"topic_id,omitempty"`
	// Specific partition IDs (empty = all partitions)
	PartitionIds []int32 `protobuf:"varint,2,rep,packed,name=partition_ids,json=partitionIds" json:"partition_ids,omitempty"`
	// Include partition statistics
	IncludeStats *bool `protobuf:"varint,3,opt,name=include_stats,json=includeStats" json:"include_stats,omitempty"`
	// Include consumer information
	IncludeConsumers *bool `protobuf:"varint,4,opt,name=include_consumers,json=includeConsumers" json:"include_consumers,omitempty"`
	// Include offset information
	IncludeOffsets *bool `protobuf:"varint,5,opt,name=include_offsets,json=includeOffsets" json:"include_offsets,omitempty"`
	// Include partition health status
	IncludeHealthStatus *bool `protobuf:"varint,6,opt,name=include_health_status,json=includeHealthStatus" json:"include_health_status,omitempty"`
	// Include leader/replica information
	IncludeLeaderInfo *bool `protobuf:"varint,7,opt,name=include_leader_info,json=includeLeaderInfo" json:"include_leader_info,omitempty"`
	// Include partition configuration
	IncludeConfig *bool `protobuf:"varint,8,opt,name=include_config,json=includeConfig" json:"include_config,omitempty"`
	// Time range for historical statistics - references existing TimeRangeFilter from get_queue_info_request.proto
	TimeRange *TimeRangeFilter `protobuf:"bytes,9,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	// Access control context
	AccessToken   *string `protobuf:"bytes,10,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPartitionInfoRequest) Reset() {
	*x = GetPartitionInfoRequest{}
	mi := &file_pkg_queue_proto_get_partition_info_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPartitionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartitionInfoRequest) ProtoMessage() {}

func (x *GetPartitionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_get_partition_info_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartitionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPartitionInfoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_get_partition_info_request_proto_rawDescGZIP(), []int{0}
}

func (x *GetPartitionInfoRequest) GetTopicId() string {
	if x != nil && x.TopicId != nil {
		return *x.TopicId
	}
	return ""
}

func (x *GetPartitionInfoRequest) GetPartitionIds() []int32 {
	if x != nil {
		return x.PartitionIds
	}
	return nil
}

func (x *GetPartitionInfoRequest) GetIncludeStats() bool {
	if x != nil && x.IncludeStats != nil {
		return *x.IncludeStats
	}
	return false
}

func (x *GetPartitionInfoRequest) GetIncludeConsumers() bool {
	if x != nil && x.IncludeConsumers != nil {
		return *x.IncludeConsumers
	}
	return false
}

func (x *GetPartitionInfoRequest) GetIncludeOffsets() bool {
	if x != nil && x.IncludeOffsets != nil {
		return *x.IncludeOffsets
	}
	return false
}

func (x *GetPartitionInfoRequest) GetIncludeHealthStatus() bool {
	if x != nil && x.IncludeHealthStatus != nil {
		return *x.IncludeHealthStatus
	}
	return false
}

func (x *GetPartitionInfoRequest) GetIncludeLeaderInfo() bool {
	if x != nil && x.IncludeLeaderInfo != nil {
		return *x.IncludeLeaderInfo
	}
	return false
}

func (x *GetPartitionInfoRequest) GetIncludeConfig() bool {
	if x != nil && x.IncludeConfig != nil {
		return *x.IncludeConfig
	}
	return false
}

func (x *GetPartitionInfoRequest) GetTimeRange() *TimeRangeFilter {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetPartitionInfoRequest) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

var File_pkg_queue_proto_get_partition_info_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_get_partition_info_request_proto_rawDesc = "" +
	"\n" +
	"0pkg/queue/proto/get_partition_info_request.proto\x12\x10gcommon.v1.queue\x1a,pkg/queue/proto/get_queue_info_request.proto\"\xc4\x03\n" +
	"\x17GetPartitionInfoRequest\x12\x19\n" +
	"\btopic_id\x18\x01 \x01(\tR\atopicId\x12#\n" +
	"\rpartition_ids\x18\x02 \x03(\x05R\fpartitionIds\x12#\n" +
	"\rinclude_stats\x18\x03 \x01(\bR\fincludeStats\x12+\n" +
	"\x11include_consumers\x18\x04 \x01(\bR\x10includeConsumers\x12'\n" +
	"\x0finclude_offsets\x18\x05 \x01(\bR\x0eincludeOffsets\x122\n" +
	"\x15include_health_status\x18\x06 \x01(\bR\x13includeHealthStatus\x12.\n" +
	"\x13include_leader_info\x18\a \x01(\bR\x11includeLeaderInfo\x12%\n" +
	"\x0einclude_config\x18\b \x01(\bR\rincludeConfig\x12@\n" +
	"\n" +
	"time_range\x18\t \x01(\v2!.gcommon.v1.queue.TimeRangeFilterR\ttimeRange\x12!\n" +
	"\faccess_token\x18\n" +
	" \x01(\tR\vaccessTokenB\xc1\x01\n" +
	"\x14com.gcommon.v1.queueB\x1cGetPartitionInfoRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_get_partition_info_request_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_get_partition_info_request_proto_rawDescData []byte
)

func file_pkg_queue_proto_get_partition_info_request_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_get_partition_info_request_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_get_partition_info_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_get_partition_info_request_proto_rawDesc), len(file_pkg_queue_proto_get_partition_info_request_proto_rawDesc)))
	})
	return file_pkg_queue_proto_get_partition_info_request_proto_rawDescData
}

var file_pkg_queue_proto_get_partition_info_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_get_partition_info_request_proto_goTypes = []any{
	(*GetPartitionInfoRequest)(nil), // 0: gcommon.v1.queue.GetPartitionInfoRequest
	(*TimeRangeFilter)(nil),         // 1: gcommon.v1.queue.TimeRangeFilter
}
var file_pkg_queue_proto_get_partition_info_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.GetPartitionInfoRequest.time_range:type_name -> gcommon.v1.queue.TimeRangeFilter
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_get_partition_info_request_proto_init() }
func file_pkg_queue_proto_get_partition_info_request_proto_init() {
	if File_pkg_queue_proto_get_partition_info_request_proto != nil {
		return
	}
	file_pkg_queue_proto_get_queue_info_request_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_get_partition_info_request_proto_rawDesc), len(file_pkg_queue_proto_get_partition_info_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_get_partition_info_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_get_partition_info_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_get_partition_info_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_get_partition_info_request_proto = out.File
	file_pkg_queue_proto_get_partition_info_request_proto_goTypes = nil
	file_pkg_queue_proto_get_partition_info_request_proto_depIdxs = nil
}
