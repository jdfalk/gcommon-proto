// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/queue_monitoring_service.proto

package proto

import (
	_ "github.com/jdfalk/gcommon/pkg/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Request to get queue health information.
type GetQueueHealthRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specific queue names to check (empty = all queues)
	QueueNames []string `protobuf:"bytes,1,rep,name=queue_names,json=queueNames" json:"queue_names,omitempty"`
	// Whether to include detailed health metrics
	IncludeDetails *bool `protobuf:"varint,2,opt,name=include_details,json=includeDetails" json:"include_details,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetQueueHealthRequest) Reset() {
	*x = GetQueueHealthRequest{}
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueHealthRequest) ProtoMessage() {}

func (x *GetQueueHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueHealthRequest.ProtoReflect.Descriptor instead.
func (*GetQueueHealthRequest) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_queue_monitoring_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetQueueHealthRequest) GetQueueNames() []string {
	if x != nil {
		return x.QueueNames
	}
	return nil
}

func (x *GetQueueHealthRequest) GetIncludeDetails() bool {
	if x != nil && x.IncludeDetails != nil {
		return *x.IncludeDetails
	}
	return false
}

// *
// Response containing queue health information.
type GetQueueHealthResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Health status for each queue
	QueueHealth []*QueueHealth `protobuf:"bytes,1,rep,name=queue_health,json=queueHealth" json:"queue_health,omitempty"`
	// Overall cluster health
	ClusterHealth *ClusterHealth `protobuf:"bytes,2,opt,name=cluster_health,json=clusterHealth" json:"cluster_health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueHealthResponse) Reset() {
	*x = GetQueueHealthResponse{}
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueHealthResponse) ProtoMessage() {}

func (x *GetQueueHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueHealthResponse.ProtoReflect.Descriptor instead.
func (*GetQueueHealthResponse) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_queue_monitoring_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetQueueHealthResponse) GetQueueHealth() []*QueueHealth {
	if x != nil {
		return x.QueueHealth
	}
	return nil
}

func (x *GetQueueHealthResponse) GetClusterHealth() *ClusterHealth {
	if x != nil {
		return x.ClusterHealth
	}
	return nil
}

// *
// Health status for a single queue.
type QueueHealth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the queue
	QueueName *string `protobuf:"bytes,1,opt,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	// Health status
	Status *HealthStatus `protobuf:"varint,2,opt,name=status,enum=gcommon.v1.queue.HealthStatus" json:"status,omitempty"`
	// Health score (0-100)
	HealthScore *int32 `protobuf:"varint,3,opt,name=health_score,json=healthScore" json:"health_score,omitempty"`
	// List of health issues
	Issues []string `protobuf:"bytes,4,rep,name=issues" json:"issues,omitempty"`
	// Last health check timestamp
	LastCheck     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_check,json=lastCheck" json:"last_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueHealth) Reset() {
	*x = QueueHealth{}
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueHealth) ProtoMessage() {}

func (x *QueueHealth) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueHealth.ProtoReflect.Descriptor instead.
func (*QueueHealth) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_queue_monitoring_service_proto_rawDescGZIP(), []int{2}
}

func (x *QueueHealth) GetQueueName() string {
	if x != nil && x.QueueName != nil {
		return *x.QueueName
	}
	return ""
}

func (x *QueueHealth) GetStatus() HealthStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return HealthStatus_HEALTH_STATUS_UNSPECIFIED
}

func (x *QueueHealth) GetHealthScore() int32 {
	if x != nil && x.HealthScore != nil {
		return *x.HealthScore
	}
	return 0
}

func (x *QueueHealth) GetIssues() []string {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *QueueHealth) GetLastCheck() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheck
	}
	return nil
}

// *
// Overall cluster health information.
type ClusterHealth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Overall health status
	Status *HealthStatus `protobuf:"varint,1,opt,name=status,enum=gcommon.v1.queue.HealthStatus" json:"status,omitempty"`
	// Number of healthy nodes
	HealthyNodes *int32 `protobuf:"varint,2,opt,name=healthy_nodes,json=healthyNodes" json:"healthy_nodes,omitempty"`
	// Total number of nodes
	TotalNodes *int32 `protobuf:"varint,3,opt,name=total_nodes,json=totalNodes" json:"total_nodes,omitempty"`
	// Health issues affecting the cluster
	Issues        []string `protobuf:"bytes,4,rep,name=issues" json:"issues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterHealth) Reset() {
	*x = ClusterHealth{}
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterHealth) ProtoMessage() {}

func (x *ClusterHealth) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterHealth.ProtoReflect.Descriptor instead.
func (*ClusterHealth) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_queue_monitoring_service_proto_rawDescGZIP(), []int{3}
}

func (x *ClusterHealth) GetStatus() HealthStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return HealthStatus_HEALTH_STATUS_UNSPECIFIED
}

func (x *ClusterHealth) GetHealthyNodes() int32 {
	if x != nil && x.HealthyNodes != nil {
		return *x.HealthyNodes
	}
	return 0
}

func (x *ClusterHealth) GetTotalNodes() int32 {
	if x != nil && x.TotalNodes != nil {
		return *x.TotalNodes
	}
	return 0
}

func (x *ClusterHealth) GetIssues() []string {
	if x != nil {
		return x.Issues
	}
	return nil
}

// *
// Request to get queue statistics.
type GetQueueStatsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the queue
	QueueName *string `protobuf:"bytes,1,opt,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	// Time range for statistics
	TimeRange *TimeRange `protobuf:"bytes,2,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	// Granularity of statistics (hourly, daily, etc.)
	Granularity   *StatsGranularity `protobuf:"varint,3,opt,name=granularity,enum=gcommon.v1.queue.StatsGranularity" json:"granularity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueStatsRequest) Reset() {
	*x = GetQueueStatsRequest{}
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueStatsRequest) ProtoMessage() {}

func (x *GetQueueStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueStatsRequest.ProtoReflect.Descriptor instead.
func (*GetQueueStatsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_queue_monitoring_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetQueueStatsRequest) GetQueueName() string {
	if x != nil && x.QueueName != nil {
		return *x.QueueName
	}
	return ""
}

func (x *GetQueueStatsRequest) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetQueueStatsRequest) GetGranularity() StatsGranularity {
	if x != nil && x.Granularity != nil {
		return *x.Granularity
	}
	return StatsGranularity_STATS_GRANULARITY_UNSPECIFIED
}

// *
// Response containing queue statistics from monitoring service.
type QueueStatsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Queue statistics
	Stats *QueueStats `protobuf:"bytes,1,opt,name=stats" json:"stats,omitempty"`
	// Time series data
	TimeSeries    []*QueueStatsPoint `protobuf:"bytes,2,rep,name=time_series,json=timeSeries" json:"time_series,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueStatsResponse) Reset() {
	*x = QueueStatsResponse{}
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueStatsResponse) ProtoMessage() {}

func (x *QueueStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueStatsResponse.ProtoReflect.Descriptor instead.
func (*QueueStatsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_queue_monitoring_service_proto_rawDescGZIP(), []int{5}
}

func (x *QueueStatsResponse) GetStats() *QueueStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *QueueStatsResponse) GetTimeSeries() []*QueueStatsPoint {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

// *
// Point-in-time queue statistics.
type QueueStatsPoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp for this data point
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	// Statistics at this point in time
	Stats         *QueueStats `protobuf:"bytes,2,opt,name=stats" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueStatsPoint) Reset() {
	*x = QueueStatsPoint{}
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueStatsPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueStatsPoint) ProtoMessage() {}

func (x *QueueStatsPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueStatsPoint.ProtoReflect.Descriptor instead.
func (*QueueStatsPoint) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_queue_monitoring_service_proto_rawDescGZIP(), []int{6}
}

func (x *QueueStatsPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *QueueStatsPoint) GetStats() *QueueStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// *
// Request to stream real-time metrics.
type StreamMetricsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Queue names to monitor (empty = all queues)
	QueueNames []string `protobuf:"bytes,1,rep,name=queue_names,json=queueNames" json:"queue_names,omitempty"`
	// Types of metrics to include
	MetricTypes []MetricType `protobuf:"varint,2,rep,packed,name=metric_types,json=metricTypes,enum=gcommon.v1.queue.MetricType" json:"metric_types,omitempty"`
	// Streaming interval in seconds
	IntervalSeconds *int32 `protobuf:"varint,3,opt,name=interval_seconds,json=intervalSeconds" json:"interval_seconds,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamMetricsRequest) Reset() {
	*x = StreamMetricsRequest{}
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMetricsRequest) ProtoMessage() {}

func (x *StreamMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMetricsRequest.ProtoReflect.Descriptor instead.
func (*StreamMetricsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_queue_monitoring_service_proto_rawDescGZIP(), []int{7}
}

func (x *StreamMetricsRequest) GetQueueNames() []string {
	if x != nil {
		return x.QueueNames
	}
	return nil
}

func (x *StreamMetricsRequest) GetMetricTypes() []MetricType {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

func (x *StreamMetricsRequest) GetIntervalSeconds() int32 {
	if x != nil && x.IntervalSeconds != nil {
		return *x.IntervalSeconds
	}
	return 0
}

// *
// Real-time metrics event.
type MetricsEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp of the event
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	// Queue name
	QueueName *string `protobuf:"bytes,2,opt,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	// Type of metric
	MetricType *MetricType `protobuf:"varint,3,opt,name=metric_type,json=metricType,enum=gcommon.v1.queue.MetricType" json:"metric_type,omitempty"`
	// Metric value
	Value *float64 `protobuf:"fixed64,4,opt,name=value" json:"value,omitempty"`
	// Additional metadata
	Labels        map[string]string `protobuf:"bytes,5,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsEvent) Reset() {
	*x = MetricsEvent{}
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsEvent) ProtoMessage() {}

func (x *MetricsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsEvent.ProtoReflect.Descriptor instead.
func (*MetricsEvent) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_queue_monitoring_service_proto_rawDescGZIP(), []int{8}
}

func (x *MetricsEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MetricsEvent) GetQueueName() string {
	if x != nil && x.QueueName != nil {
		return *x.QueueName
	}
	return ""
}

func (x *MetricsEvent) GetMetricType() MetricType {
	if x != nil && x.MetricType != nil {
		return *x.MetricType
	}
	return MetricType_METRIC_TYPE_UNSPECIFIED
}

func (x *MetricsEvent) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *MetricsEvent) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_pkg_queue_proto_queue_monitoring_service_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_queue_monitoring_service_proto_rawDesc = "" +
	"\n" +
	".pkg/queue/proto/queue_monitoring_service.proto\x12\x10gcommon.v1.queue\x1a pkg/queue/proto/time_range.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!pkg/common/proto/time_range.proto\x1a\"pkg/queue/proto/cluster_info.proto\x1a.pkg/queue/proto/get_cluster_info_request.proto\x1a/pkg/queue/proto/get_cluster_info_response.proto\x1a.pkg/queue/proto/get_queue_stats_response.proto\x1a#pkg/queue/proto/health_status.proto\x1a!pkg/queue/proto/metric_type.proto\x1a'pkg/queue/proto/stats_granularity.proto\x1a pkg/queue/proto/topic_info.proto\"a\n" +
	"\x15GetQueueHealthRequest\x12\x1f\n" +
	"\vqueue_names\x18\x01 \x03(\tR\n" +
	"queueNames\x12'\n" +
	"\x0finclude_details\x18\x02 \x01(\bR\x0eincludeDetails\"\xa2\x01\n" +
	"\x16GetQueueHealthResponse\x12@\n" +
	"\fqueue_health\x18\x01 \x03(\v2\x1d.gcommon.v1.queue.QueueHealthR\vqueueHealth\x12F\n" +
	"\x0ecluster_health\x18\x02 \x01(\v2\x1f.gcommon.v1.queue.ClusterHealthR\rclusterHealth\"\xda\x01\n" +
	"\vQueueHealth\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x126\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1e.gcommon.v1.queue.HealthStatusR\x06status\x12!\n" +
	"\fhealth_score\x18\x03 \x01(\x05R\vhealthScore\x12\x16\n" +
	"\x06issues\x18\x04 \x03(\tR\x06issues\x129\n" +
	"\n" +
	"last_check\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tlastCheck\"\xa5\x01\n" +
	"\rClusterHealth\x126\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1e.gcommon.v1.queue.HealthStatusR\x06status\x12#\n" +
	"\rhealthy_nodes\x18\x02 \x01(\x05R\fhealthyNodes\x12\x1f\n" +
	"\vtotal_nodes\x18\x03 \x01(\x05R\n" +
	"totalNodes\x12\x16\n" +
	"\x06issues\x18\x04 \x03(\tR\x06issues\"\xb7\x01\n" +
	"\x14GetQueueStatsRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12:\n" +
	"\n" +
	"time_range\x18\x02 \x01(\v2\x1b.gcommon.v1.queue.TimeRangeR\ttimeRange\x12D\n" +
	"\vgranularity\x18\x03 \x01(\x0e2\".gcommon.v1.queue.StatsGranularityR\vgranularity\"\x8c\x01\n" +
	"\x12QueueStatsResponse\x122\n" +
	"\x05stats\x18\x01 \x01(\v2\x1c.gcommon.v1.queue.QueueStatsR\x05stats\x12B\n" +
	"\vtime_series\x18\x02 \x03(\v2!.gcommon.v1.queue.QueueStatsPointR\n" +
	"timeSeries\"\x7f\n" +
	"\x0fQueueStatsPoint\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x122\n" +
	"\x05stats\x18\x02 \x01(\v2\x1c.gcommon.v1.queue.QueueStatsR\x05stats\"\xa3\x01\n" +
	"\x14StreamMetricsRequest\x12\x1f\n" +
	"\vqueue_names\x18\x01 \x03(\tR\n" +
	"queueNames\x12?\n" +
	"\fmetric_types\x18\x02 \x03(\x0e2\x1c.gcommon.v1.queue.MetricTypeR\vmetricTypes\x12)\n" +
	"\x10interval_seconds\x18\x03 \x01(\x05R\x0fintervalSeconds\"\xbb\x02\n" +
	"\fMetricsEvent\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x02 \x01(\tR\tqueueName\x12=\n" +
	"\vmetric_type\x18\x03 \x01(\x0e2\x1c.gcommon.v1.queue.MetricTypeR\n" +
	"metricType\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x01R\x05value\x12B\n" +
	"\x06labels\x18\x05 \x03(\v2*.gcommon.v1.queue.MetricsEvent.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\x9c\x03\n" +
	"\x16QueueMonitoringService\x12c\n" +
	"\x0eGetClusterInfo\x12'.gcommon.v1.queue.GetClusterInfoRequest\x1a(.gcommon.v1.queue.GetClusterInfoResponse\x12c\n" +
	"\x0eGetQueueHealth\x12'.gcommon.v1.queue.GetQueueHealthRequest\x1a(.gcommon.v1.queue.GetQueueHealthResponse\x12]\n" +
	"\rGetQueueStats\x12&.gcommon.v1.queue.GetQueueStatsRequest\x1a$.gcommon.v1.queue.QueueStatsResponse\x12Y\n" +
	"\rStreamMetrics\x12&.gcommon.v1.queue.StreamMetricsRequest\x1a\x1e.gcommon.v1.queue.MetricsEvent0\x01B\xc0\x01\n" +
	"\x14com.gcommon.v1.queueB\x1bQueueMonitoringServiceProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_queue_monitoring_service_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_queue_monitoring_service_proto_rawDescData []byte
)

func file_pkg_queue_proto_queue_monitoring_service_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_queue_monitoring_service_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_queue_monitoring_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_queue_monitoring_service_proto_rawDesc), len(file_pkg_queue_proto_queue_monitoring_service_proto_rawDesc)))
	})
	return file_pkg_queue_proto_queue_monitoring_service_proto_rawDescData
}

var file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pkg_queue_proto_queue_monitoring_service_proto_goTypes = []any{
	(*GetQueueHealthRequest)(nil),  // 0: gcommon.v1.queue.GetQueueHealthRequest
	(*GetQueueHealthResponse)(nil), // 1: gcommon.v1.queue.GetQueueHealthResponse
	(*QueueHealth)(nil),            // 2: gcommon.v1.queue.QueueHealth
	(*ClusterHealth)(nil),          // 3: gcommon.v1.queue.ClusterHealth
	(*GetQueueStatsRequest)(nil),   // 4: gcommon.v1.queue.GetQueueStatsRequest
	(*QueueStatsResponse)(nil),     // 5: gcommon.v1.queue.QueueStatsResponse
	(*QueueStatsPoint)(nil),        // 6: gcommon.v1.queue.QueueStatsPoint
	(*StreamMetricsRequest)(nil),   // 7: gcommon.v1.queue.StreamMetricsRequest
	(*MetricsEvent)(nil),           // 8: gcommon.v1.queue.MetricsEvent
	nil,                            // 9: gcommon.v1.queue.MetricsEvent.LabelsEntry
	(HealthStatus)(0),              // 10: gcommon.v1.queue.HealthStatus
	(*timestamppb.Timestamp)(nil),  // 11: google.protobuf.Timestamp
	(*TimeRange)(nil),              // 12: gcommon.v1.queue.TimeRange
	(StatsGranularity)(0),          // 13: gcommon.v1.queue.StatsGranularity
	(*QueueStats)(nil),             // 14: gcommon.v1.queue.QueueStats
	(MetricType)(0),                // 15: gcommon.v1.queue.MetricType
	(*GetClusterInfoRequest)(nil),  // 16: gcommon.v1.queue.GetClusterInfoRequest
	(*GetClusterInfoResponse)(nil), // 17: gcommon.v1.queue.GetClusterInfoResponse
}
var file_pkg_queue_proto_queue_monitoring_service_proto_depIdxs = []int32{
	2,  // 0: gcommon.v1.queue.GetQueueHealthResponse.queue_health:type_name -> gcommon.v1.queue.QueueHealth
	3,  // 1: gcommon.v1.queue.GetQueueHealthResponse.cluster_health:type_name -> gcommon.v1.queue.ClusterHealth
	10, // 2: gcommon.v1.queue.QueueHealth.status:type_name -> gcommon.v1.queue.HealthStatus
	11, // 3: gcommon.v1.queue.QueueHealth.last_check:type_name -> google.protobuf.Timestamp
	10, // 4: gcommon.v1.queue.ClusterHealth.status:type_name -> gcommon.v1.queue.HealthStatus
	12, // 5: gcommon.v1.queue.GetQueueStatsRequest.time_range:type_name -> gcommon.v1.queue.TimeRange
	13, // 6: gcommon.v1.queue.GetQueueStatsRequest.granularity:type_name -> gcommon.v1.queue.StatsGranularity
	14, // 7: gcommon.v1.queue.QueueStatsResponse.stats:type_name -> gcommon.v1.queue.QueueStats
	6,  // 8: gcommon.v1.queue.QueueStatsResponse.time_series:type_name -> gcommon.v1.queue.QueueStatsPoint
	11, // 9: gcommon.v1.queue.QueueStatsPoint.timestamp:type_name -> google.protobuf.Timestamp
	14, // 10: gcommon.v1.queue.QueueStatsPoint.stats:type_name -> gcommon.v1.queue.QueueStats
	15, // 11: gcommon.v1.queue.StreamMetricsRequest.metric_types:type_name -> gcommon.v1.queue.MetricType
	11, // 12: gcommon.v1.queue.MetricsEvent.timestamp:type_name -> google.protobuf.Timestamp
	15, // 13: gcommon.v1.queue.MetricsEvent.metric_type:type_name -> gcommon.v1.queue.MetricType
	9,  // 14: gcommon.v1.queue.MetricsEvent.labels:type_name -> gcommon.v1.queue.MetricsEvent.LabelsEntry
	16, // 15: gcommon.v1.queue.QueueMonitoringService.GetClusterInfo:input_type -> gcommon.v1.queue.GetClusterInfoRequest
	0,  // 16: gcommon.v1.queue.QueueMonitoringService.GetQueueHealth:input_type -> gcommon.v1.queue.GetQueueHealthRequest
	4,  // 17: gcommon.v1.queue.QueueMonitoringService.GetQueueStats:input_type -> gcommon.v1.queue.GetQueueStatsRequest
	7,  // 18: gcommon.v1.queue.QueueMonitoringService.StreamMetrics:input_type -> gcommon.v1.queue.StreamMetricsRequest
	17, // 19: gcommon.v1.queue.QueueMonitoringService.GetClusterInfo:output_type -> gcommon.v1.queue.GetClusterInfoResponse
	1,  // 20: gcommon.v1.queue.QueueMonitoringService.GetQueueHealth:output_type -> gcommon.v1.queue.GetQueueHealthResponse
	5,  // 21: gcommon.v1.queue.QueueMonitoringService.GetQueueStats:output_type -> gcommon.v1.queue.QueueStatsResponse
	8,  // 22: gcommon.v1.queue.QueueMonitoringService.StreamMetrics:output_type -> gcommon.v1.queue.MetricsEvent
	19, // [19:23] is the sub-list for method output_type
	15, // [15:19] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_queue_monitoring_service_proto_init() }
func file_pkg_queue_proto_queue_monitoring_service_proto_init() {
	if File_pkg_queue_proto_queue_monitoring_service_proto != nil {
		return
	}
	file_pkg_queue_proto_time_range_proto_init()
	file_pkg_queue_proto_cluster_info_proto_init()
	file_pkg_queue_proto_get_cluster_info_request_proto_init()
	file_pkg_queue_proto_get_cluster_info_response_proto_init()
	file_pkg_queue_proto_get_queue_stats_response_proto_init()
	file_pkg_queue_proto_health_status_proto_init()
	file_pkg_queue_proto_metric_type_proto_init()
	file_pkg_queue_proto_stats_granularity_proto_init()
	file_pkg_queue_proto_topic_info_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_queue_monitoring_service_proto_rawDesc), len(file_pkg_queue_proto_queue_monitoring_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_queue_proto_queue_monitoring_service_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_queue_monitoring_service_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_queue_monitoring_service_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_queue_monitoring_service_proto = out.File
	file_pkg_queue_proto_queue_monitoring_service_proto_goTypes = nil
	file_pkg_queue_proto_queue_monitoring_service_proto_depIdxs = nil
}
