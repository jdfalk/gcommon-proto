// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/delete_topic_request.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DeleteTopicRequest removes a topic and its associated resources
type DeleteTopicRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Topic identifier to delete
	TopicId *string `protobuf:"bytes,1,opt,name=topic_id,json=topicId" json:"topic_id,omitempty"`
	// Force deletion even if topic has active subscriptions
	ForceDelete *bool `protobuf:"varint,2,opt,name=force_delete,json=forceDelete" json:"force_delete,omitempty"`
	// Delete associated data (messages, metadata)
	DeleteData *bool `protobuf:"varint,3,opt,name=delete_data,json=deleteData" json:"delete_data,omitempty"`
	// Timeout for deletion operation (milliseconds)
	TimeoutMs *int32 `protobuf:"varint,4,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"`
	// Reason for deletion
	DeletionReason *string `protobuf:"bytes,5,opt,name=deletion_reason,json=deletionReason" json:"deletion_reason,omitempty"`
	// Backup data before deletion
	BackupBeforeDelete *bool `protobuf:"varint,6,opt,name=backup_before_delete,json=backupBeforeDelete" json:"backup_before_delete,omitempty"`
	// Backup destination (if backing up)
	BackupDestination *string `protobuf:"bytes,7,opt,name=backup_destination,json=backupDestination" json:"backup_destination,omitempty"`
	// Operation metadata
	Metadata      map[string]string `protobuf:"bytes,8,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTopicRequest) Reset() {
	*x = DeleteTopicRequest{}
	mi := &file_pkg_queue_proto_delete_topic_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopicRequest) ProtoMessage() {}

func (x *DeleteTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_delete_topic_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopicRequest.ProtoReflect.Descriptor instead.
func (*DeleteTopicRequest) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_delete_topic_request_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteTopicRequest) GetTopicId() string {
	if x != nil && x.TopicId != nil {
		return *x.TopicId
	}
	return ""
}

func (x *DeleteTopicRequest) GetForceDelete() bool {
	if x != nil && x.ForceDelete != nil {
		return *x.ForceDelete
	}
	return false
}

func (x *DeleteTopicRequest) GetDeleteData() bool {
	if x != nil && x.DeleteData != nil {
		return *x.DeleteData
	}
	return false
}

func (x *DeleteTopicRequest) GetTimeoutMs() int32 {
	if x != nil && x.TimeoutMs != nil {
		return *x.TimeoutMs
	}
	return 0
}

func (x *DeleteTopicRequest) GetDeletionReason() string {
	if x != nil && x.DeletionReason != nil {
		return *x.DeletionReason
	}
	return ""
}

func (x *DeleteTopicRequest) GetBackupBeforeDelete() bool {
	if x != nil && x.BackupBeforeDelete != nil {
		return *x.BackupBeforeDelete
	}
	return false
}

func (x *DeleteTopicRequest) GetBackupDestination() string {
	if x != nil && x.BackupDestination != nil {
		return *x.BackupDestination
	}
	return ""
}

func (x *DeleteTopicRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_pkg_queue_proto_delete_topic_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_delete_topic_request_proto_rawDesc = "" +
	"\n" +
	"*pkg/queue/proto/delete_topic_request.proto\x12\x10gcommon.v1.queue\"\xa9\x03\n" +
	"\x12DeleteTopicRequest\x12\x19\n" +
	"\btopic_id\x18\x01 \x01(\tR\atopicId\x12!\n" +
	"\fforce_delete\x18\x02 \x01(\bR\vforceDelete\x12\x1f\n" +
	"\vdelete_data\x18\x03 \x01(\bR\n" +
	"deleteData\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x04 \x01(\x05R\ttimeoutMs\x12'\n" +
	"\x0fdeletion_reason\x18\x05 \x01(\tR\x0edeletionReason\x120\n" +
	"\x14backup_before_delete\x18\x06 \x01(\bR\x12backupBeforeDelete\x12-\n" +
	"\x12backup_destination\x18\a \x01(\tR\x11backupDestination\x12N\n" +
	"\bmetadata\x18\b \x03(\v22.gcommon.v1.queue.DeleteTopicRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xbc\x01\n" +
	"\x14com.gcommon.v1.queueB\x17DeleteTopicRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_delete_topic_request_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_delete_topic_request_proto_rawDescData []byte
)

func file_pkg_queue_proto_delete_topic_request_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_delete_topic_request_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_delete_topic_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_delete_topic_request_proto_rawDesc), len(file_pkg_queue_proto_delete_topic_request_proto_rawDesc)))
	})
	return file_pkg_queue_proto_delete_topic_request_proto_rawDescData
}

var file_pkg_queue_proto_delete_topic_request_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_queue_proto_delete_topic_request_proto_goTypes = []any{
	(*DeleteTopicRequest)(nil), // 0: gcommon.v1.queue.DeleteTopicRequest
	nil,                        // 1: gcommon.v1.queue.DeleteTopicRequest.MetadataEntry
}
var file_pkg_queue_proto_delete_topic_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.DeleteTopicRequest.metadata:type_name -> gcommon.v1.queue.DeleteTopicRequest.MetadataEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_delete_topic_request_proto_init() }
func file_pkg_queue_proto_delete_topic_request_proto_init() {
	if File_pkg_queue_proto_delete_topic_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_delete_topic_request_proto_rawDesc), len(file_pkg_queue_proto_delete_topic_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_delete_topic_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_delete_topic_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_delete_topic_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_delete_topic_request_proto = out.File
	file_pkg_queue_proto_delete_topic_request_proto_goTypes = nil
	file_pkg_queue_proto_delete_topic_request_proto_depIdxs = nil
}
