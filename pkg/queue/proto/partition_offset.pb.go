// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: pkg/queue/proto/partition_offset.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PartitionOffset represents the offset position within a partition
type PartitionOffset struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PartitionId     int32                  `protobuf:"varint,1,opt,name=partition_id,json=partitionId"`
	xxx_hidden_Offset          int64                  `protobuf:"varint,2,opt,name=offset"`
	xxx_hidden_OffsetTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=offset_timestamp,json=offsetTimestamp"`
	xxx_hidden_HighWaterMark   int64                  `protobuf:"varint,4,opt,name=high_water_mark,json=highWaterMark"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PartitionOffset) Reset() {
	*x = PartitionOffset{}
	mi := &file_pkg_queue_proto_partition_offset_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionOffset) ProtoMessage() {}

func (x *PartitionOffset) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_partition_offset_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PartitionOffset) GetPartitionId() int32 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *PartitionOffset) GetOffset() int64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *PartitionOffset) GetOffsetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_OffsetTimestamp
	}
	return nil
}

func (x *PartitionOffset) GetHighWaterMark() int64 {
	if x != nil {
		return x.xxx_hidden_HighWaterMark
	}
	return 0
}

func (x *PartitionOffset) SetPartitionId(v int32) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *PartitionOffset) SetOffset(v int64) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *PartitionOffset) SetOffsetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_OffsetTimestamp = v
}

func (x *PartitionOffset) SetHighWaterMark(v int64) {
	x.xxx_hidden_HighWaterMark = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *PartitionOffset) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PartitionOffset) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PartitionOffset) HasOffsetTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OffsetTimestamp != nil
}

func (x *PartitionOffset) HasHighWaterMark() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PartitionOffset) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PartitionId = 0
}

func (x *PartitionOffset) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Offset = 0
}

func (x *PartitionOffset) ClearOffsetTimestamp() {
	x.xxx_hidden_OffsetTimestamp = nil
}

func (x *PartitionOffset) ClearHighWaterMark() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_HighWaterMark = 0
}

type PartitionOffset_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Partition ID
	PartitionId *int32
	// Starting offset value
	Offset *int64
	// Offset timestamp
	OffsetTimestamp *timestamppb.Timestamp
	// High water mark for this partition
	HighWaterMark *int64
}

func (b0 PartitionOffset_builder) Build() *PartitionOffset {
	m0 := &PartitionOffset{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Offset = *b.Offset
	}
	x.xxx_hidden_OffsetTimestamp = b.OffsetTimestamp
	if b.HighWaterMark != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_HighWaterMark = *b.HighWaterMark
	}
	return m0
}

var File_pkg_queue_proto_partition_offset_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_partition_offset_proto_rawDesc = "" +
	"\n" +
	"&pkg/queue/proto/partition_offset.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xbb\x01\n" +
	"\x0fPartitionOffset\x12!\n" +
	"\fpartition_id\x18\x01 \x01(\x05R\vpartitionId\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12E\n" +
	"\x10offset_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0foffsetTimestamp\x12&\n" +
	"\x0fhigh_water_mark\x18\x04 \x01(\x03R\rhighWaterMarkB\xc1\x01\n" +
	"\x14com.gcommon.v1.queueB\x14PartitionOffsetProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_queue_proto_partition_offset_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_partition_offset_proto_goTypes = []any{
	(*PartitionOffset)(nil),       // 0: gcommon.v1.queue.PartitionOffset
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_pkg_queue_proto_partition_offset_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.PartitionOffset.offset_timestamp:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_partition_offset_proto_init() }
func file_pkg_queue_proto_partition_offset_proto_init() {
	if File_pkg_queue_proto_partition_offset_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_partition_offset_proto_rawDesc), len(file_pkg_queue_proto_partition_offset_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_partition_offset_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_partition_offset_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_partition_offset_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_partition_offset_proto = out.File
	file_pkg_queue_proto_partition_offset_proto_goTypes = nil
	file_pkg_queue_proto_partition_offset_proto_depIdxs = nil
}
