// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/restore_queue_request.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RestoreQueueRequest initiates restoration of a queue from backup
type RestoreQueueRequest struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TargetQueueId     *string                `protobuf:"bytes,1,opt,name=target_queue_id,json=targetQueueId"`
	xxx_hidden_BackupSource      *BackupSource          `protobuf:"bytes,2,opt,name=backup_source,json=backupSource"`
	xxx_hidden_RestoreConfig     *RestoreConfig         `protobuf:"bytes,3,opt,name=restore_config,json=restoreConfig"`
	xxx_hidden_RestorePoint      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=restore_point,json=restorePoint"`
	xxx_hidden_OverwriteExisting bool                   `protobuf:"varint,5,opt,name=overwrite_existing,json=overwriteExisting"`
	xxx_hidden_ValidateBackup    bool                   `protobuf:"varint,6,opt,name=validate_backup,json=validateBackup"`
	xxx_hidden_PartitionIds      []int32                `protobuf:"varint,7,rep,packed,name=partition_ids,json=partitionIds"`
	xxx_hidden_Options           *RestoreOptions        `protobuf:"bytes,8,opt,name=options"`
	xxx_hidden_Metadata          map[string]string      `protobuf:"bytes,9,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *RestoreQueueRequest) Reset() {
	*x = RestoreQueueRequest{}
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreQueueRequest) ProtoMessage() {}

func (x *RestoreQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RestoreQueueRequest) GetTargetQueueId() string {
	if x != nil {
		if x.xxx_hidden_TargetQueueId != nil {
			return *x.xxx_hidden_TargetQueueId
		}
		return ""
	}
	return ""
}

func (x *RestoreQueueRequest) GetBackupSource() *BackupSource {
	if x != nil {
		return x.xxx_hidden_BackupSource
	}
	return nil
}

func (x *RestoreQueueRequest) GetRestoreConfig() *RestoreConfig {
	if x != nil {
		return x.xxx_hidden_RestoreConfig
	}
	return nil
}

func (x *RestoreQueueRequest) GetRestorePoint() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_RestorePoint
	}
	return nil
}

func (x *RestoreQueueRequest) GetOverwriteExisting() bool {
	if x != nil {
		return x.xxx_hidden_OverwriteExisting
	}
	return false
}

func (x *RestoreQueueRequest) GetValidateBackup() bool {
	if x != nil {
		return x.xxx_hidden_ValidateBackup
	}
	return false
}

func (x *RestoreQueueRequest) GetPartitionIds() []int32 {
	if x != nil {
		return x.xxx_hidden_PartitionIds
	}
	return nil
}

func (x *RestoreQueueRequest) GetOptions() *RestoreOptions {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *RestoreQueueRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *RestoreQueueRequest) SetTargetQueueId(v string) {
	x.xxx_hidden_TargetQueueId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *RestoreQueueRequest) SetBackupSource(v *BackupSource) {
	x.xxx_hidden_BackupSource = v
}

func (x *RestoreQueueRequest) SetRestoreConfig(v *RestoreConfig) {
	x.xxx_hidden_RestoreConfig = v
}

func (x *RestoreQueueRequest) SetRestorePoint(v *timestamppb.Timestamp) {
	x.xxx_hidden_RestorePoint = v
}

func (x *RestoreQueueRequest) SetOverwriteExisting(v bool) {
	x.xxx_hidden_OverwriteExisting = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *RestoreQueueRequest) SetValidateBackup(v bool) {
	x.xxx_hidden_ValidateBackup = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *RestoreQueueRequest) SetPartitionIds(v []int32) {
	x.xxx_hidden_PartitionIds = v
}

func (x *RestoreQueueRequest) SetOptions(v *RestoreOptions) {
	x.xxx_hidden_Options = v
}

func (x *RestoreQueueRequest) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *RestoreQueueRequest) HasTargetQueueId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RestoreQueueRequest) HasBackupSource() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BackupSource != nil
}

func (x *RestoreQueueRequest) HasRestoreConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RestoreConfig != nil
}

func (x *RestoreQueueRequest) HasRestorePoint() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RestorePoint != nil
}

func (x *RestoreQueueRequest) HasOverwriteExisting() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RestoreQueueRequest) HasValidateBackup() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *RestoreQueueRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Options != nil
}

func (x *RestoreQueueRequest) ClearTargetQueueId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TargetQueueId = nil
}

func (x *RestoreQueueRequest) ClearBackupSource() {
	x.xxx_hidden_BackupSource = nil
}

func (x *RestoreQueueRequest) ClearRestoreConfig() {
	x.xxx_hidden_RestoreConfig = nil
}

func (x *RestoreQueueRequest) ClearRestorePoint() {
	x.xxx_hidden_RestorePoint = nil
}

func (x *RestoreQueueRequest) ClearOverwriteExisting() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_OverwriteExisting = false
}

func (x *RestoreQueueRequest) ClearValidateBackup() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ValidateBackup = false
}

func (x *RestoreQueueRequest) ClearOptions() {
	x.xxx_hidden_Options = nil
}

type RestoreQueueRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Target queue identifier for restoration
	TargetQueueId *string
	// Backup source information
	BackupSource *BackupSource
	// Restoration configuration
	RestoreConfig *RestoreConfig
	// Restore to specific point in time
	RestorePoint *timestamppb.Timestamp
	// Overwrite existing queue if it exists
	OverwriteExisting *bool
	// Validate backup integrity before restore
	ValidateBackup *bool
	// Restore only specific partitions (empty = all partitions)
	PartitionIds []int32
	// Restore options
	Options *RestoreOptions
	// Operation metadata
	Metadata map[string]string
}

func (b0 RestoreQueueRequest_builder) Build() *RestoreQueueRequest {
	m0 := &RestoreQueueRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TargetQueueId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_TargetQueueId = b.TargetQueueId
	}
	x.xxx_hidden_BackupSource = b.BackupSource
	x.xxx_hidden_RestoreConfig = b.RestoreConfig
	x.xxx_hidden_RestorePoint = b.RestorePoint
	if b.OverwriteExisting != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_OverwriteExisting = *b.OverwriteExisting
	}
	if b.ValidateBackup != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_ValidateBackup = *b.ValidateBackup
	}
	x.xxx_hidden_PartitionIds = b.PartitionIds
	x.xxx_hidden_Options = b.Options
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Backup source configuration
type BackupSource struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BackupId          *string                `protobuf:"bytes,1,opt,name=backup_id,json=backupId"`
	xxx_hidden_BackupPath        *string                `protobuf:"bytes,2,opt,name=backup_path,json=backupPath"`
	xxx_hidden_StorageType       *string                `protobuf:"bytes,3,opt,name=storage_type,json=storageType"`
	xxx_hidden_Credentials       map[string]string      `protobuf:"bytes,4,rep,name=credentials" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_BackupTimestamp   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=backup_timestamp,json=backupTimestamp"`
	xxx_hidden_OriginalQueue     *OriginalQueueInfo     `protobuf:"bytes,6,opt,name=original_queue,json=originalQueue"`
	xxx_hidden_BackupVersion     *string                `protobuf:"bytes,7,opt,name=backup_version,json=backupVersion"`
	xxx_hidden_CompressionFormat *string                `protobuf:"bytes,8,opt,name=compression_format,json=compressionFormat"`
	xxx_hidden_Encryption        *EncryptionInfo        `protobuf:"bytes,9,opt,name=encryption"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *BackupSource) Reset() {
	*x = BackupSource{}
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupSource) ProtoMessage() {}

func (x *BackupSource) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BackupSource) GetBackupId() string {
	if x != nil {
		if x.xxx_hidden_BackupId != nil {
			return *x.xxx_hidden_BackupId
		}
		return ""
	}
	return ""
}

func (x *BackupSource) GetBackupPath() string {
	if x != nil {
		if x.xxx_hidden_BackupPath != nil {
			return *x.xxx_hidden_BackupPath
		}
		return ""
	}
	return ""
}

func (x *BackupSource) GetStorageType() string {
	if x != nil {
		if x.xxx_hidden_StorageType != nil {
			return *x.xxx_hidden_StorageType
		}
		return ""
	}
	return ""
}

func (x *BackupSource) GetCredentials() map[string]string {
	if x != nil {
		return x.xxx_hidden_Credentials
	}
	return nil
}

func (x *BackupSource) GetBackupTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_BackupTimestamp
	}
	return nil
}

func (x *BackupSource) GetOriginalQueue() *OriginalQueueInfo {
	if x != nil {
		return x.xxx_hidden_OriginalQueue
	}
	return nil
}

func (x *BackupSource) GetBackupVersion() string {
	if x != nil {
		if x.xxx_hidden_BackupVersion != nil {
			return *x.xxx_hidden_BackupVersion
		}
		return ""
	}
	return ""
}

func (x *BackupSource) GetCompressionFormat() string {
	if x != nil {
		if x.xxx_hidden_CompressionFormat != nil {
			return *x.xxx_hidden_CompressionFormat
		}
		return ""
	}
	return ""
}

func (x *BackupSource) GetEncryption() *EncryptionInfo {
	if x != nil {
		return x.xxx_hidden_Encryption
	}
	return nil
}

func (x *BackupSource) SetBackupId(v string) {
	x.xxx_hidden_BackupId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *BackupSource) SetBackupPath(v string) {
	x.xxx_hidden_BackupPath = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *BackupSource) SetStorageType(v string) {
	x.xxx_hidden_StorageType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *BackupSource) SetCredentials(v map[string]string) {
	x.xxx_hidden_Credentials = v
}

func (x *BackupSource) SetBackupTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_BackupTimestamp = v
}

func (x *BackupSource) SetOriginalQueue(v *OriginalQueueInfo) {
	x.xxx_hidden_OriginalQueue = v
}

func (x *BackupSource) SetBackupVersion(v string) {
	x.xxx_hidden_BackupVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *BackupSource) SetCompressionFormat(v string) {
	x.xxx_hidden_CompressionFormat = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *BackupSource) SetEncryption(v *EncryptionInfo) {
	x.xxx_hidden_Encryption = v
}

func (x *BackupSource) HasBackupId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BackupSource) HasBackupPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *BackupSource) HasStorageType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *BackupSource) HasBackupTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BackupTimestamp != nil
}

func (x *BackupSource) HasOriginalQueue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OriginalQueue != nil
}

func (x *BackupSource) HasBackupVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *BackupSource) HasCompressionFormat() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *BackupSource) HasEncryption() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Encryption != nil
}

func (x *BackupSource) ClearBackupId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BackupId = nil
}

func (x *BackupSource) ClearBackupPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_BackupPath = nil
}

func (x *BackupSource) ClearStorageType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_StorageType = nil
}

func (x *BackupSource) ClearBackupTimestamp() {
	x.xxx_hidden_BackupTimestamp = nil
}

func (x *BackupSource) ClearOriginalQueue() {
	x.xxx_hidden_OriginalQueue = nil
}

func (x *BackupSource) ClearBackupVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_BackupVersion = nil
}

func (x *BackupSource) ClearCompressionFormat() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_CompressionFormat = nil
}

func (x *BackupSource) ClearEncryption() {
	x.xxx_hidden_Encryption = nil
}

type BackupSource_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Backup identifier
	BackupId *string
	// Backup location/path
	BackupPath *string
	// Backup storage type (s3, gcs, local, etc.)
	StorageType *string
	// Storage credentials
	Credentials map[string]string
	// Backup creation timestamp
	BackupTimestamp *timestamppb.Timestamp
	// Original queue information
	OriginalQueue *OriginalQueueInfo
	// Backup format version
	BackupVersion *string
	// Backup compression format
	CompressionFormat *string
	// Backup encryption details
	Encryption *EncryptionInfo
}

func (b0 BackupSource_builder) Build() *BackupSource {
	m0 := &BackupSource{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BackupId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_BackupId = b.BackupId
	}
	if b.BackupPath != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_BackupPath = b.BackupPath
	}
	if b.StorageType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_StorageType = b.StorageType
	}
	x.xxx_hidden_Credentials = b.Credentials
	x.xxx_hidden_BackupTimestamp = b.BackupTimestamp
	x.xxx_hidden_OriginalQueue = b.OriginalQueue
	if b.BackupVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_BackupVersion = b.BackupVersion
	}
	if b.CompressionFormat != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_CompressionFormat = b.CompressionFormat
	}
	x.xxx_hidden_Encryption = b.Encryption
	return m0
}

// Original queue information from backup
type OriginalQueueInfo struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_QueueId        *string                `protobuf:"bytes,1,opt,name=queue_id,json=queueId"`
	xxx_hidden_QueueName      *string                `protobuf:"bytes,2,opt,name=queue_name,json=queueName"`
	xxx_hidden_PartitionCount int32                  `protobuf:"varint,3,opt,name=partition_count,json=partitionCount"`
	xxx_hidden_ConfigSnapshot map[string]string      `protobuf:"bytes,4,rep,name=config_snapshot,json=configSnapshot" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_BackupPoint    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=backup_point,json=backupPoint"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *OriginalQueueInfo) Reset() {
	*x = OriginalQueueInfo{}
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OriginalQueueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginalQueueInfo) ProtoMessage() {}

func (x *OriginalQueueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OriginalQueueInfo) GetQueueId() string {
	if x != nil {
		if x.xxx_hidden_QueueId != nil {
			return *x.xxx_hidden_QueueId
		}
		return ""
	}
	return ""
}

func (x *OriginalQueueInfo) GetQueueName() string {
	if x != nil {
		if x.xxx_hidden_QueueName != nil {
			return *x.xxx_hidden_QueueName
		}
		return ""
	}
	return ""
}

func (x *OriginalQueueInfo) GetPartitionCount() int32 {
	if x != nil {
		return x.xxx_hidden_PartitionCount
	}
	return 0
}

func (x *OriginalQueueInfo) GetConfigSnapshot() map[string]string {
	if x != nil {
		return x.xxx_hidden_ConfigSnapshot
	}
	return nil
}

func (x *OriginalQueueInfo) GetBackupPoint() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_BackupPoint
	}
	return nil
}

func (x *OriginalQueueInfo) SetQueueId(v string) {
	x.xxx_hidden_QueueId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *OriginalQueueInfo) SetQueueName(v string) {
	x.xxx_hidden_QueueName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *OriginalQueueInfo) SetPartitionCount(v int32) {
	x.xxx_hidden_PartitionCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *OriginalQueueInfo) SetConfigSnapshot(v map[string]string) {
	x.xxx_hidden_ConfigSnapshot = v
}

func (x *OriginalQueueInfo) SetBackupPoint(v *timestamppb.Timestamp) {
	x.xxx_hidden_BackupPoint = v
}

func (x *OriginalQueueInfo) HasQueueId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OriginalQueueInfo) HasQueueName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *OriginalQueueInfo) HasPartitionCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *OriginalQueueInfo) HasBackupPoint() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BackupPoint != nil
}

func (x *OriginalQueueInfo) ClearQueueId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_QueueId = nil
}

func (x *OriginalQueueInfo) ClearQueueName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_QueueName = nil
}

func (x *OriginalQueueInfo) ClearPartitionCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartitionCount = 0
}

func (x *OriginalQueueInfo) ClearBackupPoint() {
	x.xxx_hidden_BackupPoint = nil
}

type OriginalQueueInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Original queue ID
	QueueId *string
	// Original queue name
	QueueName *string
	// Original partition count
	PartitionCount *int32
	// Original configuration snapshot
	ConfigSnapshot map[string]string
	// Backup creation point
	BackupPoint *timestamppb.Timestamp
}

func (b0 OriginalQueueInfo_builder) Build() *OriginalQueueInfo {
	m0 := &OriginalQueueInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.QueueId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_QueueId = b.QueueId
	}
	if b.QueueName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_QueueName = b.QueueName
	}
	if b.PartitionCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_PartitionCount = *b.PartitionCount
	}
	x.xxx_hidden_ConfigSnapshot = b.ConfigSnapshot
	x.xxx_hidden_BackupPoint = b.BackupPoint
	return m0
}

// Backup encryption information
type EncryptionInfo struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled     bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_Algorithm   *string                `protobuf:"bytes,2,opt,name=algorithm"`
	xxx_hidden_KmsProvider *string                `protobuf:"bytes,3,opt,name=kms_provider,json=kmsProvider"`
	xxx_hidden_KeyId       *string                `protobuf:"bytes,4,opt,name=key_id,json=keyId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *EncryptionInfo) Reset() {
	*x = EncryptionInfo{}
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionInfo) ProtoMessage() {}

func (x *EncryptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EncryptionInfo) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *EncryptionInfo) GetAlgorithm() string {
	if x != nil {
		if x.xxx_hidden_Algorithm != nil {
			return *x.xxx_hidden_Algorithm
		}
		return ""
	}
	return ""
}

func (x *EncryptionInfo) GetKmsProvider() string {
	if x != nil {
		if x.xxx_hidden_KmsProvider != nil {
			return *x.xxx_hidden_KmsProvider
		}
		return ""
	}
	return ""
}

func (x *EncryptionInfo) GetKeyId() string {
	if x != nil {
		if x.xxx_hidden_KeyId != nil {
			return *x.xxx_hidden_KeyId
		}
		return ""
	}
	return ""
}

func (x *EncryptionInfo) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *EncryptionInfo) SetAlgorithm(v string) {
	x.xxx_hidden_Algorithm = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *EncryptionInfo) SetKmsProvider(v string) {
	x.xxx_hidden_KmsProvider = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *EncryptionInfo) SetKeyId(v string) {
	x.xxx_hidden_KeyId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *EncryptionInfo) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EncryptionInfo) HasAlgorithm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EncryptionInfo) HasKmsProvider() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EncryptionInfo) HasKeyId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *EncryptionInfo) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *EncryptionInfo) ClearAlgorithm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Algorithm = nil
}

func (x *EncryptionInfo) ClearKmsProvider() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_KmsProvider = nil
}

func (x *EncryptionInfo) ClearKeyId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_KeyId = nil
}

type EncryptionInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Encryption enabled
	Enabled *bool
	// Encryption algorithm
	Algorithm *string
	// Key management service
	KmsProvider *string
	// Key identifier
	KeyId *string
}

func (b0 EncryptionInfo_builder) Build() *EncryptionInfo {
	m0 := &EncryptionInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.Algorithm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Algorithm = b.Algorithm
	}
	if b.KmsProvider != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_KmsProvider = b.KmsProvider
	}
	if b.KeyId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_KeyId = b.KeyId
	}
	return m0
}

// Restore operation options
type RestoreOptions struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SkipMessageContent bool                   `protobuf:"varint,1,opt,name=skip_message_content,json=skipMessageContent"`
	xxx_hidden_MetadataOnly       bool                   `protobuf:"varint,2,opt,name=metadata_only,json=metadataOnly"`
	xxx_hidden_MaxMessages        int64                  `protobuf:"varint,3,opt,name=max_messages,json=maxMessages"`
	xxx_hidden_OffsetRange        *OffsetRange           `protobuf:"bytes,4,opt,name=offset_range,json=offsetRange"`
	xxx_hidden_TimeRange          *TimeRange             `protobuf:"bytes,5,opt,name=time_range,json=timeRange"`
	xxx_hidden_PriorityLevels     []int32                `protobuf:"varint,6,rep,packed,name=priority_levels,json=priorityLevels"`
	xxx_hidden_FilterCriteria     *FilterCriteria        `protobuf:"bytes,7,opt,name=filter_criteria,json=filterCriteria"`
	xxx_hidden_Performance        *PerformanceOptions    `protobuf:"bytes,8,opt,name=performance"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *RestoreOptions) Reset() {
	*x = RestoreOptions{}
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreOptions) ProtoMessage() {}

func (x *RestoreOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RestoreOptions) GetSkipMessageContent() bool {
	if x != nil {
		return x.xxx_hidden_SkipMessageContent
	}
	return false
}

func (x *RestoreOptions) GetMetadataOnly() bool {
	if x != nil {
		return x.xxx_hidden_MetadataOnly
	}
	return false
}

func (x *RestoreOptions) GetMaxMessages() int64 {
	if x != nil {
		return x.xxx_hidden_MaxMessages
	}
	return 0
}

func (x *RestoreOptions) GetOffsetRange() *OffsetRange {
	if x != nil {
		return x.xxx_hidden_OffsetRange
	}
	return nil
}

func (x *RestoreOptions) GetTimeRange() *TimeRange {
	if x != nil {
		return x.xxx_hidden_TimeRange
	}
	return nil
}

func (x *RestoreOptions) GetPriorityLevels() []int32 {
	if x != nil {
		return x.xxx_hidden_PriorityLevels
	}
	return nil
}

func (x *RestoreOptions) GetFilterCriteria() *FilterCriteria {
	if x != nil {
		return x.xxx_hidden_FilterCriteria
	}
	return nil
}

func (x *RestoreOptions) GetPerformance() *PerformanceOptions {
	if x != nil {
		return x.xxx_hidden_Performance
	}
	return nil
}

func (x *RestoreOptions) SetSkipMessageContent(v bool) {
	x.xxx_hidden_SkipMessageContent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *RestoreOptions) SetMetadataOnly(v bool) {
	x.xxx_hidden_MetadataOnly = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *RestoreOptions) SetMaxMessages(v int64) {
	x.xxx_hidden_MaxMessages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *RestoreOptions) SetOffsetRange(v *OffsetRange) {
	x.xxx_hidden_OffsetRange = v
}

func (x *RestoreOptions) SetTimeRange(v *TimeRange) {
	x.xxx_hidden_TimeRange = v
}

func (x *RestoreOptions) SetPriorityLevels(v []int32) {
	x.xxx_hidden_PriorityLevels = v
}

func (x *RestoreOptions) SetFilterCriteria(v *FilterCriteria) {
	x.xxx_hidden_FilterCriteria = v
}

func (x *RestoreOptions) SetPerformance(v *PerformanceOptions) {
	x.xxx_hidden_Performance = v
}

func (x *RestoreOptions) HasSkipMessageContent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RestoreOptions) HasMetadataOnly() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RestoreOptions) HasMaxMessages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RestoreOptions) HasOffsetRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OffsetRange != nil
}

func (x *RestoreOptions) HasTimeRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TimeRange != nil
}

func (x *RestoreOptions) HasFilterCriteria() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FilterCriteria != nil
}

func (x *RestoreOptions) HasPerformance() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Performance != nil
}

func (x *RestoreOptions) ClearSkipMessageContent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SkipMessageContent = false
}

func (x *RestoreOptions) ClearMetadataOnly() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MetadataOnly = false
}

func (x *RestoreOptions) ClearMaxMessages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxMessages = 0
}

func (x *RestoreOptions) ClearOffsetRange() {
	x.xxx_hidden_OffsetRange = nil
}

func (x *RestoreOptions) ClearTimeRange() {
	x.xxx_hidden_TimeRange = nil
}

func (x *RestoreOptions) ClearFilterCriteria() {
	x.xxx_hidden_FilterCriteria = nil
}

func (x *RestoreOptions) ClearPerformance() {
	x.xxx_hidden_Performance = nil
}

type RestoreOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Skip message content (restore structure only)
	SkipMessageContent *bool
	// Restore message metadata only
	MetadataOnly *bool
	// Maximum number of messages to restore
	MaxMessages *int64
	// Restore messages from specific offset range
	OffsetRange *OffsetRange
	// Restore messages within time range
	TimeRange *TimeRange
	// Restore specific message priorities
	PriorityLevels []int32
	// Include/exclude patterns for message filtering
	FilterCriteria *FilterCriteria
	// Performance tuning options
	Performance *PerformanceOptions
}

func (b0 RestoreOptions_builder) Build() *RestoreOptions {
	m0 := &RestoreOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SkipMessageContent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_SkipMessageContent = *b.SkipMessageContent
	}
	if b.MetadataOnly != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_MetadataOnly = *b.MetadataOnly
	}
	if b.MaxMessages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_MaxMessages = *b.MaxMessages
	}
	x.xxx_hidden_OffsetRange = b.OffsetRange
	x.xxx_hidden_TimeRange = b.TimeRange
	x.xxx_hidden_PriorityLevels = b.PriorityLevels
	x.xxx_hidden_FilterCriteria = b.FilterCriteria
	x.xxx_hidden_Performance = b.Performance
	return m0
}

// Message filtering criteria
type FilterCriteria struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_IncludePatterns []string               `protobuf:"bytes,1,rep,name=include_patterns,json=includePatterns"`
	xxx_hidden_ExcludePatterns []string               `protobuf:"bytes,2,rep,name=exclude_patterns,json=excludePatterns"`
	xxx_hidden_HeaderFilters   map[string]string      `protobuf:"bytes,3,rep,name=header_filters,json=headerFilters" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_ContentTypes    []string               `protobuf:"bytes,4,rep,name=content_types,json=contentTypes"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *FilterCriteria) Reset() {
	*x = FilterCriteria{}
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterCriteria) ProtoMessage() {}

func (x *FilterCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FilterCriteria) GetIncludePatterns() []string {
	if x != nil {
		return x.xxx_hidden_IncludePatterns
	}
	return nil
}

func (x *FilterCriteria) GetExcludePatterns() []string {
	if x != nil {
		return x.xxx_hidden_ExcludePatterns
	}
	return nil
}

func (x *FilterCriteria) GetHeaderFilters() map[string]string {
	if x != nil {
		return x.xxx_hidden_HeaderFilters
	}
	return nil
}

func (x *FilterCriteria) GetContentTypes() []string {
	if x != nil {
		return x.xxx_hidden_ContentTypes
	}
	return nil
}

func (x *FilterCriteria) SetIncludePatterns(v []string) {
	x.xxx_hidden_IncludePatterns = v
}

func (x *FilterCriteria) SetExcludePatterns(v []string) {
	x.xxx_hidden_ExcludePatterns = v
}

func (x *FilterCriteria) SetHeaderFilters(v map[string]string) {
	x.xxx_hidden_HeaderFilters = v
}

func (x *FilterCriteria) SetContentTypes(v []string) {
	x.xxx_hidden_ContentTypes = v
}

type FilterCriteria_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Include message patterns
	IncludePatterns []string
	// Exclude message patterns
	ExcludePatterns []string
	// Header-based filters
	HeaderFilters map[string]string
	// Content-type filters
	ContentTypes []string
}

func (b0 FilterCriteria_builder) Build() *FilterCriteria {
	m0 := &FilterCriteria{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_IncludePatterns = b.IncludePatterns
	x.xxx_hidden_ExcludePatterns = b.ExcludePatterns
	x.xxx_hidden_HeaderFilters = b.HeaderFilters
	x.xxx_hidden_ContentTypes = b.ContentTypes
	return m0
}

// Performance tuning options
type PerformanceOptions struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_WorkerCount       int32                  `protobuf:"varint,1,opt,name=worker_count,json=workerCount"`
	xxx_hidden_BatchSize         int32                  `protobuf:"varint,2,opt,name=batch_size,json=batchSize"`
	xxx_hidden_BufferSizeMb      int32                  `protobuf:"varint,3,opt,name=buffer_size_mb,json=bufferSizeMb"`
	xxx_hidden_EnableCompression bool                   `protobuf:"varint,4,opt,name=enable_compression,json=enableCompression"`
	xxx_hidden_ThrottleRate      int32                  `protobuf:"varint,5,opt,name=throttle_rate,json=throttleRate"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *PerformanceOptions) Reset() {
	*x = PerformanceOptions{}
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceOptions) ProtoMessage() {}

func (x *PerformanceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_restore_queue_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PerformanceOptions) GetWorkerCount() int32 {
	if x != nil {
		return x.xxx_hidden_WorkerCount
	}
	return 0
}

func (x *PerformanceOptions) GetBatchSize() int32 {
	if x != nil {
		return x.xxx_hidden_BatchSize
	}
	return 0
}

func (x *PerformanceOptions) GetBufferSizeMb() int32 {
	if x != nil {
		return x.xxx_hidden_BufferSizeMb
	}
	return 0
}

func (x *PerformanceOptions) GetEnableCompression() bool {
	if x != nil {
		return x.xxx_hidden_EnableCompression
	}
	return false
}

func (x *PerformanceOptions) GetThrottleRate() int32 {
	if x != nil {
		return x.xxx_hidden_ThrottleRate
	}
	return 0
}

func (x *PerformanceOptions) SetWorkerCount(v int32) {
	x.xxx_hidden_WorkerCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *PerformanceOptions) SetBatchSize(v int32) {
	x.xxx_hidden_BatchSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *PerformanceOptions) SetBufferSizeMb(v int32) {
	x.xxx_hidden_BufferSizeMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *PerformanceOptions) SetEnableCompression(v bool) {
	x.xxx_hidden_EnableCompression = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *PerformanceOptions) SetThrottleRate(v int32) {
	x.xxx_hidden_ThrottleRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *PerformanceOptions) HasWorkerCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PerformanceOptions) HasBatchSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PerformanceOptions) HasBufferSizeMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PerformanceOptions) HasEnableCompression() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PerformanceOptions) HasThrottleRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *PerformanceOptions) ClearWorkerCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_WorkerCount = 0
}

func (x *PerformanceOptions) ClearBatchSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_BatchSize = 0
}

func (x *PerformanceOptions) ClearBufferSizeMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_BufferSizeMb = 0
}

func (x *PerformanceOptions) ClearEnableCompression() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EnableCompression = false
}

func (x *PerformanceOptions) ClearThrottleRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ThrottleRate = 0
}

type PerformanceOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Parallel restore workers
	WorkerCount *int32
	// Batch size for restore operations
	BatchSize *int32
	// Buffer size for reading backup data
	BufferSizeMb *int32
	// Compression during restore
	EnableCompression *bool
	// Throttle restore rate (messages/second)
	ThrottleRate *int32
}

func (b0 PerformanceOptions_builder) Build() *PerformanceOptions {
	m0 := &PerformanceOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.WorkerCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_WorkerCount = *b.WorkerCount
	}
	if b.BatchSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_BatchSize = *b.BatchSize
	}
	if b.BufferSizeMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_BufferSizeMb = *b.BufferSizeMb
	}
	if b.EnableCompression != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_EnableCompression = *b.EnableCompression
	}
	if b.ThrottleRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ThrottleRate = *b.ThrottleRate
	}
	return m0
}

var File_pkg_queue_proto_restore_queue_request_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_restore_queue_request_proto_rawDesc = "" +
	"\n" +
	"+pkg/queue/proto/restore_queue_request.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a$pkg/queue/proto/restore_config.proto\x1a,pkg/queue/proto/restore_queue_response.proto\x1a pkg/queue/proto/time_range.proto\"\xd2\x04\n" +
	"\x13RestoreQueueRequest\x12&\n" +
	"\x0ftarget_queue_id\x18\x01 \x01(\tR\rtargetQueueId\x12C\n" +
	"\rbackup_source\x18\x02 \x01(\v2\x1e.gcommon.v1.queue.BackupSourceR\fbackupSource\x12F\n" +
	"\x0erestore_config\x18\x03 \x01(\v2\x1f.gcommon.v1.queue.RestoreConfigR\rrestoreConfig\x12?\n" +
	"\rrestore_point\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\frestorePoint\x12-\n" +
	"\x12overwrite_existing\x18\x05 \x01(\bR\x11overwriteExisting\x12'\n" +
	"\x0fvalidate_backup\x18\x06 \x01(\bR\x0evalidateBackup\x12#\n" +
	"\rpartition_ids\x18\a \x03(\x05R\fpartitionIds\x12:\n" +
	"\aoptions\x18\b \x01(\v2 .gcommon.v1.queue.RestoreOptionsR\aoptions\x12O\n" +
	"\bmetadata\x18\t \x03(\v23.gcommon.v1.queue.RestoreQueueRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xad\x04\n" +
	"\fBackupSource\x12\x1b\n" +
	"\tbackup_id\x18\x01 \x01(\tR\bbackupId\x12\x1f\n" +
	"\vbackup_path\x18\x02 \x01(\tR\n" +
	"backupPath\x12!\n" +
	"\fstorage_type\x18\x03 \x01(\tR\vstorageType\x12Q\n" +
	"\vcredentials\x18\x04 \x03(\v2/.gcommon.v1.queue.BackupSource.CredentialsEntryR\vcredentials\x12E\n" +
	"\x10backup_timestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x0fbackupTimestamp\x12J\n" +
	"\x0eoriginal_queue\x18\x06 \x01(\v2#.gcommon.v1.queue.OriginalQueueInfoR\roriginalQueue\x12%\n" +
	"\x0ebackup_version\x18\a \x01(\tR\rbackupVersion\x12-\n" +
	"\x12compression_format\x18\b \x01(\tR\x11compressionFormat\x12@\n" +
	"\n" +
	"encryption\x18\t \x01(\v2 .gcommon.v1.queue.EncryptionInfoR\n" +
	"encryption\x1a>\n" +
	"\x10CredentialsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xda\x02\n" +
	"\x11OriginalQueueInfo\x12\x19\n" +
	"\bqueue_id\x18\x01 \x01(\tR\aqueueId\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x02 \x01(\tR\tqueueName\x12'\n" +
	"\x0fpartition_count\x18\x03 \x01(\x05R\x0epartitionCount\x12`\n" +
	"\x0fconfig_snapshot\x18\x04 \x03(\v27.gcommon.v1.queue.OriginalQueueInfo.ConfigSnapshotEntryR\x0econfigSnapshot\x12=\n" +
	"\fbackup_point\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vbackupPoint\x1aA\n" +
	"\x13ConfigSnapshotEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x82\x01\n" +
	"\x0eEncryptionInfo\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1c\n" +
	"\talgorithm\x18\x02 \x01(\tR\talgorithm\x12!\n" +
	"\fkms_provider\x18\x03 \x01(\tR\vkmsProvider\x12\x15\n" +
	"\x06key_id\x18\x04 \x01(\tR\x05keyId\"\xc4\x03\n" +
	"\x0eRestoreOptions\x120\n" +
	"\x14skip_message_content\x18\x01 \x01(\bR\x12skipMessageContent\x12#\n" +
	"\rmetadata_only\x18\x02 \x01(\bR\fmetadataOnly\x12!\n" +
	"\fmax_messages\x18\x03 \x01(\x03R\vmaxMessages\x12@\n" +
	"\foffset_range\x18\x04 \x01(\v2\x1d.gcommon.v1.queue.OffsetRangeR\voffsetRange\x12:\n" +
	"\n" +
	"time_range\x18\x05 \x01(\v2\x1b.gcommon.v1.queue.TimeRangeR\ttimeRange\x12'\n" +
	"\x0fpriority_levels\x18\x06 \x03(\x05R\x0epriorityLevels\x12I\n" +
	"\x0ffilter_criteria\x18\a \x01(\v2 .gcommon.v1.queue.FilterCriteriaR\x0efilterCriteria\x12F\n" +
	"\vperformance\x18\b \x01(\v2$.gcommon.v1.queue.PerformanceOptionsR\vperformance\"\xa9\x02\n" +
	"\x0eFilterCriteria\x12)\n" +
	"\x10include_patterns\x18\x01 \x03(\tR\x0fincludePatterns\x12)\n" +
	"\x10exclude_patterns\x18\x02 \x03(\tR\x0fexcludePatterns\x12Z\n" +
	"\x0eheader_filters\x18\x03 \x03(\v23.gcommon.v1.queue.FilterCriteria.HeaderFiltersEntryR\rheaderFilters\x12#\n" +
	"\rcontent_types\x18\x04 \x03(\tR\fcontentTypes\x1a@\n" +
	"\x12HeaderFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd0\x01\n" +
	"\x12PerformanceOptions\x12!\n" +
	"\fworker_count\x18\x01 \x01(\x05R\vworkerCount\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x02 \x01(\x05R\tbatchSize\x12$\n" +
	"\x0ebuffer_size_mb\x18\x03 \x01(\x05R\fbufferSizeMb\x12-\n" +
	"\x12enable_compression\x18\x04 \x01(\bR\x11enableCompression\x12#\n" +
	"\rthrottle_rate\x18\x05 \x01(\x05R\fthrottleRateB\xc5\x01\n" +
	"\x14com.gcommon.v1.queueB\x18RestoreQueueRequestProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_queue_proto_restore_queue_request_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_pkg_queue_proto_restore_queue_request_proto_goTypes = []any{
	(*RestoreQueueRequest)(nil),   // 0: gcommon.v1.queue.RestoreQueueRequest
	(*BackupSource)(nil),          // 1: gcommon.v1.queue.BackupSource
	(*OriginalQueueInfo)(nil),     // 2: gcommon.v1.queue.OriginalQueueInfo
	(*EncryptionInfo)(nil),        // 3: gcommon.v1.queue.EncryptionInfo
	(*RestoreOptions)(nil),        // 4: gcommon.v1.queue.RestoreOptions
	(*FilterCriteria)(nil),        // 5: gcommon.v1.queue.FilterCriteria
	(*PerformanceOptions)(nil),    // 6: gcommon.v1.queue.PerformanceOptions
	nil,                           // 7: gcommon.v1.queue.RestoreQueueRequest.MetadataEntry
	nil,                           // 8: gcommon.v1.queue.BackupSource.CredentialsEntry
	nil,                           // 9: gcommon.v1.queue.OriginalQueueInfo.ConfigSnapshotEntry
	nil,                           // 10: gcommon.v1.queue.FilterCriteria.HeaderFiltersEntry
	(*RestoreConfig)(nil),         // 11: gcommon.v1.queue.RestoreConfig
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(*OffsetRange)(nil),           // 13: gcommon.v1.queue.OffsetRange
	(*TimeRange)(nil),             // 14: gcommon.v1.queue.TimeRange
}
var file_pkg_queue_proto_restore_queue_request_proto_depIdxs = []int32{
	1,  // 0: gcommon.v1.queue.RestoreQueueRequest.backup_source:type_name -> gcommon.v1.queue.BackupSource
	11, // 1: gcommon.v1.queue.RestoreQueueRequest.restore_config:type_name -> gcommon.v1.queue.RestoreConfig
	12, // 2: gcommon.v1.queue.RestoreQueueRequest.restore_point:type_name -> google.protobuf.Timestamp
	4,  // 3: gcommon.v1.queue.RestoreQueueRequest.options:type_name -> gcommon.v1.queue.RestoreOptions
	7,  // 4: gcommon.v1.queue.RestoreQueueRequest.metadata:type_name -> gcommon.v1.queue.RestoreQueueRequest.MetadataEntry
	8,  // 5: gcommon.v1.queue.BackupSource.credentials:type_name -> gcommon.v1.queue.BackupSource.CredentialsEntry
	12, // 6: gcommon.v1.queue.BackupSource.backup_timestamp:type_name -> google.protobuf.Timestamp
	2,  // 7: gcommon.v1.queue.BackupSource.original_queue:type_name -> gcommon.v1.queue.OriginalQueueInfo
	3,  // 8: gcommon.v1.queue.BackupSource.encryption:type_name -> gcommon.v1.queue.EncryptionInfo
	9,  // 9: gcommon.v1.queue.OriginalQueueInfo.config_snapshot:type_name -> gcommon.v1.queue.OriginalQueueInfo.ConfigSnapshotEntry
	12, // 10: gcommon.v1.queue.OriginalQueueInfo.backup_point:type_name -> google.protobuf.Timestamp
	13, // 11: gcommon.v1.queue.RestoreOptions.offset_range:type_name -> gcommon.v1.queue.OffsetRange
	14, // 12: gcommon.v1.queue.RestoreOptions.time_range:type_name -> gcommon.v1.queue.TimeRange
	5,  // 13: gcommon.v1.queue.RestoreOptions.filter_criteria:type_name -> gcommon.v1.queue.FilterCriteria
	6,  // 14: gcommon.v1.queue.RestoreOptions.performance:type_name -> gcommon.v1.queue.PerformanceOptions
	10, // 15: gcommon.v1.queue.FilterCriteria.header_filters:type_name -> gcommon.v1.queue.FilterCriteria.HeaderFiltersEntry
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_restore_queue_request_proto_init() }
func file_pkg_queue_proto_restore_queue_request_proto_init() {
	if File_pkg_queue_proto_restore_queue_request_proto != nil {
		return
	}
	file_pkg_queue_proto_restore_config_proto_init()
	file_pkg_queue_proto_restore_queue_response_proto_init()
	file_pkg_queue_proto_time_range_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_restore_queue_request_proto_rawDesc), len(file_pkg_queue_proto_restore_queue_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_restore_queue_request_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_restore_queue_request_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_restore_queue_request_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_restore_queue_request_proto = out.File
	file_pkg_queue_proto_restore_queue_request_proto_goTypes = nil
	file_pkg_queue_proto_restore_queue_request_proto_depIdxs = nil
}
