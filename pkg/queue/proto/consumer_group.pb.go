// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/consumer_group.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Rebalance strategy for consumer group changes
type RebalanceStrategy int32

const (
	RebalanceStrategy_REBALANCE_STRATEGY_UNSPECIFIED RebalanceStrategy = 0
	RebalanceStrategy_REBALANCE_STRATEGY_EAGER       RebalanceStrategy = 1 // Stop all consumers, then reassign
	RebalanceStrategy_REBALANCE_STRATEGY_COOPERATIVE RebalanceStrategy = 2 // Incremental cooperative rebalancing
	RebalanceStrategy_REBALANCE_STRATEGY_STATIC      RebalanceStrategy = 3 // Static assignment (no rebalancing)
)

// Enum value maps for RebalanceStrategy.
var (
	RebalanceStrategy_name = map[int32]string{
		0: "REBALANCE_STRATEGY_UNSPECIFIED",
		1: "REBALANCE_STRATEGY_EAGER",
		2: "REBALANCE_STRATEGY_COOPERATIVE",
		3: "REBALANCE_STRATEGY_STATIC",
	}
	RebalanceStrategy_value = map[string]int32{
		"REBALANCE_STRATEGY_UNSPECIFIED": 0,
		"REBALANCE_STRATEGY_EAGER":       1,
		"REBALANCE_STRATEGY_COOPERATIVE": 2,
		"REBALANCE_STRATEGY_STATIC":      3,
	}
)

func (x RebalanceStrategy) Enum() *RebalanceStrategy {
	p := new(RebalanceStrategy)
	*p = x
	return p
}

func (x RebalanceStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RebalanceStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_queue_proto_consumer_group_proto_enumTypes[0].Descriptor()
}

func (RebalanceStrategy) Type() protoreflect.EnumType {
	return &file_pkg_queue_proto_consumer_group_proto_enumTypes[0]
}

func (x RebalanceStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RebalanceStrategy.Descriptor instead.
func (RebalanceStrategy) EnumDescriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{0}
}

// Offset reset strategy for new consumers
type OffsetResetStrategy int32

const (
	OffsetResetStrategy_OFFSET_RESET_STRATEGY_UNSPECIFIED OffsetResetStrategy = 0
	OffsetResetStrategy_OFFSET_RESET_STRATEGY_EARLIEST    OffsetResetStrategy = 1 // Start from earliest available offset
	OffsetResetStrategy_OFFSET_RESET_STRATEGY_LATEST      OffsetResetStrategy = 2 // Start from latest offset
	OffsetResetStrategy_OFFSET_RESET_STRATEGY_NONE        OffsetResetStrategy = 3 // Fail if no committed offset
	OffsetResetStrategy_OFFSET_RESET_STRATEGY_TIMESTAMP   OffsetResetStrategy = 4 // Start from specific timestamp
)

// Enum value maps for OffsetResetStrategy.
var (
	OffsetResetStrategy_name = map[int32]string{
		0: "OFFSET_RESET_STRATEGY_UNSPECIFIED",
		1: "OFFSET_RESET_STRATEGY_EARLIEST",
		2: "OFFSET_RESET_STRATEGY_LATEST",
		3: "OFFSET_RESET_STRATEGY_NONE",
		4: "OFFSET_RESET_STRATEGY_TIMESTAMP",
	}
	OffsetResetStrategy_value = map[string]int32{
		"OFFSET_RESET_STRATEGY_UNSPECIFIED": 0,
		"OFFSET_RESET_STRATEGY_EARLIEST":    1,
		"OFFSET_RESET_STRATEGY_LATEST":      2,
		"OFFSET_RESET_STRATEGY_NONE":        3,
		"OFFSET_RESET_STRATEGY_TIMESTAMP":   4,
	}
)

func (x OffsetResetStrategy) Enum() *OffsetResetStrategy {
	p := new(OffsetResetStrategy)
	*p = x
	return p
}

func (x OffsetResetStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OffsetResetStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_queue_proto_consumer_group_proto_enumTypes[1].Descriptor()
}

func (OffsetResetStrategy) Type() protoreflect.EnumType {
	return &file_pkg_queue_proto_consumer_group_proto_enumTypes[1]
}

func (x OffsetResetStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OffsetResetStrategy.Descriptor instead.
func (OffsetResetStrategy) EnumDescriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{1}
}

// Consumer group state
type ConsumerGroupState int32

const (
	ConsumerGroupState_CONSUMER_GROUP_STATE_UNSPECIFIED          ConsumerGroupState = 0
	ConsumerGroupState_CONSUMER_GROUP_STATE_STABLE               ConsumerGroupState = 1 // Group is stable with assigned partitions
	ConsumerGroupState_CONSUMER_GROUP_STATE_PREPARING_REBALANCE  ConsumerGroupState = 2 // Preparing for rebalance
	ConsumerGroupState_CONSUMER_GROUP_STATE_COMPLETING_REBALANCE ConsumerGroupState = 3 // Completing rebalance operation
	ConsumerGroupState_CONSUMER_GROUP_STATE_DEAD                 ConsumerGroupState = 4 // Group has no active consumers
	ConsumerGroupState_CONSUMER_GROUP_STATE_EMPTY                ConsumerGroupState = 5 // Group exists but no consumers
)

// Enum value maps for ConsumerGroupState.
var (
	ConsumerGroupState_name = map[int32]string{
		0: "CONSUMER_GROUP_STATE_UNSPECIFIED",
		1: "CONSUMER_GROUP_STATE_STABLE",
		2: "CONSUMER_GROUP_STATE_PREPARING_REBALANCE",
		3: "CONSUMER_GROUP_STATE_COMPLETING_REBALANCE",
		4: "CONSUMER_GROUP_STATE_DEAD",
		5: "CONSUMER_GROUP_STATE_EMPTY",
	}
	ConsumerGroupState_value = map[string]int32{
		"CONSUMER_GROUP_STATE_UNSPECIFIED":          0,
		"CONSUMER_GROUP_STATE_STABLE":               1,
		"CONSUMER_GROUP_STATE_PREPARING_REBALANCE":  2,
		"CONSUMER_GROUP_STATE_COMPLETING_REBALANCE": 3,
		"CONSUMER_GROUP_STATE_DEAD":                 4,
		"CONSUMER_GROUP_STATE_EMPTY":                5,
	}
)

func (x ConsumerGroupState) Enum() *ConsumerGroupState {
	p := new(ConsumerGroupState)
	*p = x
	return p
}

func (x ConsumerGroupState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsumerGroupState) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_queue_proto_consumer_group_proto_enumTypes[2].Descriptor()
}

func (ConsumerGroupState) Type() protoreflect.EnumType {
	return &file_pkg_queue_proto_consumer_group_proto_enumTypes[2]
}

func (x ConsumerGroupState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsumerGroupState.Descriptor instead.
func (ConsumerGroupState) EnumDescriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{2}
}

// Coordinator state
type CoordinatorState int32

const (
	CoordinatorState_COORDINATOR_STATE_UNSPECIFIED     CoordinatorState = 0
	CoordinatorState_COORDINATOR_STATE_ACTIVE          CoordinatorState = 1 // Coordinator is active
	CoordinatorState_COORDINATOR_STATE_LOADING         CoordinatorState = 2 // Coordinator is loading metadata
	CoordinatorState_COORDINATOR_STATE_NOT_COORDINATOR CoordinatorState = 3 // Node is not the coordinator
)

// Enum value maps for CoordinatorState.
var (
	CoordinatorState_name = map[int32]string{
		0: "COORDINATOR_STATE_UNSPECIFIED",
		1: "COORDINATOR_STATE_ACTIVE",
		2: "COORDINATOR_STATE_LOADING",
		3: "COORDINATOR_STATE_NOT_COORDINATOR",
	}
	CoordinatorState_value = map[string]int32{
		"COORDINATOR_STATE_UNSPECIFIED":     0,
		"COORDINATOR_STATE_ACTIVE":          1,
		"COORDINATOR_STATE_LOADING":         2,
		"COORDINATOR_STATE_NOT_COORDINATOR": 3,
	}
)

func (x CoordinatorState) Enum() *CoordinatorState {
	p := new(CoordinatorState)
	*p = x
	return p
}

func (x CoordinatorState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoordinatorState) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_queue_proto_consumer_group_proto_enumTypes[3].Descriptor()
}

func (CoordinatorState) Type() protoreflect.EnumType {
	return &file_pkg_queue_proto_consumer_group_proto_enumTypes[3]
}

func (x CoordinatorState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoordinatorState.Descriptor instead.
func (CoordinatorState) EnumDescriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{3}
}

// ConsumerGroup represents a group of consumers that coordinate message consumption
type ConsumerGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the consumer group
	GroupId *string `protobuf:"bytes,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	// Group name (human-readable)
	GroupName *string `protobuf:"bytes,2,opt,name=group_name,json=groupName" json:"group_name,omitempty"`
	// Topic or queue this group is consuming from
	Topic *string `protobuf:"bytes,3,opt,name=topic" json:"topic,omitempty"`
	// Consumer group configuration
	Config *ConsumerGroupConfig `protobuf:"bytes,4,opt,name=config" json:"config,omitempty"`
	// Current group state
	State *ConsumerGroupState `protobuf:"varint,5,opt,name=state,enum=gcommon.v1.queue.ConsumerGroupState" json:"state,omitempty"`
	// List of active consumers in the group
	Consumers []*Consumer `protobuf:"bytes,6,rep,name=consumers" json:"consumers,omitempty"`
	// Partition assignments
	PartitionAssignments []*PartitionAssignment `protobuf:"bytes,7,rep,name=partition_assignments,json=partitionAssignments" json:"partition_assignments,omitempty"`
	// Group coordinator information
	Coordinator *GroupCoordinator `protobuf:"bytes,8,opt,name=coordinator" json:"coordinator,omitempty"`
	// Consumer group statistics
	Stats *ConsumerGroupStats `protobuf:"bytes,9,opt,name=stats" json:"stats,omitempty"`
	// Group metadata
	Metadata map[string]string `protobuf:"bytes,10,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Creation timestamp
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last updated timestamp
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerGroup) Reset() {
	*x = ConsumerGroup{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerGroup) ProtoMessage() {}

func (x *ConsumerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerGroup.ProtoReflect.Descriptor instead.
func (*ConsumerGroup) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{0}
}

func (x *ConsumerGroup) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *ConsumerGroup) GetGroupName() string {
	if x != nil && x.GroupName != nil {
		return *x.GroupName
	}
	return ""
}

func (x *ConsumerGroup) GetTopic() string {
	if x != nil && x.Topic != nil {
		return *x.Topic
	}
	return ""
}

func (x *ConsumerGroup) GetConfig() *ConsumerGroupConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConsumerGroup) GetState() ConsumerGroupState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ConsumerGroupState_CONSUMER_GROUP_STATE_UNSPECIFIED
}

func (x *ConsumerGroup) GetConsumers() []*Consumer {
	if x != nil {
		return x.Consumers
	}
	return nil
}

func (x *ConsumerGroup) GetPartitionAssignments() []*PartitionAssignment {
	if x != nil {
		return x.PartitionAssignments
	}
	return nil
}

func (x *ConsumerGroup) GetCoordinator() *GroupCoordinator {
	if x != nil {
		return x.Coordinator
	}
	return nil
}

func (x *ConsumerGroup) GetStats() *ConsumerGroupStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ConsumerGroup) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ConsumerGroup) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ConsumerGroup) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Consumer group configuration
type ConsumerGroupConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Load balancing strategy for partition assignment
	LoadBalancingStrategy *LoadBalancingStrategy `protobuf:"varint,1,opt,name=load_balancing_strategy,json=loadBalancingStrategy,enum=gcommon.v1.queue.LoadBalancingStrategy" json:"load_balancing_strategy,omitempty"`
	// Rebalance strategy when consumers join/leave
	RebalanceStrategy *RebalanceStrategy `protobuf:"varint,2,opt,name=rebalance_strategy,json=rebalanceStrategy,enum=gcommon.v1.queue.RebalanceStrategy" json:"rebalance_strategy,omitempty"`
	// Session timeout for consumer heartbeats (milliseconds)
	SessionTimeoutMs *int32 `protobuf:"varint,3,opt,name=session_timeout_ms,json=sessionTimeoutMs" json:"session_timeout_ms,omitempty"`
	// Heartbeat interval (milliseconds)
	HeartbeatIntervalMs *int32 `protobuf:"varint,4,opt,name=heartbeat_interval_ms,json=heartbeatIntervalMs" json:"heartbeat_interval_ms,omitempty"`
	// Maximum poll interval (milliseconds)
	MaxPollIntervalMs *int32 `protobuf:"varint,5,opt,name=max_poll_interval_ms,json=maxPollIntervalMs" json:"max_poll_interval_ms,omitempty"`
	// Auto-commit configuration
	AutoCommit *AutoCommitConfig `protobuf:"bytes,6,opt,name=auto_commit,json=autoCommit" json:"auto_commit,omitempty"`
	// Offset reset strategy for new consumers
	OffsetResetStrategy *OffsetResetStrategy `protobuf:"varint,7,opt,name=offset_reset_strategy,json=offsetResetStrategy,enum=gcommon.v1.queue.OffsetResetStrategy" json:"offset_reset_strategy,omitempty"`
	// Maximum number of consumers allowed in the group
	MaxConsumers *int32 `protobuf:"varint,8,opt,name=max_consumers,json=maxConsumers" json:"max_consumers,omitempty"`
	// Enable exactly-once semantics
	ExactlyOnceEnabled *bool `protobuf:"varint,9,opt,name=exactly_once_enabled,json=exactlyOnceEnabled" json:"exactly_once_enabled,omitempty"`
	// Dead letter queue configuration
	DlqConfig     *DeadLetterQueueConfig `protobuf:"bytes,10,opt,name=dlq_config,json=dlqConfig" json:"dlq_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerGroupConfig) Reset() {
	*x = ConsumerGroupConfig{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerGroupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerGroupConfig) ProtoMessage() {}

func (x *ConsumerGroupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerGroupConfig.ProtoReflect.Descriptor instead.
func (*ConsumerGroupConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{1}
}

func (x *ConsumerGroupConfig) GetLoadBalancingStrategy() LoadBalancingStrategy {
	if x != nil && x.LoadBalancingStrategy != nil {
		return *x.LoadBalancingStrategy
	}
	return LoadBalancingStrategy_LOAD_BALANCING_STRATEGY_UNSPECIFIED
}

func (x *ConsumerGroupConfig) GetRebalanceStrategy() RebalanceStrategy {
	if x != nil && x.RebalanceStrategy != nil {
		return *x.RebalanceStrategy
	}
	return RebalanceStrategy_REBALANCE_STRATEGY_UNSPECIFIED
}

func (x *ConsumerGroupConfig) GetSessionTimeoutMs() int32 {
	if x != nil && x.SessionTimeoutMs != nil {
		return *x.SessionTimeoutMs
	}
	return 0
}

func (x *ConsumerGroupConfig) GetHeartbeatIntervalMs() int32 {
	if x != nil && x.HeartbeatIntervalMs != nil {
		return *x.HeartbeatIntervalMs
	}
	return 0
}

func (x *ConsumerGroupConfig) GetMaxPollIntervalMs() int32 {
	if x != nil && x.MaxPollIntervalMs != nil {
		return *x.MaxPollIntervalMs
	}
	return 0
}

func (x *ConsumerGroupConfig) GetAutoCommit() *AutoCommitConfig {
	if x != nil {
		return x.AutoCommit
	}
	return nil
}

func (x *ConsumerGroupConfig) GetOffsetResetStrategy() OffsetResetStrategy {
	if x != nil && x.OffsetResetStrategy != nil {
		return *x.OffsetResetStrategy
	}
	return OffsetResetStrategy_OFFSET_RESET_STRATEGY_UNSPECIFIED
}

func (x *ConsumerGroupConfig) GetMaxConsumers() int32 {
	if x != nil && x.MaxConsumers != nil {
		return *x.MaxConsumers
	}
	return 0
}

func (x *ConsumerGroupConfig) GetExactlyOnceEnabled() bool {
	if x != nil && x.ExactlyOnceEnabled != nil {
		return *x.ExactlyOnceEnabled
	}
	return false
}

func (x *ConsumerGroupConfig) GetDlqConfig() *DeadLetterQueueConfig {
	if x != nil {
		return x.DlqConfig
	}
	return nil
}

// Auto-commit configuration
type AutoCommitConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable auto-commit of offsets
	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	// Auto-commit interval (milliseconds)
	IntervalMs *int32 `protobuf:"varint,2,opt,name=interval_ms,json=intervalMs" json:"interval_ms,omitempty"`
	// Commit on message processing completion
	CommitOnCompletion *bool `protobuf:"varint,3,opt,name=commit_on_completion,json=commitOnCompletion" json:"commit_on_completion,omitempty"`
	// Batch size for auto-commit
	BatchSize     *int32 `protobuf:"varint,4,opt,name=batch_size,json=batchSize" json:"batch_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoCommitConfig) Reset() {
	*x = AutoCommitConfig{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoCommitConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoCommitConfig) ProtoMessage() {}

func (x *AutoCommitConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoCommitConfig.ProtoReflect.Descriptor instead.
func (*AutoCommitConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{2}
}

func (x *AutoCommitConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *AutoCommitConfig) GetIntervalMs() int32 {
	if x != nil && x.IntervalMs != nil {
		return *x.IntervalMs
	}
	return 0
}

func (x *AutoCommitConfig) GetCommitOnCompletion() bool {
	if x != nil && x.CommitOnCompletion != nil {
		return *x.CommitOnCompletion
	}
	return false
}

func (x *AutoCommitConfig) GetBatchSize() int32 {
	if x != nil && x.BatchSize != nil {
		return *x.BatchSize
	}
	return 0
}

// Retry delay configuration
type RetryDelayConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Initial retry delay (milliseconds)
	InitialDelayMs *int32 `protobuf:"varint,1,opt,name=initial_delay_ms,json=initialDelayMs" json:"initial_delay_ms,omitempty"`
	// Maximum retry delay (milliseconds)
	MaxDelayMs *int32 `protobuf:"varint,2,opt,name=max_delay_ms,json=maxDelayMs" json:"max_delay_ms,omitempty"`
	// Backoff multiplier for exponential backoff
	BackoffMultiplier *float64 `protobuf:"fixed64,3,opt,name=backoff_multiplier,json=backoffMultiplier" json:"backoff_multiplier,omitempty"`
	// Enable jitter for retry delays
	JitterEnabled *bool `protobuf:"varint,4,opt,name=jitter_enabled,json=jitterEnabled" json:"jitter_enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryDelayConfig) Reset() {
	*x = RetryDelayConfig{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryDelayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryDelayConfig) ProtoMessage() {}

func (x *RetryDelayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryDelayConfig.ProtoReflect.Descriptor instead.
func (*RetryDelayConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{3}
}

func (x *RetryDelayConfig) GetInitialDelayMs() int32 {
	if x != nil && x.InitialDelayMs != nil {
		return *x.InitialDelayMs
	}
	return 0
}

func (x *RetryDelayConfig) GetMaxDelayMs() int32 {
	if x != nil && x.MaxDelayMs != nil {
		return *x.MaxDelayMs
	}
	return 0
}

func (x *RetryDelayConfig) GetBackoffMultiplier() float64 {
	if x != nil && x.BackoffMultiplier != nil {
		return *x.BackoffMultiplier
	}
	return 0
}

func (x *RetryDelayConfig) GetJitterEnabled() bool {
	if x != nil && x.JitterEnabled != nil {
		return *x.JitterEnabled
	}
	return false
}

// Individual consumer in the group
type Consumer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique consumer identifier
	ConsumerId *string `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId" json:"consumer_id,omitempty"`
	// Consumer client information
	ClientInfo *ConsumerClient `protobuf:"bytes,2,opt,name=client_info,json=clientInfo" json:"client_info,omitempty"`
	// Consumer state
	State *ConsumerState `protobuf:"varint,3,opt,name=state,enum=gcommon.v1.queue.ConsumerState" json:"state,omitempty"`
	// Assigned partitions
	AssignedPartitions []int32 `protobuf:"varint,4,rep,packed,name=assigned_partitions,json=assignedPartitions" json:"assigned_partitions,omitempty"`
	// Consumer configuration
	Config *ConsumerConfig `protobuf:"bytes,5,opt,name=config" json:"config,omitempty"`
	// Consumer statistics
	Stats *ConsumerStats `protobuf:"bytes,6,opt,name=stats" json:"stats,omitempty"`
	// Last heartbeat timestamp
	LastHeartbeat *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_heartbeat,json=lastHeartbeat" json:"last_heartbeat,omitempty"`
	// Join timestamp
	JoinedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=joined_at,json=joinedAt" json:"joined_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Consumer) Reset() {
	*x = Consumer{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Consumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consumer) ProtoMessage() {}

func (x *Consumer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consumer.ProtoReflect.Descriptor instead.
func (*Consumer) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{4}
}

func (x *Consumer) GetConsumerId() string {
	if x != nil && x.ConsumerId != nil {
		return *x.ConsumerId
	}
	return ""
}

func (x *Consumer) GetClientInfo() *ConsumerClient {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *Consumer) GetState() ConsumerState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ConsumerState_CONSUMER_STATE_UNSPECIFIED
}

func (x *Consumer) GetAssignedPartitions() []int32 {
	if x != nil {
		return x.AssignedPartitions
	}
	return nil
}

func (x *Consumer) GetConfig() *ConsumerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Consumer) GetStats() *ConsumerStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Consumer) GetLastHeartbeat() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartbeat
	}
	return nil
}

func (x *Consumer) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

// Consumer client information
type ConsumerClient struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Client ID
	ClientId *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	// Client host/IP address
	ClientHost *string `protobuf:"bytes,2,opt,name=client_host,json=clientHost" json:"client_host,omitempty"`
	// Client application name
	ClientApp *string `protobuf:"bytes,3,opt,name=client_app,json=clientApp" json:"client_app,omitempty"`
	// Client version
	ClientVersion *string `protobuf:"bytes,4,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	// Client rack (for rack-aware assignment)
	ClientRack    *string `protobuf:"bytes,5,opt,name=client_rack,json=clientRack" json:"client_rack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerClient) Reset() {
	*x = ConsumerClient{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerClient) ProtoMessage() {}

func (x *ConsumerClient) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerClient.ProtoReflect.Descriptor instead.
func (*ConsumerClient) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{5}
}

func (x *ConsumerClient) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *ConsumerClient) GetClientHost() string {
	if x != nil && x.ClientHost != nil {
		return *x.ClientHost
	}
	return ""
}

func (x *ConsumerClient) GetClientApp() string {
	if x != nil && x.ClientApp != nil {
		return *x.ClientApp
	}
	return ""
}

func (x *ConsumerClient) GetClientVersion() string {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return ""
}

func (x *ConsumerClient) GetClientRack() string {
	if x != nil && x.ClientRack != nil {
		return *x.ClientRack
	}
	return ""
}

// Individual consumer configuration
type ConsumerConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Consumer timeout (milliseconds)
	TimeoutMs *int32 `protobuf:"varint,1,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"`
	// Maximum messages to poll at once
	MaxPollRecords *int32 `protobuf:"varint,2,opt,name=max_poll_records,json=maxPollRecords" json:"max_poll_records,omitempty"`
	// Fetch minimum bytes
	FetchMinBytes *int32 `protobuf:"varint,3,opt,name=fetch_min_bytes,json=fetchMinBytes" json:"fetch_min_bytes,omitempty"`
	// Fetch maximum wait time (milliseconds)
	FetchMaxWaitMs *int32 `protobuf:"varint,4,opt,name=fetch_max_wait_ms,json=fetchMaxWaitMs" json:"fetch_max_wait_ms,omitempty"`
	// Enable auto-offset reset
	AutoOffsetReset *bool `protobuf:"varint,5,opt,name=auto_offset_reset,json=autoOffsetReset" json:"auto_offset_reset,omitempty"`
	// Consumer priority (for priority-based assignment)
	Priority      *int32 `protobuf:"varint,6,opt,name=priority" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerConfig) Reset() {
	*x = ConsumerConfig{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerConfig) ProtoMessage() {}

func (x *ConsumerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerConfig.ProtoReflect.Descriptor instead.
func (*ConsumerConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{6}
}

func (x *ConsumerConfig) GetTimeoutMs() int32 {
	if x != nil && x.TimeoutMs != nil {
		return *x.TimeoutMs
	}
	return 0
}

func (x *ConsumerConfig) GetMaxPollRecords() int32 {
	if x != nil && x.MaxPollRecords != nil {
		return *x.MaxPollRecords
	}
	return 0
}

func (x *ConsumerConfig) GetFetchMinBytes() int32 {
	if x != nil && x.FetchMinBytes != nil {
		return *x.FetchMinBytes
	}
	return 0
}

func (x *ConsumerConfig) GetFetchMaxWaitMs() int32 {
	if x != nil && x.FetchMaxWaitMs != nil {
		return *x.FetchMaxWaitMs
	}
	return 0
}

func (x *ConsumerConfig) GetAutoOffsetReset() bool {
	if x != nil && x.AutoOffsetReset != nil {
		return *x.AutoOffsetReset
	}
	return false
}

func (x *ConsumerConfig) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

// Partition assignment for the group
type PartitionAssignment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Partition ID
	PartitionId *int32 `protobuf:"varint,1,opt,name=partition_id,json=partitionId" json:"partition_id,omitempty"`
	// Assigned consumer ID
	ConsumerId *string `protobuf:"bytes,2,opt,name=consumer_id,json=consumerId" json:"consumer_id,omitempty"`
	// Current offset position
	CurrentOffset *int64 `protobuf:"varint,3,opt,name=current_offset,json=currentOffset" json:"current_offset,omitempty"`
	// Committed offset
	CommittedOffset *int64 `protobuf:"varint,4,opt,name=committed_offset,json=committedOffset" json:"committed_offset,omitempty"`
	// High water mark (latest available offset)
	HighWaterMark *int64 `protobuf:"varint,5,opt,name=high_water_mark,json=highWaterMark" json:"high_water_mark,omitempty"`
	// Assignment timestamp
	AssignedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=assigned_at,json=assignedAt" json:"assigned_at,omitempty"`
	// Last commit timestamp
	LastCommit    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_commit,json=lastCommit" json:"last_commit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionAssignment) Reset() {
	*x = PartitionAssignment{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionAssignment) ProtoMessage() {}

func (x *PartitionAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionAssignment.ProtoReflect.Descriptor instead.
func (*PartitionAssignment) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{7}
}

func (x *PartitionAssignment) GetPartitionId() int32 {
	if x != nil && x.PartitionId != nil {
		return *x.PartitionId
	}
	return 0
}

func (x *PartitionAssignment) GetConsumerId() string {
	if x != nil && x.ConsumerId != nil {
		return *x.ConsumerId
	}
	return ""
}

func (x *PartitionAssignment) GetCurrentOffset() int64 {
	if x != nil && x.CurrentOffset != nil {
		return *x.CurrentOffset
	}
	return 0
}

func (x *PartitionAssignment) GetCommittedOffset() int64 {
	if x != nil && x.CommittedOffset != nil {
		return *x.CommittedOffset
	}
	return 0
}

func (x *PartitionAssignment) GetHighWaterMark() int64 {
	if x != nil && x.HighWaterMark != nil {
		return *x.HighWaterMark
	}
	return 0
}

func (x *PartitionAssignment) GetAssignedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AssignedAt
	}
	return nil
}

func (x *PartitionAssignment) GetLastCommit() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCommit
	}
	return nil
}

// Group coordinator information
type GroupCoordinator struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Coordinator node ID
	NodeId *string `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// Coordinator host
	Host *string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	// Coordinator port
	Port *int32 `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	// Coordinator state
	State *CoordinatorState `protobuf:"varint,4,opt,name=state,enum=gcommon.v1.queue.CoordinatorState" json:"state,omitempty"`
	// Leadership epoch
	Epoch         *int64 `protobuf:"varint,5,opt,name=epoch" json:"epoch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupCoordinator) Reset() {
	*x = GroupCoordinator{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupCoordinator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCoordinator) ProtoMessage() {}

func (x *GroupCoordinator) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCoordinator.ProtoReflect.Descriptor instead.
func (*GroupCoordinator) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{8}
}

func (x *GroupCoordinator) GetNodeId() string {
	if x != nil && x.NodeId != nil {
		return *x.NodeId
	}
	return ""
}

func (x *GroupCoordinator) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *GroupCoordinator) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *GroupCoordinator) GetState() CoordinatorState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return CoordinatorState_COORDINATOR_STATE_UNSPECIFIED
}

func (x *GroupCoordinator) GetEpoch() int64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

// Consumer group statistics
type ConsumerGroupStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total number of active consumers
	ActiveConsumers *int32 `protobuf:"varint,1,opt,name=active_consumers,json=activeConsumers" json:"active_consumers,omitempty"`
	// Total number of assigned partitions
	AssignedPartitions *int32 `protobuf:"varint,2,opt,name=assigned_partitions,json=assignedPartitions" json:"assigned_partitions,omitempty"`
	// Total messages consumed by the group
	TotalMessagesConsumed *int64 `protobuf:"varint,3,opt,name=total_messages_consumed,json=totalMessagesConsumed" json:"total_messages_consumed,omitempty"`
	// Total bytes consumed by the group
	TotalBytesConsumed *int64 `protobuf:"varint,4,opt,name=total_bytes_consumed,json=totalBytesConsumed" json:"total_bytes_consumed,omitempty"`
	// Average group consumption rate (messages/second)
	GroupConsumptionRate *float64 `protobuf:"fixed64,5,opt,name=group_consumption_rate,json=groupConsumptionRate" json:"group_consumption_rate,omitempty"`
	// Total group lag
	TotalLag *int64 `protobuf:"varint,6,opt,name=total_lag,json=totalLag" json:"total_lag,omitempty"`
	// Rebalance statistics
	RebalanceStats *RebalanceStats `protobuf:"bytes,7,opt,name=rebalance_stats,json=rebalanceStats" json:"rebalance_stats,omitempty"`
	// Error statistics for the consumer group
	ErrorStats    *ConsumerErrorStats `protobuf:"bytes,8,opt,name=error_stats,json=errorStats" json:"error_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerGroupStats) Reset() {
	*x = ConsumerGroupStats{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerGroupStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerGroupStats) ProtoMessage() {}

func (x *ConsumerGroupStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerGroupStats.ProtoReflect.Descriptor instead.
func (*ConsumerGroupStats) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{9}
}

func (x *ConsumerGroupStats) GetActiveConsumers() int32 {
	if x != nil && x.ActiveConsumers != nil {
		return *x.ActiveConsumers
	}
	return 0
}

func (x *ConsumerGroupStats) GetAssignedPartitions() int32 {
	if x != nil && x.AssignedPartitions != nil {
		return *x.AssignedPartitions
	}
	return 0
}

func (x *ConsumerGroupStats) GetTotalMessagesConsumed() int64 {
	if x != nil && x.TotalMessagesConsumed != nil {
		return *x.TotalMessagesConsumed
	}
	return 0
}

func (x *ConsumerGroupStats) GetTotalBytesConsumed() int64 {
	if x != nil && x.TotalBytesConsumed != nil {
		return *x.TotalBytesConsumed
	}
	return 0
}

func (x *ConsumerGroupStats) GetGroupConsumptionRate() float64 {
	if x != nil && x.GroupConsumptionRate != nil {
		return *x.GroupConsumptionRate
	}
	return 0
}

func (x *ConsumerGroupStats) GetTotalLag() int64 {
	if x != nil && x.TotalLag != nil {
		return *x.TotalLag
	}
	return 0
}

func (x *ConsumerGroupStats) GetRebalanceStats() *RebalanceStats {
	if x != nil {
		return x.RebalanceStats
	}
	return nil
}

func (x *ConsumerGroupStats) GetErrorStats() *ConsumerErrorStats {
	if x != nil {
		return x.ErrorStats
	}
	return nil
}

// Rebalance statistics
type RebalanceStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total number of rebalances
	TotalRebalances *int64 `protobuf:"varint,1,opt,name=total_rebalances,json=totalRebalances" json:"total_rebalances,omitempty"`
	// Last rebalance timestamp
	LastRebalance *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_rebalance,json=lastRebalance" json:"last_rebalance,omitempty"`
	// Average rebalance duration (milliseconds)
	AvgRebalanceDurationMs *int64 `protobuf:"varint,3,opt,name=avg_rebalance_duration_ms,json=avgRebalanceDurationMs" json:"avg_rebalance_duration_ms,omitempty"`
	// Failed rebalances
	FailedRebalances *int64 `protobuf:"varint,4,opt,name=failed_rebalances,json=failedRebalances" json:"failed_rebalances,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RebalanceStats) Reset() {
	*x = RebalanceStats{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebalanceStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceStats) ProtoMessage() {}

func (x *RebalanceStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebalanceStats.ProtoReflect.Descriptor instead.
func (*RebalanceStats) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{10}
}

func (x *RebalanceStats) GetTotalRebalances() int64 {
	if x != nil && x.TotalRebalances != nil {
		return *x.TotalRebalances
	}
	return 0
}

func (x *RebalanceStats) GetLastRebalance() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRebalance
	}
	return nil
}

func (x *RebalanceStats) GetAvgRebalanceDurationMs() int64 {
	if x != nil && x.AvgRebalanceDurationMs != nil {
		return *x.AvgRebalanceDurationMs
	}
	return 0
}

func (x *RebalanceStats) GetFailedRebalances() int64 {
	if x != nil && x.FailedRebalances != nil {
		return *x.FailedRebalances
	}
	return 0
}

// Consumer group error statistics
type ConsumerErrorStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total processing errors
	TotalErrors *int64 `protobuf:"varint,1,opt,name=total_errors,json=totalErrors" json:"total_errors,omitempty"`
	// Connection errors
	ConnectionErrors *int64 `protobuf:"varint,2,opt,name=connection_errors,json=connectionErrors" json:"connection_errors,omitempty"`
	// Timeout errors
	TimeoutErrors *int64 `protobuf:"varint,3,opt,name=timeout_errors,json=timeoutErrors" json:"timeout_errors,omitempty"`
	// Serialization errors
	SerializationErrors *int64 `protobuf:"varint,4,opt,name=serialization_errors,json=serializationErrors" json:"serialization_errors,omitempty"`
	// Last error timestamp
	LastError     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_error,json=lastError" json:"last_error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerErrorStats) Reset() {
	*x = ConsumerErrorStats{}
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerErrorStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerErrorStats) ProtoMessage() {}

func (x *ConsumerErrorStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_consumer_group_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerErrorStats.ProtoReflect.Descriptor instead.
func (*ConsumerErrorStats) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_consumer_group_proto_rawDescGZIP(), []int{11}
}

func (x *ConsumerErrorStats) GetTotalErrors() int64 {
	if x != nil && x.TotalErrors != nil {
		return *x.TotalErrors
	}
	return 0
}

func (x *ConsumerErrorStats) GetConnectionErrors() int64 {
	if x != nil && x.ConnectionErrors != nil {
		return *x.ConnectionErrors
	}
	return 0
}

func (x *ConsumerErrorStats) GetTimeoutErrors() int64 {
	if x != nil && x.TimeoutErrors != nil {
		return *x.TimeoutErrors
	}
	return 0
}

func (x *ConsumerErrorStats) GetSerializationErrors() int64 {
	if x != nil && x.SerializationErrors != nil {
		return *x.SerializationErrors
	}
	return 0
}

func (x *ConsumerErrorStats) GetLastError() *timestamppb.Timestamp {
	if x != nil {
		return x.LastError
	}
	return nil
}

var File_pkg_queue_proto_consumer_group_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_consumer_group_proto_rawDesc = "" +
	"\n" +
	"$pkg/queue/proto/consumer_group.proto\x12\x10gcommon.v1.queue\x1a$pkg/queue/proto/consumer_stats.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a-pkg/queue/proto/load_balancing_strategy.proto\x1a'pkg/queue/proto/subscribe_request.proto\x1a$pkg/queue/proto/consumer_state.proto\"\xf0\x05\n" +
	"\rConsumerGroup\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x1d\n" +
	"\n" +
	"group_name\x18\x02 \x01(\tR\tgroupName\x12\x14\n" +
	"\x05topic\x18\x03 \x01(\tR\x05topic\x12=\n" +
	"\x06config\x18\x04 \x01(\v2%.gcommon.v1.queue.ConsumerGroupConfigR\x06config\x12:\n" +
	"\x05state\x18\x05 \x01(\x0e2$.gcommon.v1.queue.ConsumerGroupStateR\x05state\x128\n" +
	"\tconsumers\x18\x06 \x03(\v2\x1a.gcommon.v1.queue.ConsumerR\tconsumers\x12Z\n" +
	"\x15partition_assignments\x18\a \x03(\v2%.gcommon.v1.queue.PartitionAssignmentR\x14partitionAssignments\x12D\n" +
	"\vcoordinator\x18\b \x01(\v2\".gcommon.v1.queue.GroupCoordinatorR\vcoordinator\x12:\n" +
	"\x05stats\x18\t \x01(\v2$.gcommon.v1.queue.ConsumerGroupStatsR\x05stats\x12I\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2-.gcommon.v1.queue.ConsumerGroup.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9c\x05\n" +
	"\x13ConsumerGroupConfig\x12_\n" +
	"\x17load_balancing_strategy\x18\x01 \x01(\x0e2'.gcommon.v1.queue.LoadBalancingStrategyR\x15loadBalancingStrategy\x12R\n" +
	"\x12rebalance_strategy\x18\x02 \x01(\x0e2#.gcommon.v1.queue.RebalanceStrategyR\x11rebalanceStrategy\x12,\n" +
	"\x12session_timeout_ms\x18\x03 \x01(\x05R\x10sessionTimeoutMs\x122\n" +
	"\x15heartbeat_interval_ms\x18\x04 \x01(\x05R\x13heartbeatIntervalMs\x12/\n" +
	"\x14max_poll_interval_ms\x18\x05 \x01(\x05R\x11maxPollIntervalMs\x12C\n" +
	"\vauto_commit\x18\x06 \x01(\v2\".gcommon.v1.queue.AutoCommitConfigR\n" +
	"autoCommit\x12Y\n" +
	"\x15offset_reset_strategy\x18\a \x01(\x0e2%.gcommon.v1.queue.OffsetResetStrategyR\x13offsetResetStrategy\x12#\n" +
	"\rmax_consumers\x18\b \x01(\x05R\fmaxConsumers\x120\n" +
	"\x14exactly_once_enabled\x18\t \x01(\bR\x12exactlyOnceEnabled\x12F\n" +
	"\n" +
	"dlq_config\x18\n" +
	" \x01(\v2'.gcommon.v1.queue.DeadLetterQueueConfigR\tdlqConfig\"\x9e\x01\n" +
	"\x10AutoCommitConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1f\n" +
	"\vinterval_ms\x18\x02 \x01(\x05R\n" +
	"intervalMs\x120\n" +
	"\x14commit_on_completion\x18\x03 \x01(\bR\x12commitOnCompletion\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x04 \x01(\x05R\tbatchSize\"\xb4\x01\n" +
	"\x10RetryDelayConfig\x12(\n" +
	"\x10initial_delay_ms\x18\x01 \x01(\x05R\x0einitialDelayMs\x12 \n" +
	"\fmax_delay_ms\x18\x02 \x01(\x05R\n" +
	"maxDelayMs\x12-\n" +
	"\x12backoff_multiplier\x18\x03 \x01(\x01R\x11backoffMultiplier\x12%\n" +
	"\x0ejitter_enabled\x18\x04 \x01(\bR\rjitterEnabled\"\xc3\x03\n" +
	"\bConsumer\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\x12A\n" +
	"\vclient_info\x18\x02 \x01(\v2 .gcommon.v1.queue.ConsumerClientR\n" +
	"clientInfo\x125\n" +
	"\x05state\x18\x03 \x01(\x0e2\x1f.gcommon.v1.queue.ConsumerStateR\x05state\x12/\n" +
	"\x13assigned_partitions\x18\x04 \x03(\x05R\x12assignedPartitions\x128\n" +
	"\x06config\x18\x05 \x01(\v2 .gcommon.v1.queue.ConsumerConfigR\x06config\x125\n" +
	"\x05stats\x18\x06 \x01(\v2\x1f.gcommon.v1.queue.ConsumerStatsR\x05stats\x12A\n" +
	"\x0elast_heartbeat\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\rlastHeartbeat\x127\n" +
	"\tjoined_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\bjoinedAt\"\xb5\x01\n" +
	"\x0eConsumerClient\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1f\n" +
	"\vclient_host\x18\x02 \x01(\tR\n" +
	"clientHost\x12\x1d\n" +
	"\n" +
	"client_app\x18\x03 \x01(\tR\tclientApp\x12%\n" +
	"\x0eclient_version\x18\x04 \x01(\tR\rclientVersion\x12\x1f\n" +
	"\vclient_rack\x18\x05 \x01(\tR\n" +
	"clientRack\"\xf4\x01\n" +
	"\x0eConsumerConfig\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x01 \x01(\x05R\ttimeoutMs\x12(\n" +
	"\x10max_poll_records\x18\x02 \x01(\x05R\x0emaxPollRecords\x12&\n" +
	"\x0ffetch_min_bytes\x18\x03 \x01(\x05R\rfetchMinBytes\x12)\n" +
	"\x11fetch_max_wait_ms\x18\x04 \x01(\x05R\x0efetchMaxWaitMs\x12*\n" +
	"\x11auto_offset_reset\x18\x05 \x01(\bR\x0fautoOffsetReset\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\x05R\bpriority\"\xcd\x02\n" +
	"\x13PartitionAssignment\x12!\n" +
	"\fpartition_id\x18\x01 \x01(\x05R\vpartitionId\x12\x1f\n" +
	"\vconsumer_id\x18\x02 \x01(\tR\n" +
	"consumerId\x12%\n" +
	"\x0ecurrent_offset\x18\x03 \x01(\x03R\rcurrentOffset\x12)\n" +
	"\x10committed_offset\x18\x04 \x01(\x03R\x0fcommittedOffset\x12&\n" +
	"\x0fhigh_water_mark\x18\x05 \x01(\x03R\rhighWaterMark\x12;\n" +
	"\vassigned_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"assignedAt\x12;\n" +
	"\vlast_commit\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastCommit\"\xa3\x01\n" +
	"\x10GroupCoordinator\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x12\n" +
	"\x04host\x18\x02 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x128\n" +
	"\x05state\x18\x04 \x01(\x0e2\".gcommon.v1.queue.CoordinatorStateR\x05state\x12\x14\n" +
	"\x05epoch\x18\x05 \x01(\x03R\x05epoch\"\xbf\x03\n" +
	"\x12ConsumerGroupStats\x12)\n" +
	"\x10active_consumers\x18\x01 \x01(\x05R\x0factiveConsumers\x12/\n" +
	"\x13assigned_partitions\x18\x02 \x01(\x05R\x12assignedPartitions\x126\n" +
	"\x17total_messages_consumed\x18\x03 \x01(\x03R\x15totalMessagesConsumed\x120\n" +
	"\x14total_bytes_consumed\x18\x04 \x01(\x03R\x12totalBytesConsumed\x124\n" +
	"\x16group_consumption_rate\x18\x05 \x01(\x01R\x14groupConsumptionRate\x12\x1b\n" +
	"\ttotal_lag\x18\x06 \x01(\x03R\btotalLag\x12I\n" +
	"\x0frebalance_stats\x18\a \x01(\v2 .gcommon.v1.queue.RebalanceStatsR\x0erebalanceStats\x12E\n" +
	"\verror_stats\x18\b \x01(\v2$.gcommon.v1.queue.ConsumerErrorStatsR\n" +
	"errorStats\"\xe6\x01\n" +
	"\x0eRebalanceStats\x12)\n" +
	"\x10total_rebalances\x18\x01 \x01(\x03R\x0ftotalRebalances\x12A\n" +
	"\x0elast_rebalance\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\rlastRebalance\x129\n" +
	"\x19avg_rebalance_duration_ms\x18\x03 \x01(\x03R\x16avgRebalanceDurationMs\x12+\n" +
	"\x11failed_rebalances\x18\x04 \x01(\x03R\x10failedRebalances\"\xf9\x01\n" +
	"\x12ConsumerErrorStats\x12!\n" +
	"\ftotal_errors\x18\x01 \x01(\x03R\vtotalErrors\x12+\n" +
	"\x11connection_errors\x18\x02 \x01(\x03R\x10connectionErrors\x12%\n" +
	"\x0etimeout_errors\x18\x03 \x01(\x03R\rtimeoutErrors\x121\n" +
	"\x14serialization_errors\x18\x04 \x01(\x03R\x13serializationErrors\x129\n" +
	"\n" +
	"last_error\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tlastError*\x98\x01\n" +
	"\x11RebalanceStrategy\x12\"\n" +
	"\x1eREBALANCE_STRATEGY_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18REBALANCE_STRATEGY_EAGER\x10\x01\x12\"\n" +
	"\x1eREBALANCE_STRATEGY_COOPERATIVE\x10\x02\x12\x1d\n" +
	"\x19REBALANCE_STRATEGY_STATIC\x10\x03*\xc7\x01\n" +
	"\x13OffsetResetStrategy\x12%\n" +
	"!OFFSET_RESET_STRATEGY_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eOFFSET_RESET_STRATEGY_EARLIEST\x10\x01\x12 \n" +
	"\x1cOFFSET_RESET_STRATEGY_LATEST\x10\x02\x12\x1e\n" +
	"\x1aOFFSET_RESET_STRATEGY_NONE\x10\x03\x12#\n" +
	"\x1fOFFSET_RESET_STRATEGY_TIMESTAMP\x10\x04*\xf7\x01\n" +
	"\x12ConsumerGroupState\x12$\n" +
	" CONSUMER_GROUP_STATE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bCONSUMER_GROUP_STATE_STABLE\x10\x01\x12,\n" +
	"(CONSUMER_GROUP_STATE_PREPARING_REBALANCE\x10\x02\x12-\n" +
	")CONSUMER_GROUP_STATE_COMPLETING_REBALANCE\x10\x03\x12\x1d\n" +
	"\x19CONSUMER_GROUP_STATE_DEAD\x10\x04\x12\x1e\n" +
	"\x1aCONSUMER_GROUP_STATE_EMPTY\x10\x05*\x99\x01\n" +
	"\x10CoordinatorState\x12!\n" +
	"\x1dCOORDINATOR_STATE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18COORDINATOR_STATE_ACTIVE\x10\x01\x12\x1d\n" +
	"\x19COORDINATOR_STATE_LOADING\x10\x02\x12%\n" +
	"!COORDINATOR_STATE_NOT_COORDINATOR\x10\x03B\xb7\x01\n" +
	"\x14com.gcommon.v1.queueB\x12ConsumerGroupProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_consumer_group_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_consumer_group_proto_rawDescData []byte
)

func file_pkg_queue_proto_consumer_group_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_consumer_group_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_consumer_group_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_consumer_group_proto_rawDesc), len(file_pkg_queue_proto_consumer_group_proto_rawDesc)))
	})
	return file_pkg_queue_proto_consumer_group_proto_rawDescData
}

var file_pkg_queue_proto_consumer_group_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_pkg_queue_proto_consumer_group_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pkg_queue_proto_consumer_group_proto_goTypes = []any{
	(RebalanceStrategy)(0),        // 0: gcommon.v1.queue.RebalanceStrategy
	(OffsetResetStrategy)(0),      // 1: gcommon.v1.queue.OffsetResetStrategy
	(ConsumerGroupState)(0),       // 2: gcommon.v1.queue.ConsumerGroupState
	(CoordinatorState)(0),         // 3: gcommon.v1.queue.CoordinatorState
	(*ConsumerGroup)(nil),         // 4: gcommon.v1.queue.ConsumerGroup
	(*ConsumerGroupConfig)(nil),   // 5: gcommon.v1.queue.ConsumerGroupConfig
	(*AutoCommitConfig)(nil),      // 6: gcommon.v1.queue.AutoCommitConfig
	(*RetryDelayConfig)(nil),      // 7: gcommon.v1.queue.RetryDelayConfig
	(*Consumer)(nil),              // 8: gcommon.v1.queue.Consumer
	(*ConsumerClient)(nil),        // 9: gcommon.v1.queue.ConsumerClient
	(*ConsumerConfig)(nil),        // 10: gcommon.v1.queue.ConsumerConfig
	(*PartitionAssignment)(nil),   // 11: gcommon.v1.queue.PartitionAssignment
	(*GroupCoordinator)(nil),      // 12: gcommon.v1.queue.GroupCoordinator
	(*ConsumerGroupStats)(nil),    // 13: gcommon.v1.queue.ConsumerGroupStats
	(*RebalanceStats)(nil),        // 14: gcommon.v1.queue.RebalanceStats
	(*ConsumerErrorStats)(nil),    // 15: gcommon.v1.queue.ConsumerErrorStats
	nil,                           // 16: gcommon.v1.queue.ConsumerGroup.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 17: google.protobuf.Timestamp
	(LoadBalancingStrategy)(0),    // 18: gcommon.v1.queue.LoadBalancingStrategy
	(*DeadLetterQueueConfig)(nil), // 19: gcommon.v1.queue.DeadLetterQueueConfig
	(ConsumerState)(0),            // 20: gcommon.v1.queue.ConsumerState
	(*ConsumerStats)(nil),         // 21: gcommon.v1.queue.ConsumerStats
}
var file_pkg_queue_proto_consumer_group_proto_depIdxs = []int32{
	5,  // 0: gcommon.v1.queue.ConsumerGroup.config:type_name -> gcommon.v1.queue.ConsumerGroupConfig
	2,  // 1: gcommon.v1.queue.ConsumerGroup.state:type_name -> gcommon.v1.queue.ConsumerGroupState
	8,  // 2: gcommon.v1.queue.ConsumerGroup.consumers:type_name -> gcommon.v1.queue.Consumer
	11, // 3: gcommon.v1.queue.ConsumerGroup.partition_assignments:type_name -> gcommon.v1.queue.PartitionAssignment
	12, // 4: gcommon.v1.queue.ConsumerGroup.coordinator:type_name -> gcommon.v1.queue.GroupCoordinator
	13, // 5: gcommon.v1.queue.ConsumerGroup.stats:type_name -> gcommon.v1.queue.ConsumerGroupStats
	16, // 6: gcommon.v1.queue.ConsumerGroup.metadata:type_name -> gcommon.v1.queue.ConsumerGroup.MetadataEntry
	17, // 7: gcommon.v1.queue.ConsumerGroup.created_at:type_name -> google.protobuf.Timestamp
	17, // 8: gcommon.v1.queue.ConsumerGroup.updated_at:type_name -> google.protobuf.Timestamp
	18, // 9: gcommon.v1.queue.ConsumerGroupConfig.load_balancing_strategy:type_name -> gcommon.v1.queue.LoadBalancingStrategy
	0,  // 10: gcommon.v1.queue.ConsumerGroupConfig.rebalance_strategy:type_name -> gcommon.v1.queue.RebalanceStrategy
	6,  // 11: gcommon.v1.queue.ConsumerGroupConfig.auto_commit:type_name -> gcommon.v1.queue.AutoCommitConfig
	1,  // 12: gcommon.v1.queue.ConsumerGroupConfig.offset_reset_strategy:type_name -> gcommon.v1.queue.OffsetResetStrategy
	19, // 13: gcommon.v1.queue.ConsumerGroupConfig.dlq_config:type_name -> gcommon.v1.queue.DeadLetterQueueConfig
	9,  // 14: gcommon.v1.queue.Consumer.client_info:type_name -> gcommon.v1.queue.ConsumerClient
	20, // 15: gcommon.v1.queue.Consumer.state:type_name -> gcommon.v1.queue.ConsumerState
	10, // 16: gcommon.v1.queue.Consumer.config:type_name -> gcommon.v1.queue.ConsumerConfig
	21, // 17: gcommon.v1.queue.Consumer.stats:type_name -> gcommon.v1.queue.ConsumerStats
	17, // 18: gcommon.v1.queue.Consumer.last_heartbeat:type_name -> google.protobuf.Timestamp
	17, // 19: gcommon.v1.queue.Consumer.joined_at:type_name -> google.protobuf.Timestamp
	17, // 20: gcommon.v1.queue.PartitionAssignment.assigned_at:type_name -> google.protobuf.Timestamp
	17, // 21: gcommon.v1.queue.PartitionAssignment.last_commit:type_name -> google.protobuf.Timestamp
	3,  // 22: gcommon.v1.queue.GroupCoordinator.state:type_name -> gcommon.v1.queue.CoordinatorState
	14, // 23: gcommon.v1.queue.ConsumerGroupStats.rebalance_stats:type_name -> gcommon.v1.queue.RebalanceStats
	15, // 24: gcommon.v1.queue.ConsumerGroupStats.error_stats:type_name -> gcommon.v1.queue.ConsumerErrorStats
	17, // 25: gcommon.v1.queue.RebalanceStats.last_rebalance:type_name -> google.protobuf.Timestamp
	17, // 26: gcommon.v1.queue.ConsumerErrorStats.last_error:type_name -> google.protobuf.Timestamp
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_consumer_group_proto_init() }
func file_pkg_queue_proto_consumer_group_proto_init() {
	if File_pkg_queue_proto_consumer_group_proto != nil {
		return
	}
	file_pkg_queue_proto_consumer_stats_proto_init()
	file_pkg_queue_proto_load_balancing_strategy_proto_init()
	file_pkg_queue_proto_subscribe_request_proto_init()
	file_pkg_queue_proto_consumer_state_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_consumer_group_proto_rawDesc), len(file_pkg_queue_proto_consumer_group_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_consumer_group_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_consumer_group_proto_depIdxs,
		EnumInfos:         file_pkg_queue_proto_consumer_group_proto_enumTypes,
		MessageInfos:      file_pkg_queue_proto_consumer_group_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_consumer_group_proto = out.File
	file_pkg_queue_proto_consumer_group_proto_goTypes = nil
	file_pkg_queue_proto_consumer_group_proto_depIdxs = nil
}
