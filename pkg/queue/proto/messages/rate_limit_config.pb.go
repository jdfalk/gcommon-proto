// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/messages/rate_limit_config.proto

//go:build !protoopaque

package queuepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RateLimitConfig defines throughput limits for a queue.
type RateLimitConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Maximum messages allowed per second.
	MaxPerSecond *int32 `protobuf:"varint,1,opt,name=max_per_second,json=maxPerSecond" json:"max_per_second,omitempty"`
	// Allowed burst capacity above the per-second rate.
	Burst *int32 `protobuf:"varint,2,opt,name=burst" json:"burst,omitempty"`
	// Whether rate limiting is enabled.
	Enabled       *bool `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimitConfig) Reset() {
	*x = RateLimitConfig{}
	mi := &file_pkg_queue_proto_messages_rate_limit_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitConfig) ProtoMessage() {}

func (x *RateLimitConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_messages_rate_limit_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RateLimitConfig) GetMaxPerSecond() int32 {
	if x != nil && x.MaxPerSecond != nil {
		return *x.MaxPerSecond
	}
	return 0
}

func (x *RateLimitConfig) GetBurst() int32 {
	if x != nil && x.Burst != nil {
		return *x.Burst
	}
	return 0
}

func (x *RateLimitConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *RateLimitConfig) SetMaxPerSecond(v int32) {
	x.MaxPerSecond = &v
}

func (x *RateLimitConfig) SetBurst(v int32) {
	x.Burst = &v
}

func (x *RateLimitConfig) SetEnabled(v bool) {
	x.Enabled = &v
}

func (x *RateLimitConfig) HasMaxPerSecond() bool {
	if x == nil {
		return false
	}
	return x.MaxPerSecond != nil
}

func (x *RateLimitConfig) HasBurst() bool {
	if x == nil {
		return false
	}
	return x.Burst != nil
}

func (x *RateLimitConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *RateLimitConfig) ClearMaxPerSecond() {
	x.MaxPerSecond = nil
}

func (x *RateLimitConfig) ClearBurst() {
	x.Burst = nil
}

func (x *RateLimitConfig) ClearEnabled() {
	x.Enabled = nil
}

type RateLimitConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum messages allowed per second.
	MaxPerSecond *int32
	// Allowed burst capacity above the per-second rate.
	Burst *int32
	// Whether rate limiting is enabled.
	Enabled *bool
}

func (b0 RateLimitConfig_builder) Build() *RateLimitConfig {
	m0 := &RateLimitConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.MaxPerSecond = b.MaxPerSecond
	x.Burst = b.Burst
	x.Enabled = b.Enabled
	return m0
}

var File_pkg_queue_proto_messages_rate_limit_config_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_messages_rate_limit_config_proto_rawDesc = "" +
	"\n" +
	"0pkg/queue/proto/messages/rate_limit_config.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\"g\n" +
	"\x0fRateLimitConfig\x12$\n" +
	"\x0emax_per_second\x18\x01 \x01(\x05R\fmaxPerSecond\x12\x14\n" +
	"\x05burst\x18\x02 \x01(\x05R\x05burst\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabledB\xb8\x01\n" +
	"\x14com.gcommon.v1.queueB\x14RateLimitConfigProtoP\x01Z ../../../../pkg/queue/pb;queuepb\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_pkg_queue_proto_messages_rate_limit_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_messages_rate_limit_config_proto_goTypes = []any{
	(*RateLimitConfig)(nil), // 0: gcommon.v1.queue.RateLimitConfig
}
var file_pkg_queue_proto_messages_rate_limit_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_messages_rate_limit_config_proto_init() }
func file_pkg_queue_proto_messages_rate_limit_config_proto_init() {
	if File_pkg_queue_proto_messages_rate_limit_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_messages_rate_limit_config_proto_rawDesc), len(file_pkg_queue_proto_messages_rate_limit_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_messages_rate_limit_config_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_messages_rate_limit_config_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_messages_rate_limit_config_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_messages_rate_limit_config_proto = out.File
	file_pkg_queue_proto_messages_rate_limit_config_proto_goTypes = nil
	file_pkg_queue_proto_messages_rate_limit_config_proto_depIdxs = nil
}
