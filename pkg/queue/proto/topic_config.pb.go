// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/topic_config.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Configuration settings for a topic.
type TopicConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum number of messages in the topic
	MaxMessages *uint64 `protobuf:"varint,1,opt,name=max_messages,json=maxMessages" json:"max_messages,omitempty"`
	// Maximum size of the topic in bytes
	MaxSizeBytes *uint64 `protobuf:"varint,2,opt,name=max_size_bytes,json=maxSizeBytes" json:"max_size_bytes,omitempty"`
	// Message retention policy
	RetentionPolicy *RetentionPolicy `protobuf:"bytes,3,opt,name=retention_policy,json=retentionPolicy" json:"retention_policy,omitempty"`
	// Partitioning configuration
	PartitionConfig *PartitionConfig `protobuf:"bytes,4,opt,name=partition_config,json=partitionConfig" json:"partition_config,omitempty"`
	// Whether messages are persistent
	Persistent *bool `protobuf:"varint,5,opt,name=persistent" json:"persistent,omitempty"`
	// Whether topic is replicated
	Replicated *bool `protobuf:"varint,6,opt,name=replicated" json:"replicated,omitempty"`
	// Replication factor
	ReplicationFactor *uint32 `protobuf:"varint,7,opt,name=replication_factor,json=replicationFactor" json:"replication_factor,omitempty"`
	// Whether to compact duplicate messages
	EnableCompaction *bool `protobuf:"varint,8,opt,name=enable_compaction,json=enableCompaction" json:"enable_compaction,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TopicConfig) Reset() {
	*x = TopicConfig{}
	mi := &file_pkg_queue_proto_topic_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicConfig) ProtoMessage() {}

func (x *TopicConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_topic_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicConfig.ProtoReflect.Descriptor instead.
func (*TopicConfig) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_topic_config_proto_rawDescGZIP(), []int{0}
}

func (x *TopicConfig) GetMaxMessages() uint64 {
	if x != nil && x.MaxMessages != nil {
		return *x.MaxMessages
	}
	return 0
}

func (x *TopicConfig) GetMaxSizeBytes() uint64 {
	if x != nil && x.MaxSizeBytes != nil {
		return *x.MaxSizeBytes
	}
	return 0
}

func (x *TopicConfig) GetRetentionPolicy() *RetentionPolicy {
	if x != nil {
		return x.RetentionPolicy
	}
	return nil
}

func (x *TopicConfig) GetPartitionConfig() *PartitionConfig {
	if x != nil {
		return x.PartitionConfig
	}
	return nil
}

func (x *TopicConfig) GetPersistent() bool {
	if x != nil && x.Persistent != nil {
		return *x.Persistent
	}
	return false
}

func (x *TopicConfig) GetReplicated() bool {
	if x != nil && x.Replicated != nil {
		return *x.Replicated
	}
	return false
}

func (x *TopicConfig) GetReplicationFactor() uint32 {
	if x != nil && x.ReplicationFactor != nil {
		return *x.ReplicationFactor
	}
	return 0
}

func (x *TopicConfig) GetEnableCompaction() bool {
	if x != nil && x.EnableCompaction != nil {
		return *x.EnableCompaction
	}
	return false
}

var File_pkg_queue_proto_topic_config_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_topic_config_proto_rawDesc = "" +
	"\n" +
	"\"pkg/queue/proto/topic_config.proto\x12\x10gcommon.v1.queue\x1a\x1egoogle/protobuf/duration.proto\x1a&pkg/queue/proto/retention_policy.proto\x1a&pkg/queue/proto/partition_config.proto\"\x8e\x03\n" +
	"\vTopicConfig\x12!\n" +
	"\fmax_messages\x18\x01 \x01(\x04R\vmaxMessages\x12$\n" +
	"\x0emax_size_bytes\x18\x02 \x01(\x04R\fmaxSizeBytes\x12L\n" +
	"\x10retention_policy\x18\x03 \x01(\v2!.gcommon.v1.queue.RetentionPolicyR\x0fretentionPolicy\x12L\n" +
	"\x10partition_config\x18\x04 \x01(\v2!.gcommon.v1.queue.PartitionConfigR\x0fpartitionConfig\x12\x1e\n" +
	"\n" +
	"persistent\x18\x05 \x01(\bR\n" +
	"persistent\x12\x1e\n" +
	"\n" +
	"replicated\x18\x06 \x01(\bR\n" +
	"replicated\x12-\n" +
	"\x12replication_factor\x18\a \x01(\rR\x11replicationFactor\x12+\n" +
	"\x11enable_compaction\x18\b \x01(\bR\x10enableCompactionB\xb5\x01\n" +
	"\x14com.gcommon.v1.queueB\x10TopicConfigProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_topic_config_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_topic_config_proto_rawDescData []byte
)

func file_pkg_queue_proto_topic_config_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_topic_config_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_topic_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_topic_config_proto_rawDesc), len(file_pkg_queue_proto_topic_config_proto_rawDesc)))
	})
	return file_pkg_queue_proto_topic_config_proto_rawDescData
}

var file_pkg_queue_proto_topic_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_topic_config_proto_goTypes = []any{
	(*TopicConfig)(nil),     // 0: gcommon.v1.queue.TopicConfig
	(*RetentionPolicy)(nil), // 1: gcommon.v1.queue.RetentionPolicy
	(*PartitionConfig)(nil), // 2: gcommon.v1.queue.PartitionConfig
}
var file_pkg_queue_proto_topic_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.TopicConfig.retention_policy:type_name -> gcommon.v1.queue.RetentionPolicy
	2, // 1: gcommon.v1.queue.TopicConfig.partition_config:type_name -> gcommon.v1.queue.PartitionConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_topic_config_proto_init() }
func file_pkg_queue_proto_topic_config_proto_init() {
	if File_pkg_queue_proto_topic_config_proto != nil {
		return
	}
	file_pkg_queue_proto_retention_policy_proto_init()
	file_pkg_queue_proto_partition_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_topic_config_proto_rawDesc), len(file_pkg_queue_proto_topic_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_topic_config_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_topic_config_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_topic_config_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_topic_config_proto = out.File
	file_pkg_queue_proto_topic_config_proto_goTypes = nil
	file_pkg_queue_proto_topic_config_proto_depIdxs = nil
}
