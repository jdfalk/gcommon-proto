// file: queue/proto/services/queue_monitoring_service.proto
// version: 1.0.0
// guid: 63f72754-e7c0-40b6-a40d-29f3645d55fc

edition = "2023";

package gcommon.v1.queue;

import "google/protobuf/go_features.proto";
import "google/protobuf/timestamp.proto";
import "pkg/common/proto/time_range.proto";
import "pkg/queue/proto/cluster_info.proto";
import "pkg/queue/proto/get_cluster_info_request.proto";
import "pkg/queue/proto/get_cluster_info_response.proto";
import "pkg/queue/proto/get_queue_stats_response.proto";
import "pkg/queue/proto/health_status.proto";
import "pkg/queue/proto/metric_type.proto";
import "pkg/queue/proto/stats_granularity.proto";
import "pkg/queue/proto/time_range.proto";
import "pkg/queue/proto/topic_info.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/queue/proto";

service QueueMonitoringService {
  // Get information about the queue cluster
  rpc GetClusterInfo(GetClusterInfoRequest) returns (gcommon.v1.queue.GetClusterInfoResponse);

  // Get health status of all queues
  rpc GetQueueHealth(GetQueueHealthRequest) returns (GetQueueHealthResponse);

  // Get detailed statistics for a specific queue
  rpc GetQueueStats(GetQueueStatsRequest) returns (QueueStatsResponse);

  // Get real-time metrics stream
  rpc StreamMetrics(StreamMetricsRequest) returns (stream MetricsEvent);
}
