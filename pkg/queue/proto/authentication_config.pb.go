// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/authentication_config.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Authentication configuration for queue connections.
// Supports multiple authentication mechanisms.
type AuthenticationConfig struct {
	state               protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_AuthType isAuthenticationConfig_AuthType `protobuf_oneof:"auth_type"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AuthenticationConfig) Reset() {
	*x = AuthenticationConfig{}
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationConfig) ProtoMessage() {}

func (x *AuthenticationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthenticationConfig) GetNone() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_AuthType.(*authenticationConfig_None); ok {
			return x.None
		}
	}
	return false
}

func (x *AuthenticationConfig) GetUsernamePassword() *UsernamePasswordAuth {
	if x != nil {
		if x, ok := x.xxx_hidden_AuthType.(*authenticationConfig_UsernamePassword); ok {
			return x.UsernamePassword
		}
	}
	return nil
}

func (x *AuthenticationConfig) GetApiKey() *APIKeyAuth {
	if x != nil {
		if x, ok := x.xxx_hidden_AuthType.(*authenticationConfig_ApiKey); ok {
			return x.ApiKey
		}
	}
	return nil
}

func (x *AuthenticationConfig) GetTls() *TLSAuth {
	if x != nil {
		if x, ok := x.xxx_hidden_AuthType.(*authenticationConfig_Tls); ok {
			return x.Tls
		}
	}
	return nil
}

func (x *AuthenticationConfig) GetSasl() *SASLAuth {
	if x != nil {
		if x, ok := x.xxx_hidden_AuthType.(*authenticationConfig_Sasl); ok {
			return x.Sasl
		}
	}
	return nil
}

func (x *AuthenticationConfig) GetOauth2() *OAuth2Auth {
	if x != nil {
		if x, ok := x.xxx_hidden_AuthType.(*authenticationConfig_Oauth2); ok {
			return x.Oauth2
		}
	}
	return nil
}

func (x *AuthenticationConfig) SetNone(v bool) {
	x.xxx_hidden_AuthType = &authenticationConfig_None{v}
}

func (x *AuthenticationConfig) SetUsernamePassword(v *UsernamePasswordAuth) {
	if v == nil {
		x.xxx_hidden_AuthType = nil
		return
	}
	x.xxx_hidden_AuthType = &authenticationConfig_UsernamePassword{v}
}

func (x *AuthenticationConfig) SetApiKey(v *APIKeyAuth) {
	if v == nil {
		x.xxx_hidden_AuthType = nil
		return
	}
	x.xxx_hidden_AuthType = &authenticationConfig_ApiKey{v}
}

func (x *AuthenticationConfig) SetTls(v *TLSAuth) {
	if v == nil {
		x.xxx_hidden_AuthType = nil
		return
	}
	x.xxx_hidden_AuthType = &authenticationConfig_Tls{v}
}

func (x *AuthenticationConfig) SetSasl(v *SASLAuth) {
	if v == nil {
		x.xxx_hidden_AuthType = nil
		return
	}
	x.xxx_hidden_AuthType = &authenticationConfig_Sasl{v}
}

func (x *AuthenticationConfig) SetOauth2(v *OAuth2Auth) {
	if v == nil {
		x.xxx_hidden_AuthType = nil
		return
	}
	x.xxx_hidden_AuthType = &authenticationConfig_Oauth2{v}
}

func (x *AuthenticationConfig) HasAuthType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AuthType != nil
}

func (x *AuthenticationConfig) HasNone() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_AuthType.(*authenticationConfig_None)
	return ok
}

func (x *AuthenticationConfig) HasUsernamePassword() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_AuthType.(*authenticationConfig_UsernamePassword)
	return ok
}

func (x *AuthenticationConfig) HasApiKey() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_AuthType.(*authenticationConfig_ApiKey)
	return ok
}

func (x *AuthenticationConfig) HasTls() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_AuthType.(*authenticationConfig_Tls)
	return ok
}

func (x *AuthenticationConfig) HasSasl() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_AuthType.(*authenticationConfig_Sasl)
	return ok
}

func (x *AuthenticationConfig) HasOauth2() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_AuthType.(*authenticationConfig_Oauth2)
	return ok
}

func (x *AuthenticationConfig) ClearAuthType() {
	x.xxx_hidden_AuthType = nil
}

func (x *AuthenticationConfig) ClearNone() {
	if _, ok := x.xxx_hidden_AuthType.(*authenticationConfig_None); ok {
		x.xxx_hidden_AuthType = nil
	}
}

func (x *AuthenticationConfig) ClearUsernamePassword() {
	if _, ok := x.xxx_hidden_AuthType.(*authenticationConfig_UsernamePassword); ok {
		x.xxx_hidden_AuthType = nil
	}
}

func (x *AuthenticationConfig) ClearApiKey() {
	if _, ok := x.xxx_hidden_AuthType.(*authenticationConfig_ApiKey); ok {
		x.xxx_hidden_AuthType = nil
	}
}

func (x *AuthenticationConfig) ClearTls() {
	if _, ok := x.xxx_hidden_AuthType.(*authenticationConfig_Tls); ok {
		x.xxx_hidden_AuthType = nil
	}
}

func (x *AuthenticationConfig) ClearSasl() {
	if _, ok := x.xxx_hidden_AuthType.(*authenticationConfig_Sasl); ok {
		x.xxx_hidden_AuthType = nil
	}
}

func (x *AuthenticationConfig) ClearOauth2() {
	if _, ok := x.xxx_hidden_AuthType.(*authenticationConfig_Oauth2); ok {
		x.xxx_hidden_AuthType = nil
	}
}

const AuthenticationConfig_AuthType_not_set_case case_AuthenticationConfig_AuthType = 0
const AuthenticationConfig_None_case case_AuthenticationConfig_AuthType = 1
const AuthenticationConfig_UsernamePassword_case case_AuthenticationConfig_AuthType = 2
const AuthenticationConfig_ApiKey_case case_AuthenticationConfig_AuthType = 3
const AuthenticationConfig_Tls_case case_AuthenticationConfig_AuthType = 4
const AuthenticationConfig_Sasl_case case_AuthenticationConfig_AuthType = 5
const AuthenticationConfig_Oauth2_case case_AuthenticationConfig_AuthType = 6

func (x *AuthenticationConfig) WhichAuthType() case_AuthenticationConfig_AuthType {
	if x == nil {
		return AuthenticationConfig_AuthType_not_set_case
	}
	switch x.xxx_hidden_AuthType.(type) {
	case *authenticationConfig_None:
		return AuthenticationConfig_None_case
	case *authenticationConfig_UsernamePassword:
		return AuthenticationConfig_UsernamePassword_case
	case *authenticationConfig_ApiKey:
		return AuthenticationConfig_ApiKey_case
	case *authenticationConfig_Tls:
		return AuthenticationConfig_Tls_case
	case *authenticationConfig_Sasl:
		return AuthenticationConfig_Sasl_case
	case *authenticationConfig_Oauth2:
		return AuthenticationConfig_Oauth2_case
	default:
		return AuthenticationConfig_AuthType_not_set_case
	}
}

type AuthenticationConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Authentication type

	// Fields of oneof xxx_hidden_AuthType:
	// No authentication required
	None *bool
	// Username/password authentication
	UsernamePassword *UsernamePasswordAuth
	// API key authentication
	ApiKey *APIKeyAuth
	// TLS certificate authentication
	Tls *TLSAuth
	// SASL authentication
	Sasl *SASLAuth
	// OAuth2 authentication
	Oauth2 *OAuth2Auth
	// -- end of xxx_hidden_AuthType
}

func (b0 AuthenticationConfig_builder) Build() *AuthenticationConfig {
	m0 := &AuthenticationConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.None != nil {
		x.xxx_hidden_AuthType = &authenticationConfig_None{*b.None}
	}
	if b.UsernamePassword != nil {
		x.xxx_hidden_AuthType = &authenticationConfig_UsernamePassword{b.UsernamePassword}
	}
	if b.ApiKey != nil {
		x.xxx_hidden_AuthType = &authenticationConfig_ApiKey{b.ApiKey}
	}
	if b.Tls != nil {
		x.xxx_hidden_AuthType = &authenticationConfig_Tls{b.Tls}
	}
	if b.Sasl != nil {
		x.xxx_hidden_AuthType = &authenticationConfig_Sasl{b.Sasl}
	}
	if b.Oauth2 != nil {
		x.xxx_hidden_AuthType = &authenticationConfig_Oauth2{b.Oauth2}
	}
	return m0
}

type case_AuthenticationConfig_AuthType protoreflect.FieldNumber

func (x case_AuthenticationConfig_AuthType) String() string {
	md := file_pkg_queue_proto_authentication_config_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isAuthenticationConfig_AuthType interface {
	isAuthenticationConfig_AuthType()
}

type authenticationConfig_None struct {
	// No authentication required
	None bool `protobuf:"varint,1,opt,name=none,oneof"`
}

type authenticationConfig_UsernamePassword struct {
	// Username/password authentication
	UsernamePassword *UsernamePasswordAuth `protobuf:"bytes,2,opt,name=username_password,json=usernamePassword,oneof"`
}

type authenticationConfig_ApiKey struct {
	// API key authentication
	ApiKey *APIKeyAuth `protobuf:"bytes,3,opt,name=api_key,json=apiKey,oneof"`
}

type authenticationConfig_Tls struct {
	// TLS certificate authentication
	Tls *TLSAuth `protobuf:"bytes,4,opt,name=tls,oneof"`
}

type authenticationConfig_Sasl struct {
	// SASL authentication
	Sasl *SASLAuth `protobuf:"bytes,5,opt,name=sasl,oneof"`
}

type authenticationConfig_Oauth2 struct {
	// OAuth2 authentication
	Oauth2 *OAuth2Auth `protobuf:"bytes,6,opt,name=oauth2,oneof"`
}

func (*authenticationConfig_None) isAuthenticationConfig_AuthType() {}

func (*authenticationConfig_UsernamePassword) isAuthenticationConfig_AuthType() {}

func (*authenticationConfig_ApiKey) isAuthenticationConfig_AuthType() {}

func (*authenticationConfig_Tls) isAuthenticationConfig_AuthType() {}

func (*authenticationConfig_Sasl) isAuthenticationConfig_AuthType() {}

func (*authenticationConfig_Oauth2) isAuthenticationConfig_AuthType() {}

// *
// Username and password authentication.
type UsernamePasswordAuth struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Username    *string                `protobuf:"bytes,1,opt,name=username"`
	xxx_hidden_Password    *string                `protobuf:"bytes,2,opt,name=password"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UsernamePasswordAuth) Reset() {
	*x = UsernamePasswordAuth{}
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsernamePasswordAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsernamePasswordAuth) ProtoMessage() {}

func (x *UsernamePasswordAuth) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UsernamePasswordAuth) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *UsernamePasswordAuth) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *UsernamePasswordAuth) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UsernamePasswordAuth) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UsernamePasswordAuth) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UsernamePasswordAuth) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UsernamePasswordAuth) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Username = nil
}

func (x *UsernamePasswordAuth) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Password = nil
}

type UsernamePasswordAuth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Username for authentication
	Username *string
	// Password for authentication (should be encrypted)
	Password *string
}

func (b0 UsernamePasswordAuth_builder) Build() *UsernamePasswordAuth {
	m0 := &UsernamePasswordAuth{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Username = b.Username
	}
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Password = b.Password
	}
	return m0
}

// *
// API key based authentication.
type APIKeyAuth struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ApiKey      *string                `protobuf:"bytes,1,opt,name=api_key,json=apiKey"`
	xxx_hidden_KeyId       *string                `protobuf:"bytes,2,opt,name=key_id,json=keyId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *APIKeyAuth) Reset() {
	*x = APIKeyAuth{}
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyAuth) ProtoMessage() {}

func (x *APIKeyAuth) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *APIKeyAuth) GetApiKey() string {
	if x != nil {
		if x.xxx_hidden_ApiKey != nil {
			return *x.xxx_hidden_ApiKey
		}
		return ""
	}
	return ""
}

func (x *APIKeyAuth) GetKeyId() string {
	if x != nil {
		if x.xxx_hidden_KeyId != nil {
			return *x.xxx_hidden_KeyId
		}
		return ""
	}
	return ""
}

func (x *APIKeyAuth) SetApiKey(v string) {
	x.xxx_hidden_ApiKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *APIKeyAuth) SetKeyId(v string) {
	x.xxx_hidden_KeyId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *APIKeyAuth) HasApiKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *APIKeyAuth) HasKeyId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *APIKeyAuth) ClearApiKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ApiKey = nil
}

func (x *APIKeyAuth) ClearKeyId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_KeyId = nil
}

type APIKeyAuth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// API key for authentication
	ApiKey *string
	// Optional API key ID
	KeyId *string
}

func (b0 APIKeyAuth_builder) Build() *APIKeyAuth {
	m0 := &APIKeyAuth{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ApiKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ApiKey = b.ApiKey
	}
	if b.KeyId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_KeyId = b.KeyId
	}
	return m0
}

// *
// TLS certificate authentication.
type TLSAuth struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CertPem      *string                `protobuf:"bytes,1,opt,name=cert_pem,json=certPem"`
	xxx_hidden_KeyPem       *string                `protobuf:"bytes,2,opt,name=key_pem,json=keyPem"`
	xxx_hidden_CaPem        *string                `protobuf:"bytes,3,opt,name=ca_pem,json=caPem"`
	xxx_hidden_VerifyServer bool                   `protobuf:"varint,4,opt,name=verify_server,json=verifyServer"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *TLSAuth) Reset() {
	*x = TLSAuth{}
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSAuth) ProtoMessage() {}

func (x *TLSAuth) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TLSAuth) GetCertPem() string {
	if x != nil {
		if x.xxx_hidden_CertPem != nil {
			return *x.xxx_hidden_CertPem
		}
		return ""
	}
	return ""
}

func (x *TLSAuth) GetKeyPem() string {
	if x != nil {
		if x.xxx_hidden_KeyPem != nil {
			return *x.xxx_hidden_KeyPem
		}
		return ""
	}
	return ""
}

func (x *TLSAuth) GetCaPem() string {
	if x != nil {
		if x.xxx_hidden_CaPem != nil {
			return *x.xxx_hidden_CaPem
		}
		return ""
	}
	return ""
}

func (x *TLSAuth) GetVerifyServer() bool {
	if x != nil {
		return x.xxx_hidden_VerifyServer
	}
	return false
}

func (x *TLSAuth) SetCertPem(v string) {
	x.xxx_hidden_CertPem = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *TLSAuth) SetKeyPem(v string) {
	x.xxx_hidden_KeyPem = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *TLSAuth) SetCaPem(v string) {
	x.xxx_hidden_CaPem = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *TLSAuth) SetVerifyServer(v bool) {
	x.xxx_hidden_VerifyServer = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *TLSAuth) HasCertPem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TLSAuth) HasKeyPem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TLSAuth) HasCaPem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TLSAuth) HasVerifyServer() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *TLSAuth) ClearCertPem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CertPem = nil
}

func (x *TLSAuth) ClearKeyPem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_KeyPem = nil
}

func (x *TLSAuth) ClearCaPem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CaPem = nil
}

func (x *TLSAuth) ClearVerifyServer() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_VerifyServer = false
}

type TLSAuth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Client certificate (PEM format)
	CertPem *string
	// Client private key (PEM format)
	KeyPem *string
	// CA certificate (PEM format)
	CaPem *string
	// Whether to verify server certificate
	VerifyServer *bool
}

func (b0 TLSAuth_builder) Build() *TLSAuth {
	m0 := &TLSAuth{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CertPem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_CertPem = b.CertPem
	}
	if b.KeyPem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_KeyPem = b.KeyPem
	}
	if b.CaPem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_CaPem = b.CaPem
	}
	if b.VerifyServer != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_VerifyServer = *b.VerifyServer
	}
	return m0
}

// *
// SASL authentication configuration.
type SASLAuth struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Mechanism   *string                `protobuf:"bytes,1,opt,name=mechanism"`
	xxx_hidden_Username    *string                `protobuf:"bytes,2,opt,name=username"`
	xxx_hidden_Password    *string                `protobuf:"bytes,3,opt,name=password"`
	xxx_hidden_Properties  map[string]string      `protobuf:"bytes,4,rep,name=properties" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SASLAuth) Reset() {
	*x = SASLAuth{}
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SASLAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SASLAuth) ProtoMessage() {}

func (x *SASLAuth) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SASLAuth) GetMechanism() string {
	if x != nil {
		if x.xxx_hidden_Mechanism != nil {
			return *x.xxx_hidden_Mechanism
		}
		return ""
	}
	return ""
}

func (x *SASLAuth) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *SASLAuth) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *SASLAuth) GetProperties() map[string]string {
	if x != nil {
		return x.xxx_hidden_Properties
	}
	return nil
}

func (x *SASLAuth) SetMechanism(v string) {
	x.xxx_hidden_Mechanism = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *SASLAuth) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *SASLAuth) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *SASLAuth) SetProperties(v map[string]string) {
	x.xxx_hidden_Properties = v
}

func (x *SASLAuth) HasMechanism() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SASLAuth) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SASLAuth) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SASLAuth) ClearMechanism() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Mechanism = nil
}

func (x *SASLAuth) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Username = nil
}

func (x *SASLAuth) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Password = nil
}

type SASLAuth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// SASL mechanism (PLAIN, SCRAM-SHA-256, etc.)
	Mechanism *string
	// Username
	Username *string
	// Password
	Password *string
	// Additional SASL properties
	Properties map[string]string
}

func (b0 SASLAuth_builder) Build() *SASLAuth {
	m0 := &SASLAuth{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Mechanism != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Mechanism = b.Mechanism
	}
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Username = b.Username
	}
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Password = b.Password
	}
	x.xxx_hidden_Properties = b.Properties
	return m0
}

// *
// OAuth2 authentication configuration.
type OAuth2Auth struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TokenEndpoint *string                `protobuf:"bytes,1,opt,name=token_endpoint,json=tokenEndpoint"`
	xxx_hidden_ClientId      *string                `protobuf:"bytes,2,opt,name=client_id,json=clientId"`
	xxx_hidden_ClientSecret  *string                `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret"`
	xxx_hidden_Scopes        []string               `protobuf:"bytes,4,rep,name=scopes"`
	xxx_hidden_Parameters    map[string]string      `protobuf:"bytes,5,rep,name=parameters" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *OAuth2Auth) Reset() {
	*x = OAuth2Auth{}
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAuth2Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth2Auth) ProtoMessage() {}

func (x *OAuth2Auth) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_authentication_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OAuth2Auth) GetTokenEndpoint() string {
	if x != nil {
		if x.xxx_hidden_TokenEndpoint != nil {
			return *x.xxx_hidden_TokenEndpoint
		}
		return ""
	}
	return ""
}

func (x *OAuth2Auth) GetClientId() string {
	if x != nil {
		if x.xxx_hidden_ClientId != nil {
			return *x.xxx_hidden_ClientId
		}
		return ""
	}
	return ""
}

func (x *OAuth2Auth) GetClientSecret() string {
	if x != nil {
		if x.xxx_hidden_ClientSecret != nil {
			return *x.xxx_hidden_ClientSecret
		}
		return ""
	}
	return ""
}

func (x *OAuth2Auth) GetScopes() []string {
	if x != nil {
		return x.xxx_hidden_Scopes
	}
	return nil
}

func (x *OAuth2Auth) GetParameters() map[string]string {
	if x != nil {
		return x.xxx_hidden_Parameters
	}
	return nil
}

func (x *OAuth2Auth) SetTokenEndpoint(v string) {
	x.xxx_hidden_TokenEndpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *OAuth2Auth) SetClientId(v string) {
	x.xxx_hidden_ClientId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *OAuth2Auth) SetClientSecret(v string) {
	x.xxx_hidden_ClientSecret = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *OAuth2Auth) SetScopes(v []string) {
	x.xxx_hidden_Scopes = v
}

func (x *OAuth2Auth) SetParameters(v map[string]string) {
	x.xxx_hidden_Parameters = v
}

func (x *OAuth2Auth) HasTokenEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OAuth2Auth) HasClientId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *OAuth2Auth) HasClientSecret() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *OAuth2Auth) ClearTokenEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TokenEndpoint = nil
}

func (x *OAuth2Auth) ClearClientId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClientId = nil
}

func (x *OAuth2Auth) ClearClientSecret() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClientSecret = nil
}

type OAuth2Auth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// OAuth2 token endpoint
	TokenEndpoint *string
	// Client ID
	ClientId *string
	// Client secret
	ClientSecret *string
	// Scopes to request
	Scopes []string
	// Additional OAuth2 parameters
	Parameters map[string]string
}

func (b0 OAuth2Auth_builder) Build() *OAuth2Auth {
	m0 := &OAuth2Auth{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TokenEndpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_TokenEndpoint = b.TokenEndpoint
	}
	if b.ClientId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_ClientId = b.ClientId
	}
	if b.ClientSecret != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_ClientSecret = b.ClientSecret
	}
	x.xxx_hidden_Scopes = b.Scopes
	x.xxx_hidden_Parameters = b.Parameters
	return m0
}

var File_pkg_queue_proto_authentication_config_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_authentication_config_proto_rawDesc = "" +
	"\n" +
	"+pkg/queue/proto/authentication_config.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\"\xe2\x02\n" +
	"\x14AuthenticationConfig\x12\x14\n" +
	"\x04none\x18\x01 \x01(\bH\x00R\x04none\x12U\n" +
	"\x11username_password\x18\x02 \x01(\v2&.gcommon.v1.queue.UsernamePasswordAuthH\x00R\x10usernamePassword\x127\n" +
	"\aapi_key\x18\x03 \x01(\v2\x1c.gcommon.v1.queue.APIKeyAuthH\x00R\x06apiKey\x12-\n" +
	"\x03tls\x18\x04 \x01(\v2\x19.gcommon.v1.queue.TLSAuthH\x00R\x03tls\x120\n" +
	"\x04sasl\x18\x05 \x01(\v2\x1a.gcommon.v1.queue.SASLAuthH\x00R\x04sasl\x126\n" +
	"\x06oauth2\x18\x06 \x01(\v2\x1c.gcommon.v1.queue.OAuth2AuthH\x00R\x06oauth2B\v\n" +
	"\tauth_type\"N\n" +
	"\x14UsernamePasswordAuth\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"<\n" +
	"\n" +
	"APIKeyAuth\x12\x17\n" +
	"\aapi_key\x18\x01 \x01(\tR\x06apiKey\x12\x15\n" +
	"\x06key_id\x18\x02 \x01(\tR\x05keyId\"y\n" +
	"\aTLSAuth\x12\x19\n" +
	"\bcert_pem\x18\x01 \x01(\tR\acertPem\x12\x17\n" +
	"\akey_pem\x18\x02 \x01(\tR\x06keyPem\x12\x15\n" +
	"\x06ca_pem\x18\x03 \x01(\tR\x05caPem\x12#\n" +
	"\rverify_server\x18\x04 \x01(\bR\fverifyServer\"\xeb\x01\n" +
	"\bSASLAuth\x12\x1c\n" +
	"\tmechanism\x18\x01 \x01(\tR\tmechanism\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12J\n" +
	"\n" +
	"properties\x18\x04 \x03(\v2*.gcommon.v1.queue.SASLAuth.PropertiesEntryR\n" +
	"properties\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9a\x02\n" +
	"\n" +
	"OAuth2Auth\x12%\n" +
	"\x0etoken_endpoint\x18\x01 \x01(\tR\rtokenEndpoint\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\x12#\n" +
	"\rclient_secret\x18\x03 \x01(\tR\fclientSecret\x12\x16\n" +
	"\x06scopes\x18\x04 \x03(\tR\x06scopes\x12L\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v2,.gcommon.v1.queue.OAuth2Auth.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xc6\x01\n" +
	"\x14com.gcommon.v1.queueB\x19AuthenticationConfigProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_pkg_queue_proto_authentication_config_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pkg_queue_proto_authentication_config_proto_goTypes = []any{
	(*AuthenticationConfig)(nil), // 0: gcommon.v1.queue.AuthenticationConfig
	(*UsernamePasswordAuth)(nil), // 1: gcommon.v1.queue.UsernamePasswordAuth
	(*APIKeyAuth)(nil),           // 2: gcommon.v1.queue.APIKeyAuth
	(*TLSAuth)(nil),              // 3: gcommon.v1.queue.TLSAuth
	(*SASLAuth)(nil),             // 4: gcommon.v1.queue.SASLAuth
	(*OAuth2Auth)(nil),           // 5: gcommon.v1.queue.OAuth2Auth
	nil,                          // 6: gcommon.v1.queue.SASLAuth.PropertiesEntry
	nil,                          // 7: gcommon.v1.queue.OAuth2Auth.ParametersEntry
}
var file_pkg_queue_proto_authentication_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.AuthenticationConfig.username_password:type_name -> gcommon.v1.queue.UsernamePasswordAuth
	2, // 1: gcommon.v1.queue.AuthenticationConfig.api_key:type_name -> gcommon.v1.queue.APIKeyAuth
	3, // 2: gcommon.v1.queue.AuthenticationConfig.tls:type_name -> gcommon.v1.queue.TLSAuth
	4, // 3: gcommon.v1.queue.AuthenticationConfig.sasl:type_name -> gcommon.v1.queue.SASLAuth
	5, // 4: gcommon.v1.queue.AuthenticationConfig.oauth2:type_name -> gcommon.v1.queue.OAuth2Auth
	6, // 5: gcommon.v1.queue.SASLAuth.properties:type_name -> gcommon.v1.queue.SASLAuth.PropertiesEntry
	7, // 6: gcommon.v1.queue.OAuth2Auth.parameters:type_name -> gcommon.v1.queue.OAuth2Auth.ParametersEntry
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_authentication_config_proto_init() }
func file_pkg_queue_proto_authentication_config_proto_init() {
	if File_pkg_queue_proto_authentication_config_proto != nil {
		return
	}
	file_pkg_queue_proto_authentication_config_proto_msgTypes[0].OneofWrappers = []any{
		(*authenticationConfig_None)(nil),
		(*authenticationConfig_UsernamePassword)(nil),
		(*authenticationConfig_ApiKey)(nil),
		(*authenticationConfig_Tls)(nil),
		(*authenticationConfig_Sasl)(nil),
		(*authenticationConfig_Oauth2)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_authentication_config_proto_rawDesc), len(file_pkg_queue_proto_authentication_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_authentication_config_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_authentication_config_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_authentication_config_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_authentication_config_proto = out.File
	file_pkg_queue_proto_authentication_config_proto_goTypes = nil
	file_pkg_queue_proto_authentication_config_proto_depIdxs = nil
}
