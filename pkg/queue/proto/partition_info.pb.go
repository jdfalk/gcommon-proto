// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/queue/proto/partition_info.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Information about a queue partition.
type PartitionInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Partition identifier
	PartitionId *uint32 `protobuf:"varint,1,opt,name=partition_id,json=partitionId" json:"partition_id,omitempty"`
	// Leader node for this partition
	LeaderNode *string `protobuf:"bytes,2,opt,name=leader_node,json=leaderNode" json:"leader_node,omitempty"`
	// Replica nodes for this partition
	ReplicaNodes []string `protobuf:"bytes,3,rep,name=replica_nodes,json=replicaNodes" json:"replica_nodes,omitempty"`
	// Current offset (latest message)
	CurrentOffset *uint64 `protobuf:"varint,4,opt,name=current_offset,json=currentOffset" json:"current_offset,omitempty"`
	// Earliest available offset
	EarliestOffset *uint64 `protobuf:"varint,5,opt,name=earliest_offset,json=earliestOffset" json:"earliest_offset,omitempty"`
	// Number of messages in partition
	MessageCount *uint64 `protobuf:"varint,6,opt,name=message_count,json=messageCount" json:"message_count,omitempty"`
	// Partition size in bytes
	SizeBytes *uint64 `protobuf:"varint,7,opt,name=size_bytes,json=sizeBytes" json:"size_bytes,omitempty"`
	// Whether partition is online
	IsOnline      *bool `protobuf:"varint,8,opt,name=is_online,json=isOnline" json:"is_online,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionInfo) Reset() {
	*x = PartitionInfo{}
	mi := &file_pkg_queue_proto_partition_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionInfo) ProtoMessage() {}

func (x *PartitionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_queue_proto_partition_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionInfo.ProtoReflect.Descriptor instead.
func (*PartitionInfo) Descriptor() ([]byte, []int) {
	return file_pkg_queue_proto_partition_info_proto_rawDescGZIP(), []int{0}
}

func (x *PartitionInfo) GetPartitionId() uint32 {
	if x != nil && x.PartitionId != nil {
		return *x.PartitionId
	}
	return 0
}

func (x *PartitionInfo) GetLeaderNode() string {
	if x != nil && x.LeaderNode != nil {
		return *x.LeaderNode
	}
	return ""
}

func (x *PartitionInfo) GetReplicaNodes() []string {
	if x != nil {
		return x.ReplicaNodes
	}
	return nil
}

func (x *PartitionInfo) GetCurrentOffset() uint64 {
	if x != nil && x.CurrentOffset != nil {
		return *x.CurrentOffset
	}
	return 0
}

func (x *PartitionInfo) GetEarliestOffset() uint64 {
	if x != nil && x.EarliestOffset != nil {
		return *x.EarliestOffset
	}
	return 0
}

func (x *PartitionInfo) GetMessageCount() uint64 {
	if x != nil && x.MessageCount != nil {
		return *x.MessageCount
	}
	return 0
}

func (x *PartitionInfo) GetSizeBytes() uint64 {
	if x != nil && x.SizeBytes != nil {
		return *x.SizeBytes
	}
	return 0
}

func (x *PartitionInfo) GetIsOnline() bool {
	if x != nil && x.IsOnline != nil {
		return *x.IsOnline
	}
	return false
}

var File_pkg_queue_proto_partition_info_proto protoreflect.FileDescriptor

const file_pkg_queue_proto_partition_info_proto_rawDesc = "" +
	"\n" +
	"$pkg/queue/proto/partition_info.proto\x12\x10gcommon.v1.queue\"\xa9\x02\n" +
	"\rPartitionInfo\x12!\n" +
	"\fpartition_id\x18\x01 \x01(\rR\vpartitionId\x12\x1f\n" +
	"\vleader_node\x18\x02 \x01(\tR\n" +
	"leaderNode\x12#\n" +
	"\rreplica_nodes\x18\x03 \x03(\tR\freplicaNodes\x12%\n" +
	"\x0ecurrent_offset\x18\x04 \x01(\x04R\rcurrentOffset\x12'\n" +
	"\x0fearliest_offset\x18\x05 \x01(\x04R\x0eearliestOffset\x12#\n" +
	"\rmessage_count\x18\x06 \x01(\x04R\fmessageCount\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\a \x01(\x04R\tsizeBytes\x12\x1b\n" +
	"\tis_online\x18\b \x01(\bR\bisOnlineB\xb7\x01\n" +
	"\x14com.gcommon.v1.queueB\x12PartitionInfoProtoP\x01Z)github.com/jdfalk/gcommon/pkg/queue/proto\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queueb\beditionsp\xe8\a"

var (
	file_pkg_queue_proto_partition_info_proto_rawDescOnce sync.Once
	file_pkg_queue_proto_partition_info_proto_rawDescData []byte
)

func file_pkg_queue_proto_partition_info_proto_rawDescGZIP() []byte {
	file_pkg_queue_proto_partition_info_proto_rawDescOnce.Do(func() {
		file_pkg_queue_proto_partition_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_partition_info_proto_rawDesc), len(file_pkg_queue_proto_partition_info_proto_rawDesc)))
	})
	return file_pkg_queue_proto_partition_info_proto_rawDescData
}

var file_pkg_queue_proto_partition_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_queue_proto_partition_info_proto_goTypes = []any{
	(*PartitionInfo)(nil), // 0: gcommon.v1.queue.PartitionInfo
}
var file_pkg_queue_proto_partition_info_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_queue_proto_partition_info_proto_init() }
func file_pkg_queue_proto_partition_info_proto_init() {
	if File_pkg_queue_proto_partition_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_queue_proto_partition_info_proto_rawDesc), len(file_pkg_queue_proto_partition_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_queue_proto_partition_info_proto_goTypes,
		DependencyIndexes: file_pkg_queue_proto_partition_info_proto_depIdxs,
		MessageInfos:      file_pkg_queue_proto_partition_info_proto_msgTypes,
	}.Build()
	File_pkg_queue_proto_partition_info_proto = out.File
	file_pkg_queue_proto_partition_info_proto_goTypes = nil
	file_pkg_queue_proto_partition_info_proto_depIdxs = nil
}
