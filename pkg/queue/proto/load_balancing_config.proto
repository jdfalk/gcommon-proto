// filepath: pkg/queue/proto/messages/load_balancing_config.proto
// file: queue/proto/messages/load_balancing_config.proto
// version: 1.0.0
// guid: 8e9f0a1b-2c3d-4e5f-6a7b-8c9d0e1f2a3b
//
// Message definitions for queue module
//
edition = "2023";

package gcommon.v1.queue;

import "google/protobuf/go_features.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/queue/proto;queuepb";

/**
 * Configuration for load balancing across queue consumers.
 */
message LoadBalancingConfig {
  // Load balancing strategy
  LoadBalancingStrategy strategy = 1;
  
  // Weight for this consumer (for weighted strategies)
  int32 weight = 2;
  
  // Maximum concurrent messages per consumer
  int32 max_concurrent_messages = 3;
  
  // Prefetch count for batch consumption
  int32 prefetch_count = 4;
  
  // Consumer priority (higher numbers = higher priority)
  int32 priority = 5;
  
  // Whether to enable sticky sessions
  bool sticky_sessions = 6;
  
  // Session affinity key
  string affinity_key = 7;
}

/**
 * Load balancing strategies.
 */
enum LoadBalancingStrategy {
  // Default unspecified strategy
  LOAD_BALANCING_STRATEGY_UNSPECIFIED = 0;
  
  // Round-robin distribution
  LOAD_BALANCING_STRATEGY_ROUND_ROBIN = 1;
  
  // Weighted round-robin
  LOAD_BALANCING_STRATEGY_WEIGHTED_ROUND_ROBIN = 2;
  
  // Least connections
  LOAD_BALANCING_STRATEGY_LEAST_CONNECTIONS = 3;
  
  // Random distribution
  LOAD_BALANCING_STRATEGY_RANDOM = 4;
  
  // Hash-based distribution
  LOAD_BALANCING_STRATEGY_HASH = 5;
  
  // Priority-based distribution
  LOAD_BALANCING_STRATEGY_PRIORITY = 6;
}
