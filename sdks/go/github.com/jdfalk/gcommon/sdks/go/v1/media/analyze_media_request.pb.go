// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/media/analyze_media_request.proto

package media

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to analyze media content.
type AnalyzeMediaRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MediaFileId *string                `protobuf:"bytes,1,opt,name=media_file_id,json=mediaFileId"`
	xxx_hidden_Options     *AnalysisOptions       `protobuf:"bytes,2,opt,name=options"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AnalyzeMediaRequest) Reset() {
	*x = AnalyzeMediaRequest{}
	mi := &file_gcommon_v1_media_analyze_media_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeMediaRequest) ProtoMessage() {}

func (x *AnalyzeMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_media_analyze_media_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AnalyzeMediaRequest) GetMediaFileId() string {
	if x != nil {
		if x.xxx_hidden_MediaFileId != nil {
			return *x.xxx_hidden_MediaFileId
		}
		return ""
	}
	return ""
}

func (x *AnalyzeMediaRequest) GetOptions() *AnalysisOptions {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *AnalyzeMediaRequest) SetMediaFileId(v string) {
	x.xxx_hidden_MediaFileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *AnalyzeMediaRequest) SetOptions(v *AnalysisOptions) {
	x.xxx_hidden_Options = v
}

func (x *AnalyzeMediaRequest) HasMediaFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AnalyzeMediaRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Options != nil
}

func (x *AnalyzeMediaRequest) ClearMediaFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MediaFileId = nil
}

func (x *AnalyzeMediaRequest) ClearOptions() {
	x.xxx_hidden_Options = nil
}

type AnalyzeMediaRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MediaFileId *string
	Options     *AnalysisOptions
}

func (b0 AnalyzeMediaRequest_builder) Build() *AnalyzeMediaRequest {
	m0 := &AnalyzeMediaRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MediaFileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_MediaFileId = b.MediaFileId
	}
	x.xxx_hidden_Options = b.Options
	return m0
}

// Analysis options.
type AnalysisOptions struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ExtractMetadata   bool                   `protobuf:"varint,1,opt,name=extract_metadata,json=extractMetadata"`
	xxx_hidden_AnalyzeQuality    bool                   `protobuf:"varint,2,opt,name=analyze_quality,json=analyzeQuality"`
	xxx_hidden_DetectScenes      bool                   `protobuf:"varint,3,opt,name=detect_scenes,json=detectScenes"`
	xxx_hidden_ExtractThumbnails bool                   `protobuf:"varint,4,opt,name=extract_thumbnails,json=extractThumbnails"`
	xxx_hidden_AnalyzeAudio      bool                   `protobuf:"varint,5,opt,name=analyze_audio,json=analyzeAudio"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *AnalysisOptions) Reset() {
	*x = AnalysisOptions{}
	mi := &file_gcommon_v1_media_analyze_media_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalysisOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalysisOptions) ProtoMessage() {}

func (x *AnalysisOptions) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_media_analyze_media_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AnalysisOptions) GetExtractMetadata() bool {
	if x != nil {
		return x.xxx_hidden_ExtractMetadata
	}
	return false
}

func (x *AnalysisOptions) GetAnalyzeQuality() bool {
	if x != nil {
		return x.xxx_hidden_AnalyzeQuality
	}
	return false
}

func (x *AnalysisOptions) GetDetectScenes() bool {
	if x != nil {
		return x.xxx_hidden_DetectScenes
	}
	return false
}

func (x *AnalysisOptions) GetExtractThumbnails() bool {
	if x != nil {
		return x.xxx_hidden_ExtractThumbnails
	}
	return false
}

func (x *AnalysisOptions) GetAnalyzeAudio() bool {
	if x != nil {
		return x.xxx_hidden_AnalyzeAudio
	}
	return false
}

func (x *AnalysisOptions) SetExtractMetadata(v bool) {
	x.xxx_hidden_ExtractMetadata = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *AnalysisOptions) SetAnalyzeQuality(v bool) {
	x.xxx_hidden_AnalyzeQuality = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *AnalysisOptions) SetDetectScenes(v bool) {
	x.xxx_hidden_DetectScenes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *AnalysisOptions) SetExtractThumbnails(v bool) {
	x.xxx_hidden_ExtractThumbnails = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *AnalysisOptions) SetAnalyzeAudio(v bool) {
	x.xxx_hidden_AnalyzeAudio = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *AnalysisOptions) HasExtractMetadata() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AnalysisOptions) HasAnalyzeQuality() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AnalysisOptions) HasDetectScenes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AnalysisOptions) HasExtractThumbnails() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AnalysisOptions) HasAnalyzeAudio() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AnalysisOptions) ClearExtractMetadata() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ExtractMetadata = false
}

func (x *AnalysisOptions) ClearAnalyzeQuality() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AnalyzeQuality = false
}

func (x *AnalysisOptions) ClearDetectScenes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DetectScenes = false
}

func (x *AnalysisOptions) ClearExtractThumbnails() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ExtractThumbnails = false
}

func (x *AnalysisOptions) ClearAnalyzeAudio() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_AnalyzeAudio = false
}

type AnalysisOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ExtractMetadata   *bool
	AnalyzeQuality    *bool
	DetectScenes      *bool
	ExtractThumbnails *bool
	AnalyzeAudio      *bool
}

func (b0 AnalysisOptions_builder) Build() *AnalysisOptions {
	m0 := &AnalysisOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ExtractMetadata != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ExtractMetadata = *b.ExtractMetadata
	}
	if b.AnalyzeQuality != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_AnalyzeQuality = *b.AnalyzeQuality
	}
	if b.DetectScenes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_DetectScenes = *b.DetectScenes
	}
	if b.ExtractThumbnails != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_ExtractThumbnails = *b.ExtractThumbnails
	}
	if b.AnalyzeAudio != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_AnalyzeAudio = *b.AnalyzeAudio
	}
	return m0
}

var File_gcommon_v1_media_analyze_media_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_media_analyze_media_request_proto_rawDesc = "" +
	"\n" +
	",gcommon/v1/media/analyze_media_request.proto\x12\x10gcommon.v1.media\x1a!google/protobuf/go_features.proto\"v\n" +
	"\x13AnalyzeMediaRequest\x12\"\n" +
	"\rmedia_file_id\x18\x01 \x01(\tR\vmediaFileId\x12;\n" +
	"\aoptions\x18\x02 \x01(\v2!.gcommon.v1.media.AnalysisOptionsR\aoptions\"\xde\x01\n" +
	"\x0fAnalysisOptions\x12)\n" +
	"\x10extract_metadata\x18\x01 \x01(\bR\x0fextractMetadata\x12'\n" +
	"\x0fanalyze_quality\x18\x02 \x01(\bR\x0eanalyzeQuality\x12#\n" +
	"\rdetect_scenes\x18\x03 \x01(\bR\fdetectScenes\x12-\n" +
	"\x12extract_thumbnails\x18\x04 \x01(\bR\x11extractThumbnails\x12#\n" +
	"\ranalyze_audio\x18\x05 \x01(\bR\fanalyzeAudioB4Z*github.com/jdfalk/gcommon/sdks/go/v1/media\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_media_analyze_media_request_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_media_analyze_media_request_proto_goTypes = []any{
	(*AnalyzeMediaRequest)(nil), // 0: gcommon.v1.media.AnalyzeMediaRequest
	(*AnalysisOptions)(nil),     // 1: gcommon.v1.media.AnalysisOptions
}
var file_gcommon_v1_media_analyze_media_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.media.AnalyzeMediaRequest.options:type_name -> gcommon.v1.media.AnalysisOptions
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_media_analyze_media_request_proto_init() }
func file_gcommon_v1_media_analyze_media_request_proto_init() {
	if File_gcommon_v1_media_analyze_media_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_media_analyze_media_request_proto_rawDesc), len(file_gcommon_v1_media_analyze_media_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_media_analyze_media_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_media_analyze_media_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_media_analyze_media_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_media_analyze_media_request_proto = out.File
	file_gcommon_v1_media_analyze_media_request_proto_goTypes = nil
	file_gcommon_v1_media_analyze_media_request_proto_depIdxs = nil
}
