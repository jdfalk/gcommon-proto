// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/organization/organization_hierarchy.proto

package organization

import (
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrganizationHierarchy struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id             *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_OrganizationId *string                `protobuf:"bytes,2,opt,name=organization_id,json=organizationId"`
	xxx_hidden_HierarchyType  common.HierarchyType   `protobuf:"varint,3,opt,name=hierarchy_type,json=hierarchyType,enum=gcommon.v1.common.HierarchyType"`
	xxx_hidden_Name           *string                `protobuf:"bytes,4,opt,name=name"`
	xxx_hidden_Description    *string                `protobuf:"bytes,5,opt,name=description"`
	xxx_hidden_RootNode       *HierarchyNode         `protobuf:"bytes,6,opt,name=root_node,json=rootNode"`
	xxx_hidden_Active         bool                   `protobuf:"varint,7,opt,name=active"`
	xxx_hidden_Metadata       *[]*common.KeyValue    `protobuf:"bytes,8,rep,name=metadata"`
	xxx_hidden_CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt"`
	xxx_hidden_UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt"`
	xxx_hidden_CreatedBy      *string                `protobuf:"bytes,11,opt,name=created_by,json=createdBy"`
	xxx_hidden_UpdatedBy      *string                `protobuf:"bytes,12,opt,name=updated_by,json=updatedBy"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *OrganizationHierarchy) Reset() {
	*x = OrganizationHierarchy{}
	mi := &file_gcommon_v1_organization_organization_hierarchy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrganizationHierarchy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationHierarchy) ProtoMessage() {}

func (x *OrganizationHierarchy) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_organization_organization_hierarchy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OrganizationHierarchy) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *OrganizationHierarchy) GetOrganizationId() string {
	if x != nil {
		if x.xxx_hidden_OrganizationId != nil {
			return *x.xxx_hidden_OrganizationId
		}
		return ""
	}
	return ""
}

func (x *OrganizationHierarchy) GetHierarchyType() common.HierarchyType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_HierarchyType
		}
	}
	return common.HierarchyType(0)
}

func (x *OrganizationHierarchy) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *OrganizationHierarchy) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *OrganizationHierarchy) GetRootNode() *HierarchyNode {
	if x != nil {
		return x.xxx_hidden_RootNode
	}
	return nil
}

func (x *OrganizationHierarchy) GetActive() bool {
	if x != nil {
		return x.xxx_hidden_Active
	}
	return false
}

func (x *OrganizationHierarchy) GetMetadata() []*common.KeyValue {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 7) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Metadata) {
				protoimpl.X.UnmarshalField(x, 8)
			}
			var rv *[]*common.KeyValue
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&rv))
			return *rv
		}
	}
	return nil
}

func (x *OrganizationHierarchy) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_CreatedAt) {
				protoimpl.X.UnmarshalField(x, 9)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_CreatedAt), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *OrganizationHierarchy) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 9) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_UpdatedAt) {
				protoimpl.X.UnmarshalField(x, 10)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_UpdatedAt), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *OrganizationHierarchy) GetCreatedBy() string {
	if x != nil {
		if x.xxx_hidden_CreatedBy != nil {
			return *x.xxx_hidden_CreatedBy
		}
		return ""
	}
	return ""
}

func (x *OrganizationHierarchy) GetUpdatedBy() string {
	if x != nil {
		if x.xxx_hidden_UpdatedBy != nil {
			return *x.xxx_hidden_UpdatedBy
		}
		return ""
	}
	return ""
}

func (x *OrganizationHierarchy) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 12)
}

func (x *OrganizationHierarchy) SetOrganizationId(v string) {
	x.xxx_hidden_OrganizationId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 12)
}

func (x *OrganizationHierarchy) SetHierarchyType(v common.HierarchyType) {
	x.xxx_hidden_HierarchyType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 12)
}

func (x *OrganizationHierarchy) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 12)
}

func (x *OrganizationHierarchy) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 12)
}

func (x *OrganizationHierarchy) SetRootNode(v *HierarchyNode) {
	x.xxx_hidden_RootNode = v
}

func (x *OrganizationHierarchy) SetActive(v bool) {
	x.xxx_hidden_Active = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 12)
}

func (x *OrganizationHierarchy) SetMetadata(v []*common.KeyValue) {
	var sv *[]*common.KeyValue
	protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&sv))
	if sv == nil {
		sv = &[]*common.KeyValue{}
		protoimpl.X.AtomicInitializePointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&sv))
	}
	*sv = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 12)
}

func (x *OrganizationHierarchy) SetCreatedAt(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CreatedAt, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 12)
	}
}

func (x *OrganizationHierarchy) SetUpdatedAt(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_UpdatedAt, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 12)
	}
}

func (x *OrganizationHierarchy) SetCreatedBy(v string) {
	x.xxx_hidden_CreatedBy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 12)
}

func (x *OrganizationHierarchy) SetUpdatedBy(v string) {
	x.xxx_hidden_UpdatedBy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 12)
}

func (x *OrganizationHierarchy) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OrganizationHierarchy) HasOrganizationId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *OrganizationHierarchy) HasHierarchyType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *OrganizationHierarchy) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *OrganizationHierarchy) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *OrganizationHierarchy) HasRootNode() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RootNode != nil
}

func (x *OrganizationHierarchy) HasActive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *OrganizationHierarchy) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *OrganizationHierarchy) HasUpdatedAt() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *OrganizationHierarchy) HasCreatedBy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *OrganizationHierarchy) HasUpdatedBy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *OrganizationHierarchy) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *OrganizationHierarchy) ClearOrganizationId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OrganizationId = nil
}

func (x *OrganizationHierarchy) ClearHierarchyType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_HierarchyType = common.HierarchyType_HIERARCHY_TYPE_UNSPECIFIED
}

func (x *OrganizationHierarchy) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *OrganizationHierarchy) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Description = nil
}

func (x *OrganizationHierarchy) ClearRootNode() {
	x.xxx_hidden_RootNode = nil
}

func (x *OrganizationHierarchy) ClearActive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Active = false
}

func (x *OrganizationHierarchy) ClearCreatedAt() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CreatedAt, (*timestamppb.Timestamp)(nil))
}

func (x *OrganizationHierarchy) ClearUpdatedAt() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_UpdatedAt, (*timestamppb.Timestamp)(nil))
}

func (x *OrganizationHierarchy) ClearCreatedBy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_CreatedBy = nil
}

func (x *OrganizationHierarchy) ClearUpdatedBy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_UpdatedBy = nil
}

type OrganizationHierarchy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique hierarchy identifier
	Id *string
	// Organization identifier
	OrganizationId *string
	// Type of hierarchy structure
	HierarchyType *common.HierarchyType
	// Name of this hierarchy configuration
	Name *string
	// Description of this hierarchy structure
	Description *string
	// Root node of the hierarchy (typically the organization itself)
	RootNode *HierarchyNode
	// Whether this hierarchy is currently active/primary
	Active *bool
	// Hierarchy metadata and configuration
	Metadata []*common.KeyValue
	// Hierarchy creation timestamp
	CreatedAt *timestamppb.Timestamp
	// Last update timestamp
	UpdatedAt *timestamppb.Timestamp
	// User ID who created this hierarchy
	CreatedBy *string
	// User ID who last updated this hierarchy
	UpdatedBy *string
}

func (b0 OrganizationHierarchy_builder) Build() *OrganizationHierarchy {
	m0 := &OrganizationHierarchy{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 12)
		x.xxx_hidden_Id = b.Id
	}
	if b.OrganizationId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 12)
		x.xxx_hidden_OrganizationId = b.OrganizationId
	}
	if b.HierarchyType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 12)
		x.xxx_hidden_HierarchyType = *b.HierarchyType
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 12)
		x.xxx_hidden_Name = b.Name
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 12)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_RootNode = b.RootNode
	if b.Active != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 12)
		x.xxx_hidden_Active = *b.Active
	}
	if b.Metadata != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 12)
		x.xxx_hidden_Metadata = &b.Metadata
	}
	if b.CreatedAt != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 12)
		x.xxx_hidden_CreatedAt = b.CreatedAt
	}
	if b.UpdatedAt != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 12)
		x.xxx_hidden_UpdatedAt = b.UpdatedAt
	}
	if b.CreatedBy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 12)
		x.xxx_hidden_CreatedBy = b.CreatedBy
	}
	if b.UpdatedBy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 12)
		x.xxx_hidden_UpdatedBy = b.UpdatedBy
	}
	return m0
}

var File_gcommon_v1_organization_organization_hierarchy_proto protoreflect.FileDescriptor

const file_gcommon_v1_organization_organization_hierarchy_proto_rawDesc = "" +
	"\n" +
	"4gcommon/v1/organization/organization_hierarchy.proto\x12\x17gcommon.v1.organization\x1a&gcommon/v1/common/hierarchy_type.proto\x1a!gcommon/v1/common/key_value.proto\x1a,gcommon/v1/organization/hierarchy_node.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa5\x04\n" +
	"\x15OrganizationHierarchy\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x0forganization_id\x18\x02 \x01(\tR\x0eorganizationId\x12G\n" +
	"\x0ehierarchy_type\x18\x03 \x01(\x0e2 .gcommon.v1.common.HierarchyTypeR\rhierarchyType\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12C\n" +
	"\troot_node\x18\x06 \x01(\v2&.gcommon.v1.organization.HierarchyNodeR\brootNode\x12\x16\n" +
	"\x06active\x18\a \x01(\bR\x06active\x12;\n" +
	"\bmetadata\x18\b \x03(\v2\x1b.gcommon.v1.common.KeyValueB\x02(\x01R\bmetadata\x12=\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\tcreatedAt\x12=\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\v \x01(\tR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"updated_by\x18\f \x01(\tR\tupdatedByB;Z1github.com/jdfalk/gcommon/sdks/go/v1/organization\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_organization_organization_hierarchy_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_organization_organization_hierarchy_proto_goTypes = []any{
	(*OrganizationHierarchy)(nil), // 0: gcommon.v1.organization.OrganizationHierarchy
	(common.HierarchyType)(0),     // 1: gcommon.v1.common.HierarchyType
	(*HierarchyNode)(nil),         // 2: gcommon.v1.organization.HierarchyNode
	(*common.KeyValue)(nil),       // 3: gcommon.v1.common.KeyValue
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_gcommon_v1_organization_organization_hierarchy_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.organization.OrganizationHierarchy.hierarchy_type:type_name -> gcommon.v1.common.HierarchyType
	2, // 1: gcommon.v1.organization.OrganizationHierarchy.root_node:type_name -> gcommon.v1.organization.HierarchyNode
	3, // 2: gcommon.v1.organization.OrganizationHierarchy.metadata:type_name -> gcommon.v1.common.KeyValue
	4, // 3: gcommon.v1.organization.OrganizationHierarchy.created_at:type_name -> google.protobuf.Timestamp
	4, // 4: gcommon.v1.organization.OrganizationHierarchy.updated_at:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gcommon_v1_organization_organization_hierarchy_proto_init() }
func file_gcommon_v1_organization_organization_hierarchy_proto_init() {
	if File_gcommon_v1_organization_organization_hierarchy_proto != nil {
		return
	}
	file_gcommon_v1_organization_hierarchy_node_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_organization_organization_hierarchy_proto_rawDesc), len(file_gcommon_v1_organization_organization_hierarchy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_organization_organization_hierarchy_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_organization_organization_hierarchy_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_organization_organization_hierarchy_proto_msgTypes,
	}.Build()
	File_gcommon_v1_organization_organization_hierarchy_proto = out.File
	file_gcommon_v1_organization_organization_hierarchy_proto_goTypes = nil
	file_gcommon_v1_organization_organization_hierarchy_proto_depIdxs = nil
}
