// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/message_nack.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageNack struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MessageId       *string                `protobuf:"bytes,1,opt,name=message_id,json=messageId"`
	xxx_hidden_DeliveryTag     *string                `protobuf:"bytes,2,opt,name=delivery_tag,json=deliveryTag"`
	xxx_hidden_PartitionId     int32                  `protobuf:"varint,3,opt,name=partition_id,json=partitionId"`
	xxx_hidden_MessageOffset   int64                  `protobuf:"varint,4,opt,name=message_offset,json=messageOffset"`
	xxx_hidden_NackReason      *string                `protobuf:"bytes,5,opt,name=nack_reason,json=nackReason"`
	xxx_hidden_ErrorCategory   NackErrorCategory      `protobuf:"varint,6,opt,name=error_category,json=errorCategory,enum=gcommon.v1.queue.NackErrorCategory"`
	xxx_hidden_ErrorCode       *string                `protobuf:"bytes,7,opt,name=error_code,json=errorCode"`
	xxx_hidden_RetryMessage    bool                   `protobuf:"varint,8,opt,name=retry_message,json=retryMessage"`
	xxx_hidden_RetryDelayMs    int64                  `protobuf:"varint,9,opt,name=retry_delay_ms,json=retryDelayMs"`
	xxx_hidden_MessageMetadata map[string]string      `protobuf:"bytes,10,rep,name=message_metadata,json=messageMetadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *MessageNack) Reset() {
	*x = MessageNack{}
	mi := &file_gcommon_v1_queue_messages_message_nack_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageNack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageNack) ProtoMessage() {}

func (x *MessageNack) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_message_nack_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MessageNack) GetMessageId() string {
	if x != nil {
		if x.xxx_hidden_MessageId != nil {
			return *x.xxx_hidden_MessageId
		}
		return ""
	}
	return ""
}

func (x *MessageNack) GetDeliveryTag() string {
	if x != nil {
		if x.xxx_hidden_DeliveryTag != nil {
			return *x.xxx_hidden_DeliveryTag
		}
		return ""
	}
	return ""
}

func (x *MessageNack) GetPartitionId() int32 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *MessageNack) GetMessageOffset() int64 {
	if x != nil {
		return x.xxx_hidden_MessageOffset
	}
	return 0
}

func (x *MessageNack) GetNackReason() string {
	if x != nil {
		if x.xxx_hidden_NackReason != nil {
			return *x.xxx_hidden_NackReason
		}
		return ""
	}
	return ""
}

func (x *MessageNack) GetErrorCategory() NackErrorCategory {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_ErrorCategory
		}
	}
	return NackErrorCategory_NACK_ERROR_CATEGORY_UNSPECIFIED
}

func (x *MessageNack) GetErrorCode() string {
	if x != nil {
		if x.xxx_hidden_ErrorCode != nil {
			return *x.xxx_hidden_ErrorCode
		}
		return ""
	}
	return ""
}

func (x *MessageNack) GetRetryMessage() bool {
	if x != nil {
		return x.xxx_hidden_RetryMessage
	}
	return false
}

func (x *MessageNack) GetRetryDelayMs() int64 {
	if x != nil {
		return x.xxx_hidden_RetryDelayMs
	}
	return 0
}

func (x *MessageNack) GetMessageMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_MessageMetadata
	}
	return nil
}

func (x *MessageNack) SetMessageId(v string) {
	x.xxx_hidden_MessageId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *MessageNack) SetDeliveryTag(v string) {
	x.xxx_hidden_DeliveryTag = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *MessageNack) SetPartitionId(v int32) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *MessageNack) SetMessageOffset(v int64) {
	x.xxx_hidden_MessageOffset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *MessageNack) SetNackReason(v string) {
	x.xxx_hidden_NackReason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *MessageNack) SetErrorCategory(v NackErrorCategory) {
	x.xxx_hidden_ErrorCategory = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *MessageNack) SetErrorCode(v string) {
	x.xxx_hidden_ErrorCode = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *MessageNack) SetRetryMessage(v bool) {
	x.xxx_hidden_RetryMessage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 10)
}

func (x *MessageNack) SetRetryDelayMs(v int64) {
	x.xxx_hidden_RetryDelayMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
}

func (x *MessageNack) SetMessageMetadata(v map[string]string) {
	x.xxx_hidden_MessageMetadata = v
}

func (x *MessageNack) HasMessageId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MessageNack) HasDeliveryTag() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MessageNack) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MessageNack) HasMessageOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MessageNack) HasNackReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *MessageNack) HasErrorCategory() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *MessageNack) HasErrorCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *MessageNack) HasRetryMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *MessageNack) HasRetryDelayMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *MessageNack) ClearMessageId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MessageId = nil
}

func (x *MessageNack) ClearDeliveryTag() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DeliveryTag = nil
}

func (x *MessageNack) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartitionId = 0
}

func (x *MessageNack) ClearMessageOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MessageOffset = 0
}

func (x *MessageNack) ClearNackReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_NackReason = nil
}

func (x *MessageNack) ClearErrorCategory() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ErrorCategory = NackErrorCategory_NACK_ERROR_CATEGORY_UNSPECIFIED
}

func (x *MessageNack) ClearErrorCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ErrorCode = nil
}

func (x *MessageNack) ClearRetryMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_RetryMessage = false
}

func (x *MessageNack) ClearRetryDelayMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_RetryDelayMs = 0
}

type MessageNack_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Message identifier
	MessageId *string
	// Message delivery tag
	DeliveryTag *string
	// Partition ID containing the message
	PartitionId *int32
	// Message offset
	MessageOffset *int64
	// Reason for negative acknowledgment
	NackReason *string
	// Error category for the nack
	ErrorCategory *NackErrorCategory
	// Specific error code
	ErrorCode *string
	// Retry this specific message
	RetryMessage *bool
	// Custom retry delay for this message (milliseconds)
	RetryDelayMs *int64
	// Message-specific metadata
	MessageMetadata map[string]string
}

func (b0 MessageNack_builder) Build() *MessageNack {
	m0 := &MessageNack{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MessageId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_MessageId = b.MessageId
	}
	if b.DeliveryTag != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_DeliveryTag = b.DeliveryTag
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.MessageOffset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_MessageOffset = *b.MessageOffset
	}
	if b.NackReason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_NackReason = b.NackReason
	}
	if b.ErrorCategory != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_ErrorCategory = *b.ErrorCategory
	}
	if b.ErrorCode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_ErrorCode = b.ErrorCode
	}
	if b.RetryMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 10)
		x.xxx_hidden_RetryMessage = *b.RetryMessage
	}
	if b.RetryDelayMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_RetryDelayMs = *b.RetryDelayMs
	}
	x.xxx_hidden_MessageMetadata = b.MessageMetadata
	return m0
}

var File_gcommon_v1_queue_messages_message_nack_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_message_nack_proto_rawDesc = "" +
	"\n" +
	",gcommon/v1/queue/messages/message_nack.proto\x12\x10gcommon.v1.queue\x1a0gcommon/v1/queue/enums/nack_error_category.proto\x1a!google/protobuf/go_features.proto\"\x93\x04\n" +
	"\vMessageNack\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12!\n" +
	"\fdelivery_tag\x18\x02 \x01(\tR\vdeliveryTag\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\x05R\vpartitionId\x12%\n" +
	"\x0emessage_offset\x18\x04 \x01(\x03R\rmessageOffset\x12\x1f\n" +
	"\vnack_reason\x18\x05 \x01(\tR\n" +
	"nackReason\x12J\n" +
	"\x0eerror_category\x18\x06 \x01(\x0e2#.gcommon.v1.queue.NackErrorCategoryR\rerrorCategory\x12\x1d\n" +
	"\n" +
	"error_code\x18\a \x01(\tR\terrorCode\x12#\n" +
	"\rretry_message\x18\b \x01(\bR\fretryMessage\x12$\n" +
	"\x0eretry_delay_ms\x18\t \x01(\x03R\fretryDelayMs\x12]\n" +
	"\x10message_metadata\x18\n" +
	" \x03(\v22.gcommon.v1.queue.MessageNack.MessageMetadataEntryR\x0fmessageMetadata\x1aB\n" +
	"\x14MessageMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xc6\x01\n" +
	"\x14com.gcommon.v1.queueB\x10MessageNackProtoP\x01Z2github.com/jdfalk/gcommon/sdks/go/gcommon/v1/queue\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_message_nack_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_queue_messages_message_nack_proto_goTypes = []any{
	(*MessageNack)(nil),    // 0: gcommon.v1.queue.MessageNack
	nil,                    // 1: gcommon.v1.queue.MessageNack.MessageMetadataEntry
	(NackErrorCategory)(0), // 2: gcommon.v1.queue.NackErrorCategory
}
var file_gcommon_v1_queue_messages_message_nack_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.queue.MessageNack.error_category:type_name -> gcommon.v1.queue.NackErrorCategory
	1, // 1: gcommon.v1.queue.MessageNack.message_metadata:type_name -> gcommon.v1.queue.MessageNack.MessageMetadataEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_message_nack_proto_init() }
func file_gcommon_v1_queue_messages_message_nack_proto_init() {
	if File_gcommon_v1_queue_messages_message_nack_proto != nil {
		return
	}
	file_gcommon_v1_queue_enums_nack_error_category_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_message_nack_proto_rawDesc), len(file_gcommon_v1_queue_messages_message_nack_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_message_nack_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_message_nack_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_message_nack_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_message_nack_proto = out.File
	file_gcommon_v1_queue_messages_message_nack_proto_goTypes = nil
	file_gcommon_v1_queue_messages_message_nack_proto_depIdxs = nil
}
