// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/rate_limit_config.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RateLimitConfig defines throughput limits for a queue.
type QueueRateLimitConfig struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MaxPerSecond int32                  `protobuf:"varint,1,opt,name=max_per_second,json=maxPerSecond"`
	xxx_hidden_Burst        int32                  `protobuf:"varint,2,opt,name=burst"`
	xxx_hidden_Enabled      bool                   `protobuf:"varint,3,opt,name=enabled"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *QueueRateLimitConfig) Reset() {
	*x = QueueRateLimitConfig{}
	mi := &file_gcommon_v1_queue_messages_rate_limit_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueRateLimitConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueRateLimitConfig) ProtoMessage() {}

func (x *QueueRateLimitConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_rate_limit_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueueRateLimitConfig) GetMaxPerSecond() int32 {
	if x != nil {
		return x.xxx_hidden_MaxPerSecond
	}
	return 0
}

func (x *QueueRateLimitConfig) GetBurst() int32 {
	if x != nil {
		return x.xxx_hidden_Burst
	}
	return 0
}

func (x *QueueRateLimitConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *QueueRateLimitConfig) SetMaxPerSecond(v int32) {
	x.xxx_hidden_MaxPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *QueueRateLimitConfig) SetBurst(v int32) {
	x.xxx_hidden_Burst = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *QueueRateLimitConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *QueueRateLimitConfig) HasMaxPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QueueRateLimitConfig) HasBurst() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *QueueRateLimitConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *QueueRateLimitConfig) ClearMaxPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MaxPerSecond = 0
}

func (x *QueueRateLimitConfig) ClearBurst() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Burst = 0
}

func (x *QueueRateLimitConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Enabled = false
}

type QueueRateLimitConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum messages allowed per second.
	MaxPerSecond *int32
	// Allowed burst capacity above the per-second rate.
	Burst *int32
	// Whether rate limiting is enabled.
	Enabled *bool
}

func (b0 QueueRateLimitConfig_builder) Build() *QueueRateLimitConfig {
	m0 := &QueueRateLimitConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MaxPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_MaxPerSecond = *b.MaxPerSecond
	}
	if b.Burst != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Burst = *b.Burst
	}
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	return m0
}

var File_gcommon_v1_queue_messages_rate_limit_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_rate_limit_config_proto_rawDesc = "" +
	"\n" +
	"1gcommon/v1/queue/messages/rate_limit_config.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\"l\n" +
	"\x14QueueRateLimitConfig\x12$\n" +
	"\x0emax_per_second\x18\x01 \x01(\x05R\fmaxPerSecond\x12\x14\n" +
	"\x05burst\x18\x02 \x01(\x05R\x05burst\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabledB\xca\x01\n" +
	"\x14com.gcommon.v1.queueB\x14RateLimitConfigProtoP\x01Z2github.com/jdfalk/gcommon/sdks/go/gcommon/v1/queue\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_rate_limit_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_rate_limit_config_proto_goTypes = []any{
	(*QueueRateLimitConfig)(nil), // 0: gcommon.v1.queue.QueueRateLimitConfig
}
var file_gcommon_v1_queue_messages_rate_limit_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_rate_limit_config_proto_init() }
func file_gcommon_v1_queue_messages_rate_limit_config_proto_init() {
	if File_gcommon_v1_queue_messages_rate_limit_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_rate_limit_config_proto_rawDesc), len(file_gcommon_v1_queue_messages_rate_limit_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_rate_limit_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_rate_limit_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_rate_limit_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_rate_limit_config_proto = out.File
	file_gcommon_v1_queue_messages_rate_limit_config_proto_goTypes = nil
	file_gcommon_v1_queue_messages_rate_limit_config_proto_depIdxs = nil
}
