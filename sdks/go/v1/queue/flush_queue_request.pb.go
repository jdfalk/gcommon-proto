// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/queue/flush_queue_request.proto

package queue

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FlushQueueRequest forces queue messages to be flushed to persistent storage
type FlushQueueRequest struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_QueueId           *string                `protobuf:"bytes,1,opt,name=queue_id,json=queueId"`
	xxx_hidden_FlushPolicy       common.FlushPolicy     `protobuf:"varint,2,opt,name=flush_policy,json=flushPolicy,enum=gcommon.v1.common.FlushPolicy"`
	xxx_hidden_WaitForCompletion bool                   `protobuf:"varint,3,opt,name=wait_for_completion,json=waitForCompletion"`
	xxx_hidden_TimeoutMs         int32                  `protobuf:"varint,4,opt,name=timeout_ms,json=timeoutMs"`
	xxx_hidden_FlushUntil        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=flush_until,json=flushUntil"`
	xxx_hidden_PartitionIds      []int32                `protobuf:"varint,6,rep,packed,name=partition_ids,json=partitionIds"`
	xxx_hidden_ForceFlush        bool                   `protobuf:"varint,7,opt,name=force_flush,json=forceFlush"`
	xxx_hidden_Metadata          map[string]string      `protobuf:"bytes,8,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *FlushQueueRequest) Reset() {
	*x = FlushQueueRequest{}
	mi := &file_gcommon_v1_queue_flush_queue_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlushQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushQueueRequest) ProtoMessage() {}

func (x *FlushQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_flush_queue_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FlushQueueRequest) GetQueueId() string {
	if x != nil {
		if x.xxx_hidden_QueueId != nil {
			return *x.xxx_hidden_QueueId
		}
		return ""
	}
	return ""
}

func (x *FlushQueueRequest) GetFlushPolicy() common.FlushPolicy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_FlushPolicy
		}
	}
	return common.FlushPolicy(0)
}

func (x *FlushQueueRequest) GetWaitForCompletion() bool {
	if x != nil {
		return x.xxx_hidden_WaitForCompletion
	}
	return false
}

func (x *FlushQueueRequest) GetTimeoutMs() int32 {
	if x != nil {
		return x.xxx_hidden_TimeoutMs
	}
	return 0
}

func (x *FlushQueueRequest) GetFlushUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_FlushUntil
	}
	return nil
}

func (x *FlushQueueRequest) GetPartitionIds() []int32 {
	if x != nil {
		return x.xxx_hidden_PartitionIds
	}
	return nil
}

func (x *FlushQueueRequest) GetForceFlush() bool {
	if x != nil {
		return x.xxx_hidden_ForceFlush
	}
	return false
}

func (x *FlushQueueRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *FlushQueueRequest) SetQueueId(v string) {
	x.xxx_hidden_QueueId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *FlushQueueRequest) SetFlushPolicy(v common.FlushPolicy) {
	x.xxx_hidden_FlushPolicy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *FlushQueueRequest) SetWaitForCompletion(v bool) {
	x.xxx_hidden_WaitForCompletion = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *FlushQueueRequest) SetTimeoutMs(v int32) {
	x.xxx_hidden_TimeoutMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *FlushQueueRequest) SetFlushUntil(v *timestamppb.Timestamp) {
	x.xxx_hidden_FlushUntil = v
}

func (x *FlushQueueRequest) SetPartitionIds(v []int32) {
	x.xxx_hidden_PartitionIds = v
}

func (x *FlushQueueRequest) SetForceFlush(v bool) {
	x.xxx_hidden_ForceFlush = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *FlushQueueRequest) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *FlushQueueRequest) HasQueueId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FlushQueueRequest) HasFlushPolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FlushQueueRequest) HasWaitForCompletion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FlushQueueRequest) HasTimeoutMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FlushQueueRequest) HasFlushUntil() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FlushUntil != nil
}

func (x *FlushQueueRequest) HasForceFlush() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *FlushQueueRequest) ClearQueueId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_QueueId = nil
}

func (x *FlushQueueRequest) ClearFlushPolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FlushPolicy = common.FlushPolicy_FLUSH_POLICY_UNSPECIFIED
}

func (x *FlushQueueRequest) ClearWaitForCompletion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_WaitForCompletion = false
}

func (x *FlushQueueRequest) ClearTimeoutMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TimeoutMs = 0
}

func (x *FlushQueueRequest) ClearFlushUntil() {
	x.xxx_hidden_FlushUntil = nil
}

func (x *FlushQueueRequest) ClearForceFlush() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ForceFlush = false
}

type FlushQueueRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Queue identifier to flush
	QueueId *string
	// Flush policy to apply
	FlushPolicy *common.FlushPolicy
	// Wait for flush completion before returning
	WaitForCompletion *bool
	// Maximum time to wait for flush completion (milliseconds)
	TimeoutMs *int32
	// Flush only messages up to this timestamp
	FlushUntil *timestamppb.Timestamp
	// Include specific partitions only (empty = all partitions)
	PartitionIds []int32
	// Force flush even if not needed
	ForceFlush *bool
	// Optional metadata for the flush operation
	Metadata map[string]string
}

func (b0 FlushQueueRequest_builder) Build() *FlushQueueRequest {
	m0 := &FlushQueueRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.QueueId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_QueueId = b.QueueId
	}
	if b.FlushPolicy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_FlushPolicy = *b.FlushPolicy
	}
	if b.WaitForCompletion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_WaitForCompletion = *b.WaitForCompletion
	}
	if b.TimeoutMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_TimeoutMs = *b.TimeoutMs
	}
	x.xxx_hidden_FlushUntil = b.FlushUntil
	x.xxx_hidden_PartitionIds = b.PartitionIds
	if b.ForceFlush != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_ForceFlush = *b.ForceFlush
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

var File_gcommon_v1_queue_flush_queue_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_flush_queue_request_proto_rawDesc = "" +
	"\n" +
	"*gcommon/v1/queue/flush_queue_request.proto\x12\x10gcommon.v1.queue\x1a$gcommon/v1/common/flush_policy.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bbuf/validate/validate.proto\"\xeb\x03\n" +
	"\x11FlushQueueRequest\x12\"\n" +
	"\bqueue_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\aqueueId\x12A\n" +
	"\fflush_policy\x18\x02 \x01(\x0e2\x1e.gcommon.v1.common.FlushPolicyR\vflushPolicy\x12.\n" +
	"\x13wait_for_completion\x18\x03 \x01(\bR\x11waitForCompletion\x12&\n" +
	"\n" +
	"timeout_ms\x18\x04 \x01(\x05B\a\xbaH\x04\x1a\x02 \x00R\ttimeoutMs\x12;\n" +
	"\vflush_until\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"flushUntil\x12-\n" +
	"\rpartition_ids\x18\x06 \x03(\x05B\b\xbaH\x05\x92\x01\x02\b\x01R\fpartitionIds\x12\x1f\n" +
	"\vforce_flush\x18\a \x01(\bR\n" +
	"forceFlush\x12M\n" +
	"\bmetadata\x18\b \x03(\v21.gcommon.v1.queue.FlushQueueRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_flush_queue_request_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_queue_flush_queue_request_proto_goTypes = []any{
	(*FlushQueueRequest)(nil),     // 0: gcommon.v1.queue.FlushQueueRequest
	nil,                           // 1: gcommon.v1.queue.FlushQueueRequest.MetadataEntry
	(common.FlushPolicy)(0),       // 2: gcommon.v1.common.FlushPolicy
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_gcommon_v1_queue_flush_queue_request_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.queue.FlushQueueRequest.flush_policy:type_name -> gcommon.v1.common.FlushPolicy
	3, // 1: gcommon.v1.queue.FlushQueueRequest.flush_until:type_name -> google.protobuf.Timestamp
	1, // 2: gcommon.v1.queue.FlushQueueRequest.metadata:type_name -> gcommon.v1.queue.FlushQueueRequest.MetadataEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_flush_queue_request_proto_init() }
func file_gcommon_v1_queue_flush_queue_request_proto_init() {
	if File_gcommon_v1_queue_flush_queue_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_flush_queue_request_proto_rawDesc), len(file_gcommon_v1_queue_flush_queue_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_flush_queue_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_flush_queue_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_flush_queue_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_flush_queue_request_proto = out.File
	file_gcommon_v1_queue_flush_queue_request_proto_goTypes = nil
	file_gcommon_v1_queue_flush_queue_request_proto_depIdxs = nil
}
