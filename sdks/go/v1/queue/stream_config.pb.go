// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/stream_config.proto

package queue

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Configuration for streaming message consumption.
type StreamConfig struct {
	state                             protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_BufferSize             int32                      `protobuf:"varint,1,opt,name=buffer_size,json=bufferSize"`
	xxx_hidden_ReadTimeout            *durationpb.Duration       `protobuf:"bytes,2,opt,name=read_timeout,json=readTimeout"`
	xxx_hidden_FlowControlEnabled     bool                       `protobuf:"varint,3,opt,name=flow_control_enabled,json=flowControlEnabled"`
	xxx_hidden_MaxOutstandingMessages int32                      `protobuf:"varint,4,opt,name=max_outstanding_messages,json=maxOutstandingMessages"`
	xxx_hidden_MaxOutstandingBytes    int64                      `protobuf:"varint,5,opt,name=max_outstanding_bytes,json=maxOutstandingBytes"`
	xxx_hidden_AutoAck                bool                       `protobuf:"varint,6,opt,name=auto_ack,json=autoAck"`
	xxx_hidden_AckDeadline            *durationpb.Duration       `protobuf:"bytes,7,opt,name=ack_deadline,json=ackDeadline"`
	xxx_hidden_EnableMessageOrdering  bool                       `protobuf:"varint,8,opt,name=enable_message_ordering,json=enableMessageOrdering"`
	xxx_hidden_RestartPolicy          common.StreamRestartPolicy `protobuf:"varint,9,opt,name=restart_policy,json=restartPolicy,enum=gcommon.v1.common.StreamRestartPolicy"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *StreamConfig) Reset() {
	*x = StreamConfig{}
	mi := &file_gcommon_v1_queue_stream_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamConfig) ProtoMessage() {}

func (x *StreamConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_stream_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamConfig) GetBufferSize() int32 {
	if x != nil {
		return x.xxx_hidden_BufferSize
	}
	return 0
}

func (x *StreamConfig) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_ReadTimeout
	}
	return nil
}

func (x *StreamConfig) GetFlowControlEnabled() bool {
	if x != nil {
		return x.xxx_hidden_FlowControlEnabled
	}
	return false
}

func (x *StreamConfig) GetMaxOutstandingMessages() int32 {
	if x != nil {
		return x.xxx_hidden_MaxOutstandingMessages
	}
	return 0
}

func (x *StreamConfig) GetMaxOutstandingBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MaxOutstandingBytes
	}
	return 0
}

func (x *StreamConfig) GetAutoAck() bool {
	if x != nil {
		return x.xxx_hidden_AutoAck
	}
	return false
}

func (x *StreamConfig) GetAckDeadline() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_AckDeadline
	}
	return nil
}

func (x *StreamConfig) GetEnableMessageOrdering() bool {
	if x != nil {
		return x.xxx_hidden_EnableMessageOrdering
	}
	return false
}

func (x *StreamConfig) GetRestartPolicy() common.StreamRestartPolicy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			return x.xxx_hidden_RestartPolicy
		}
	}
	return common.StreamRestartPolicy(0)
}

func (x *StreamConfig) SetBufferSize(v int32) {
	x.xxx_hidden_BufferSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *StreamConfig) SetReadTimeout(v *durationpb.Duration) {
	x.xxx_hidden_ReadTimeout = v
}

func (x *StreamConfig) SetFlowControlEnabled(v bool) {
	x.xxx_hidden_FlowControlEnabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *StreamConfig) SetMaxOutstandingMessages(v int32) {
	x.xxx_hidden_MaxOutstandingMessages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *StreamConfig) SetMaxOutstandingBytes(v int64) {
	x.xxx_hidden_MaxOutstandingBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *StreamConfig) SetAutoAck(v bool) {
	x.xxx_hidden_AutoAck = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *StreamConfig) SetAckDeadline(v *durationpb.Duration) {
	x.xxx_hidden_AckDeadline = v
}

func (x *StreamConfig) SetEnableMessageOrdering(v bool) {
	x.xxx_hidden_EnableMessageOrdering = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *StreamConfig) SetRestartPolicy(v common.StreamRestartPolicy) {
	x.xxx_hidden_RestartPolicy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *StreamConfig) HasBufferSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StreamConfig) HasReadTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ReadTimeout != nil
}

func (x *StreamConfig) HasFlowControlEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StreamConfig) HasMaxOutstandingMessages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *StreamConfig) HasMaxOutstandingBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *StreamConfig) HasAutoAck() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *StreamConfig) HasAckDeadline() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AckDeadline != nil
}

func (x *StreamConfig) HasEnableMessageOrdering() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *StreamConfig) HasRestartPolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *StreamConfig) ClearBufferSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BufferSize = 0
}

func (x *StreamConfig) ClearReadTimeout() {
	x.xxx_hidden_ReadTimeout = nil
}

func (x *StreamConfig) ClearFlowControlEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_FlowControlEnabled = false
}

func (x *StreamConfig) ClearMaxOutstandingMessages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MaxOutstandingMessages = 0
}

func (x *StreamConfig) ClearMaxOutstandingBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MaxOutstandingBytes = 0
}

func (x *StreamConfig) ClearAutoAck() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_AutoAck = false
}

func (x *StreamConfig) ClearAckDeadline() {
	x.xxx_hidden_AckDeadline = nil
}

func (x *StreamConfig) ClearEnableMessageOrdering() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_EnableMessageOrdering = false
}

func (x *StreamConfig) ClearRestartPolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_RestartPolicy = common.StreamRestartPolicy_STREAM_RESTART_POLICY_UNSPECIFIED
}

type StreamConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum number of messages to buffer
	BufferSize *int32
	// Timeout for stream read operations
	ReadTimeout *durationpb.Duration
	// Whether to enable flow control
	FlowControlEnabled *bool
	// Maximum outstanding messages before flow control kicks in
	MaxOutstandingMessages *int32
	// Maximum outstanding bytes before flow control kicks in
	MaxOutstandingBytes *int64
	// Whether to automatically acknowledge messages
	AutoAck *bool
	// Acknowledgment deadline for manually acknowledged messages
	AckDeadline *durationpb.Duration
	// Whether to enable message ordering
	EnableMessageOrdering *bool
	// Stream restart policy on failure
	RestartPolicy *common.StreamRestartPolicy
}

func (b0 StreamConfig_builder) Build() *StreamConfig {
	m0 := &StreamConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BufferSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_BufferSize = *b.BufferSize
	}
	x.xxx_hidden_ReadTimeout = b.ReadTimeout
	if b.FlowControlEnabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_FlowControlEnabled = *b.FlowControlEnabled
	}
	if b.MaxOutstandingMessages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_MaxOutstandingMessages = *b.MaxOutstandingMessages
	}
	if b.MaxOutstandingBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_MaxOutstandingBytes = *b.MaxOutstandingBytes
	}
	if b.AutoAck != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_AutoAck = *b.AutoAck
	}
	x.xxx_hidden_AckDeadline = b.AckDeadline
	if b.EnableMessageOrdering != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_EnableMessageOrdering = *b.EnableMessageOrdering
	}
	if b.RestartPolicy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_RestartPolicy = *b.RestartPolicy
	}
	return m0
}

var File_gcommon_v1_queue_stream_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_stream_config_proto_rawDesc = "" +
	"\n" +
	"$gcommon/v1/queue/stream_config.proto\x12\x10gcommon.v1.queue\x1a-gcommon/v1/common/stream_restart_policy.proto\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\x8b\x04\n" +
	"\fStreamConfig\x12(\n" +
	"\vbuffer_size\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\n" +
	"bufferSize\x12<\n" +
	"\fread_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\vreadTimeout\x120\n" +
	"\x14flow_control_enabled\x18\x03 \x01(\bR\x12flowControlEnabled\x12D\n" +
	"\x18max_outstanding_messages\x18\x04 \x01(\x05B\n" +
	"\xbaH\a\x1a\x05\x18\x96\x01(\x00R\x16maxOutstandingMessages\x12;\n" +
	"\x15max_outstanding_bytes\x18\x05 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\x13maxOutstandingBytes\x12\x19\n" +
	"\bauto_ack\x18\x06 \x01(\bR\aautoAck\x12<\n" +
	"\fack_deadline\x18\a \x01(\v2\x19.google.protobuf.DurationR\vackDeadline\x126\n" +
	"\x17enable_message_ordering\x18\b \x01(\bR\x15enableMessageOrdering\x12M\n" +
	"\x0erestart_policy\x18\t \x01(\x0e2&.gcommon.v1.common.StreamRestartPolicyR\rrestartPolicyB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_stream_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_stream_config_proto_goTypes = []any{
	(*StreamConfig)(nil),            // 0: gcommon.v1.queue.StreamConfig
	(*durationpb.Duration)(nil),     // 1: google.protobuf.Duration
	(common.StreamRestartPolicy)(0), // 2: gcommon.v1.common.StreamRestartPolicy
}
var file_gcommon_v1_queue_stream_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.StreamConfig.read_timeout:type_name -> google.protobuf.Duration
	1, // 1: gcommon.v1.queue.StreamConfig.ack_deadline:type_name -> google.protobuf.Duration
	2, // 2: gcommon.v1.queue.StreamConfig.restart_policy:type_name -> gcommon.v1.common.StreamRestartPolicy
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_stream_config_proto_init() }
func file_gcommon_v1_queue_stream_config_proto_init() {
	if File_gcommon_v1_queue_stream_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_stream_config_proto_rawDesc), len(file_gcommon_v1_queue_stream_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_stream_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_stream_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_stream_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_stream_config_proto = out.File
	file_gcommon_v1_queue_stream_config_proto_goTypes = nil
	file_gcommon_v1_queue_stream_config_proto_depIdxs = nil
}
