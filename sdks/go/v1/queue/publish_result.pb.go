// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/queue/publish_result.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Result for an individual message publish
type PublishResult struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MessageId   *string                `protobuf:"bytes,1,opt,name=message_id,json=messageId"`
	xxx_hidden_Success     bool                   `protobuf:"varint,2,opt,name=success"`
	xxx_hidden_Error       *string                `protobuf:"bytes,3,opt,name=error"`
	xxx_hidden_PartitionId int32                  `protobuf:"varint,4,opt,name=partition_id,json=partitionId"`
	xxx_hidden_Offset      int64                  `protobuf:"varint,5,opt,name=offset"`
	xxx_hidden_Timestamp   int64                  `protobuf:"varint,6,opt,name=timestamp"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PublishResult) Reset() {
	*x = PublishResult{}
	mi := &file_gcommon_v1_queue_publish_result_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResult) ProtoMessage() {}

func (x *PublishResult) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_publish_result_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PublishResult) GetMessageId() string {
	if x != nil {
		if x.xxx_hidden_MessageId != nil {
			return *x.xxx_hidden_MessageId
		}
		return ""
	}
	return ""
}

func (x *PublishResult) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *PublishResult) GetError() string {
	if x != nil {
		if x.xxx_hidden_Error != nil {
			return *x.xxx_hidden_Error
		}
		return ""
	}
	return ""
}

func (x *PublishResult) GetPartitionId() int32 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *PublishResult) GetOffset() int64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *PublishResult) GetTimestamp() int64 {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return 0
}

func (x *PublishResult) SetMessageId(v string) {
	x.xxx_hidden_MessageId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *PublishResult) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *PublishResult) SetError(v string) {
	x.xxx_hidden_Error = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *PublishResult) SetPartitionId(v int32) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *PublishResult) SetOffset(v int64) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *PublishResult) SetTimestamp(v int64) {
	x.xxx_hidden_Timestamp = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *PublishResult) HasMessageId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PublishResult) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PublishResult) HasError() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PublishResult) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PublishResult) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *PublishResult) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *PublishResult) ClearMessageId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MessageId = nil
}

func (x *PublishResult) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Success = false
}

func (x *PublishResult) ClearError() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Error = nil
}

func (x *PublishResult) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_PartitionId = 0
}

func (x *PublishResult) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Offset = 0
}

func (x *PublishResult) ClearTimestamp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Timestamp = 0
}

type PublishResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Message ID assigned by the queue
	MessageId *string
	// Whether the publish was successful
	Success *bool
	// Error message if publish failed
	Error *string
	// Partition ID where message was published
	PartitionId *int32
	// Offset within the partition
	Offset *int64
	// Timestamp when message was published
	Timestamp *int64
}

func (b0 PublishResult_builder) Build() *PublishResult {
	m0 := &PublishResult{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MessageId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_MessageId = b.MessageId
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Success = *b.Success
	}
	if b.Error != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Error = b.Error
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Offset = *b.Offset
	}
	if b.Timestamp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Timestamp = *b.Timestamp
	}
	return m0
}

var File_gcommon_v1_queue_publish_result_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_publish_result_proto_rawDesc = "" +
	"\n" +
	"%gcommon/v1/queue/publish_result.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\"\xb7\x01\n" +
	"\rPublishResult\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12!\n" +
	"\fpartition_id\x18\x04 \x01(\x05R\vpartitionId\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x03R\x06offset\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestampB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_publish_result_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_publish_result_proto_goTypes = []any{
	(*PublishResult)(nil), // 0: gcommon.v1.queue.PublishResult
}
var file_gcommon_v1_queue_publish_result_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_publish_result_proto_init() }
func file_gcommon_v1_queue_publish_result_proto_init() {
	if File_gcommon_v1_queue_publish_result_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_publish_result_proto_rawDesc), len(file_gcommon_v1_queue_publish_result_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_publish_result_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_publish_result_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_publish_result_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_publish_result_proto = out.File
	file_gcommon_v1_queue_publish_result_proto_goTypes = nil
	file_gcommon_v1_queue_publish_result_proto_depIdxs = nil
}
