// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/performance_options.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PerformanceOptions struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_WorkerCount       int32                  `protobuf:"varint,1,opt,name=worker_count,json=workerCount"`
	xxx_hidden_BatchSize         int32                  `protobuf:"varint,2,opt,name=batch_size,json=batchSize"`
	xxx_hidden_BufferSizeMb      int32                  `protobuf:"varint,3,opt,name=buffer_size_mb,json=bufferSizeMb"`
	xxx_hidden_EnableCompression bool                   `protobuf:"varint,4,opt,name=enable_compression,json=enableCompression"`
	xxx_hidden_ThrottleRate      int32                  `protobuf:"varint,5,opt,name=throttle_rate,json=throttleRate"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *PerformanceOptions) Reset() {
	*x = PerformanceOptions{}
	mi := &file_gcommon_v1_queue_messages_performance_options_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceOptions) ProtoMessage() {}

func (x *PerformanceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_performance_options_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PerformanceOptions) GetWorkerCount() int32 {
	if x != nil {
		return x.xxx_hidden_WorkerCount
	}
	return 0
}

func (x *PerformanceOptions) GetBatchSize() int32 {
	if x != nil {
		return x.xxx_hidden_BatchSize
	}
	return 0
}

func (x *PerformanceOptions) GetBufferSizeMb() int32 {
	if x != nil {
		return x.xxx_hidden_BufferSizeMb
	}
	return 0
}

func (x *PerformanceOptions) GetEnableCompression() bool {
	if x != nil {
		return x.xxx_hidden_EnableCompression
	}
	return false
}

func (x *PerformanceOptions) GetThrottleRate() int32 {
	if x != nil {
		return x.xxx_hidden_ThrottleRate
	}
	return 0
}

func (x *PerformanceOptions) SetWorkerCount(v int32) {
	x.xxx_hidden_WorkerCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *PerformanceOptions) SetBatchSize(v int32) {
	x.xxx_hidden_BatchSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *PerformanceOptions) SetBufferSizeMb(v int32) {
	x.xxx_hidden_BufferSizeMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *PerformanceOptions) SetEnableCompression(v bool) {
	x.xxx_hidden_EnableCompression = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *PerformanceOptions) SetThrottleRate(v int32) {
	x.xxx_hidden_ThrottleRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *PerformanceOptions) HasWorkerCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PerformanceOptions) HasBatchSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PerformanceOptions) HasBufferSizeMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PerformanceOptions) HasEnableCompression() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PerformanceOptions) HasThrottleRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *PerformanceOptions) ClearWorkerCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_WorkerCount = 0
}

func (x *PerformanceOptions) ClearBatchSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_BatchSize = 0
}

func (x *PerformanceOptions) ClearBufferSizeMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_BufferSizeMb = 0
}

func (x *PerformanceOptions) ClearEnableCompression() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EnableCompression = false
}

func (x *PerformanceOptions) ClearThrottleRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ThrottleRate = 0
}

type PerformanceOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Parallel restore workers
	WorkerCount *int32
	// Batch size for restore operations
	BatchSize *int32
	// Buffer size for reading backup data
	BufferSizeMb *int32
	// Compression during restore
	EnableCompression *bool
	// Throttle restore rate (messages/second)
	ThrottleRate *int32
}

func (b0 PerformanceOptions_builder) Build() *PerformanceOptions {
	m0 := &PerformanceOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.WorkerCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_WorkerCount = *b.WorkerCount
	}
	if b.BatchSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_BatchSize = *b.BatchSize
	}
	if b.BufferSizeMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_BufferSizeMb = *b.BufferSizeMb
	}
	if b.EnableCompression != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_EnableCompression = *b.EnableCompression
	}
	if b.ThrottleRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ThrottleRate = *b.ThrottleRate
	}
	return m0
}

var File_gcommon_v1_queue_messages_performance_options_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_performance_options_proto_rawDesc = "" +
	"\n" +
	"3gcommon/v1/queue/messages/performance_options.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\"\xd0\x01\n" +
	"\x12PerformanceOptions\x12!\n" +
	"\fworker_count\x18\x01 \x01(\x05R\vworkerCount\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x02 \x01(\x05R\tbatchSize\x12$\n" +
	"\x0ebuffer_size_mb\x18\x03 \x01(\x05R\fbufferSizeMb\x12-\n" +
	"\x12enable_compression\x18\x04 \x01(\bR\x11enableCompression\x12#\n" +
	"\rthrottle_rate\x18\x05 \x01(\x05R\fthrottleRateB\x12Z\bv1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_performance_options_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_performance_options_proto_goTypes = []any{
	(*PerformanceOptions)(nil), // 0: gcommon.v1.queue.PerformanceOptions
}
var file_gcommon_v1_queue_messages_performance_options_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_performance_options_proto_init() }
func file_gcommon_v1_queue_messages_performance_options_proto_init() {
	if File_gcommon_v1_queue_messages_performance_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_performance_options_proto_rawDesc), len(file_gcommon_v1_queue_messages_performance_options_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_performance_options_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_performance_options_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_performance_options_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_performance_options_proto = out.File
	file_gcommon_v1_queue_messages_performance_options_proto_goTypes = nil
	file_gcommon_v1_queue_messages_performance_options_proto_depIdxs = nil
}
