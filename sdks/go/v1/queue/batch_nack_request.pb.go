// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/batch_nack_request.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchNackRequest struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ConsumerGroupId    *string                `protobuf:"bytes,1,opt,name=consumer_group_id,json=consumerGroupId"`
	xxx_hidden_ConsumerId         *string                `protobuf:"bytes,2,opt,name=consumer_id,json=consumerId"`
	xxx_hidden_MessageNacks       *[]*MessageNack        `protobuf:"bytes,3,rep,name=message_nacks,json=messageNacks"`
	xxx_hidden_RequeueMessages    bool                   `protobuf:"varint,4,opt,name=requeue_messages,json=requeueMessages"`
	xxx_hidden_RequeueDelayMs     int64                  `protobuf:"varint,5,opt,name=requeue_delay_ms,json=requeueDelayMs"`
	xxx_hidden_MaxRequeueAttempts int32                  `protobuf:"varint,6,opt,name=max_requeue_attempts,json=maxRequeueAttempts"`
	xxx_hidden_SendToDlq          bool                   `protobuf:"varint,7,opt,name=send_to_dlq,json=sendToDlq"`
	xxx_hidden_NackReason         *string                `protobuf:"bytes,8,opt,name=nack_reason,json=nackReason"`
	xxx_hidden_Metadata           map[string]string      `protobuf:"bytes,9,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *BatchNackRequest) Reset() {
	*x = BatchNackRequest{}
	mi := &file_gcommon_v1_queue_messages_batch_nack_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchNackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchNackRequest) ProtoMessage() {}

func (x *BatchNackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_batch_nack_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatchNackRequest) GetConsumerGroupId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerGroupId != nil {
			return *x.xxx_hidden_ConsumerGroupId
		}
		return ""
	}
	return ""
}

func (x *BatchNackRequest) GetConsumerId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerId != nil {
			return *x.xxx_hidden_ConsumerId
		}
		return ""
	}
	return ""
}

func (x *BatchNackRequest) GetMessageNacks() []*MessageNack {
	if x != nil {
		if x.xxx_hidden_MessageNacks != nil {
			return *x.xxx_hidden_MessageNacks
		}
	}
	return nil
}

func (x *BatchNackRequest) GetRequeueMessages() bool {
	if x != nil {
		return x.xxx_hidden_RequeueMessages
	}
	return false
}

func (x *BatchNackRequest) GetRequeueDelayMs() int64 {
	if x != nil {
		return x.xxx_hidden_RequeueDelayMs
	}
	return 0
}

func (x *BatchNackRequest) GetMaxRequeueAttempts() int32 {
	if x != nil {
		return x.xxx_hidden_MaxRequeueAttempts
	}
	return 0
}

func (x *BatchNackRequest) GetSendToDlq() bool {
	if x != nil {
		return x.xxx_hidden_SendToDlq
	}
	return false
}

func (x *BatchNackRequest) GetNackReason() string {
	if x != nil {
		if x.xxx_hidden_NackReason != nil {
			return *x.xxx_hidden_NackReason
		}
		return ""
	}
	return ""
}

func (x *BatchNackRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *BatchNackRequest) SetConsumerGroupId(v string) {
	x.xxx_hidden_ConsumerGroupId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *BatchNackRequest) SetConsumerId(v string) {
	x.xxx_hidden_ConsumerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *BatchNackRequest) SetMessageNacks(v []*MessageNack) {
	x.xxx_hidden_MessageNacks = &v
}

func (x *BatchNackRequest) SetRequeueMessages(v bool) {
	x.xxx_hidden_RequeueMessages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *BatchNackRequest) SetRequeueDelayMs(v int64) {
	x.xxx_hidden_RequeueDelayMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *BatchNackRequest) SetMaxRequeueAttempts(v int32) {
	x.xxx_hidden_MaxRequeueAttempts = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *BatchNackRequest) SetSendToDlq(v bool) {
	x.xxx_hidden_SendToDlq = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *BatchNackRequest) SetNackReason(v string) {
	x.xxx_hidden_NackReason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *BatchNackRequest) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *BatchNackRequest) HasConsumerGroupId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BatchNackRequest) HasConsumerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *BatchNackRequest) HasRequeueMessages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *BatchNackRequest) HasRequeueDelayMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *BatchNackRequest) HasMaxRequeueAttempts() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *BatchNackRequest) HasSendToDlq() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *BatchNackRequest) HasNackReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *BatchNackRequest) ClearConsumerGroupId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ConsumerGroupId = nil
}

func (x *BatchNackRequest) ClearConsumerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ConsumerId = nil
}

func (x *BatchNackRequest) ClearRequeueMessages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_RequeueMessages = false
}

func (x *BatchNackRequest) ClearRequeueDelayMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_RequeueDelayMs = 0
}

func (x *BatchNackRequest) ClearMaxRequeueAttempts() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_MaxRequeueAttempts = 0
}

func (x *BatchNackRequest) ClearSendToDlq() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_SendToDlq = false
}

func (x *BatchNackRequest) ClearNackReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_NackReason = nil
}

type BatchNackRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Consumer group ID performing the nack
	ConsumerGroupId *string
	// Consumer ID within the group
	ConsumerId *string
	// Messages to negative acknowledge
	MessageNacks []*MessageNack
	// Requeue messages after nack
	RequeueMessages *bool
	// Delay before requeuing (milliseconds)
	RequeueDelayMs *int64
	// Maximum number of requeue attempts
	MaxRequeueAttempts *int32
	// Send failed messages to dead letter queue
	SendToDlq *bool
	// Reason for batch nack operation
	NackReason *string
	// Additional metadata for the nack operation
	Metadata map[string]string
}

func (b0 BatchNackRequest_builder) Build() *BatchNackRequest {
	m0 := &BatchNackRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ConsumerGroupId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_ConsumerGroupId = b.ConsumerGroupId
	}
	if b.ConsumerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_ConsumerId = b.ConsumerId
	}
	x.xxx_hidden_MessageNacks = &b.MessageNacks
	if b.RequeueMessages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_RequeueMessages = *b.RequeueMessages
	}
	if b.RequeueDelayMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_RequeueDelayMs = *b.RequeueDelayMs
	}
	if b.MaxRequeueAttempts != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_MaxRequeueAttempts = *b.MaxRequeueAttempts
	}
	if b.SendToDlq != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_SendToDlq = *b.SendToDlq
	}
	if b.NackReason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_NackReason = b.NackReason
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

var File_gcommon_v1_queue_messages_batch_nack_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_batch_nack_request_proto_rawDesc = "" +
	"\n" +
	"2gcommon/v1/queue/messages/batch_nack_request.proto\x12\x10gcommon.v1.queue\x1a,gcommon/v1/queue/messages/message_nack.proto\x1a!google/protobuf/go_features.proto\"\xf6\x03\n" +
	"\x10BatchNackRequest\x12*\n" +
	"\x11consumer_group_id\x18\x01 \x01(\tR\x0fconsumerGroupId\x12\x1f\n" +
	"\vconsumer_id\x18\x02 \x01(\tR\n" +
	"consumerId\x12B\n" +
	"\rmessage_nacks\x18\x03 \x03(\v2\x1d.gcommon.v1.queue.MessageNackR\fmessageNacks\x12)\n" +
	"\x10requeue_messages\x18\x04 \x01(\bR\x0frequeueMessages\x12(\n" +
	"\x10requeue_delay_ms\x18\x05 \x01(\x03R\x0erequeueDelayMs\x120\n" +
	"\x14max_requeue_attempts\x18\x06 \x01(\x05R\x12maxRequeueAttempts\x12\x1e\n" +
	"\vsend_to_dlq\x18\a \x01(\bR\tsendToDlq\x12\x1f\n" +
	"\vnack_reason\x18\b \x01(\tR\n" +
	"nackReason\x12L\n" +
	"\bmetadata\x18\t \x03(\v20.gcommon.v1.queue.BatchNackRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x12Z\bv1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_batch_nack_request_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_queue_messages_batch_nack_request_proto_goTypes = []any{
	(*BatchNackRequest)(nil), // 0: gcommon.v1.queue.BatchNackRequest
	nil,                      // 1: gcommon.v1.queue.BatchNackRequest.MetadataEntry
	(*MessageNack)(nil),      // 2: gcommon.v1.queue.MessageNack
}
var file_gcommon_v1_queue_messages_batch_nack_request_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.queue.BatchNackRequest.message_nacks:type_name -> gcommon.v1.queue.MessageNack
	1, // 1: gcommon.v1.queue.BatchNackRequest.metadata:type_name -> gcommon.v1.queue.BatchNackRequest.MetadataEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_batch_nack_request_proto_init() }
func file_gcommon_v1_queue_messages_batch_nack_request_proto_init() {
	if File_gcommon_v1_queue_messages_batch_nack_request_proto != nil {
		return
	}
	file_gcommon_v1_queue_messages_message_nack_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_batch_nack_request_proto_rawDesc), len(file_gcommon_v1_queue_messages_batch_nack_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_batch_nack_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_batch_nack_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_batch_nack_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_batch_nack_request_proto = out.File
	file_gcommon_v1_queue_messages_batch_nack_request_proto_goTypes = nil
	file_gcommon_v1_queue_messages_batch_nack_request_proto_depIdxs = nil
}
