// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/queue/consumer_group_config.proto

package queue

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConsumerGroupConfig struct {
	state                            protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_LoadBalancingStrategy common.LoadBalancingStrategy `protobuf:"varint,1,opt,name=load_balancing_strategy,json=loadBalancingStrategy,enum=gcommon.v1.common.LoadBalancingStrategy"`
	xxx_hidden_RebalanceStrategy     common.RebalanceStrategy     `protobuf:"varint,2,opt,name=rebalance_strategy,json=rebalanceStrategy,enum=gcommon.v1.common.RebalanceStrategy"`
	xxx_hidden_SessionTimeoutMs      int32                        `protobuf:"varint,3,opt,name=session_timeout_ms,json=sessionTimeoutMs"`
	xxx_hidden_HeartbeatIntervalMs   int32                        `protobuf:"varint,4,opt,name=heartbeat_interval_ms,json=heartbeatIntervalMs"`
	xxx_hidden_MaxPollIntervalMs     int32                        `protobuf:"varint,5,opt,name=max_poll_interval_ms,json=maxPollIntervalMs"`
	xxx_hidden_AutoCommit            *AutoCommitConfig            `protobuf:"bytes,6,opt,name=auto_commit,json=autoCommit"`
	xxx_hidden_OffsetResetStrategy   common.OffsetResetStrategy   `protobuf:"varint,7,opt,name=offset_reset_strategy,json=offsetResetStrategy,enum=gcommon.v1.common.OffsetResetStrategy"`
	xxx_hidden_MaxConsumers          int32                        `protobuf:"varint,8,opt,name=max_consumers,json=maxConsumers"`
	xxx_hidden_ExactlyOnceEnabled    bool                         `protobuf:"varint,9,opt,name=exactly_once_enabled,json=exactlyOnceEnabled"`
	xxx_hidden_DlqConfig             *DeadLetterQueueConfig       `protobuf:"bytes,10,opt,name=dlq_config,json=dlqConfig"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ConsumerGroupConfig) Reset() {
	*x = ConsumerGroupConfig{}
	mi := &file_gcommon_v1_queue_consumer_group_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerGroupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerGroupConfig) ProtoMessage() {}

func (x *ConsumerGroupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_consumer_group_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConsumerGroupConfig) GetLoadBalancingStrategy() common.LoadBalancingStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_LoadBalancingStrategy
		}
	}
	return common.LoadBalancingStrategy(0)
}

func (x *ConsumerGroupConfig) GetRebalanceStrategy() common.RebalanceStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_RebalanceStrategy
		}
	}
	return common.RebalanceStrategy(0)
}

func (x *ConsumerGroupConfig) GetSessionTimeoutMs() int32 {
	if x != nil {
		return x.xxx_hidden_SessionTimeoutMs
	}
	return 0
}

func (x *ConsumerGroupConfig) GetHeartbeatIntervalMs() int32 {
	if x != nil {
		return x.xxx_hidden_HeartbeatIntervalMs
	}
	return 0
}

func (x *ConsumerGroupConfig) GetMaxPollIntervalMs() int32 {
	if x != nil {
		return x.xxx_hidden_MaxPollIntervalMs
	}
	return 0
}

func (x *ConsumerGroupConfig) GetAutoCommit() *AutoCommitConfig {
	if x != nil {
		return x.xxx_hidden_AutoCommit
	}
	return nil
}

func (x *ConsumerGroupConfig) GetOffsetResetStrategy() common.OffsetResetStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_OffsetResetStrategy
		}
	}
	return common.OffsetResetStrategy(0)
}

func (x *ConsumerGroupConfig) GetMaxConsumers() int32 {
	if x != nil {
		return x.xxx_hidden_MaxConsumers
	}
	return 0
}

func (x *ConsumerGroupConfig) GetExactlyOnceEnabled() bool {
	if x != nil {
		return x.xxx_hidden_ExactlyOnceEnabled
	}
	return false
}

func (x *ConsumerGroupConfig) GetDlqConfig() *DeadLetterQueueConfig {
	if x != nil {
		return x.xxx_hidden_DlqConfig
	}
	return nil
}

func (x *ConsumerGroupConfig) SetLoadBalancingStrategy(v common.LoadBalancingStrategy) {
	x.xxx_hidden_LoadBalancingStrategy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *ConsumerGroupConfig) SetRebalanceStrategy(v common.RebalanceStrategy) {
	x.xxx_hidden_RebalanceStrategy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *ConsumerGroupConfig) SetSessionTimeoutMs(v int32) {
	x.xxx_hidden_SessionTimeoutMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *ConsumerGroupConfig) SetHeartbeatIntervalMs(v int32) {
	x.xxx_hidden_HeartbeatIntervalMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *ConsumerGroupConfig) SetMaxPollIntervalMs(v int32) {
	x.xxx_hidden_MaxPollIntervalMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *ConsumerGroupConfig) SetAutoCommit(v *AutoCommitConfig) {
	x.xxx_hidden_AutoCommit = v
}

func (x *ConsumerGroupConfig) SetOffsetResetStrategy(v common.OffsetResetStrategy) {
	x.xxx_hidden_OffsetResetStrategy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *ConsumerGroupConfig) SetMaxConsumers(v int32) {
	x.xxx_hidden_MaxConsumers = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 10)
}

func (x *ConsumerGroupConfig) SetExactlyOnceEnabled(v bool) {
	x.xxx_hidden_ExactlyOnceEnabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
}

func (x *ConsumerGroupConfig) SetDlqConfig(v *DeadLetterQueueConfig) {
	x.xxx_hidden_DlqConfig = v
}

func (x *ConsumerGroupConfig) HasLoadBalancingStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConsumerGroupConfig) HasRebalanceStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ConsumerGroupConfig) HasSessionTimeoutMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ConsumerGroupConfig) HasHeartbeatIntervalMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ConsumerGroupConfig) HasMaxPollIntervalMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ConsumerGroupConfig) HasAutoCommit() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AutoCommit != nil
}

func (x *ConsumerGroupConfig) HasOffsetResetStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ConsumerGroupConfig) HasMaxConsumers() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ConsumerGroupConfig) HasExactlyOnceEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ConsumerGroupConfig) HasDlqConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DlqConfig != nil
}

func (x *ConsumerGroupConfig) ClearLoadBalancingStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_LoadBalancingStrategy = common.LoadBalancingStrategy_LOAD_BALANCING_STRATEGY_UNSPECIFIED
}

func (x *ConsumerGroupConfig) ClearRebalanceStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RebalanceStrategy = common.RebalanceStrategy_REBALANCE_STRATEGY_UNSPECIFIED
}

func (x *ConsumerGroupConfig) ClearSessionTimeoutMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SessionTimeoutMs = 0
}

func (x *ConsumerGroupConfig) ClearHeartbeatIntervalMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_HeartbeatIntervalMs = 0
}

func (x *ConsumerGroupConfig) ClearMaxPollIntervalMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MaxPollIntervalMs = 0
}

func (x *ConsumerGroupConfig) ClearAutoCommit() {
	x.xxx_hidden_AutoCommit = nil
}

func (x *ConsumerGroupConfig) ClearOffsetResetStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_OffsetResetStrategy = common.OffsetResetStrategy_OFFSET_RESET_STRATEGY_UNSPECIFIED
}

func (x *ConsumerGroupConfig) ClearMaxConsumers() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_MaxConsumers = 0
}

func (x *ConsumerGroupConfig) ClearExactlyOnceEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_ExactlyOnceEnabled = false
}

func (x *ConsumerGroupConfig) ClearDlqConfig() {
	x.xxx_hidden_DlqConfig = nil
}

type ConsumerGroupConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Load balancing strategy for partition assignment
	LoadBalancingStrategy *common.LoadBalancingStrategy
	// Rebalance strategy when consumers join/leave
	RebalanceStrategy *common.RebalanceStrategy
	// Session timeout for consumer heartbeats (milliseconds)
	SessionTimeoutMs *int32
	// Heartbeat interval (milliseconds)
	HeartbeatIntervalMs *int32
	// Maximum poll interval (milliseconds)
	MaxPollIntervalMs *int32
	// Auto-commit configuration
	AutoCommit *AutoCommitConfig
	// Offset reset strategy for new consumers
	OffsetResetStrategy *common.OffsetResetStrategy
	// Maximum number of consumers allowed in the group
	MaxConsumers *int32
	// Enable exactly-once semantics
	ExactlyOnceEnabled *bool
	// Dead letter queue configuration
	DlqConfig *DeadLetterQueueConfig
}

func (b0 ConsumerGroupConfig_builder) Build() *ConsumerGroupConfig {
	m0 := &ConsumerGroupConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.LoadBalancingStrategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_LoadBalancingStrategy = *b.LoadBalancingStrategy
	}
	if b.RebalanceStrategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_RebalanceStrategy = *b.RebalanceStrategy
	}
	if b.SessionTimeoutMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_SessionTimeoutMs = *b.SessionTimeoutMs
	}
	if b.HeartbeatIntervalMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_HeartbeatIntervalMs = *b.HeartbeatIntervalMs
	}
	if b.MaxPollIntervalMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_MaxPollIntervalMs = *b.MaxPollIntervalMs
	}
	x.xxx_hidden_AutoCommit = b.AutoCommit
	if b.OffsetResetStrategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_OffsetResetStrategy = *b.OffsetResetStrategy
	}
	if b.MaxConsumers != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 10)
		x.xxx_hidden_MaxConsumers = *b.MaxConsumers
	}
	if b.ExactlyOnceEnabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_ExactlyOnceEnabled = *b.ExactlyOnceEnabled
	}
	x.xxx_hidden_DlqConfig = b.DlqConfig
	return m0
}

var File_gcommon_v1_queue_consumer_group_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_consumer_group_config_proto_rawDesc = "" +
	"\n" +
	",gcommon/v1/queue/consumer_group_config.proto\x12\x10gcommon.v1.queue\x1a/gcommon/v1/common/load_balancing_strategy.proto\x1a-gcommon/v1/common/offset_reset_strategy.proto\x1a*gcommon/v1/common/rebalance_strategy.proto\x1a)gcommon/v1/queue/auto_commit_config.proto\x1a/gcommon/v1/queue/dead_letter_queue_config.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xc3\x05\n" +
	"\x13ConsumerGroupConfig\x12`\n" +
	"\x17load_balancing_strategy\x18\x01 \x01(\x0e2(.gcommon.v1.common.LoadBalancingStrategyR\x15loadBalancingStrategy\x12S\n" +
	"\x12rebalance_strategy\x18\x02 \x01(\x0e2$.gcommon.v1.common.RebalanceStrategyR\x11rebalanceStrategy\x125\n" +
	"\x12session_timeout_ms\x18\x03 \x01(\x05B\a\xbaH\x04\x1a\x02 \x00R\x10sessionTimeoutMs\x12;\n" +
	"\x15heartbeat_interval_ms\x18\x04 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x13heartbeatIntervalMs\x128\n" +
	"\x14max_poll_interval_ms\x18\x05 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x11maxPollIntervalMs\x12C\n" +
	"\vauto_commit\x18\x06 \x01(\v2\".gcommon.v1.queue.AutoCommitConfigR\n" +
	"autoCommit\x12Z\n" +
	"\x15offset_reset_strategy\x18\a \x01(\x0e2&.gcommon.v1.common.OffsetResetStrategyR\x13offsetResetStrategy\x12,\n" +
	"\rmax_consumers\x18\b \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\fmaxConsumers\x120\n" +
	"\x14exactly_once_enabled\x18\t \x01(\bR\x12exactlyOnceEnabled\x12F\n" +
	"\n" +
	"dlq_config\x18\n" +
	" \x01(\v2'.gcommon.v1.queue.DeadLetterQueueConfigR\tdlqConfigB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_consumer_group_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_consumer_group_config_proto_goTypes = []any{
	(*ConsumerGroupConfig)(nil),       // 0: gcommon.v1.queue.ConsumerGroupConfig
	(common.LoadBalancingStrategy)(0), // 1: gcommon.v1.common.LoadBalancingStrategy
	(common.RebalanceStrategy)(0),     // 2: gcommon.v1.common.RebalanceStrategy
	(*AutoCommitConfig)(nil),          // 3: gcommon.v1.queue.AutoCommitConfig
	(common.OffsetResetStrategy)(0),   // 4: gcommon.v1.common.OffsetResetStrategy
	(*DeadLetterQueueConfig)(nil),     // 5: gcommon.v1.queue.DeadLetterQueueConfig
}
var file_gcommon_v1_queue_consumer_group_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.ConsumerGroupConfig.load_balancing_strategy:type_name -> gcommon.v1.common.LoadBalancingStrategy
	2, // 1: gcommon.v1.queue.ConsumerGroupConfig.rebalance_strategy:type_name -> gcommon.v1.common.RebalanceStrategy
	3, // 2: gcommon.v1.queue.ConsumerGroupConfig.auto_commit:type_name -> gcommon.v1.queue.AutoCommitConfig
	4, // 3: gcommon.v1.queue.ConsumerGroupConfig.offset_reset_strategy:type_name -> gcommon.v1.common.OffsetResetStrategy
	5, // 4: gcommon.v1.queue.ConsumerGroupConfig.dlq_config:type_name -> gcommon.v1.queue.DeadLetterQueueConfig
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_consumer_group_config_proto_init() }
func file_gcommon_v1_queue_consumer_group_config_proto_init() {
	if File_gcommon_v1_queue_consumer_group_config_proto != nil {
		return
	}
	file_gcommon_v1_queue_auto_commit_config_proto_init()
	file_gcommon_v1_queue_dead_letter_queue_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_consumer_group_config_proto_rawDesc), len(file_gcommon_v1_queue_consumer_group_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_consumer_group_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_consumer_group_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_consumer_group_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_consumer_group_config_proto = out.File
	file_gcommon_v1_queue_consumer_group_config_proto_goTypes = nil
	file_gcommon_v1_queue_consumer_group_config_proto_depIdxs = nil
}
