// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/queue/acknowledgment.proto

package queue

import (
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Message acknowledgment information.
// Tracks the processing status of consumed messages.
type Acknowledgment struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MessageId            *string                `protobuf:"bytes,1,opt,name=message_id,json=messageId"`
	xxx_hidden_ConsumerId           *string                `protobuf:"bytes,2,opt,name=consumer_id,json=consumerId"`
	xxx_hidden_QueueName            *string                `protobuf:"bytes,3,opt,name=queue_name,json=queueName"`
	xxx_hidden_PartitionId          int32                  `protobuf:"varint,4,opt,name=partition_id,json=partitionId"`
	xxx_hidden_Offset               int64                  `protobuf:"varint,5,opt,name=offset"`
	xxx_hidden_AckType              common.AckType         `protobuf:"varint,6,opt,name=ack_type,json=ackType,enum=gcommon.v1.common.AckType"`
	xxx_hidden_AckTimestamp         *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=ack_timestamp,json=ackTimestamp"`
	xxx_hidden_ProcessingDurationMs int64                  `protobuf:"varint,8,opt,name=processing_duration_ms,json=processingDurationMs"`
	xxx_hidden_ErrorMessage         *string                `protobuf:"bytes,9,opt,name=error_message,json=errorMessage"`
	xxx_hidden_RetryCount           int32                  `protobuf:"varint,10,opt,name=retry_count,json=retryCount"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *Acknowledgment) Reset() {
	*x = Acknowledgment{}
	mi := &file_gcommon_v1_queue_acknowledgment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Acknowledgment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acknowledgment) ProtoMessage() {}

func (x *Acknowledgment) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_acknowledgment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Acknowledgment) GetMessageId() string {
	if x != nil {
		if x.xxx_hidden_MessageId != nil {
			return *x.xxx_hidden_MessageId
		}
		return ""
	}
	return ""
}

func (x *Acknowledgment) GetConsumerId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerId != nil {
			return *x.xxx_hidden_ConsumerId
		}
		return ""
	}
	return ""
}

func (x *Acknowledgment) GetQueueName() string {
	if x != nil {
		if x.xxx_hidden_QueueName != nil {
			return *x.xxx_hidden_QueueName
		}
		return ""
	}
	return ""
}

func (x *Acknowledgment) GetPartitionId() int32 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *Acknowledgment) GetOffset() int64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *Acknowledgment) GetAckType() common.AckType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_AckType
		}
	}
	return common.AckType(0)
}

func (x *Acknowledgment) GetAckTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_AckTimestamp
	}
	return nil
}

func (x *Acknowledgment) GetProcessingDurationMs() int64 {
	if x != nil {
		return x.xxx_hidden_ProcessingDurationMs
	}
	return 0
}

func (x *Acknowledgment) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *Acknowledgment) GetRetryCount() int32 {
	if x != nil {
		return x.xxx_hidden_RetryCount
	}
	return 0
}

func (x *Acknowledgment) SetMessageId(v string) {
	x.xxx_hidden_MessageId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *Acknowledgment) SetConsumerId(v string) {
	x.xxx_hidden_ConsumerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *Acknowledgment) SetQueueName(v string) {
	x.xxx_hidden_QueueName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *Acknowledgment) SetPartitionId(v int32) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *Acknowledgment) SetOffset(v int64) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *Acknowledgment) SetAckType(v common.AckType) {
	x.xxx_hidden_AckType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *Acknowledgment) SetAckTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_AckTimestamp = v
}

func (x *Acknowledgment) SetProcessingDurationMs(v int64) {
	x.xxx_hidden_ProcessingDurationMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 10)
}

func (x *Acknowledgment) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
}

func (x *Acknowledgment) SetRetryCount(v int32) {
	x.xxx_hidden_RetryCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *Acknowledgment) HasMessageId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Acknowledgment) HasConsumerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Acknowledgment) HasQueueName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Acknowledgment) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Acknowledgment) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Acknowledgment) HasAckType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Acknowledgment) HasAckTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AckTimestamp != nil
}

func (x *Acknowledgment) HasProcessingDurationMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Acknowledgment) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Acknowledgment) HasRetryCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Acknowledgment) ClearMessageId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MessageId = nil
}

func (x *Acknowledgment) ClearConsumerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ConsumerId = nil
}

func (x *Acknowledgment) ClearQueueName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_QueueName = nil
}

func (x *Acknowledgment) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_PartitionId = 0
}

func (x *Acknowledgment) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Offset = 0
}

func (x *Acknowledgment) ClearAckType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_AckType = common.AckType_ACK_TYPE_UNSPECIFIED
}

func (x *Acknowledgment) ClearAckTimestamp() {
	x.xxx_hidden_AckTimestamp = nil
}

func (x *Acknowledgment) ClearProcessingDurationMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ProcessingDurationMs = 0
}

func (x *Acknowledgment) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_ErrorMessage = nil
}

func (x *Acknowledgment) ClearRetryCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_RetryCount = 0
}

type Acknowledgment_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Message ID being acknowledged
	MessageId *string
	// Consumer ID that processed the message
	ConsumerId *string
	// Queue or topic name
	QueueName *string
	// Partition ID (for partitioned queues)
	PartitionId *int32
	// Message offset within the partition
	Offset *int64
	// Acknowledgment type
	AckType *common.AckType
	// Timestamp when message was acknowledged
	AckTimestamp *timestamppb.Timestamp
	// Processing duration in milliseconds
	ProcessingDurationMs *int64
	// Error message if processing failed
	ErrorMessage *string
	// Number of retry attempts made
	RetryCount *int32
}

func (b0 Acknowledgment_builder) Build() *Acknowledgment {
	m0 := &Acknowledgment{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MessageId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_MessageId = b.MessageId
	}
	if b.ConsumerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_ConsumerId = b.ConsumerId
	}
	if b.QueueName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_QueueName = b.QueueName
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_Offset = *b.Offset
	}
	if b.AckType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_AckType = *b.AckType
	}
	x.xxx_hidden_AckTimestamp = b.AckTimestamp
	if b.ProcessingDurationMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 10)
		x.xxx_hidden_ProcessingDurationMs = *b.ProcessingDurationMs
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	if b.RetryCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_RetryCount = *b.RetryCount
	}
	return m0
}

var File_gcommon_v1_queue_acknowledgment_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_acknowledgment_proto_rawDesc = "" +
	"\n" +
	"%gcommon/v1/queue/acknowledgment.proto\x12\x10gcommon.v1.queue\x1a gcommon/v1/common/ack_type.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9e\x03\n" +
	"\x0eAcknowledgment\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x1f\n" +
	"\vconsumer_id\x18\x02 \x01(\tR\n" +
	"consumerId\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x03 \x01(\tR\tqueueName\x12!\n" +
	"\fpartition_id\x18\x04 \x01(\x05R\vpartitionId\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x03R\x06offset\x125\n" +
	"\back_type\x18\x06 \x01(\x0e2\x1a.gcommon.v1.common.AckTypeR\aackType\x12?\n" +
	"\rack_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\fackTimestamp\x124\n" +
	"\x16processing_duration_ms\x18\b \x01(\x03R\x14processingDurationMs\x12#\n" +
	"\rerror_message\x18\t \x01(\tR\ferrorMessage\x12\x1f\n" +
	"\vretry_count\x18\n" +
	" \x01(\x05R\n" +
	"retryCountB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_acknowledgment_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_acknowledgment_proto_goTypes = []any{
	(*Acknowledgment)(nil),        // 0: gcommon.v1.queue.Acknowledgment
	(common.AckType)(0),           // 1: gcommon.v1.common.AckType
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_gcommon_v1_queue_acknowledgment_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.Acknowledgment.ack_type:type_name -> gcommon.v1.common.AckType
	2, // 1: gcommon.v1.queue.Acknowledgment.ack_timestamp:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_acknowledgment_proto_init() }
func file_gcommon_v1_queue_acknowledgment_proto_init() {
	if File_gcommon_v1_queue_acknowledgment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_acknowledgment_proto_rawDesc), len(file_gcommon_v1_queue_acknowledgment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_acknowledgment_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_acknowledgment_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_acknowledgment_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_acknowledgment_proto = out.File
	file_gcommon_v1_queue_acknowledgment_proto_goTypes = nil
	file_gcommon_v1_queue_acknowledgment_proto_depIdxs = nil
}
