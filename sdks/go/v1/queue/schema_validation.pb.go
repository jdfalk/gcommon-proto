// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/queue/schema_validation.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SchemaValidation struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Passed               bool                   `protobuf:"varint,1,opt,name=passed"`
	xxx_hidden_BackupSchemaVersion  *string                `protobuf:"bytes,2,opt,name=backup_schema_version,json=backupSchemaVersion"`
	xxx_hidden_CurrentSchemaVersion *string                `protobuf:"bytes,3,opt,name=current_schema_version,json=currentSchemaVersion"`
	xxx_hidden_CompatibilityStatus  *string                `protobuf:"bytes,4,opt,name=compatibility_status,json=compatibilityStatus"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *SchemaValidation) Reset() {
	*x = SchemaValidation{}
	mi := &file_gcommon_v1_queue_schema_validation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchemaValidation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaValidation) ProtoMessage() {}

func (x *SchemaValidation) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_schema_validation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SchemaValidation) GetPassed() bool {
	if x != nil {
		return x.xxx_hidden_Passed
	}
	return false
}

func (x *SchemaValidation) GetBackupSchemaVersion() string {
	if x != nil {
		if x.xxx_hidden_BackupSchemaVersion != nil {
			return *x.xxx_hidden_BackupSchemaVersion
		}
		return ""
	}
	return ""
}

func (x *SchemaValidation) GetCurrentSchemaVersion() string {
	if x != nil {
		if x.xxx_hidden_CurrentSchemaVersion != nil {
			return *x.xxx_hidden_CurrentSchemaVersion
		}
		return ""
	}
	return ""
}

func (x *SchemaValidation) GetCompatibilityStatus() string {
	if x != nil {
		if x.xxx_hidden_CompatibilityStatus != nil {
			return *x.xxx_hidden_CompatibilityStatus
		}
		return ""
	}
	return ""
}

func (x *SchemaValidation) SetPassed(v bool) {
	x.xxx_hidden_Passed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *SchemaValidation) SetBackupSchemaVersion(v string) {
	x.xxx_hidden_BackupSchemaVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *SchemaValidation) SetCurrentSchemaVersion(v string) {
	x.xxx_hidden_CurrentSchemaVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *SchemaValidation) SetCompatibilityStatus(v string) {
	x.xxx_hidden_CompatibilityStatus = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *SchemaValidation) HasPassed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SchemaValidation) HasBackupSchemaVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SchemaValidation) HasCurrentSchemaVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SchemaValidation) HasCompatibilityStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SchemaValidation) ClearPassed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Passed = false
}

func (x *SchemaValidation) ClearBackupSchemaVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_BackupSchemaVersion = nil
}

func (x *SchemaValidation) ClearCurrentSchemaVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CurrentSchemaVersion = nil
}

func (x *SchemaValidation) ClearCompatibilityStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CompatibilityStatus = nil
}

type SchemaValidation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Schema validation passed
	Passed *bool
	// Schema version in backup
	BackupSchemaVersion *string
	// Current schema version
	CurrentSchemaVersion *string
	// Schema compatibility status
	CompatibilityStatus *string
}

func (b0 SchemaValidation_builder) Build() *SchemaValidation {
	m0 := &SchemaValidation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Passed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Passed = *b.Passed
	}
	if b.BackupSchemaVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_BackupSchemaVersion = b.BackupSchemaVersion
	}
	if b.CurrentSchemaVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_CurrentSchemaVersion = b.CurrentSchemaVersion
	}
	if b.CompatibilityStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_CompatibilityStatus = b.CompatibilityStatus
	}
	return m0
}

var File_gcommon_v1_queue_schema_validation_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_schema_validation_proto_rawDesc = "" +
	"\n" +
	"(gcommon/v1/queue/schema_validation.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\"\xc7\x01\n" +
	"\x10SchemaValidation\x12\x16\n" +
	"\x06passed\x18\x01 \x01(\bR\x06passed\x122\n" +
	"\x15backup_schema_version\x18\x02 \x01(\tR\x13backupSchemaVersion\x124\n" +
	"\x16current_schema_version\x18\x03 \x01(\tR\x14currentSchemaVersion\x121\n" +
	"\x14compatibility_status\x18\x04 \x01(\tR\x13compatibilityStatusB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_schema_validation_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_schema_validation_proto_goTypes = []any{
	(*SchemaValidation)(nil), // 0: gcommon.v1.queue.SchemaValidation
}
var file_gcommon_v1_queue_schema_validation_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_schema_validation_proto_init() }
func file_gcommon_v1_queue_schema_validation_proto_init() {
	if File_gcommon_v1_queue_schema_validation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_schema_validation_proto_rawDesc), len(file_gcommon_v1_queue_schema_validation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_schema_validation_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_schema_validation_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_schema_validation_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_schema_validation_proto = out.File
	file_gcommon_v1_queue_schema_validation_proto_goTypes = nil
	file_gcommon_v1_queue_schema_validation_proto_depIdxs = nil
}
