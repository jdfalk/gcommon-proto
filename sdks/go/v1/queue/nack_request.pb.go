// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/nack_request.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
	common "v1/common"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Request to negatively acknowledge (NACK) a message.
// This indicates that the message could not be processed and may need to be requeued.
type NackRequest struct {
	state                          protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_AckToken            *string                 `protobuf:"bytes,1,opt,name=ack_token,json=ackToken"`
	xxx_hidden_Requeue             bool                    `protobuf:"varint,2,opt,name=requeue"`
	xxx_hidden_Reason              *string                 `protobuf:"bytes,3,opt,name=reason"`
	xxx_hidden_Error               *NackError              `protobuf:"bytes,4,opt,name=error"`
	xxx_hidden_RequeueDelaySeconds int64                   `protobuf:"varint,5,opt,name=requeue_delay_seconds,json=requeueDelaySeconds"`
	xxx_hidden_MaxRetries          int32                   `protobuf:"varint,6,opt,name=max_retries,json=maxRetries"`
	xxx_hidden_Metadata            *common.RequestMetadata `protobuf:"bytes,100,opt,name=metadata"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *NackRequest) Reset() {
	*x = NackRequest{}
	mi := &file_gcommon_v1_queue_messages_nack_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NackRequest) ProtoMessage() {}

func (x *NackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_nack_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NackRequest) GetAckToken() string {
	if x != nil {
		if x.xxx_hidden_AckToken != nil {
			return *x.xxx_hidden_AckToken
		}
		return ""
	}
	return ""
}

func (x *NackRequest) GetRequeue() bool {
	if x != nil {
		return x.xxx_hidden_Requeue
	}
	return false
}

func (x *NackRequest) GetReason() string {
	if x != nil {
		if x.xxx_hidden_Reason != nil {
			return *x.xxx_hidden_Reason
		}
		return ""
	}
	return ""
}

func (x *NackRequest) GetError() *NackError {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *NackRequest) GetRequeueDelaySeconds() int64 {
	if x != nil {
		return x.xxx_hidden_RequeueDelaySeconds
	}
	return 0
}

func (x *NackRequest) GetMaxRetries() int32 {
	if x != nil {
		return x.xxx_hidden_MaxRetries
	}
	return 0
}

func (x *NackRequest) GetMetadata() *common.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *NackRequest) SetAckToken(v string) {
	x.xxx_hidden_AckToken = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *NackRequest) SetRequeue(v bool) {
	x.xxx_hidden_Requeue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *NackRequest) SetReason(v string) {
	x.xxx_hidden_Reason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *NackRequest) SetError(v *NackError) {
	x.xxx_hidden_Error = v
}

func (x *NackRequest) SetRequeueDelaySeconds(v int64) {
	x.xxx_hidden_RequeueDelaySeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *NackRequest) SetMaxRetries(v int32) {
	x.xxx_hidden_MaxRetries = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *NackRequest) SetMetadata(v *common.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *NackRequest) HasAckToken() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NackRequest) HasRequeue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NackRequest) HasReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NackRequest) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *NackRequest) HasRequeueDelaySeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *NackRequest) HasMaxRetries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *NackRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *NackRequest) ClearAckToken() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_AckToken = nil
}

func (x *NackRequest) ClearRequeue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Requeue = false
}

func (x *NackRequest) ClearReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Reason = nil
}

func (x *NackRequest) ClearError() {
	x.xxx_hidden_Error = nil
}

func (x *NackRequest) ClearRequeueDelaySeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_RequeueDelaySeconds = 0
}

func (x *NackRequest) ClearMaxRetries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_MaxRetries = 0
}

func (x *NackRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type NackRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Acknowledgment token received with the message
	AckToken *string
	// Whether the message should be requeued for retry
	Requeue *bool
	// Reason for the negative acknowledgment
	Reason *string
	// Error details if processing failed
	Error *NackError
	// Delay before requeuing (if requeue is true)
	RequeueDelaySeconds *int64
	// Maximum number of retry attempts for this message
	MaxRetries *int32
	// Request metadata for tracing and correlation
	Metadata *common.RequestMetadata
}

func (b0 NackRequest_builder) Build() *NackRequest {
	m0 := &NackRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.AckToken != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_AckToken = b.AckToken
	}
	if b.Requeue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Requeue = *b.Requeue
	}
	if b.Reason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Reason = b.Reason
	}
	x.xxx_hidden_Error = b.Error
	if b.RequeueDelaySeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_RequeueDelaySeconds = *b.RequeueDelaySeconds
	}
	if b.MaxRetries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_MaxRetries = *b.MaxRetries
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

var File_gcommon_v1_queue_messages_nack_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_nack_request_proto_rawDesc = "" +
	"\n" +
	",gcommon/v1/queue/messages/nack_request.proto\x12\x10gcommon.v1.queue\x1a1gcommon/v1/common/messages/request_metadata.proto\x1a*gcommon/v1/queue/messages/nack_error.proto\x1a!google/protobuf/go_features.proto\"\xa4\x02\n" +
	"\vNackRequest\x12\x1b\n" +
	"\tack_token\x18\x01 \x01(\tR\backToken\x12\x18\n" +
	"\arequeue\x18\x02 \x01(\bR\arequeue\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x121\n" +
	"\x05error\x18\x04 \x01(\v2\x1b.gcommon.v1.queue.NackErrorR\x05error\x122\n" +
	"\x15requeue_delay_seconds\x18\x05 \x01(\x03R\x13requeueDelaySeconds\x12\x1f\n" +
	"\vmax_retries\x18\x06 \x01(\x05R\n" +
	"maxRetries\x12>\n" +
	"\bmetadata\x18d \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadataB\x12Z\bv1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_nack_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_nack_request_proto_goTypes = []any{
	(*NackRequest)(nil),            // 0: gcommon.v1.queue.NackRequest
	(*NackError)(nil),              // 1: gcommon.v1.queue.NackError
	(*common.RequestMetadata)(nil), // 2: gcommon.v1.common.RequestMetadata
}
var file_gcommon_v1_queue_messages_nack_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.NackRequest.error:type_name -> gcommon.v1.queue.NackError
	2, // 1: gcommon.v1.queue.NackRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_nack_request_proto_init() }
func file_gcommon_v1_queue_messages_nack_request_proto_init() {
	if File_gcommon_v1_queue_messages_nack_request_proto != nil {
		return
	}
	file_gcommon_v1_queue_messages_nack_error_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_nack_request_proto_rawDesc), len(file_gcommon_v1_queue_messages_nack_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_nack_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_nack_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_nack_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_nack_request_proto = out.File
	file_gcommon_v1_queue_messages_nack_request_proto_goTypes = nil
	file_gcommon_v1_queue_messages_nack_request_proto_depIdxs = nil
}
