// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/partition_assignment.proto

package queue

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PartitionAssignment struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PartitionId     int32                  `protobuf:"varint,1,opt,name=partition_id,json=partitionId"`
	xxx_hidden_ConsumerId      *string                `protobuf:"bytes,2,opt,name=consumer_id,json=consumerId"`
	xxx_hidden_CurrentOffset   int64                  `protobuf:"varint,3,opt,name=current_offset,json=currentOffset"`
	xxx_hidden_CommittedOffset int64                  `protobuf:"varint,4,opt,name=committed_offset,json=committedOffset"`
	xxx_hidden_HighWaterMark   int64                  `protobuf:"varint,5,opt,name=high_water_mark,json=highWaterMark"`
	xxx_hidden_AssignedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=assigned_at,json=assignedAt"`
	xxx_hidden_LastCommit      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_commit,json=lastCommit"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PartitionAssignment) Reset() {
	*x = PartitionAssignment{}
	mi := &file_gcommon_v1_queue_partition_assignment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionAssignment) ProtoMessage() {}

func (x *PartitionAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_partition_assignment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PartitionAssignment) GetPartitionId() int32 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *PartitionAssignment) GetConsumerId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerId != nil {
			return *x.xxx_hidden_ConsumerId
		}
		return ""
	}
	return ""
}

func (x *PartitionAssignment) GetCurrentOffset() int64 {
	if x != nil {
		return x.xxx_hidden_CurrentOffset
	}
	return 0
}

func (x *PartitionAssignment) GetCommittedOffset() int64 {
	if x != nil {
		return x.xxx_hidden_CommittedOffset
	}
	return 0
}

func (x *PartitionAssignment) GetHighWaterMark() int64 {
	if x != nil {
		return x.xxx_hidden_HighWaterMark
	}
	return 0
}

func (x *PartitionAssignment) GetAssignedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_AssignedAt
	}
	return nil
}

func (x *PartitionAssignment) GetLastCommit() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastCommit
	}
	return nil
}

func (x *PartitionAssignment) SetPartitionId(v int32) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *PartitionAssignment) SetConsumerId(v string) {
	x.xxx_hidden_ConsumerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *PartitionAssignment) SetCurrentOffset(v int64) {
	x.xxx_hidden_CurrentOffset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *PartitionAssignment) SetCommittedOffset(v int64) {
	x.xxx_hidden_CommittedOffset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *PartitionAssignment) SetHighWaterMark(v int64) {
	x.xxx_hidden_HighWaterMark = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *PartitionAssignment) SetAssignedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_AssignedAt = v
}

func (x *PartitionAssignment) SetLastCommit(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastCommit = v
}

func (x *PartitionAssignment) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PartitionAssignment) HasConsumerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PartitionAssignment) HasCurrentOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PartitionAssignment) HasCommittedOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PartitionAssignment) HasHighWaterMark() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *PartitionAssignment) HasAssignedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AssignedAt != nil
}

func (x *PartitionAssignment) HasLastCommit() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastCommit != nil
}

func (x *PartitionAssignment) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PartitionId = 0
}

func (x *PartitionAssignment) ClearConsumerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ConsumerId = nil
}

func (x *PartitionAssignment) ClearCurrentOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CurrentOffset = 0
}

func (x *PartitionAssignment) ClearCommittedOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CommittedOffset = 0
}

func (x *PartitionAssignment) ClearHighWaterMark() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_HighWaterMark = 0
}

func (x *PartitionAssignment) ClearAssignedAt() {
	x.xxx_hidden_AssignedAt = nil
}

func (x *PartitionAssignment) ClearLastCommit() {
	x.xxx_hidden_LastCommit = nil
}

type PartitionAssignment_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Partition ID
	PartitionId *int32
	// Assigned consumer ID
	ConsumerId *string
	// Current offset position
	CurrentOffset *int64
	// Committed offset
	CommittedOffset *int64
	// High water mark (latest available offset)
	HighWaterMark *int64
	// Assignment timestamp
	AssignedAt *timestamppb.Timestamp
	// Last commit timestamp
	LastCommit *timestamppb.Timestamp
}

func (b0 PartitionAssignment_builder) Build() *PartitionAssignment {
	m0 := &PartitionAssignment{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.ConsumerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_ConsumerId = b.ConsumerId
	}
	if b.CurrentOffset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_CurrentOffset = *b.CurrentOffset
	}
	if b.CommittedOffset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_CommittedOffset = *b.CommittedOffset
	}
	if b.HighWaterMark != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_HighWaterMark = *b.HighWaterMark
	}
	x.xxx_hidden_AssignedAt = b.AssignedAt
	x.xxx_hidden_LastCommit = b.LastCommit
	return m0
}

var File_gcommon_v1_queue_partition_assignment_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_partition_assignment_proto_rawDesc = "" +
	"\n" +
	"+gcommon/v1/queue/partition_assignment.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bbuf/validate/validate.proto\"\xfa\x02\n" +
	"\x13PartitionAssignment\x12*\n" +
	"\fpartition_id\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\vpartitionId\x12(\n" +
	"\vconsumer_id\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\n" +
	"consumerId\x12.\n" +
	"\x0ecurrent_offset\x18\x03 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\rcurrentOffset\x122\n" +
	"\x10committed_offset\x18\x04 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\x0fcommittedOffset\x12/\n" +
	"\x0fhigh_water_mark\x18\x05 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\rhighWaterMark\x12;\n" +
	"\vassigned_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"assignedAt\x12;\n" +
	"\vlast_commit\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastCommitB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_partition_assignment_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_partition_assignment_proto_goTypes = []any{
	(*PartitionAssignment)(nil),   // 0: gcommon.v1.queue.PartitionAssignment
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_gcommon_v1_queue_partition_assignment_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.PartitionAssignment.assigned_at:type_name -> google.protobuf.Timestamp
	1, // 1: gcommon.v1.queue.PartitionAssignment.last_commit:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_partition_assignment_proto_init() }
func file_gcommon_v1_queue_partition_assignment_proto_init() {
	if File_gcommon_v1_queue_partition_assignment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_partition_assignment_proto_rawDesc), len(file_gcommon_v1_queue_partition_assignment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_partition_assignment_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_partition_assignment_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_partition_assignment_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_partition_assignment_proto = out.File
	file_gcommon_v1_queue_partition_assignment_proto_goTypes = nil
	file_gcommon_v1_queue_partition_assignment_proto_depIdxs = nil
}
