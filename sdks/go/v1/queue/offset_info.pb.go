// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/queue/offset_info.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Information about message offset position in a queue.
type OffsetInfo struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Offset          uint64                 `protobuf:"varint,1,opt,name=offset"`
	xxx_hidden_PartitionId     uint32                 `protobuf:"varint,2,opt,name=partition_id,json=partitionId"`
	xxx_hidden_Timestamp       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp"`
	xxx_hidden_MessageSize     uint64                 `protobuf:"varint,4,opt,name=message_size,json=messageSize"`
	xxx_hidden_IsValid         bool                   `protobuf:"varint,5,opt,name=is_valid,json=isValid"`
	xxx_hidden_ConsumerGroup   *string                `protobuf:"bytes,6,opt,name=consumer_group,json=consumerGroup"`
	xxx_hidden_CommittedOffset uint64                 `protobuf:"varint,7,opt,name=committed_offset,json=committedOffset"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *OffsetInfo) Reset() {
	*x = OffsetInfo{}
	mi := &file_gcommon_v1_queue_offset_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffsetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffsetInfo) ProtoMessage() {}

func (x *OffsetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_offset_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OffsetInfo) GetOffset() uint64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *OffsetInfo) GetPartitionId() uint32 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *OffsetInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *OffsetInfo) GetMessageSize() uint64 {
	if x != nil {
		return x.xxx_hidden_MessageSize
	}
	return 0
}

func (x *OffsetInfo) GetIsValid() bool {
	if x != nil {
		return x.xxx_hidden_IsValid
	}
	return false
}

func (x *OffsetInfo) GetConsumerGroup() string {
	if x != nil {
		if x.xxx_hidden_ConsumerGroup != nil {
			return *x.xxx_hidden_ConsumerGroup
		}
		return ""
	}
	return ""
}

func (x *OffsetInfo) GetCommittedOffset() uint64 {
	if x != nil {
		return x.xxx_hidden_CommittedOffset
	}
	return 0
}

func (x *OffsetInfo) SetOffset(v uint64) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *OffsetInfo) SetPartitionId(v uint32) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *OffsetInfo) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *OffsetInfo) SetMessageSize(v uint64) {
	x.xxx_hidden_MessageSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *OffsetInfo) SetIsValid(v bool) {
	x.xxx_hidden_IsValid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *OffsetInfo) SetConsumerGroup(v string) {
	x.xxx_hidden_ConsumerGroup = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *OffsetInfo) SetCommittedOffset(v uint64) {
	x.xxx_hidden_CommittedOffset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *OffsetInfo) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OffsetInfo) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *OffsetInfo) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *OffsetInfo) HasMessageSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *OffsetInfo) HasIsValid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *OffsetInfo) HasConsumerGroup() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *OffsetInfo) HasCommittedOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *OffsetInfo) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Offset = 0
}

func (x *OffsetInfo) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PartitionId = 0
}

func (x *OffsetInfo) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *OffsetInfo) ClearMessageSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MessageSize = 0
}

func (x *OffsetInfo) ClearIsValid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_IsValid = false
}

func (x *OffsetInfo) ClearConsumerGroup() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ConsumerGroup = nil
}

func (x *OffsetInfo) ClearCommittedOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_CommittedOffset = 0
}

type OffsetInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The offset value
	Offset *uint64
	// Partition this offset belongs to
	PartitionId *uint32
	// Timestamp of the message at this offset
	Timestamp *timestamppb.Timestamp
	// Size of the message at this offset
	MessageSize *uint64
	// Whether this offset is valid/available
	IsValid *bool
	// Consumer group that owns this offset
	ConsumerGroup *string
	// Last committed offset for this consumer
	CommittedOffset *uint64
}

func (b0 OffsetInfo_builder) Build() *OffsetInfo {
	m0 := &OffsetInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Offset = *b.Offset
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.MessageSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_MessageSize = *b.MessageSize
	}
	if b.IsValid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_IsValid = *b.IsValid
	}
	if b.ConsumerGroup != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ConsumerGroup = b.ConsumerGroup
	}
	if b.CommittedOffset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_CommittedOffset = *b.CommittedOffset
	}
	return m0
}

var File_gcommon_v1_queue_offset_info_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_offset_info_proto_rawDesc = "" +
	"\n" +
	"\"gcommon/v1/queue/offset_info.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x91\x02\n" +
	"\n" +
	"OffsetInfo\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x04R\x06offset\x12!\n" +
	"\fpartition_id\x18\x02 \x01(\rR\vpartitionId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12!\n" +
	"\fmessage_size\x18\x04 \x01(\x04R\vmessageSize\x12\x19\n" +
	"\bis_valid\x18\x05 \x01(\bR\aisValid\x12%\n" +
	"\x0econsumer_group\x18\x06 \x01(\tR\rconsumerGroup\x12)\n" +
	"\x10committed_offset\x18\a \x01(\x04R\x0fcommittedOffsetB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_offset_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_offset_info_proto_goTypes = []any{
	(*OffsetInfo)(nil),            // 0: gcommon.v1.queue.OffsetInfo
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_gcommon_v1_queue_offset_info_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.OffsetInfo.timestamp:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_offset_info_proto_init() }
func file_gcommon_v1_queue_offset_info_proto_init() {
	if File_gcommon_v1_queue_offset_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_offset_info_proto_rawDesc), len(file_gcommon_v1_queue_offset_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_offset_info_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_offset_info_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_offset_info_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_offset_info_proto = out.File
	file_gcommon_v1_queue_offset_info_proto_goTypes = nil
	file_gcommon_v1_queue_offset_info_proto_depIdxs = nil
}
