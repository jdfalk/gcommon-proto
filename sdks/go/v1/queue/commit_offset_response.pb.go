// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/commit_offset_response.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommitOffsetResponse struct {
	state                         protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Success            bool                      `protobuf:"varint,1,opt,name=success"`
	xxx_hidden_ErrorMessage       *string                   `protobuf:"bytes,2,opt,name=error_message,json=errorMessage"`
	xxx_hidden_ErrorCode          *string                   `protobuf:"bytes,3,opt,name=error_code,json=errorCode"`
	xxx_hidden_PartitionResults   *[]*PartitionCommitResult `protobuf:"bytes,4,rep,name=partition_results,json=partitionResults"`
	xxx_hidden_CommittedCount     int32                     `protobuf:"varint,5,opt,name=committed_count,json=committedCount"`
	xxx_hidden_FailedCount        int32                     `protobuf:"varint,6,opt,name=failed_count,json=failedCount"`
	xxx_hidden_CommitTimestamp    *timestamppb.Timestamp    `protobuf:"bytes,7,opt,name=commit_timestamp,json=commitTimestamp"`
	xxx_hidden_ConsumerGeneration int64                     `protobuf:"varint,8,opt,name=consumer_generation,json=consumerGeneration"`
	xxx_hidden_Metadata           map[string]string         `protobuf:"bytes,9,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *CommitOffsetResponse) Reset() {
	*x = CommitOffsetResponse{}
	mi := &file_gcommon_v1_queue_messages_commit_offset_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOffsetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOffsetResponse) ProtoMessage() {}

func (x *CommitOffsetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_commit_offset_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommitOffsetResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *CommitOffsetResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *CommitOffsetResponse) GetErrorCode() string {
	if x != nil {
		if x.xxx_hidden_ErrorCode != nil {
			return *x.xxx_hidden_ErrorCode
		}
		return ""
	}
	return ""
}

func (x *CommitOffsetResponse) GetPartitionResults() []*PartitionCommitResult {
	if x != nil {
		if x.xxx_hidden_PartitionResults != nil {
			return *x.xxx_hidden_PartitionResults
		}
	}
	return nil
}

func (x *CommitOffsetResponse) GetCommittedCount() int32 {
	if x != nil {
		return x.xxx_hidden_CommittedCount
	}
	return 0
}

func (x *CommitOffsetResponse) GetFailedCount() int32 {
	if x != nil {
		return x.xxx_hidden_FailedCount
	}
	return 0
}

func (x *CommitOffsetResponse) GetCommitTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CommitTimestamp
	}
	return nil
}

func (x *CommitOffsetResponse) GetConsumerGeneration() int64 {
	if x != nil {
		return x.xxx_hidden_ConsumerGeneration
	}
	return 0
}

func (x *CommitOffsetResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CommitOffsetResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *CommitOffsetResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *CommitOffsetResponse) SetErrorCode(v string) {
	x.xxx_hidden_ErrorCode = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *CommitOffsetResponse) SetPartitionResults(v []*PartitionCommitResult) {
	x.xxx_hidden_PartitionResults = &v
}

func (x *CommitOffsetResponse) SetCommittedCount(v int32) {
	x.xxx_hidden_CommittedCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *CommitOffsetResponse) SetFailedCount(v int32) {
	x.xxx_hidden_FailedCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *CommitOffsetResponse) SetCommitTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_CommitTimestamp = v
}

func (x *CommitOffsetResponse) SetConsumerGeneration(v int64) {
	x.xxx_hidden_ConsumerGeneration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *CommitOffsetResponse) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *CommitOffsetResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CommitOffsetResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CommitOffsetResponse) HasErrorCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CommitOffsetResponse) HasCommittedCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CommitOffsetResponse) HasFailedCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CommitOffsetResponse) HasCommitTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CommitTimestamp != nil
}

func (x *CommitOffsetResponse) HasConsumerGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *CommitOffsetResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Success = false
}

func (x *CommitOffsetResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ErrorMessage = nil
}

func (x *CommitOffsetResponse) ClearErrorCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ErrorCode = nil
}

func (x *CommitOffsetResponse) ClearCommittedCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CommittedCount = 0
}

func (x *CommitOffsetResponse) ClearFailedCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_FailedCount = 0
}

func (x *CommitOffsetResponse) ClearCommitTimestamp() {
	x.xxx_hidden_CommitTimestamp = nil
}

func (x *CommitOffsetResponse) ClearConsumerGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ConsumerGeneration = 0
}

type CommitOffsetResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Overall success status
	Success *bool
	// Error message if commit failed
	ErrorMessage *string
	// Error code for programmatic handling
	ErrorCode *string
	// Results for each partition commit
	PartitionResults []*PartitionCommitResult
	// Total number of offsets committed
	CommittedCount *int32
	// Total number of failed commits
	FailedCount *int32
	// Commit timestamp
	CommitTimestamp *timestamppb.Timestamp
	// Consumer group generation at time of commit
	ConsumerGeneration *int64
	// Additional metadata about the commit operation
	Metadata map[string]string
}

func (b0 CommitOffsetResponse_builder) Build() *CommitOffsetResponse {
	m0 := &CommitOffsetResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	if b.ErrorCode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_ErrorCode = b.ErrorCode
	}
	x.xxx_hidden_PartitionResults = &b.PartitionResults
	if b.CommittedCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_CommittedCount = *b.CommittedCount
	}
	if b.FailedCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_FailedCount = *b.FailedCount
	}
	x.xxx_hidden_CommitTimestamp = b.CommitTimestamp
	if b.ConsumerGeneration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_ConsumerGeneration = *b.ConsumerGeneration
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

var File_gcommon_v1_queue_messages_commit_offset_response_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_commit_offset_response_proto_rawDesc = "" +
	"\n" +
	"6gcommon/v1/queue/messages/commit_offset_response.proto\x12\x10gcommon.v1.queue\x1a7gcommon/v1/queue/messages/partition_commit_result.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9d\x04\n" +
	"\x14CommitOffsetResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\tR\terrorCode\x12T\n" +
	"\x11partition_results\x18\x04 \x03(\v2'.gcommon.v1.queue.PartitionCommitResultR\x10partitionResults\x12'\n" +
	"\x0fcommitted_count\x18\x05 \x01(\x05R\x0ecommittedCount\x12!\n" +
	"\ffailed_count\x18\x06 \x01(\x05R\vfailedCount\x12E\n" +
	"\x10commit_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x0fcommitTimestamp\x12/\n" +
	"\x13consumer_generation\x18\b \x01(\x03R\x12consumerGeneration\x12P\n" +
	"\bmetadata\x18\t \x03(\v24.gcommon.v1.queue.CommitOffsetResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x12Z\bv1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_commit_offset_response_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_queue_messages_commit_offset_response_proto_goTypes = []any{
	(*CommitOffsetResponse)(nil),  // 0: gcommon.v1.queue.CommitOffsetResponse
	nil,                           // 1: gcommon.v1.queue.CommitOffsetResponse.MetadataEntry
	(*PartitionCommitResult)(nil), // 2: gcommon.v1.queue.PartitionCommitResult
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_gcommon_v1_queue_messages_commit_offset_response_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.queue.CommitOffsetResponse.partition_results:type_name -> gcommon.v1.queue.PartitionCommitResult
	3, // 1: gcommon.v1.queue.CommitOffsetResponse.commit_timestamp:type_name -> google.protobuf.Timestamp
	1, // 2: gcommon.v1.queue.CommitOffsetResponse.metadata:type_name -> gcommon.v1.queue.CommitOffsetResponse.MetadataEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_commit_offset_response_proto_init() }
func file_gcommon_v1_queue_messages_commit_offset_response_proto_init() {
	if File_gcommon_v1_queue_messages_commit_offset_response_proto != nil {
		return
	}
	file_gcommon_v1_queue_messages_partition_commit_result_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_commit_offset_response_proto_rawDesc), len(file_gcommon_v1_queue_messages_commit_offset_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_commit_offset_response_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_commit_offset_response_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_commit_offset_response_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_commit_offset_response_proto = out.File
	file_gcommon_v1_queue_messages_commit_offset_response_proto_goTypes = nil
	file_gcommon_v1_queue_messages_commit_offset_response_proto_depIdxs = nil
}
