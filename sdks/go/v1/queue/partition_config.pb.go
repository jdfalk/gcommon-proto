// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/partition_config.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Configuration for queue partitioning.
type PartitionConfig struct {
	state                              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PartitionCount          uint32                 `protobuf:"varint,1,opt,name=partition_count,json=partitionCount"`
	xxx_hidden_PartitionStrategy       *string                `protobuf:"bytes,2,opt,name=partition_strategy,json=partitionStrategy"`
	xxx_hidden_PartitionKey            *string                `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey"`
	xxx_hidden_CustomPartitionFunction *string                `protobuf:"bytes,4,opt,name=custom_partition_function,json=customPartitionFunction"`
	xxx_hidden_AutoScale               bool                   `protobuf:"varint,5,opt,name=auto_scale,json=autoScale"`
	xxx_hidden_MinPartitions           uint32                 `protobuf:"varint,6,opt,name=min_partitions,json=minPartitions"`
	xxx_hidden_MaxPartitions           uint32                 `protobuf:"varint,7,opt,name=max_partitions,json=maxPartitions"`
	xxx_hidden_ScaleThresholdMb        uint64                 `protobuf:"varint,8,opt,name=scale_threshold_mb,json=scaleThresholdMb"`
	XXX_raceDetectHookData             protoimpl.RaceDetectHookData
	XXX_presence                       [1]uint32
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *PartitionConfig) Reset() {
	*x = PartitionConfig{}
	mi := &file_gcommon_v1_queue_messages_partition_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionConfig) ProtoMessage() {}

func (x *PartitionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_partition_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PartitionConfig) GetPartitionCount() uint32 {
	if x != nil {
		return x.xxx_hidden_PartitionCount
	}
	return 0
}

func (x *PartitionConfig) GetPartitionStrategy() string {
	if x != nil {
		if x.xxx_hidden_PartitionStrategy != nil {
			return *x.xxx_hidden_PartitionStrategy
		}
		return ""
	}
	return ""
}

func (x *PartitionConfig) GetPartitionKey() string {
	if x != nil {
		if x.xxx_hidden_PartitionKey != nil {
			return *x.xxx_hidden_PartitionKey
		}
		return ""
	}
	return ""
}

func (x *PartitionConfig) GetCustomPartitionFunction() string {
	if x != nil {
		if x.xxx_hidden_CustomPartitionFunction != nil {
			return *x.xxx_hidden_CustomPartitionFunction
		}
		return ""
	}
	return ""
}

func (x *PartitionConfig) GetAutoScale() bool {
	if x != nil {
		return x.xxx_hidden_AutoScale
	}
	return false
}

func (x *PartitionConfig) GetMinPartitions() uint32 {
	if x != nil {
		return x.xxx_hidden_MinPartitions
	}
	return 0
}

func (x *PartitionConfig) GetMaxPartitions() uint32 {
	if x != nil {
		return x.xxx_hidden_MaxPartitions
	}
	return 0
}

func (x *PartitionConfig) GetScaleThresholdMb() uint64 {
	if x != nil {
		return x.xxx_hidden_ScaleThresholdMb
	}
	return 0
}

func (x *PartitionConfig) SetPartitionCount(v uint32) {
	x.xxx_hidden_PartitionCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *PartitionConfig) SetPartitionStrategy(v string) {
	x.xxx_hidden_PartitionStrategy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *PartitionConfig) SetPartitionKey(v string) {
	x.xxx_hidden_PartitionKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *PartitionConfig) SetCustomPartitionFunction(v string) {
	x.xxx_hidden_CustomPartitionFunction = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *PartitionConfig) SetAutoScale(v bool) {
	x.xxx_hidden_AutoScale = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *PartitionConfig) SetMinPartitions(v uint32) {
	x.xxx_hidden_MinPartitions = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *PartitionConfig) SetMaxPartitions(v uint32) {
	x.xxx_hidden_MaxPartitions = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *PartitionConfig) SetScaleThresholdMb(v uint64) {
	x.xxx_hidden_ScaleThresholdMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *PartitionConfig) HasPartitionCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PartitionConfig) HasPartitionStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PartitionConfig) HasPartitionKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PartitionConfig) HasCustomPartitionFunction() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PartitionConfig) HasAutoScale() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *PartitionConfig) HasMinPartitions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *PartitionConfig) HasMaxPartitions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *PartitionConfig) HasScaleThresholdMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *PartitionConfig) ClearPartitionCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PartitionCount = 0
}

func (x *PartitionConfig) ClearPartitionStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PartitionStrategy = nil
}

func (x *PartitionConfig) ClearPartitionKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartitionKey = nil
}

func (x *PartitionConfig) ClearCustomPartitionFunction() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CustomPartitionFunction = nil
}

func (x *PartitionConfig) ClearAutoScale() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_AutoScale = false
}

func (x *PartitionConfig) ClearMinPartitions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_MinPartitions = 0
}

func (x *PartitionConfig) ClearMaxPartitions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_MaxPartitions = 0
}

func (x *PartitionConfig) ClearScaleThresholdMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ScaleThresholdMb = 0
}

type PartitionConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Number of partitions
	PartitionCount *uint32
	// Partitioning strategy (hash, round-robin, custom)
	PartitionStrategy *string
	// Key field to use for partitioning
	PartitionKey *string
	// Custom partition function (if strategy is custom)
	CustomPartitionFunction *string
	// Whether to enable partition auto-scaling
	AutoScale *bool
	// Minimum number of partitions
	MinPartitions *uint32
	// Maximum number of partitions
	MaxPartitions *uint32
	// Partition size threshold for auto-scaling (in MB)
	ScaleThresholdMb *uint64
}

func (b0 PartitionConfig_builder) Build() *PartitionConfig {
	m0 := &PartitionConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PartitionCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_PartitionCount = *b.PartitionCount
	}
	if b.PartitionStrategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_PartitionStrategy = b.PartitionStrategy
	}
	if b.PartitionKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_PartitionKey = b.PartitionKey
	}
	if b.CustomPartitionFunction != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_CustomPartitionFunction = b.CustomPartitionFunction
	}
	if b.AutoScale != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_AutoScale = *b.AutoScale
	}
	if b.MinPartitions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_MinPartitions = *b.MinPartitions
	}
	if b.MaxPartitions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_MaxPartitions = *b.MaxPartitions
	}
	if b.ScaleThresholdMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_ScaleThresholdMb = *b.ScaleThresholdMb
	}
	return m0
}

var File_gcommon_v1_queue_messages_partition_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_partition_config_proto_rawDesc = "" +
	"\n" +
	"0gcommon/v1/queue/messages/partition_config.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\"\xe5\x02\n" +
	"\x0fPartitionConfig\x12'\n" +
	"\x0fpartition_count\x18\x01 \x01(\rR\x0epartitionCount\x12-\n" +
	"\x12partition_strategy\x18\x02 \x01(\tR\x11partitionStrategy\x12#\n" +
	"\rpartition_key\x18\x03 \x01(\tR\fpartitionKey\x12:\n" +
	"\x19custom_partition_function\x18\x04 \x01(\tR\x17customPartitionFunction\x12\x1d\n" +
	"\n" +
	"auto_scale\x18\x05 \x01(\bR\tautoScale\x12%\n" +
	"\x0emin_partitions\x18\x06 \x01(\rR\rminPartitions\x12%\n" +
	"\x0emax_partitions\x18\a \x01(\rR\rmaxPartitions\x12,\n" +
	"\x12scale_threshold_mb\x18\b \x01(\x04R\x10scaleThresholdMbB\x12Z\bv1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_partition_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_partition_config_proto_goTypes = []any{
	(*PartitionConfig)(nil), // 0: gcommon.v1.queue.PartitionConfig
}
var file_gcommon_v1_queue_messages_partition_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_partition_config_proto_init() }
func file_gcommon_v1_queue_messages_partition_config_proto_init() {
	if File_gcommon_v1_queue_messages_partition_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_partition_config_proto_rawDesc), len(file_gcommon_v1_queue_messages_partition_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_partition_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_partition_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_partition_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_partition_config_proto = out.File
	file_gcommon_v1_queue_messages_partition_config_proto_goTypes = nil
	file_gcommon_v1_queue_messages_partition_config_proto_depIdxs = nil
}
