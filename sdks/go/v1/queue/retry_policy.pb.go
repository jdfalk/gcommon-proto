// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/queue/retry_policy.proto

package queue

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Retry policy for failed message processing.
// Defines how failed messages should be retried before being
// sent to dead letter queue.
type QueueRetryPolicy struct {
	state                        protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_MaxAttempts       int32                     `protobuf:"varint,1,opt,name=max_attempts,json=maxAttempts"`
	xxx_hidden_InitialDelay      *durationpb.Duration      `protobuf:"bytes,2,opt,name=initial_delay,json=initialDelay"`
	xxx_hidden_MaxDelay          *durationpb.Duration      `protobuf:"bytes,3,opt,name=max_delay,json=maxDelay"`
	xxx_hidden_BackoffMultiplier float64                   `protobuf:"fixed64,4,opt,name=backoff_multiplier,json=backoffMultiplier"`
	xxx_hidden_DelayStrategy     common.RetryDelayStrategy `protobuf:"varint,5,opt,name=delay_strategy,json=delayStrategy,enum=gcommon.v1.common.RetryDelayStrategy"`
	xxx_hidden_EnableJitter      bool                      `protobuf:"varint,6,opt,name=enable_jitter,json=enableJitter"`
	xxx_hidden_JitterFactor      float64                   `protobuf:"fixed64,7,opt,name=jitter_factor,json=jitterFactor"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *QueueRetryPolicy) Reset() {
	*x = QueueRetryPolicy{}
	mi := &file_gcommon_v1_queue_retry_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueRetryPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueRetryPolicy) ProtoMessage() {}

func (x *QueueRetryPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_retry_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueueRetryPolicy) GetMaxAttempts() int32 {
	if x != nil {
		return x.xxx_hidden_MaxAttempts
	}
	return 0
}

func (x *QueueRetryPolicy) GetInitialDelay() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_InitialDelay
	}
	return nil
}

func (x *QueueRetryPolicy) GetMaxDelay() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_MaxDelay
	}
	return nil
}

func (x *QueueRetryPolicy) GetBackoffMultiplier() float64 {
	if x != nil {
		return x.xxx_hidden_BackoffMultiplier
	}
	return 0
}

func (x *QueueRetryPolicy) GetDelayStrategy() common.RetryDelayStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_DelayStrategy
		}
	}
	return common.RetryDelayStrategy(0)
}

func (x *QueueRetryPolicy) GetEnableJitter() bool {
	if x != nil {
		return x.xxx_hidden_EnableJitter
	}
	return false
}

func (x *QueueRetryPolicy) GetJitterFactor() float64 {
	if x != nil {
		return x.xxx_hidden_JitterFactor
	}
	return 0
}

func (x *QueueRetryPolicy) SetMaxAttempts(v int32) {
	x.xxx_hidden_MaxAttempts = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *QueueRetryPolicy) SetInitialDelay(v *durationpb.Duration) {
	x.xxx_hidden_InitialDelay = v
}

func (x *QueueRetryPolicy) SetMaxDelay(v *durationpb.Duration) {
	x.xxx_hidden_MaxDelay = v
}

func (x *QueueRetryPolicy) SetBackoffMultiplier(v float64) {
	x.xxx_hidden_BackoffMultiplier = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *QueueRetryPolicy) SetDelayStrategy(v common.RetryDelayStrategy) {
	x.xxx_hidden_DelayStrategy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *QueueRetryPolicy) SetEnableJitter(v bool) {
	x.xxx_hidden_EnableJitter = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *QueueRetryPolicy) SetJitterFactor(v float64) {
	x.xxx_hidden_JitterFactor = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *QueueRetryPolicy) HasMaxAttempts() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QueueRetryPolicy) HasInitialDelay() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InitialDelay != nil
}

func (x *QueueRetryPolicy) HasMaxDelay() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_MaxDelay != nil
}

func (x *QueueRetryPolicy) HasBackoffMultiplier() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *QueueRetryPolicy) HasDelayStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *QueueRetryPolicy) HasEnableJitter() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *QueueRetryPolicy) HasJitterFactor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *QueueRetryPolicy) ClearMaxAttempts() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MaxAttempts = 0
}

func (x *QueueRetryPolicy) ClearInitialDelay() {
	x.xxx_hidden_InitialDelay = nil
}

func (x *QueueRetryPolicy) ClearMaxDelay() {
	x.xxx_hidden_MaxDelay = nil
}

func (x *QueueRetryPolicy) ClearBackoffMultiplier() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_BackoffMultiplier = 0
}

func (x *QueueRetryPolicy) ClearDelayStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DelayStrategy = common.RetryDelayStrategy_RETRY_DELAY_STRATEGY_UNSPECIFIED
}

func (x *QueueRetryPolicy) ClearEnableJitter() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_EnableJitter = false
}

func (x *QueueRetryPolicy) ClearJitterFactor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_JitterFactor = 0
}

type QueueRetryPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum number of retry attempts
	MaxAttempts *int32
	// Initial delay before first retry
	InitialDelay *durationpb.Duration
	// Maximum delay between retries
	MaxDelay *durationpb.Duration
	// Backoff multiplier for exponential backoff
	BackoffMultiplier *float64
	// Retry delay strategy
	DelayStrategy *common.RetryDelayStrategy
	// Whether to enable jitter in retry delays
	EnableJitter *bool
	// Jitter factor (0.0 to 1.0) for randomizing delays
	JitterFactor *float64
}

func (b0 QueueRetryPolicy_builder) Build() *QueueRetryPolicy {
	m0 := &QueueRetryPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MaxAttempts != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_MaxAttempts = *b.MaxAttempts
	}
	x.xxx_hidden_InitialDelay = b.InitialDelay
	x.xxx_hidden_MaxDelay = b.MaxDelay
	if b.BackoffMultiplier != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_BackoffMultiplier = *b.BackoffMultiplier
	}
	if b.DelayStrategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_DelayStrategy = *b.DelayStrategy
	}
	if b.EnableJitter != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_EnableJitter = *b.EnableJitter
	}
	if b.JitterFactor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_JitterFactor = *b.JitterFactor
	}
	return m0
}

var File_gcommon_v1_queue_retry_policy_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_retry_policy_proto_rawDesc = "" +
	"\n" +
	"#gcommon/v1/queue/retry_policy.proto\x12\x10gcommon.v1.queue\x1a,gcommon/v1/common/retry_delay_strategy.proto\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\x9d\x03\n" +
	"\x10QueueRetryPolicy\x12*\n" +
	"\fmax_attempts\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\vmaxAttempts\x12>\n" +
	"\rinitial_delay\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\finitialDelay\x126\n" +
	"\tmax_delay\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\bmaxDelay\x12=\n" +
	"\x12backoff_multiplier\x18\x04 \x01(\x01B\x0e\xbaH\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\x11backoffMultiplier\x12L\n" +
	"\x0edelay_strategy\x18\x05 \x01(\x0e2%.gcommon.v1.common.RetryDelayStrategyR\rdelayStrategy\x12#\n" +
	"\renable_jitter\x18\x06 \x01(\bR\fenableJitter\x123\n" +
	"\rjitter_factor\x18\a \x01(\x01B\x0e\xbaH\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\fjitterFactorB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_retry_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_retry_policy_proto_goTypes = []any{
	(*QueueRetryPolicy)(nil),       // 0: gcommon.v1.queue.QueueRetryPolicy
	(*durationpb.Duration)(nil),    // 1: google.protobuf.Duration
	(common.RetryDelayStrategy)(0), // 2: gcommon.v1.common.RetryDelayStrategy
}
var file_gcommon_v1_queue_retry_policy_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.QueueRetryPolicy.initial_delay:type_name -> google.protobuf.Duration
	1, // 1: gcommon.v1.queue.QueueRetryPolicy.max_delay:type_name -> google.protobuf.Duration
	2, // 2: gcommon.v1.queue.QueueRetryPolicy.delay_strategy:type_name -> gcommon.v1.common.RetryDelayStrategy
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_retry_policy_proto_init() }
func file_gcommon_v1_queue_retry_policy_proto_init() {
	if File_gcommon_v1_queue_retry_policy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_retry_policy_proto_rawDesc), len(file_gcommon_v1_queue_retry_policy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_retry_policy_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_retry_policy_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_retry_policy_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_retry_policy_proto = out.File
	file_gcommon_v1_queue_retry_policy_proto_goTypes = nil
	file_gcommon_v1_queue_retry_policy_proto_depIdxs = nil
}
