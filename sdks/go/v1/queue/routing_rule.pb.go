// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/queue/routing_rule.proto

package queue

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Individual routing rule.
type RoutingRule struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Priority    int32                  `protobuf:"varint,2,opt,name=priority"`
	xxx_hidden_Condition   *RoutingCondition      `protobuf:"bytes,3,opt,name=condition"`
	xxx_hidden_Destination *string                `protobuf:"bytes,4,opt,name=destination"`
	xxx_hidden_Enabled     bool                   `protobuf:"varint,5,opt,name=enabled"`
	xxx_hidden_Metadata    map[string]string      `protobuf:"bytes,6,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RoutingRule) Reset() {
	*x = RoutingRule{}
	mi := &file_gcommon_v1_queue_routing_rule_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingRule) ProtoMessage() {}

func (x *RoutingRule) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_routing_rule_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RoutingRule) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *RoutingRule) GetPriority() int32 {
	if x != nil {
		return x.xxx_hidden_Priority
	}
	return 0
}

func (x *RoutingRule) GetCondition() *RoutingCondition {
	if x != nil {
		return x.xxx_hidden_Condition
	}
	return nil
}

func (x *RoutingRule) GetDestination() string {
	if x != nil {
		if x.xxx_hidden_Destination != nil {
			return *x.xxx_hidden_Destination
		}
		return ""
	}
	return ""
}

func (x *RoutingRule) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *RoutingRule) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *RoutingRule) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *RoutingRule) SetPriority(v int32) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *RoutingRule) SetCondition(v *RoutingCondition) {
	x.xxx_hidden_Condition = v
}

func (x *RoutingRule) SetDestination(v string) {
	x.xxx_hidden_Destination = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *RoutingRule) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *RoutingRule) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *RoutingRule) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RoutingRule) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RoutingRule) HasCondition() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Condition != nil
}

func (x *RoutingRule) HasDestination() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RoutingRule) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RoutingRule) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *RoutingRule) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Priority = 0
}

func (x *RoutingRule) ClearCondition() {
	x.xxx_hidden_Condition = nil
}

func (x *RoutingRule) ClearDestination() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Destination = nil
}

func (x *RoutingRule) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Enabled = false
}

type RoutingRule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique name for the rule
	Name *string
	// Priority of the rule (higher numbers = higher priority)
	Priority *int32
	// Condition for applying the rule
	Condition *RoutingCondition
	// Target destination for matching messages
	Destination *string
	// Whether the rule is enabled
	Enabled *bool
	// Additional metadata for the rule
	Metadata map[string]string
}

func (b0 RoutingRule_builder) Build() *RoutingRule {
	m0 := &RoutingRule{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Priority = *b.Priority
	}
	x.xxx_hidden_Condition = b.Condition
	if b.Destination != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Destination = b.Destination
	}
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

var File_gcommon_v1_queue_routing_rule_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_routing_rule_proto_rawDesc = "" +
	"\n" +
	"#gcommon/v1/queue/routing_rule.proto\x12\x10gcommon.v1.queue\x1a(gcommon/v1/queue/routing_condition.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xcc\x02\n" +
	"\vRoutingRule\x12\x1d\n" +
	"\x04name\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18dR\x04name\x12\x1a\n" +
	"\bpriority\x18\x02 \x01(\x05R\bpriority\x12@\n" +
	"\tcondition\x18\x03 \x01(\v2\".gcommon.v1.queue.RoutingConditionR\tcondition\x12 \n" +
	"\vdestination\x18\x04 \x01(\tR\vdestination\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x12G\n" +
	"\bmetadata\x18\x06 \x03(\v2+.gcommon.v1.queue.RoutingRule.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_routing_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_queue_routing_rule_proto_goTypes = []any{
	(*RoutingRule)(nil),      // 0: gcommon.v1.queue.RoutingRule
	nil,                      // 1: gcommon.v1.queue.RoutingRule.MetadataEntry
	(*RoutingCondition)(nil), // 2: gcommon.v1.queue.RoutingCondition
}
var file_gcommon_v1_queue_routing_rule_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.queue.RoutingRule.condition:type_name -> gcommon.v1.queue.RoutingCondition
	1, // 1: gcommon.v1.queue.RoutingRule.metadata:type_name -> gcommon.v1.queue.RoutingRule.MetadataEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_routing_rule_proto_init() }
func file_gcommon_v1_queue_routing_rule_proto_init() {
	if File_gcommon_v1_queue_routing_rule_proto != nil {
		return
	}
	file_gcommon_v1_queue_routing_condition_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_routing_rule_proto_rawDesc), len(file_gcommon_v1_queue_routing_rule_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_routing_rule_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_routing_rule_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_routing_rule_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_routing_rule_proto = out.File
	file_gcommon_v1_queue_routing_rule_proto_goTypes = nil
	file_gcommon_v1_queue_routing_rule_proto_depIdxs = nil
}
