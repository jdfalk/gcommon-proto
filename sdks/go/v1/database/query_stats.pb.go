// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/database/query_stats.proto

package database

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// QueryStats provides execution statistics for database queries.
// Used for performance monitoring and query optimization.
type DatabaseQueryStats struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ExecutionTime *durationpb.Duration   `protobuf:"bytes,1,opt,name=execution_time,json=executionTime"`
	xxx_hidden_RowCount      int64                  `protobuf:"varint,2,opt,name=row_count,json=rowCount"`
	xxx_hidden_ColumnCount   int32                  `protobuf:"varint,3,opt,name=column_count,json=columnCount"`
	xxx_hidden_QueryPlan     *string                `protobuf:"bytes,4,opt,name=query_plan,json=queryPlan"`
	xxx_hidden_CostEstimate  float64                `protobuf:"fixed64,5,opt,name=cost_estimate,json=costEstimate"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DatabaseQueryStats) Reset() {
	*x = DatabaseQueryStats{}
	mi := &file_gcommon_v1_database_query_stats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseQueryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseQueryStats) ProtoMessage() {}

func (x *DatabaseQueryStats) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_database_query_stats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DatabaseQueryStats) GetExecutionTime() *durationpb.Duration {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_ExecutionTime) {
				protoimpl.X.UnmarshalField(x, 1)
			}
			var rv *durationpb.Duration
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_ExecutionTime), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *DatabaseQueryStats) GetRowCount() int64 {
	if x != nil {
		return x.xxx_hidden_RowCount
	}
	return 0
}

func (x *DatabaseQueryStats) GetColumnCount() int32 {
	if x != nil {
		return x.xxx_hidden_ColumnCount
	}
	return 0
}

func (x *DatabaseQueryStats) GetQueryPlan() string {
	if x != nil {
		if x.xxx_hidden_QueryPlan != nil {
			return *x.xxx_hidden_QueryPlan
		}
		return ""
	}
	return ""
}

func (x *DatabaseQueryStats) GetCostEstimate() float64 {
	if x != nil {
		return x.xxx_hidden_CostEstimate
	}
	return 0
}

func (x *DatabaseQueryStats) SetExecutionTime(v *durationpb.Duration) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_ExecutionTime, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
	}
}

func (x *DatabaseQueryStats) SetRowCount(v int64) {
	x.xxx_hidden_RowCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *DatabaseQueryStats) SetColumnCount(v int32) {
	x.xxx_hidden_ColumnCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *DatabaseQueryStats) SetQueryPlan(v string) {
	x.xxx_hidden_QueryPlan = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *DatabaseQueryStats) SetCostEstimate(v float64) {
	x.xxx_hidden_CostEstimate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *DatabaseQueryStats) HasExecutionTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DatabaseQueryStats) HasRowCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DatabaseQueryStats) HasColumnCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DatabaseQueryStats) HasQueryPlan() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DatabaseQueryStats) HasCostEstimate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DatabaseQueryStats) ClearExecutionTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_ExecutionTime, (*durationpb.Duration)(nil))
}

func (x *DatabaseQueryStats) ClearRowCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RowCount = 0
}

func (x *DatabaseQueryStats) ClearColumnCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ColumnCount = 0
}

func (x *DatabaseQueryStats) ClearQueryPlan() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_QueryPlan = nil
}

func (x *DatabaseQueryStats) ClearCostEstimate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CostEstimate = 0
}

type DatabaseQueryStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total execution time for the query
	ExecutionTime *durationpb.Duration
	// Number of rows returned by the query
	RowCount *int64
	// Number of columns in the result set
	ColumnCount *int32
	// Query execution plan (if available)
	QueryPlan *string
	// Estimated cost of query execution
	CostEstimate *float64
}

func (b0 DatabaseQueryStats_builder) Build() *DatabaseQueryStats {
	m0 := &DatabaseQueryStats{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ExecutionTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ExecutionTime = b.ExecutionTime
	}
	if b.RowCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_RowCount = *b.RowCount
	}
	if b.ColumnCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_ColumnCount = *b.ColumnCount
	}
	if b.QueryPlan != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_QueryPlan = b.QueryPlan
	}
	if b.CostEstimate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_CostEstimate = *b.CostEstimate
	}
	return m0
}

var File_gcommon_v1_database_query_stats_proto protoreflect.FileDescriptor

const file_gcommon_v1_database_query_stats_proto_rawDesc = "" +
	"\n" +
	"%gcommon/v1/database/query_stats.proto\x12\x13gcommon.v1.database\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\"\xde\x01\n" +
	"\x12DatabaseQueryStats\x12D\n" +
	"\x0eexecution_time\x18\x01 \x01(\v2\x19.google.protobuf.DurationB\x02(\x01R\rexecutionTime\x12\x1b\n" +
	"\trow_count\x18\x02 \x01(\x03R\browCount\x12!\n" +
	"\fcolumn_count\x18\x03 \x01(\x05R\vcolumnCount\x12\x1d\n" +
	"\n" +
	"query_plan\x18\x04 \x01(\tR\tqueryPlan\x12#\n" +
	"\rcost_estimate\x18\x05 \x01(\x01R\fcostEstimateB7Z-github.com/jdfalk/gcommon/sdks/go/v1/database\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_database_query_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_database_query_stats_proto_goTypes = []any{
	(*DatabaseQueryStats)(nil),  // 0: gcommon.v1.database.DatabaseQueryStats
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
}
var file_gcommon_v1_database_query_stats_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.database.DatabaseQueryStats.execution_time:type_name -> google.protobuf.Duration
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_database_query_stats_proto_init() }
func file_gcommon_v1_database_query_stats_proto_init() {
	if File_gcommon_v1_database_query_stats_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_database_query_stats_proto_rawDesc), len(file_gcommon_v1_database_query_stats_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_database_query_stats_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_database_query_stats_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_database_query_stats_proto_msgTypes,
	}.Build()
	File_gcommon_v1_database_query_stats_proto = out.File
	file_gcommon_v1_database_query_stats_proto_goTypes = nil
	file_gcommon_v1_database_query_stats_proto_depIdxs = nil
}
