// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/media/messages/transcode_media_request.proto

package media

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to transcode media to different format.
type TranscodeMediaRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MediaFileId  *string                `protobuf:"bytes,1,opt,name=media_file_id,json=mediaFileId"`
	xxx_hidden_OutputFormat *string                `protobuf:"bytes,2,opt,name=output_format,json=outputFormat"`
	xxx_hidden_OutputCodec  *string                `protobuf:"bytes,3,opt,name=output_codec,json=outputCodec"`
	xxx_hidden_Options      *TranscodeOptions      `protobuf:"bytes,4,opt,name=options"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *TranscodeMediaRequest) Reset() {
	*x = TranscodeMediaRequest{}
	mi := &file_gcommon_v1_media_messages_transcode_media_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscodeMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscodeMediaRequest) ProtoMessage() {}

func (x *TranscodeMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_media_messages_transcode_media_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TranscodeMediaRequest) GetMediaFileId() string {
	if x != nil {
		if x.xxx_hidden_MediaFileId != nil {
			return *x.xxx_hidden_MediaFileId
		}
		return ""
	}
	return ""
}

func (x *TranscodeMediaRequest) GetOutputFormat() string {
	if x != nil {
		if x.xxx_hidden_OutputFormat != nil {
			return *x.xxx_hidden_OutputFormat
		}
		return ""
	}
	return ""
}

func (x *TranscodeMediaRequest) GetOutputCodec() string {
	if x != nil {
		if x.xxx_hidden_OutputCodec != nil {
			return *x.xxx_hidden_OutputCodec
		}
		return ""
	}
	return ""
}

func (x *TranscodeMediaRequest) GetOptions() *TranscodeOptions {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *TranscodeMediaRequest) SetMediaFileId(v string) {
	x.xxx_hidden_MediaFileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *TranscodeMediaRequest) SetOutputFormat(v string) {
	x.xxx_hidden_OutputFormat = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *TranscodeMediaRequest) SetOutputCodec(v string) {
	x.xxx_hidden_OutputCodec = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *TranscodeMediaRequest) SetOptions(v *TranscodeOptions) {
	x.xxx_hidden_Options = v
}

func (x *TranscodeMediaRequest) HasMediaFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TranscodeMediaRequest) HasOutputFormat() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TranscodeMediaRequest) HasOutputCodec() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TranscodeMediaRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Options != nil
}

func (x *TranscodeMediaRequest) ClearMediaFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MediaFileId = nil
}

func (x *TranscodeMediaRequest) ClearOutputFormat() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OutputFormat = nil
}

func (x *TranscodeMediaRequest) ClearOutputCodec() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_OutputCodec = nil
}

func (x *TranscodeMediaRequest) ClearOptions() {
	x.xxx_hidden_Options = nil
}

type TranscodeMediaRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MediaFileId  *string
	OutputFormat *string
	OutputCodec  *string
	Options      *TranscodeOptions
}

func (b0 TranscodeMediaRequest_builder) Build() *TranscodeMediaRequest {
	m0 := &TranscodeMediaRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MediaFileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_MediaFileId = b.MediaFileId
	}
	if b.OutputFormat != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_OutputFormat = b.OutputFormat
	}
	if b.OutputCodec != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_OutputCodec = b.OutputCodec
	}
	x.xxx_hidden_Options = b.Options
	return m0
}

var File_gcommon_v1_media_messages_transcode_media_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_media_messages_transcode_media_request_proto_rawDesc = "" +
	"\n" +
	"7gcommon/v1/media/messages/transcode_media_request.proto\x12\x10gcommon.v1.media\x1a1gcommon/v1/media/messages/transcode_options.proto\x1a!google/protobuf/go_features.proto\"\xc1\x01\n" +
	"\x15TranscodeMediaRequest\x12\"\n" +
	"\rmedia_file_id\x18\x01 \x01(\tR\vmediaFileId\x12#\n" +
	"\routput_format\x18\x02 \x01(\tR\foutputFormat\x12!\n" +
	"\foutput_codec\x18\x03 \x01(\tR\voutputCodec\x12<\n" +
	"\aoptions\x18\x04 \x01(\v2\".gcommon.v1.media.TranscodeOptionsR\aoptionsB\x12Z\bv1/media\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_media_messages_transcode_media_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_media_messages_transcode_media_request_proto_goTypes = []any{
	(*TranscodeMediaRequest)(nil), // 0: gcommon.v1.media.TranscodeMediaRequest
	(*TranscodeOptions)(nil),      // 1: gcommon.v1.media.TranscodeOptions
}
var file_gcommon_v1_media_messages_transcode_media_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.media.TranscodeMediaRequest.options:type_name -> gcommon.v1.media.TranscodeOptions
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_media_messages_transcode_media_request_proto_init() }
func file_gcommon_v1_media_messages_transcode_media_request_proto_init() {
	if File_gcommon_v1_media_messages_transcode_media_request_proto != nil {
		return
	}
	file_gcommon_v1_media_messages_transcode_options_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_media_messages_transcode_media_request_proto_rawDesc), len(file_gcommon_v1_media_messages_transcode_media_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_media_messages_transcode_media_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_media_messages_transcode_media_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_media_messages_transcode_media_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_media_messages_transcode_media_request_proto = out.File
	file_gcommon_v1_media_messages_transcode_media_request_proto_goTypes = nil
	file_gcommon_v1_media_messages_transcode_media_request_proto_depIdxs = nil
}
