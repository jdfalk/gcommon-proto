// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/media/messages/extract_audio_request.proto

package media

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to extract audio tracks from media.
type ExtractAudioRequest struct {
	state                   protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_MediaFileId  *string                 `protobuf:"bytes,1,opt,name=media_file_id,json=mediaFileId"`
	xxx_hidden_TrackIndices []int32                 `protobuf:"varint,2,rep,packed,name=track_indices,json=trackIndices"`
	xxx_hidden_Options      *AudioExtractionOptions `protobuf:"bytes,3,opt,name=options"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ExtractAudioRequest) Reset() {
	*x = ExtractAudioRequest{}
	mi := &file_gcommon_v1_media_messages_extract_audio_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractAudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractAudioRequest) ProtoMessage() {}

func (x *ExtractAudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_media_messages_extract_audio_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExtractAudioRequest) GetMediaFileId() string {
	if x != nil {
		if x.xxx_hidden_MediaFileId != nil {
			return *x.xxx_hidden_MediaFileId
		}
		return ""
	}
	return ""
}

func (x *ExtractAudioRequest) GetTrackIndices() []int32 {
	if x != nil {
		return x.xxx_hidden_TrackIndices
	}
	return nil
}

func (x *ExtractAudioRequest) GetOptions() *AudioExtractionOptions {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *ExtractAudioRequest) SetMediaFileId(v string) {
	x.xxx_hidden_MediaFileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ExtractAudioRequest) SetTrackIndices(v []int32) {
	x.xxx_hidden_TrackIndices = v
}

func (x *ExtractAudioRequest) SetOptions(v *AudioExtractionOptions) {
	x.xxx_hidden_Options = v
}

func (x *ExtractAudioRequest) HasMediaFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExtractAudioRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Options != nil
}

func (x *ExtractAudioRequest) ClearMediaFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MediaFileId = nil
}

func (x *ExtractAudioRequest) ClearOptions() {
	x.xxx_hidden_Options = nil
}

type ExtractAudioRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MediaFileId  *string
	TrackIndices []int32
	Options      *AudioExtractionOptions
}

func (b0 ExtractAudioRequest_builder) Build() *ExtractAudioRequest {
	m0 := &ExtractAudioRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MediaFileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_MediaFileId = b.MediaFileId
	}
	x.xxx_hidden_TrackIndices = b.TrackIndices
	x.xxx_hidden_Options = b.Options
	return m0
}

// Audio extraction options.
type AudioExtractionOptions struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_OutputFormat   *string                `protobuf:"bytes,1,opt,name=output_format,json=outputFormat"`
	xxx_hidden_Bitrate        int32                  `protobuf:"varint,2,opt,name=bitrate"`
	xxx_hidden_SampleRate     int32                  `protobuf:"varint,3,opt,name=sample_rate,json=sampleRate"`
	xxx_hidden_NormalizeAudio bool                   `protobuf:"varint,4,opt,name=normalize_audio,json=normalizeAudio"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *AudioExtractionOptions) Reset() {
	*x = AudioExtractionOptions{}
	mi := &file_gcommon_v1_media_messages_extract_audio_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioExtractionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioExtractionOptions) ProtoMessage() {}

func (x *AudioExtractionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_media_messages_extract_audio_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AudioExtractionOptions) GetOutputFormat() string {
	if x != nil {
		if x.xxx_hidden_OutputFormat != nil {
			return *x.xxx_hidden_OutputFormat
		}
		return ""
	}
	return ""
}

func (x *AudioExtractionOptions) GetBitrate() int32 {
	if x != nil {
		return x.xxx_hidden_Bitrate
	}
	return 0
}

func (x *AudioExtractionOptions) GetSampleRate() int32 {
	if x != nil {
		return x.xxx_hidden_SampleRate
	}
	return 0
}

func (x *AudioExtractionOptions) GetNormalizeAudio() bool {
	if x != nil {
		return x.xxx_hidden_NormalizeAudio
	}
	return false
}

func (x *AudioExtractionOptions) SetOutputFormat(v string) {
	x.xxx_hidden_OutputFormat = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *AudioExtractionOptions) SetBitrate(v int32) {
	x.xxx_hidden_Bitrate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *AudioExtractionOptions) SetSampleRate(v int32) {
	x.xxx_hidden_SampleRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *AudioExtractionOptions) SetNormalizeAudio(v bool) {
	x.xxx_hidden_NormalizeAudio = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *AudioExtractionOptions) HasOutputFormat() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AudioExtractionOptions) HasBitrate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AudioExtractionOptions) HasSampleRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AudioExtractionOptions) HasNormalizeAudio() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AudioExtractionOptions) ClearOutputFormat() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_OutputFormat = nil
}

func (x *AudioExtractionOptions) ClearBitrate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Bitrate = 0
}

func (x *AudioExtractionOptions) ClearSampleRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SampleRate = 0
}

func (x *AudioExtractionOptions) ClearNormalizeAudio() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_NormalizeAudio = false
}

type AudioExtractionOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OutputFormat   *string
	Bitrate        *int32
	SampleRate     *int32
	NormalizeAudio *bool
}

func (b0 AudioExtractionOptions_builder) Build() *AudioExtractionOptions {
	m0 := &AudioExtractionOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.OutputFormat != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_OutputFormat = b.OutputFormat
	}
	if b.Bitrate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Bitrate = *b.Bitrate
	}
	if b.SampleRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_SampleRate = *b.SampleRate
	}
	if b.NormalizeAudio != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_NormalizeAudio = *b.NormalizeAudio
	}
	return m0
}

var File_gcommon_v1_media_messages_extract_audio_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_media_messages_extract_audio_request_proto_rawDesc = "" +
	"\n" +
	"5gcommon/v1/media/messages/extract_audio_request.proto\x12\x10gcommon.v1.media\x1a!google/protobuf/go_features.proto\"\xa2\x01\n" +
	"\x13ExtractAudioRequest\x12\"\n" +
	"\rmedia_file_id\x18\x01 \x01(\tR\vmediaFileId\x12#\n" +
	"\rtrack_indices\x18\x02 \x03(\x05R\ftrackIndices\x12B\n" +
	"\aoptions\x18\x03 \x01(\v2(.gcommon.v1.media.AudioExtractionOptionsR\aoptions\"\xa1\x01\n" +
	"\x16AudioExtractionOptions\x12#\n" +
	"\routput_format\x18\x01 \x01(\tR\foutputFormat\x12\x18\n" +
	"\abitrate\x18\x02 \x01(\x05R\abitrate\x12\x1f\n" +
	"\vsample_rate\x18\x03 \x01(\x05R\n" +
	"sampleRate\x12'\n" +
	"\x0fnormalize_audio\x18\x04 \x01(\bR\x0enormalizeAudioB\x12Z\bv1/media\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_media_messages_extract_audio_request_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_media_messages_extract_audio_request_proto_goTypes = []any{
	(*ExtractAudioRequest)(nil),    // 0: gcommon.v1.media.ExtractAudioRequest
	(*AudioExtractionOptions)(nil), // 1: gcommon.v1.media.AudioExtractionOptions
}
var file_gcommon_v1_media_messages_extract_audio_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.media.ExtractAudioRequest.options:type_name -> gcommon.v1.media.AudioExtractionOptions
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_media_messages_extract_audio_request_proto_init() }
func file_gcommon_v1_media_messages_extract_audio_request_proto_init() {
	if File_gcommon_v1_media_messages_extract_audio_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_media_messages_extract_audio_request_proto_rawDesc), len(file_gcommon_v1_media_messages_extract_audio_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_media_messages_extract_audio_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_media_messages_extract_audio_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_media_messages_extract_audio_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_media_messages_extract_audio_request_proto = out.File
	file_gcommon_v1_media_messages_extract_audio_request_proto_goTypes = nil
	file_gcommon_v1_media_messages_extract_audio_request_proto_depIdxs = nil
}
