// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/media/validate_subtitles_request.proto

package media

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to validate subtitle file format and content.
type ValidateSubtitlesRequest struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SubtitleFileId  *string                `protobuf:"bytes,1,opt,name=subtitle_file_id,json=subtitleFileId"`
	xxx_hidden_CheckTiming     bool                   `protobuf:"varint,2,opt,name=check_timing,json=checkTiming"`
	xxx_hidden_CheckFormatting bool                   `protobuf:"varint,3,opt,name=check_formatting,json=checkFormatting"`
	xxx_hidden_ExpectedFormat  *string                `protobuf:"bytes,4,opt,name=expected_format,json=expectedFormat"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ValidateSubtitlesRequest) Reset() {
	*x = ValidateSubtitlesRequest{}
	mi := &file_gcommon_v1_media_validate_subtitles_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSubtitlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSubtitlesRequest) ProtoMessage() {}

func (x *ValidateSubtitlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_media_validate_subtitles_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ValidateSubtitlesRequest) GetSubtitleFileId() string {
	if x != nil {
		if x.xxx_hidden_SubtitleFileId != nil {
			return *x.xxx_hidden_SubtitleFileId
		}
		return ""
	}
	return ""
}

func (x *ValidateSubtitlesRequest) GetCheckTiming() bool {
	if x != nil {
		return x.xxx_hidden_CheckTiming
	}
	return false
}

func (x *ValidateSubtitlesRequest) GetCheckFormatting() bool {
	if x != nil {
		return x.xxx_hidden_CheckFormatting
	}
	return false
}

func (x *ValidateSubtitlesRequest) GetExpectedFormat() string {
	if x != nil {
		if x.xxx_hidden_ExpectedFormat != nil {
			return *x.xxx_hidden_ExpectedFormat
		}
		return ""
	}
	return ""
}

func (x *ValidateSubtitlesRequest) SetSubtitleFileId(v string) {
	x.xxx_hidden_SubtitleFileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ValidateSubtitlesRequest) SetCheckTiming(v bool) {
	x.xxx_hidden_CheckTiming = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ValidateSubtitlesRequest) SetCheckFormatting(v bool) {
	x.xxx_hidden_CheckFormatting = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ValidateSubtitlesRequest) SetExpectedFormat(v string) {
	x.xxx_hidden_ExpectedFormat = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ValidateSubtitlesRequest) HasSubtitleFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ValidateSubtitlesRequest) HasCheckTiming() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ValidateSubtitlesRequest) HasCheckFormatting() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ValidateSubtitlesRequest) HasExpectedFormat() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ValidateSubtitlesRequest) ClearSubtitleFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SubtitleFileId = nil
}

func (x *ValidateSubtitlesRequest) ClearCheckTiming() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CheckTiming = false
}

func (x *ValidateSubtitlesRequest) ClearCheckFormatting() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CheckFormatting = false
}

func (x *ValidateSubtitlesRequest) ClearExpectedFormat() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ExpectedFormat = nil
}

type ValidateSubtitlesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SubtitleFileId  *string
	CheckTiming     *bool
	CheckFormatting *bool
	ExpectedFormat  *string
}

func (b0 ValidateSubtitlesRequest_builder) Build() *ValidateSubtitlesRequest {
	m0 := &ValidateSubtitlesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SubtitleFileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_SubtitleFileId = b.SubtitleFileId
	}
	if b.CheckTiming != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_CheckTiming = *b.CheckTiming
	}
	if b.CheckFormatting != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_CheckFormatting = *b.CheckFormatting
	}
	if b.ExpectedFormat != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ExpectedFormat = b.ExpectedFormat
	}
	return m0
}

var File_gcommon_v1_media_validate_subtitles_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_media_validate_subtitles_request_proto_rawDesc = "" +
	"\n" +
	"1gcommon/v1/media/validate_subtitles_request.proto\x12\x10gcommon.v1.media\x1a!google/protobuf/go_features.proto\"\xbb\x01\n" +
	"\x18ValidateSubtitlesRequest\x12(\n" +
	"\x10subtitle_file_id\x18\x01 \x01(\tR\x0esubtitleFileId\x12!\n" +
	"\fcheck_timing\x18\x02 \x01(\bR\vcheckTiming\x12)\n" +
	"\x10check_formatting\x18\x03 \x01(\bR\x0fcheckFormatting\x12'\n" +
	"\x0fexpected_format\x18\x04 \x01(\tR\x0eexpectedFormatB4Z*github.com/jdfalk/gcommon/sdks/go/v1/media\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_media_validate_subtitles_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_media_validate_subtitles_request_proto_goTypes = []any{
	(*ValidateSubtitlesRequest)(nil), // 0: gcommon.v1.media.ValidateSubtitlesRequest
}
var file_gcommon_v1_media_validate_subtitles_request_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_media_validate_subtitles_request_proto_init() }
func file_gcommon_v1_media_validate_subtitles_request_proto_init() {
	if File_gcommon_v1_media_validate_subtitles_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_media_validate_subtitles_request_proto_rawDesc), len(file_gcommon_v1_media_validate_subtitles_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_media_validate_subtitles_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_media_validate_subtitles_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_media_validate_subtitles_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_media_validate_subtitles_request_proto = out.File
	file_gcommon_v1_media_validate_subtitles_request_proto_goTypes = nil
	file_gcommon_v1_media_validate_subtitles_request_proto_depIdxs = nil
}
