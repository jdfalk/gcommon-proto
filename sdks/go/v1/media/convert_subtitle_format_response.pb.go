// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/media/messages/convert_subtitle_format_response.proto

package media

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Response from subtitle format conversion.
type ConvertSubtitleFormatResponse struct {
	state                              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ConvertedSubtitleFileId *string                `protobuf:"bytes,1,opt,name=converted_subtitle_file_id,json=convertedSubtitleFileId"`
	xxx_hidden_SourceFormat            *string                `protobuf:"bytes,2,opt,name=source_format,json=sourceFormat"`
	xxx_hidden_TargetFormat            *string                `protobuf:"bytes,3,opt,name=target_format,json=targetFormat"`
	xxx_hidden_Warnings                []string               `protobuf:"bytes,4,rep,name=warnings"`
	XXX_raceDetectHookData             protoimpl.RaceDetectHookData
	XXX_presence                       [1]uint32
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *ConvertSubtitleFormatResponse) Reset() {
	*x = ConvertSubtitleFormatResponse{}
	mi := &file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertSubtitleFormatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertSubtitleFormatResponse) ProtoMessage() {}

func (x *ConvertSubtitleFormatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConvertSubtitleFormatResponse) GetConvertedSubtitleFileId() string {
	if x != nil {
		if x.xxx_hidden_ConvertedSubtitleFileId != nil {
			return *x.xxx_hidden_ConvertedSubtitleFileId
		}
		return ""
	}
	return ""
}

func (x *ConvertSubtitleFormatResponse) GetSourceFormat() string {
	if x != nil {
		if x.xxx_hidden_SourceFormat != nil {
			return *x.xxx_hidden_SourceFormat
		}
		return ""
	}
	return ""
}

func (x *ConvertSubtitleFormatResponse) GetTargetFormat() string {
	if x != nil {
		if x.xxx_hidden_TargetFormat != nil {
			return *x.xxx_hidden_TargetFormat
		}
		return ""
	}
	return ""
}

func (x *ConvertSubtitleFormatResponse) GetWarnings() []string {
	if x != nil {
		return x.xxx_hidden_Warnings
	}
	return nil
}

func (x *ConvertSubtitleFormatResponse) SetConvertedSubtitleFileId(v string) {
	x.xxx_hidden_ConvertedSubtitleFileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ConvertSubtitleFormatResponse) SetSourceFormat(v string) {
	x.xxx_hidden_SourceFormat = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ConvertSubtitleFormatResponse) SetTargetFormat(v string) {
	x.xxx_hidden_TargetFormat = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ConvertSubtitleFormatResponse) SetWarnings(v []string) {
	x.xxx_hidden_Warnings = v
}

func (x *ConvertSubtitleFormatResponse) HasConvertedSubtitleFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConvertSubtitleFormatResponse) HasSourceFormat() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ConvertSubtitleFormatResponse) HasTargetFormat() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ConvertSubtitleFormatResponse) ClearConvertedSubtitleFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ConvertedSubtitleFileId = nil
}

func (x *ConvertSubtitleFormatResponse) ClearSourceFormat() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SourceFormat = nil
}

func (x *ConvertSubtitleFormatResponse) ClearTargetFormat() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TargetFormat = nil
}

type ConvertSubtitleFormatResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ConvertedSubtitleFileId *string
	SourceFormat            *string
	TargetFormat            *string
	Warnings                []string
}

func (b0 ConvertSubtitleFormatResponse_builder) Build() *ConvertSubtitleFormatResponse {
	m0 := &ConvertSubtitleFormatResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ConvertedSubtitleFileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ConvertedSubtitleFileId = b.ConvertedSubtitleFileId
	}
	if b.SourceFormat != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_SourceFormat = b.SourceFormat
	}
	if b.TargetFormat != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_TargetFormat = b.TargetFormat
	}
	x.xxx_hidden_Warnings = b.Warnings
	return m0
}

var File_gcommon_v1_media_messages_convert_subtitle_format_response_proto protoreflect.FileDescriptor

const file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_rawDesc = "" +
	"\n" +
	"@gcommon/v1/media/messages/convert_subtitle_format_response.proto\x12\x10gcommon.v1.media\x1a!google/protobuf/go_features.proto\"\xc2\x01\n" +
	"\x1dConvertSubtitleFormatResponse\x12;\n" +
	"\x1aconverted_subtitle_file_id\x18\x01 \x01(\tR\x17convertedSubtitleFileId\x12#\n" +
	"\rsource_format\x18\x02 \x01(\tR\fsourceFormat\x12#\n" +
	"\rtarget_format\x18\x03 \x01(\tR\ftargetFormat\x12\x1a\n" +
	"\bwarnings\x18\x04 \x03(\tR\bwarningsB\x12Z\bv1/media\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_goTypes = []any{
	(*ConvertSubtitleFormatResponse)(nil), // 0: gcommon.v1.media.ConvertSubtitleFormatResponse
}
var file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_init() }
func file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_init() {
	if File_gcommon_v1_media_messages_convert_subtitle_format_response_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_rawDesc), len(file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_msgTypes,
	}.Build()
	File_gcommon_v1_media_messages_convert_subtitle_format_response_proto = out.File
	file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_goTypes = nil
	file_gcommon_v1_media_messages_convert_subtitle_format_response_proto_depIdxs = nil
}
