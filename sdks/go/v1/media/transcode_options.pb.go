// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/media/transcode_options.proto

package media

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Transcoding options.
type TranscodeOptions struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Resolution        *string                `protobuf:"bytes,1,opt,name=resolution"`
	xxx_hidden_Bitrate           int32                  `protobuf:"varint,2,opt,name=bitrate"`
	xxx_hidden_Framerate         int32                  `protobuf:"varint,3,opt,name=framerate"`
	xxx_hidden_AudioCodec        *string                `protobuf:"bytes,4,opt,name=audio_codec,json=audioCodec"`
	xxx_hidden_AudioBitrate      int32                  `protobuf:"varint,5,opt,name=audio_bitrate,json=audioBitrate"`
	xxx_hidden_PreserveSubtitles bool                   `protobuf:"varint,6,opt,name=preserve_subtitles,json=preserveSubtitles"`
	xxx_hidden_PreserveChapters  bool                   `protobuf:"varint,7,opt,name=preserve_chapters,json=preserveChapters"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *TranscodeOptions) Reset() {
	*x = TranscodeOptions{}
	mi := &file_gcommon_v1_media_transcode_options_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscodeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscodeOptions) ProtoMessage() {}

func (x *TranscodeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_media_transcode_options_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TranscodeOptions) GetResolution() string {
	if x != nil {
		if x.xxx_hidden_Resolution != nil {
			return *x.xxx_hidden_Resolution
		}
		return ""
	}
	return ""
}

func (x *TranscodeOptions) GetBitrate() int32 {
	if x != nil {
		return x.xxx_hidden_Bitrate
	}
	return 0
}

func (x *TranscodeOptions) GetFramerate() int32 {
	if x != nil {
		return x.xxx_hidden_Framerate
	}
	return 0
}

func (x *TranscodeOptions) GetAudioCodec() string {
	if x != nil {
		if x.xxx_hidden_AudioCodec != nil {
			return *x.xxx_hidden_AudioCodec
		}
		return ""
	}
	return ""
}

func (x *TranscodeOptions) GetAudioBitrate() int32 {
	if x != nil {
		return x.xxx_hidden_AudioBitrate
	}
	return 0
}

func (x *TranscodeOptions) GetPreserveSubtitles() bool {
	if x != nil {
		return x.xxx_hidden_PreserveSubtitles
	}
	return false
}

func (x *TranscodeOptions) GetPreserveChapters() bool {
	if x != nil {
		return x.xxx_hidden_PreserveChapters
	}
	return false
}

func (x *TranscodeOptions) SetResolution(v string) {
	x.xxx_hidden_Resolution = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *TranscodeOptions) SetBitrate(v int32) {
	x.xxx_hidden_Bitrate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *TranscodeOptions) SetFramerate(v int32) {
	x.xxx_hidden_Framerate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *TranscodeOptions) SetAudioCodec(v string) {
	x.xxx_hidden_AudioCodec = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *TranscodeOptions) SetAudioBitrate(v int32) {
	x.xxx_hidden_AudioBitrate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *TranscodeOptions) SetPreserveSubtitles(v bool) {
	x.xxx_hidden_PreserveSubtitles = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *TranscodeOptions) SetPreserveChapters(v bool) {
	x.xxx_hidden_PreserveChapters = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *TranscodeOptions) HasResolution() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TranscodeOptions) HasBitrate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TranscodeOptions) HasFramerate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TranscodeOptions) HasAudioCodec() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *TranscodeOptions) HasAudioBitrate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *TranscodeOptions) HasPreserveSubtitles() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *TranscodeOptions) HasPreserveChapters() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *TranscodeOptions) ClearResolution() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Resolution = nil
}

func (x *TranscodeOptions) ClearBitrate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Bitrate = 0
}

func (x *TranscodeOptions) ClearFramerate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Framerate = 0
}

func (x *TranscodeOptions) ClearAudioCodec() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_AudioCodec = nil
}

func (x *TranscodeOptions) ClearAudioBitrate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_AudioBitrate = 0
}

func (x *TranscodeOptions) ClearPreserveSubtitles() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_PreserveSubtitles = false
}

func (x *TranscodeOptions) ClearPreserveChapters() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_PreserveChapters = false
}

type TranscodeOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Resolution        *string
	Bitrate           *int32
	Framerate         *int32
	AudioCodec        *string
	AudioBitrate      *int32
	PreserveSubtitles *bool
	PreserveChapters  *bool
}

func (b0 TranscodeOptions_builder) Build() *TranscodeOptions {
	m0 := &TranscodeOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Resolution != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Resolution = b.Resolution
	}
	if b.Bitrate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Bitrate = *b.Bitrate
	}
	if b.Framerate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Framerate = *b.Framerate
	}
	if b.AudioCodec != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_AudioCodec = b.AudioCodec
	}
	if b.AudioBitrate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_AudioBitrate = *b.AudioBitrate
	}
	if b.PreserveSubtitles != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_PreserveSubtitles = *b.PreserveSubtitles
	}
	if b.PreserveChapters != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_PreserveChapters = *b.PreserveChapters
	}
	return m0
}

var File_gcommon_v1_media_transcode_options_proto protoreflect.FileDescriptor

const file_gcommon_v1_media_transcode_options_proto_rawDesc = "" +
	"\n" +
	"(gcommon/v1/media/transcode_options.proto\x12\x10gcommon.v1.media\x1a!google/protobuf/go_features.proto\"\x8c\x02\n" +
	"\x10TranscodeOptions\x12\x1e\n" +
	"\n" +
	"resolution\x18\x01 \x01(\tR\n" +
	"resolution\x12\x18\n" +
	"\abitrate\x18\x02 \x01(\x05R\abitrate\x12\x1c\n" +
	"\tframerate\x18\x03 \x01(\x05R\tframerate\x12\x1f\n" +
	"\vaudio_codec\x18\x04 \x01(\tR\n" +
	"audioCodec\x12#\n" +
	"\raudio_bitrate\x18\x05 \x01(\x05R\faudioBitrate\x12-\n" +
	"\x12preserve_subtitles\x18\x06 \x01(\bR\x11preserveSubtitles\x12+\n" +
	"\x11preserve_chapters\x18\a \x01(\bR\x10preserveChaptersB4Z*github.com/jdfalk/gcommon/sdks/go/v1/media\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_media_transcode_options_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_media_transcode_options_proto_goTypes = []any{
	(*TranscodeOptions)(nil), // 0: gcommon.v1.media.TranscodeOptions
}
var file_gcommon_v1_media_transcode_options_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_media_transcode_options_proto_init() }
func file_gcommon_v1_media_transcode_options_proto_init() {
	if File_gcommon_v1_media_transcode_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_media_transcode_options_proto_rawDesc), len(file_gcommon_v1_media_transcode_options_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_media_transcode_options_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_media_transcode_options_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_media_transcode_options_proto_msgTypes,
	}.Build()
	File_gcommon_v1_media_transcode_options_proto = out.File
	file_gcommon_v1_media_transcode_options_proto_goTypes = nil
	file_gcommon_v1_media_transcode_options_proto_depIdxs = nil
}
