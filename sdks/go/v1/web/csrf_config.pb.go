// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/web/csrf_config.proto

package web

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CsrfConfig message definition.
type CsrfConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_HeaderName  *string                `protobuf:"bytes,1,opt,name=header_name,json=headerName"`
	xxx_hidden_CookieName  *string                `protobuf:"bytes,2,opt,name=cookie_name,json=cookieName"`
	xxx_hidden_TokenLength int32                  `protobuf:"varint,3,opt,name=token_length,json=tokenLength"`
	xxx_hidden_TokenTtl    *durationpb.Duration   `protobuf:"bytes,4,opt,name=token_ttl,json=tokenTtl"`
	xxx_hidden_Secure      bool                   `protobuf:"varint,5,opt,name=secure"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CsrfConfig) Reset() {
	*x = CsrfConfig{}
	mi := &file_gcommon_v1_web_csrf_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CsrfConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsrfConfig) ProtoMessage() {}

func (x *CsrfConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_web_csrf_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CsrfConfig) GetHeaderName() string {
	if x != nil {
		if x.xxx_hidden_HeaderName != nil {
			return *x.xxx_hidden_HeaderName
		}
		return ""
	}
	return ""
}

func (x *CsrfConfig) GetCookieName() string {
	if x != nil {
		if x.xxx_hidden_CookieName != nil {
			return *x.xxx_hidden_CookieName
		}
		return ""
	}
	return ""
}

func (x *CsrfConfig) GetTokenLength() int32 {
	if x != nil {
		return x.xxx_hidden_TokenLength
	}
	return 0
}

func (x *CsrfConfig) GetTokenTtl() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_TokenTtl
	}
	return nil
}

func (x *CsrfConfig) GetSecure() bool {
	if x != nil {
		return x.xxx_hidden_Secure
	}
	return false
}

func (x *CsrfConfig) SetHeaderName(v string) {
	x.xxx_hidden_HeaderName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *CsrfConfig) SetCookieName(v string) {
	x.xxx_hidden_CookieName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *CsrfConfig) SetTokenLength(v int32) {
	x.xxx_hidden_TokenLength = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *CsrfConfig) SetTokenTtl(v *durationpb.Duration) {
	x.xxx_hidden_TokenTtl = v
}

func (x *CsrfConfig) SetSecure(v bool) {
	x.xxx_hidden_Secure = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *CsrfConfig) HasHeaderName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CsrfConfig) HasCookieName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CsrfConfig) HasTokenLength() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CsrfConfig) HasTokenTtl() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TokenTtl != nil
}

func (x *CsrfConfig) HasSecure() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CsrfConfig) ClearHeaderName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_HeaderName = nil
}

func (x *CsrfConfig) ClearCookieName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CookieName = nil
}

func (x *CsrfConfig) ClearTokenLength() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TokenLength = 0
}

func (x *CsrfConfig) ClearTokenTtl() {
	x.xxx_hidden_TokenTtl = nil
}

func (x *CsrfConfig) ClearSecure() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Secure = false
}

type CsrfConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of the HTTP header containing the CSRF token
	HeaderName *string
	// Name of the cookie used to store the token
	CookieName *string
	// Length of generated tokens
	TokenLength *int32
	// Token expiration duration
	TokenTtl *durationpb.Duration
	// Require secure cookies
	Secure *bool
}

func (b0 CsrfConfig_builder) Build() *CsrfConfig {
	m0 := &CsrfConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.HeaderName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_HeaderName = b.HeaderName
	}
	if b.CookieName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_CookieName = b.CookieName
	}
	if b.TokenLength != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_TokenLength = *b.TokenLength
	}
	x.xxx_hidden_TokenTtl = b.TokenTtl
	if b.Secure != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Secure = *b.Secure
	}
	return m0
}

var File_gcommon_v1_web_csrf_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_web_csrf_config_proto_rawDesc = "" +
	"\n" +
	" gcommon/v1/web/csrf_config.proto\x12\x0egcommon.v1.web\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xd7\x01\n" +
	"\n" +
	"CsrfConfig\x12*\n" +
	"\vheader_name\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18dR\n" +
	"headerName\x12*\n" +
	"\vcookie_name\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18dR\n" +
	"cookieName\x12!\n" +
	"\ftoken_length\x18\x03 \x01(\x05R\vtokenLength\x126\n" +
	"\ttoken_ttl\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\btokenTtl\x12\x16\n" +
	"\x06secure\x18\x05 \x01(\bR\x06secureB2Z(github.com/jdfalk/gcommon/sdks/go/v1/web\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_web_csrf_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_web_csrf_config_proto_goTypes = []any{
	(*CsrfConfig)(nil),          // 0: gcommon.v1.web.CsrfConfig
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
}
var file_gcommon_v1_web_csrf_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.web.CsrfConfig.token_ttl:type_name -> google.protobuf.Duration
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_web_csrf_config_proto_init() }
func file_gcommon_v1_web_csrf_config_proto_init() {
	if File_gcommon_v1_web_csrf_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_web_csrf_config_proto_rawDesc), len(file_gcommon_v1_web_csrf_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_web_csrf_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_web_csrf_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_web_csrf_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_web_csrf_config_proto = out.File
	file_gcommon_v1_web_csrf_config_proto_goTypes = nil
	file_gcommon_v1_web_csrf_config_proto_depIdxs = nil
}
