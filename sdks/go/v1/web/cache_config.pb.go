// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/web/messages/cache_config.proto

package web

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
	common "v1/common"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CacheConfig defines caching behavior for web responses.
type WebCacheConfig struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Strategy  CacheStrategy          `protobuf:"varint,1,opt,name=strategy,enum=gcommon.v1.web.CacheStrategy"`
	xxx_hidden_Policy    *common.CachePolicy    `protobuf:"bytes,2,opt,name=policy"`
	xxx_hidden_Ttl       *durationpb.Duration   `protobuf:"bytes,3,opt,name=ttl"`
	xxx_hidden_Enabled   bool                   `protobuf:"varint,4,opt,name=enabled"`
	xxx_hidden_CacheName *string                `protobuf:"bytes,5,opt,name=cache_name,json=cacheName"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *WebCacheConfig) Reset() {
	*x = WebCacheConfig{}
	mi := &file_gcommon_v1_web_messages_cache_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebCacheConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebCacheConfig) ProtoMessage() {}

func (x *WebCacheConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_web_messages_cache_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *WebCacheConfig) GetStrategy() CacheStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Strategy
		}
	}
	return CacheStrategy_CACHE_STRATEGY_UNSPECIFIED
}

func (x *WebCacheConfig) GetPolicy() *common.CachePolicy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Policy) {
				protoimpl.X.UnmarshalField(x, 2)
			}
			var rv *common.CachePolicy
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Policy), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *WebCacheConfig) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Ttl
	}
	return nil
}

func (x *WebCacheConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *WebCacheConfig) GetCacheName() string {
	if x != nil {
		if x.xxx_hidden_CacheName != nil {
			return *x.xxx_hidden_CacheName
		}
		return ""
	}
	return ""
}

func (x *WebCacheConfig) SetStrategy(v CacheStrategy) {
	x.xxx_hidden_Strategy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *WebCacheConfig) SetPolicy(v *common.CachePolicy) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Policy, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
	}
}

func (x *WebCacheConfig) SetTtl(v *durationpb.Duration) {
	x.xxx_hidden_Ttl = v
}

func (x *WebCacheConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *WebCacheConfig) SetCacheName(v string) {
	x.xxx_hidden_CacheName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *WebCacheConfig) HasStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *WebCacheConfig) HasPolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *WebCacheConfig) HasTtl() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ttl != nil
}

func (x *WebCacheConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *WebCacheConfig) HasCacheName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *WebCacheConfig) ClearStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Strategy = CacheStrategy_CACHE_STRATEGY_UNSPECIFIED
}

func (x *WebCacheConfig) ClearPolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Policy, (*common.CachePolicy)(nil))
}

func (x *WebCacheConfig) ClearTtl() {
	x.xxx_hidden_Ttl = nil
}

func (x *WebCacheConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Enabled = false
}

func (x *WebCacheConfig) ClearCacheName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CacheName = nil
}

type WebCacheConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Selected cache strategy for responses
	Strategy *CacheStrategy
	// Detailed cache policy settings
	Policy *common.CachePolicy
	// Override time to live for web resources
	Ttl *durationpb.Duration
	// Whether caching is enabled for this server
	Enabled *bool
	// Optional namespace or cache name
	CacheName *string
}

func (b0 WebCacheConfig_builder) Build() *WebCacheConfig {
	m0 := &WebCacheConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Strategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Strategy = *b.Strategy
	}
	if b.Policy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Policy = b.Policy
	}
	x.xxx_hidden_Ttl = b.Ttl
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.CacheName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_CacheName = b.CacheName
	}
	return m0
}

var File_gcommon_v1_web_messages_cache_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_web_messages_cache_config_proto_rawDesc = "" +
	"\n" +
	"*gcommon/v1/web/messages/cache_config.proto\x12\x0egcommon.v1.web\x1a-gcommon/v1/common/messages/cache_policy.proto\x1a)gcommon/v1/web/enums/cache_strategy.proto\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\"\xed\x01\n" +
	"\x0eWebCacheConfig\x129\n" +
	"\bstrategy\x18\x01 \x01(\x0e2\x1d.gcommon.v1.web.CacheStrategyR\bstrategy\x12:\n" +
	"\x06policy\x18\x02 \x01(\v2\x1e.gcommon.v1.common.CachePolicyB\x02(\x01R\x06policy\x12+\n" +
	"\x03ttl\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x03ttl\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"cache_name\x18\x05 \x01(\tR\tcacheNameB\x10Z\x06v1/web\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_web_messages_cache_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_web_messages_cache_config_proto_goTypes = []any{
	(*WebCacheConfig)(nil),      // 0: gcommon.v1.web.WebCacheConfig
	(CacheStrategy)(0),          // 1: gcommon.v1.web.CacheStrategy
	(*common.CachePolicy)(nil),  // 2: gcommon.v1.common.CachePolicy
	(*durationpb.Duration)(nil), // 3: google.protobuf.Duration
}
var file_gcommon_v1_web_messages_cache_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.web.WebCacheConfig.strategy:type_name -> gcommon.v1.web.CacheStrategy
	2, // 1: gcommon.v1.web.WebCacheConfig.policy:type_name -> gcommon.v1.common.CachePolicy
	3, // 2: gcommon.v1.web.WebCacheConfig.ttl:type_name -> google.protobuf.Duration
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gcommon_v1_web_messages_cache_config_proto_init() }
func file_gcommon_v1_web_messages_cache_config_proto_init() {
	if File_gcommon_v1_web_messages_cache_config_proto != nil {
		return
	}
	file_gcommon_v1_web_enums_cache_strategy_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_web_messages_cache_config_proto_rawDesc), len(file_gcommon_v1_web_messages_cache_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_web_messages_cache_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_web_messages_cache_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_web_messages_cache_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_web_messages_cache_config_proto = out.File
	file_gcommon_v1_web_messages_cache_config_proto_goTypes = nil
	file_gcommon_v1_web_messages_cache_config_proto_depIdxs = nil
}
