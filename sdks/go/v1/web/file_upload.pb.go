// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/web/file_upload.proto

package web

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FileUpload message definition.
type FileUpload struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FileName    *string                `protobuf:"bytes,1,opt,name=file_name,json=fileName"`
	xxx_hidden_ContentType *MimeType              `protobuf:"bytes,2,opt,name=content_type,json=contentType"`
	xxx_hidden_Data        []byte                 `protobuf:"bytes,3,opt,name=data"`
	xxx_hidden_Destination *string                `protobuf:"bytes,4,opt,name=destination"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FileUpload) Reset() {
	*x = FileUpload{}
	mi := &file_gcommon_v1_web_file_upload_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUpload) ProtoMessage() {}

func (x *FileUpload) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_web_file_upload_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileUpload) GetFileName() string {
	if x != nil {
		if x.xxx_hidden_FileName != nil {
			return *x.xxx_hidden_FileName
		}
		return ""
	}
	return ""
}

func (x *FileUpload) GetContentType() *MimeType {
	if x != nil {
		return x.xxx_hidden_ContentType
	}
	return nil
}

func (x *FileUpload) GetData() []byte {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *FileUpload) GetDestination() string {
	if x != nil {
		if x.xxx_hidden_Destination != nil {
			return *x.xxx_hidden_Destination
		}
		return ""
	}
	return ""
}

func (x *FileUpload) SetFileName(v string) {
	x.xxx_hidden_FileName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *FileUpload) SetContentType(v *MimeType) {
	x.xxx_hidden_ContentType = v
}

func (x *FileUpload) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *FileUpload) SetDestination(v string) {
	x.xxx_hidden_Destination = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *FileUpload) HasFileName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FileUpload) HasContentType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ContentType != nil
}

func (x *FileUpload) HasData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FileUpload) HasDestination() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FileUpload) ClearFileName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FileName = nil
}

func (x *FileUpload) ClearContentType() {
	x.xxx_hidden_ContentType = nil
}

func (x *FileUpload) ClearData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Data = nil
}

func (x *FileUpload) ClearDestination() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Destination = nil
}

type FileUpload_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of the uploaded file
	FileName *string
	// Content type validation
	ContentType *MimeType
	// Raw file bytes
	Data []byte
	// Destination path on server
	Destination *string
}

func (b0 FileUpload_builder) Build() *FileUpload {
	m0 := &FileUpload{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FileName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_FileName = b.FileName
	}
	x.xxx_hidden_ContentType = b.ContentType
	if b.Data != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Data = b.Data
	}
	if b.Destination != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Destination = b.Destination
	}
	return m0
}

var File_gcommon_v1_web_file_upload_proto protoreflect.FileDescriptor

const file_gcommon_v1_web_file_upload_proto_rawDesc = "" +
	"\n" +
	" gcommon/v1/web/file_upload.proto\x12\x0egcommon.v1.web\x1a\x1egcommon/v1/web/mime_type.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xa7\x01\n" +
	"\n" +
	"FileUpload\x12&\n" +
	"\tfile_name\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18dR\bfileName\x12;\n" +
	"\fcontent_type\x18\x02 \x01(\v2\x18.gcommon.v1.web.MimeTypeR\vcontentType\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12 \n" +
	"\vdestination\x18\x04 \x01(\tR\vdestinationB2Z(github.com/jdfalk/gcommon/sdks/go/v1/web\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_web_file_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_web_file_upload_proto_goTypes = []any{
	(*FileUpload)(nil), // 0: gcommon.v1.web.FileUpload
	(*MimeType)(nil),   // 1: gcommon.v1.web.MimeType
}
var file_gcommon_v1_web_file_upload_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.web.FileUpload.content_type:type_name -> gcommon.v1.web.MimeType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_web_file_upload_proto_init() }
func file_gcommon_v1_web_file_upload_proto_init() {
	if File_gcommon_v1_web_file_upload_proto != nil {
		return
	}
	file_gcommon_v1_web_mime_type_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_web_file_upload_proto_rawDesc), len(file_gcommon_v1_web_file_upload_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_web_file_upload_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_web_file_upload_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_web_file_upload_proto_msgTypes,
	}.Build()
	File_gcommon_v1_web_file_upload_proto = out.File
	file_gcommon_v1_web_file_upload_proto_goTypes = nil
	file_gcommon_v1_web_file_upload_proto_depIdxs = nil
}
