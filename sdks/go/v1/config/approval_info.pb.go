// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/config/approval_info.proto

package config

import (
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApprovalInfo struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Required    bool                   `protobuf:"varint,1,opt,name=required"`
	xxx_hidden_Status      common.ApprovalStatus  `protobuf:"varint,2,opt,name=status,enum=gcommon.v1.common.ApprovalStatus"`
	xxx_hidden_ApprovedBy  *string                `protobuf:"bytes,3,opt,name=approved_by,json=approvedBy"`
	xxx_hidden_ApprovedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=approved_at,json=approvedAt"`
	xxx_hidden_Comments    *string                `protobuf:"bytes,5,opt,name=comments"`
	xxx_hidden_WorkflowId  *string                `protobuf:"bytes,6,opt,name=workflow_id,json=workflowId"`
	xxx_hidden_PolicyName  *string                `protobuf:"bytes,7,opt,name=policy_name,json=policyName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ApprovalInfo) Reset() {
	*x = ApprovalInfo{}
	mi := &file_gcommon_v1_config_approval_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApprovalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalInfo) ProtoMessage() {}

func (x *ApprovalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_config_approval_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ApprovalInfo) GetRequired() bool {
	if x != nil {
		return x.xxx_hidden_Required
	}
	return false
}

func (x *ApprovalInfo) GetStatus() common.ApprovalStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Status
		}
	}
	return common.ApprovalStatus(0)
}

func (x *ApprovalInfo) GetApprovedBy() string {
	if x != nil {
		if x.xxx_hidden_ApprovedBy != nil {
			return *x.xxx_hidden_ApprovedBy
		}
		return ""
	}
	return ""
}

func (x *ApprovalInfo) GetApprovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ApprovedAt
	}
	return nil
}

func (x *ApprovalInfo) GetComments() string {
	if x != nil {
		if x.xxx_hidden_Comments != nil {
			return *x.xxx_hidden_Comments
		}
		return ""
	}
	return ""
}

func (x *ApprovalInfo) GetWorkflowId() string {
	if x != nil {
		if x.xxx_hidden_WorkflowId != nil {
			return *x.xxx_hidden_WorkflowId
		}
		return ""
	}
	return ""
}

func (x *ApprovalInfo) GetPolicyName() string {
	if x != nil {
		if x.xxx_hidden_PolicyName != nil {
			return *x.xxx_hidden_PolicyName
		}
		return ""
	}
	return ""
}

func (x *ApprovalInfo) SetRequired(v bool) {
	x.xxx_hidden_Required = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *ApprovalInfo) SetStatus(v common.ApprovalStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *ApprovalInfo) SetApprovedBy(v string) {
	x.xxx_hidden_ApprovedBy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *ApprovalInfo) SetApprovedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_ApprovedAt = v
}

func (x *ApprovalInfo) SetComments(v string) {
	x.xxx_hidden_Comments = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *ApprovalInfo) SetWorkflowId(v string) {
	x.xxx_hidden_WorkflowId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *ApprovalInfo) SetPolicyName(v string) {
	x.xxx_hidden_PolicyName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *ApprovalInfo) HasRequired() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ApprovalInfo) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ApprovalInfo) HasApprovedBy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ApprovalInfo) HasApprovedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ApprovedAt != nil
}

func (x *ApprovalInfo) HasComments() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ApprovalInfo) HasWorkflowId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ApprovalInfo) HasPolicyName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ApprovalInfo) ClearRequired() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Required = false
}

func (x *ApprovalInfo) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = common.ApprovalStatus_APPROVAL_STATUS_UNSPECIFIED
}

func (x *ApprovalInfo) ClearApprovedBy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ApprovedBy = nil
}

func (x *ApprovalInfo) ClearApprovedAt() {
	x.xxx_hidden_ApprovedAt = nil
}

func (x *ApprovalInfo) ClearComments() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Comments = nil
}

func (x *ApprovalInfo) ClearWorkflowId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_WorkflowId = nil
}

func (x *ApprovalInfo) ClearPolicyName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_PolicyName = nil
}

type ApprovalInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether approval was required
	Required *bool
	// Approval status
	Status *common.ApprovalStatus
	// User who approved
	ApprovedBy *string
	// Approval timestamp
	ApprovedAt *timestamppb.Timestamp
	// Approval comments
	Comments *string
	// Approval workflow ID
	WorkflowId *string
	// Approval policy applied
	PolicyName *string
}

func (b0 ApprovalInfo_builder) Build() *ApprovalInfo {
	m0 := &ApprovalInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Required != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Required = *b.Required
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Status = *b.Status
	}
	if b.ApprovedBy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_ApprovedBy = b.ApprovedBy
	}
	x.xxx_hidden_ApprovedAt = b.ApprovedAt
	if b.Comments != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Comments = b.Comments
	}
	if b.WorkflowId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_WorkflowId = b.WorkflowId
	}
	if b.PolicyName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_PolicyName = b.PolicyName
	}
	return m0
}

var File_gcommon_v1_config_approval_info_proto protoreflect.FileDescriptor

const file_gcommon_v1_config_approval_info_proto_rawDesc = "" +
	"\n" +
	"%gcommon/v1/config/approval_info.proto\x12\x11gcommon.v1.config\x1a'gcommon/v1/common/approval_status.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa1\x02\n" +
	"\fApprovalInfo\x12\x1a\n" +
	"\brequired\x18\x01 \x01(\bR\brequired\x129\n" +
	"\x06status\x18\x02 \x01(\x0e2!.gcommon.v1.common.ApprovalStatusR\x06status\x12\x1f\n" +
	"\vapproved_by\x18\x03 \x01(\tR\n" +
	"approvedBy\x12;\n" +
	"\vapproved_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"approvedAt\x12\x1a\n" +
	"\bcomments\x18\x05 \x01(\tR\bcomments\x12\x1f\n" +
	"\vworkflow_id\x18\x06 \x01(\tR\n" +
	"workflowId\x12\x1f\n" +
	"\vpolicy_name\x18\a \x01(\tR\n" +
	"policyNameB5Z+github.com/jdfalk/gcommon/sdks/go/v1/config\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_config_approval_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_config_approval_info_proto_goTypes = []any{
	(*ApprovalInfo)(nil),          // 0: gcommon.v1.config.ApprovalInfo
	(common.ApprovalStatus)(0),    // 1: gcommon.v1.common.ApprovalStatus
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_gcommon_v1_config_approval_info_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.config.ApprovalInfo.status:type_name -> gcommon.v1.common.ApprovalStatus
	2, // 1: gcommon.v1.config.ApprovalInfo.approved_at:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_config_approval_info_proto_init() }
func file_gcommon_v1_config_approval_info_proto_init() {
	if File_gcommon_v1_config_approval_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_config_approval_info_proto_rawDesc), len(file_gcommon_v1_config_approval_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_config_approval_info_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_config_approval_info_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_config_approval_info_proto_msgTypes,
	}.Build()
	File_gcommon_v1_config_approval_info_proto = out.File
	file_gcommon_v1_config_approval_info_proto_goTypes = nil
	file_gcommon_v1_config_approval_info_proto_depIdxs = nil
}
