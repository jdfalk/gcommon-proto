// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/config/rotation_settings.proto

package config

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RotationSettings struct {
	state                             protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Enabled                bool                     `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_Frequency              common.RotationFrequency `protobuf:"varint,2,opt,name=frequency,enum=gcommon.v1.common.RotationFrequency"`
	xxx_hidden_Schedule               *string                  `protobuf:"bytes,3,opt,name=schedule"`
	xxx_hidden_GracePeriodDays        int32                    `protobuf:"varint,4,opt,name=grace_period_days,json=gracePeriodDays"`
	xxx_hidden_AutoRotate             bool                     `protobuf:"varint,5,opt,name=auto_rotate,json=autoRotate"`
	xxx_hidden_NotificationRecipients []string                 `protobuf:"bytes,6,rep,name=notification_recipients,json=notificationRecipients"`
	xxx_hidden_Workflow               *string                  `protobuf:"bytes,7,opt,name=workflow"`
	xxx_hidden_LastRotatedAt          *timestamppb.Timestamp   `protobuf:"bytes,8,opt,name=last_rotated_at,json=lastRotatedAt"`
	xxx_hidden_NextRotationAt         *timestamppb.Timestamp   `protobuf:"bytes,9,opt,name=next_rotation_at,json=nextRotationAt"`
	xxx_hidden_RotationHistory        *[]*RotationEvent        `protobuf:"bytes,10,rep,name=rotation_history,json=rotationHistory"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *RotationSettings) Reset() {
	*x = RotationSettings{}
	mi := &file_gcommon_v1_config_rotation_settings_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotationSettings) ProtoMessage() {}

func (x *RotationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_config_rotation_settings_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RotationSettings) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *RotationSettings) GetFrequency() common.RotationFrequency {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Frequency
		}
	}
	return common.RotationFrequency(0)
}

func (x *RotationSettings) GetSchedule() string {
	if x != nil {
		if x.xxx_hidden_Schedule != nil {
			return *x.xxx_hidden_Schedule
		}
		return ""
	}
	return ""
}

func (x *RotationSettings) GetGracePeriodDays() int32 {
	if x != nil {
		return x.xxx_hidden_GracePeriodDays
	}
	return 0
}

func (x *RotationSettings) GetAutoRotate() bool {
	if x != nil {
		return x.xxx_hidden_AutoRotate
	}
	return false
}

func (x *RotationSettings) GetNotificationRecipients() []string {
	if x != nil {
		return x.xxx_hidden_NotificationRecipients
	}
	return nil
}

func (x *RotationSettings) GetWorkflow() string {
	if x != nil {
		if x.xxx_hidden_Workflow != nil {
			return *x.xxx_hidden_Workflow
		}
		return ""
	}
	return ""
}

func (x *RotationSettings) GetLastRotatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastRotatedAt
	}
	return nil
}

func (x *RotationSettings) GetNextRotationAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_NextRotationAt
	}
	return nil
}

func (x *RotationSettings) GetRotationHistory() []*RotationEvent {
	if x != nil {
		if x.xxx_hidden_RotationHistory != nil {
			return *x.xxx_hidden_RotationHistory
		}
	}
	return nil
}

func (x *RotationSettings) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *RotationSettings) SetFrequency(v common.RotationFrequency) {
	x.xxx_hidden_Frequency = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *RotationSettings) SetSchedule(v string) {
	x.xxx_hidden_Schedule = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *RotationSettings) SetGracePeriodDays(v int32) {
	x.xxx_hidden_GracePeriodDays = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *RotationSettings) SetAutoRotate(v bool) {
	x.xxx_hidden_AutoRotate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *RotationSettings) SetNotificationRecipients(v []string) {
	x.xxx_hidden_NotificationRecipients = v
}

func (x *RotationSettings) SetWorkflow(v string) {
	x.xxx_hidden_Workflow = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *RotationSettings) SetLastRotatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastRotatedAt = v
}

func (x *RotationSettings) SetNextRotationAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_NextRotationAt = v
}

func (x *RotationSettings) SetRotationHistory(v []*RotationEvent) {
	x.xxx_hidden_RotationHistory = &v
}

func (x *RotationSettings) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RotationSettings) HasFrequency() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RotationSettings) HasSchedule() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RotationSettings) HasGracePeriodDays() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RotationSettings) HasAutoRotate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RotationSettings) HasWorkflow() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *RotationSettings) HasLastRotatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastRotatedAt != nil
}

func (x *RotationSettings) HasNextRotationAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_NextRotationAt != nil
}

func (x *RotationSettings) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *RotationSettings) ClearFrequency() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Frequency = common.RotationFrequency_ROTATION_FREQUENCY_UNSPECIFIED
}

func (x *RotationSettings) ClearSchedule() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Schedule = nil
}

func (x *RotationSettings) ClearGracePeriodDays() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_GracePeriodDays = 0
}

func (x *RotationSettings) ClearAutoRotate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_AutoRotate = false
}

func (x *RotationSettings) ClearWorkflow() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Workflow = nil
}

func (x *RotationSettings) ClearLastRotatedAt() {
	x.xxx_hidden_LastRotatedAt = nil
}

func (x *RotationSettings) ClearNextRotationAt() {
	x.xxx_hidden_NextRotationAt = nil
}

type RotationSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether rotation is enabled
	Enabled *bool
	// Rotation frequency
	Frequency *common.RotationFrequency
	// Rotation schedule (cron expression)
	Schedule *string
	// Grace period before old secret expires
	GracePeriodDays *int32
	// Whether to automatically rotate
	AutoRotate *bool
	// Rotation notification settings
	NotificationRecipients []string
	// Rotation workflow
	Workflow *string
	// Last rotation timestamp
	LastRotatedAt *timestamppb.Timestamp
	// Next rotation timestamp
	NextRotationAt *timestamppb.Timestamp
	// Rotation history
	RotationHistory []*RotationEvent
}

func (b0 RotationSettings_builder) Build() *RotationSettings {
	m0 := &RotationSettings{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.Frequency != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_Frequency = *b.Frequency
	}
	if b.Schedule != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_Schedule = b.Schedule
	}
	if b.GracePeriodDays != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_GracePeriodDays = *b.GracePeriodDays
	}
	if b.AutoRotate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_AutoRotate = *b.AutoRotate
	}
	x.xxx_hidden_NotificationRecipients = b.NotificationRecipients
	if b.Workflow != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_Workflow = b.Workflow
	}
	x.xxx_hidden_LastRotatedAt = b.LastRotatedAt
	x.xxx_hidden_NextRotationAt = b.NextRotationAt
	x.xxx_hidden_RotationHistory = &b.RotationHistory
	return m0
}

var File_gcommon_v1_config_rotation_settings_proto protoreflect.FileDescriptor

const file_gcommon_v1_config_rotation_settings_proto_rawDesc = "" +
	"\n" +
	")gcommon/v1/config/rotation_settings.proto\x12\x11gcommon.v1.config\x1a*gcommon/v1/common/rotation_frequency.proto\x1a&gcommon/v1/config/rotation_event.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bbuf/validate/validate.proto\"\xb4\x04\n" +
	"\x10RotationSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12B\n" +
	"\tfrequency\x18\x02 \x01(\x0e2$.gcommon.v1.common.RotationFrequencyR\tfrequency\x12#\n" +
	"\bschedule\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\bschedule\x123\n" +
	"\x11grace_period_days\x18\x04 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x0fgracePeriodDays\x12\x1f\n" +
	"\vauto_rotate\x18\x05 \x01(\bR\n" +
	"autoRotate\x12A\n" +
	"\x17notification_recipients\x18\x06 \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x01R\x16notificationRecipients\x12#\n" +
	"\bworkflow\x18\a \x01(\tB\a\xbaH\x04r\x02\x10\x01R\bworkflow\x12B\n" +
	"\x0flast_rotated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\rlastRotatedAt\x12D\n" +
	"\x10next_rotation_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x0enextRotationAt\x12U\n" +
	"\x10rotation_history\x18\n" +
	" \x03(\v2 .gcommon.v1.config.RotationEventB\b\xbaH\x05\x92\x01\x02\b\x01R\x0frotationHistoryB5Z+github.com/jdfalk/gcommon/sdks/go/v1/config\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_config_rotation_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_config_rotation_settings_proto_goTypes = []any{
	(*RotationSettings)(nil),      // 0: gcommon.v1.config.RotationSettings
	(common.RotationFrequency)(0), // 1: gcommon.v1.common.RotationFrequency
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*RotationEvent)(nil),         // 3: gcommon.v1.config.RotationEvent
}
var file_gcommon_v1_config_rotation_settings_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.config.RotationSettings.frequency:type_name -> gcommon.v1.common.RotationFrequency
	2, // 1: gcommon.v1.config.RotationSettings.last_rotated_at:type_name -> google.protobuf.Timestamp
	2, // 2: gcommon.v1.config.RotationSettings.next_rotation_at:type_name -> google.protobuf.Timestamp
	3, // 3: gcommon.v1.config.RotationSettings.rotation_history:type_name -> gcommon.v1.config.RotationEvent
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_gcommon_v1_config_rotation_settings_proto_init() }
func file_gcommon_v1_config_rotation_settings_proto_init() {
	if File_gcommon_v1_config_rotation_settings_proto != nil {
		return
	}
	file_gcommon_v1_config_rotation_event_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_config_rotation_settings_proto_rawDesc), len(file_gcommon_v1_config_rotation_settings_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_config_rotation_settings_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_config_rotation_settings_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_config_rotation_settings_proto_msgTypes,
	}.Build()
	File_gcommon_v1_config_rotation_settings_proto = out.File
	file_gcommon_v1_config_rotation_settings_proto_goTypes = nil
	file_gcommon_v1_config_rotation_settings_proto_depIdxs = nil
}
