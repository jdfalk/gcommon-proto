// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/health/messages/check_registry.proto

package health

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// CheckRegistry represents a registry of all health checks in the system.
// Maintains the authoritative list of configured health checks.
// Follows 1-1-1 pattern: one message per file.
type CheckRegistry struct {
	state                        protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Checks            map[string]*HealthCheck `protobuf:"bytes,1,rep,name=checks" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_TotalChecks       int32                   `protobuf:"varint,2,opt,name=total_checks,json=totalChecks"`
	xxx_hidden_EnabledChecks     int32                   `protobuf:"varint,3,opt,name=enabled_checks,json=enabledChecks"`
	xxx_hidden_LastUpdated       *timestamppb.Timestamp  `protobuf:"bytes,4,opt,name=last_updated,json=lastUpdated"`
	xxx_hidden_Version           int64                   `protobuf:"varint,5,opt,name=version"`
	xxx_hidden_MonitoredServices []string                `protobuf:"bytes,6,rep,name=monitored_services,json=monitoredServices"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *CheckRegistry) Reset() {
	*x = CheckRegistry{}
	mi := &file_gcommon_v1_health_messages_check_registry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRegistry) ProtoMessage() {}

func (x *CheckRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_health_messages_check_registry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CheckRegistry) GetChecks() map[string]*HealthCheck {
	if x != nil {
		return x.xxx_hidden_Checks
	}
	return nil
}

func (x *CheckRegistry) GetTotalChecks() int32 {
	if x != nil {
		return x.xxx_hidden_TotalChecks
	}
	return 0
}

func (x *CheckRegistry) GetEnabledChecks() int32 {
	if x != nil {
		return x.xxx_hidden_EnabledChecks
	}
	return 0
}

func (x *CheckRegistry) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastUpdated
	}
	return nil
}

func (x *CheckRegistry) GetVersion() int64 {
	if x != nil {
		return x.xxx_hidden_Version
	}
	return 0
}

func (x *CheckRegistry) GetMonitoredServices() []string {
	if x != nil {
		return x.xxx_hidden_MonitoredServices
	}
	return nil
}

func (x *CheckRegistry) SetChecks(v map[string]*HealthCheck) {
	x.xxx_hidden_Checks = v
}

func (x *CheckRegistry) SetTotalChecks(v int32) {
	x.xxx_hidden_TotalChecks = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *CheckRegistry) SetEnabledChecks(v int32) {
	x.xxx_hidden_EnabledChecks = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *CheckRegistry) SetLastUpdated(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastUpdated = v
}

func (x *CheckRegistry) SetVersion(v int64) {
	x.xxx_hidden_Version = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *CheckRegistry) SetMonitoredServices(v []string) {
	x.xxx_hidden_MonitoredServices = v
}

func (x *CheckRegistry) HasTotalChecks() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CheckRegistry) HasEnabledChecks() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CheckRegistry) HasLastUpdated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastUpdated != nil
}

func (x *CheckRegistry) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CheckRegistry) ClearTotalChecks() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalChecks = 0
}

func (x *CheckRegistry) ClearEnabledChecks() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EnabledChecks = 0
}

func (x *CheckRegistry) ClearLastUpdated() {
	x.xxx_hidden_LastUpdated = nil
}

func (x *CheckRegistry) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Version = 0
}

type CheckRegistry_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// All registered health checks indexed by check ID
	Checks map[string]*HealthCheck
	// Total number of registered checks
	TotalChecks *int32
	// Number of enabled checks
	EnabledChecks *int32
	// When this registry was last updated
	LastUpdated *timestamppb.Timestamp
	// Registry version for optimistic locking
	Version *int64
	// Services currently being monitored
	MonitoredServices []string
}

func (b0 CheckRegistry_builder) Build() *CheckRegistry {
	m0 := &CheckRegistry{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Checks = b.Checks
	if b.TotalChecks != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_TotalChecks = *b.TotalChecks
	}
	if b.EnabledChecks != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_EnabledChecks = *b.EnabledChecks
	}
	x.xxx_hidden_LastUpdated = b.LastUpdated
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Version = *b.Version
	}
	x.xxx_hidden_MonitoredServices = b.MonitoredServices
	return m0
}

var File_gcommon_v1_health_messages_check_registry_proto protoreflect.FileDescriptor

const file_gcommon_v1_health_messages_check_registry_proto_rawDesc = "" +
	"\n" +
	"/gcommon/v1/health/messages/check_registry.proto\x12\x11gcommon.v1.health\x1a-gcommon/v1/health/messages/health_check.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x82\x03\n" +
	"\rCheckRegistry\x12D\n" +
	"\x06checks\x18\x01 \x03(\v2,.gcommon.v1.health.CheckRegistry.ChecksEntryR\x06checks\x12!\n" +
	"\ftotal_checks\x18\x02 \x01(\x05R\vtotalChecks\x12%\n" +
	"\x0eenabled_checks\x18\x03 \x01(\x05R\renabledChecks\x12=\n" +
	"\flast_updated\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x12\x18\n" +
	"\aversion\x18\x05 \x01(\x03R\aversion\x12-\n" +
	"\x12monitored_services\x18\x06 \x03(\tR\x11monitoredServices\x1aY\n" +
	"\vChecksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.gcommon.v1.health.HealthCheckR\x05value:\x028\x01B5Z+github.com/jdfalk/gcommon/sdks/go/v1/health\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_health_messages_check_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_health_messages_check_registry_proto_goTypes = []any{
	(*CheckRegistry)(nil),         // 0: gcommon.v1.health.CheckRegistry
	nil,                           // 1: gcommon.v1.health.CheckRegistry.ChecksEntry
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*HealthCheck)(nil),           // 3: gcommon.v1.health.HealthCheck
}
var file_gcommon_v1_health_messages_check_registry_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.health.CheckRegistry.checks:type_name -> gcommon.v1.health.CheckRegistry.ChecksEntry
	2, // 1: gcommon.v1.health.CheckRegistry.last_updated:type_name -> google.protobuf.Timestamp
	3, // 2: gcommon.v1.health.CheckRegistry.ChecksEntry.value:type_name -> gcommon.v1.health.HealthCheck
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gcommon_v1_health_messages_check_registry_proto_init() }
func file_gcommon_v1_health_messages_check_registry_proto_init() {
	if File_gcommon_v1_health_messages_check_registry_proto != nil {
		return
	}
	file_gcommon_v1_health_messages_health_check_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_health_messages_check_registry_proto_rawDesc), len(file_gcommon_v1_health_messages_check_registry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_health_messages_check_registry_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_health_messages_check_registry_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_health_messages_check_registry_proto_msgTypes,
	}.Build()
	File_gcommon_v1_health_messages_check_registry_proto = out.File
	file_gcommon_v1_health_messages_check_registry_proto_goTypes = nil
	file_gcommon_v1_health_messages_check_registry_proto_depIdxs = nil
}
