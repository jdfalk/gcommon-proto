// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/health/messages/resource_usage.proto

package health

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// ResourceUsage represents resource consumption metrics for health monitoring.
// Tracks system resource utilization for capacity planning and health assessment.
// Follows 1-1-1 pattern: one message per file.
type ResourceUsage struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CollectedAt   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=collected_at,json=collectedAt"`
	xxx_hidden_ComponentName *string                `protobuf:"bytes,2,opt,name=component_name,json=componentName"`
	xxx_hidden_Cpu           *CpuUsage              `protobuf:"bytes,3,opt,name=cpu"`
	xxx_hidden_Memory        *MemoryUsage           `protobuf:"bytes,4,opt,name=memory"`
	xxx_hidden_Disk          *DiskUsage             `protobuf:"bytes,5,opt,name=disk"`
	xxx_hidden_Network       *NetworkUsage          `protobuf:"bytes,6,opt,name=network"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	mi := &file_gcommon_v1_health_messages_resource_usage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_health_messages_resource_usage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResourceUsage) GetCollectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CollectedAt
	}
	return nil
}

func (x *ResourceUsage) GetComponentName() string {
	if x != nil {
		if x.xxx_hidden_ComponentName != nil {
			return *x.xxx_hidden_ComponentName
		}
		return ""
	}
	return ""
}

func (x *ResourceUsage) GetCpu() *CpuUsage {
	if x != nil {
		return x.xxx_hidden_Cpu
	}
	return nil
}

func (x *ResourceUsage) GetMemory() *MemoryUsage {
	if x != nil {
		return x.xxx_hidden_Memory
	}
	return nil
}

func (x *ResourceUsage) GetDisk() *DiskUsage {
	if x != nil {
		return x.xxx_hidden_Disk
	}
	return nil
}

func (x *ResourceUsage) GetNetwork() *NetworkUsage {
	if x != nil {
		return x.xxx_hidden_Network
	}
	return nil
}

func (x *ResourceUsage) SetCollectedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CollectedAt = v
}

func (x *ResourceUsage) SetComponentName(v string) {
	x.xxx_hidden_ComponentName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *ResourceUsage) SetCpu(v *CpuUsage) {
	x.xxx_hidden_Cpu = v
}

func (x *ResourceUsage) SetMemory(v *MemoryUsage) {
	x.xxx_hidden_Memory = v
}

func (x *ResourceUsage) SetDisk(v *DiskUsage) {
	x.xxx_hidden_Disk = v
}

func (x *ResourceUsage) SetNetwork(v *NetworkUsage) {
	x.xxx_hidden_Network = v
}

func (x *ResourceUsage) HasCollectedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CollectedAt != nil
}

func (x *ResourceUsage) HasComponentName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ResourceUsage) HasCpu() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cpu != nil
}

func (x *ResourceUsage) HasMemory() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Memory != nil
}

func (x *ResourceUsage) HasDisk() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Disk != nil
}

func (x *ResourceUsage) HasNetwork() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Network != nil
}

func (x *ResourceUsage) ClearCollectedAt() {
	x.xxx_hidden_CollectedAt = nil
}

func (x *ResourceUsage) ClearComponentName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ComponentName = nil
}

func (x *ResourceUsage) ClearCpu() {
	x.xxx_hidden_Cpu = nil
}

func (x *ResourceUsage) ClearMemory() {
	x.xxx_hidden_Memory = nil
}

func (x *ResourceUsage) ClearDisk() {
	x.xxx_hidden_Disk = nil
}

func (x *ResourceUsage) ClearNetwork() {
	x.xxx_hidden_Network = nil
}

type ResourceUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// When these metrics were collected
	CollectedAt *timestamppb.Timestamp
	// Service or component name
	ComponentName *string
	// CPU usage metrics
	Cpu *CpuUsage
	// Memory usage metrics
	Memory *MemoryUsage
	// Disk usage metrics
	Disk *DiskUsage
	// Network usage metrics
	Network *NetworkUsage
}

func (b0 ResourceUsage_builder) Build() *ResourceUsage {
	m0 := &ResourceUsage{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CollectedAt = b.CollectedAt
	if b.ComponentName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_ComponentName = b.ComponentName
	}
	x.xxx_hidden_Cpu = b.Cpu
	x.xxx_hidden_Memory = b.Memory
	x.xxx_hidden_Disk = b.Disk
	x.xxx_hidden_Network = b.Network
	return m0
}

// *
// CpuUsage represents CPU utilization metrics.
type CpuUsage struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UsagePercent float64                `protobuf:"fixed64,1,opt,name=usage_percent,json=usagePercent"`
	xxx_hidden_Cores        int32                  `protobuf:"varint,2,opt,name=cores"`
	xxx_hidden_LoadAverage  float64                `protobuf:"fixed64,3,opt,name=load_average,json=loadAverage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CpuUsage) Reset() {
	*x = CpuUsage{}
	mi := &file_gcommon_v1_health_messages_resource_usage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpuUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuUsage) ProtoMessage() {}

func (x *CpuUsage) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_health_messages_resource_usage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CpuUsage) GetUsagePercent() float64 {
	if x != nil {
		return x.xxx_hidden_UsagePercent
	}
	return 0
}

func (x *CpuUsage) GetCores() int32 {
	if x != nil {
		return x.xxx_hidden_Cores
	}
	return 0
}

func (x *CpuUsage) GetLoadAverage() float64 {
	if x != nil {
		return x.xxx_hidden_LoadAverage
	}
	return 0
}

func (x *CpuUsage) SetUsagePercent(v float64) {
	x.xxx_hidden_UsagePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CpuUsage) SetCores(v int32) {
	x.xxx_hidden_Cores = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *CpuUsage) SetLoadAverage(v float64) {
	x.xxx_hidden_LoadAverage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *CpuUsage) HasUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CpuUsage) HasCores() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CpuUsage) HasLoadAverage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CpuUsage) ClearUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UsagePercent = 0
}

func (x *CpuUsage) ClearCores() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Cores = 0
}

func (x *CpuUsage) ClearLoadAverage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_LoadAverage = 0
}

type CpuUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// CPU usage percentage (0-100)
	UsagePercent *float64
	// Number of CPU cores
	Cores *int32
	// Load average
	LoadAverage *float64
}

func (b0 CpuUsage_builder) Build() *CpuUsage {
	m0 := &CpuUsage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_UsagePercent = *b.UsagePercent
	}
	if b.Cores != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Cores = *b.Cores
	}
	if b.LoadAverage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_LoadAverage = *b.LoadAverage
	}
	return m0
}

// *
// MemoryUsage represents memory utilization metrics.
type MemoryUsage struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UsedBytes    int64                  `protobuf:"varint,1,opt,name=used_bytes,json=usedBytes"`
	xxx_hidden_TotalBytes   int64                  `protobuf:"varint,2,opt,name=total_bytes,json=totalBytes"`
	xxx_hidden_UsagePercent float64                `protobuf:"fixed64,3,opt,name=usage_percent,json=usagePercent"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *MemoryUsage) Reset() {
	*x = MemoryUsage{}
	mi := &file_gcommon_v1_health_messages_resource_usage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUsage) ProtoMessage() {}

func (x *MemoryUsage) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_health_messages_resource_usage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MemoryUsage) GetUsedBytes() int64 {
	if x != nil {
		return x.xxx_hidden_UsedBytes
	}
	return 0
}

func (x *MemoryUsage) GetTotalBytes() int64 {
	if x != nil {
		return x.xxx_hidden_TotalBytes
	}
	return 0
}

func (x *MemoryUsage) GetUsagePercent() float64 {
	if x != nil {
		return x.xxx_hidden_UsagePercent
	}
	return 0
}

func (x *MemoryUsage) SetUsedBytes(v int64) {
	x.xxx_hidden_UsedBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *MemoryUsage) SetTotalBytes(v int64) {
	x.xxx_hidden_TotalBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *MemoryUsage) SetUsagePercent(v float64) {
	x.xxx_hidden_UsagePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *MemoryUsage) HasUsedBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MemoryUsage) HasTotalBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MemoryUsage) HasUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MemoryUsage) ClearUsedBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UsedBytes = 0
}

func (x *MemoryUsage) ClearTotalBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalBytes = 0
}

func (x *MemoryUsage) ClearUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UsagePercent = 0
}

type MemoryUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Used memory in bytes
	UsedBytes *int64
	// Total available memory in bytes
	TotalBytes *int64
	// Usage percentage (0-100)
	UsagePercent *float64
}

func (b0 MemoryUsage_builder) Build() *MemoryUsage {
	m0 := &MemoryUsage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UsedBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_UsedBytes = *b.UsedBytes
	}
	if b.TotalBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_TotalBytes = *b.TotalBytes
	}
	if b.UsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_UsagePercent = *b.UsagePercent
	}
	return m0
}

// *
// DiskUsage represents disk utilization metrics.
type DiskUsage struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UsedBytes    int64                  `protobuf:"varint,1,opt,name=used_bytes,json=usedBytes"`
	xxx_hidden_TotalBytes   int64                  `protobuf:"varint,2,opt,name=total_bytes,json=totalBytes"`
	xxx_hidden_UsagePercent float64                `protobuf:"fixed64,3,opt,name=usage_percent,json=usagePercent"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DiskUsage) Reset() {
	*x = DiskUsage{}
	mi := &file_gcommon_v1_health_messages_resource_usage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskUsage) ProtoMessage() {}

func (x *DiskUsage) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_health_messages_resource_usage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DiskUsage) GetUsedBytes() int64 {
	if x != nil {
		return x.xxx_hidden_UsedBytes
	}
	return 0
}

func (x *DiskUsage) GetTotalBytes() int64 {
	if x != nil {
		return x.xxx_hidden_TotalBytes
	}
	return 0
}

func (x *DiskUsage) GetUsagePercent() float64 {
	if x != nil {
		return x.xxx_hidden_UsagePercent
	}
	return 0
}

func (x *DiskUsage) SetUsedBytes(v int64) {
	x.xxx_hidden_UsedBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *DiskUsage) SetTotalBytes(v int64) {
	x.xxx_hidden_TotalBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *DiskUsage) SetUsagePercent(v float64) {
	x.xxx_hidden_UsagePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *DiskUsage) HasUsedBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DiskUsage) HasTotalBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DiskUsage) HasUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DiskUsage) ClearUsedBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UsedBytes = 0
}

func (x *DiskUsage) ClearTotalBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalBytes = 0
}

func (x *DiskUsage) ClearUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UsagePercent = 0
}

type DiskUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Used disk space in bytes
	UsedBytes *int64
	// Total disk space in bytes
	TotalBytes *int64
	// Usage percentage (0-100)
	UsagePercent *float64
}

func (b0 DiskUsage_builder) Build() *DiskUsage {
	m0 := &DiskUsage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UsedBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_UsedBytes = *b.UsedBytes
	}
	if b.TotalBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_TotalBytes = *b.TotalBytes
	}
	if b.UsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_UsagePercent = *b.UsagePercent
	}
	return m0
}

// *
// NetworkUsage represents network utilization metrics.
type NetworkUsage struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BytesReceived     int64                  `protobuf:"varint,1,opt,name=bytes_received,json=bytesReceived"`
	xxx_hidden_BytesSent         int64                  `protobuf:"varint,2,opt,name=bytes_sent,json=bytesSent"`
	xxx_hidden_ActiveConnections int32                  `protobuf:"varint,3,opt,name=active_connections,json=activeConnections"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *NetworkUsage) Reset() {
	*x = NetworkUsage{}
	mi := &file_gcommon_v1_health_messages_resource_usage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkUsage) ProtoMessage() {}

func (x *NetworkUsage) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_health_messages_resource_usage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkUsage) GetBytesReceived() int64 {
	if x != nil {
		return x.xxx_hidden_BytesReceived
	}
	return 0
}

func (x *NetworkUsage) GetBytesSent() int64 {
	if x != nil {
		return x.xxx_hidden_BytesSent
	}
	return 0
}

func (x *NetworkUsage) GetActiveConnections() int32 {
	if x != nil {
		return x.xxx_hidden_ActiveConnections
	}
	return 0
}

func (x *NetworkUsage) SetBytesReceived(v int64) {
	x.xxx_hidden_BytesReceived = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *NetworkUsage) SetBytesSent(v int64) {
	x.xxx_hidden_BytesSent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *NetworkUsage) SetActiveConnections(v int32) {
	x.xxx_hidden_ActiveConnections = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *NetworkUsage) HasBytesReceived() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkUsage) HasBytesSent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkUsage) HasActiveConnections() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NetworkUsage) ClearBytesReceived() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BytesReceived = 0
}

func (x *NetworkUsage) ClearBytesSent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_BytesSent = 0
}

func (x *NetworkUsage) ClearActiveConnections() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ActiveConnections = 0
}

type NetworkUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Bytes received
	BytesReceived *int64
	// Bytes sent
	BytesSent *int64
	// Active connections
	ActiveConnections *int32
}

func (b0 NetworkUsage_builder) Build() *NetworkUsage {
	m0 := &NetworkUsage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BytesReceived != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_BytesReceived = *b.BytesReceived
	}
	if b.BytesSent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_BytesSent = *b.BytesSent
	}
	if b.ActiveConnections != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_ActiveConnections = *b.ActiveConnections
	}
	return m0
}

var File_gcommon_v1_health_messages_resource_usage_proto protoreflect.FileDescriptor

const file_gcommon_v1_health_messages_resource_usage_proto_rawDesc = "" +
	"\n" +
	"/gcommon/v1/health/messages/resource_usage.proto\x12\x11gcommon.v1.health\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc9\x02\n" +
	"\rResourceUsage\x12=\n" +
	"\fcollected_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\vcollectedAt\x12%\n" +
	"\x0ecomponent_name\x18\x02 \x01(\tR\rcomponentName\x12-\n" +
	"\x03cpu\x18\x03 \x01(\v2\x1b.gcommon.v1.health.CpuUsageR\x03cpu\x126\n" +
	"\x06memory\x18\x04 \x01(\v2\x1e.gcommon.v1.health.MemoryUsageR\x06memory\x120\n" +
	"\x04disk\x18\x05 \x01(\v2\x1c.gcommon.v1.health.DiskUsageR\x04disk\x129\n" +
	"\anetwork\x18\x06 \x01(\v2\x1f.gcommon.v1.health.NetworkUsageR\anetwork\"h\n" +
	"\bCpuUsage\x12#\n" +
	"\rusage_percent\x18\x01 \x01(\x01R\fusagePercent\x12\x14\n" +
	"\x05cores\x18\x02 \x01(\x05R\x05cores\x12!\n" +
	"\fload_average\x18\x03 \x01(\x01R\vloadAverage\"r\n" +
	"\vMemoryUsage\x12\x1d\n" +
	"\n" +
	"used_bytes\x18\x01 \x01(\x03R\tusedBytes\x12\x1f\n" +
	"\vtotal_bytes\x18\x02 \x01(\x03R\n" +
	"totalBytes\x12#\n" +
	"\rusage_percent\x18\x03 \x01(\x01R\fusagePercent\"p\n" +
	"\tDiskUsage\x12\x1d\n" +
	"\n" +
	"used_bytes\x18\x01 \x01(\x03R\tusedBytes\x12\x1f\n" +
	"\vtotal_bytes\x18\x02 \x01(\x03R\n" +
	"totalBytes\x12#\n" +
	"\rusage_percent\x18\x03 \x01(\x01R\fusagePercent\"\x83\x01\n" +
	"\fNetworkUsage\x12%\n" +
	"\x0ebytes_received\x18\x01 \x01(\x03R\rbytesReceived\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x02 \x01(\x03R\tbytesSent\x12-\n" +
	"\x12active_connections\x18\x03 \x01(\x05R\x11activeConnectionsB5Z+github.com/jdfalk/gcommon/sdks/go/v1/health\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_health_messages_resource_usage_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_gcommon_v1_health_messages_resource_usage_proto_goTypes = []any{
	(*ResourceUsage)(nil),         // 0: gcommon.v1.health.ResourceUsage
	(*CpuUsage)(nil),              // 1: gcommon.v1.health.CpuUsage
	(*MemoryUsage)(nil),           // 2: gcommon.v1.health.MemoryUsage
	(*DiskUsage)(nil),             // 3: gcommon.v1.health.DiskUsage
	(*NetworkUsage)(nil),          // 4: gcommon.v1.health.NetworkUsage
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_gcommon_v1_health_messages_resource_usage_proto_depIdxs = []int32{
	5, // 0: gcommon.v1.health.ResourceUsage.collected_at:type_name -> google.protobuf.Timestamp
	1, // 1: gcommon.v1.health.ResourceUsage.cpu:type_name -> gcommon.v1.health.CpuUsage
	2, // 2: gcommon.v1.health.ResourceUsage.memory:type_name -> gcommon.v1.health.MemoryUsage
	3, // 3: gcommon.v1.health.ResourceUsage.disk:type_name -> gcommon.v1.health.DiskUsage
	4, // 4: gcommon.v1.health.ResourceUsage.network:type_name -> gcommon.v1.health.NetworkUsage
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gcommon_v1_health_messages_resource_usage_proto_init() }
func file_gcommon_v1_health_messages_resource_usage_proto_init() {
	if File_gcommon_v1_health_messages_resource_usage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_health_messages_resource_usage_proto_rawDesc), len(file_gcommon_v1_health_messages_resource_usage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_health_messages_resource_usage_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_health_messages_resource_usage_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_health_messages_resource_usage_proto_msgTypes,
	}.Build()
	File_gcommon_v1_health_messages_resource_usage_proto = out.File
	file_gcommon_v1_health_messages_resource_usage_proto_goTypes = nil
	file_gcommon_v1_health_messages_resource_usage_proto_depIdxs = nil
}
