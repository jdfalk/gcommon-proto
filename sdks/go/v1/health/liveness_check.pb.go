// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/health/messages/liveness_check.proto

package health

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// LivenessCheck represents a liveness check configuration.
// Defines criteria for determining if a service is alive and responsive.
// Follows 1-1-1 pattern: one message per file.
type LivenessCheck struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id               *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_ServiceName      *string                `protobuf:"bytes,2,opt,name=service_name,json=serviceName"`
	xxx_hidden_ProbeEndpoint    *string                `protobuf:"bytes,3,opt,name=probe_endpoint,json=probeEndpoint"`
	xxx_hidden_Interval         *durationpb.Duration   `protobuf:"bytes,4,opt,name=interval"`
	xxx_hidden_Timeout          *durationpb.Duration   `protobuf:"bytes,5,opt,name=timeout"`
	xxx_hidden_FailureThreshold int32                  `protobuf:"varint,6,opt,name=failure_threshold,json=failureThreshold"`
	xxx_hidden_InitialDelay     *durationpb.Duration   `protobuf:"bytes,7,opt,name=initial_delay,json=initialDelay"`
	xxx_hidden_CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt"`
	xxx_hidden_Active           bool                   `protobuf:"varint,9,opt,name=active"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *LivenessCheck) Reset() {
	*x = LivenessCheck{}
	mi := &file_gcommon_v1_health_messages_liveness_check_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LivenessCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessCheck) ProtoMessage() {}

func (x *LivenessCheck) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_health_messages_liveness_check_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LivenessCheck) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *LivenessCheck) GetServiceName() string {
	if x != nil {
		if x.xxx_hidden_ServiceName != nil {
			return *x.xxx_hidden_ServiceName
		}
		return ""
	}
	return ""
}

func (x *LivenessCheck) GetProbeEndpoint() string {
	if x != nil {
		if x.xxx_hidden_ProbeEndpoint != nil {
			return *x.xxx_hidden_ProbeEndpoint
		}
		return ""
	}
	return ""
}

func (x *LivenessCheck) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Interval
	}
	return nil
}

func (x *LivenessCheck) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Timeout
	}
	return nil
}

func (x *LivenessCheck) GetFailureThreshold() int32 {
	if x != nil {
		return x.xxx_hidden_FailureThreshold
	}
	return 0
}

func (x *LivenessCheck) GetInitialDelay() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_InitialDelay
	}
	return nil
}

func (x *LivenessCheck) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *LivenessCheck) GetActive() bool {
	if x != nil {
		return x.xxx_hidden_Active
	}
	return false
}

func (x *LivenessCheck) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *LivenessCheck) SetServiceName(v string) {
	x.xxx_hidden_ServiceName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *LivenessCheck) SetProbeEndpoint(v string) {
	x.xxx_hidden_ProbeEndpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *LivenessCheck) SetInterval(v *durationpb.Duration) {
	x.xxx_hidden_Interval = v
}

func (x *LivenessCheck) SetTimeout(v *durationpb.Duration) {
	x.xxx_hidden_Timeout = v
}

func (x *LivenessCheck) SetFailureThreshold(v int32) {
	x.xxx_hidden_FailureThreshold = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *LivenessCheck) SetInitialDelay(v *durationpb.Duration) {
	x.xxx_hidden_InitialDelay = v
}

func (x *LivenessCheck) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *LivenessCheck) SetActive(v bool) {
	x.xxx_hidden_Active = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *LivenessCheck) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LivenessCheck) HasServiceName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LivenessCheck) HasProbeEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *LivenessCheck) HasInterval() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Interval != nil
}

func (x *LivenessCheck) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timeout != nil
}

func (x *LivenessCheck) HasFailureThreshold() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *LivenessCheck) HasInitialDelay() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InitialDelay != nil
}

func (x *LivenessCheck) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *LivenessCheck) HasActive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *LivenessCheck) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *LivenessCheck) ClearServiceName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ServiceName = nil
}

func (x *LivenessCheck) ClearProbeEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ProbeEndpoint = nil
}

func (x *LivenessCheck) ClearInterval() {
	x.xxx_hidden_Interval = nil
}

func (x *LivenessCheck) ClearTimeout() {
	x.xxx_hidden_Timeout = nil
}

func (x *LivenessCheck) ClearFailureThreshold() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_FailureThreshold = 0
}

func (x *LivenessCheck) ClearInitialDelay() {
	x.xxx_hidden_InitialDelay = nil
}

func (x *LivenessCheck) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *LivenessCheck) ClearActive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Active = false
}

type LivenessCheck_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique identifier for this liveness check
	Id *string
	// Service name this check applies to
	ServiceName *string
	// Probe endpoint or method
	ProbeEndpoint *string
	// Check interval
	Interval *durationpb.Duration
	// Timeout for each check
	Timeout *durationpb.Duration
	// Number of failures before considering service dead
	FailureThreshold *int32
	// Initial delay before starting checks
	InitialDelay *durationpb.Duration
	// When this check was created
	CreatedAt *timestamppb.Timestamp
	// Whether this check is currently active
	Active *bool
}

func (b0 LivenessCheck_builder) Build() *LivenessCheck {
	m0 := &LivenessCheck{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Id = b.Id
	}
	if b.ServiceName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_ServiceName = b.ServiceName
	}
	if b.ProbeEndpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_ProbeEndpoint = b.ProbeEndpoint
	}
	x.xxx_hidden_Interval = b.Interval
	x.xxx_hidden_Timeout = b.Timeout
	if b.FailureThreshold != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_FailureThreshold = *b.FailureThreshold
	}
	x.xxx_hidden_InitialDelay = b.InitialDelay
	x.xxx_hidden_CreatedAt = b.CreatedAt
	if b.Active != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_Active = *b.Active
	}
	return m0
}

var File_gcommon_v1_health_messages_liveness_check_proto protoreflect.FileDescriptor

const file_gcommon_v1_health_messages_liveness_check_proto_rawDesc = "" +
	"\n" +
	"/gcommon/v1/health/messages/liveness_check.proto\x12\x11gcommon.v1.health\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x95\x03\n" +
	"\rLivenessCheck\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fservice_name\x18\x02 \x01(\tR\vserviceName\x12%\n" +
	"\x0eprobe_endpoint\x18\x03 \x01(\tR\rprobeEndpoint\x125\n" +
	"\binterval\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\binterval\x123\n" +
	"\atimeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12+\n" +
	"\x11failure_threshold\x18\x06 \x01(\x05R\x10failureThreshold\x12>\n" +
	"\rinitial_delay\x18\a \x01(\v2\x19.google.protobuf.DurationR\finitialDelay\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x16\n" +
	"\x06active\x18\t \x01(\bR\x06activeB5Z+github.com/jdfalk/gcommon/sdks/go/v1/health\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_health_messages_liveness_check_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_health_messages_liveness_check_proto_goTypes = []any{
	(*LivenessCheck)(nil),         // 0: gcommon.v1.health.LivenessCheck
	(*durationpb.Duration)(nil),   // 1: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_gcommon_v1_health_messages_liveness_check_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.health.LivenessCheck.interval:type_name -> google.protobuf.Duration
	1, // 1: gcommon.v1.health.LivenessCheck.timeout:type_name -> google.protobuf.Duration
	1, // 2: gcommon.v1.health.LivenessCheck.initial_delay:type_name -> google.protobuf.Duration
	2, // 3: gcommon.v1.health.LivenessCheck.created_at:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_gcommon_v1_health_messages_liveness_check_proto_init() }
func file_gcommon_v1_health_messages_liveness_check_proto_init() {
	if File_gcommon_v1_health_messages_liveness_check_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_health_messages_liveness_check_proto_rawDesc), len(file_gcommon_v1_health_messages_liveness_check_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_health_messages_liveness_check_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_health_messages_liveness_check_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_health_messages_liveness_check_proto_msgTypes,
	}.Build()
	File_gcommon_v1_health_messages_liveness_check_proto = out.File
	file_gcommon_v1_health_messages_liveness_check_proto_goTypes = nil
	file_gcommon_v1_health_messages_liveness_check_proto_depIdxs = nil
}
