// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/health/enums/check_type.proto

package health

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Types of health checks that can be performed.
// Each type represents a different aspect or method of health verification.
type CheckType int32

const (
	// Default unspecified check type
	CheckType_CHECK_TYPE_UNSPECIFIED CheckType = 0
	// Basic health check - simple alive/dead status
	CheckType_CHECK_TYPE_HEALTH CheckType = 1
	// Readiness check - service is ready to handle requests
	CheckType_CHECK_TYPE_READINESS CheckType = 2
	// Liveness check - service is alive and responsive
	CheckType_CHECK_TYPE_LIVENESS CheckType = 3
	// Dependency check - external dependencies are available
	CheckType_CHECK_TYPE_DEPENDENCY CheckType = 4
	// Resource check - system resources (CPU, memory, disk)
	CheckType_CHECK_TYPE_RESOURCE CheckType = 5
	// Network check - network connectivity and latency
	CheckType_CHECK_TYPE_NETWORK CheckType = 6
	// Database check - database connectivity and performance
	CheckType_CHECK_TYPE_DATABASE CheckType = 7
	// Custom application-specific check
	CheckType_CHECK_TYPE_CUSTOM CheckType = 8
)

// Enum value maps for CheckType.
var (
	CheckType_name = map[int32]string{
		0: "CHECK_TYPE_UNSPECIFIED",
		1: "CHECK_TYPE_HEALTH",
		2: "CHECK_TYPE_READINESS",
		3: "CHECK_TYPE_LIVENESS",
		4: "CHECK_TYPE_DEPENDENCY",
		5: "CHECK_TYPE_RESOURCE",
		6: "CHECK_TYPE_NETWORK",
		7: "CHECK_TYPE_DATABASE",
		8: "CHECK_TYPE_CUSTOM",
	}
	CheckType_value = map[string]int32{
		"CHECK_TYPE_UNSPECIFIED": 0,
		"CHECK_TYPE_HEALTH":      1,
		"CHECK_TYPE_READINESS":   2,
		"CHECK_TYPE_LIVENESS":    3,
		"CHECK_TYPE_DEPENDENCY":  4,
		"CHECK_TYPE_RESOURCE":    5,
		"CHECK_TYPE_NETWORK":     6,
		"CHECK_TYPE_DATABASE":    7,
		"CHECK_TYPE_CUSTOM":      8,
	}
)

func (x CheckType) Enum() *CheckType {
	p := new(CheckType)
	*p = x
	return p
}

func (x CheckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckType) Descriptor() protoreflect.EnumDescriptor {
	return file_gcommon_v1_health_enums_check_type_proto_enumTypes[0].Descriptor()
}

func (CheckType) Type() protoreflect.EnumType {
	return &file_gcommon_v1_health_enums_check_type_proto_enumTypes[0]
}

func (x CheckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_gcommon_v1_health_enums_check_type_proto protoreflect.FileDescriptor

const file_gcommon_v1_health_enums_check_type_proto_rawDesc = "" +
	"\n" +
	"(gcommon/v1/health/enums/check_type.proto\x12\x11gcommon.v1.health\x1a!google/protobuf/go_features.proto*\xed\x01\n" +
	"\tCheckType\x12\x1a\n" +
	"\x16CHECK_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11CHECK_TYPE_HEALTH\x10\x01\x12\x18\n" +
	"\x14CHECK_TYPE_READINESS\x10\x02\x12\x17\n" +
	"\x13CHECK_TYPE_LIVENESS\x10\x03\x12\x19\n" +
	"\x15CHECK_TYPE_DEPENDENCY\x10\x04\x12\x17\n" +
	"\x13CHECK_TYPE_RESOURCE\x10\x05\x12\x16\n" +
	"\x12CHECK_TYPE_NETWORK\x10\x06\x12\x17\n" +
	"\x13CHECK_TYPE_DATABASE\x10\a\x12\x15\n" +
	"\x11CHECK_TYPE_CUSTOM\x10\bB5Z+github.com/jdfalk/gcommon/sdks/go/v1/health\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_health_enums_check_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gcommon_v1_health_enums_check_type_proto_goTypes = []any{
	(CheckType)(0), // 0: gcommon.v1.health.CheckType
}
var file_gcommon_v1_health_enums_check_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_health_enums_check_type_proto_init() }
func file_gcommon_v1_health_enums_check_type_proto_init() {
	if File_gcommon_v1_health_enums_check_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_health_enums_check_type_proto_rawDesc), len(file_gcommon_v1_health_enums_check_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_health_enums_check_type_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_health_enums_check_type_proto_depIdxs,
		EnumInfos:         file_gcommon_v1_health_enums_check_type_proto_enumTypes,
	}.Build()
	File_gcommon_v1_health_enums_check_type_proto = out.File
	file_gcommon_v1_health_enums_check_type_proto_goTypes = nil
	file_gcommon_v1_health_enums_check_type_proto_depIdxs = nil
}
