// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/health/messages/service_info.proto

package health

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// ServiceInfo represents information about a monitored service.
// Contains metadata and current status for health monitoring.
// Follows 1-1-1 pattern: one message per file.
type ServiceInfo struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name              *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Version           *string                `protobuf:"bytes,2,opt,name=version"`
	xxx_hidden_Status            HealthStatus           `protobuf:"varint,3,opt,name=status,enum=gcommon.v1.health.HealthStatus"`
	xxx_hidden_Description       *string                `protobuf:"bytes,4,opt,name=description"`
	xxx_hidden_RegisteredAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=registered_at,json=registeredAt"`
	xxx_hidden_LastUpdated       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated"`
	xxx_hidden_Endpoints         []string               `protobuf:"bytes,7,rep,name=endpoints"`
	xxx_hidden_Tags              []string               `protobuf:"bytes,8,rep,name=tags"`
	xxx_hidden_Metadata          map[string]string      `protobuf:"bytes,9,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_CheckIds          []string               `protobuf:"bytes,10,rep,name=check_ids,json=checkIds"`
	xxx_hidden_MonitoringEnabled bool                   `protobuf:"varint,11,opt,name=monitoring_enabled,json=monitoringEnabled"`
	xxx_hidden_Owner             *string                `protobuf:"bytes,12,opt,name=owner"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *ServiceInfo) Reset() {
	*x = ServiceInfo{}
	mi := &file_gcommon_v1_health_messages_service_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfo) ProtoMessage() {}

func (x *ServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_health_messages_service_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServiceInfo) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ServiceInfo) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *ServiceInfo) GetStatus() HealthStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Status
		}
	}
	return HealthStatus_HEALTH_STATUS_UNSPECIFIED
}

func (x *ServiceInfo) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ServiceInfo) GetRegisteredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_RegisteredAt
	}
	return nil
}

func (x *ServiceInfo) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastUpdated
	}
	return nil
}

func (x *ServiceInfo) GetEndpoints() []string {
	if x != nil {
		return x.xxx_hidden_Endpoints
	}
	return nil
}

func (x *ServiceInfo) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *ServiceInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ServiceInfo) GetCheckIds() []string {
	if x != nil {
		return x.xxx_hidden_CheckIds
	}
	return nil
}

func (x *ServiceInfo) GetMonitoringEnabled() bool {
	if x != nil {
		return x.xxx_hidden_MonitoringEnabled
	}
	return false
}

func (x *ServiceInfo) GetOwner() string {
	if x != nil {
		if x.xxx_hidden_Owner != nil {
			return *x.xxx_hidden_Owner
		}
		return ""
	}
	return ""
}

func (x *ServiceInfo) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 12)
}

func (x *ServiceInfo) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 12)
}

func (x *ServiceInfo) SetStatus(v HealthStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 12)
}

func (x *ServiceInfo) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 12)
}

func (x *ServiceInfo) SetRegisteredAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_RegisteredAt = v
}

func (x *ServiceInfo) SetLastUpdated(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastUpdated = v
}

func (x *ServiceInfo) SetEndpoints(v []string) {
	x.xxx_hidden_Endpoints = v
}

func (x *ServiceInfo) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *ServiceInfo) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *ServiceInfo) SetCheckIds(v []string) {
	x.xxx_hidden_CheckIds = v
}

func (x *ServiceInfo) SetMonitoringEnabled(v bool) {
	x.xxx_hidden_MonitoringEnabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 12)
}

func (x *ServiceInfo) SetOwner(v string) {
	x.xxx_hidden_Owner = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 12)
}

func (x *ServiceInfo) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ServiceInfo) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ServiceInfo) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ServiceInfo) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ServiceInfo) HasRegisteredAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RegisteredAt != nil
}

func (x *ServiceInfo) HasLastUpdated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastUpdated != nil
}

func (x *ServiceInfo) HasMonitoringEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *ServiceInfo) HasOwner() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *ServiceInfo) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *ServiceInfo) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Version = nil
}

func (x *ServiceInfo) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Status = HealthStatus_HEALTH_STATUS_UNSPECIFIED
}

func (x *ServiceInfo) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Description = nil
}

func (x *ServiceInfo) ClearRegisteredAt() {
	x.xxx_hidden_RegisteredAt = nil
}

func (x *ServiceInfo) ClearLastUpdated() {
	x.xxx_hidden_LastUpdated = nil
}

func (x *ServiceInfo) ClearMonitoringEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_MonitoringEnabled = false
}

func (x *ServiceInfo) ClearOwner() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_Owner = nil
}

type ServiceInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Service name
	Name *string
	// Service version
	Version *string
	// Current overall health status
	Status *HealthStatus
	// Service description
	Description *string
	// When this service was registered for monitoring
	RegisteredAt *timestamppb.Timestamp
	// When the service was last updated
	LastUpdated *timestamppb.Timestamp
	// Service endpoints
	Endpoints []string
	// Service tags for categorization
	Tags []string
	// Service metadata
	Metadata map[string]string
	// Health check IDs associated with this service
	CheckIds []string
	// Whether this service is currently being monitored
	MonitoringEnabled *bool
	// Service owner or team
	Owner *string
}

func (b0 ServiceInfo_builder) Build() *ServiceInfo {
	m0 := &ServiceInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 12)
		x.xxx_hidden_Name = b.Name
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 12)
		x.xxx_hidden_Version = b.Version
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 12)
		x.xxx_hidden_Status = *b.Status
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 12)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_RegisteredAt = b.RegisteredAt
	x.xxx_hidden_LastUpdated = b.LastUpdated
	x.xxx_hidden_Endpoints = b.Endpoints
	x.xxx_hidden_Tags = b.Tags
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_CheckIds = b.CheckIds
	if b.MonitoringEnabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 12)
		x.xxx_hidden_MonitoringEnabled = *b.MonitoringEnabled
	}
	if b.Owner != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 12)
		x.xxx_hidden_Owner = b.Owner
	}
	return m0
}

var File_gcommon_v1_health_messages_service_info_proto protoreflect.FileDescriptor

const file_gcommon_v1_health_messages_service_info_proto_rawDesc = "" +
	"\n" +
	"-gcommon/v1/health/messages/service_info.proto\x12\x11gcommon.v1.health\x1a+gcommon/v1/health/enums/health_status.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb1\x04\n" +
	"\vServiceInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x127\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1f.gcommon.v1.health.HealthStatusR\x06status\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12?\n" +
	"\rregistered_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\fregisteredAt\x12=\n" +
	"\flast_updated\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x12\x1c\n" +
	"\tendpoints\x18\a \x03(\tR\tendpoints\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x12H\n" +
	"\bmetadata\x18\t \x03(\v2,.gcommon.v1.health.ServiceInfo.MetadataEntryR\bmetadata\x12\x1b\n" +
	"\tcheck_ids\x18\n" +
	" \x03(\tR\bcheckIds\x12-\n" +
	"\x12monitoring_enabled\x18\v \x01(\bR\x11monitoringEnabled\x12\x14\n" +
	"\x05owner\x18\f \x01(\tR\x05owner\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B5Z+github.com/jdfalk/gcommon/sdks/go/v1/health\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_health_messages_service_info_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_health_messages_service_info_proto_goTypes = []any{
	(*ServiceInfo)(nil),           // 0: gcommon.v1.health.ServiceInfo
	nil,                           // 1: gcommon.v1.health.ServiceInfo.MetadataEntry
	(HealthStatus)(0),             // 2: gcommon.v1.health.HealthStatus
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_gcommon_v1_health_messages_service_info_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.health.ServiceInfo.status:type_name -> gcommon.v1.health.HealthStatus
	3, // 1: gcommon.v1.health.ServiceInfo.registered_at:type_name -> google.protobuf.Timestamp
	3, // 2: gcommon.v1.health.ServiceInfo.last_updated:type_name -> google.protobuf.Timestamp
	1, // 3: gcommon.v1.health.ServiceInfo.metadata:type_name -> gcommon.v1.health.ServiceInfo.MetadataEntry
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_gcommon_v1_health_messages_service_info_proto_init() }
func file_gcommon_v1_health_messages_service_info_proto_init() {
	if File_gcommon_v1_health_messages_service_info_proto != nil {
		return
	}
	file_gcommon_v1_health_enums_health_status_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_health_messages_service_info_proto_rawDesc), len(file_gcommon_v1_health_messages_service_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_health_messages_service_info_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_health_messages_service_info_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_health_messages_service_info_proto_msgTypes,
	}.Build()
	File_gcommon_v1_health_messages_service_info_proto = out.File
	file_gcommon_v1_health_messages_service_info_proto_goTypes = nil
	file_gcommon_v1_health_messages_service_info_proto_depIdxs = nil
}
