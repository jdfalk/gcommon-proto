// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/health/requests/register_check_request.proto

package health

import (
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// RegisterCheckRequest registers a new health check with the system.
// Allows dynamic addition of health checks at runtime.
// Follows 1-1-1 pattern: one message per file.
type RegisterCheckRequest struct {
	state                      protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_HealthCheck     *HealthCheck            `protobuf:"bytes,1,opt,name=health_check,json=healthCheck"`
	xxx_hidden_Metadata        *common.RequestMetadata `protobuf:"bytes,2,opt,name=metadata"`
	xxx_hidden_ReplaceExisting bool                    `protobuf:"varint,3,opt,name=replace_existing,json=replaceExisting"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RegisterCheckRequest) Reset() {
	*x = RegisterCheckRequest{}
	mi := &file_gcommon_v1_health_requests_register_check_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterCheckRequest) ProtoMessage() {}

func (x *RegisterCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_health_requests_register_check_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterCheckRequest) GetHealthCheck() *HealthCheck {
	if x != nil {
		return x.xxx_hidden_HealthCheck
	}
	return nil
}

func (x *RegisterCheckRequest) GetMetadata() *common.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *RegisterCheckRequest) GetReplaceExisting() bool {
	if x != nil {
		return x.xxx_hidden_ReplaceExisting
	}
	return false
}

func (x *RegisterCheckRequest) SetHealthCheck(v *HealthCheck) {
	x.xxx_hidden_HealthCheck = v
}

func (x *RegisterCheckRequest) SetMetadata(v *common.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *RegisterCheckRequest) SetReplaceExisting(v bool) {
	x.xxx_hidden_ReplaceExisting = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *RegisterCheckRequest) HasHealthCheck() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_HealthCheck != nil
}

func (x *RegisterCheckRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *RegisterCheckRequest) HasReplaceExisting() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RegisterCheckRequest) ClearHealthCheck() {
	x.xxx_hidden_HealthCheck = nil
}

func (x *RegisterCheckRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *RegisterCheckRequest) ClearReplaceExisting() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ReplaceExisting = false
}

type RegisterCheckRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Health check configuration to register
	HealthCheck *HealthCheck
	// Request metadata for authentication and tracing
	Metadata *common.RequestMetadata
	// Whether to replace existing check with same ID
	ReplaceExisting *bool
}

func (b0 RegisterCheckRequest_builder) Build() *RegisterCheckRequest {
	m0 := &RegisterCheckRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_HealthCheck = b.HealthCheck
	x.xxx_hidden_Metadata = b.Metadata
	if b.ReplaceExisting != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_ReplaceExisting = *b.ReplaceExisting
	}
	return m0
}

var File_gcommon_v1_health_requests_register_check_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_health_requests_register_check_request_proto_rawDesc = "" +
	"\n" +
	"7gcommon/v1/health/requests/register_check_request.proto\x12\x11gcommon.v1.health\x1a-gcommon/v1/health/messages/health_check.proto\x1a(gcommon/v1/common/request_metadata.proto\x1a!google/protobuf/go_features.proto\"\xc4\x01\n" +
	"\x14RegisterCheckRequest\x12A\n" +
	"\fhealth_check\x18\x01 \x01(\v2\x1e.gcommon.v1.health.HealthCheckR\vhealthCheck\x12>\n" +
	"\bmetadata\x18\x02 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x12)\n" +
	"\x10replace_existing\x18\x03 \x01(\bR\x0freplaceExistingB5Z+github.com/jdfalk/gcommon/sdks/go/v1/health\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_health_requests_register_check_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_health_requests_register_check_request_proto_goTypes = []any{
	(*RegisterCheckRequest)(nil),   // 0: gcommon.v1.health.RegisterCheckRequest
	(*HealthCheck)(nil),            // 1: gcommon.v1.health.HealthCheck
	(*common.RequestMetadata)(nil), // 2: gcommon.v1.common.RequestMetadata
}
var file_gcommon_v1_health_requests_register_check_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.health.RegisterCheckRequest.health_check:type_name -> gcommon.v1.health.HealthCheck
	2, // 1: gcommon.v1.health.RegisterCheckRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_health_requests_register_check_request_proto_init() }
func file_gcommon_v1_health_requests_register_check_request_proto_init() {
	if File_gcommon_v1_health_requests_register_check_request_proto != nil {
		return
	}
	file_gcommon_v1_health_messages_health_check_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_health_requests_register_check_request_proto_rawDesc), len(file_gcommon_v1_health_requests_register_check_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_health_requests_register_check_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_health_requests_register_check_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_health_requests_register_check_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_health_requests_register_check_request_proto = out.File
	file_gcommon_v1_health_requests_register_check_request_proto_goTypes = nil
	file_gcommon_v1_health_requests_register_check_request_proto_depIdxs = nil
}
