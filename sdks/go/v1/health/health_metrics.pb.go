// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/health/messages/health_metrics.proto

package health

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// HealthMetrics represents aggregated health metrics and statistics.
// Provides insight into system health trends and performance.
// Follows 1-1-1 pattern: one message per file.
type HealthMetrics struct {
	state                            protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_CollectedAt           *timestamppb.Timestamp           `protobuf:"bytes,1,opt,name=collected_at,json=collectedAt"`
	xxx_hidden_TotalChecks           int32                            `protobuf:"varint,2,opt,name=total_checks,json=totalChecks"`
	xxx_hidden_HealthyChecks         int32                            `protobuf:"varint,3,opt,name=healthy_checks,json=healthyChecks"`
	xxx_hidden_UnhealthyChecks       int32                            `protobuf:"varint,4,opt,name=unhealthy_checks,json=unhealthyChecks"`
	xxx_hidden_UnknownChecks         int32                            `protobuf:"varint,5,opt,name=unknown_checks,json=unknownChecks"`
	xxx_hidden_AvgCheckDurationMs    float64                          `protobuf:"fixed64,6,opt,name=avg_check_duration_ms,json=avgCheckDurationMs"`
	xxx_hidden_SuccessRatePercent    float64                          `protobuf:"fixed64,7,opt,name=success_rate_percent,json=successRatePercent"`
	xxx_hidden_StatusChangesLastHour int32                            `protobuf:"varint,8,opt,name=status_changes_last_hour,json=statusChangesLastHour"`
	xxx_hidden_LastFailure           *timestamppb.Timestamp           `protobuf:"bytes,9,opt,name=last_failure,json=lastFailure"`
	xxx_hidden_UptimePercent         float64                          `protobuf:"fixed64,10,opt,name=uptime_percent,json=uptimePercent"`
	xxx_hidden_ServiceMetrics        map[string]*ServiceHealthMetrics `protobuf:"bytes,11,rep,name=service_metrics,json=serviceMetrics" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *HealthMetrics) Reset() {
	*x = HealthMetrics{}
	mi := &file_gcommon_v1_health_messages_health_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthMetrics) ProtoMessage() {}

func (x *HealthMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_health_messages_health_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HealthMetrics) GetCollectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CollectedAt
	}
	return nil
}

func (x *HealthMetrics) GetTotalChecks() int32 {
	if x != nil {
		return x.xxx_hidden_TotalChecks
	}
	return 0
}

func (x *HealthMetrics) GetHealthyChecks() int32 {
	if x != nil {
		return x.xxx_hidden_HealthyChecks
	}
	return 0
}

func (x *HealthMetrics) GetUnhealthyChecks() int32 {
	if x != nil {
		return x.xxx_hidden_UnhealthyChecks
	}
	return 0
}

func (x *HealthMetrics) GetUnknownChecks() int32 {
	if x != nil {
		return x.xxx_hidden_UnknownChecks
	}
	return 0
}

func (x *HealthMetrics) GetAvgCheckDurationMs() float64 {
	if x != nil {
		return x.xxx_hidden_AvgCheckDurationMs
	}
	return 0
}

func (x *HealthMetrics) GetSuccessRatePercent() float64 {
	if x != nil {
		return x.xxx_hidden_SuccessRatePercent
	}
	return 0
}

func (x *HealthMetrics) GetStatusChangesLastHour() int32 {
	if x != nil {
		return x.xxx_hidden_StatusChangesLastHour
	}
	return 0
}

func (x *HealthMetrics) GetLastFailure() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastFailure
	}
	return nil
}

func (x *HealthMetrics) GetUptimePercent() float64 {
	if x != nil {
		return x.xxx_hidden_UptimePercent
	}
	return 0
}

func (x *HealthMetrics) GetServiceMetrics() map[string]*ServiceHealthMetrics {
	if x != nil {
		return x.xxx_hidden_ServiceMetrics
	}
	return nil
}

func (x *HealthMetrics) SetCollectedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CollectedAt = v
}

func (x *HealthMetrics) SetTotalChecks(v int32) {
	x.xxx_hidden_TotalChecks = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *HealthMetrics) SetHealthyChecks(v int32) {
	x.xxx_hidden_HealthyChecks = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *HealthMetrics) SetUnhealthyChecks(v int32) {
	x.xxx_hidden_UnhealthyChecks = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *HealthMetrics) SetUnknownChecks(v int32) {
	x.xxx_hidden_UnknownChecks = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *HealthMetrics) SetAvgCheckDurationMs(v float64) {
	x.xxx_hidden_AvgCheckDurationMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 11)
}

func (x *HealthMetrics) SetSuccessRatePercent(v float64) {
	x.xxx_hidden_SuccessRatePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 11)
}

func (x *HealthMetrics) SetStatusChangesLastHour(v int32) {
	x.xxx_hidden_StatusChangesLastHour = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 11)
}

func (x *HealthMetrics) SetLastFailure(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastFailure = v
}

func (x *HealthMetrics) SetUptimePercent(v float64) {
	x.xxx_hidden_UptimePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 11)
}

func (x *HealthMetrics) SetServiceMetrics(v map[string]*ServiceHealthMetrics) {
	x.xxx_hidden_ServiceMetrics = v
}

func (x *HealthMetrics) HasCollectedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CollectedAt != nil
}

func (x *HealthMetrics) HasTotalChecks() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *HealthMetrics) HasHealthyChecks() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *HealthMetrics) HasUnhealthyChecks() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *HealthMetrics) HasUnknownChecks() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *HealthMetrics) HasAvgCheckDurationMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *HealthMetrics) HasSuccessRatePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *HealthMetrics) HasStatusChangesLastHour() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *HealthMetrics) HasLastFailure() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastFailure != nil
}

func (x *HealthMetrics) HasUptimePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *HealthMetrics) ClearCollectedAt() {
	x.xxx_hidden_CollectedAt = nil
}

func (x *HealthMetrics) ClearTotalChecks() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalChecks = 0
}

func (x *HealthMetrics) ClearHealthyChecks() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_HealthyChecks = 0
}

func (x *HealthMetrics) ClearUnhealthyChecks() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_UnhealthyChecks = 0
}

func (x *HealthMetrics) ClearUnknownChecks() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_UnknownChecks = 0
}

func (x *HealthMetrics) ClearAvgCheckDurationMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_AvgCheckDurationMs = 0
}

func (x *HealthMetrics) ClearSuccessRatePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_SuccessRatePercent = 0
}

func (x *HealthMetrics) ClearStatusChangesLastHour() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_StatusChangesLastHour = 0
}

func (x *HealthMetrics) ClearLastFailure() {
	x.xxx_hidden_LastFailure = nil
}

func (x *HealthMetrics) ClearUptimePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_UptimePercent = 0
}

type HealthMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// When these metrics were collected
	CollectedAt *timestamppb.Timestamp
	// Total number of registered health checks
	TotalChecks *int32
	// Number of currently healthy checks
	HealthyChecks *int32
	// Number of currently unhealthy checks
	UnhealthyChecks *int32
	// Number of checks in unknown state
	UnknownChecks *int32
	// Average check execution time in milliseconds
	AvgCheckDurationMs *float64
	// Check success rate percentage (0-100)
	SuccessRatePercent *float64
	// Number of status changes in the last hour
	StatusChangesLastHour *int32
	// Most recent check failure timestamp
	LastFailure *timestamppb.Timestamp
	// System uptime percentage (0-100)
	UptimePercent *float64
	// Service-specific metrics
	ServiceMetrics map[string]*ServiceHealthMetrics
}

func (b0 HealthMetrics_builder) Build() *HealthMetrics {
	m0 := &HealthMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CollectedAt = b.CollectedAt
	if b.TotalChecks != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_TotalChecks = *b.TotalChecks
	}
	if b.HealthyChecks != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_HealthyChecks = *b.HealthyChecks
	}
	if b.UnhealthyChecks != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_UnhealthyChecks = *b.UnhealthyChecks
	}
	if b.UnknownChecks != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_UnknownChecks = *b.UnknownChecks
	}
	if b.AvgCheckDurationMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 11)
		x.xxx_hidden_AvgCheckDurationMs = *b.AvgCheckDurationMs
	}
	if b.SuccessRatePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 11)
		x.xxx_hidden_SuccessRatePercent = *b.SuccessRatePercent
	}
	if b.StatusChangesLastHour != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 11)
		x.xxx_hidden_StatusChangesLastHour = *b.StatusChangesLastHour
	}
	x.xxx_hidden_LastFailure = b.LastFailure
	if b.UptimePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 11)
		x.xxx_hidden_UptimePercent = *b.UptimePercent
	}
	x.xxx_hidden_ServiceMetrics = b.ServiceMetrics
	return m0
}

// *
// ServiceHealthMetrics represents health metrics for a specific service.
type ServiceHealthMetrics struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServiceName       *string                `protobuf:"bytes,1,opt,name=service_name,json=serviceName"`
	xxx_hidden_CheckCount        int32                  `protobuf:"varint,2,opt,name=check_count,json=checkCount"`
	xxx_hidden_HealthScore       int32                  `protobuf:"varint,3,opt,name=health_score,json=healthScore"`
	xxx_hidden_UptimePercent     float64                `protobuf:"fixed64,4,opt,name=uptime_percent,json=uptimePercent"`
	xxx_hidden_AvgResponseTimeMs float64                `protobuf:"fixed64,5,opt,name=avg_response_time_ms,json=avgResponseTimeMs"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *ServiceHealthMetrics) Reset() {
	*x = ServiceHealthMetrics{}
	mi := &file_gcommon_v1_health_messages_health_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceHealthMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceHealthMetrics) ProtoMessage() {}

func (x *ServiceHealthMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_health_messages_health_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServiceHealthMetrics) GetServiceName() string {
	if x != nil {
		if x.xxx_hidden_ServiceName != nil {
			return *x.xxx_hidden_ServiceName
		}
		return ""
	}
	return ""
}

func (x *ServiceHealthMetrics) GetCheckCount() int32 {
	if x != nil {
		return x.xxx_hidden_CheckCount
	}
	return 0
}

func (x *ServiceHealthMetrics) GetHealthScore() int32 {
	if x != nil {
		return x.xxx_hidden_HealthScore
	}
	return 0
}

func (x *ServiceHealthMetrics) GetUptimePercent() float64 {
	if x != nil {
		return x.xxx_hidden_UptimePercent
	}
	return 0
}

func (x *ServiceHealthMetrics) GetAvgResponseTimeMs() float64 {
	if x != nil {
		return x.xxx_hidden_AvgResponseTimeMs
	}
	return 0
}

func (x *ServiceHealthMetrics) SetServiceName(v string) {
	x.xxx_hidden_ServiceName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ServiceHealthMetrics) SetCheckCount(v int32) {
	x.xxx_hidden_CheckCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ServiceHealthMetrics) SetHealthScore(v int32) {
	x.xxx_hidden_HealthScore = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ServiceHealthMetrics) SetUptimePercent(v float64) {
	x.xxx_hidden_UptimePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ServiceHealthMetrics) SetAvgResponseTimeMs(v float64) {
	x.xxx_hidden_AvgResponseTimeMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ServiceHealthMetrics) HasServiceName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ServiceHealthMetrics) HasCheckCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ServiceHealthMetrics) HasHealthScore() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ServiceHealthMetrics) HasUptimePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ServiceHealthMetrics) HasAvgResponseTimeMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ServiceHealthMetrics) ClearServiceName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ServiceName = nil
}

func (x *ServiceHealthMetrics) ClearCheckCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CheckCount = 0
}

func (x *ServiceHealthMetrics) ClearHealthScore() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_HealthScore = 0
}

func (x *ServiceHealthMetrics) ClearUptimePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_UptimePercent = 0
}

func (x *ServiceHealthMetrics) ClearAvgResponseTimeMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_AvgResponseTimeMs = 0
}

type ServiceHealthMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Service name
	ServiceName *string
	// Number of checks for this service
	CheckCount *int32
	// Service health score (0-100)
	HealthScore *int32
	// Service uptime percentage
	UptimePercent *float64
	// Average response time in milliseconds
	AvgResponseTimeMs *float64
}

func (b0 ServiceHealthMetrics_builder) Build() *ServiceHealthMetrics {
	m0 := &ServiceHealthMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ServiceName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ServiceName = b.ServiceName
	}
	if b.CheckCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_CheckCount = *b.CheckCount
	}
	if b.HealthScore != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_HealthScore = *b.HealthScore
	}
	if b.UptimePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_UptimePercent = *b.UptimePercent
	}
	if b.AvgResponseTimeMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_AvgResponseTimeMs = *b.AvgResponseTimeMs
	}
	return m0
}

var File_gcommon_v1_health_messages_health_metrics_proto protoreflect.FileDescriptor

const file_gcommon_v1_health_messages_health_metrics_proto_rawDesc = "" +
	"\n" +
	"/gcommon/v1/health/messages/health_metrics.proto\x12\x11gcommon.v1.health\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb9\x05\n" +
	"\rHealthMetrics\x12=\n" +
	"\fcollected_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\vcollectedAt\x12!\n" +
	"\ftotal_checks\x18\x02 \x01(\x05R\vtotalChecks\x12%\n" +
	"\x0ehealthy_checks\x18\x03 \x01(\x05R\rhealthyChecks\x12)\n" +
	"\x10unhealthy_checks\x18\x04 \x01(\x05R\x0funhealthyChecks\x12%\n" +
	"\x0eunknown_checks\x18\x05 \x01(\x05R\runknownChecks\x121\n" +
	"\x15avg_check_duration_ms\x18\x06 \x01(\x01R\x12avgCheckDurationMs\x120\n" +
	"\x14success_rate_percent\x18\a \x01(\x01R\x12successRatePercent\x127\n" +
	"\x18status_changes_last_hour\x18\b \x01(\x05R\x15statusChangesLastHour\x12=\n" +
	"\flast_failure\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\vlastFailure\x12%\n" +
	"\x0euptime_percent\x18\n" +
	" \x01(\x01R\ruptimePercent\x12]\n" +
	"\x0fservice_metrics\x18\v \x03(\v24.gcommon.v1.health.HealthMetrics.ServiceMetricsEntryR\x0eserviceMetrics\x1aj\n" +
	"\x13ServiceMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12=\n" +
	"\x05value\x18\x02 \x01(\v2'.gcommon.v1.health.ServiceHealthMetricsR\x05value:\x028\x01\"\xd5\x01\n" +
	"\x14ServiceHealthMetrics\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1f\n" +
	"\vcheck_count\x18\x02 \x01(\x05R\n" +
	"checkCount\x12!\n" +
	"\fhealth_score\x18\x03 \x01(\x05R\vhealthScore\x12%\n" +
	"\x0euptime_percent\x18\x04 \x01(\x01R\ruptimePercent\x12/\n" +
	"\x14avg_response_time_ms\x18\x05 \x01(\x01R\x11avgResponseTimeMsB5Z+github.com/jdfalk/gcommon/sdks/go/v1/health\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_health_messages_health_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_gcommon_v1_health_messages_health_metrics_proto_goTypes = []any{
	(*HealthMetrics)(nil),         // 0: gcommon.v1.health.HealthMetrics
	(*ServiceHealthMetrics)(nil),  // 1: gcommon.v1.health.ServiceHealthMetrics
	nil,                           // 2: gcommon.v1.health.HealthMetrics.ServiceMetricsEntry
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_gcommon_v1_health_messages_health_metrics_proto_depIdxs = []int32{
	3, // 0: gcommon.v1.health.HealthMetrics.collected_at:type_name -> google.protobuf.Timestamp
	3, // 1: gcommon.v1.health.HealthMetrics.last_failure:type_name -> google.protobuf.Timestamp
	2, // 2: gcommon.v1.health.HealthMetrics.service_metrics:type_name -> gcommon.v1.health.HealthMetrics.ServiceMetricsEntry
	1, // 3: gcommon.v1.health.HealthMetrics.ServiceMetricsEntry.value:type_name -> gcommon.v1.health.ServiceHealthMetrics
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_gcommon_v1_health_messages_health_metrics_proto_init() }
func file_gcommon_v1_health_messages_health_metrics_proto_init() {
	if File_gcommon_v1_health_messages_health_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_health_messages_health_metrics_proto_rawDesc), len(file_gcommon_v1_health_messages_health_metrics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_health_messages_health_metrics_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_health_messages_health_metrics_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_health_messages_health_metrics_proto_msgTypes,
	}.Build()
	File_gcommon_v1_health_messages_health_metrics_proto = out.File
	file_gcommon_v1_health_messages_health_metrics_proto_goTypes = nil
	file_gcommon_v1_health_messages_health_metrics_proto_depIdxs = nil
}
