// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/organization/dns_config.proto

package organization

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DNSConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Provider    *string                `protobuf:"bytes,1,opt,name=provider"`
	xxx_hidden_ZoneId      *string                `protobuf:"bytes,2,opt,name=zone_id,json=zoneId"`
	xxx_hidden_Records     *[]*DNSRecord          `protobuf:"bytes,3,rep,name=records"`
	xxx_hidden_Ttl         int32                  `protobuf:"varint,4,opt,name=ttl"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DNSConfig) Reset() {
	*x = DNSConfig{}
	mi := &file_gcommon_v1_organization_dns_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSConfig) ProtoMessage() {}

func (x *DNSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_organization_dns_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DNSConfig) GetProvider() string {
	if x != nil {
		if x.xxx_hidden_Provider != nil {
			return *x.xxx_hidden_Provider
		}
		return ""
	}
	return ""
}

func (x *DNSConfig) GetZoneId() string {
	if x != nil {
		if x.xxx_hidden_ZoneId != nil {
			return *x.xxx_hidden_ZoneId
		}
		return ""
	}
	return ""
}

func (x *DNSConfig) GetRecords() []*DNSRecord {
	if x != nil {
		if x.xxx_hidden_Records != nil {
			return *x.xxx_hidden_Records
		}
	}
	return nil
}

func (x *DNSConfig) GetTtl() int32 {
	if x != nil {
		return x.xxx_hidden_Ttl
	}
	return 0
}

func (x *DNSConfig) SetProvider(v string) {
	x.xxx_hidden_Provider = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DNSConfig) SetZoneId(v string) {
	x.xxx_hidden_ZoneId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DNSConfig) SetRecords(v []*DNSRecord) {
	x.xxx_hidden_Records = &v
}

func (x *DNSConfig) SetTtl(v int32) {
	x.xxx_hidden_Ttl = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DNSConfig) HasProvider() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DNSConfig) HasZoneId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DNSConfig) HasTtl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DNSConfig) ClearProvider() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Provider = nil
}

func (x *DNSConfig) ClearZoneId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ZoneId = nil
}

func (x *DNSConfig) ClearTtl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Ttl = 0
}

type DNSConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// DNS provider
	Provider *string
	// DNS zone ID
	ZoneId *string
	// DNS records
	Records []*DNSRecord
	// TTL for DNS records
	Ttl *int32
}

func (b0 DNSConfig_builder) Build() *DNSConfig {
	m0 := &DNSConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Provider != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Provider = b.Provider
	}
	if b.ZoneId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ZoneId = b.ZoneId
	}
	x.xxx_hidden_Records = &b.Records
	if b.Ttl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Ttl = *b.Ttl
	}
	return m0
}

var File_gcommon_v1_organization_dns_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_organization_dns_config_proto_rawDesc = "" +
	"\n" +
	"(gcommon/v1/organization/dns_config.proto\x12\x17gcommon.v1.organization\x1a(gcommon/v1/organization/dns_record.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xb5\x01\n" +
	"\tDNSConfig\x12#\n" +
	"\bprovider\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\bprovider\x12 \n" +
	"\azone_id\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x06zoneId\x12F\n" +
	"\arecords\x18\x03 \x03(\v2\".gcommon.v1.organization.DNSRecordB\b\xbaH\x05\x92\x01\x02\b\x01R\arecords\x12\x19\n" +
	"\x03ttl\x18\x04 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x03ttlB;Z1github.com/jdfalk/gcommon/sdks/go/v1/organization\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_organization_dns_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_organization_dns_config_proto_goTypes = []any{
	(*DNSConfig)(nil), // 0: gcommon.v1.organization.DNSConfig
	(*DNSRecord)(nil), // 1: gcommon.v1.organization.DNSRecord
}
var file_gcommon_v1_organization_dns_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.organization.DNSConfig.records:type_name -> gcommon.v1.organization.DNSRecord
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_organization_dns_config_proto_init() }
func file_gcommon_v1_organization_dns_config_proto_init() {
	if File_gcommon_v1_organization_dns_config_proto != nil {
		return
	}
	file_gcommon_v1_organization_dns_record_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_organization_dns_config_proto_rawDesc), len(file_gcommon_v1_organization_dns_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_organization_dns_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_organization_dns_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_organization_dns_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_organization_dns_config_proto = out.File
	file_gcommon_v1_organization_dns_config_proto_goTypes = nil
	file_gcommon_v1_organization_dns_config_proto_depIdxs = nil
}
