// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/metrics/group_by_spec.proto

package metrics

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupBySpec struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LabelKeys   []string               `protobuf:"bytes,1,rep,name=label_keys,json=labelKeys"`
	xxx_hidden_TimeGroup   *durationpb.Duration   `protobuf:"bytes,2,opt,name=time_group,json=timeGroup"`
	xxx_hidden_MaxGroups   int32                  `protobuf:"varint,3,opt,name=max_groups,json=maxGroups"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GroupBySpec) Reset() {
	*x = GroupBySpec{}
	mi := &file_gcommon_v1_metrics_group_by_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupBySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBySpec) ProtoMessage() {}

func (x *GroupBySpec) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_metrics_group_by_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GroupBySpec) GetLabelKeys() []string {
	if x != nil {
		return x.xxx_hidden_LabelKeys
	}
	return nil
}

func (x *GroupBySpec) GetTimeGroup() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_TimeGroup
	}
	return nil
}

func (x *GroupBySpec) GetMaxGroups() int32 {
	if x != nil {
		return x.xxx_hidden_MaxGroups
	}
	return 0
}

func (x *GroupBySpec) SetLabelKeys(v []string) {
	x.xxx_hidden_LabelKeys = v
}

func (x *GroupBySpec) SetTimeGroup(v *durationpb.Duration) {
	x.xxx_hidden_TimeGroup = v
}

func (x *GroupBySpec) SetMaxGroups(v int32) {
	x.xxx_hidden_MaxGroups = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *GroupBySpec) HasTimeGroup() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TimeGroup != nil
}

func (x *GroupBySpec) HasMaxGroups() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GroupBySpec) ClearTimeGroup() {
	x.xxx_hidden_TimeGroup = nil
}

func (x *GroupBySpec) ClearMaxGroups() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxGroups = 0
}

type GroupBySpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Label keys to group by
	LabelKeys []string
	// Time-based grouping (e.g., by hour, day)
	TimeGroup *durationpb.Duration
	// Maximum number of groups to return
	MaxGroups *int32
}

func (b0 GroupBySpec_builder) Build() *GroupBySpec {
	m0 := &GroupBySpec{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LabelKeys = b.LabelKeys
	x.xxx_hidden_TimeGroup = b.TimeGroup
	if b.MaxGroups != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MaxGroups = *b.MaxGroups
	}
	return m0
}

var File_gcommon_v1_metrics_group_by_spec_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_group_by_spec_proto_rawDesc = "" +
	"\n" +
	"&gcommon/v1/metrics/group_by_spec.proto\x12\x12gcommon.v1.metrics\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\x98\x01\n" +
	"\vGroupBySpec\x12'\n" +
	"\n" +
	"label_keys\x18\x01 \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x01R\tlabelKeys\x128\n" +
	"\n" +
	"time_group\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\ttimeGroup\x12&\n" +
	"\n" +
	"max_groups\x18\x03 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\tmaxGroupsB6Z,github.com/jdfalk/gcommon/sdks/go/v1/metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_group_by_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_metrics_group_by_spec_proto_goTypes = []any{
	(*GroupBySpec)(nil),         // 0: gcommon.v1.metrics.GroupBySpec
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
}
var file_gcommon_v1_metrics_group_by_spec_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.metrics.GroupBySpec.time_group:type_name -> google.protobuf.Duration
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_group_by_spec_proto_init() }
func file_gcommon_v1_metrics_group_by_spec_proto_init() {
	if File_gcommon_v1_metrics_group_by_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_group_by_spec_proto_rawDesc), len(file_gcommon_v1_metrics_group_by_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_group_by_spec_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_group_by_spec_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_metrics_group_by_spec_proto_msgTypes,
	}.Build()
	File_gcommon_v1_metrics_group_by_spec_proto = out.File
	file_gcommon_v1_metrics_group_by_spec_proto_goTypes = nil
	file_gcommon_v1_metrics_group_by_spec_proto_depIdxs = nil
}
