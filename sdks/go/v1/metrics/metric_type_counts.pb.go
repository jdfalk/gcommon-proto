// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/metrics/metric_type_counts.proto

package metrics

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetricTypeCounts struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CounterCount   int64                  `protobuf:"varint,1,opt,name=counter_count,json=counterCount"`
	xxx_hidden_GaugeCount     int64                  `protobuf:"varint,2,opt,name=gauge_count,json=gaugeCount"`
	xxx_hidden_HistogramCount int64                  `protobuf:"varint,3,opt,name=histogram_count,json=histogramCount"`
	xxx_hidden_SummaryCount   int64                  `protobuf:"varint,4,opt,name=summary_count,json=summaryCount"`
	xxx_hidden_TimerCount     int64                  `protobuf:"varint,5,opt,name=timer_count,json=timerCount"`
	xxx_hidden_CustomCount    int64                  `protobuf:"varint,6,opt,name=custom_count,json=customCount"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *MetricTypeCounts) Reset() {
	*x = MetricTypeCounts{}
	mi := &file_gcommon_v1_metrics_metric_type_counts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricTypeCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricTypeCounts) ProtoMessage() {}

func (x *MetricTypeCounts) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_metrics_metric_type_counts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MetricTypeCounts) GetCounterCount() int64 {
	if x != nil {
		return x.xxx_hidden_CounterCount
	}
	return 0
}

func (x *MetricTypeCounts) GetGaugeCount() int64 {
	if x != nil {
		return x.xxx_hidden_GaugeCount
	}
	return 0
}

func (x *MetricTypeCounts) GetHistogramCount() int64 {
	if x != nil {
		return x.xxx_hidden_HistogramCount
	}
	return 0
}

func (x *MetricTypeCounts) GetSummaryCount() int64 {
	if x != nil {
		return x.xxx_hidden_SummaryCount
	}
	return 0
}

func (x *MetricTypeCounts) GetTimerCount() int64 {
	if x != nil {
		return x.xxx_hidden_TimerCount
	}
	return 0
}

func (x *MetricTypeCounts) GetCustomCount() int64 {
	if x != nil {
		return x.xxx_hidden_CustomCount
	}
	return 0
}

func (x *MetricTypeCounts) SetCounterCount(v int64) {
	x.xxx_hidden_CounterCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *MetricTypeCounts) SetGaugeCount(v int64) {
	x.xxx_hidden_GaugeCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *MetricTypeCounts) SetHistogramCount(v int64) {
	x.xxx_hidden_HistogramCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *MetricTypeCounts) SetSummaryCount(v int64) {
	x.xxx_hidden_SummaryCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *MetricTypeCounts) SetTimerCount(v int64) {
	x.xxx_hidden_TimerCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *MetricTypeCounts) SetCustomCount(v int64) {
	x.xxx_hidden_CustomCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *MetricTypeCounts) HasCounterCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MetricTypeCounts) HasGaugeCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MetricTypeCounts) HasHistogramCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MetricTypeCounts) HasSummaryCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MetricTypeCounts) HasTimerCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *MetricTypeCounts) HasCustomCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *MetricTypeCounts) ClearCounterCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CounterCount = 0
}

func (x *MetricTypeCounts) ClearGaugeCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_GaugeCount = 0
}

func (x *MetricTypeCounts) ClearHistogramCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_HistogramCount = 0
}

func (x *MetricTypeCounts) ClearSummaryCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_SummaryCount = 0
}

func (x *MetricTypeCounts) ClearTimerCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_TimerCount = 0
}

func (x *MetricTypeCounts) ClearCustomCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_CustomCount = 0
}

type MetricTypeCounts_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CounterCount   *int64
	GaugeCount     *int64
	HistogramCount *int64
	SummaryCount   *int64
	TimerCount     *int64
	CustomCount    *int64
}

func (b0 MetricTypeCounts_builder) Build() *MetricTypeCounts {
	m0 := &MetricTypeCounts{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CounterCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_CounterCount = *b.CounterCount
	}
	if b.GaugeCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_GaugeCount = *b.GaugeCount
	}
	if b.HistogramCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_HistogramCount = *b.HistogramCount
	}
	if b.SummaryCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_SummaryCount = *b.SummaryCount
	}
	if b.TimerCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_TimerCount = *b.TimerCount
	}
	if b.CustomCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_CustomCount = *b.CustomCount
	}
	return m0
}

var File_gcommon_v1_metrics_metric_type_counts_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_metric_type_counts_proto_rawDesc = "" +
	"\n" +
	"+gcommon/v1/metrics/metric_type_counts.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xa0\x02\n" +
	"\x10MetricTypeCounts\x12,\n" +
	"\rcounter_count\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\fcounterCount\x12(\n" +
	"\vgauge_count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\n" +
	"gaugeCount\x120\n" +
	"\x0fhistogram_count\x18\x03 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\x0ehistogramCount\x12,\n" +
	"\rsummary_count\x18\x04 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\fsummaryCount\x12(\n" +
	"\vtimer_count\x18\x05 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\n" +
	"timerCount\x12*\n" +
	"\fcustom_count\x18\x06 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\vcustomCountB6Z,github.com/jdfalk/gcommon/sdks/go/v1/metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_metric_type_counts_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_metrics_metric_type_counts_proto_goTypes = []any{
	(*MetricTypeCounts)(nil), // 0: gcommon.v1.metrics.MetricTypeCounts
}
var file_gcommon_v1_metrics_metric_type_counts_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_metric_type_counts_proto_init() }
func file_gcommon_v1_metrics_metric_type_counts_proto_init() {
	if File_gcommon_v1_metrics_metric_type_counts_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_metric_type_counts_proto_rawDesc), len(file_gcommon_v1_metrics_metric_type_counts_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_metric_type_counts_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_metric_type_counts_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_metrics_metric_type_counts_proto_msgTypes,
	}.Build()
	File_gcommon_v1_metrics_metric_type_counts_proto = out.File
	file_gcommon_v1_metrics_metric_type_counts_proto_goTypes = nil
	file_gcommon_v1_metrics_metric_type_counts_proto_depIdxs = nil
}
