// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/metrics/messages/stream_start.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamStart struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FromTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from_timestamp,json=fromTimestamp"`
	xxx_hidden_FromBeginning bool                   `protobuf:"varint,2,opt,name=from_beginning,json=fromBeginning"`
	xxx_hidden_FromNow       bool                   `protobuf:"varint,3,opt,name=from_now,json=fromNow"`
	xxx_hidden_FromOffset    *string                `protobuf:"bytes,4,opt,name=from_offset,json=fromOffset"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *StreamStart) Reset() {
	*x = StreamStart{}
	mi := &file_gcommon_v1_metrics_messages_stream_start_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamStart) ProtoMessage() {}

func (x *StreamStart) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_metrics_messages_stream_start_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamStart) GetFromTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_FromTimestamp
	}
	return nil
}

func (x *StreamStart) GetFromBeginning() bool {
	if x != nil {
		return x.xxx_hidden_FromBeginning
	}
	return false
}

func (x *StreamStart) GetFromNow() bool {
	if x != nil {
		return x.xxx_hidden_FromNow
	}
	return false
}

func (x *StreamStart) GetFromOffset() string {
	if x != nil {
		if x.xxx_hidden_FromOffset != nil {
			return *x.xxx_hidden_FromOffset
		}
		return ""
	}
	return ""
}

func (x *StreamStart) SetFromTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_FromTimestamp = v
}

func (x *StreamStart) SetFromBeginning(v bool) {
	x.xxx_hidden_FromBeginning = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *StreamStart) SetFromNow(v bool) {
	x.xxx_hidden_FromNow = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *StreamStart) SetFromOffset(v string) {
	x.xxx_hidden_FromOffset = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *StreamStart) HasFromTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FromTimestamp != nil
}

func (x *StreamStart) HasFromBeginning() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StreamStart) HasFromNow() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StreamStart) HasFromOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *StreamStart) ClearFromTimestamp() {
	x.xxx_hidden_FromTimestamp = nil
}

func (x *StreamStart) ClearFromBeginning() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FromBeginning = false
}

func (x *StreamStart) ClearFromNow() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_FromNow = false
}

func (x *StreamStart) ClearFromOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_FromOffset = nil
}

type StreamStart_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Start from a specific timestamp
	FromTimestamp *timestamppb.Timestamp
	// Start from the beginning of available data
	FromBeginning *bool
	// Start from the current time (live streaming only)
	FromNow *bool
	// Start from a specific offset or position
	FromOffset *string
}

func (b0 StreamStart_builder) Build() *StreamStart {
	m0 := &StreamStart{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_FromTimestamp = b.FromTimestamp
	if b.FromBeginning != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FromBeginning = *b.FromBeginning
	}
	if b.FromNow != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_FromNow = *b.FromNow
	}
	if b.FromOffset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_FromOffset = b.FromOffset
	}
	return m0
}

var File_gcommon_v1_metrics_messages_stream_start_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_messages_stream_start_proto_rawDesc = "" +
	"\n" +
	".gcommon/v1/metrics/messages/stream_start.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb3\x01\n" +
	"\vStreamStart\x12A\n" +
	"\x0efrom_timestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\rfromTimestamp\x12%\n" +
	"\x0efrom_beginning\x18\x02 \x01(\bR\rfromBeginning\x12\x19\n" +
	"\bfrom_now\x18\x03 \x01(\bR\afromNow\x12\x1f\n" +
	"\vfrom_offset\x18\x04 \x01(\tR\n" +
	"fromOffsetB\x14Z\n" +
	"v1/metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_messages_stream_start_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_metrics_messages_stream_start_proto_goTypes = []any{
	(*StreamStart)(nil),           // 0: gcommon.v1.metrics.StreamStart
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_gcommon_v1_metrics_messages_stream_start_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.metrics.StreamStart.from_timestamp:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_messages_stream_start_proto_init() }
func file_gcommon_v1_metrics_messages_stream_start_proto_init() {
	if File_gcommon_v1_metrics_messages_stream_start_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_messages_stream_start_proto_rawDesc), len(file_gcommon_v1_metrics_messages_stream_start_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_messages_stream_start_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_messages_stream_start_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_metrics_messages_stream_start_proto_msgTypes,
	}.Build()
	File_gcommon_v1_metrics_messages_stream_start_proto = out.File
	file_gcommon_v1_metrics_messages_stream_start_proto_goTypes = nil
	file_gcommon_v1_metrics_messages_stream_start_proto_depIdxs = nil
}
