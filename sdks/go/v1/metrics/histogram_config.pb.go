// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/metrics/histogram_config.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HistogramConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Buckets     []float64              `protobuf:"fixed64,1,rep,packed,name=buckets"`
	xxx_hidden_AutoBuckets bool                   `protobuf:"varint,2,opt,name=auto_buckets,json=autoBuckets"`
	xxx_hidden_MaxBuckets  int32                  `protobuf:"varint,3,opt,name=max_buckets,json=maxBuckets"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *HistogramConfig) Reset() {
	*x = HistogramConfig{}
	mi := &file_gcommon_v1_metrics_histogram_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistogramConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramConfig) ProtoMessage() {}

func (x *HistogramConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_metrics_histogram_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HistogramConfig) GetBuckets() []float64 {
	if x != nil {
		return x.xxx_hidden_Buckets
	}
	return nil
}

func (x *HistogramConfig) GetAutoBuckets() bool {
	if x != nil {
		return x.xxx_hidden_AutoBuckets
	}
	return false
}

func (x *HistogramConfig) GetMaxBuckets() int32 {
	if x != nil {
		return x.xxx_hidden_MaxBuckets
	}
	return 0
}

func (x *HistogramConfig) SetBuckets(v []float64) {
	x.xxx_hidden_Buckets = v
}

func (x *HistogramConfig) SetAutoBuckets(v bool) {
	x.xxx_hidden_AutoBuckets = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *HistogramConfig) SetMaxBuckets(v int32) {
	x.xxx_hidden_MaxBuckets = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *HistogramConfig) HasAutoBuckets() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *HistogramConfig) HasMaxBuckets() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *HistogramConfig) ClearAutoBuckets() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AutoBuckets = false
}

func (x *HistogramConfig) ClearMaxBuckets() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxBuckets = 0
}

type HistogramConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Predefined buckets for the histogram
	Buckets []float64
	// Whether to automatically adjust buckets based on data
	AutoBuckets *bool
	// Maximum number of buckets to maintain
	MaxBuckets *int32
}

func (b0 HistogramConfig_builder) Build() *HistogramConfig {
	m0 := &HistogramConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Buckets = b.Buckets
	if b.AutoBuckets != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_AutoBuckets = *b.AutoBuckets
	}
	if b.MaxBuckets != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MaxBuckets = *b.MaxBuckets
	}
	return m0
}

var File_gcommon_v1_metrics_histogram_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_histogram_config_proto_rawDesc = "" +
	"\n" +
	")gcommon/v1/metrics/histogram_config.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\"o\n" +
	"\x0fHistogramConfig\x12\x18\n" +
	"\abuckets\x18\x01 \x03(\x01R\abuckets\x12!\n" +
	"\fauto_buckets\x18\x02 \x01(\bR\vautoBuckets\x12\x1f\n" +
	"\vmax_buckets\x18\x03 \x01(\x05R\n" +
	"maxBucketsB6Z,github.com/jdfalk/gcommon/sdks/go/v1/metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_histogram_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_metrics_histogram_config_proto_goTypes = []any{
	(*HistogramConfig)(nil), // 0: gcommon.v1.metrics.HistogramConfig
}
var file_gcommon_v1_metrics_histogram_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_histogram_config_proto_init() }
func file_gcommon_v1_metrics_histogram_config_proto_init() {
	if File_gcommon_v1_metrics_histogram_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_histogram_config_proto_rawDesc), len(file_gcommon_v1_metrics_histogram_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_histogram_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_histogram_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_metrics_histogram_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_metrics_histogram_config_proto = out.File
	file_gcommon_v1_metrics_histogram_config_proto_goTypes = nil
	file_gcommon_v1_metrics_histogram_config_proto_depIdxs = nil
}
