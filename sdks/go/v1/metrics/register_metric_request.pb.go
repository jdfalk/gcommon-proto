// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/metrics/register_metric_request.proto

package metrics

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterMetricRequest struct {
	state                      protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Metadata        *common.RequestMetadata `protobuf:"bytes,1,opt,name=metadata"`
	xxx_hidden_Definition      *MetricDefinition       `protobuf:"bytes,2,opt,name=definition"`
	xxx_hidden_ProviderId      *string                 `protobuf:"bytes,3,opt,name=provider_id,json=providerId"`
	xxx_hidden_ReplaceExisting bool                    `protobuf:"varint,4,opt,name=replace_existing,json=replaceExisting"`
	xxx_hidden_Options         *RegistrationOptions    `protobuf:"bytes,5,opt,name=options"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RegisterMetricRequest) Reset() {
	*x = RegisterMetricRequest{}
	mi := &file_gcommon_v1_metrics_register_metric_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMetricRequest) ProtoMessage() {}

func (x *RegisterMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_metrics_register_metric_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterMetricRequest) GetMetadata() *common.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *RegisterMetricRequest) GetDefinition() *MetricDefinition {
	if x != nil {
		return x.xxx_hidden_Definition
	}
	return nil
}

func (x *RegisterMetricRequest) GetProviderId() string {
	if x != nil {
		if x.xxx_hidden_ProviderId != nil {
			return *x.xxx_hidden_ProviderId
		}
		return ""
	}
	return ""
}

func (x *RegisterMetricRequest) GetReplaceExisting() bool {
	if x != nil {
		return x.xxx_hidden_ReplaceExisting
	}
	return false
}

func (x *RegisterMetricRequest) GetOptions() *RegistrationOptions {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *RegisterMetricRequest) SetMetadata(v *common.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *RegisterMetricRequest) SetDefinition(v *MetricDefinition) {
	x.xxx_hidden_Definition = v
}

func (x *RegisterMetricRequest) SetProviderId(v string) {
	x.xxx_hidden_ProviderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *RegisterMetricRequest) SetReplaceExisting(v bool) {
	x.xxx_hidden_ReplaceExisting = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *RegisterMetricRequest) SetOptions(v *RegistrationOptions) {
	x.xxx_hidden_Options = v
}

func (x *RegisterMetricRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *RegisterMetricRequest) HasDefinition() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Definition != nil
}

func (x *RegisterMetricRequest) HasProviderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RegisterMetricRequest) HasReplaceExisting() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RegisterMetricRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Options != nil
}

func (x *RegisterMetricRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *RegisterMetricRequest) ClearDefinition() {
	x.xxx_hidden_Definition = nil
}

func (x *RegisterMetricRequest) ClearProviderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ProviderId = nil
}

func (x *RegisterMetricRequest) ClearReplaceExisting() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ReplaceExisting = false
}

func (x *RegisterMetricRequest) ClearOptions() {
	x.xxx_hidden_Options = nil
}

type RegisterMetricRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Standard request metadata (tracing, auth, etc.)
	Metadata *common.RequestMetadata
	// Metric definition to register
	Definition *MetricDefinition
	// Optional provider ID to register with
	ProviderId *string
	// Whether to replace an existing metric with the same name
	ReplaceExisting *bool
	// Validation options for the registration
	Options *RegistrationOptions
}

func (b0 RegisterMetricRequest_builder) Build() *RegisterMetricRequest {
	m0 := &RegisterMetricRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Definition = b.Definition
	if b.ProviderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_ProviderId = b.ProviderId
	}
	if b.ReplaceExisting != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_ReplaceExisting = *b.ReplaceExisting
	}
	x.xxx_hidden_Options = b.Options
	return m0
}

var File_gcommon_v1_metrics_register_metric_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_register_metric_request_proto_rawDesc = "" +
	"\n" +
	"0gcommon/v1/metrics/register_metric_request.proto\x12\x12gcommon.v1.metrics\x1a(gcommon/v1/common/request_metadata.proto\x1a*gcommon/v1/metrics/metric_definition.proto\x1a-gcommon/v1/metrics/registration_options.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xb5\x02\n" +
	"\x15RegisterMetricRequest\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x12D\n" +
	"\n" +
	"definition\x18\x02 \x01(\v2$.gcommon.v1.metrics.MetricDefinitionR\n" +
	"definition\x12(\n" +
	"\vprovider_id\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\n" +
	"providerId\x12)\n" +
	"\x10replace_existing\x18\x04 \x01(\bR\x0freplaceExisting\x12A\n" +
	"\aoptions\x18\x05 \x01(\v2'.gcommon.v1.metrics.RegistrationOptionsR\aoptionsB6Z,github.com/jdfalk/gcommon/sdks/go/v1/metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_register_metric_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_metrics_register_metric_request_proto_goTypes = []any{
	(*RegisterMetricRequest)(nil),  // 0: gcommon.v1.metrics.RegisterMetricRequest
	(*common.RequestMetadata)(nil), // 1: gcommon.v1.common.RequestMetadata
	(*MetricDefinition)(nil),       // 2: gcommon.v1.metrics.MetricDefinition
	(*RegistrationOptions)(nil),    // 3: gcommon.v1.metrics.RegistrationOptions
}
var file_gcommon_v1_metrics_register_metric_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.metrics.RegisterMetricRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	2, // 1: gcommon.v1.metrics.RegisterMetricRequest.definition:type_name -> gcommon.v1.metrics.MetricDefinition
	3, // 2: gcommon.v1.metrics.RegisterMetricRequest.options:type_name -> gcommon.v1.metrics.RegistrationOptions
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_register_metric_request_proto_init() }
func file_gcommon_v1_metrics_register_metric_request_proto_init() {
	if File_gcommon_v1_metrics_register_metric_request_proto != nil {
		return
	}
	file_gcommon_v1_metrics_metric_definition_proto_init()
	file_gcommon_v1_metrics_registration_options_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_register_metric_request_proto_rawDesc), len(file_gcommon_v1_metrics_register_metric_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_register_metric_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_register_metric_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_metrics_register_metric_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_metrics_register_metric_request_proto = out.File
	file_gcommon_v1_metrics_register_metric_request_proto_goTypes = nil
	file_gcommon_v1_metrics_register_metric_request_proto_depIdxs = nil
}
