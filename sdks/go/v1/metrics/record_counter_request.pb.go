// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/metrics/record_counter_request.proto

package metrics

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// RecordCounterRequest is used to record or increment a counter metric.
type RecordCounterRequest struct {
	state                  protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                 `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Value       float64                 `protobuf:"fixed64,2,opt,name=value"`
	xxx_hidden_Labels      map[string]string       `protobuf:"bytes,3,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Help        *string                 `protobuf:"bytes,4,opt,name=help"`
	xxx_hidden_Unit        *string                 `protobuf:"bytes,5,opt,name=unit"`
	xxx_hidden_SampleRate  float64                 `protobuf:"fixed64,6,opt,name=sample_rate,json=sampleRate"`
	xxx_hidden_Metadata    *common.RequestMetadata `protobuf:"bytes,7,opt,name=metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RecordCounterRequest) Reset() {
	*x = RecordCounterRequest{}
	mi := &file_gcommon_v1_metrics_record_counter_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordCounterRequest) ProtoMessage() {}

func (x *RecordCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_metrics_record_counter_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RecordCounterRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *RecordCounterRequest) GetValue() float64 {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return 0
}

func (x *RecordCounterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *RecordCounterRequest) GetHelp() string {
	if x != nil {
		if x.xxx_hidden_Help != nil {
			return *x.xxx_hidden_Help
		}
		return ""
	}
	return ""
}

func (x *RecordCounterRequest) GetUnit() string {
	if x != nil {
		if x.xxx_hidden_Unit != nil {
			return *x.xxx_hidden_Unit
		}
		return ""
	}
	return ""
}

func (x *RecordCounterRequest) GetSampleRate() float64 {
	if x != nil {
		return x.xxx_hidden_SampleRate
	}
	return 0
}

func (x *RecordCounterRequest) GetMetadata() *common.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *RecordCounterRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *RecordCounterRequest) SetValue(v float64) {
	x.xxx_hidden_Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *RecordCounterRequest) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *RecordCounterRequest) SetHelp(v string) {
	x.xxx_hidden_Help = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *RecordCounterRequest) SetUnit(v string) {
	x.xxx_hidden_Unit = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *RecordCounterRequest) SetSampleRate(v float64) {
	x.xxx_hidden_SampleRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *RecordCounterRequest) SetMetadata(v *common.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *RecordCounterRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RecordCounterRequest) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RecordCounterRequest) HasHelp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RecordCounterRequest) HasUnit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RecordCounterRequest) HasSampleRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *RecordCounterRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *RecordCounterRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *RecordCounterRequest) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Value = 0
}

func (x *RecordCounterRequest) ClearHelp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Help = nil
}

func (x *RecordCounterRequest) ClearUnit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Unit = nil
}

func (x *RecordCounterRequest) ClearSampleRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_SampleRate = 0
}

func (x *RecordCounterRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type RecordCounterRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Metric name (e.g., "http_requests_total")
	Name *string
	// Value to add to the counter (default: 1.0)
	Value *float64
	// Labels for metric dimensions
	Labels map[string]string
	// Help text describing the metric
	Help *string
	// Metric unit (e.g., "requests", "bytes")
	Unit *string
	// Sample rate (0.0-1.0, used for sampling)
	SampleRate *float64
	// Request metadata for tracing and debugging
	Metadata *common.RequestMetadata
}

func (b0 RecordCounterRequest_builder) Build() *RecordCounterRequest {
	m0 := &RecordCounterRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Value = *b.Value
	}
	x.xxx_hidden_Labels = b.Labels
	if b.Help != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Help = b.Help
	}
	if b.Unit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Unit = b.Unit
	}
	if b.SampleRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_SampleRate = *b.SampleRate
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

var File_gcommon_v1_metrics_record_counter_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_record_counter_request_proto_rawDesc = "" +
	"\n" +
	"/gcommon/v1/metrics/record_counter_request.proto\x12\x12gcommon.v1.metrics\x1a(gcommon/v1/common/request_metadata.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xdd\x02\n" +
	"\x14RecordCounterRequest\x12\x1d\n" +
	"\x04name\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18dR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x12L\n" +
	"\x06labels\x18\x03 \x03(\v24.gcommon.v1.metrics.RecordCounterRequest.LabelsEntryR\x06labels\x12\x12\n" +
	"\x04help\x18\x04 \x01(\tR\x04help\x12\x12\n" +
	"\x04unit\x18\x05 \x01(\tR\x04unit\x12\x1f\n" +
	"\vsample_rate\x18\x06 \x01(\x01R\n" +
	"sampleRate\x12>\n" +
	"\bmetadata\x18\a \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B6Z,github.com/jdfalk/gcommon/sdks/go/v1/metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_record_counter_request_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_metrics_record_counter_request_proto_goTypes = []any{
	(*RecordCounterRequest)(nil),   // 0: gcommon.v1.metrics.RecordCounterRequest
	nil,                            // 1: gcommon.v1.metrics.RecordCounterRequest.LabelsEntry
	(*common.RequestMetadata)(nil), // 2: gcommon.v1.common.RequestMetadata
}
var file_gcommon_v1_metrics_record_counter_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.metrics.RecordCounterRequest.labels:type_name -> gcommon.v1.metrics.RecordCounterRequest.LabelsEntry
	2, // 1: gcommon.v1.metrics.RecordCounterRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_record_counter_request_proto_init() }
func file_gcommon_v1_metrics_record_counter_request_proto_init() {
	if File_gcommon_v1_metrics_record_counter_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_record_counter_request_proto_rawDesc), len(file_gcommon_v1_metrics_record_counter_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_record_counter_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_record_counter_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_metrics_record_counter_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_metrics_record_counter_request_proto = out.File
	file_gcommon_v1_metrics_record_counter_request_proto_goTypes = nil
	file_gcommon_v1_metrics_record_counter_request_proto_depIdxs = nil
}
