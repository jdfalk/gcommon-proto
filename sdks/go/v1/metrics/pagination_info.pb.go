// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/metrics/pagination_info.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// PaginationInfo contains information about paginated results.
type MetricsPaginationInfo struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Page           uint32                 `protobuf:"varint,1,opt,name=page"`
	xxx_hidden_PageSize       uint32                 `protobuf:"varint,2,opt,name=page_size,json=pageSize"`
	xxx_hidden_TotalItems     uint64                 `protobuf:"varint,3,opt,name=total_items,json=totalItems"`
	xxx_hidden_TotalPages     uint32                 `protobuf:"varint,4,opt,name=total_pages,json=totalPages"`
	xxx_hidden_HasNext        bool                   `protobuf:"varint,5,opt,name=has_next,json=hasNext"`
	xxx_hidden_HasPrevious    bool                   `protobuf:"varint,6,opt,name=has_previous,json=hasPrevious"`
	xxx_hidden_NextCursor     *string                `protobuf:"bytes,7,opt,name=next_cursor,json=nextCursor"`
	xxx_hidden_PreviousCursor *string                `protobuf:"bytes,8,opt,name=previous_cursor,json=previousCursor"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *MetricsPaginationInfo) Reset() {
	*x = MetricsPaginationInfo{}
	mi := &file_gcommon_v1_metrics_pagination_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsPaginationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsPaginationInfo) ProtoMessage() {}

func (x *MetricsPaginationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_metrics_pagination_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MetricsPaginationInfo) GetPage() uint32 {
	if x != nil {
		return x.xxx_hidden_Page
	}
	return 0
}

func (x *MetricsPaginationInfo) GetPageSize() uint32 {
	if x != nil {
		return x.xxx_hidden_PageSize
	}
	return 0
}

func (x *MetricsPaginationInfo) GetTotalItems() uint64 {
	if x != nil {
		return x.xxx_hidden_TotalItems
	}
	return 0
}

func (x *MetricsPaginationInfo) GetTotalPages() uint32 {
	if x != nil {
		return x.xxx_hidden_TotalPages
	}
	return 0
}

func (x *MetricsPaginationInfo) GetHasNext() bool {
	if x != nil {
		return x.xxx_hidden_HasNext
	}
	return false
}

func (x *MetricsPaginationInfo) GetHasPrevious() bool {
	if x != nil {
		return x.xxx_hidden_HasPrevious
	}
	return false
}

func (x *MetricsPaginationInfo) GetNextCursor() string {
	if x != nil {
		if x.xxx_hidden_NextCursor != nil {
			return *x.xxx_hidden_NextCursor
		}
		return ""
	}
	return ""
}

func (x *MetricsPaginationInfo) GetPreviousCursor() string {
	if x != nil {
		if x.xxx_hidden_PreviousCursor != nil {
			return *x.xxx_hidden_PreviousCursor
		}
		return ""
	}
	return ""
}

func (x *MetricsPaginationInfo) SetPage(v uint32) {
	x.xxx_hidden_Page = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *MetricsPaginationInfo) SetPageSize(v uint32) {
	x.xxx_hidden_PageSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *MetricsPaginationInfo) SetTotalItems(v uint64) {
	x.xxx_hidden_TotalItems = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *MetricsPaginationInfo) SetTotalPages(v uint32) {
	x.xxx_hidden_TotalPages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *MetricsPaginationInfo) SetHasNext(v bool) {
	x.xxx_hidden_HasNext = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *MetricsPaginationInfo) SetHasPrevious(v bool) {
	x.xxx_hidden_HasPrevious = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *MetricsPaginationInfo) SetNextCursor(v string) {
	x.xxx_hidden_NextCursor = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *MetricsPaginationInfo) SetPreviousCursor(v string) {
	x.xxx_hidden_PreviousCursor = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *MetricsPaginationInfo) HasPage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MetricsPaginationInfo) HasPageSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MetricsPaginationInfo) HasTotalItems() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MetricsPaginationInfo) HasTotalPages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MetricsPaginationInfo) HasHasNext() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *MetricsPaginationInfo) HasHasPrevious() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *MetricsPaginationInfo) HasNextCursor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *MetricsPaginationInfo) HasPreviousCursor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *MetricsPaginationInfo) ClearPage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Page = 0
}

func (x *MetricsPaginationInfo) ClearPageSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PageSize = 0
}

func (x *MetricsPaginationInfo) ClearTotalItems() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalItems = 0
}

func (x *MetricsPaginationInfo) ClearTotalPages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TotalPages = 0
}

func (x *MetricsPaginationInfo) ClearHasNext() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_HasNext = false
}

func (x *MetricsPaginationInfo) ClearHasPrevious() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_HasPrevious = false
}

func (x *MetricsPaginationInfo) ClearNextCursor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_NextCursor = nil
}

func (x *MetricsPaginationInfo) ClearPreviousCursor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_PreviousCursor = nil
}

type MetricsPaginationInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Current page number (1-based)
	Page *uint32
	// Number of items per page
	PageSize *uint32
	// Total number of items across all pages
	TotalItems *uint64
	// Total number of pages
	TotalPages *uint32
	// Whether there is a next page
	HasNext *bool
	// Whether there is a previous page
	HasPrevious *bool
	// Cursor for cursor-based pagination (optional)
	NextCursor *string
	// Cursor for previous page (optional)
	PreviousCursor *string
}

func (b0 MetricsPaginationInfo_builder) Build() *MetricsPaginationInfo {
	m0 := &MetricsPaginationInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Page != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_Page = *b.Page
	}
	if b.PageSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_PageSize = *b.PageSize
	}
	if b.TotalItems != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_TotalItems = *b.TotalItems
	}
	if b.TotalPages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_TotalPages = *b.TotalPages
	}
	if b.HasNext != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_HasNext = *b.HasNext
	}
	if b.HasPrevious != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_HasPrevious = *b.HasPrevious
	}
	if b.NextCursor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_NextCursor = b.NextCursor
	}
	if b.PreviousCursor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_PreviousCursor = b.PreviousCursor
	}
	return m0
}

var File_gcommon_v1_metrics_pagination_info_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_pagination_info_proto_rawDesc = "" +
	"\n" +
	"(gcommon/v1/metrics/pagination_info.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\"\x92\x02\n" +
	"\x15MetricsPaginationInfo\x12\x12\n" +
	"\x04page\x18\x01 \x01(\rR\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\rR\bpageSize\x12\x1f\n" +
	"\vtotal_items\x18\x03 \x01(\x04R\n" +
	"totalItems\x12\x1f\n" +
	"\vtotal_pages\x18\x04 \x01(\rR\n" +
	"totalPages\x12\x19\n" +
	"\bhas_next\x18\x05 \x01(\bR\ahasNext\x12!\n" +
	"\fhas_previous\x18\x06 \x01(\bR\vhasPrevious\x12\x1f\n" +
	"\vnext_cursor\x18\a \x01(\tR\n" +
	"nextCursor\x12'\n" +
	"\x0fprevious_cursor\x18\b \x01(\tR\x0epreviousCursorB6Z,github.com/jdfalk/gcommon/sdks/go/v1/metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_pagination_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_metrics_pagination_info_proto_goTypes = []any{
	(*MetricsPaginationInfo)(nil), // 0: gcommon.v1.metrics.MetricsPaginationInfo
}
var file_gcommon_v1_metrics_pagination_info_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_pagination_info_proto_init() }
func file_gcommon_v1_metrics_pagination_info_proto_init() {
	if File_gcommon_v1_metrics_pagination_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_pagination_info_proto_rawDesc), len(file_gcommon_v1_metrics_pagination_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_pagination_info_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_pagination_info_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_metrics_pagination_info_proto_msgTypes,
	}.Build()
	File_gcommon_v1_metrics_pagination_info_proto = out.File
	file_gcommon_v1_metrics_pagination_info_proto_goTypes = nil
	file_gcommon_v1_metrics_pagination_info_proto_depIdxs = nil
}
