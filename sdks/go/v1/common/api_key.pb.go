// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/common/api_key.proto

package common

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// APIKey represents a user-issued API key used for authenticating
// programmatic access. The key value itself should be stored securely
// and only the hashed form transmitted.
type APIKey struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_UserId      *string                `protobuf:"bytes,2,opt,name=user_id,json=userId"`
	xxx_hidden_Description *string                `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_KeyHash     *string                `protobuf:"bytes,4,opt,name=key_hash,json=keyHash"`
	xxx_hidden_CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt"`
	xxx_hidden_ExpiresAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt"`
	xxx_hidden_Active      bool                   `protobuf:"varint,7,opt,name=active"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *APIKey) Reset() {
	*x = APIKey{}
	mi := &file_gcommon_v1_common_api_key_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKey) ProtoMessage() {}

func (x *APIKey) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_common_api_key_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *APIKey) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *APIKey) GetUserId() string {
	if x != nil {
		if x.xxx_hidden_UserId != nil {
			return *x.xxx_hidden_UserId
		}
		return ""
	}
	return ""
}

func (x *APIKey) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *APIKey) GetKeyHash() string {
	if x != nil {
		if x.xxx_hidden_KeyHash != nil {
			return *x.xxx_hidden_KeyHash
		}
		return ""
	}
	return ""
}

func (x *APIKey) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_CreatedAt) {
				protoimpl.X.UnmarshalField(x, 5)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_CreatedAt), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *APIKey) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_ExpiresAt) {
				protoimpl.X.UnmarshalField(x, 6)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_ExpiresAt), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *APIKey) GetActive() bool {
	if x != nil {
		return x.xxx_hidden_Active
	}
	return false
}

func (x *APIKey) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *APIKey) SetUserId(v string) {
	x.xxx_hidden_UserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *APIKey) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *APIKey) SetKeyHash(v string) {
	x.xxx_hidden_KeyHash = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *APIKey) SetCreatedAt(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CreatedAt, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
	}
}

func (x *APIKey) SetExpiresAt(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_ExpiresAt, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
	}
}

func (x *APIKey) SetActive(v bool) {
	x.xxx_hidden_Active = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *APIKey) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *APIKey) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *APIKey) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *APIKey) HasKeyHash() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *APIKey) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *APIKey) HasExpiresAt() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *APIKey) HasActive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *APIKey) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *APIKey) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UserId = nil
}

func (x *APIKey) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *APIKey) ClearKeyHash() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_KeyHash = nil
}

func (x *APIKey) ClearCreatedAt() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CreatedAt, (*timestamppb.Timestamp)(nil))
}

func (x *APIKey) ClearExpiresAt() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_ExpiresAt, (*timestamppb.Timestamp)(nil))
}

func (x *APIKey) ClearActive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Active = false
}

type APIKey_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique identifier for the API key (UUID required)
	Id *string
	// ID of the user this key belongs to (UUID required)
	UserId *string
	// Human readable description for the key (limit length)
	Description *string
	// Hash of the API key value (non-empty)
	KeyHash *string
	// Creation timestamp (must be present)
	CreatedAt *timestamppb.Timestamp
	// Optional expiration timestamp
	ExpiresAt *timestamppb.Timestamp
	// Whether the key is currently active
	Active *bool
}

func (b0 APIKey_builder) Build() *APIKey {
	m0 := &APIKey{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = b.Id
	}
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_UserId = b.UserId
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Description = b.Description
	}
	if b.KeyHash != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_KeyHash = b.KeyHash
	}
	if b.CreatedAt != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_CreatedAt = b.CreatedAt
	}
	if b.ExpiresAt != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ExpiresAt = b.ExpiresAt
	}
	if b.Active != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_Active = *b.Active
	}
	return m0
}

var File_gcommon_v1_common_api_key_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_api_key_proto_rawDesc = "" +
	"\n" +
	"\x1fgcommon/v1/common/api_key.proto\x12\x11gcommon.v1.common\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bbuf/validate/validate.proto\"\xcf\x03\n" +
	"\x06APIKey\x12g\n" +
	"\x02id\x18\x01 \x01(\tBW\xbaHT\xc8\x01\x01rO2M^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$R\x02id\x12p\n" +
	"\auser_id\x18\x02 \x01(\tBW\xbaHT\xc8\x01\x01rO2M^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$R\x06userId\x12*\n" +
	"\vdescription\x18\x03 \x01(\tB\b\xbaH\x05r\x03\x18\xf4\x03R\vdescription\x12\"\n" +
	"\bkey_hash\x18\x04 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\akeyHash\x12C\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\b\xbaH\x03\xc8\x01\x01(\x01R\tcreatedAt\x12=\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\texpiresAt\x12\x16\n" +
	"\x06active\x18\a \x01(\bR\x06activeB5Z+github.com/jdfalk/gcommon/sdks/go/v1/common\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_api_key_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_common_api_key_proto_goTypes = []any{
	(*APIKey)(nil),                // 0: gcommon.v1.common.APIKey
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_gcommon_v1_common_api_key_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.common.APIKey.created_at:type_name -> google.protobuf.Timestamp
	1, // 1: gcommon.v1.common.APIKey.expires_at:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_api_key_proto_init() }
func file_gcommon_v1_common_api_key_proto_init() {
	if File_gcommon_v1_common_api_key_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_api_key_proto_rawDesc), len(file_gcommon_v1_common_api_key_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_api_key_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_api_key_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_common_api_key_proto_msgTypes,
	}.Build()
	File_gcommon_v1_common_api_key_proto = out.File
	file_gcommon_v1_common_api_key_proto_goTypes = nil
	file_gcommon_v1_common_api_key_proto_depIdxs = nil
}
