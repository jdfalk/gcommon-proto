// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/common/nack_error_category.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Categories of NACK errors.
type NackErrorCategory int32

const (
	// Default unspecified category
	NackErrorCategory_NACK_ERROR_CATEGORY_UNSPECIFIED NackErrorCategory = 0
	// Temporary/transient error
	NackErrorCategory_NACK_ERROR_CATEGORY_TEMPORARY NackErrorCategory = 1
	// Permanent error (should not retry)
	NackErrorCategory_NACK_ERROR_CATEGORY_PERMANENT NackErrorCategory = 2
	// Configuration error
	NackErrorCategory_NACK_ERROR_CATEGORY_CONFIGURATION NackErrorCategory = 3
	// Network error
	NackErrorCategory_NACK_ERROR_CATEGORY_NETWORK NackErrorCategory = 4
	// Authentication/authorization error
	NackErrorCategory_NACK_ERROR_CATEGORY_AUTH NackErrorCategory = 5
	// Rate limiting error
	NackErrorCategory_NACK_ERROR_CATEGORY_RATE_LIMIT NackErrorCategory = 6
)

// Enum value maps for NackErrorCategory.
var (
	NackErrorCategory_name = map[int32]string{
		0: "NACK_ERROR_CATEGORY_UNSPECIFIED",
		1: "NACK_ERROR_CATEGORY_TEMPORARY",
		2: "NACK_ERROR_CATEGORY_PERMANENT",
		3: "NACK_ERROR_CATEGORY_CONFIGURATION",
		4: "NACK_ERROR_CATEGORY_NETWORK",
		5: "NACK_ERROR_CATEGORY_AUTH",
		6: "NACK_ERROR_CATEGORY_RATE_LIMIT",
	}
	NackErrorCategory_value = map[string]int32{
		"NACK_ERROR_CATEGORY_UNSPECIFIED":   0,
		"NACK_ERROR_CATEGORY_TEMPORARY":     1,
		"NACK_ERROR_CATEGORY_PERMANENT":     2,
		"NACK_ERROR_CATEGORY_CONFIGURATION": 3,
		"NACK_ERROR_CATEGORY_NETWORK":       4,
		"NACK_ERROR_CATEGORY_AUTH":          5,
		"NACK_ERROR_CATEGORY_RATE_LIMIT":    6,
	}
)

func (x NackErrorCategory) Enum() *NackErrorCategory {
	p := new(NackErrorCategory)
	*p = x
	return p
}

func (x NackErrorCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NackErrorCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_gcommon_v1_common_nack_error_category_proto_enumTypes[0].Descriptor()
}

func (NackErrorCategory) Type() protoreflect.EnumType {
	return &file_gcommon_v1_common_nack_error_category_proto_enumTypes[0]
}

func (x NackErrorCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_gcommon_v1_common_nack_error_category_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_nack_error_category_proto_rawDesc = "" +
	"\n" +
	"+gcommon/v1/common/nack_error_category.proto\x12\x11gcommon.v1.common\x1a!google/protobuf/go_features.proto*\x88\x02\n" +
	"\x11NackErrorCategory\x12#\n" +
	"\x1fNACK_ERROR_CATEGORY_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dNACK_ERROR_CATEGORY_TEMPORARY\x10\x01\x12!\n" +
	"\x1dNACK_ERROR_CATEGORY_PERMANENT\x10\x02\x12%\n" +
	"!NACK_ERROR_CATEGORY_CONFIGURATION\x10\x03\x12\x1f\n" +
	"\x1bNACK_ERROR_CATEGORY_NETWORK\x10\x04\x12\x1c\n" +
	"\x18NACK_ERROR_CATEGORY_AUTH\x10\x05\x12\"\n" +
	"\x1eNACK_ERROR_CATEGORY_RATE_LIMIT\x10\x06B5Z+github.com/jdfalk/gcommon/sdks/go/v1/common\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_nack_error_category_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gcommon_v1_common_nack_error_category_proto_goTypes = []any{
	(NackErrorCategory)(0), // 0: gcommon.v1.common.NackErrorCategory
}
var file_gcommon_v1_common_nack_error_category_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_nack_error_category_proto_init() }
func file_gcommon_v1_common_nack_error_category_proto_init() {
	if File_gcommon_v1_common_nack_error_category_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_nack_error_category_proto_rawDesc), len(file_gcommon_v1_common_nack_error_category_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_nack_error_category_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_nack_error_category_proto_depIdxs,
		EnumInfos:         file_gcommon_v1_common_nack_error_category_proto_enumTypes,
	}.Build()
	File_gcommon_v1_common_nack_error_category_proto = out.File
	file_gcommon_v1_common_nack_error_category_proto_goTypes = nil
	file_gcommon_v1_common_nack_error_category_proto_depIdxs = nil
}
