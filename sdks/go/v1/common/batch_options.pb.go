// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: gcommon/v1/common/batch_options.proto

package common

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Batch processing options for configuring bulk operation behavior.
// Controls parallelism, error handling, timeout policies, and
// result handling for efficient batch processing.
type CommonBatchOptions struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MaxParallel   int32                  `protobuf:"varint,1,opt,name=max_parallel,json=maxParallel"`
	xxx_hidden_FailFast      bool                   `protobuf:"varint,2,opt,name=fail_fast,json=failFast"`
	xxx_hidden_Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout"`
	xxx_hidden_ReturnPartial bool                   `protobuf:"varint,4,opt,name=return_partial,json=returnPartial"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CommonBatchOptions) Reset() {
	*x = CommonBatchOptions{}
	mi := &file_gcommon_v1_common_batch_options_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonBatchOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonBatchOptions) ProtoMessage() {}

func (x *CommonBatchOptions) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_common_batch_options_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommonBatchOptions) GetMaxParallel() int32 {
	if x != nil {
		return x.xxx_hidden_MaxParallel
	}
	return 0
}

func (x *CommonBatchOptions) GetFailFast() bool {
	if x != nil {
		return x.xxx_hidden_FailFast
	}
	return false
}

func (x *CommonBatchOptions) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Timeout
	}
	return nil
}

func (x *CommonBatchOptions) GetReturnPartial() bool {
	if x != nil {
		return x.xxx_hidden_ReturnPartial
	}
	return false
}

func (x *CommonBatchOptions) SetMaxParallel(v int32) {
	x.xxx_hidden_MaxParallel = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CommonBatchOptions) SetFailFast(v bool) {
	x.xxx_hidden_FailFast = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CommonBatchOptions) SetTimeout(v *durationpb.Duration) {
	x.xxx_hidden_Timeout = v
}

func (x *CommonBatchOptions) SetReturnPartial(v bool) {
	x.xxx_hidden_ReturnPartial = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *CommonBatchOptions) HasMaxParallel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CommonBatchOptions) HasFailFast() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CommonBatchOptions) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timeout != nil
}

func (x *CommonBatchOptions) HasReturnPartial() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CommonBatchOptions) ClearMaxParallel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MaxParallel = 0
}

func (x *CommonBatchOptions) ClearFailFast() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FailFast = false
}

func (x *CommonBatchOptions) ClearTimeout() {
	x.xxx_hidden_Timeout = nil
}

func (x *CommonBatchOptions) ClearReturnPartial() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ReturnPartial = false
}

type CommonBatchOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum number of operations to process in parallel
	MaxParallel *int32
	// Whether to stop processing on the first error encountered
	FailFast *bool
	// Total timeout for the entire batch operation
	Timeout *durationpb.Duration
	// Whether to return partial results if timeout is reached
	ReturnPartial *bool
}

func (b0 CommonBatchOptions_builder) Build() *CommonBatchOptions {
	m0 := &CommonBatchOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MaxParallel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_MaxParallel = *b.MaxParallel
	}
	if b.FailFast != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FailFast = *b.FailFast
	}
	x.xxx_hidden_Timeout = b.Timeout
	if b.ReturnPartial != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ReturnPartial = *b.ReturnPartial
	}
	return m0
}

var File_gcommon_v1_common_batch_options_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_batch_options_proto_rawDesc = "" +
	"\n" +
	"%gcommon/v1/common/batch_options.proto\x12\x11gcommon.v1.common\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xb9\x01\n" +
	"\x12CommonBatchOptions\x12*\n" +
	"\fmax_parallel\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\vmaxParallel\x12\x1b\n" +
	"\tfail_fast\x18\x02 \x01(\bR\bfailFast\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12%\n" +
	"\x0ereturn_partial\x18\x04 \x01(\bR\rreturnPartialB5Z+github.com/jdfalk/gcommon/sdks/go/v1/common\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_batch_options_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_common_batch_options_proto_goTypes = []any{
	(*CommonBatchOptions)(nil),  // 0: gcommon.v1.common.CommonBatchOptions
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
}
var file_gcommon_v1_common_batch_options_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.common.CommonBatchOptions.timeout:type_name -> google.protobuf.Duration
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_batch_options_proto_init() }
func file_gcommon_v1_common_batch_options_proto_init() {
	if File_gcommon_v1_common_batch_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_batch_options_proto_rawDesc), len(file_gcommon_v1_common_batch_options_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_batch_options_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_batch_options_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_common_batch_options_proto_msgTypes,
	}.Build()
	File_gcommon_v1_common_batch_options_proto = out.File
	file_gcommon_v1_common_batch_options_proto_goTypes = nil
	file_gcommon_v1_common_batch_options_proto_depIdxs = nil
}
