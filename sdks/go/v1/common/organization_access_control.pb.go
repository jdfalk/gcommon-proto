// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/common/organization_access_control.proto

package common

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrganizationAccessControl struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_IpWhitelist           []string               `protobuf:"bytes,1,rep,name=ip_whitelist,json=ipWhitelist"`
	xxx_hidden_AuthMethods           []string               `protobuf:"bytes,2,rep,name=auth_methods,json=authMethods"`
	xxx_hidden_SessionTimeout        int32                  `protobuf:"varint,3,opt,name=session_timeout,json=sessionTimeout"`
	xxx_hidden_MaxConcurrentSessions int32                  `protobuf:"varint,4,opt,name=max_concurrent_sessions,json=maxConcurrentSessions"`
	xxx_hidden_AllowedCountries      []string               `protobuf:"bytes,5,rep,name=allowed_countries,json=allowedCountries"`
	xxx_hidden_TimeRestrictions      *[]*TimeRestriction    `protobuf:"bytes,6,rep,name=time_restrictions,json=timeRestrictions"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *OrganizationAccessControl) Reset() {
	*x = OrganizationAccessControl{}
	mi := &file_gcommon_v1_common_organization_access_control_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrganizationAccessControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationAccessControl) ProtoMessage() {}

func (x *OrganizationAccessControl) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_common_organization_access_control_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OrganizationAccessControl) GetIpWhitelist() []string {
	if x != nil {
		return x.xxx_hidden_IpWhitelist
	}
	return nil
}

func (x *OrganizationAccessControl) GetAuthMethods() []string {
	if x != nil {
		return x.xxx_hidden_AuthMethods
	}
	return nil
}

func (x *OrganizationAccessControl) GetSessionTimeout() int32 {
	if x != nil {
		return x.xxx_hidden_SessionTimeout
	}
	return 0
}

func (x *OrganizationAccessControl) GetMaxConcurrentSessions() int32 {
	if x != nil {
		return x.xxx_hidden_MaxConcurrentSessions
	}
	return 0
}

func (x *OrganizationAccessControl) GetAllowedCountries() []string {
	if x != nil {
		return x.xxx_hidden_AllowedCountries
	}
	return nil
}

func (x *OrganizationAccessControl) GetTimeRestrictions() []*TimeRestriction {
	if x != nil {
		if x.xxx_hidden_TimeRestrictions != nil {
			return *x.xxx_hidden_TimeRestrictions
		}
	}
	return nil
}

func (x *OrganizationAccessControl) SetIpWhitelist(v []string) {
	x.xxx_hidden_IpWhitelist = v
}

func (x *OrganizationAccessControl) SetAuthMethods(v []string) {
	x.xxx_hidden_AuthMethods = v
}

func (x *OrganizationAccessControl) SetSessionTimeout(v int32) {
	x.xxx_hidden_SessionTimeout = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *OrganizationAccessControl) SetMaxConcurrentSessions(v int32) {
	x.xxx_hidden_MaxConcurrentSessions = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *OrganizationAccessControl) SetAllowedCountries(v []string) {
	x.xxx_hidden_AllowedCountries = v
}

func (x *OrganizationAccessControl) SetTimeRestrictions(v []*TimeRestriction) {
	x.xxx_hidden_TimeRestrictions = &v
}

func (x *OrganizationAccessControl) HasSessionTimeout() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *OrganizationAccessControl) HasMaxConcurrentSessions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *OrganizationAccessControl) ClearSessionTimeout() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SessionTimeout = 0
}

func (x *OrganizationAccessControl) ClearMaxConcurrentSessions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MaxConcurrentSessions = 0
}

type OrganizationAccessControl_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// IP address whitelist for tenant access
	IpWhitelist []string
	// Allowed authentication methods
	AuthMethods []string
	// Session timeout in minutes
	SessionTimeout *int32
	// Maximum concurrent sessions
	MaxConcurrentSessions *int32
	// Geographic access restrictions
	AllowedCountries []string
	// Time-based access restrictions
	TimeRestrictions []*TimeRestriction
}

func (b0 OrganizationAccessControl_builder) Build() *OrganizationAccessControl {
	m0 := &OrganizationAccessControl{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_IpWhitelist = b.IpWhitelist
	x.xxx_hidden_AuthMethods = b.AuthMethods
	if b.SessionTimeout != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_SessionTimeout = *b.SessionTimeout
	}
	if b.MaxConcurrentSessions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_MaxConcurrentSessions = *b.MaxConcurrentSessions
	}
	x.xxx_hidden_AllowedCountries = b.AllowedCountries
	x.xxx_hidden_TimeRestrictions = &b.TimeRestrictions
	return m0
}

var File_gcommon_v1_common_organization_access_control_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_organization_access_control_proto_rawDesc = "" +
	"\n" +
	"3gcommon/v1/common/organization_access_control.proto\x12\x11gcommon.v1.common\x1a(gcommon/v1/common/time_restriction.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xfa\x02\n" +
	"\x19OrganizationAccessControl\x12+\n" +
	"\fip_whitelist\x18\x01 \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x01R\vipWhitelist\x12+\n" +
	"\fauth_methods\x18\x02 \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x01R\vauthMethods\x120\n" +
	"\x0fsession_timeout\x18\x03 \x01(\x05B\a\xbaH\x04\x1a\x02 \x00R\x0esessionTimeout\x12?\n" +
	"\x17max_concurrent_sessions\x18\x04 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x15maxConcurrentSessions\x125\n" +
	"\x11allowed_countries\x18\x05 \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x01R\x10allowedCountries\x12Y\n" +
	"\x11time_restrictions\x18\x06 \x03(\v2\".gcommon.v1.common.TimeRestrictionB\b\xbaH\x05\x92\x01\x02\b\x01R\x10timeRestrictionsB5Z+github.com/jdfalk/gcommon/sdks/go/v1/common\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_organization_access_control_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_common_organization_access_control_proto_goTypes = []any{
	(*OrganizationAccessControl)(nil), // 0: gcommon.v1.common.OrganizationAccessControl
	(*TimeRestriction)(nil),           // 1: gcommon.v1.common.TimeRestriction
}
var file_gcommon_v1_common_organization_access_control_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.common.OrganizationAccessControl.time_restrictions:type_name -> gcommon.v1.common.TimeRestriction
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_organization_access_control_proto_init() }
func file_gcommon_v1_common_organization_access_control_proto_init() {
	if File_gcommon_v1_common_organization_access_control_proto != nil {
		return
	}
	file_gcommon_v1_common_time_restriction_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_organization_access_control_proto_rawDesc), len(file_gcommon_v1_common_organization_access_control_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_organization_access_control_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_organization_access_control_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_common_organization_access_control_proto_msgTypes,
	}.Build()
	File_gcommon_v1_common_organization_access_control_proto = out.File
	file_gcommon_v1_common_organization_access_control_proto_goTypes = nil
	file_gcommon_v1_common_organization_access_control_proto_depIdxs = nil
}
