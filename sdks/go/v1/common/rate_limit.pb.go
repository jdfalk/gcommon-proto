// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/common/rate_limit.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Rate limiting information for API throttling and quota management.
// Provides current rate limit status and reset timing information
// for client-side rate limit handling and backoff strategies.
type RateLimit struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Limit       int32                  `protobuf:"varint,1,opt,name=limit"`
	xxx_hidden_Window      *durationpb.Duration   `protobuf:"bytes,2,opt,name=window"`
	xxx_hidden_Remaining   int32                  `protobuf:"varint,3,opt,name=remaining"`
	xxx_hidden_ResetTime   *durationpb.Duration   `protobuf:"bytes,4,opt,name=reset_time,json=resetTime"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RateLimit) Reset() {
	*x = RateLimit{}
	mi := &file_gcommon_v1_common_rate_limit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimit) ProtoMessage() {}

func (x *RateLimit) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_common_rate_limit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RateLimit) GetLimit() int32 {
	if x != nil {
		return x.xxx_hidden_Limit
	}
	return 0
}

func (x *RateLimit) GetWindow() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Window
	}
	return nil
}

func (x *RateLimit) GetRemaining() int32 {
	if x != nil {
		return x.xxx_hidden_Remaining
	}
	return 0
}

func (x *RateLimit) GetResetTime() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_ResetTime
	}
	return nil
}

func (x *RateLimit) SetLimit(v int32) {
	x.xxx_hidden_Limit = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *RateLimit) SetWindow(v *durationpb.Duration) {
	x.xxx_hidden_Window = v
}

func (x *RateLimit) SetRemaining(v int32) {
	x.xxx_hidden_Remaining = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *RateLimit) SetResetTime(v *durationpb.Duration) {
	x.xxx_hidden_ResetTime = v
}

func (x *RateLimit) HasLimit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RateLimit) HasWindow() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Window != nil
}

func (x *RateLimit) HasRemaining() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RateLimit) HasResetTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ResetTime != nil
}

func (x *RateLimit) ClearLimit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Limit = 0
}

func (x *RateLimit) ClearWindow() {
	x.xxx_hidden_Window = nil
}

func (x *RateLimit) ClearRemaining() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Remaining = 0
}

func (x *RateLimit) ClearResetTime() {
	x.xxx_hidden_ResetTime = nil
}

type RateLimit_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum number of requests allowed per time window
	Limit *int32
	// Duration of the time window for rate limiting
	Window *durationpb.Duration
	// Number of requests remaining in the current window
	Remaining *int32
	// Time until the rate limit window resets
	ResetTime *durationpb.Duration
}

func (b0 RateLimit_builder) Build() *RateLimit {
	m0 := &RateLimit{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Limit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Limit = *b.Limit
	}
	x.xxx_hidden_Window = b.Window
	if b.Remaining != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Remaining = *b.Remaining
	}
	x.xxx_hidden_ResetTime = b.ResetTime
	return m0
}

var File_gcommon_v1_common_rate_limit_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_rate_limit_proto_rawDesc = "" +
	"\n" +
	"\"gcommon/v1/common/rate_limit.proto\x12\x11gcommon.v1.common\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\"\xac\x01\n" +
	"\tRateLimit\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x121\n" +
	"\x06window\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x06window\x12\x1c\n" +
	"\tremaining\x18\x03 \x01(\x05R\tremaining\x128\n" +
	"\n" +
	"reset_time\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\tresetTimeB5Z+github.com/jdfalk/gcommon/sdks/go/v1/common\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_rate_limit_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_common_rate_limit_proto_goTypes = []any{
	(*RateLimit)(nil),           // 0: gcommon.v1.common.RateLimit
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
}
var file_gcommon_v1_common_rate_limit_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.common.RateLimit.window:type_name -> google.protobuf.Duration
	1, // 1: gcommon.v1.common.RateLimit.reset_time:type_name -> google.protobuf.Duration
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_rate_limit_proto_init() }
func file_gcommon_v1_common_rate_limit_proto_init() {
	if File_gcommon_v1_common_rate_limit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_rate_limit_proto_rawDesc), len(file_gcommon_v1_common_rate_limit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_rate_limit_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_rate_limit_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_common_rate_limit_proto_msgTypes,
	}.Build()
	File_gcommon_v1_common_rate_limit_proto = out.File
	file_gcommon_v1_common_rate_limit_proto_goTypes = nil
	file_gcommon_v1_common_rate_limit_proto_depIdxs = nil
}
