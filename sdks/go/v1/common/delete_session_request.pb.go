// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/common/delete_session_request.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Request to delete a session.
// Used for session cleanup and administrative purposes.
type AuthDeleteSessionRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId   *string                `protobuf:"bytes,1,opt,name=session_id,json=sessionId"`
	xxx_hidden_Force       bool                   `protobuf:"varint,2,opt,name=force"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AuthDeleteSessionRequest) Reset() {
	*x = AuthDeleteSessionRequest{}
	mi := &file_gcommon_v1_common_delete_session_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthDeleteSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthDeleteSessionRequest) ProtoMessage() {}

func (x *AuthDeleteSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_common_delete_session_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthDeleteSessionRequest) GetSessionId() string {
	if x != nil {
		if x.xxx_hidden_SessionId != nil {
			return *x.xxx_hidden_SessionId
		}
		return ""
	}
	return ""
}

func (x *AuthDeleteSessionRequest) GetForce() bool {
	if x != nil {
		return x.xxx_hidden_Force
	}
	return false
}

func (x *AuthDeleteSessionRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *AuthDeleteSessionRequest) SetForce(v bool) {
	x.xxx_hidden_Force = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *AuthDeleteSessionRequest) HasSessionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AuthDeleteSessionRequest) HasForce() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AuthDeleteSessionRequest) ClearSessionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SessionId = nil
}

func (x *AuthDeleteSessionRequest) ClearForce() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Force = false
}

type AuthDeleteSessionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session ID to delete
	SessionId *string
	// Force delete even if session is active (admin only)
	Force *bool
}

func (b0 AuthDeleteSessionRequest_builder) Build() *AuthDeleteSessionRequest {
	m0 := &AuthDeleteSessionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SessionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_SessionId = b.SessionId
	}
	if b.Force != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Force = *b.Force
	}
	return m0
}

var File_gcommon_v1_common_delete_session_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_delete_session_request_proto_rawDesc = "" +
	"\n" +
	".gcommon/v1/common/delete_session_request.proto\x12\x11gcommon.v1.common\x1a!google/protobuf/go_features.proto\"O\n" +
	"\x18AuthDeleteSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05forceB5Z+github.com/jdfalk/gcommon/sdks/go/v1/common\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_delete_session_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_common_delete_session_request_proto_goTypes = []any{
	(*AuthDeleteSessionRequest)(nil), // 0: gcommon.v1.common.AuthDeleteSessionRequest
}
var file_gcommon_v1_common_delete_session_request_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_delete_session_request_proto_init() }
func file_gcommon_v1_common_delete_session_request_proto_init() {
	if File_gcommon_v1_common_delete_session_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_delete_session_request_proto_rawDesc), len(file_gcommon_v1_common_delete_session_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_delete_session_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_delete_session_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_common_delete_session_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_common_delete_session_request_proto = out.File
	file_gcommon_v1_common_delete_session_request_proto_goTypes = nil
	file_gcommon_v1_common_delete_session_request_proto_depIdxs = nil
}
