// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: gcommon/v1/common/password_policy.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Requirements and restrictions for user passwords.
type PasswordPolicy struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MinLength        int32                  `protobuf:"varint,1,opt,name=min_length,json=minLength"`
	xxx_hidden_RequireUppercase bool                   `protobuf:"varint,2,opt,name=require_uppercase,json=requireUppercase"`
	xxx_hidden_RequireLowercase bool                   `protobuf:"varint,3,opt,name=require_lowercase,json=requireLowercase"`
	xxx_hidden_RequireNumber    bool                   `protobuf:"varint,4,opt,name=require_number,json=requireNumber"`
	xxx_hidden_RequireSymbol    bool                   `protobuf:"varint,5,opt,name=require_symbol,json=requireSymbol"`
	xxx_hidden_MaxAgeDays       int32                  `protobuf:"varint,6,opt,name=max_age_days,json=maxAgeDays"`
	xxx_hidden_History          int32                  `protobuf:"varint,7,opt,name=history"`
	xxx_hidden_AllowReuse       bool                   `protobuf:"varint,8,opt,name=allow_reuse,json=allowReuse"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *PasswordPolicy) Reset() {
	*x = PasswordPolicy{}
	mi := &file_gcommon_v1_common_password_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasswordPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordPolicy) ProtoMessage() {}

func (x *PasswordPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_common_password_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PasswordPolicy) GetMinLength() int32 {
	if x != nil {
		return x.xxx_hidden_MinLength
	}
	return 0
}

func (x *PasswordPolicy) GetRequireUppercase() bool {
	if x != nil {
		return x.xxx_hidden_RequireUppercase
	}
	return false
}

func (x *PasswordPolicy) GetRequireLowercase() bool {
	if x != nil {
		return x.xxx_hidden_RequireLowercase
	}
	return false
}

func (x *PasswordPolicy) GetRequireNumber() bool {
	if x != nil {
		return x.xxx_hidden_RequireNumber
	}
	return false
}

func (x *PasswordPolicy) GetRequireSymbol() bool {
	if x != nil {
		return x.xxx_hidden_RequireSymbol
	}
	return false
}

func (x *PasswordPolicy) GetMaxAgeDays() int32 {
	if x != nil {
		return x.xxx_hidden_MaxAgeDays
	}
	return 0
}

func (x *PasswordPolicy) GetHistory() int32 {
	if x != nil {
		return x.xxx_hidden_History
	}
	return 0
}

func (x *PasswordPolicy) GetAllowReuse() bool {
	if x != nil {
		return x.xxx_hidden_AllowReuse
	}
	return false
}

func (x *PasswordPolicy) SetMinLength(v int32) {
	x.xxx_hidden_MinLength = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *PasswordPolicy) SetRequireUppercase(v bool) {
	x.xxx_hidden_RequireUppercase = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *PasswordPolicy) SetRequireLowercase(v bool) {
	x.xxx_hidden_RequireLowercase = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *PasswordPolicy) SetRequireNumber(v bool) {
	x.xxx_hidden_RequireNumber = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *PasswordPolicy) SetRequireSymbol(v bool) {
	x.xxx_hidden_RequireSymbol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *PasswordPolicy) SetMaxAgeDays(v int32) {
	x.xxx_hidden_MaxAgeDays = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *PasswordPolicy) SetHistory(v int32) {
	x.xxx_hidden_History = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *PasswordPolicy) SetAllowReuse(v bool) {
	x.xxx_hidden_AllowReuse = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *PasswordPolicy) HasMinLength() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PasswordPolicy) HasRequireUppercase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PasswordPolicy) HasRequireLowercase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PasswordPolicy) HasRequireNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PasswordPolicy) HasRequireSymbol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *PasswordPolicy) HasMaxAgeDays() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *PasswordPolicy) HasHistory() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *PasswordPolicy) HasAllowReuse() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *PasswordPolicy) ClearMinLength() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MinLength = 0
}

func (x *PasswordPolicy) ClearRequireUppercase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RequireUppercase = false
}

func (x *PasswordPolicy) ClearRequireLowercase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_RequireLowercase = false
}

func (x *PasswordPolicy) ClearRequireNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_RequireNumber = false
}

func (x *PasswordPolicy) ClearRequireSymbol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_RequireSymbol = false
}

func (x *PasswordPolicy) ClearMaxAgeDays() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_MaxAgeDays = 0
}

func (x *PasswordPolicy) ClearHistory() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_History = 0
}

func (x *PasswordPolicy) ClearAllowReuse() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_AllowReuse = false
}

type PasswordPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Minimum required length for passwords.
	MinLength *int32
	// Require at least one uppercase letter.
	RequireUppercase *bool
	// Require at least one lowercase letter.
	RequireLowercase *bool
	// Require at least one numeric digit.
	RequireNumber *bool
	// Require at least one symbol character.
	RequireSymbol *bool
	// Maximum password age in days before expiration.
	MaxAgeDays *int32
	// Number of previous passwords disallowed for reuse.
	History *int32
	// Whether password reuse is permitted after history is exhausted.
	AllowReuse *bool
}

func (b0 PasswordPolicy_builder) Build() *PasswordPolicy {
	m0 := &PasswordPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MinLength != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_MinLength = *b.MinLength
	}
	if b.RequireUppercase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_RequireUppercase = *b.RequireUppercase
	}
	if b.RequireLowercase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_RequireLowercase = *b.RequireLowercase
	}
	if b.RequireNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_RequireNumber = *b.RequireNumber
	}
	if b.RequireSymbol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_RequireSymbol = *b.RequireSymbol
	}
	if b.MaxAgeDays != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_MaxAgeDays = *b.MaxAgeDays
	}
	if b.History != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_History = *b.History
	}
	if b.AllowReuse != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_AllowReuse = *b.AllowReuse
	}
	return m0
}

var File_gcommon_v1_common_password_policy_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_password_policy_proto_rawDesc = "" +
	"\n" +
	"'gcommon/v1/common/password_policy.proto\x12\x11gcommon.v1.common\x1a!google/protobuf/go_features.proto\"\xb4\x02\n" +
	"\x0ePasswordPolicy\x12\x1d\n" +
	"\n" +
	"min_length\x18\x01 \x01(\x05R\tminLength\x12+\n" +
	"\x11require_uppercase\x18\x02 \x01(\bR\x10requireUppercase\x12+\n" +
	"\x11require_lowercase\x18\x03 \x01(\bR\x10requireLowercase\x12%\n" +
	"\x0erequire_number\x18\x04 \x01(\bR\rrequireNumber\x12%\n" +
	"\x0erequire_symbol\x18\x05 \x01(\bR\rrequireSymbol\x12 \n" +
	"\fmax_age_days\x18\x06 \x01(\x05R\n" +
	"maxAgeDays\x12\x18\n" +
	"\ahistory\x18\a \x01(\x05R\ahistory\x12\x1f\n" +
	"\vallow_reuse\x18\b \x01(\bR\n" +
	"allowReuseB5Z+github.com/jdfalk/gcommon/sdks/go/v1/common\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_password_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_common_password_policy_proto_goTypes = []any{
	(*PasswordPolicy)(nil), // 0: gcommon.v1.common.PasswordPolicy
}
var file_gcommon_v1_common_password_policy_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_password_policy_proto_init() }
func file_gcommon_v1_common_password_policy_proto_init() {
	if File_gcommon_v1_common_password_policy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_password_policy_proto_rawDesc), len(file_gcommon_v1_common_password_policy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_password_policy_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_password_policy_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_common_password_policy_proto_msgTypes,
	}.Build()
	File_gcommon_v1_common_password_policy_proto = out.File
	file_gcommon_v1_common_password_policy_proto_goTypes = nil
	file_gcommon_v1_common_password_policy_proto_depIdxs = nil
}
