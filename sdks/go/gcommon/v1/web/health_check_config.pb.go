// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/web/health_check_config.proto

package web

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HealthCheckConfig defines parameters for performing HTTP health checks.
type WebHealthCheckConfig struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Path            *string                `protobuf:"bytes,1,opt,name=path"`
	xxx_hidden_IntervalSeconds float64                `protobuf:"fixed64,2,opt,name=interval_seconds,json=intervalSeconds"`
	xxx_hidden_TimeoutSeconds  float64                `protobuf:"fixed64,3,opt,name=timeout_seconds,json=timeoutSeconds"`
	xxx_hidden_ExpectedStatus  int32                  `protobuf:"varint,4,opt,name=expected_status,json=expectedStatus"`
	xxx_hidden_Headers         map[string]string      `protobuf:"bytes,5,rep,name=headers" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Enabled         bool                   `protobuf:"varint,6,opt,name=enabled"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *WebHealthCheckConfig) Reset() {
	*x = WebHealthCheckConfig{}
	mi := &file_gcommon_v1_web_health_check_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebHealthCheckConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebHealthCheckConfig) ProtoMessage() {}

func (x *WebHealthCheckConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_web_health_check_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *WebHealthCheckConfig) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *WebHealthCheckConfig) GetIntervalSeconds() float64 {
	if x != nil {
		return x.xxx_hidden_IntervalSeconds
	}
	return 0
}

func (x *WebHealthCheckConfig) GetTimeoutSeconds() float64 {
	if x != nil {
		return x.xxx_hidden_TimeoutSeconds
	}
	return 0
}

func (x *WebHealthCheckConfig) GetExpectedStatus() int32 {
	if x != nil {
		return x.xxx_hidden_ExpectedStatus
	}
	return 0
}

func (x *WebHealthCheckConfig) GetHeaders() map[string]string {
	if x != nil {
		return x.xxx_hidden_Headers
	}
	return nil
}

func (x *WebHealthCheckConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *WebHealthCheckConfig) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *WebHealthCheckConfig) SetIntervalSeconds(v float64) {
	x.xxx_hidden_IntervalSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *WebHealthCheckConfig) SetTimeoutSeconds(v float64) {
	x.xxx_hidden_TimeoutSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *WebHealthCheckConfig) SetExpectedStatus(v int32) {
	x.xxx_hidden_ExpectedStatus = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *WebHealthCheckConfig) SetHeaders(v map[string]string) {
	x.xxx_hidden_Headers = v
}

func (x *WebHealthCheckConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *WebHealthCheckConfig) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *WebHealthCheckConfig) HasIntervalSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *WebHealthCheckConfig) HasTimeoutSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *WebHealthCheckConfig) HasExpectedStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *WebHealthCheckConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *WebHealthCheckConfig) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Path = nil
}

func (x *WebHealthCheckConfig) ClearIntervalSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_IntervalSeconds = 0
}

func (x *WebHealthCheckConfig) ClearTimeoutSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TimeoutSeconds = 0
}

func (x *WebHealthCheckConfig) ClearExpectedStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ExpectedStatus = 0
}

func (x *WebHealthCheckConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Enabled = false
}

type WebHealthCheckConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// HTTP path used for the health check request.
	Path *string
	// Interval between health checks in seconds.
	IntervalSeconds *float64
	// Timeout for a single health check in seconds.
	TimeoutSeconds *float64
	// Expected HTTP status code indicating a healthy response.
	ExpectedStatus *int32
	// Additional headers to include with the request.
	Headers map[string]string
	// Whether the health check is enabled.
	Enabled *bool
}

func (b0 WebHealthCheckConfig_builder) Build() *WebHealthCheckConfig {
	m0 := &WebHealthCheckConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Path = b.Path
	}
	if b.IntervalSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_IntervalSeconds = *b.IntervalSeconds
	}
	if b.TimeoutSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_TimeoutSeconds = *b.TimeoutSeconds
	}
	if b.ExpectedStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_ExpectedStatus = *b.ExpectedStatus
	}
	x.xxx_hidden_Headers = b.Headers
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	return m0
}

var File_gcommon_v1_web_health_check_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_web_health_check_config_proto_rawDesc = "" +
	"\n" +
	"(gcommon/v1/web/health_check_config.proto\x12\x0egcommon.v1.web\x1a!google/protobuf/go_features.proto\"\xca\x02\n" +
	"\x14WebHealthCheckConfig\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12)\n" +
	"\x10interval_seconds\x18\x02 \x01(\x01R\x0fintervalSeconds\x12'\n" +
	"\x0ftimeout_seconds\x18\x03 \x01(\x01R\x0etimeoutSeconds\x12'\n" +
	"\x0fexpected_status\x18\x04 \x01(\x05R\x0eexpectedStatus\x12K\n" +
	"\aheaders\x18\x05 \x03(\v21.gcommon.v1.web.WebHealthCheckConfig.HeadersEntryR\aheaders\x12\x18\n" +
	"\aenabled\x18\x06 \x01(\bR\aenabled\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B2Z(github.com/jdfalk/gcommon/sdks/go/v1/web\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_web_health_check_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_web_health_check_config_proto_goTypes = []any{
	(*WebHealthCheckConfig)(nil), // 0: gcommon.v1.web.WebHealthCheckConfig
	nil,                          // 1: gcommon.v1.web.WebHealthCheckConfig.HeadersEntry
}
var file_gcommon_v1_web_health_check_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.web.WebHealthCheckConfig.headers:type_name -> gcommon.v1.web.WebHealthCheckConfig.HeadersEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_web_health_check_config_proto_init() }
func file_gcommon_v1_web_health_check_config_proto_init() {
	if File_gcommon_v1_web_health_check_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_web_health_check_config_proto_rawDesc), len(file_gcommon_v1_web_health_check_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_web_health_check_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_web_health_check_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_web_health_check_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_web_health_check_config_proto = out.File
	file_gcommon_v1_web_health_check_config_proto_goTypes = nil
	file_gcommon_v1_web_health_check_config_proto_depIdxs = nil
}
