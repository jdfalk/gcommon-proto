// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/media/upload_media_request.proto

package media

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to upload media content (streaming).
type UploadMediaRequest struct {
	state           protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Data isUploadMediaRequest_Data `protobuf_oneof:"data"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UploadMediaRequest) Reset() {
	*x = UploadMediaRequest{}
	mi := &file_gcommon_v1_media_upload_media_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaRequest) ProtoMessage() {}

func (x *UploadMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_media_upload_media_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UploadMediaRequest) GetMetadata() *UploadMetadata {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*uploadMediaRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *UploadMediaRequest) GetChunk() []byte {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*uploadMediaRequest_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

func (x *UploadMediaRequest) SetMetadata(v *UploadMetadata) {
	if v == nil {
		x.xxx_hidden_Data = nil
		return
	}
	x.xxx_hidden_Data = &uploadMediaRequest_Metadata{v}
}

func (x *UploadMediaRequest) SetChunk(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = &uploadMediaRequest_Chunk{v}
}

func (x *UploadMediaRequest) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *UploadMediaRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*uploadMediaRequest_Metadata)
	return ok
}

func (x *UploadMediaRequest) HasChunk() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*uploadMediaRequest_Chunk)
	return ok
}

func (x *UploadMediaRequest) ClearData() {
	x.xxx_hidden_Data = nil
}

func (x *UploadMediaRequest) ClearMetadata() {
	if _, ok := x.xxx_hidden_Data.(*uploadMediaRequest_Metadata); ok {
		x.xxx_hidden_Data = nil
	}
}

func (x *UploadMediaRequest) ClearChunk() {
	if _, ok := x.xxx_hidden_Data.(*uploadMediaRequest_Chunk); ok {
		x.xxx_hidden_Data = nil
	}
}

const UploadMediaRequest_Data_not_set_case case_UploadMediaRequest_Data = 0
const UploadMediaRequest_Metadata_case case_UploadMediaRequest_Data = 1
const UploadMediaRequest_Chunk_case case_UploadMediaRequest_Data = 2

func (x *UploadMediaRequest) WhichData() case_UploadMediaRequest_Data {
	if x == nil {
		return UploadMediaRequest_Data_not_set_case
	}
	switch x.xxx_hidden_Data.(type) {
	case *uploadMediaRequest_Metadata:
		return UploadMediaRequest_Metadata_case
	case *uploadMediaRequest_Chunk:
		return UploadMediaRequest_Chunk_case
	default:
		return UploadMediaRequest_Data_not_set_case
	}
}

type UploadMediaRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Data:
	Metadata *UploadMetadata
	Chunk    []byte
	// -- end of xxx_hidden_Data
}

func (b0 UploadMediaRequest_builder) Build() *UploadMediaRequest {
	m0 := &UploadMediaRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Metadata != nil {
		x.xxx_hidden_Data = &uploadMediaRequest_Metadata{b.Metadata}
	}
	if b.Chunk != nil {
		x.xxx_hidden_Data = &uploadMediaRequest_Chunk{b.Chunk}
	}
	return m0
}

type case_UploadMediaRequest_Data protoreflect.FieldNumber

func (x case_UploadMediaRequest_Data) String() string {
	md := file_gcommon_v1_media_upload_media_request_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isUploadMediaRequest_Data interface {
	isUploadMediaRequest_Data()
}

type uploadMediaRequest_Metadata struct {
	Metadata *UploadMetadata `protobuf:"bytes,1,opt,name=metadata,oneof"`
}

type uploadMediaRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,oneof"`
}

func (*uploadMediaRequest_Metadata) isUploadMediaRequest_Data() {}

func (*uploadMediaRequest_Chunk) isUploadMediaRequest_Data() {}

// Metadata for media upload.
type UploadMetadata struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Filename      *string                `protobuf:"bytes,1,opt,name=filename"`
	xxx_hidden_ContentType   *string                `protobuf:"bytes,2,opt,name=content_type,json=contentType"`
	xxx_hidden_TotalSize     int64                  `protobuf:"varint,3,opt,name=total_size,json=totalSize"`
	xxx_hidden_MediaMetadata *MediaMetadata         `protobuf:"bytes,4,opt,name=media_metadata,json=mediaMetadata"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *UploadMetadata) Reset() {
	*x = UploadMetadata{}
	mi := &file_gcommon_v1_media_upload_media_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMetadata) ProtoMessage() {}

func (x *UploadMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_media_upload_media_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UploadMetadata) GetFilename() string {
	if x != nil {
		if x.xxx_hidden_Filename != nil {
			return *x.xxx_hidden_Filename
		}
		return ""
	}
	return ""
}

func (x *UploadMetadata) GetContentType() string {
	if x != nil {
		if x.xxx_hidden_ContentType != nil {
			return *x.xxx_hidden_ContentType
		}
		return ""
	}
	return ""
}

func (x *UploadMetadata) GetTotalSize() int64 {
	if x != nil {
		return x.xxx_hidden_TotalSize
	}
	return 0
}

func (x *UploadMetadata) GetMediaMetadata() *MediaMetadata {
	if x != nil {
		return x.xxx_hidden_MediaMetadata
	}
	return nil
}

func (x *UploadMetadata) SetFilename(v string) {
	x.xxx_hidden_Filename = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *UploadMetadata) SetContentType(v string) {
	x.xxx_hidden_ContentType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *UploadMetadata) SetTotalSize(v int64) {
	x.xxx_hidden_TotalSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *UploadMetadata) SetMediaMetadata(v *MediaMetadata) {
	x.xxx_hidden_MediaMetadata = v
}

func (x *UploadMetadata) HasFilename() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UploadMetadata) HasContentType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UploadMetadata) HasTotalSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UploadMetadata) HasMediaMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_MediaMetadata != nil
}

func (x *UploadMetadata) ClearFilename() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Filename = nil
}

func (x *UploadMetadata) ClearContentType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ContentType = nil
}

func (x *UploadMetadata) ClearTotalSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalSize = 0
}

func (x *UploadMetadata) ClearMediaMetadata() {
	x.xxx_hidden_MediaMetadata = nil
}

type UploadMetadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Filename      *string
	ContentType   *string
	TotalSize     *int64
	MediaMetadata *MediaMetadata
}

func (b0 UploadMetadata_builder) Build() *UploadMetadata {
	m0 := &UploadMetadata{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Filename != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Filename = b.Filename
	}
	if b.ContentType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ContentType = b.ContentType
	}
	if b.TotalSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_TotalSize = *b.TotalSize
	}
	x.xxx_hidden_MediaMetadata = b.MediaMetadata
	return m0
}

var File_gcommon_v1_media_upload_media_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_media_upload_media_request_proto_rawDesc = "" +
	"\n" +
	"+gcommon/v1/media/upload_media_request.proto\x12\x10gcommon.v1.media\x1a%gcommon/v1/media/media_metadata.proto\x1a!google/protobuf/go_features.proto\"t\n" +
	"\x12UploadMediaRequest\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2 .gcommon.v1.media.UploadMetadataH\x00R\bmetadata\x12\x16\n" +
	"\x05chunk\x18\x02 \x01(\fH\x00R\x05chunkB\x06\n" +
	"\x04data\"\xb6\x01\n" +
	"\x0eUploadMetadata\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x03R\ttotalSize\x12F\n" +
	"\x0emedia_metadata\x18\x04 \x01(\v2\x1f.gcommon.v1.media.MediaMetadataR\rmediaMetadataB4Z*github.com/jdfalk/gcommon/sdks/go/v1/media\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_media_upload_media_request_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_media_upload_media_request_proto_goTypes = []any{
	(*UploadMediaRequest)(nil), // 0: gcommon.v1.media.UploadMediaRequest
	(*UploadMetadata)(nil),     // 1: gcommon.v1.media.UploadMetadata
	(*MediaMetadata)(nil),      // 2: gcommon.v1.media.MediaMetadata
}
var file_gcommon_v1_media_upload_media_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.media.UploadMediaRequest.metadata:type_name -> gcommon.v1.media.UploadMetadata
	2, // 1: gcommon.v1.media.UploadMetadata.media_metadata:type_name -> gcommon.v1.media.MediaMetadata
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_media_upload_media_request_proto_init() }
func file_gcommon_v1_media_upload_media_request_proto_init() {
	if File_gcommon_v1_media_upload_media_request_proto != nil {
		return
	}
	file_gcommon_v1_media_media_metadata_proto_init()
	file_gcommon_v1_media_upload_media_request_proto_msgTypes[0].OneofWrappers = []any{
		(*uploadMediaRequest_Metadata)(nil),
		(*uploadMediaRequest_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_media_upload_media_request_proto_rawDesc), len(file_gcommon_v1_media_upload_media_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_media_upload_media_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_media_upload_media_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_media_upload_media_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_media_upload_media_request_proto = out.File
	file_gcommon_v1_media_upload_media_request_proto_goTypes = nil
	file_gcommon_v1_media_upload_media_request_proto_depIdxs = nil
}
