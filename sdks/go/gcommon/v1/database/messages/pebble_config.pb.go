// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/database/messages/pebble_config.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// PebbleConfig represents Pebble-specific configuration options
// for the embedded key-value store driver.
type PebbleConfig struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Path         *string                `protobuf:"bytes,1,opt,name=path"`
	xxx_hidden_CacheSize    int64                  `protobuf:"varint,2,opt,name=cache_size,json=cacheSize"`
	xxx_hidden_MemtableSize int64                  `protobuf:"varint,3,opt,name=memtable_size,json=memtableSize"`
	xxx_hidden_MaxOpenFiles int32                  `protobuf:"varint,4,opt,name=max_open_files,json=maxOpenFiles"`
	xxx_hidden_Compression  bool                   `protobuf:"varint,5,opt,name=compression"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PebbleConfig) Reset() {
	*x = PebbleConfig{}
	mi := &file_gcommon_v1_database_messages_pebble_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PebbleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PebbleConfig) ProtoMessage() {}

func (x *PebbleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_database_messages_pebble_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PebbleConfig) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *PebbleConfig) GetCacheSize() int64 {
	if x != nil {
		return x.xxx_hidden_CacheSize
	}
	return 0
}

func (x *PebbleConfig) GetMemtableSize() int64 {
	if x != nil {
		return x.xxx_hidden_MemtableSize
	}
	return 0
}

func (x *PebbleConfig) GetMaxOpenFiles() int32 {
	if x != nil {
		return x.xxx_hidden_MaxOpenFiles
	}
	return 0
}

func (x *PebbleConfig) GetCompression() bool {
	if x != nil {
		return x.xxx_hidden_Compression
	}
	return false
}

func (x *PebbleConfig) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *PebbleConfig) SetCacheSize(v int64) {
	x.xxx_hidden_CacheSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *PebbleConfig) SetMemtableSize(v int64) {
	x.xxx_hidden_MemtableSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *PebbleConfig) SetMaxOpenFiles(v int32) {
	x.xxx_hidden_MaxOpenFiles = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *PebbleConfig) SetCompression(v bool) {
	x.xxx_hidden_Compression = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *PebbleConfig) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PebbleConfig) HasCacheSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PebbleConfig) HasMemtableSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PebbleConfig) HasMaxOpenFiles() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PebbleConfig) HasCompression() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *PebbleConfig) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Path = nil
}

func (x *PebbleConfig) ClearCacheSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CacheSize = 0
}

func (x *PebbleConfig) ClearMemtableSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MemtableSize = 0
}

func (x *PebbleConfig) ClearMaxOpenFiles() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MaxOpenFiles = 0
}

func (x *PebbleConfig) ClearCompression() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Compression = false
}

type PebbleConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Path is the directory where the database files are stored
	Path *string
	// CacheSize is the size of the block cache in bytes
	CacheSize *int64
	// MemtableSize is the memtable size in bytes
	MemtableSize *int64
	// MaxOpenFiles is the maximum number of open files
	MaxOpenFiles *int32
	// Compression enables on-disk compression when true
	Compression *bool
}

func (b0 PebbleConfig_builder) Build() *PebbleConfig {
	m0 := &PebbleConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Path = b.Path
	}
	if b.CacheSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_CacheSize = *b.CacheSize
	}
	if b.MemtableSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_MemtableSize = *b.MemtableSize
	}
	if b.MaxOpenFiles != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_MaxOpenFiles = *b.MaxOpenFiles
	}
	if b.Compression != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Compression = *b.Compression
	}
	return m0
}

var File_gcommon_v1_database_messages_pebble_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_database_messages_pebble_config_proto_rawDesc = "" +
	"\n" +
	"0gcommon/v1/database/messages/pebble_config.proto\x12\x13gcommon.v1.database\x1a!google/protobuf/go_features.proto\"\xae\x01\n" +
	"\fPebbleConfig\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1d\n" +
	"\n" +
	"cache_size\x18\x02 \x01(\x03R\tcacheSize\x12#\n" +
	"\rmemtable_size\x18\x03 \x01(\x03R\fmemtableSize\x12$\n" +
	"\x0emax_open_files\x18\x04 \x01(\x05R\fmaxOpenFiles\x12 \n" +
	"\vcompression\x18\x05 \x01(\bR\vcompressionB\xe2\x01\n" +
	"\x17com.gcommon.v1.databaseB\x11PebbleConfigProtoP\x01Z>github.com/jdfalk/gcommon/sdks/go/gcommon/v1/database/messages\xa2\x02\x03GVD\xaa\x02\x13Gcommon.V1.Database\xca\x02\x13Gcommon\\V1\\Database\xe2\x02\x1fGcommon\\V1\\Database\\GPBMetadata\xea\x02\x15Gcommon::V1::Database\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_database_messages_pebble_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_database_messages_pebble_config_proto_goTypes = []any{
	(*PebbleConfig)(nil), // 0: gcommon.v1.database.PebbleConfig
}
var file_gcommon_v1_database_messages_pebble_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_database_messages_pebble_config_proto_init() }
func file_gcommon_v1_database_messages_pebble_config_proto_init() {
	if File_gcommon_v1_database_messages_pebble_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_database_messages_pebble_config_proto_rawDesc), len(file_gcommon_v1_database_messages_pebble_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_database_messages_pebble_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_database_messages_pebble_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_database_messages_pebble_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_database_messages_pebble_config_proto = out.File
	file_gcommon_v1_database_messages_pebble_config_proto_goTypes = nil
	file_gcommon_v1_database_messages_pebble_config_proto_depIdxs = nil
}
