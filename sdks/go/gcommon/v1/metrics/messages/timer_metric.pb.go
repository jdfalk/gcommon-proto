// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/metrics/messages/timer_metric.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimerMetric struct {
	state                    protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_TimerId       *string                   `protobuf:"bytes,1,opt,name=timer_id,json=timerId"`
	xxx_hidden_Name          *string                   `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_StartTime     *timestamppb.Timestamp    `protobuf:"bytes,3,opt,name=start_time,json=startTime"`
	xxx_hidden_EndTime       *timestamppb.Timestamp    `protobuf:"bytes,4,opt,name=end_time,json=endTime"`
	xxx_hidden_Duration      *durationpb.Duration      `protobuf:"bytes,5,opt,name=duration"`
	xxx_hidden_Tags          map[string]string         `protobuf:"bytes,6,rep,name=tags" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Statistics    *TimerStatistics          `protobuf:"bytes,7,opt,name=statistics"`
	xxx_hidden_IsRunning     bool                      `protobuf:"varint,8,opt,name=is_running,json=isRunning"`
	xxx_hidden_Count         int64                     `protobuf:"varint,9,opt,name=count"`
	xxx_hidden_TotalDuration *durationpb.Duration      `protobuf:"bytes,10,opt,name=total_duration,json=totalDuration"`
	xxx_hidden_Percentiles   *[]*PercentileMeasurement `protobuf:"bytes,11,rep,name=percentiles"`
	xxx_hidden_RecordedAt    *timestamppb.Timestamp    `protobuf:"bytes,12,opt,name=recorded_at,json=recordedAt"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *TimerMetric) Reset() {
	*x = TimerMetric{}
	mi := &file_gcommon_v1_metrics_messages_timer_metric_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimerMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerMetric) ProtoMessage() {}

func (x *TimerMetric) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_metrics_messages_timer_metric_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TimerMetric) GetTimerId() string {
	if x != nil {
		if x.xxx_hidden_TimerId != nil {
			return *x.xxx_hidden_TimerId
		}
		return ""
	}
	return ""
}

func (x *TimerMetric) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *TimerMetric) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_StartTime
	}
	return nil
}

func (x *TimerMetric) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_EndTime
	}
	return nil
}

func (x *TimerMetric) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Duration
	}
	return nil
}

func (x *TimerMetric) GetTags() map[string]string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *TimerMetric) GetStatistics() *TimerStatistics {
	if x != nil {
		return x.xxx_hidden_Statistics
	}
	return nil
}

func (x *TimerMetric) GetIsRunning() bool {
	if x != nil {
		return x.xxx_hidden_IsRunning
	}
	return false
}

func (x *TimerMetric) GetCount() int64 {
	if x != nil {
		return x.xxx_hidden_Count
	}
	return 0
}

func (x *TimerMetric) GetTotalDuration() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_TotalDuration
	}
	return nil
}

func (x *TimerMetric) GetPercentiles() []*PercentileMeasurement {
	if x != nil {
		if x.xxx_hidden_Percentiles != nil {
			return *x.xxx_hidden_Percentiles
		}
	}
	return nil
}

func (x *TimerMetric) GetRecordedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_RecordedAt
	}
	return nil
}

func (x *TimerMetric) SetTimerId(v string) {
	x.xxx_hidden_TimerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 12)
}

func (x *TimerMetric) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 12)
}

func (x *TimerMetric) SetStartTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_StartTime = v
}

func (x *TimerMetric) SetEndTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_EndTime = v
}

func (x *TimerMetric) SetDuration(v *durationpb.Duration) {
	x.xxx_hidden_Duration = v
}

func (x *TimerMetric) SetTags(v map[string]string) {
	x.xxx_hidden_Tags = v
}

func (x *TimerMetric) SetStatistics(v *TimerStatistics) {
	x.xxx_hidden_Statistics = v
}

func (x *TimerMetric) SetIsRunning(v bool) {
	x.xxx_hidden_IsRunning = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 12)
}

func (x *TimerMetric) SetCount(v int64) {
	x.xxx_hidden_Count = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 12)
}

func (x *TimerMetric) SetTotalDuration(v *durationpb.Duration) {
	x.xxx_hidden_TotalDuration = v
}

func (x *TimerMetric) SetPercentiles(v []*PercentileMeasurement) {
	x.xxx_hidden_Percentiles = &v
}

func (x *TimerMetric) SetRecordedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_RecordedAt = v
}

func (x *TimerMetric) HasTimerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TimerMetric) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TimerMetric) HasStartTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StartTime != nil
}

func (x *TimerMetric) HasEndTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EndTime != nil
}

func (x *TimerMetric) HasDuration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Duration != nil
}

func (x *TimerMetric) HasStatistics() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Statistics != nil
}

func (x *TimerMetric) HasIsRunning() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *TimerMetric) HasCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *TimerMetric) HasTotalDuration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TotalDuration != nil
}

func (x *TimerMetric) HasRecordedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RecordedAt != nil
}

func (x *TimerMetric) ClearTimerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TimerId = nil
}

func (x *TimerMetric) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *TimerMetric) ClearStartTime() {
	x.xxx_hidden_StartTime = nil
}

func (x *TimerMetric) ClearEndTime() {
	x.xxx_hidden_EndTime = nil
}

func (x *TimerMetric) ClearDuration() {
	x.xxx_hidden_Duration = nil
}

func (x *TimerMetric) ClearStatistics() {
	x.xxx_hidden_Statistics = nil
}

func (x *TimerMetric) ClearIsRunning() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_IsRunning = false
}

func (x *TimerMetric) ClearCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Count = 0
}

func (x *TimerMetric) ClearTotalDuration() {
	x.xxx_hidden_TotalDuration = nil
}

func (x *TimerMetric) ClearRecordedAt() {
	x.xxx_hidden_RecordedAt = nil
}

type TimerMetric_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique identifier for this timer measurement
	TimerId *string
	// Name or label for this timer (e.g., "api_request_duration")
	Name *string
	// Start time of the measured operation
	StartTime *timestamppb.Timestamp
	// End time of the measured operation
	EndTime *timestamppb.Timestamp
	// Duration of the measured operation
	Duration *durationpb.Duration
	// Tags/labels for categorization and filtering
	Tags map[string]string
	// Statistical aggregations for this timer
	Statistics *TimerStatistics
	// Whether this timer is currently running
	IsRunning *bool
	// Number of times this timer has been recorded
	Count *int64
	// Total accumulated time across all recordings
	TotalDuration *durationpb.Duration
	// Percentile measurements
	Percentiles []*PercentileMeasurement
	// Timestamp when this metric was recorded
	RecordedAt *timestamppb.Timestamp
}

func (b0 TimerMetric_builder) Build() *TimerMetric {
	m0 := &TimerMetric{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TimerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 12)
		x.xxx_hidden_TimerId = b.TimerId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 12)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_StartTime = b.StartTime
	x.xxx_hidden_EndTime = b.EndTime
	x.xxx_hidden_Duration = b.Duration
	x.xxx_hidden_Tags = b.Tags
	x.xxx_hidden_Statistics = b.Statistics
	if b.IsRunning != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 12)
		x.xxx_hidden_IsRunning = *b.IsRunning
	}
	if b.Count != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 12)
		x.xxx_hidden_Count = *b.Count
	}
	x.xxx_hidden_TotalDuration = b.TotalDuration
	x.xxx_hidden_Percentiles = &b.Percentiles
	x.xxx_hidden_RecordedAt = b.RecordedAt
	return m0
}

var File_gcommon_v1_metrics_messages_timer_metric_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_messages_timer_metric_proto_rawDesc = "" +
	"\n" +
	".gcommon/v1/metrics/messages/timer_metric.proto\x12\x12gcommon.v1.metrics\x1a8gcommon/v1/metrics/messages/percentile_measurement.proto\x1a2gcommon/v1/metrics/messages/timer_statistics.proto\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa3\x05\n" +
	"\vTimerMetric\x12\x19\n" +
	"\btimer_id\x18\x01 \x01(\tR\atimerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x125\n" +
	"\bduration\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\bduration\x12=\n" +
	"\x04tags\x18\x06 \x03(\v2).gcommon.v1.metrics.TimerMetric.TagsEntryR\x04tags\x12C\n" +
	"\n" +
	"statistics\x18\a \x01(\v2#.gcommon.v1.metrics.TimerStatisticsR\n" +
	"statistics\x12\x1d\n" +
	"\n" +
	"is_running\x18\b \x01(\bR\tisRunning\x12\x14\n" +
	"\x05count\x18\t \x01(\x03R\x05count\x12@\n" +
	"\x0etotal_duration\x18\n" +
	" \x01(\v2\x19.google.protobuf.DurationR\rtotalDuration\x12K\n" +
	"\vpercentiles\x18\v \x03(\v2).gcommon.v1.metrics.PercentileMeasurementR\vpercentiles\x12;\n" +
	"\vrecorded_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"recordedAt\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B3Z)github.com/jdfalk/gcommon/sdks/go/metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_messages_timer_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_metrics_messages_timer_metric_proto_goTypes = []any{
	(*TimerMetric)(nil),           // 0: gcommon.v1.metrics.TimerMetric
	nil,                           // 1: gcommon.v1.metrics.TimerMetric.TagsEntry
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 3: google.protobuf.Duration
	(*TimerStatistics)(nil),       // 4: gcommon.v1.metrics.TimerStatistics
	(*PercentileMeasurement)(nil), // 5: gcommon.v1.metrics.PercentileMeasurement
}
var file_gcommon_v1_metrics_messages_timer_metric_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.metrics.TimerMetric.start_time:type_name -> google.protobuf.Timestamp
	2, // 1: gcommon.v1.metrics.TimerMetric.end_time:type_name -> google.protobuf.Timestamp
	3, // 2: gcommon.v1.metrics.TimerMetric.duration:type_name -> google.protobuf.Duration
	1, // 3: gcommon.v1.metrics.TimerMetric.tags:type_name -> gcommon.v1.metrics.TimerMetric.TagsEntry
	4, // 4: gcommon.v1.metrics.TimerMetric.statistics:type_name -> gcommon.v1.metrics.TimerStatistics
	3, // 5: gcommon.v1.metrics.TimerMetric.total_duration:type_name -> google.protobuf.Duration
	5, // 6: gcommon.v1.metrics.TimerMetric.percentiles:type_name -> gcommon.v1.metrics.PercentileMeasurement
	2, // 7: gcommon.v1.metrics.TimerMetric.recorded_at:type_name -> google.protobuf.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_messages_timer_metric_proto_init() }
func file_gcommon_v1_metrics_messages_timer_metric_proto_init() {
	if File_gcommon_v1_metrics_messages_timer_metric_proto != nil {
		return
	}
	file_gcommon_v1_metrics_messages_percentile_measurement_proto_init()
	file_gcommon_v1_metrics_messages_timer_statistics_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_messages_timer_metric_proto_rawDesc), len(file_gcommon_v1_metrics_messages_timer_metric_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_messages_timer_metric_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_messages_timer_metric_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_metrics_messages_timer_metric_proto_msgTypes,
	}.Build()
	File_gcommon_v1_metrics_messages_timer_metric_proto = out.File
	file_gcommon_v1_metrics_messages_timer_metric_proto_goTypes = nil
	file_gcommon_v1_metrics_messages_timer_metric_proto_depIdxs = nil
}
