// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/metrics/messages/schema_change.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SchemaChange struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ChangeType         *string                `protobuf:"bytes,1,opt,name=change_type,json=changeType"`
	xxx_hidden_Description        *string                `protobuf:"bytes,2,opt,name=description"`
	xxx_hidden_BackwardCompatible bool                   `protobuf:"varint,3,opt,name=backward_compatible,json=backwardCompatible"`
	xxx_hidden_MigrationSteps     []string               `protobuf:"bytes,4,rep,name=migration_steps,json=migrationSteps"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *SchemaChange) Reset() {
	*x = SchemaChange{}
	mi := &file_gcommon_v1_metrics_messages_schema_change_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchemaChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaChange) ProtoMessage() {}

func (x *SchemaChange) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_metrics_messages_schema_change_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SchemaChange) GetChangeType() string {
	if x != nil {
		if x.xxx_hidden_ChangeType != nil {
			return *x.xxx_hidden_ChangeType
		}
		return ""
	}
	return ""
}

func (x *SchemaChange) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *SchemaChange) GetBackwardCompatible() bool {
	if x != nil {
		return x.xxx_hidden_BackwardCompatible
	}
	return false
}

func (x *SchemaChange) GetMigrationSteps() []string {
	if x != nil {
		return x.xxx_hidden_MigrationSteps
	}
	return nil
}

func (x *SchemaChange) SetChangeType(v string) {
	x.xxx_hidden_ChangeType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *SchemaChange) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *SchemaChange) SetBackwardCompatible(v bool) {
	x.xxx_hidden_BackwardCompatible = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *SchemaChange) SetMigrationSteps(v []string) {
	x.xxx_hidden_MigrationSteps = v
}

func (x *SchemaChange) HasChangeType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SchemaChange) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SchemaChange) HasBackwardCompatible() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SchemaChange) ClearChangeType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ChangeType = nil
}

func (x *SchemaChange) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Description = nil
}

func (x *SchemaChange) ClearBackwardCompatible() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_BackwardCompatible = false
}

type SchemaChange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Type of change made
	ChangeType *string
	// Description of the change
	Description *string
	// Whether this change is backward compatible
	BackwardCompatible *bool
	// Migration steps required (if any)
	MigrationSteps []string
}

func (b0 SchemaChange_builder) Build() *SchemaChange {
	m0 := &SchemaChange{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ChangeType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ChangeType = b.ChangeType
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Description = b.Description
	}
	if b.BackwardCompatible != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_BackwardCompatible = *b.BackwardCompatible
	}
	x.xxx_hidden_MigrationSteps = b.MigrationSteps
	return m0
}

var File_gcommon_v1_metrics_messages_schema_change_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_messages_schema_change_proto_rawDesc = "" +
	"\n" +
	"/gcommon/v1/metrics/messages/schema_change.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto\"\xab\x01\n" +
	"\fSchemaChange\x12\x1f\n" +
	"\vchange_type\x18\x01 \x01(\tR\n" +
	"changeType\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12/\n" +
	"\x13backward_compatible\x18\x03 \x01(\bR\x12backwardCompatible\x12'\n" +
	"\x0fmigration_steps\x18\x04 \x03(\tR\x0emigrationStepsB\xdc\x01\n" +
	"\x16com.gcommon.v1.metricsB\x11SchemaChangeProtoP\x01Z=github.com/jdfalk/gcommon/sdks/go/gcommon/v1/metrics/messages\xa2\x02\x03GVM\xaa\x02\x12Gcommon.V1.Metrics\xca\x02\x12Gcommon\\V1\\Metrics\xe2\x02\x1eGcommon\\V1\\Metrics\\GPBMetadata\xea\x02\x14Gcommon::V1::Metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_messages_schema_change_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_metrics_messages_schema_change_proto_goTypes = []any{
	(*SchemaChange)(nil), // 0: gcommon.v1.metrics.SchemaChange
}
var file_gcommon_v1_metrics_messages_schema_change_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_messages_schema_change_proto_init() }
func file_gcommon_v1_metrics_messages_schema_change_proto_init() {
	if File_gcommon_v1_metrics_messages_schema_change_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_messages_schema_change_proto_rawDesc), len(file_gcommon_v1_metrics_messages_schema_change_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_messages_schema_change_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_messages_schema_change_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_metrics_messages_schema_change_proto_msgTypes,
	}.Build()
	File_gcommon_v1_metrics_messages_schema_change_proto = out.File
	file_gcommon_v1_metrics_messages_schema_change_proto_goTypes = nil
	file_gcommon_v1_metrics_messages_schema_change_proto_depIdxs = nil
}
