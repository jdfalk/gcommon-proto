// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/metrics/enums/metric_type.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// MetricType defines the different types of metrics that can be collected.
// Each type has specific semantics for how values are interpreted and aggregated.
type MetricsMetricType int32

const (
	// Unspecified metric type
	MetricsMetricType_METRIC_TYPE_UNSPECIFIED MetricsMetricType = 0
	// Counter: A monotonically increasing value (can only go up)
	MetricsMetricType_METRIC_TYPE_COUNTER MetricsMetricType = 1
	// Gauge: A value that can go up and down
	MetricsMetricType_METRIC_TYPE_GAUGE MetricsMetricType = 2
	// Histogram: Distribution of observed values in buckets
	MetricsMetricType_METRIC_TYPE_HISTOGRAM MetricsMetricType = 3
	// Summary: Similar to histogram but with configurable quantiles
	MetricsMetricType_METRIC_TYPE_SUMMARY MetricsMetricType = 4
	// Timer: Specialized counter for measuring durations
	MetricsMetricType_METRIC_TYPE_TIMER MetricsMetricType = 5
	// Set: Track unique values (cardinality metric)
	MetricsMetricType_METRIC_TYPE_SET MetricsMetricType = 6
)

// Enum value maps for MetricsMetricType.
var (
	MetricsMetricType_name = map[int32]string{
		0: "METRIC_TYPE_UNSPECIFIED",
		1: "METRIC_TYPE_COUNTER",
		2: "METRIC_TYPE_GAUGE",
		3: "METRIC_TYPE_HISTOGRAM",
		4: "METRIC_TYPE_SUMMARY",
		5: "METRIC_TYPE_TIMER",
		6: "METRIC_TYPE_SET",
	}
	MetricsMetricType_value = map[string]int32{
		"METRIC_TYPE_UNSPECIFIED": 0,
		"METRIC_TYPE_COUNTER":     1,
		"METRIC_TYPE_GAUGE":       2,
		"METRIC_TYPE_HISTOGRAM":   3,
		"METRIC_TYPE_SUMMARY":     4,
		"METRIC_TYPE_TIMER":       5,
		"METRIC_TYPE_SET":         6,
	}
)

func (x MetricsMetricType) Enum() *MetricsMetricType {
	p := new(MetricsMetricType)
	*p = x
	return p
}

func (x MetricsMetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricsMetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_gcommon_v1_metrics_enums_metric_type_proto_enumTypes[0].Descriptor()
}

func (MetricsMetricType) Type() protoreflect.EnumType {
	return &file_gcommon_v1_metrics_enums_metric_type_proto_enumTypes[0]
}

func (x MetricsMetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_gcommon_v1_metrics_enums_metric_type_proto protoreflect.FileDescriptor

const file_gcommon_v1_metrics_enums_metric_type_proto_rawDesc = "" +
	"\n" +
	"*gcommon/v1/metrics/enums/metric_type.proto\x12\x12gcommon.v1.metrics\x1a!google/protobuf/go_features.proto*\xc0\x01\n" +
	"\x11MetricsMetricType\x12\x1b\n" +
	"\x17METRIC_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13METRIC_TYPE_COUNTER\x10\x01\x12\x15\n" +
	"\x11METRIC_TYPE_GAUGE\x10\x02\x12\x19\n" +
	"\x15METRIC_TYPE_HISTOGRAM\x10\x03\x12\x17\n" +
	"\x13METRIC_TYPE_SUMMARY\x10\x04\x12\x15\n" +
	"\x11METRIC_TYPE_TIMER\x10\x05\x12\x13\n" +
	"\x0fMETRIC_TYPE_SET\x10\x06B/Z%github.com/jdfalk/gcommon/pkg/metrics\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_metrics_enums_metric_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gcommon_v1_metrics_enums_metric_type_proto_goTypes = []any{
	(MetricsMetricType)(0), // 0: gcommon.v1.metrics.MetricsMetricType
}
var file_gcommon_v1_metrics_enums_metric_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_metrics_enums_metric_type_proto_init() }
func file_gcommon_v1_metrics_enums_metric_type_proto_init() {
	if File_gcommon_v1_metrics_enums_metric_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_metrics_enums_metric_type_proto_rawDesc), len(file_gcommon_v1_metrics_enums_metric_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_metrics_enums_metric_type_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_metrics_enums_metric_type_proto_depIdxs,
		EnumInfos:         file_gcommon_v1_metrics_enums_metric_type_proto_enumTypes,
	}.Build()
	File_gcommon_v1_metrics_enums_metric_type_proto = out.File
	file_gcommon_v1_metrics_enums_metric_type_proto_goTypes = nil
	file_gcommon_v1_metrics_enums_metric_type_proto_depIdxs = nil
}
