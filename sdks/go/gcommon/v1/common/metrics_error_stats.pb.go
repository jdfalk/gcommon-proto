// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/common/metrics_error_stats.proto

package common

import (
	metrics "github.com/jdfalk/gcommon/sdks/go/v1/metrics"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetricsErrorStats struct {
	state                  protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_TotalErrors int64                      `protobuf:"varint,1,opt,name=total_errors,json=totalErrors"`
	xxx_hidden_ErrorRate   float64                    `protobuf:"fixed64,2,opt,name=error_rate,json=errorRate"`
	xxx_hidden_ErrorTypes  *[]*metrics.ErrorTypeCount `protobuf:"bytes,3,rep,name=error_types,json=errorTypes"`
	xxx_hidden_ErrorTrend  *string                    `protobuf:"bytes,4,opt,name=error_trend,json=errorTrend"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MetricsErrorStats) Reset() {
	*x = MetricsErrorStats{}
	mi := &file_gcommon_v1_common_metrics_error_stats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsErrorStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsErrorStats) ProtoMessage() {}

func (x *MetricsErrorStats) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_common_metrics_error_stats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MetricsErrorStats) GetTotalErrors() int64 {
	if x != nil {
		return x.xxx_hidden_TotalErrors
	}
	return 0
}

func (x *MetricsErrorStats) GetErrorRate() float64 {
	if x != nil {
		return x.xxx_hidden_ErrorRate
	}
	return 0
}

func (x *MetricsErrorStats) GetErrorTypes() []*metrics.ErrorTypeCount {
	if x != nil {
		if x.xxx_hidden_ErrorTypes != nil {
			return *x.xxx_hidden_ErrorTypes
		}
	}
	return nil
}

func (x *MetricsErrorStats) GetErrorTrend() string {
	if x != nil {
		if x.xxx_hidden_ErrorTrend != nil {
			return *x.xxx_hidden_ErrorTrend
		}
		return ""
	}
	return ""
}

func (x *MetricsErrorStats) SetTotalErrors(v int64) {
	x.xxx_hidden_TotalErrors = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *MetricsErrorStats) SetErrorRate(v float64) {
	x.xxx_hidden_ErrorRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *MetricsErrorStats) SetErrorTypes(v []*metrics.ErrorTypeCount) {
	x.xxx_hidden_ErrorTypes = &v
}

func (x *MetricsErrorStats) SetErrorTrend(v string) {
	x.xxx_hidden_ErrorTrend = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *MetricsErrorStats) HasTotalErrors() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MetricsErrorStats) HasErrorRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MetricsErrorStats) HasErrorTrend() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MetricsErrorStats) ClearTotalErrors() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TotalErrors = 0
}

func (x *MetricsErrorStats) ClearErrorRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ErrorRate = 0
}

func (x *MetricsErrorStats) ClearErrorTrend() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ErrorTrend = nil
}

type MetricsErrorStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Total number of errors
	TotalErrors *int64
	// Error rate (errors per total operations)
	ErrorRate *float64
	// Most common error types
	ErrorTypes []*metrics.ErrorTypeCount
	// Recent error trend (increasing/decreasing/stable)
	ErrorTrend *string
}

func (b0 MetricsErrorStats_builder) Build() *MetricsErrorStats {
	m0 := &MetricsErrorStats{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TotalErrors != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_TotalErrors = *b.TotalErrors
	}
	if b.ErrorRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ErrorRate = *b.ErrorRate
	}
	x.xxx_hidden_ErrorTypes = &b.ErrorTypes
	if b.ErrorTrend != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ErrorTrend = b.ErrorTrend
	}
	return m0
}

var File_gcommon_v1_common_metrics_error_stats_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_metrics_error_stats_proto_rawDesc = "" +
	"\n" +
	"+gcommon/v1/common/metrics_error_stats.proto\x12\x11gcommon.v1.common\x1a)gcommon/v1/metrics/error_type_count.proto\x1a!google/protobuf/go_features.proto\"\xbb\x01\n" +
	"\x11MetricsErrorStats\x12!\n" +
	"\ftotal_errors\x18\x01 \x01(\x03R\vtotalErrors\x12\x1d\n" +
	"\n" +
	"error_rate\x18\x02 \x01(\x01R\terrorRate\x12C\n" +
	"\verror_types\x18\x03 \x03(\v2\".gcommon.v1.metrics.ErrorTypeCountR\n" +
	"errorTypes\x12\x1f\n" +
	"\verror_trend\x18\x04 \x01(\tR\n" +
	"errorTrendB4Z*github.com/jdfalk/gcommon/sdk/go/v1/common\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_metrics_error_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_common_metrics_error_stats_proto_goTypes = []any{
	(*MetricsErrorStats)(nil),      // 0: gcommon.v1.common.MetricsErrorStats
	(*metrics.ErrorTypeCount)(nil), // 1: gcommon.v1.metrics.ErrorTypeCount
}
var file_gcommon_v1_common_metrics_error_stats_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.common.MetricsErrorStats.error_types:type_name -> gcommon.v1.metrics.ErrorTypeCount
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_metrics_error_stats_proto_init() }
func file_gcommon_v1_common_metrics_error_stats_proto_init() {
	if File_gcommon_v1_common_metrics_error_stats_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_metrics_error_stats_proto_rawDesc), len(file_gcommon_v1_common_metrics_error_stats_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_metrics_error_stats_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_metrics_error_stats_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_common_metrics_error_stats_proto_msgTypes,
	}.Build()
	File_gcommon_v1_common_metrics_error_stats_proto = out.File
	file_gcommon_v1_common_metrics_error_stats_proto_goTypes = nil
	file_gcommon_v1_common_metrics_error_stats_proto_depIdxs = nil
}
