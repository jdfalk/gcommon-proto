// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/common/messages/pagination_info.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonPaginationInfo struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CurrentPage       int32                  `protobuf:"varint,1,opt,name=current_page,json=currentPage"`
	xxx_hidden_PageSize          int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize"`
	xxx_hidden_TotalItems        int64                  `protobuf:"varint,3,opt,name=total_items,json=totalItems"`
	xxx_hidden_TotalPages        int32                  `protobuf:"varint,4,opt,name=total_pages,json=totalPages"`
	xxx_hidden_HasNext           bool                   `protobuf:"varint,5,opt,name=has_next,json=hasNext"`
	xxx_hidden_HasPrevious       bool                   `protobuf:"varint,6,opt,name=has_previous,json=hasPrevious"`
	xxx_hidden_NextPageToken     *string                `protobuf:"bytes,7,opt,name=next_page_token,json=nextPageToken"`
	xxx_hidden_PreviousPageToken *string                `protobuf:"bytes,8,opt,name=previous_page_token,json=previousPageToken"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *CommonPaginationInfo) Reset() {
	*x = CommonPaginationInfo{}
	mi := &file_gcommon_v1_common_messages_pagination_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonPaginationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonPaginationInfo) ProtoMessage() {}

func (x *CommonPaginationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_common_messages_pagination_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommonPaginationInfo) GetCurrentPage() int32 {
	if x != nil {
		return x.xxx_hidden_CurrentPage
	}
	return 0
}

func (x *CommonPaginationInfo) GetPageSize() int32 {
	if x != nil {
		return x.xxx_hidden_PageSize
	}
	return 0
}

func (x *CommonPaginationInfo) GetTotalItems() int64 {
	if x != nil {
		return x.xxx_hidden_TotalItems
	}
	return 0
}

func (x *CommonPaginationInfo) GetTotalPages() int32 {
	if x != nil {
		return x.xxx_hidden_TotalPages
	}
	return 0
}

func (x *CommonPaginationInfo) GetHasNext() bool {
	if x != nil {
		return x.xxx_hidden_HasNext
	}
	return false
}

func (x *CommonPaginationInfo) GetHasPrevious() bool {
	if x != nil {
		return x.xxx_hidden_HasPrevious
	}
	return false
}

func (x *CommonPaginationInfo) GetNextPageToken() string {
	if x != nil {
		if x.xxx_hidden_NextPageToken != nil {
			return *x.xxx_hidden_NextPageToken
		}
		return ""
	}
	return ""
}

func (x *CommonPaginationInfo) GetPreviousPageToken() string {
	if x != nil {
		if x.xxx_hidden_PreviousPageToken != nil {
			return *x.xxx_hidden_PreviousPageToken
		}
		return ""
	}
	return ""
}

func (x *CommonPaginationInfo) SetCurrentPage(v int32) {
	x.xxx_hidden_CurrentPage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *CommonPaginationInfo) SetPageSize(v int32) {
	x.xxx_hidden_PageSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *CommonPaginationInfo) SetTotalItems(v int64) {
	x.xxx_hidden_TotalItems = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *CommonPaginationInfo) SetTotalPages(v int32) {
	x.xxx_hidden_TotalPages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *CommonPaginationInfo) SetHasNext(v bool) {
	x.xxx_hidden_HasNext = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *CommonPaginationInfo) SetHasPrevious(v bool) {
	x.xxx_hidden_HasPrevious = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *CommonPaginationInfo) SetNextPageToken(v string) {
	x.xxx_hidden_NextPageToken = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *CommonPaginationInfo) SetPreviousPageToken(v string) {
	x.xxx_hidden_PreviousPageToken = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *CommonPaginationInfo) HasCurrentPage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CommonPaginationInfo) HasPageSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CommonPaginationInfo) HasTotalItems() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CommonPaginationInfo) HasTotalPages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CommonPaginationInfo) HasHasNext() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CommonPaginationInfo) HasHasPrevious() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CommonPaginationInfo) HasNextPageToken() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *CommonPaginationInfo) HasPreviousPageToken() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *CommonPaginationInfo) ClearCurrentPage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CurrentPage = 0
}

func (x *CommonPaginationInfo) ClearPageSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PageSize = 0
}

func (x *CommonPaginationInfo) ClearTotalItems() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalItems = 0
}

func (x *CommonPaginationInfo) ClearTotalPages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TotalPages = 0
}

func (x *CommonPaginationInfo) ClearHasNext() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_HasNext = false
}

func (x *CommonPaginationInfo) ClearHasPrevious() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_HasPrevious = false
}

func (x *CommonPaginationInfo) ClearNextPageToken() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_NextPageToken = nil
}

func (x *CommonPaginationInfo) ClearPreviousPageToken() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_PreviousPageToken = nil
}

type CommonPaginationInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Current page number (1-based)
	CurrentPage *int32
	// Number of items per page
	PageSize *int32
	// Total number of items available
	TotalItems *int64
	// Total number of pages available
	TotalPages *int32
	// Whether there is a next page
	HasNext *bool
	// Whether there is a previous page
	HasPrevious *bool
	// Token for retrieving the next page
	NextPageToken *string
	// Token for retrieving the previous page
	PreviousPageToken *string
}

func (b0 CommonPaginationInfo_builder) Build() *CommonPaginationInfo {
	m0 := &CommonPaginationInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CurrentPage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_CurrentPage = *b.CurrentPage
	}
	if b.PageSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_PageSize = *b.PageSize
	}
	if b.TotalItems != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_TotalItems = *b.TotalItems
	}
	if b.TotalPages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_TotalPages = *b.TotalPages
	}
	if b.HasNext != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_HasNext = *b.HasNext
	}
	if b.HasPrevious != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_HasPrevious = *b.HasPrevious
	}
	if b.NextPageToken != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_NextPageToken = b.NextPageToken
	}
	if b.PreviousPageToken != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_PreviousPageToken = b.PreviousPageToken
	}
	return m0
}

var File_gcommon_v1_common_messages_pagination_info_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_messages_pagination_info_proto_rawDesc = "" +
	"\n" +
	"0gcommon/v1/common/messages/pagination_info.proto\x12\x11gcommon.v1.common\x1a!google/protobuf/go_features.proto\"\xae\x02\n" +
	"\x14CommonPaginationInfo\x12!\n" +
	"\fcurrent_page\x18\x01 \x01(\x05R\vcurrentPage\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1f\n" +
	"\vtotal_items\x18\x03 \x01(\x03R\n" +
	"totalItems\x12\x1f\n" +
	"\vtotal_pages\x18\x04 \x01(\x05R\n" +
	"totalPages\x12\x19\n" +
	"\bhas_next\x18\x05 \x01(\bR\ahasNext\x12!\n" +
	"\fhas_previous\x18\x06 \x01(\bR\vhasPrevious\x12&\n" +
	"\x0fnext_page_token\x18\a \x01(\tR\rnextPageToken\x12.\n" +
	"\x13previous_page_token\x18\b \x01(\tR\x11previousPageTokenBFZ<github.com/jdfalk/gcommon/sdks/go/gcommon/v1/common/messages\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_messages_pagination_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_common_messages_pagination_info_proto_goTypes = []any{
	(*CommonPaginationInfo)(nil), // 0: gcommon.v1.common.CommonPaginationInfo
}
var file_gcommon_v1_common_messages_pagination_info_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_messages_pagination_info_proto_init() }
func file_gcommon_v1_common_messages_pagination_info_proto_init() {
	if File_gcommon_v1_common_messages_pagination_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_messages_pagination_info_proto_rawDesc), len(file_gcommon_v1_common_messages_pagination_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_messages_pagination_info_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_messages_pagination_info_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_common_messages_pagination_info_proto_msgTypes,
	}.Build()
	File_gcommon_v1_common_messages_pagination_info_proto = out.File
	file_gcommon_v1_common_messages_pagination_info_proto_goTypes = nil
	file_gcommon_v1_common_messages_pagination_info_proto_depIdxs = nil
}
