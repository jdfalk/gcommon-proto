// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/common/messages/session_info.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Session information for lightweight session tracking.
// Contains essential session data without full session details.
// Used in responses where full session data is not needed.
type SessionInfo struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId      *string                `protobuf:"bytes,1,opt,name=session_id,json=sessionId"`
	xxx_hidden_UserId         *string                `protobuf:"bytes,2,opt,name=user_id,json=userId"`
	xxx_hidden_CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt"`
	xxx_hidden_ExpiresAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt"`
	xxx_hidden_LastActivityAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_activity_at,json=lastActivityAt"`
	xxx_hidden_IpAddress      *string                `protobuf:"bytes,6,opt,name=ip_address,json=ipAddress"`
	xxx_hidden_UserAgent      *string                `protobuf:"bytes,7,opt,name=user_agent,json=userAgent"`
	xxx_hidden_Active         bool                   `protobuf:"varint,8,opt,name=active"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	mi := &file_gcommon_v1_common_messages_session_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_common_messages_session_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SessionInfo) GetSessionId() string {
	if x != nil {
		if x.xxx_hidden_SessionId != nil {
			return *x.xxx_hidden_SessionId
		}
		return ""
	}
	return ""
}

func (x *SessionInfo) GetUserId() string {
	if x != nil {
		if x.xxx_hidden_UserId != nil {
			return *x.xxx_hidden_UserId
		}
		return ""
	}
	return ""
}

func (x *SessionInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *SessionInfo) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ExpiresAt
	}
	return nil
}

func (x *SessionInfo) GetLastActivityAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastActivityAt
	}
	return nil
}

func (x *SessionInfo) GetIpAddress() string {
	if x != nil {
		if x.xxx_hidden_IpAddress != nil {
			return *x.xxx_hidden_IpAddress
		}
		return ""
	}
	return ""
}

func (x *SessionInfo) GetUserAgent() string {
	if x != nil {
		if x.xxx_hidden_UserAgent != nil {
			return *x.xxx_hidden_UserAgent
		}
		return ""
	}
	return ""
}

func (x *SessionInfo) GetActive() bool {
	if x != nil {
		return x.xxx_hidden_Active
	}
	return false
}

func (x *SessionInfo) SetSessionId(v string) {
	x.xxx_hidden_SessionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *SessionInfo) SetUserId(v string) {
	x.xxx_hidden_UserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *SessionInfo) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *SessionInfo) SetExpiresAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_ExpiresAt = v
}

func (x *SessionInfo) SetLastActivityAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastActivityAt = v
}

func (x *SessionInfo) SetIpAddress(v string) {
	x.xxx_hidden_IpAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *SessionInfo) SetUserAgent(v string) {
	x.xxx_hidden_UserAgent = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *SessionInfo) SetActive(v bool) {
	x.xxx_hidden_Active = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *SessionInfo) HasSessionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SessionInfo) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SessionInfo) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *SessionInfo) HasExpiresAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ExpiresAt != nil
}

func (x *SessionInfo) HasLastActivityAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastActivityAt != nil
}

func (x *SessionInfo) HasIpAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *SessionInfo) HasUserAgent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *SessionInfo) HasActive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *SessionInfo) ClearSessionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SessionId = nil
}

func (x *SessionInfo) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UserId = nil
}

func (x *SessionInfo) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *SessionInfo) ClearExpiresAt() {
	x.xxx_hidden_ExpiresAt = nil
}

func (x *SessionInfo) ClearLastActivityAt() {
	x.xxx_hidden_LastActivityAt = nil
}

func (x *SessionInfo) ClearIpAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_IpAddress = nil
}

func (x *SessionInfo) ClearUserAgent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_UserAgent = nil
}

func (x *SessionInfo) ClearActive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Active = false
}

type SessionInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId *string
	// User ID associated with session
	UserId *string
	// Session creation time
	CreatedAt *timestamppb.Timestamp
	// Session expiration time
	ExpiresAt *timestamppb.Timestamp
	// Last activity time
	LastActivityAt *timestamppb.Timestamp
	// IP address
	IpAddress *string
	// User agent
	UserAgent *string
	// Session active flag
	Active *bool
}

func (b0 SessionInfo_builder) Build() *SessionInfo {
	m0 := &SessionInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SessionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_SessionId = b.SessionId
	}
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_UserId = b.UserId
	}
	x.xxx_hidden_CreatedAt = b.CreatedAt
	x.xxx_hidden_ExpiresAt = b.ExpiresAt
	x.xxx_hidden_LastActivityAt = b.LastActivityAt
	if b.IpAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_IpAddress = b.IpAddress
	}
	if b.UserAgent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_UserAgent = b.UserAgent
	}
	if b.Active != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_Active = *b.Active
	}
	return m0
}

var File_gcommon_v1_common_messages_session_info_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_messages_session_info_proto_rawDesc = "" +
	"\n" +
	"-gcommon/v1/common/messages/session_info.proto\x12\x11gcommon.v1.common\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd7\x02\n" +
	"\vSessionInfo\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12D\n" +
	"\x10last_activity_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastActivityAt\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x06 \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\a \x01(\tR\tuserAgent\x12\x16\n" +
	"\x06active\x18\b \x01(\bR\x06activeBFZ<github.com/jdfalk/gcommon/sdks/go/gcommon/v1/common/messages\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_messages_session_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_common_messages_session_info_proto_goTypes = []any{
	(*SessionInfo)(nil),           // 0: gcommon.v1.common.SessionInfo
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_gcommon_v1_common_messages_session_info_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.common.SessionInfo.created_at:type_name -> google.protobuf.Timestamp
	1, // 1: gcommon.v1.common.SessionInfo.expires_at:type_name -> google.protobuf.Timestamp
	1, // 2: gcommon.v1.common.SessionInfo.last_activity_at:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_messages_session_info_proto_init() }
func file_gcommon_v1_common_messages_session_info_proto_init() {
	if File_gcommon_v1_common_messages_session_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_messages_session_info_proto_rawDesc), len(file_gcommon_v1_common_messages_session_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_messages_session_info_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_messages_session_info_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_common_messages_session_info_proto_msgTypes,
	}.Build()
	File_gcommon_v1_common_messages_session_info_proto = out.File
	file_gcommon_v1_common_messages_session_info_proto_goTypes = nil
	file_gcommon_v1_common_messages_session_info_proto_depIdxs = nil
}
