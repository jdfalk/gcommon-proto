// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/common/messages/role_assignment.proto

package messages

import (
	enums "github.com/jdfalk/gcommon/sdks/go/gcommon/v1/common/enums"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Role assignment entity representing role grants to users.
// Used for tracking role-based access control assignments.
// Supports scoped roles and expiration.
type RoleAssignment struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id               *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_UserId           *string                `protobuf:"bytes,2,opt,name=user_id,json=userId"`
	xxx_hidden_RoleId           *string                `protobuf:"bytes,3,opt,name=role_id,json=roleId"`
	xxx_hidden_Resource         *string                `protobuf:"bytes,4,opt,name=resource"`
	xxx_hidden_Scope            enums.RoleScope        `protobuf:"varint,5,opt,name=scope,enum=gcommon.v1.common.RoleScope"`
	xxx_hidden_CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt"`
	xxx_hidden_ExpiresAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt"`
	xxx_hidden_AssignedByUserId *string                `protobuf:"bytes,8,opt,name=assigned_by_user_id,json=assignedByUserId"`
	xxx_hidden_Metadata         map[string]string      `protobuf:"bytes,9,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Active           bool                   `protobuf:"varint,10,opt,name=active"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RoleAssignment) Reset() {
	*x = RoleAssignment{}
	mi := &file_gcommon_v1_common_messages_role_assignment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAssignment) ProtoMessage() {}

func (x *RoleAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_common_messages_role_assignment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RoleAssignment) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *RoleAssignment) GetUserId() string {
	if x != nil {
		if x.xxx_hidden_UserId != nil {
			return *x.xxx_hidden_UserId
		}
		return ""
	}
	return ""
}

func (x *RoleAssignment) GetRoleId() string {
	if x != nil {
		if x.xxx_hidden_RoleId != nil {
			return *x.xxx_hidden_RoleId
		}
		return ""
	}
	return ""
}

func (x *RoleAssignment) GetResource() string {
	if x != nil {
		if x.xxx_hidden_Resource != nil {
			return *x.xxx_hidden_Resource
		}
		return ""
	}
	return ""
}

func (x *RoleAssignment) GetScope() enums.RoleScope {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Scope
		}
	}
	return enums.RoleScope(0)
}

func (x *RoleAssignment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_CreatedAt) {
				protoimpl.X.UnmarshalField(x, 6)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_CreatedAt), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *RoleAssignment) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_ExpiresAt) {
				protoimpl.X.UnmarshalField(x, 7)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_ExpiresAt), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *RoleAssignment) GetAssignedByUserId() string {
	if x != nil {
		if x.xxx_hidden_AssignedByUserId != nil {
			return *x.xxx_hidden_AssignedByUserId
		}
		return ""
	}
	return ""
}

func (x *RoleAssignment) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *RoleAssignment) GetActive() bool {
	if x != nil {
		return x.xxx_hidden_Active
	}
	return false
}

func (x *RoleAssignment) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *RoleAssignment) SetUserId(v string) {
	x.xxx_hidden_UserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *RoleAssignment) SetRoleId(v string) {
	x.xxx_hidden_RoleId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *RoleAssignment) SetResource(v string) {
	x.xxx_hidden_Resource = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *RoleAssignment) SetScope(v enums.RoleScope) {
	x.xxx_hidden_Scope = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *RoleAssignment) SetCreatedAt(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CreatedAt, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
	}
}

func (x *RoleAssignment) SetExpiresAt(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_ExpiresAt, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
	}
}

func (x *RoleAssignment) SetAssignedByUserId(v string) {
	x.xxx_hidden_AssignedByUserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 10)
}

func (x *RoleAssignment) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *RoleAssignment) SetActive(v bool) {
	x.xxx_hidden_Active = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *RoleAssignment) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RoleAssignment) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RoleAssignment) HasRoleId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RoleAssignment) HasResource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RoleAssignment) HasScope() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RoleAssignment) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *RoleAssignment) HasExpiresAt() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *RoleAssignment) HasAssignedByUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *RoleAssignment) HasActive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *RoleAssignment) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *RoleAssignment) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UserId = nil
}

func (x *RoleAssignment) ClearRoleId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_RoleId = nil
}

func (x *RoleAssignment) ClearResource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Resource = nil
}

func (x *RoleAssignment) ClearScope() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Scope = enums.RoleScope_ROLE_SCOPE_UNSPECIFIED
}

func (x *RoleAssignment) ClearCreatedAt() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CreatedAt, (*timestamppb.Timestamp)(nil))
}

func (x *RoleAssignment) ClearExpiresAt() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_ExpiresAt, (*timestamppb.Timestamp)(nil))
}

func (x *RoleAssignment) ClearAssignedByUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_AssignedByUserId = nil
}

func (x *RoleAssignment) ClearActive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Active = false
}

type RoleAssignment_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique assignment identifier
	Id *string
	// User ID receiving the role
	UserId *string
	// Role ID being assigned
	RoleId *string
	// Resource the role applies to (optional, for scoped roles)
	Resource *string
	// Role scope
	Scope *enums.RoleScope
	// Assignment creation timestamp
	CreatedAt *timestamppb.Timestamp
	// Assignment expiration timestamp (optional)
	ExpiresAt *timestamppb.Timestamp
	// User who assigned the role
	AssignedByUserId *string
	// Assignment metadata
	Metadata map[string]string
	// Assignment active flag
	Active *bool
}

func (b0 RoleAssignment_builder) Build() *RoleAssignment {
	m0 := &RoleAssignment{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_Id = b.Id
	}
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_UserId = b.UserId
	}
	if b.RoleId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_RoleId = b.RoleId
	}
	if b.Resource != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_Resource = b.Resource
	}
	if b.Scope != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_Scope = *b.Scope
	}
	if b.CreatedAt != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_CreatedAt = b.CreatedAt
	}
	if b.ExpiresAt != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_ExpiresAt = b.ExpiresAt
	}
	if b.AssignedByUserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 10)
		x.xxx_hidden_AssignedByUserId = b.AssignedByUserId
	}
	x.xxx_hidden_Metadata = b.Metadata
	if b.Active != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_Active = *b.Active
	}
	return m0
}

var File_gcommon_v1_common_messages_role_assignment_proto protoreflect.FileDescriptor

const file_gcommon_v1_common_messages_role_assignment_proto_rawDesc = "" +
	"\n" +
	"0gcommon/v1/common/messages/role_assignment.proto\x12\x11gcommon.v1.common\x1a(gcommon/v1/common/enums/role_scope.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf5\x03\n" +
	"\x0eRoleAssignment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x17\n" +
	"\arole_id\x18\x03 \x01(\tR\x06roleId\x12\x1a\n" +
	"\bresource\x18\x04 \x01(\tR\bresource\x122\n" +
	"\x05scope\x18\x05 \x01(\x0e2\x1c.gcommon.v1.common.RoleScopeR\x05scope\x12=\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\tcreatedAt\x12=\n" +
	"\n" +
	"expires_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\texpiresAt\x12-\n" +
	"\x13assigned_by_user_id\x18\b \x01(\tR\x10assignedByUserId\x12O\n" +
	"\bmetadata\x18\t \x03(\v2/.gcommon.v1.common.RoleAssignment.MetadataEntryB\x02(\x01R\bmetadata\x12\x16\n" +
	"\x06active\x18\n" +
	" \x01(\bR\x06active\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xd8\x01\n" +
	"\x15com.gcommon.v1.commonB\x13RoleAssignmentProtoP\x01Z<github.com/jdfalk/gcommon/sdks/go/gcommon/v1/common/messages\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Common\xca\x02\x11Gcommon\\V1\\Common\xe2\x02\x1dGcommon\\V1\\Common\\GPBMetadata\xea\x02\x13Gcommon::V1::Common\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_common_messages_role_assignment_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gcommon_v1_common_messages_role_assignment_proto_goTypes = []any{
	(*RoleAssignment)(nil),        // 0: gcommon.v1.common.RoleAssignment
	nil,                           // 1: gcommon.v1.common.RoleAssignment.MetadataEntry
	(enums.RoleScope)(0),          // 2: gcommon.v1.common.RoleScope
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_gcommon_v1_common_messages_role_assignment_proto_depIdxs = []int32{
	2, // 0: gcommon.v1.common.RoleAssignment.scope:type_name -> gcommon.v1.common.RoleScope
	3, // 1: gcommon.v1.common.RoleAssignment.created_at:type_name -> google.protobuf.Timestamp
	3, // 2: gcommon.v1.common.RoleAssignment.expires_at:type_name -> google.protobuf.Timestamp
	1, // 3: gcommon.v1.common.RoleAssignment.metadata:type_name -> gcommon.v1.common.RoleAssignment.MetadataEntry
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_gcommon_v1_common_messages_role_assignment_proto_init() }
func file_gcommon_v1_common_messages_role_assignment_proto_init() {
	if File_gcommon_v1_common_messages_role_assignment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_common_messages_role_assignment_proto_rawDesc), len(file_gcommon_v1_common_messages_role_assignment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_common_messages_role_assignment_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_common_messages_role_assignment_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_common_messages_role_assignment_proto_msgTypes,
	}.Build()
	File_gcommon_v1_common_messages_role_assignment_proto = out.File
	file_gcommon_v1_common_messages_role_assignment_proto_goTypes = nil
	file_gcommon_v1_common_messages_role_assignment_proto_depIdxs = nil
}
