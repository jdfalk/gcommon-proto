// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/circuit_breaker_config.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Configuration for circuit breaker pattern in queue operations.
type QueueCircuitBreakerConfig struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled          bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_FailureThreshold uint32                 `protobuf:"varint,2,opt,name=failure_threshold,json=failureThreshold"`
	xxx_hidden_SuccessThreshold uint32                 `protobuf:"varint,3,opt,name=success_threshold,json=successThreshold"`
	xxx_hidden_Timeout          *durationpb.Duration   `protobuf:"bytes,4,opt,name=timeout"`
	xxx_hidden_MaxRequests      uint32                 `protobuf:"varint,5,opt,name=max_requests,json=maxRequests"`
	xxx_hidden_Interval         *durationpb.Duration   `protobuf:"bytes,6,opt,name=interval"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *QueueCircuitBreakerConfig) Reset() {
	*x = QueueCircuitBreakerConfig{}
	mi := &file_gcommon_v1_queue_circuit_breaker_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueCircuitBreakerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueCircuitBreakerConfig) ProtoMessage() {}

func (x *QueueCircuitBreakerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_circuit_breaker_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueueCircuitBreakerConfig) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *QueueCircuitBreakerConfig) GetFailureThreshold() uint32 {
	if x != nil {
		return x.xxx_hidden_FailureThreshold
	}
	return 0
}

func (x *QueueCircuitBreakerConfig) GetSuccessThreshold() uint32 {
	if x != nil {
		return x.xxx_hidden_SuccessThreshold
	}
	return 0
}

func (x *QueueCircuitBreakerConfig) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Timeout
	}
	return nil
}

func (x *QueueCircuitBreakerConfig) GetMaxRequests() uint32 {
	if x != nil {
		return x.xxx_hidden_MaxRequests
	}
	return 0
}

func (x *QueueCircuitBreakerConfig) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Interval
	}
	return nil
}

func (x *QueueCircuitBreakerConfig) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *QueueCircuitBreakerConfig) SetFailureThreshold(v uint32) {
	x.xxx_hidden_FailureThreshold = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *QueueCircuitBreakerConfig) SetSuccessThreshold(v uint32) {
	x.xxx_hidden_SuccessThreshold = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *QueueCircuitBreakerConfig) SetTimeout(v *durationpb.Duration) {
	x.xxx_hidden_Timeout = v
}

func (x *QueueCircuitBreakerConfig) SetMaxRequests(v uint32) {
	x.xxx_hidden_MaxRequests = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *QueueCircuitBreakerConfig) SetInterval(v *durationpb.Duration) {
	x.xxx_hidden_Interval = v
}

func (x *QueueCircuitBreakerConfig) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QueueCircuitBreakerConfig) HasFailureThreshold() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *QueueCircuitBreakerConfig) HasSuccessThreshold() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *QueueCircuitBreakerConfig) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timeout != nil
}

func (x *QueueCircuitBreakerConfig) HasMaxRequests() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *QueueCircuitBreakerConfig) HasInterval() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Interval != nil
}

func (x *QueueCircuitBreakerConfig) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *QueueCircuitBreakerConfig) ClearFailureThreshold() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FailureThreshold = 0
}

func (x *QueueCircuitBreakerConfig) ClearSuccessThreshold() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SuccessThreshold = 0
}

func (x *QueueCircuitBreakerConfig) ClearTimeout() {
	x.xxx_hidden_Timeout = nil
}

func (x *QueueCircuitBreakerConfig) ClearMaxRequests() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MaxRequests = 0
}

func (x *QueueCircuitBreakerConfig) ClearInterval() {
	x.xxx_hidden_Interval = nil
}

type QueueCircuitBreakerConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether circuit breaker is enabled
	Enabled *bool
	// Failure threshold to open circuit
	FailureThreshold *uint32
	// Success threshold to close circuit
	SuccessThreshold *uint32
	// Timeout before attempting to close circuit
	Timeout *durationpb.Duration
	// Maximum number of concurrent requests in half-open state
	MaxRequests *uint32
	// Time window for failure counting
	Interval *durationpb.Duration
}

func (b0 QueueCircuitBreakerConfig_builder) Build() *QueueCircuitBreakerConfig {
	m0 := &QueueCircuitBreakerConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.FailureThreshold != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_FailureThreshold = *b.FailureThreshold
	}
	if b.SuccessThreshold != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_SuccessThreshold = *b.SuccessThreshold
	}
	x.xxx_hidden_Timeout = b.Timeout
	if b.MaxRequests != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_MaxRequests = *b.MaxRequests
	}
	x.xxx_hidden_Interval = b.Interval
	return m0
}

var File_gcommon_v1_queue_circuit_breaker_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_circuit_breaker_config_proto_rawDesc = "" +
	"\n" +
	"-gcommon/v1/queue/circuit_breaker_config.proto\x12\x10gcommon.v1.queue\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\"\x9e\x02\n" +
	"\x19QueueCircuitBreakerConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12+\n" +
	"\x11failure_threshold\x18\x02 \x01(\rR\x10failureThreshold\x12+\n" +
	"\x11success_threshold\x18\x03 \x01(\rR\x10successThreshold\x123\n" +
	"\atimeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12!\n" +
	"\fmax_requests\x18\x05 \x01(\rR\vmaxRequests\x125\n" +
	"\binterval\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\bintervalB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_circuit_breaker_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_circuit_breaker_config_proto_goTypes = []any{
	(*QueueCircuitBreakerConfig)(nil), // 0: gcommon.v1.queue.QueueCircuitBreakerConfig
	(*durationpb.Duration)(nil),       // 1: google.protobuf.Duration
}
var file_gcommon_v1_queue_circuit_breaker_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.QueueCircuitBreakerConfig.timeout:type_name -> google.protobuf.Duration
	1, // 1: gcommon.v1.queue.QueueCircuitBreakerConfig.interval:type_name -> google.protobuf.Duration
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_circuit_breaker_config_proto_init() }
func file_gcommon_v1_queue_circuit_breaker_config_proto_init() {
	if File_gcommon_v1_queue_circuit_breaker_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_circuit_breaker_config_proto_rawDesc), len(file_gcommon_v1_queue_circuit_breaker_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_circuit_breaker_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_circuit_breaker_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_circuit_breaker_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_circuit_breaker_config_proto = out.File
	file_gcommon_v1_queue_circuit_breaker_config_proto_goTypes = nil
	file_gcommon_v1_queue_circuit_breaker_config_proto_depIdxs = nil
}
