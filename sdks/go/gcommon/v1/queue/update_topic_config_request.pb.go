// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/update_topic_config_request.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to update topic configuration
type UpdateTopicConfigRequest struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TopicName         *string                `protobuf:"bytes,1,opt,name=topic_name,json=topicName"`
	xxx_hidden_Config            *TopicConfig           `protobuf:"bytes,2,opt,name=config"`
	xxx_hidden_ValidateOnly      bool                   `protobuf:"varint,3,opt,name=validate_only,json=validateOnly"`
	xxx_hidden_IncrementalUpdate bool                   `protobuf:"varint,4,opt,name=incremental_update,json=incrementalUpdate"`
	xxx_hidden_TimeoutMs         int32                  `protobuf:"varint,5,opt,name=timeout_ms,json=timeoutMs"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *UpdateTopicConfigRequest) Reset() {
	*x = UpdateTopicConfigRequest{}
	mi := &file_gcommon_v1_queue_update_topic_config_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTopicConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopicConfigRequest) ProtoMessage() {}

func (x *UpdateTopicConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_update_topic_config_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateTopicConfigRequest) GetTopicName() string {
	if x != nil {
		if x.xxx_hidden_TopicName != nil {
			return *x.xxx_hidden_TopicName
		}
		return ""
	}
	return ""
}

func (x *UpdateTopicConfigRequest) GetConfig() *TopicConfig {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *UpdateTopicConfigRequest) GetValidateOnly() bool {
	if x != nil {
		return x.xxx_hidden_ValidateOnly
	}
	return false
}

func (x *UpdateTopicConfigRequest) GetIncrementalUpdate() bool {
	if x != nil {
		return x.xxx_hidden_IncrementalUpdate
	}
	return false
}

func (x *UpdateTopicConfigRequest) GetTimeoutMs() int32 {
	if x != nil {
		return x.xxx_hidden_TimeoutMs
	}
	return 0
}

func (x *UpdateTopicConfigRequest) SetTopicName(v string) {
	x.xxx_hidden_TopicName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *UpdateTopicConfigRequest) SetConfig(v *TopicConfig) {
	x.xxx_hidden_Config = v
}

func (x *UpdateTopicConfigRequest) SetValidateOnly(v bool) {
	x.xxx_hidden_ValidateOnly = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *UpdateTopicConfigRequest) SetIncrementalUpdate(v bool) {
	x.xxx_hidden_IncrementalUpdate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *UpdateTopicConfigRequest) SetTimeoutMs(v int32) {
	x.xxx_hidden_TimeoutMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *UpdateTopicConfigRequest) HasTopicName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateTopicConfigRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Config != nil
}

func (x *UpdateTopicConfigRequest) HasValidateOnly() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateTopicConfigRequest) HasIncrementalUpdate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateTopicConfigRequest) HasTimeoutMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UpdateTopicConfigRequest) ClearTopicName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TopicName = nil
}

func (x *UpdateTopicConfigRequest) ClearConfig() {
	x.xxx_hidden_Config = nil
}

func (x *UpdateTopicConfigRequest) ClearValidateOnly() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ValidateOnly = false
}

func (x *UpdateTopicConfigRequest) ClearIncrementalUpdate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_IncrementalUpdate = false
}

func (x *UpdateTopicConfigRequest) ClearTimeoutMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_TimeoutMs = 0
}

type UpdateTopicConfigRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Topic name to update
	TopicName *string
	// New topic configuration
	Config *TopicConfig
	// Whether to validate config before applying
	ValidateOnly *bool
	// Apply changes incrementally if possible
	IncrementalUpdate *bool
	// Timeout for the operation (milliseconds)
	TimeoutMs *int32
}

func (b0 UpdateTopicConfigRequest_builder) Build() *UpdateTopicConfigRequest {
	m0 := &UpdateTopicConfigRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TopicName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_TopicName = b.TopicName
	}
	x.xxx_hidden_Config = b.Config
	if b.ValidateOnly != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_ValidateOnly = *b.ValidateOnly
	}
	if b.IncrementalUpdate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_IncrementalUpdate = *b.IncrementalUpdate
	}
	if b.TimeoutMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_TimeoutMs = *b.TimeoutMs
	}
	return m0
}

var File_gcommon_v1_queue_update_topic_config_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_update_topic_config_request_proto_rawDesc = "" +
	"\n" +
	"2gcommon/v1/queue/update_topic_config_request.proto\x12\x10gcommon.v1.queue\x1a#gcommon/v1/queue/topic_config.proto\x1a!google/protobuf/go_features.proto\"\xe3\x01\n" +
	"\x18UpdateTopicConfigRequest\x12\x1d\n" +
	"\n" +
	"topic_name\x18\x01 \x01(\tR\ttopicName\x125\n" +
	"\x06config\x18\x02 \x01(\v2\x1d.gcommon.v1.queue.TopicConfigR\x06config\x12#\n" +
	"\rvalidate_only\x18\x03 \x01(\bR\fvalidateOnly\x12-\n" +
	"\x12incremental_update\x18\x04 \x01(\bR\x11incrementalUpdate\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x05 \x01(\x05R\ttimeoutMsB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_update_topic_config_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_update_topic_config_request_proto_goTypes = []any{
	(*UpdateTopicConfigRequest)(nil), // 0: gcommon.v1.queue.UpdateTopicConfigRequest
	(*TopicConfig)(nil),              // 1: gcommon.v1.queue.TopicConfig
}
var file_gcommon_v1_queue_update_topic_config_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.UpdateTopicConfigRequest.config:type_name -> gcommon.v1.queue.TopicConfig
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_update_topic_config_request_proto_init() }
func file_gcommon_v1_queue_update_topic_config_request_proto_init() {
	if File_gcommon_v1_queue_update_topic_config_request_proto != nil {
		return
	}
	file_gcommon_v1_queue_topic_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_update_topic_config_request_proto_rawDesc), len(file_gcommon_v1_queue_update_topic_config_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_update_topic_config_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_update_topic_config_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_update_topic_config_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_update_topic_config_request_proto = out.File
	file_gcommon_v1_queue_update_topic_config_request_proto_goTypes = nil
	file_gcommon_v1_queue_update_topic_config_request_proto_depIdxs = nil
}
