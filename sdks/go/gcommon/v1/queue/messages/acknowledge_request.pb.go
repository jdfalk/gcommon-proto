// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/acknowledge_request.proto

package queue

import (
	messages "github.com/jdfalk/gcommon/sdks/go/gcommon/v1/common/messages"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// AcknowledgeRequest confirms successful processing of one or more messages.
// Once acknowledged, messages are permanently removed from the queue
// and will not be redelivered.
//
// Follows 1-1-1 pattern: one message per file.
type AcknowledgeRequest struct {
	state                        protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_QueueName         *string                   `protobuf:"bytes,1,opt,name=queue_name,json=queueName"`
	xxx_hidden_ReceiptHandles    []string                  `protobuf:"bytes,2,rep,name=receipt_handles,json=receiptHandles"`
	xxx_hidden_Metadata          *messages.RequestMetadata `protobuf:"bytes,11,opt,name=metadata"`
	xxx_hidden_ConsumerId        *string                   `protobuf:"bytes,12,opt,name=consumer_id,json=consumerId"`
	xxx_hidden_ProcessingResults []string                  `protobuf:"bytes,13,rep,name=processing_results,json=processingResults"`
	xxx_hidden_ProcessingNotes   []string                  `protobuf:"bytes,14,rep,name=processing_notes,json=processingNotes"`
	xxx_hidden_ProcessingTimesMs []int64                   `protobuf:"varint,15,rep,packed,name=processing_times_ms,json=processingTimesMs"`
	xxx_hidden_ForceAcknowledge  bool                      `protobuf:"varint,16,opt,name=force_acknowledge,json=forceAcknowledge"`
	xxx_hidden_BatchMode         bool                      `protobuf:"varint,17,opt,name=batch_mode,json=batchMode"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *AcknowledgeRequest) Reset() {
	*x = AcknowledgeRequest{}
	mi := &file_gcommon_v1_queue_messages_acknowledge_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcknowledgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeRequest) ProtoMessage() {}

func (x *AcknowledgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_acknowledge_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AcknowledgeRequest) GetQueueName() string {
	if x != nil {
		if x.xxx_hidden_QueueName != nil {
			return *x.xxx_hidden_QueueName
		}
		return ""
	}
	return ""
}

func (x *AcknowledgeRequest) GetReceiptHandles() []string {
	if x != nil {
		return x.xxx_hidden_ReceiptHandles
	}
	return nil
}

func (x *AcknowledgeRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *AcknowledgeRequest) GetConsumerId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerId != nil {
			return *x.xxx_hidden_ConsumerId
		}
		return ""
	}
	return ""
}

func (x *AcknowledgeRequest) GetProcessingResults() []string {
	if x != nil {
		return x.xxx_hidden_ProcessingResults
	}
	return nil
}

func (x *AcknowledgeRequest) GetProcessingNotes() []string {
	if x != nil {
		return x.xxx_hidden_ProcessingNotes
	}
	return nil
}

func (x *AcknowledgeRequest) GetProcessingTimesMs() []int64 {
	if x != nil {
		return x.xxx_hidden_ProcessingTimesMs
	}
	return nil
}

func (x *AcknowledgeRequest) GetForceAcknowledge() bool {
	if x != nil {
		return x.xxx_hidden_ForceAcknowledge
	}
	return false
}

func (x *AcknowledgeRequest) GetBatchMode() bool {
	if x != nil {
		return x.xxx_hidden_BatchMode
	}
	return false
}

func (x *AcknowledgeRequest) SetQueueName(v string) {
	x.xxx_hidden_QueueName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *AcknowledgeRequest) SetReceiptHandles(v []string) {
	x.xxx_hidden_ReceiptHandles = v
}

func (x *AcknowledgeRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *AcknowledgeRequest) SetConsumerId(v string) {
	x.xxx_hidden_ConsumerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *AcknowledgeRequest) SetProcessingResults(v []string) {
	x.xxx_hidden_ProcessingResults = v
}

func (x *AcknowledgeRequest) SetProcessingNotes(v []string) {
	x.xxx_hidden_ProcessingNotes = v
}

func (x *AcknowledgeRequest) SetProcessingTimesMs(v []int64) {
	x.xxx_hidden_ProcessingTimesMs = v
}

func (x *AcknowledgeRequest) SetForceAcknowledge(v bool) {
	x.xxx_hidden_ForceAcknowledge = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *AcknowledgeRequest) SetBatchMode(v bool) {
	x.xxx_hidden_BatchMode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *AcknowledgeRequest) HasQueueName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AcknowledgeRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *AcknowledgeRequest) HasConsumerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AcknowledgeRequest) HasForceAcknowledge() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *AcknowledgeRequest) HasBatchMode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *AcknowledgeRequest) ClearQueueName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_QueueName = nil
}

func (x *AcknowledgeRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *AcknowledgeRequest) ClearConsumerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ConsumerId = nil
}

func (x *AcknowledgeRequest) ClearForceAcknowledge() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ForceAcknowledge = false
}

func (x *AcknowledgeRequest) ClearBatchMode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_BatchMode = false
}

type AcknowledgeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// *
	// The name/identifier of the queue containing the messages.
	// Must match the queue from which messages were dequeued.
	QueueName *string
	// *
	// Receipt handles of messages to acknowledge.
	// These handles were provided in the DequeueResponse.
	ReceiptHandles []string
	// *
	// Standard request metadata including authentication context,
	// tracing information, and client details.
	Metadata *messages.RequestMetadata
	// *
	// Consumer ID that processed these messages.
	// Used for tracking and metrics.
	ConsumerId *string
	// *
	// Processing result for each message (same order as receipt_handles).
	// Valid values: "success", "failed", "retry", "skip".
	// If not provided, "success" is assumed for all messages.
	ProcessingResults []string
	// *
	// Optional processing notes or error details for each message.
	// Useful for debugging and audit trails.
	ProcessingNotes []string
	// *
	// Processing time in milliseconds for each message.
	// Used for performance monitoring and SLA tracking.
	ProcessingTimesMs []int64
	// *
	// Whether to force acknowledgment even if visibility timeout expired.
	// Use with caution as it may cause duplicate processing. Default: false.
	ForceAcknowledge *bool
	// *
	// Batch acknowledgment mode. If true, all messages succeed or fail together.
	// If false, each message is processed individually. Default: false.
	BatchMode *bool
}

func (b0 AcknowledgeRequest_builder) Build() *AcknowledgeRequest {
	m0 := &AcknowledgeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.QueueName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_QueueName = b.QueueName
	}
	x.xxx_hidden_ReceiptHandles = b.ReceiptHandles
	x.xxx_hidden_Metadata = b.Metadata
	if b.ConsumerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_ConsumerId = b.ConsumerId
	}
	x.xxx_hidden_ProcessingResults = b.ProcessingResults
	x.xxx_hidden_ProcessingNotes = b.ProcessingNotes
	x.xxx_hidden_ProcessingTimesMs = b.ProcessingTimesMs
	if b.ForceAcknowledge != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_ForceAcknowledge = *b.ForceAcknowledge
	}
	if b.BatchMode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_BatchMode = *b.BatchMode
	}
	return m0
}

var File_gcommon_v1_queue_messages_acknowledge_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_acknowledge_request_proto_rawDesc = "" +
	"\n" +
	"3gcommon/v1/queue/messages/acknowledge_request.proto\x12\x10gcommon.v1.queue\x1a1gcommon/v1/common/messages/request_metadata.proto\x1a!google/protobuf/go_features.proto\"\x93\x03\n" +
	"\x12AcknowledgeRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12'\n" +
	"\x0freceipt_handles\x18\x02 \x03(\tR\x0ereceiptHandles\x12>\n" +
	"\bmetadata\x18\v \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x12\x1f\n" +
	"\vconsumer_id\x18\f \x01(\tR\n" +
	"consumerId\x12-\n" +
	"\x12processing_results\x18\r \x03(\tR\x11processingResults\x12)\n" +
	"\x10processing_notes\x18\x0e \x03(\tR\x0fprocessingNotes\x12.\n" +
	"\x13processing_times_ms\x18\x0f \x03(\x03R\x11processingTimesMs\x12+\n" +
	"\x11force_acknowledge\x18\x10 \x01(\bR\x10forceAcknowledge\x12\x1d\n" +
	"\n" +
	"batch_mode\x18\x11 \x01(\bR\tbatchModeB1Z'github.com/jdfalk/gcommon/sdks/go/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_acknowledge_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_acknowledge_request_proto_goTypes = []any{
	(*AcknowledgeRequest)(nil),       // 0: gcommon.v1.queue.AcknowledgeRequest
	(*messages.RequestMetadata)(nil), // 1: gcommon.v1.common.RequestMetadata
}
var file_gcommon_v1_queue_messages_acknowledge_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.AcknowledgeRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_acknowledge_request_proto_init() }
func file_gcommon_v1_queue_messages_acknowledge_request_proto_init() {
	if File_gcommon_v1_queue_messages_acknowledge_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_acknowledge_request_proto_rawDesc), len(file_gcommon_v1_queue_messages_acknowledge_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_acknowledge_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_acknowledge_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_acknowledge_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_acknowledge_request_proto = out.File
	file_gcommon_v1_queue_messages_acknowledge_request_proto_goTypes = nil
	file_gcommon_v1_queue_messages_acknowledge_request_proto_depIdxs = nil
}
