// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/commit_offset_request.proto

package messages

import (
	messages "github.com/jdfalk/gcommon/sdks/go/gcommon/v1/common/messages"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommitOffsetRequest struct {
	state                    protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_QueueName     *string                   `protobuf:"bytes,1,opt,name=queue_name,json=queueName"`
	xxx_hidden_ConsumerGroup *string                   `protobuf:"bytes,2,opt,name=consumer_group,json=consumerGroup"`
	xxx_hidden_Offset        int64                     `protobuf:"varint,3,opt,name=offset"`
	xxx_hidden_Metadata      *messages.RequestMetadata `protobuf:"bytes,4,opt,name=metadata"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CommitOffsetRequest) Reset() {
	*x = CommitOffsetRequest{}
	mi := &file_gcommon_v1_queue_messages_commit_offset_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOffsetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOffsetRequest) ProtoMessage() {}

func (x *CommitOffsetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_commit_offset_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommitOffsetRequest) GetQueueName() string {
	if x != nil {
		if x.xxx_hidden_QueueName != nil {
			return *x.xxx_hidden_QueueName
		}
		return ""
	}
	return ""
}

func (x *CommitOffsetRequest) GetConsumerGroup() string {
	if x != nil {
		if x.xxx_hidden_ConsumerGroup != nil {
			return *x.xxx_hidden_ConsumerGroup
		}
		return ""
	}
	return ""
}

func (x *CommitOffsetRequest) GetOffset() int64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *CommitOffsetRequest) GetMetadata() *messages.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CommitOffsetRequest) SetQueueName(v string) {
	x.xxx_hidden_QueueName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CommitOffsetRequest) SetConsumerGroup(v string) {
	x.xxx_hidden_ConsumerGroup = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CommitOffsetRequest) SetOffset(v int64) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *CommitOffsetRequest) SetMetadata(v *messages.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *CommitOffsetRequest) HasQueueName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CommitOffsetRequest) HasConsumerGroup() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CommitOffsetRequest) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CommitOffsetRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *CommitOffsetRequest) ClearQueueName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_QueueName = nil
}

func (x *CommitOffsetRequest) ClearConsumerGroup() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ConsumerGroup = nil
}

func (x *CommitOffsetRequest) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Offset = 0
}

func (x *CommitOffsetRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type CommitOffsetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of the queue or topic.
	QueueName *string
	// Identifier for the consumer group.
	ConsumerGroup *string
	// Offset that was last processed successfully.
	Offset *int64
	// Optional request metadata for tracing and auth.
	Metadata *messages.RequestMetadata
}

func (b0 CommitOffsetRequest_builder) Build() *CommitOffsetRequest {
	m0 := &CommitOffsetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.QueueName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_QueueName = b.QueueName
	}
	if b.ConsumerGroup != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ConsumerGroup = b.ConsumerGroup
	}
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Offset = *b.Offset
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

var File_gcommon_v1_queue_messages_commit_offset_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_commit_offset_request_proto_rawDesc = "" +
	"\n" +
	"5gcommon/v1/queue/messages/commit_offset_request.proto\x12\x10gcommon.v1.queue\x1a1gcommon/v1/common/messages/request_metadata.proto\x1a!google/protobuf/go_features.proto\"\xb3\x01\n" +
	"\x13CommitOffsetRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12%\n" +
	"\x0econsumer_group\x18\x02 \x01(\tR\rconsumerGroup\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadataB\xd7\x01\n" +
	"\x14com.gcommon.v1.queueB\x18CommitOffsetRequestProtoP\x01Z;github.com/jdfalk/gcommon/sdks/go/gcommon/v1/queue/messages\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_commit_offset_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_commit_offset_request_proto_goTypes = []any{
	(*CommitOffsetRequest)(nil),      // 0: gcommon.v1.queue.CommitOffsetRequest
	(*messages.RequestMetadata)(nil), // 1: gcommon.v1.common.RequestMetadata
}
var file_gcommon_v1_queue_messages_commit_offset_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.CommitOffsetRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_commit_offset_request_proto_init() }
func file_gcommon_v1_queue_messages_commit_offset_request_proto_init() {
	if File_gcommon_v1_queue_messages_commit_offset_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_commit_offset_request_proto_rawDesc), len(file_gcommon_v1_queue_messages_commit_offset_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_commit_offset_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_commit_offset_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_commit_offset_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_commit_offset_request_proto = out.File
	file_gcommon_v1_queue_messages_commit_offset_request_proto_goTypes = nil
	file_gcommon_v1_queue_messages_commit_offset_request_proto_depIdxs = nil
}
