// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/load_balancing_config.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Configuration for load balancing across queue consumers.
type LoadBalancingConfig struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Strategy              LoadBalancingStrategy  `protobuf:"varint,1,opt,name=strategy,enum=gcommon.v1.queue.LoadBalancingStrategy"`
	xxx_hidden_Weight                int32                  `protobuf:"varint,2,opt,name=weight"`
	xxx_hidden_MaxConcurrentMessages int32                  `protobuf:"varint,3,opt,name=max_concurrent_messages,json=maxConcurrentMessages"`
	xxx_hidden_PrefetchCount         int32                  `protobuf:"varint,4,opt,name=prefetch_count,json=prefetchCount"`
	xxx_hidden_Priority              int32                  `protobuf:"varint,5,opt,name=priority"`
	xxx_hidden_StickySessions        bool                   `protobuf:"varint,6,opt,name=sticky_sessions,json=stickySessions"`
	xxx_hidden_AffinityKey           *string                `protobuf:"bytes,7,opt,name=affinity_key,json=affinityKey"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *LoadBalancingConfig) Reset() {
	*x = LoadBalancingConfig{}
	mi := &file_gcommon_v1_queue_messages_load_balancing_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancingConfig) ProtoMessage() {}

func (x *LoadBalancingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_load_balancing_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LoadBalancingConfig) GetStrategy() LoadBalancingStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Strategy
		}
	}
	return LoadBalancingStrategy_LOAD_BALANCING_STRATEGY_UNSPECIFIED
}

func (x *LoadBalancingConfig) GetWeight() int32 {
	if x != nil {
		return x.xxx_hidden_Weight
	}
	return 0
}

func (x *LoadBalancingConfig) GetMaxConcurrentMessages() int32 {
	if x != nil {
		return x.xxx_hidden_MaxConcurrentMessages
	}
	return 0
}

func (x *LoadBalancingConfig) GetPrefetchCount() int32 {
	if x != nil {
		return x.xxx_hidden_PrefetchCount
	}
	return 0
}

func (x *LoadBalancingConfig) GetPriority() int32 {
	if x != nil {
		return x.xxx_hidden_Priority
	}
	return 0
}

func (x *LoadBalancingConfig) GetStickySessions() bool {
	if x != nil {
		return x.xxx_hidden_StickySessions
	}
	return false
}

func (x *LoadBalancingConfig) GetAffinityKey() string {
	if x != nil {
		if x.xxx_hidden_AffinityKey != nil {
			return *x.xxx_hidden_AffinityKey
		}
		return ""
	}
	return ""
}

func (x *LoadBalancingConfig) SetStrategy(v LoadBalancingStrategy) {
	x.xxx_hidden_Strategy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *LoadBalancingConfig) SetWeight(v int32) {
	x.xxx_hidden_Weight = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *LoadBalancingConfig) SetMaxConcurrentMessages(v int32) {
	x.xxx_hidden_MaxConcurrentMessages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *LoadBalancingConfig) SetPrefetchCount(v int32) {
	x.xxx_hidden_PrefetchCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *LoadBalancingConfig) SetPriority(v int32) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *LoadBalancingConfig) SetStickySessions(v bool) {
	x.xxx_hidden_StickySessions = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *LoadBalancingConfig) SetAffinityKey(v string) {
	x.xxx_hidden_AffinityKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *LoadBalancingConfig) HasStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LoadBalancingConfig) HasWeight() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LoadBalancingConfig) HasMaxConcurrentMessages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *LoadBalancingConfig) HasPrefetchCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *LoadBalancingConfig) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *LoadBalancingConfig) HasStickySessions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *LoadBalancingConfig) HasAffinityKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *LoadBalancingConfig) ClearStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Strategy = LoadBalancingStrategy_LOAD_BALANCING_STRATEGY_UNSPECIFIED
}

func (x *LoadBalancingConfig) ClearWeight() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Weight = 0
}

func (x *LoadBalancingConfig) ClearMaxConcurrentMessages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxConcurrentMessages = 0
}

func (x *LoadBalancingConfig) ClearPrefetchCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_PrefetchCount = 0
}

func (x *LoadBalancingConfig) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Priority = 0
}

func (x *LoadBalancingConfig) ClearStickySessions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_StickySessions = false
}

func (x *LoadBalancingConfig) ClearAffinityKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_AffinityKey = nil
}

type LoadBalancingConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Load balancing strategy
	Strategy *LoadBalancingStrategy
	// Weight for this consumer (for weighted strategies)
	Weight *int32
	// Maximum concurrent messages per consumer
	MaxConcurrentMessages *int32
	// Prefetch count for batch consumption
	PrefetchCount *int32
	// Consumer priority (higher numbers = higher priority)
	Priority *int32
	// Whether to enable sticky sessions
	StickySessions *bool
	// Session affinity key
	AffinityKey *string
}

func (b0 LoadBalancingConfig_builder) Build() *LoadBalancingConfig {
	m0 := &LoadBalancingConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Strategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Strategy = *b.Strategy
	}
	if b.Weight != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Weight = *b.Weight
	}
	if b.MaxConcurrentMessages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_MaxConcurrentMessages = *b.MaxConcurrentMessages
	}
	if b.PrefetchCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_PrefetchCount = *b.PrefetchCount
	}
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Priority = *b.Priority
	}
	if b.StickySessions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_StickySessions = *b.StickySessions
	}
	if b.AffinityKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_AffinityKey = b.AffinityKey
	}
	return m0
}

var File_gcommon_v1_queue_messages_load_balancing_config_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_load_balancing_config_proto_rawDesc = "" +
	"\n" +
	"5gcommon/v1/queue/messages/load_balancing_config.proto\x12\x10gcommon.v1.queue\x1a4gcommon/v1/queue/enums/load_balancing_strategy.proto\x1a!google/protobuf/go_features.proto\"\xb9\x02\n" +
	"\x13LoadBalancingConfig\x12C\n" +
	"\bstrategy\x18\x01 \x01(\x0e2'.gcommon.v1.queue.LoadBalancingStrategyR\bstrategy\x12\x16\n" +
	"\x06weight\x18\x02 \x01(\x05R\x06weight\x126\n" +
	"\x17max_concurrent_messages\x18\x03 \x01(\x05R\x15maxConcurrentMessages\x12%\n" +
	"\x0eprefetch_count\x18\x04 \x01(\x05R\rprefetchCount\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority\x12'\n" +
	"\x0fsticky_sessions\x18\x06 \x01(\bR\x0estickySessions\x12!\n" +
	"\faffinity_key\x18\a \x01(\tR\vaffinityKeyB-Z#github.com/jdfalk/gcommon/pkg/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_load_balancing_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_load_balancing_config_proto_goTypes = []any{
	(*LoadBalancingConfig)(nil), // 0: gcommon.v1.queue.LoadBalancingConfig
	(LoadBalancingStrategy)(0),  // 1: gcommon.v1.queue.LoadBalancingStrategy
}
var file_gcommon_v1_queue_messages_load_balancing_config_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.LoadBalancingConfig.strategy:type_name -> gcommon.v1.queue.LoadBalancingStrategy
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_load_balancing_config_proto_init() }
func file_gcommon_v1_queue_messages_load_balancing_config_proto_init() {
	if File_gcommon_v1_queue_messages_load_balancing_config_proto != nil {
		return
	}
	file_gcommon_v1_queue_enums_load_balancing_strategy_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_load_balancing_config_proto_rawDesc), len(file_gcommon_v1_queue_messages_load_balancing_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_load_balancing_config_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_load_balancing_config_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_load_balancing_config_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_load_balancing_config_proto = out.File
	file_gcommon_v1_queue_messages_load_balancing_config_proto_goTypes = nil
	file_gcommon_v1_queue_messages_load_balancing_config_proto_depIdxs = nil
}
