// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/performance_metrics.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PerformanceMetrics struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MemoryUsedBytes       int64                  `protobuf:"varint,1,opt,name=memory_used_bytes,json=memoryUsedBytes"`
	xxx_hidden_MemoryAvailableBytes  int64                  `protobuf:"varint,2,opt,name=memory_available_bytes,json=memoryAvailableBytes"`
	xxx_hidden_CpuUsagePercent       float64                `protobuf:"fixed64,3,opt,name=cpu_usage_percent,json=cpuUsagePercent"`
	xxx_hidden_DiskUsedBytes         int64                  `protobuf:"varint,4,opt,name=disk_used_bytes,json=diskUsedBytes"`
	xxx_hidden_DiskAvailableBytes    int64                  `protobuf:"varint,5,opt,name=disk_available_bytes,json=diskAvailableBytes"`
	xxx_hidden_NetworkBytesPerSecond float64                `protobuf:"fixed64,6,opt,name=network_bytes_per_second,json=networkBytesPerSecond"`
	xxx_hidden_ActiveConnections     int32                  `protobuf:"varint,7,opt,name=active_connections,json=activeConnections"`
	xxx_hidden_MaxConnections        int32                  `protobuf:"varint,8,opt,name=max_connections,json=maxConnections"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *PerformanceMetrics) Reset() {
	*x = PerformanceMetrics{}
	mi := &file_gcommon_v1_queue_messages_performance_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceMetrics) ProtoMessage() {}

func (x *PerformanceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_performance_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PerformanceMetrics) GetMemoryUsedBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryUsedBytes
	}
	return 0
}

func (x *PerformanceMetrics) GetMemoryAvailableBytes() int64 {
	if x != nil {
		return x.xxx_hidden_MemoryAvailableBytes
	}
	return 0
}

func (x *PerformanceMetrics) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.xxx_hidden_CpuUsagePercent
	}
	return 0
}

func (x *PerformanceMetrics) GetDiskUsedBytes() int64 {
	if x != nil {
		return x.xxx_hidden_DiskUsedBytes
	}
	return 0
}

func (x *PerformanceMetrics) GetDiskAvailableBytes() int64 {
	if x != nil {
		return x.xxx_hidden_DiskAvailableBytes
	}
	return 0
}

func (x *PerformanceMetrics) GetNetworkBytesPerSecond() float64 {
	if x != nil {
		return x.xxx_hidden_NetworkBytesPerSecond
	}
	return 0
}

func (x *PerformanceMetrics) GetActiveConnections() int32 {
	if x != nil {
		return x.xxx_hidden_ActiveConnections
	}
	return 0
}

func (x *PerformanceMetrics) GetMaxConnections() int32 {
	if x != nil {
		return x.xxx_hidden_MaxConnections
	}
	return 0
}

func (x *PerformanceMetrics) SetMemoryUsedBytes(v int64) {
	x.xxx_hidden_MemoryUsedBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *PerformanceMetrics) SetMemoryAvailableBytes(v int64) {
	x.xxx_hidden_MemoryAvailableBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *PerformanceMetrics) SetCpuUsagePercent(v float64) {
	x.xxx_hidden_CpuUsagePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *PerformanceMetrics) SetDiskUsedBytes(v int64) {
	x.xxx_hidden_DiskUsedBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *PerformanceMetrics) SetDiskAvailableBytes(v int64) {
	x.xxx_hidden_DiskAvailableBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *PerformanceMetrics) SetNetworkBytesPerSecond(v float64) {
	x.xxx_hidden_NetworkBytesPerSecond = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *PerformanceMetrics) SetActiveConnections(v int32) {
	x.xxx_hidden_ActiveConnections = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *PerformanceMetrics) SetMaxConnections(v int32) {
	x.xxx_hidden_MaxConnections = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *PerformanceMetrics) HasMemoryUsedBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PerformanceMetrics) HasMemoryAvailableBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PerformanceMetrics) HasCpuUsagePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PerformanceMetrics) HasDiskUsedBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PerformanceMetrics) HasDiskAvailableBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *PerformanceMetrics) HasNetworkBytesPerSecond() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *PerformanceMetrics) HasActiveConnections() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *PerformanceMetrics) HasMaxConnections() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *PerformanceMetrics) ClearMemoryUsedBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MemoryUsedBytes = 0
}

func (x *PerformanceMetrics) ClearMemoryAvailableBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MemoryAvailableBytes = 0
}

func (x *PerformanceMetrics) ClearCpuUsagePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CpuUsagePercent = 0
}

func (x *PerformanceMetrics) ClearDiskUsedBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DiskUsedBytes = 0
}

func (x *PerformanceMetrics) ClearDiskAvailableBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DiskAvailableBytes = 0
}

func (x *PerformanceMetrics) ClearNetworkBytesPerSecond() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_NetworkBytesPerSecond = 0
}

func (x *PerformanceMetrics) ClearActiveConnections() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ActiveConnections = 0
}

func (x *PerformanceMetrics) ClearMaxConnections() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_MaxConnections = 0
}

type PerformanceMetrics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Memory usage
	MemoryUsedBytes      *int64
	MemoryAvailableBytes *int64
	// CPU usage percentage
	CpuUsagePercent *float64
	// Disk usage for persistent storage
	DiskUsedBytes      *int64
	DiskAvailableBytes *int64
	// Network metrics
	NetworkBytesPerSecond *float64
	// Connection metrics
	ActiveConnections *int32
	MaxConnections    *int32
}

func (b0 PerformanceMetrics_builder) Build() *PerformanceMetrics {
	m0 := &PerformanceMetrics{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MemoryUsedBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_MemoryUsedBytes = *b.MemoryUsedBytes
	}
	if b.MemoryAvailableBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_MemoryAvailableBytes = *b.MemoryAvailableBytes
	}
	if b.CpuUsagePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_CpuUsagePercent = *b.CpuUsagePercent
	}
	if b.DiskUsedBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_DiskUsedBytes = *b.DiskUsedBytes
	}
	if b.DiskAvailableBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_DiskAvailableBytes = *b.DiskAvailableBytes
	}
	if b.NetworkBytesPerSecond != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_NetworkBytesPerSecond = *b.NetworkBytesPerSecond
	}
	if b.ActiveConnections != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_ActiveConnections = *b.ActiveConnections
	}
	if b.MaxConnections != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_MaxConnections = *b.MaxConnections
	}
	return m0
}

var File_gcommon_v1_queue_messages_performance_metrics_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_performance_metrics_proto_rawDesc = "" +
	"\n" +
	"3gcommon/v1/queue/messages/performance_metrics.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\"\x8d\x03\n" +
	"\x12PerformanceMetrics\x12*\n" +
	"\x11memory_used_bytes\x18\x01 \x01(\x03R\x0fmemoryUsedBytes\x124\n" +
	"\x16memory_available_bytes\x18\x02 \x01(\x03R\x14memoryAvailableBytes\x12*\n" +
	"\x11cpu_usage_percent\x18\x03 \x01(\x01R\x0fcpuUsagePercent\x12&\n" +
	"\x0fdisk_used_bytes\x18\x04 \x01(\x03R\rdiskUsedBytes\x120\n" +
	"\x14disk_available_bytes\x18\x05 \x01(\x03R\x12diskAvailableBytes\x127\n" +
	"\x18network_bytes_per_second\x18\x06 \x01(\x01R\x15networkBytesPerSecond\x12-\n" +
	"\x12active_connections\x18\a \x01(\x05R\x11activeConnections\x12'\n" +
	"\x0fmax_connections\x18\b \x01(\x05R\x0emaxConnectionsB-Z#github.com/jdfalk/gcommon/pkg/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_performance_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_performance_metrics_proto_goTypes = []any{
	(*PerformanceMetrics)(nil), // 0: gcommon.v1.queue.PerformanceMetrics
}
var file_gcommon_v1_queue_messages_performance_metrics_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_performance_metrics_proto_init() }
func file_gcommon_v1_queue_messages_performance_metrics_proto_init() {
	if File_gcommon_v1_queue_messages_performance_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_performance_metrics_proto_rawDesc), len(file_gcommon_v1_queue_messages_performance_metrics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_performance_metrics_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_performance_metrics_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_performance_metrics_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_performance_metrics_proto = out.File
	file_gcommon_v1_queue_messages_performance_metrics_proto_goTypes = nil
	file_gcommon_v1_queue_messages_performance_metrics_proto_depIdxs = nil
}
