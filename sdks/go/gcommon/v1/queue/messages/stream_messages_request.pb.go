// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/stream_messages_request.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamMessagesRequest struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Topic           *string                `protobuf:"bytes,1,opt,name=topic"`
	xxx_hidden_ConsumerGroupId *string                `protobuf:"bytes,2,opt,name=consumer_group_id,json=consumerGroupId"`
	xxx_hidden_ConsumerId      *string                `protobuf:"bytes,3,opt,name=consumer_id,json=consumerId"`
	xxx_hidden_OffsetConfig    *OffsetConfig          `protobuf:"bytes,4,opt,name=offset_config,json=offsetConfig"`
	xxx_hidden_MaxMessages     int64                  `protobuf:"varint,5,opt,name=max_messages,json=maxMessages"`
	xxx_hidden_StreamTimeoutMs int32                  `protobuf:"varint,6,opt,name=stream_timeout_ms,json=streamTimeoutMs"`
	xxx_hidden_AckLevel        AckLevel               `protobuf:"varint,7,opt,name=ack_level,json=ackLevel,enum=gcommon.v1.queue.AckLevel"`
	xxx_hidden_BatchSize       int32                  `protobuf:"varint,8,opt,name=batch_size,json=batchSize"`
	xxx_hidden_Filter          *MessageFilter         `protobuf:"bytes,9,opt,name=filter"`
	xxx_hidden_AutoAcknowledge bool                   `protobuf:"varint,10,opt,name=auto_acknowledge,json=autoAcknowledge"`
	xxx_hidden_PauseOnError    bool                   `protobuf:"varint,11,opt,name=pause_on_error,json=pauseOnError"`
	xxx_hidden_IncludeMetadata bool                   `protobuf:"varint,12,opt,name=include_metadata,json=includeMetadata"`
	xxx_hidden_PartitionIds    []int32                `protobuf:"varint,13,rep,packed,name=partition_ids,json=partitionIds"`
	xxx_hidden_StreamConfig    *StreamConfig          `protobuf:"bytes,14,opt,name=stream_config,json=streamConfig"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *StreamMessagesRequest) Reset() {
	*x = StreamMessagesRequest{}
	mi := &file_gcommon_v1_queue_messages_stream_messages_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessagesRequest) ProtoMessage() {}

func (x *StreamMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_stream_messages_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamMessagesRequest) GetTopic() string {
	if x != nil {
		if x.xxx_hidden_Topic != nil {
			return *x.xxx_hidden_Topic
		}
		return ""
	}
	return ""
}

func (x *StreamMessagesRequest) GetConsumerGroupId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerGroupId != nil {
			return *x.xxx_hidden_ConsumerGroupId
		}
		return ""
	}
	return ""
}

func (x *StreamMessagesRequest) GetConsumerId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerId != nil {
			return *x.xxx_hidden_ConsumerId
		}
		return ""
	}
	return ""
}

func (x *StreamMessagesRequest) GetOffsetConfig() *OffsetConfig {
	if x != nil {
		return x.xxx_hidden_OffsetConfig
	}
	return nil
}

func (x *StreamMessagesRequest) GetMaxMessages() int64 {
	if x != nil {
		return x.xxx_hidden_MaxMessages
	}
	return 0
}

func (x *StreamMessagesRequest) GetStreamTimeoutMs() int32 {
	if x != nil {
		return x.xxx_hidden_StreamTimeoutMs
	}
	return 0
}

func (x *StreamMessagesRequest) GetAckLevel() AckLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_AckLevel
		}
	}
	return AckLevel_ACK_LEVEL_UNSPECIFIED
}

func (x *StreamMessagesRequest) GetBatchSize() int32 {
	if x != nil {
		return x.xxx_hidden_BatchSize
	}
	return 0
}

func (x *StreamMessagesRequest) GetFilter() *MessageFilter {
	if x != nil {
		return x.xxx_hidden_Filter
	}
	return nil
}

func (x *StreamMessagesRequest) GetAutoAcknowledge() bool {
	if x != nil {
		return x.xxx_hidden_AutoAcknowledge
	}
	return false
}

func (x *StreamMessagesRequest) GetPauseOnError() bool {
	if x != nil {
		return x.xxx_hidden_PauseOnError
	}
	return false
}

func (x *StreamMessagesRequest) GetIncludeMetadata() bool {
	if x != nil {
		return x.xxx_hidden_IncludeMetadata
	}
	return false
}

func (x *StreamMessagesRequest) GetPartitionIds() []int32 {
	if x != nil {
		return x.xxx_hidden_PartitionIds
	}
	return nil
}

func (x *StreamMessagesRequest) GetStreamConfig() *StreamConfig {
	if x != nil {
		return x.xxx_hidden_StreamConfig
	}
	return nil
}

func (x *StreamMessagesRequest) SetTopic(v string) {
	x.xxx_hidden_Topic = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 14)
}

func (x *StreamMessagesRequest) SetConsumerGroupId(v string) {
	x.xxx_hidden_ConsumerGroupId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 14)
}

func (x *StreamMessagesRequest) SetConsumerId(v string) {
	x.xxx_hidden_ConsumerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 14)
}

func (x *StreamMessagesRequest) SetOffsetConfig(v *OffsetConfig) {
	x.xxx_hidden_OffsetConfig = v
}

func (x *StreamMessagesRequest) SetMaxMessages(v int64) {
	x.xxx_hidden_MaxMessages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 14)
}

func (x *StreamMessagesRequest) SetStreamTimeoutMs(v int32) {
	x.xxx_hidden_StreamTimeoutMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 14)
}

func (x *StreamMessagesRequest) SetAckLevel(v AckLevel) {
	x.xxx_hidden_AckLevel = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 14)
}

func (x *StreamMessagesRequest) SetBatchSize(v int32) {
	x.xxx_hidden_BatchSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 14)
}

func (x *StreamMessagesRequest) SetFilter(v *MessageFilter) {
	x.xxx_hidden_Filter = v
}

func (x *StreamMessagesRequest) SetAutoAcknowledge(v bool) {
	x.xxx_hidden_AutoAcknowledge = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 14)
}

func (x *StreamMessagesRequest) SetPauseOnError(v bool) {
	x.xxx_hidden_PauseOnError = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 14)
}

func (x *StreamMessagesRequest) SetIncludeMetadata(v bool) {
	x.xxx_hidden_IncludeMetadata = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 14)
}

func (x *StreamMessagesRequest) SetPartitionIds(v []int32) {
	x.xxx_hidden_PartitionIds = v
}

func (x *StreamMessagesRequest) SetStreamConfig(v *StreamConfig) {
	x.xxx_hidden_StreamConfig = v
}

func (x *StreamMessagesRequest) HasTopic() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StreamMessagesRequest) HasConsumerGroupId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StreamMessagesRequest) HasConsumerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StreamMessagesRequest) HasOffsetConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OffsetConfig != nil
}

func (x *StreamMessagesRequest) HasMaxMessages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *StreamMessagesRequest) HasStreamTimeoutMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *StreamMessagesRequest) HasAckLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *StreamMessagesRequest) HasBatchSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *StreamMessagesRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Filter != nil
}

func (x *StreamMessagesRequest) HasAutoAcknowledge() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *StreamMessagesRequest) HasPauseOnError() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *StreamMessagesRequest) HasIncludeMetadata() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *StreamMessagesRequest) HasStreamConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StreamConfig != nil
}

func (x *StreamMessagesRequest) ClearTopic() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Topic = nil
}

func (x *StreamMessagesRequest) ClearConsumerGroupId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ConsumerGroupId = nil
}

func (x *StreamMessagesRequest) ClearConsumerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ConsumerId = nil
}

func (x *StreamMessagesRequest) ClearOffsetConfig() {
	x.xxx_hidden_OffsetConfig = nil
}

func (x *StreamMessagesRequest) ClearMaxMessages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MaxMessages = 0
}

func (x *StreamMessagesRequest) ClearStreamTimeoutMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_StreamTimeoutMs = 0
}

func (x *StreamMessagesRequest) ClearAckLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_AckLevel = AckLevel_ACK_LEVEL_UNSPECIFIED
}

func (x *StreamMessagesRequest) ClearBatchSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_BatchSize = 0
}

func (x *StreamMessagesRequest) ClearFilter() {
	x.xxx_hidden_Filter = nil
}

func (x *StreamMessagesRequest) ClearAutoAcknowledge() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_AutoAcknowledge = false
}

func (x *StreamMessagesRequest) ClearPauseOnError() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_PauseOnError = false
}

func (x *StreamMessagesRequest) ClearIncludeMetadata() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_IncludeMetadata = false
}

func (x *StreamMessagesRequest) ClearStreamConfig() {
	x.xxx_hidden_StreamConfig = nil
}

type StreamMessagesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Topic or queue identifier to stream from
	Topic *string
	// Consumer group ID for coordinated consumption
	ConsumerGroupId *string
	// Individual consumer ID within the group
	ConsumerId *string
	// Starting offset configuration
	OffsetConfig *OffsetConfig
	// Maximum number of messages to stream
	MaxMessages *int64
	// Maximum time to keep stream open (milliseconds)
	StreamTimeoutMs *int32
	// Acknowledgment level required
	AckLevel *AckLevel
	// Batch size for message delivery
	BatchSize *int32
	// Message filter criteria
	Filter *MessageFilter
	// Auto-acknowledge messages after delivery
	AutoAcknowledge *bool
	// Pause stream on error
	PauseOnError *bool
	// Include message metadata in stream
	IncludeMetadata *bool
	// Specific partition IDs to stream from (empty = all partitions)
	PartitionIds []int32
	// Stream configuration options
	StreamConfig *StreamConfig
}

func (b0 StreamMessagesRequest_builder) Build() *StreamMessagesRequest {
	m0 := &StreamMessagesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Topic != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 14)
		x.xxx_hidden_Topic = b.Topic
	}
	if b.ConsumerGroupId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 14)
		x.xxx_hidden_ConsumerGroupId = b.ConsumerGroupId
	}
	if b.ConsumerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 14)
		x.xxx_hidden_ConsumerId = b.ConsumerId
	}
	x.xxx_hidden_OffsetConfig = b.OffsetConfig
	if b.MaxMessages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 14)
		x.xxx_hidden_MaxMessages = *b.MaxMessages
	}
	if b.StreamTimeoutMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 14)
		x.xxx_hidden_StreamTimeoutMs = *b.StreamTimeoutMs
	}
	if b.AckLevel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 14)
		x.xxx_hidden_AckLevel = *b.AckLevel
	}
	if b.BatchSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 14)
		x.xxx_hidden_BatchSize = *b.BatchSize
	}
	x.xxx_hidden_Filter = b.Filter
	if b.AutoAcknowledge != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 14)
		x.xxx_hidden_AutoAcknowledge = *b.AutoAcknowledge
	}
	if b.PauseOnError != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 14)
		x.xxx_hidden_PauseOnError = *b.PauseOnError
	}
	if b.IncludeMetadata != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 14)
		x.xxx_hidden_IncludeMetadata = *b.IncludeMetadata
	}
	x.xxx_hidden_PartitionIds = b.PartitionIds
	x.xxx_hidden_StreamConfig = b.StreamConfig
	return m0
}

var File_gcommon_v1_queue_messages_stream_messages_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_stream_messages_request_proto_rawDesc = "" +
	"\n" +
	"7gcommon/v1/queue/messages/stream_messages_request.proto\x12\x10gcommon.v1.queue\x1a&gcommon/v1/queue/enums/ack_level.proto\x1a.gcommon/v1/queue/messages/message_filter.proto\x1a-gcommon/v1/queue/messages/offset_config.proto\x1a-gcommon/v1/queue/messages/stream_config.proto\x1a!google/protobuf/go_features.proto\"\x85\x05\n" +
	"\x15StreamMessagesRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12*\n" +
	"\x11consumer_group_id\x18\x02 \x01(\tR\x0fconsumerGroupId\x12\x1f\n" +
	"\vconsumer_id\x18\x03 \x01(\tR\n" +
	"consumerId\x12C\n" +
	"\roffset_config\x18\x04 \x01(\v2\x1e.gcommon.v1.queue.OffsetConfigR\foffsetConfig\x12!\n" +
	"\fmax_messages\x18\x05 \x01(\x03R\vmaxMessages\x12*\n" +
	"\x11stream_timeout_ms\x18\x06 \x01(\x05R\x0fstreamTimeoutMs\x127\n" +
	"\tack_level\x18\a \x01(\x0e2\x1a.gcommon.v1.queue.AckLevelR\backLevel\x12\x1d\n" +
	"\n" +
	"batch_size\x18\b \x01(\x05R\tbatchSize\x127\n" +
	"\x06filter\x18\t \x01(\v2\x1f.gcommon.v1.queue.MessageFilterR\x06filter\x12)\n" +
	"\x10auto_acknowledge\x18\n" +
	" \x01(\bR\x0fautoAcknowledge\x12$\n" +
	"\x0epause_on_error\x18\v \x01(\bR\fpauseOnError\x12)\n" +
	"\x10include_metadata\x18\f \x01(\bR\x0fincludeMetadata\x12#\n" +
	"\rpartition_ids\x18\r \x03(\x05R\fpartitionIds\x12C\n" +
	"\rstream_config\x18\x0e \x01(\v2\x1e.gcommon.v1.queue.StreamConfigR\fstreamConfigB1Z'github.com/jdfalk/gcommon/sdks/go/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_stream_messages_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_stream_messages_request_proto_goTypes = []any{
	(*StreamMessagesRequest)(nil), // 0: gcommon.v1.queue.StreamMessagesRequest
	(*OffsetConfig)(nil),          // 1: gcommon.v1.queue.OffsetConfig
	(AckLevel)(0),                 // 2: gcommon.v1.queue.AckLevel
	(*MessageFilter)(nil),         // 3: gcommon.v1.queue.MessageFilter
	(*StreamConfig)(nil),          // 4: gcommon.v1.queue.StreamConfig
}
var file_gcommon_v1_queue_messages_stream_messages_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.StreamMessagesRequest.offset_config:type_name -> gcommon.v1.queue.OffsetConfig
	2, // 1: gcommon.v1.queue.StreamMessagesRequest.ack_level:type_name -> gcommon.v1.queue.AckLevel
	3, // 2: gcommon.v1.queue.StreamMessagesRequest.filter:type_name -> gcommon.v1.queue.MessageFilter
	4, // 3: gcommon.v1.queue.StreamMessagesRequest.stream_config:type_name -> gcommon.v1.queue.StreamConfig
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_stream_messages_request_proto_init() }
func file_gcommon_v1_queue_messages_stream_messages_request_proto_init() {
	if File_gcommon_v1_queue_messages_stream_messages_request_proto != nil {
		return
	}
	file_gcommon_v1_queue_enums_ack_level_proto_init()
	file_gcommon_v1_queue_messages_message_filter_proto_init()
	file_gcommon_v1_queue_messages_offset_config_proto_init()
	file_gcommon_v1_queue_messages_stream_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_stream_messages_request_proto_rawDesc), len(file_gcommon_v1_queue_messages_stream_messages_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_stream_messages_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_stream_messages_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_stream_messages_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_stream_messages_request_proto = out.File
	file_gcommon_v1_queue_messages_stream_messages_request_proto_goTypes = nil
	file_gcommon_v1_queue_messages_stream_messages_request_proto_depIdxs = nil
}
