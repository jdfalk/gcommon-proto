// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/topic_permissions.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopicPermissions struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CanRead              bool                   `protobuf:"varint,1,opt,name=can_read,json=canRead"`
	xxx_hidden_CanWrite             bool                   `protobuf:"varint,2,opt,name=can_write,json=canWrite"`
	xxx_hidden_CanConfigure         bool                   `protobuf:"varint,3,opt,name=can_configure,json=canConfigure"`
	xxx_hidden_CanDelete            bool                   `protobuf:"varint,4,opt,name=can_delete,json=canDelete"`
	xxx_hidden_CanManagePermissions bool                   `protobuf:"varint,5,opt,name=can_manage_permissions,json=canManagePermissions"`
	xxx_hidden_CanViewStats         bool                   `protobuf:"varint,6,opt,name=can_view_stats,json=canViewStats"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *TopicPermissions) Reset() {
	*x = TopicPermissions{}
	mi := &file_gcommon_v1_queue_messages_topic_permissions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicPermissions) ProtoMessage() {}

func (x *TopicPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_topic_permissions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TopicPermissions) GetCanRead() bool {
	if x != nil {
		return x.xxx_hidden_CanRead
	}
	return false
}

func (x *TopicPermissions) GetCanWrite() bool {
	if x != nil {
		return x.xxx_hidden_CanWrite
	}
	return false
}

func (x *TopicPermissions) GetCanConfigure() bool {
	if x != nil {
		return x.xxx_hidden_CanConfigure
	}
	return false
}

func (x *TopicPermissions) GetCanDelete() bool {
	if x != nil {
		return x.xxx_hidden_CanDelete
	}
	return false
}

func (x *TopicPermissions) GetCanManagePermissions() bool {
	if x != nil {
		return x.xxx_hidden_CanManagePermissions
	}
	return false
}

func (x *TopicPermissions) GetCanViewStats() bool {
	if x != nil {
		return x.xxx_hidden_CanViewStats
	}
	return false
}

func (x *TopicPermissions) SetCanRead(v bool) {
	x.xxx_hidden_CanRead = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *TopicPermissions) SetCanWrite(v bool) {
	x.xxx_hidden_CanWrite = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *TopicPermissions) SetCanConfigure(v bool) {
	x.xxx_hidden_CanConfigure = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *TopicPermissions) SetCanDelete(v bool) {
	x.xxx_hidden_CanDelete = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *TopicPermissions) SetCanManagePermissions(v bool) {
	x.xxx_hidden_CanManagePermissions = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *TopicPermissions) SetCanViewStats(v bool) {
	x.xxx_hidden_CanViewStats = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *TopicPermissions) HasCanRead() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TopicPermissions) HasCanWrite() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TopicPermissions) HasCanConfigure() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TopicPermissions) HasCanDelete() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *TopicPermissions) HasCanManagePermissions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *TopicPermissions) HasCanViewStats() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *TopicPermissions) ClearCanRead() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CanRead = false
}

func (x *TopicPermissions) ClearCanWrite() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CanWrite = false
}

func (x *TopicPermissions) ClearCanConfigure() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CanConfigure = false
}

func (x *TopicPermissions) ClearCanDelete() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CanDelete = false
}

func (x *TopicPermissions) ClearCanManagePermissions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CanManagePermissions = false
}

func (x *TopicPermissions) ClearCanViewStats() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_CanViewStats = false
}

type TopicPermissions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Can read messages from topic
	CanRead *bool
	// Can write messages to topic
	CanWrite *bool
	// Can modify topic configuration
	CanConfigure *bool
	// Can delete the topic
	CanDelete *bool
	// Can manage topic permissions
	CanManagePermissions *bool
	// Can view topic statistics
	CanViewStats *bool
}

func (b0 TopicPermissions_builder) Build() *TopicPermissions {
	m0 := &TopicPermissions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CanRead != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_CanRead = *b.CanRead
	}
	if b.CanWrite != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_CanWrite = *b.CanWrite
	}
	if b.CanConfigure != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_CanConfigure = *b.CanConfigure
	}
	if b.CanDelete != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_CanDelete = *b.CanDelete
	}
	if b.CanManagePermissions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_CanManagePermissions = *b.CanManagePermissions
	}
	if b.CanViewStats != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_CanViewStats = *b.CanViewStats
	}
	return m0
}

var File_gcommon_v1_queue_messages_topic_permissions_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_topic_permissions_proto_rawDesc = "" +
	"\n" +
	"1gcommon/v1/queue/messages/topic_permissions.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\"\xea\x01\n" +
	"\x10TopicPermissions\x12\x19\n" +
	"\bcan_read\x18\x01 \x01(\bR\acanRead\x12\x1b\n" +
	"\tcan_write\x18\x02 \x01(\bR\bcanWrite\x12#\n" +
	"\rcan_configure\x18\x03 \x01(\bR\fcanConfigure\x12\x1d\n" +
	"\n" +
	"can_delete\x18\x04 \x01(\bR\tcanDelete\x124\n" +
	"\x16can_manage_permissions\x18\x05 \x01(\bR\x14canManagePermissions\x12$\n" +
	"\x0ecan_view_stats\x18\x06 \x01(\bR\fcanViewStatsB\xd4\x01\n" +
	"\x14com.gcommon.v1.queueB\x15TopicPermissionsProtoP\x01Z;github.com/jdfalk/gcommon/sdks/go/gcommon/v1/queue/messages\xa2\x02\x03GVQ\xaa\x02\x10Gcommon.V1.Queue\xca\x02\x10Gcommon\\V1\\Queue\xe2\x02\x1cGcommon\\V1\\Queue\\GPBMetadata\xea\x02\x12Gcommon::V1::Queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_topic_permissions_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_topic_permissions_proto_goTypes = []any{
	(*TopicPermissions)(nil), // 0: gcommon.v1.queue.TopicPermissions
}
var file_gcommon_v1_queue_messages_topic_permissions_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_topic_permissions_proto_init() }
func file_gcommon_v1_queue_messages_topic_permissions_proto_init() {
	if File_gcommon_v1_queue_messages_topic_permissions_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_topic_permissions_proto_rawDesc), len(file_gcommon_v1_queue_messages_topic_permissions_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_topic_permissions_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_topic_permissions_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_topic_permissions_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_topic_permissions_proto = out.File
	file_gcommon_v1_queue_messages_topic_permissions_proto_goTypes = nil
	file_gcommon_v1_queue_messages_topic_permissions_proto_depIdxs = nil
}
