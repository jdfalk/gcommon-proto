// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/messages/pause_queue_request.proto

package queue

import (
	common "github.com/jdfalk/gcommon/sdks/go/gcommon/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Request to pause a queue.
// Stops message processing while keeping messages in the queue.
type PauseQueueRequest struct {
	state                   protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_QueueName    *string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName"`
	xxx_hidden_Reason       *string                 `protobuf:"bytes,2,opt,name=reason"`
	xxx_hidden_Graceful     bool                    `protobuf:"varint,3,opt,name=graceful"`
	xxx_hidden_TimeoutMs    int32                   `protobuf:"varint,4,opt,name=timeout_ms,json=timeoutMs"`
	xxx_hidden_Metadata     *common.RequestMetadata `protobuf:"bytes,5,opt,name=metadata"`
	xxx_hidden_PartitionIds []int32                 `protobuf:"varint,6,rep,packed,name=partition_ids,json=partitionIds"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PauseQueueRequest) Reset() {
	*x = PauseQueueRequest{}
	mi := &file_gcommon_v1_queue_messages_pause_queue_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseQueueRequest) ProtoMessage() {}

func (x *PauseQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_messages_pause_queue_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PauseQueueRequest) GetQueueName() string {
	if x != nil {
		if x.xxx_hidden_QueueName != nil {
			return *x.xxx_hidden_QueueName
		}
		return ""
	}
	return ""
}

func (x *PauseQueueRequest) GetReason() string {
	if x != nil {
		if x.xxx_hidden_Reason != nil {
			return *x.xxx_hidden_Reason
		}
		return ""
	}
	return ""
}

func (x *PauseQueueRequest) GetGraceful() bool {
	if x != nil {
		return x.xxx_hidden_Graceful
	}
	return false
}

func (x *PauseQueueRequest) GetTimeoutMs() int32 {
	if x != nil {
		return x.xxx_hidden_TimeoutMs
	}
	return 0
}

func (x *PauseQueueRequest) GetMetadata() *common.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *PauseQueueRequest) GetPartitionIds() []int32 {
	if x != nil {
		return x.xxx_hidden_PartitionIds
	}
	return nil
}

func (x *PauseQueueRequest) SetQueueName(v string) {
	x.xxx_hidden_QueueName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *PauseQueueRequest) SetReason(v string) {
	x.xxx_hidden_Reason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *PauseQueueRequest) SetGraceful(v bool) {
	x.xxx_hidden_Graceful = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *PauseQueueRequest) SetTimeoutMs(v int32) {
	x.xxx_hidden_TimeoutMs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *PauseQueueRequest) SetMetadata(v *common.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *PauseQueueRequest) SetPartitionIds(v []int32) {
	x.xxx_hidden_PartitionIds = v
}

func (x *PauseQueueRequest) HasQueueName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PauseQueueRequest) HasReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PauseQueueRequest) HasGraceful() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PauseQueueRequest) HasTimeoutMs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PauseQueueRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *PauseQueueRequest) ClearQueueName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_QueueName = nil
}

func (x *PauseQueueRequest) ClearReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Reason = nil
}

func (x *PauseQueueRequest) ClearGraceful() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Graceful = false
}

func (x *PauseQueueRequest) ClearTimeoutMs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TimeoutMs = 0
}

func (x *PauseQueueRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type PauseQueueRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of the queue to pause
	QueueName *string
	// Reason for pausing the queue
	Reason *string
	// Whether to wait for current messages to finish processing
	Graceful *bool
	// Timeout for graceful pause (milliseconds)
	TimeoutMs *int32
	// Request metadata for tracing and correlation
	Metadata *common.RequestMetadata
	// Whether to pause specific partitions only
	PartitionIds []int32
}

func (b0 PauseQueueRequest_builder) Build() *PauseQueueRequest {
	m0 := &PauseQueueRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.QueueName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_QueueName = b.QueueName
	}
	if b.Reason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Reason = b.Reason
	}
	if b.Graceful != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Graceful = *b.Graceful
	}
	if b.TimeoutMs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_TimeoutMs = *b.TimeoutMs
	}
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_PartitionIds = b.PartitionIds
	return m0
}

var File_gcommon_v1_queue_messages_pause_queue_request_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_messages_pause_queue_request_proto_rawDesc = "" +
	"\n" +
	"3gcommon/v1/queue/messages/pause_queue_request.proto\x12\x10gcommon.v1.queue\x1a1gcommon/v1/common/messages/request_metadata.proto\x1a!google/protobuf/go_features.proto\"\xea\x01\n" +
	"\x11PauseQueueRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x1a\n" +
	"\bgraceful\x18\x03 \x01(\bR\bgraceful\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x04 \x01(\x05R\ttimeoutMs\x12>\n" +
	"\bmetadata\x18\x05 \x01(\v2\".gcommon.v1.common.RequestMetadataR\bmetadata\x12#\n" +
	"\rpartition_ids\x18\x06 \x03(\x05R\fpartitionIdsB1Z'github.com/jdfalk/gcommon/sdks/go/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_messages_pause_queue_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_messages_pause_queue_request_proto_goTypes = []any{
	(*PauseQueueRequest)(nil),      // 0: gcommon.v1.queue.PauseQueueRequest
	(*common.RequestMetadata)(nil), // 1: gcommon.v1.common.RequestMetadata
}
var file_gcommon_v1_queue_messages_pause_queue_request_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.PauseQueueRequest.metadata:type_name -> gcommon.v1.common.RequestMetadata
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_messages_pause_queue_request_proto_init() }
func file_gcommon_v1_queue_messages_pause_queue_request_proto_init() {
	if File_gcommon_v1_queue_messages_pause_queue_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_messages_pause_queue_request_proto_rawDesc), len(file_gcommon_v1_queue_messages_pause_queue_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_messages_pause_queue_request_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_messages_pause_queue_request_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_messages_pause_queue_request_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_messages_pause_queue_request_proto = out.File
	file_gcommon_v1_queue_messages_pause_queue_request_proto_goTypes = nil
	file_gcommon_v1_queue_messages_pause_queue_request_proto_depIdxs = nil
}
