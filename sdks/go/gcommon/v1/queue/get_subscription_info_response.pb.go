// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/get_subscription_info_response.proto

package queue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Response message for subscription information retrieval.
type GetSubscriptionInfoResponse struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SubscriptionId   *string                `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId"`
	xxx_hidden_SubscriptionName *string                `protobuf:"bytes,2,opt,name=subscription_name,json=subscriptionName"`
	xxx_hidden_TopicName        *string                `protobuf:"bytes,3,opt,name=topic_name,json=topicName"`
	xxx_hidden_State            *string                `protobuf:"bytes,4,opt,name=state"`
	xxx_hidden_ConsumerGroup    *string                `protobuf:"bytes,5,opt,name=consumer_group,json=consumerGroup"`
	xxx_hidden_CurrentOffset    uint64                 `protobuf:"varint,6,opt,name=current_offset,json=currentOffset"`
	xxx_hidden_LatestOffset     uint64                 `protobuf:"varint,7,opt,name=latest_offset,json=latestOffset"`
	xxx_hidden_UnackedCount     uint64                 `protobuf:"varint,8,opt,name=unacked_count,json=unackedCount"`
	xxx_hidden_CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt"`
	xxx_hidden_LastActivity     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_activity,json=lastActivity"`
	xxx_hidden_ActiveConsumers  uint32                 `protobuf:"varint,11,opt,name=active_consumers,json=activeConsumers"`
	xxx_hidden_TotalConsumed    uint64                 `protobuf:"varint,12,opt,name=total_consumed,json=totalConsumed"`
	xxx_hidden_ConsumptionRate  float64                `protobuf:"fixed64,13,opt,name=consumption_rate,json=consumptionRate"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *GetSubscriptionInfoResponse) Reset() {
	*x = GetSubscriptionInfoResponse{}
	mi := &file_gcommon_v1_queue_get_subscription_info_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionInfoResponse) ProtoMessage() {}

func (x *GetSubscriptionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_get_subscription_info_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetSubscriptionInfoResponse) GetSubscriptionId() string {
	if x != nil {
		if x.xxx_hidden_SubscriptionId != nil {
			return *x.xxx_hidden_SubscriptionId
		}
		return ""
	}
	return ""
}

func (x *GetSubscriptionInfoResponse) GetSubscriptionName() string {
	if x != nil {
		if x.xxx_hidden_SubscriptionName != nil {
			return *x.xxx_hidden_SubscriptionName
		}
		return ""
	}
	return ""
}

func (x *GetSubscriptionInfoResponse) GetTopicName() string {
	if x != nil {
		if x.xxx_hidden_TopicName != nil {
			return *x.xxx_hidden_TopicName
		}
		return ""
	}
	return ""
}

func (x *GetSubscriptionInfoResponse) GetState() string {
	if x != nil {
		if x.xxx_hidden_State != nil {
			return *x.xxx_hidden_State
		}
		return ""
	}
	return ""
}

func (x *GetSubscriptionInfoResponse) GetConsumerGroup() string {
	if x != nil {
		if x.xxx_hidden_ConsumerGroup != nil {
			return *x.xxx_hidden_ConsumerGroup
		}
		return ""
	}
	return ""
}

func (x *GetSubscriptionInfoResponse) GetCurrentOffset() uint64 {
	if x != nil {
		return x.xxx_hidden_CurrentOffset
	}
	return 0
}

func (x *GetSubscriptionInfoResponse) GetLatestOffset() uint64 {
	if x != nil {
		return x.xxx_hidden_LatestOffset
	}
	return 0
}

func (x *GetSubscriptionInfoResponse) GetUnackedCount() uint64 {
	if x != nil {
		return x.xxx_hidden_UnackedCount
	}
	return 0
}

func (x *GetSubscriptionInfoResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *GetSubscriptionInfoResponse) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastActivity
	}
	return nil
}

func (x *GetSubscriptionInfoResponse) GetActiveConsumers() uint32 {
	if x != nil {
		return x.xxx_hidden_ActiveConsumers
	}
	return 0
}

func (x *GetSubscriptionInfoResponse) GetTotalConsumed() uint64 {
	if x != nil {
		return x.xxx_hidden_TotalConsumed
	}
	return 0
}

func (x *GetSubscriptionInfoResponse) GetConsumptionRate() float64 {
	if x != nil {
		return x.xxx_hidden_ConsumptionRate
	}
	return 0
}

func (x *GetSubscriptionInfoResponse) SetSubscriptionId(v string) {
	x.xxx_hidden_SubscriptionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 13)
}

func (x *GetSubscriptionInfoResponse) SetSubscriptionName(v string) {
	x.xxx_hidden_SubscriptionName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 13)
}

func (x *GetSubscriptionInfoResponse) SetTopicName(v string) {
	x.xxx_hidden_TopicName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 13)
}

func (x *GetSubscriptionInfoResponse) SetState(v string) {
	x.xxx_hidden_State = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 13)
}

func (x *GetSubscriptionInfoResponse) SetConsumerGroup(v string) {
	x.xxx_hidden_ConsumerGroup = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 13)
}

func (x *GetSubscriptionInfoResponse) SetCurrentOffset(v uint64) {
	x.xxx_hidden_CurrentOffset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 13)
}

func (x *GetSubscriptionInfoResponse) SetLatestOffset(v uint64) {
	x.xxx_hidden_LatestOffset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 13)
}

func (x *GetSubscriptionInfoResponse) SetUnackedCount(v uint64) {
	x.xxx_hidden_UnackedCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 13)
}

func (x *GetSubscriptionInfoResponse) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *GetSubscriptionInfoResponse) SetLastActivity(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastActivity = v
}

func (x *GetSubscriptionInfoResponse) SetActiveConsumers(v uint32) {
	x.xxx_hidden_ActiveConsumers = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 13)
}

func (x *GetSubscriptionInfoResponse) SetTotalConsumed(v uint64) {
	x.xxx_hidden_TotalConsumed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 13)
}

func (x *GetSubscriptionInfoResponse) SetConsumptionRate(v float64) {
	x.xxx_hidden_ConsumptionRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 13)
}

func (x *GetSubscriptionInfoResponse) HasSubscriptionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetSubscriptionInfoResponse) HasSubscriptionName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetSubscriptionInfoResponse) HasTopicName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetSubscriptionInfoResponse) HasState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetSubscriptionInfoResponse) HasConsumerGroup() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *GetSubscriptionInfoResponse) HasCurrentOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *GetSubscriptionInfoResponse) HasLatestOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *GetSubscriptionInfoResponse) HasUnackedCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *GetSubscriptionInfoResponse) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *GetSubscriptionInfoResponse) HasLastActivity() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastActivity != nil
}

func (x *GetSubscriptionInfoResponse) HasActiveConsumers() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *GetSubscriptionInfoResponse) HasTotalConsumed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *GetSubscriptionInfoResponse) HasConsumptionRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *GetSubscriptionInfoResponse) ClearSubscriptionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SubscriptionId = nil
}

func (x *GetSubscriptionInfoResponse) ClearSubscriptionName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SubscriptionName = nil
}

func (x *GetSubscriptionInfoResponse) ClearTopicName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TopicName = nil
}

func (x *GetSubscriptionInfoResponse) ClearState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_State = nil
}

func (x *GetSubscriptionInfoResponse) ClearConsumerGroup() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ConsumerGroup = nil
}

func (x *GetSubscriptionInfoResponse) ClearCurrentOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_CurrentOffset = 0
}

func (x *GetSubscriptionInfoResponse) ClearLatestOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_LatestOffset = 0
}

func (x *GetSubscriptionInfoResponse) ClearUnackedCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_UnackedCount = 0
}

func (x *GetSubscriptionInfoResponse) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *GetSubscriptionInfoResponse) ClearLastActivity() {
	x.xxx_hidden_LastActivity = nil
}

func (x *GetSubscriptionInfoResponse) ClearActiveConsumers() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_ActiveConsumers = 0
}

func (x *GetSubscriptionInfoResponse) ClearTotalConsumed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_TotalConsumed = 0
}

func (x *GetSubscriptionInfoResponse) ClearConsumptionRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_ConsumptionRate = 0
}

type GetSubscriptionInfoResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique identifier for the subscription
	SubscriptionId *string
	// Name of the subscription
	SubscriptionName *string
	// Topic this subscription is bound to
	TopicName *string
	// Current state of the subscription
	State *string
	// Consumer group associated with this subscription
	ConsumerGroup *string
	// Current message offset position
	CurrentOffset *uint64
	// Latest available message offset
	LatestOffset *uint64
	// Number of unacknowledged messages
	UnackedCount *uint64
	// Subscription creation timestamp
	CreatedAt *timestamppb.Timestamp
	// Last activity timestamp
	LastActivity *timestamppb.Timestamp
	// Number of active consumers
	ActiveConsumers *uint32
	// Total messages consumed
	TotalConsumed *uint64
	// Message consumption rate (messages per second)
	ConsumptionRate *float64
}

func (b0 GetSubscriptionInfoResponse_builder) Build() *GetSubscriptionInfoResponse {
	m0 := &GetSubscriptionInfoResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SubscriptionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 13)
		x.xxx_hidden_SubscriptionId = b.SubscriptionId
	}
	if b.SubscriptionName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 13)
		x.xxx_hidden_SubscriptionName = b.SubscriptionName
	}
	if b.TopicName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 13)
		x.xxx_hidden_TopicName = b.TopicName
	}
	if b.State != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 13)
		x.xxx_hidden_State = b.State
	}
	if b.ConsumerGroup != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 13)
		x.xxx_hidden_ConsumerGroup = b.ConsumerGroup
	}
	if b.CurrentOffset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 13)
		x.xxx_hidden_CurrentOffset = *b.CurrentOffset
	}
	if b.LatestOffset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 13)
		x.xxx_hidden_LatestOffset = *b.LatestOffset
	}
	if b.UnackedCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 13)
		x.xxx_hidden_UnackedCount = *b.UnackedCount
	}
	x.xxx_hidden_CreatedAt = b.CreatedAt
	x.xxx_hidden_LastActivity = b.LastActivity
	if b.ActiveConsumers != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 13)
		x.xxx_hidden_ActiveConsumers = *b.ActiveConsumers
	}
	if b.TotalConsumed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 13)
		x.xxx_hidden_TotalConsumed = *b.TotalConsumed
	}
	if b.ConsumptionRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 13)
		x.xxx_hidden_ConsumptionRate = *b.ConsumptionRate
	}
	return m0
}

var File_gcommon_v1_queue_get_subscription_info_response_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_get_subscription_info_response_proto_rawDesc = "" +
	"\n" +
	"5gcommon/v1/queue/get_subscription_info_response.proto\x12\x10gcommon.v1.queue\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb9\x04\n" +
	"\x1bGetSubscriptionInfoResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12+\n" +
	"\x11subscription_name\x18\x02 \x01(\tR\x10subscriptionName\x12\x1d\n" +
	"\n" +
	"topic_name\x18\x03 \x01(\tR\ttopicName\x12\x14\n" +
	"\x05state\x18\x04 \x01(\tR\x05state\x12%\n" +
	"\x0econsumer_group\x18\x05 \x01(\tR\rconsumerGroup\x12%\n" +
	"\x0ecurrent_offset\x18\x06 \x01(\x04R\rcurrentOffset\x12#\n" +
	"\rlatest_offset\x18\a \x01(\x04R\flatestOffset\x12#\n" +
	"\runacked_count\x18\b \x01(\x04R\funackedCount\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12?\n" +
	"\rlast_activity\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\flastActivity\x12)\n" +
	"\x10active_consumers\x18\v \x01(\rR\x0factiveConsumers\x12%\n" +
	"\x0etotal_consumed\x18\f \x01(\x04R\rtotalConsumed\x12)\n" +
	"\x10consumption_rate\x18\r \x01(\x01R\x0fconsumptionRateB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_get_subscription_info_response_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_get_subscription_info_response_proto_goTypes = []any{
	(*GetSubscriptionInfoResponse)(nil), // 0: gcommon.v1.queue.GetSubscriptionInfoResponse
	(*timestamppb.Timestamp)(nil),       // 1: google.protobuf.Timestamp
}
var file_gcommon_v1_queue_get_subscription_info_response_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.GetSubscriptionInfoResponse.created_at:type_name -> google.protobuf.Timestamp
	1, // 1: gcommon.v1.queue.GetSubscriptionInfoResponse.last_activity:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_get_subscription_info_response_proto_init() }
func file_gcommon_v1_queue_get_subscription_info_response_proto_init() {
	if File_gcommon_v1_queue_get_subscription_info_response_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_get_subscription_info_response_proto_rawDesc), len(file_gcommon_v1_queue_get_subscription_info_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_get_subscription_info_response_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_get_subscription_info_response_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_get_subscription_info_response_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_get_subscription_info_response_proto = out.File
	file_gcommon_v1_queue_get_subscription_info_response_proto_goTypes = nil
	file_gcommon_v1_queue_get_subscription_info_response_proto_depIdxs = nil
}
