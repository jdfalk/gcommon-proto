// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: gcommon/v1/queue/node_info.proto

package queue

import (
	common "github.com/jdfalk/gcommon/sdks/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Information about a single node in the cluster.
type NodeInfo struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_NodeId        *string                `protobuf:"bytes,1,opt,name=node_id,json=nodeId"`
	xxx_hidden_Hostname      *string                `protobuf:"bytes,2,opt,name=hostname"`
	xxx_hidden_Port          int32                  `protobuf:"varint,3,opt,name=port"`
	xxx_hidden_State         common.NodeState       `protobuf:"varint,4,opt,name=state,enum=gcommon.v1.common.NodeState"`
	xxx_hidden_Roles         []string               `protobuf:"bytes,5,rep,name=roles"`
	xxx_hidden_LastHeartbeat *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_heartbeat,json=lastHeartbeat"`
	xxx_hidden_Stats         *NodeStats             `protobuf:"bytes,7,opt,name=stats"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_gcommon_v1_queue_node_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcommon_v1_queue_node_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NodeInfo) GetNodeId() string {
	if x != nil {
		if x.xxx_hidden_NodeId != nil {
			return *x.xxx_hidden_NodeId
		}
		return ""
	}
	return ""
}

func (x *NodeInfo) GetHostname() string {
	if x != nil {
		if x.xxx_hidden_Hostname != nil {
			return *x.xxx_hidden_Hostname
		}
		return ""
	}
	return ""
}

func (x *NodeInfo) GetPort() int32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *NodeInfo) GetState() common.NodeState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_State
		}
	}
	return common.NodeState(0)
}

func (x *NodeInfo) GetRoles() []string {
	if x != nil {
		return x.xxx_hidden_Roles
	}
	return nil
}

func (x *NodeInfo) GetLastHeartbeat() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastHeartbeat
	}
	return nil
}

func (x *NodeInfo) GetStats() *NodeStats {
	if x != nil {
		return x.xxx_hidden_Stats
	}
	return nil
}

func (x *NodeInfo) SetNodeId(v string) {
	x.xxx_hidden_NodeId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *NodeInfo) SetHostname(v string) {
	x.xxx_hidden_Hostname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *NodeInfo) SetPort(v int32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *NodeInfo) SetState(v common.NodeState) {
	x.xxx_hidden_State = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *NodeInfo) SetRoles(v []string) {
	x.xxx_hidden_Roles = v
}

func (x *NodeInfo) SetLastHeartbeat(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastHeartbeat = v
}

func (x *NodeInfo) SetStats(v *NodeStats) {
	x.xxx_hidden_Stats = v
}

func (x *NodeInfo) HasNodeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NodeInfo) HasHostname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NodeInfo) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NodeInfo) HasState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *NodeInfo) HasLastHeartbeat() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastHeartbeat != nil
}

func (x *NodeInfo) HasStats() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Stats != nil
}

func (x *NodeInfo) ClearNodeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NodeId = nil
}

func (x *NodeInfo) ClearHostname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Hostname = nil
}

func (x *NodeInfo) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Port = 0
}

func (x *NodeInfo) ClearState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_State = common.NodeState_NODE_STATE_UNSPECIFIED
}

func (x *NodeInfo) ClearLastHeartbeat() {
	x.xxx_hidden_LastHeartbeat = nil
}

func (x *NodeInfo) ClearStats() {
	x.xxx_hidden_Stats = nil
}

type NodeInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique identifier for the node
	NodeId *string
	// Hostname or address of the node
	Hostname *string
	// Port number for the node
	Port *int32
	// Current state of the node
	State *common.NodeState
	// Node roles (leader, follower, etc.)
	Roles []string
	// Timestamp when node was last seen
	LastHeartbeat *timestamppb.Timestamp
	// Node-specific statistics
	Stats *NodeStats
}

func (b0 NodeInfo_builder) Build() *NodeInfo {
	m0 := &NodeInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NodeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_NodeId = b.NodeId
	}
	if b.Hostname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Hostname = b.Hostname
	}
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Port = *b.Port
	}
	if b.State != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_State = *b.State
	}
	x.xxx_hidden_Roles = b.Roles
	x.xxx_hidden_LastHeartbeat = b.LastHeartbeat
	x.xxx_hidden_Stats = b.Stats
	return m0
}

var File_gcommon_v1_queue_node_info_proto protoreflect.FileDescriptor

const file_gcommon_v1_queue_node_info_proto_rawDesc = "" +
	"\n" +
	" gcommon/v1/queue/node_info.proto\x12\x10gcommon.v1.queue\x1a\"gcommon/v1/common/node_state.proto\x1a!gcommon/v1/queue/node_stats.proto\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x93\x02\n" +
	"\bNodeInfo\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x122\n" +
	"\x05state\x18\x04 \x01(\x0e2\x1c.gcommon.v1.common.NodeStateR\x05state\x12\x14\n" +
	"\x05roles\x18\x05 \x03(\tR\x05roles\x12A\n" +
	"\x0elast_heartbeat\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\rlastHeartbeat\x121\n" +
	"\x05stats\x18\a \x01(\v2\x1b.gcommon.v1.queue.NodeStatsR\x05statsB4Z*github.com/jdfalk/gcommon/sdks/go/v1/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_gcommon_v1_queue_node_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gcommon_v1_queue_node_info_proto_goTypes = []any{
	(*NodeInfo)(nil),              // 0: gcommon.v1.queue.NodeInfo
	(common.NodeState)(0),         // 1: gcommon.v1.common.NodeState
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*NodeStats)(nil),             // 3: gcommon.v1.queue.NodeStats
}
var file_gcommon_v1_queue_node_info_proto_depIdxs = []int32{
	1, // 0: gcommon.v1.queue.NodeInfo.state:type_name -> gcommon.v1.common.NodeState
	2, // 1: gcommon.v1.queue.NodeInfo.last_heartbeat:type_name -> google.protobuf.Timestamp
	3, // 2: gcommon.v1.queue.NodeInfo.stats:type_name -> gcommon.v1.queue.NodeStats
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gcommon_v1_queue_node_info_proto_init() }
func file_gcommon_v1_queue_node_info_proto_init() {
	if File_gcommon_v1_queue_node_info_proto != nil {
		return
	}
	file_gcommon_v1_queue_node_stats_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcommon_v1_queue_node_info_proto_rawDesc), len(file_gcommon_v1_queue_node_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcommon_v1_queue_node_info_proto_goTypes,
		DependencyIndexes: file_gcommon_v1_queue_node_info_proto_depIdxs,
		MessageInfos:      file_gcommon_v1_queue_node_info_proto_msgTypes,
	}.Build()
	File_gcommon_v1_queue_node_info_proto = out.File
	file_gcommon_v1_queue_node_info_proto_goTypes = nil
	file_gcommon_v1_queue_node_info_proto_depIdxs = nil
}
