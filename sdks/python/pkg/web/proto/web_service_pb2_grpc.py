# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pkg.web.proto import handle_request_request_pb2 as pkg_dot_web_dot_proto_dot_handle__request__request__pb2
from pkg.web.proto import handle_request_response_pb2 as pkg_dot_web_dot_proto_dot_handle__request__response__pb2
from pkg.web.proto import health_check_request_pb2 as pkg_dot_web_dot_proto_dot_health__check__request__pb2
from pkg.web.proto import health_check_response_pb2 as pkg_dot_web_dot_proto_dot_health__check__response__pb2


class WebServiceStub(object):
    """*
    WebService provides core web server operations for
    handling HTTP requests and managing web services.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HandleRequest = channel.unary_unary(
                '/gcommon.v1.web.WebService/HandleRequest',
                request_serializer=pkg_dot_web_dot_proto_dot_handle__request__request__pb2.HandleRequestRequest.SerializeToString,
                response_deserializer=pkg_dot_web_dot_proto_dot_handle__request__response__pb2.HandleRequestResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/gcommon.v1.web.WebService/HealthCheck',
                request_serializer=pkg_dot_web_dot_proto_dot_health__check__request__pb2.WebHealthCheckRequest.SerializeToString,
                response_deserializer=pkg_dot_web_dot_proto_dot_health__check__response__pb2.WebHealthCheckResponse.FromString,
                _registered_method=True)


class WebServiceServicer(object):
    """*
    WebService provides core web server operations for
    handling HTTP requests and managing web services.
    """

    def HandleRequest(self, request, context):
        """Handle an incoming web request
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Check health of web service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WebServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HandleRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleRequest,
                    request_deserializer=pkg_dot_web_dot_proto_dot_handle__request__request__pb2.HandleRequestRequest.FromString,
                    response_serializer=pkg_dot_web_dot_proto_dot_handle__request__response__pb2.HandleRequestResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=pkg_dot_web_dot_proto_dot_health__check__request__pb2.WebHealthCheckRequest.FromString,
                    response_serializer=pkg_dot_web_dot_proto_dot_health__check__response__pb2.WebHealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.web.WebService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.web.WebService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class WebService(object):
    """*
    WebService provides core web server operations for
    handling HTTP requests and managing web services.
    """

    @staticmethod
    def HandleRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.web.WebService/HandleRequest',
            pkg_dot_web_dot_proto_dot_handle__request__request__pb2.HandleRequestRequest.SerializeToString,
            pkg_dot_web_dot_proto_dot_handle__request__response__pb2.HandleRequestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.web.WebService/HealthCheck',
            pkg_dot_web_dot_proto_dot_health__check__request__pb2.WebHealthCheckRequest.SerializeToString,
            pkg_dot_web_dot_proto_dot_health__check__response__pb2.WebHealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
