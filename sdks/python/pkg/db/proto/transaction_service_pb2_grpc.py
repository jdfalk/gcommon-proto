# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from pkg.db.proto import begin_transaction_request_pb2 as pkg_dot_db_dot_proto_dot_begin__transaction__request__pb2
from pkg.db.proto import begin_transaction_response_pb2 as pkg_dot_db_dot_proto_dot_begin__transaction__response__pb2
from pkg.db.proto import commit_transaction_request_pb2 as pkg_dot_db_dot_proto_dot_commit__transaction__request__pb2
from pkg.db.proto import rollback_transaction_request_pb2 as pkg_dot_db_dot_proto_dot_rollback__transaction__request__pb2
from pkg.db.proto import transaction_status_request_pb2 as pkg_dot_db_dot_proto_dot_transaction__status__request__pb2
from pkg.db.proto import transaction_status_response_pb2 as pkg_dot_db_dot_proto_dot_transaction__status__response__pb2


class TransactionServiceStub(object):
    """*
    TransactionService manages database transactions.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BeginTransaction = channel.unary_unary(
                '/gcommon.v1.database.TransactionService/BeginTransaction',
                request_serializer=pkg_dot_db_dot_proto_dot_begin__transaction__request__pb2.BeginTransactionRequest.SerializeToString,
                response_deserializer=pkg_dot_db_dot_proto_dot_begin__transaction__response__pb2.BeginTransactionResponse.FromString,
                _registered_method=True)
        self.CommitTransaction = channel.unary_unary(
                '/gcommon.v1.database.TransactionService/CommitTransaction',
                request_serializer=pkg_dot_db_dot_proto_dot_commit__transaction__request__pb2.CommitTransactionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.RollbackTransaction = channel.unary_unary(
                '/gcommon.v1.database.TransactionService/RollbackTransaction',
                request_serializer=pkg_dot_db_dot_proto_dot_rollback__transaction__request__pb2.RollbackTransactionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetTransactionStatus = channel.unary_unary(
                '/gcommon.v1.database.TransactionService/GetTransactionStatus',
                request_serializer=pkg_dot_db_dot_proto_dot_transaction__status__request__pb2.TransactionStatusRequest.SerializeToString,
                response_deserializer=pkg_dot_db_dot_proto_dot_transaction__status__response__pb2.TransactionStatusResponse.FromString,
                _registered_method=True)


class TransactionServiceServicer(object):
    """*
    TransactionService manages database transactions.
    """

    def BeginTransaction(self, request, context):
        """Begin a new transaction
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommitTransaction(self, request, context):
        """Commit the specified transaction
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RollbackTransaction(self, request, context):
        """Roll back the specified transaction
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionStatus(self, request, context):
        """Retrieve status information for a transaction
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransactionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BeginTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.BeginTransaction,
                    request_deserializer=pkg_dot_db_dot_proto_dot_begin__transaction__request__pb2.BeginTransactionRequest.FromString,
                    response_serializer=pkg_dot_db_dot_proto_dot_begin__transaction__response__pb2.BeginTransactionResponse.SerializeToString,
            ),
            'CommitTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CommitTransaction,
                    request_deserializer=pkg_dot_db_dot_proto_dot_commit__transaction__request__pb2.CommitTransactionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RollbackTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.RollbackTransaction,
                    request_deserializer=pkg_dot_db_dot_proto_dot_rollback__transaction__request__pb2.RollbackTransactionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetTransactionStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionStatus,
                    request_deserializer=pkg_dot_db_dot_proto_dot_transaction__status__request__pb2.TransactionStatusRequest.FromString,
                    response_serializer=pkg_dot_db_dot_proto_dot_transaction__status__response__pb2.TransactionStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.database.TransactionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.database.TransactionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TransactionService(object):
    """*
    TransactionService manages database transactions.
    """

    @staticmethod
    def BeginTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.database.TransactionService/BeginTransaction',
            pkg_dot_db_dot_proto_dot_begin__transaction__request__pb2.BeginTransactionRequest.SerializeToString,
            pkg_dot_db_dot_proto_dot_begin__transaction__response__pb2.BeginTransactionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommitTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.database.TransactionService/CommitTransaction',
            pkg_dot_db_dot_proto_dot_commit__transaction__request__pb2.CommitTransactionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RollbackTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.database.TransactionService/RollbackTransaction',
            pkg_dot_db_dot_proto_dot_rollback__transaction__request__pb2.RollbackTransactionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTransactionStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.database.TransactionService/GetTransactionStatus',
            pkg_dot_db_dot_proto_dot_transaction__status__request__pb2.TransactionStatusRequest.SerializeToString,
            pkg_dot_db_dot_proto_dot_transaction__status__response__pb2.TransactionStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
