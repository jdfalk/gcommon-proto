# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from pkg.db.proto import create_database_request_pb2 as pkg_dot_db_dot_proto_dot_create__database__request__pb2
from pkg.db.proto import create_database_response_pb2 as pkg_dot_db_dot_proto_dot_create__database__response__pb2
from pkg.db.proto import create_schema_request_pb2 as pkg_dot_db_dot_proto_dot_create__schema__request__pb2
from pkg.db.proto import create_schema_response_pb2 as pkg_dot_db_dot_proto_dot_create__schema__response__pb2
from pkg.db.proto import drop_database_request_pb2 as pkg_dot_db_dot_proto_dot_drop__database__request__pb2
from pkg.db.proto import drop_schema_request_pb2 as pkg_dot_db_dot_proto_dot_drop__schema__request__pb2
from pkg.db.proto import get_database_info_request_pb2 as pkg_dot_db_dot_proto_dot_get__database__info__request__pb2
from pkg.db.proto import get_database_info_response_pb2 as pkg_dot_db_dot_proto_dot_get__database__info__response__pb2
from pkg.db.proto import list_databases_request_pb2 as pkg_dot_db_dot_proto_dot_list__databases__request__pb2
from pkg.db.proto import list_databases_response_pb2 as pkg_dot_db_dot_proto_dot_list__databases__response__pb2
from pkg.db.proto import list_schemas_request_pb2 as pkg_dot_db_dot_proto_dot_list__schemas__request__pb2
from pkg.db.proto import list_schemas_response_pb2 as pkg_dot_db_dot_proto_dot_list__schemas__response__pb2


class DatabaseAdminServiceStub(object):
    """*
    DatabaseAdminService provides administrative operations for database
    management including schema operations and migrations.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDatabase = channel.unary_unary(
                '/gcommon.v1.database.DatabaseAdminService/CreateDatabase',
                request_serializer=pkg_dot_db_dot_proto_dot_create__database__request__pb2.CreateDatabaseRequest.SerializeToString,
                response_deserializer=pkg_dot_db_dot_proto_dot_create__database__response__pb2.CreateDatabaseResponse.FromString,
                _registered_method=True)
        self.DropDatabase = channel.unary_unary(
                '/gcommon.v1.database.DatabaseAdminService/DropDatabase',
                request_serializer=pkg_dot_db_dot_proto_dot_drop__database__request__pb2.DropDatabaseRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ListDatabases = channel.unary_unary(
                '/gcommon.v1.database.DatabaseAdminService/ListDatabases',
                request_serializer=pkg_dot_db_dot_proto_dot_list__databases__request__pb2.ListDatabasesRequest.SerializeToString,
                response_deserializer=pkg_dot_db_dot_proto_dot_list__databases__response__pb2.ListDatabasesResponse.FromString,
                _registered_method=True)
        self.GetDatabaseInfo = channel.unary_unary(
                '/gcommon.v1.database.DatabaseAdminService/GetDatabaseInfo',
                request_serializer=pkg_dot_db_dot_proto_dot_get__database__info__request__pb2.GetDatabaseInfoRequest.SerializeToString,
                response_deserializer=pkg_dot_db_dot_proto_dot_get__database__info__response__pb2.GetDatabaseInfoResponse.FromString,
                _registered_method=True)
        self.CreateSchema = channel.unary_unary(
                '/gcommon.v1.database.DatabaseAdminService/CreateSchema',
                request_serializer=pkg_dot_db_dot_proto_dot_create__schema__request__pb2.CreateSchemaRequest.SerializeToString,
                response_deserializer=pkg_dot_db_dot_proto_dot_create__schema__response__pb2.CreateSchemaResponse.FromString,
                _registered_method=True)
        self.DropSchema = channel.unary_unary(
                '/gcommon.v1.database.DatabaseAdminService/DropSchema',
                request_serializer=pkg_dot_db_dot_proto_dot_drop__schema__request__pb2.DropSchemaRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ListSchemas = channel.unary_unary(
                '/gcommon.v1.database.DatabaseAdminService/ListSchemas',
                request_serializer=pkg_dot_db_dot_proto_dot_list__schemas__request__pb2.ListSchemasRequest.SerializeToString,
                response_deserializer=pkg_dot_db_dot_proto_dot_list__schemas__response__pb2.ListSchemasResponse.FromString,
                _registered_method=True)


class DatabaseAdminServiceServicer(object):
    """*
    DatabaseAdminService provides administrative operations for database
    management including schema operations and migrations.
    """

    def CreateDatabase(self, request, context):
        """Create a new database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropDatabase(self, request, context):
        """Remove an existing database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDatabases(self, request, context):
        """List all available databases
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDatabaseInfo(self, request, context):
        """Get metadata about a specific database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSchema(self, request, context):
        """Create a new schema within a database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropSchema(self, request, context):
        """Remove a schema from a database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSchemas(self, request, context):
        """List all schemas in a database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatabaseAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDatabase,
                    request_deserializer=pkg_dot_db_dot_proto_dot_create__database__request__pb2.CreateDatabaseRequest.FromString,
                    response_serializer=pkg_dot_db_dot_proto_dot_create__database__response__pb2.CreateDatabaseResponse.SerializeToString,
            ),
            'DropDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.DropDatabase,
                    request_deserializer=pkg_dot_db_dot_proto_dot_drop__database__request__pb2.DropDatabaseRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListDatabases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDatabases,
                    request_deserializer=pkg_dot_db_dot_proto_dot_list__databases__request__pb2.ListDatabasesRequest.FromString,
                    response_serializer=pkg_dot_db_dot_proto_dot_list__databases__response__pb2.ListDatabasesResponse.SerializeToString,
            ),
            'GetDatabaseInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDatabaseInfo,
                    request_deserializer=pkg_dot_db_dot_proto_dot_get__database__info__request__pb2.GetDatabaseInfoRequest.FromString,
                    response_serializer=pkg_dot_db_dot_proto_dot_get__database__info__response__pb2.GetDatabaseInfoResponse.SerializeToString,
            ),
            'CreateSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSchema,
                    request_deserializer=pkg_dot_db_dot_proto_dot_create__schema__request__pb2.CreateSchemaRequest.FromString,
                    response_serializer=pkg_dot_db_dot_proto_dot_create__schema__response__pb2.CreateSchemaResponse.SerializeToString,
            ),
            'DropSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.DropSchema,
                    request_deserializer=pkg_dot_db_dot_proto_dot_drop__schema__request__pb2.DropSchemaRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListSchemas': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSchemas,
                    request_deserializer=pkg_dot_db_dot_proto_dot_list__schemas__request__pb2.ListSchemasRequest.FromString,
                    response_serializer=pkg_dot_db_dot_proto_dot_list__schemas__response__pb2.ListSchemasResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.database.DatabaseAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.database.DatabaseAdminService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DatabaseAdminService(object):
    """*
    DatabaseAdminService provides administrative operations for database
    management including schema operations and migrations.
    """

    @staticmethod
    def CreateDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.database.DatabaseAdminService/CreateDatabase',
            pkg_dot_db_dot_proto_dot_create__database__request__pb2.CreateDatabaseRequest.SerializeToString,
            pkg_dot_db_dot_proto_dot_create__database__response__pb2.CreateDatabaseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DropDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.database.DatabaseAdminService/DropDatabase',
            pkg_dot_db_dot_proto_dot_drop__database__request__pb2.DropDatabaseRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDatabases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.database.DatabaseAdminService/ListDatabases',
            pkg_dot_db_dot_proto_dot_list__databases__request__pb2.ListDatabasesRequest.SerializeToString,
            pkg_dot_db_dot_proto_dot_list__databases__response__pb2.ListDatabasesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDatabaseInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.database.DatabaseAdminService/GetDatabaseInfo',
            pkg_dot_db_dot_proto_dot_get__database__info__request__pb2.GetDatabaseInfoRequest.SerializeToString,
            pkg_dot_db_dot_proto_dot_get__database__info__response__pb2.GetDatabaseInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.database.DatabaseAdminService/CreateSchema',
            pkg_dot_db_dot_proto_dot_create__schema__request__pb2.CreateSchemaRequest.SerializeToString,
            pkg_dot_db_dot_proto_dot_create__schema__response__pb2.CreateSchemaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DropSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.database.DatabaseAdminService/DropSchema',
            pkg_dot_db_dot_proto_dot_drop__schema__request__pb2.DropSchemaRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListSchemas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.database.DatabaseAdminService/ListSchemas',
            pkg_dot_db_dot_proto_dot_list__schemas__request__pb2.ListSchemasRequest.SerializeToString,
            pkg_dot_db_dot_proto_dot_list__schemas__response__pb2.ListSchemasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
