# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pkg.organization.proto import configure_tenant_isolation_request_pb2 as pkg_dot_organization_dot_proto_dot_configure__tenant__isolation__request__pb2
from pkg.organization.proto import configure_tenant_isolation_response_pb2 as pkg_dot_organization_dot_proto_dot_configure__tenant__isolation__response__pb2
from pkg.organization.proto import create_tenant_request_pb2 as pkg_dot_organization_dot_proto_dot_create__tenant__request__pb2
from pkg.organization.proto import create_tenant_response_pb2 as pkg_dot_organization_dot_proto_dot_create__tenant__response__pb2
from pkg.organization.proto import delete_tenant_request_pb2 as pkg_dot_organization_dot_proto_dot_delete__tenant__request__pb2
from pkg.organization.proto import delete_tenant_response_pb2 as pkg_dot_organization_dot_proto_dot_delete__tenant__response__pb2
from pkg.organization.proto import get_tenant_isolation_request_pb2 as pkg_dot_organization_dot_proto_dot_get__tenant__isolation__request__pb2
from pkg.organization.proto import get_tenant_isolation_response_pb2 as pkg_dot_organization_dot_proto_dot_get__tenant__isolation__response__pb2
from pkg.organization.proto import get_tenant_request_pb2 as pkg_dot_organization_dot_proto_dot_get__tenant__request__pb2
from pkg.organization.proto import get_tenant_response_pb2 as pkg_dot_organization_dot_proto_dot_get__tenant__response__pb2
from pkg.organization.proto import get_tenant_usage_request_pb2 as pkg_dot_organization_dot_proto_dot_get__tenant__usage__request__pb2
from pkg.organization.proto import get_tenant_usage_response_pb2 as pkg_dot_organization_dot_proto_dot_get__tenant__usage__response__pb2
from pkg.organization.proto import list_tenants_request_pb2 as pkg_dot_organization_dot_proto_dot_list__tenants__request__pb2
from pkg.organization.proto import list_tenants_response_pb2 as pkg_dot_organization_dot_proto_dot_list__tenants__response__pb2
from pkg.organization.proto import update_tenant_quota_request_pb2 as pkg_dot_organization_dot_proto_dot_update__tenant__quota__request__pb2
from pkg.organization.proto import update_tenant_quota_response_pb2 as pkg_dot_organization_dot_proto_dot_update__tenant__quota__response__pb2
from pkg.organization.proto import update_tenant_request_pb2 as pkg_dot_organization_dot_proto_dot_update__tenant__request__pb2
from pkg.organization.proto import update_tenant_response_pb2 as pkg_dot_organization_dot_proto_dot_update__tenant__response__pb2


class TenantServiceStub(object):
    """*
    TenantService provides comprehensive tenant management capabilities.
    Handles tenant CRUD operations, isolation configuration, quota management,
    and multi-tenant resource administration.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTenant = channel.unary_unary(
                '/gcommon.v1.organization.TenantService/CreateTenant',
                request_serializer=pkg_dot_organization_dot_proto_dot_create__tenant__request__pb2.CreateTenantRequest.SerializeToString,
                response_deserializer=pkg_dot_organization_dot_proto_dot_create__tenant__response__pb2.CreateTenantResponse.FromString,
                _registered_method=True)
        self.GetTenant = channel.unary_unary(
                '/gcommon.v1.organization.TenantService/GetTenant',
                request_serializer=pkg_dot_organization_dot_proto_dot_get__tenant__request__pb2.GetTenantRequest.SerializeToString,
                response_deserializer=pkg_dot_organization_dot_proto_dot_get__tenant__response__pb2.GetTenantResponse.FromString,
                _registered_method=True)
        self.UpdateTenant = channel.unary_unary(
                '/gcommon.v1.organization.TenantService/UpdateTenant',
                request_serializer=pkg_dot_organization_dot_proto_dot_update__tenant__request__pb2.UpdateTenantRequest.SerializeToString,
                response_deserializer=pkg_dot_organization_dot_proto_dot_update__tenant__response__pb2.UpdateTenantResponse.FromString,
                _registered_method=True)
        self.DeleteTenant = channel.unary_unary(
                '/gcommon.v1.organization.TenantService/DeleteTenant',
                request_serializer=pkg_dot_organization_dot_proto_dot_delete__tenant__request__pb2.DeleteTenantRequest.SerializeToString,
                response_deserializer=pkg_dot_organization_dot_proto_dot_delete__tenant__response__pb2.DeleteTenantResponse.FromString,
                _registered_method=True)
        self.ListTenants = channel.unary_unary(
                '/gcommon.v1.organization.TenantService/ListTenants',
                request_serializer=pkg_dot_organization_dot_proto_dot_list__tenants__request__pb2.ListTenantsRequest.SerializeToString,
                response_deserializer=pkg_dot_organization_dot_proto_dot_list__tenants__response__pb2.ListTenantsResponse.FromString,
                _registered_method=True)
        self.ConfigureTenantIsolation = channel.unary_unary(
                '/gcommon.v1.organization.TenantService/ConfigureTenantIsolation',
                request_serializer=pkg_dot_organization_dot_proto_dot_configure__tenant__isolation__request__pb2.ConfigureTenantIsolationRequest.SerializeToString,
                response_deserializer=pkg_dot_organization_dot_proto_dot_configure__tenant__isolation__response__pb2.ConfigureTenantIsolationResponse.FromString,
                _registered_method=True)
        self.GetTenantIsolation = channel.unary_unary(
                '/gcommon.v1.organization.TenantService/GetTenantIsolation',
                request_serializer=pkg_dot_organization_dot_proto_dot_get__tenant__isolation__request__pb2.GetTenantIsolationRequest.SerializeToString,
                response_deserializer=pkg_dot_organization_dot_proto_dot_get__tenant__isolation__response__pb2.GetTenantIsolationResponse.FromString,
                _registered_method=True)
        self.UpdateTenantQuota = channel.unary_unary(
                '/gcommon.v1.organization.TenantService/UpdateTenantQuota',
                request_serializer=pkg_dot_organization_dot_proto_dot_update__tenant__quota__request__pb2.UpdateTenantQuotaRequest.SerializeToString,
                response_deserializer=pkg_dot_organization_dot_proto_dot_update__tenant__quota__response__pb2.UpdateTenantQuotaResponse.FromString,
                _registered_method=True)
        self.GetTenantUsage = channel.unary_unary(
                '/gcommon.v1.organization.TenantService/GetTenantUsage',
                request_serializer=pkg_dot_organization_dot_proto_dot_get__tenant__usage__request__pb2.GetTenantUsageRequest.SerializeToString,
                response_deserializer=pkg_dot_organization_dot_proto_dot_get__tenant__usage__response__pb2.GetTenantUsageResponse.FromString,
                _registered_method=True)


class TenantServiceServicer(object):
    """*
    TenantService provides comprehensive tenant management capabilities.
    Handles tenant CRUD operations, isolation configuration, quota management,
    and multi-tenant resource administration.
    """

    def CreateTenant(self, request, context):
        """Create a new tenant within an organization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTenant(self, request, context):
        """Get a tenant by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTenant(self, request, context):
        """Update an existing tenant
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTenant(self, request, context):
        """Delete a tenant (soft delete)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTenants(self, request, context):
        """List tenants within an organization (with pagination and filtering)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureTenantIsolation(self, request, context):
        """Configure tenant isolation settings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTenantIsolation(self, request, context):
        """Get tenant isolation configuration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTenantQuota(self, request, context):
        """Update tenant resource quotas
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTenantUsage(self, request, context):
        """Get tenant resource usage statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TenantServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTenant,
                    request_deserializer=pkg_dot_organization_dot_proto_dot_create__tenant__request__pb2.CreateTenantRequest.FromString,
                    response_serializer=pkg_dot_organization_dot_proto_dot_create__tenant__response__pb2.CreateTenantResponse.SerializeToString,
            ),
            'GetTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTenant,
                    request_deserializer=pkg_dot_organization_dot_proto_dot_get__tenant__request__pb2.GetTenantRequest.FromString,
                    response_serializer=pkg_dot_organization_dot_proto_dot_get__tenant__response__pb2.GetTenantResponse.SerializeToString,
            ),
            'UpdateTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTenant,
                    request_deserializer=pkg_dot_organization_dot_proto_dot_update__tenant__request__pb2.UpdateTenantRequest.FromString,
                    response_serializer=pkg_dot_organization_dot_proto_dot_update__tenant__response__pb2.UpdateTenantResponse.SerializeToString,
            ),
            'DeleteTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTenant,
                    request_deserializer=pkg_dot_organization_dot_proto_dot_delete__tenant__request__pb2.DeleteTenantRequest.FromString,
                    response_serializer=pkg_dot_organization_dot_proto_dot_delete__tenant__response__pb2.DeleteTenantResponse.SerializeToString,
            ),
            'ListTenants': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTenants,
                    request_deserializer=pkg_dot_organization_dot_proto_dot_list__tenants__request__pb2.ListTenantsRequest.FromString,
                    response_serializer=pkg_dot_organization_dot_proto_dot_list__tenants__response__pb2.ListTenantsResponse.SerializeToString,
            ),
            'ConfigureTenantIsolation': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureTenantIsolation,
                    request_deserializer=pkg_dot_organization_dot_proto_dot_configure__tenant__isolation__request__pb2.ConfigureTenantIsolationRequest.FromString,
                    response_serializer=pkg_dot_organization_dot_proto_dot_configure__tenant__isolation__response__pb2.ConfigureTenantIsolationResponse.SerializeToString,
            ),
            'GetTenantIsolation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTenantIsolation,
                    request_deserializer=pkg_dot_organization_dot_proto_dot_get__tenant__isolation__request__pb2.GetTenantIsolationRequest.FromString,
                    response_serializer=pkg_dot_organization_dot_proto_dot_get__tenant__isolation__response__pb2.GetTenantIsolationResponse.SerializeToString,
            ),
            'UpdateTenantQuota': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTenantQuota,
                    request_deserializer=pkg_dot_organization_dot_proto_dot_update__tenant__quota__request__pb2.UpdateTenantQuotaRequest.FromString,
                    response_serializer=pkg_dot_organization_dot_proto_dot_update__tenant__quota__response__pb2.UpdateTenantQuotaResponse.SerializeToString,
            ),
            'GetTenantUsage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTenantUsage,
                    request_deserializer=pkg_dot_organization_dot_proto_dot_get__tenant__usage__request__pb2.GetTenantUsageRequest.FromString,
                    response_serializer=pkg_dot_organization_dot_proto_dot_get__tenant__usage__response__pb2.GetTenantUsageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.organization.TenantService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.organization.TenantService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TenantService(object):
    """*
    TenantService provides comprehensive tenant management capabilities.
    Handles tenant CRUD operations, isolation configuration, quota management,
    and multi-tenant resource administration.
    """

    @staticmethod
    def CreateTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.organization.TenantService/CreateTenant',
            pkg_dot_organization_dot_proto_dot_create__tenant__request__pb2.CreateTenantRequest.SerializeToString,
            pkg_dot_organization_dot_proto_dot_create__tenant__response__pb2.CreateTenantResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.organization.TenantService/GetTenant',
            pkg_dot_organization_dot_proto_dot_get__tenant__request__pb2.GetTenantRequest.SerializeToString,
            pkg_dot_organization_dot_proto_dot_get__tenant__response__pb2.GetTenantResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.organization.TenantService/UpdateTenant',
            pkg_dot_organization_dot_proto_dot_update__tenant__request__pb2.UpdateTenantRequest.SerializeToString,
            pkg_dot_organization_dot_proto_dot_update__tenant__response__pb2.UpdateTenantResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.organization.TenantService/DeleteTenant',
            pkg_dot_organization_dot_proto_dot_delete__tenant__request__pb2.DeleteTenantRequest.SerializeToString,
            pkg_dot_organization_dot_proto_dot_delete__tenant__response__pb2.DeleteTenantResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListTenants(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.organization.TenantService/ListTenants',
            pkg_dot_organization_dot_proto_dot_list__tenants__request__pb2.ListTenantsRequest.SerializeToString,
            pkg_dot_organization_dot_proto_dot_list__tenants__response__pb2.ListTenantsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureTenantIsolation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.organization.TenantService/ConfigureTenantIsolation',
            pkg_dot_organization_dot_proto_dot_configure__tenant__isolation__request__pb2.ConfigureTenantIsolationRequest.SerializeToString,
            pkg_dot_organization_dot_proto_dot_configure__tenant__isolation__response__pb2.ConfigureTenantIsolationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTenantIsolation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.organization.TenantService/GetTenantIsolation',
            pkg_dot_organization_dot_proto_dot_get__tenant__isolation__request__pb2.GetTenantIsolationRequest.SerializeToString,
            pkg_dot_organization_dot_proto_dot_get__tenant__isolation__response__pb2.GetTenantIsolationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTenantQuota(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.organization.TenantService/UpdateTenantQuota',
            pkg_dot_organization_dot_proto_dot_update__tenant__quota__request__pb2.UpdateTenantQuotaRequest.SerializeToString,
            pkg_dot_organization_dot_proto_dot_update__tenant__quota__response__pb2.UpdateTenantQuotaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTenantUsage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.organization.TenantService/GetTenantUsage',
            pkg_dot_organization_dot_proto_dot_get__tenant__usage__request__pb2.GetTenantUsageRequest.SerializeToString,
            pkg_dot_organization_dot_proto_dot_get__tenant__usage__response__pb2.GetTenantUsageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
