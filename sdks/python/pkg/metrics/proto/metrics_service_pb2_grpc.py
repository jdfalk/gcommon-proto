# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pkg.metrics.proto import get_metric_metadata_request_pb2 as pkg_dot_metrics_dot_proto_dot_get__metric__metadata__request__pb2
from pkg.metrics.proto import get_metric_metadata_response_pb2 as pkg_dot_metrics_dot_proto_dot_get__metric__metadata__response__pb2
from pkg.metrics.proto import get_metrics_request_pb2 as pkg_dot_metrics_dot_proto_dot_get__metrics__request__pb2
from pkg.metrics.proto import get_metrics_response_pb2 as pkg_dot_metrics_dot_proto_dot_get__metrics__response__pb2
from pkg.metrics.proto import get_metrics_summary_request_pb2 as pkg_dot_metrics_dot_proto_dot_get__metrics__summary__request__pb2
from pkg.metrics.proto import get_metrics_summary_response_pb2 as pkg_dot_metrics_dot_proto_dot_get__metrics__summary__response__pb2
from pkg.metrics.proto import metric_data_pb2 as pkg_dot_metrics_dot_proto_dot_metric__data__pb2
from pkg.metrics.proto import query_metrics_request_pb2 as pkg_dot_metrics_dot_proto_dot_query__metrics__request__pb2
from pkg.metrics.proto import query_metrics_response_pb2 as pkg_dot_metrics_dot_proto_dot_query__metrics__response__pb2
from pkg.metrics.proto import record_metric_request_pb2 as pkg_dot_metrics_dot_proto_dot_record__metric__request__pb2
from pkg.metrics.proto import record_metric_response_pb2 as pkg_dot_metrics_dot_proto_dot_record__metric__response__pb2
from pkg.metrics.proto import record_metrics_request_pb2 as pkg_dot_metrics_dot_proto_dot_record__metrics__request__pb2
from pkg.metrics.proto import record_metrics_response_pb2 as pkg_dot_metrics_dot_proto_dot_record__metrics__response__pb2
from pkg.metrics.proto import register_metric_request_pb2 as pkg_dot_metrics_dot_proto_dot_register__metric__request__pb2
from pkg.metrics.proto import register_metric_response_pb2 as pkg_dot_metrics_dot_proto_dot_register__metric__response__pb2
from pkg.metrics.proto import stream_metrics_request_pb2 as pkg_dot_metrics_dot_proto_dot_stream__metrics__request__pb2
from pkg.metrics.proto import unregister_metric_request_pb2 as pkg_dot_metrics_dot_proto_dot_unregister__metric__request__pb2
from pkg.metrics.proto import unregister_metric_response_pb2 as pkg_dot_metrics_dot_proto_dot_unregister__metric__response__pb2


class MetricsServiceStub(object):
    """*
    MetricsService provides comprehensive metrics collection and querying capabilities.
    Supports counters, gauges, histograms, streaming, and custom metrics aggregation.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RecordMetric = channel.unary_unary(
                '/gcommon.v1.metrics.MetricsService/RecordMetric',
                request_serializer=pkg_dot_metrics_dot_proto_dot_record__metric__request__pb2.RecordMetricRequest.SerializeToString,
                response_deserializer=pkg_dot_metrics_dot_proto_dot_record__metric__response__pb2.RecordMetricResponse.FromString,
                _registered_method=True)
        self.RecordBatchMetrics = channel.unary_unary(
                '/gcommon.v1.metrics.MetricsService/RecordBatchMetrics',
                request_serializer=pkg_dot_metrics_dot_proto_dot_record__metrics__request__pb2.RecordMetricsRequest.SerializeToString,
                response_deserializer=pkg_dot_metrics_dot_proto_dot_record__metrics__response__pb2.RecordMetricsResponse.FromString,
                _registered_method=True)
        self.GetMetrics = channel.unary_unary(
                '/gcommon.v1.metrics.MetricsService/GetMetrics',
                request_serializer=pkg_dot_metrics_dot_proto_dot_get__metrics__request__pb2.MetricsGetMetricsRequest.SerializeToString,
                response_deserializer=pkg_dot_metrics_dot_proto_dot_get__metrics__response__pb2.MetricsGetMetricsResponse.FromString,
                _registered_method=True)
        self.StreamMetrics = channel.unary_stream(
                '/gcommon.v1.metrics.MetricsService/StreamMetrics',
                request_serializer=pkg_dot_metrics_dot_proto_dot_stream__metrics__request__pb2.MetricsStreamMetricsRequest.SerializeToString,
                response_deserializer=pkg_dot_metrics_dot_proto_dot_metric__data__pb2.MetricData.FromString,
                _registered_method=True)
        self.RegisterMetric = channel.unary_unary(
                '/gcommon.v1.metrics.MetricsService/RegisterMetric',
                request_serializer=pkg_dot_metrics_dot_proto_dot_register__metric__request__pb2.RegisterMetricRequest.SerializeToString,
                response_deserializer=pkg_dot_metrics_dot_proto_dot_register__metric__response__pb2.RegisterMetricResponse.FromString,
                _registered_method=True)
        self.UnregisterMetric = channel.unary_unary(
                '/gcommon.v1.metrics.MetricsService/UnregisterMetric',
                request_serializer=pkg_dot_metrics_dot_proto_dot_unregister__metric__request__pb2.UnregisterMetricRequest.SerializeToString,
                response_deserializer=pkg_dot_metrics_dot_proto_dot_unregister__metric__response__pb2.UnregisterMetricResponse.FromString,
                _registered_method=True)
        self.GetMetricMetadata = channel.unary_unary(
                '/gcommon.v1.metrics.MetricsService/GetMetricMetadata',
                request_serializer=pkg_dot_metrics_dot_proto_dot_get__metric__metadata__request__pb2.GetMetricMetadataRequest.SerializeToString,
                response_deserializer=pkg_dot_metrics_dot_proto_dot_get__metric__metadata__response__pb2.GetMetricMetadataResponse.FromString,
                _registered_method=True)
        self.QueryMetrics = channel.unary_unary(
                '/gcommon.v1.metrics.MetricsService/QueryMetrics',
                request_serializer=pkg_dot_metrics_dot_proto_dot_query__metrics__request__pb2.QueryMetricsRequest.SerializeToString,
                response_deserializer=pkg_dot_metrics_dot_proto_dot_query__metrics__response__pb2.QueryMetricsResponse.FromString,
                _registered_method=True)
        self.GetMetricsSummary = channel.unary_unary(
                '/gcommon.v1.metrics.MetricsService/GetMetricsSummary',
                request_serializer=pkg_dot_metrics_dot_proto_dot_get__metrics__summary__request__pb2.GetMetricsSummaryRequest.SerializeToString,
                response_deserializer=pkg_dot_metrics_dot_proto_dot_get__metrics__summary__response__pb2.GetMetricsSummaryResponse.FromString,
                _registered_method=True)


class MetricsServiceServicer(object):
    """*
    MetricsService provides comprehensive metrics collection and querying capabilities.
    Supports counters, gauges, histograms, streaming, and custom metrics aggregation.
    """

    def RecordMetric(self, request, context):
        """Record a single metric data point
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordBatchMetrics(self, request, context):
        """Record multiple metrics in batch for efficiency
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetrics(self, request, context):
        """Retrieve metrics data with filtering and aggregation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamMetrics(self, request, context):
        """Stream real-time metrics data with configurable filters and options
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterMetric(self, request, context):
        """Register a new metric definition
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnregisterMetric(self, request, context):
        """Unregister an existing metric
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetricMetadata(self, request, context):
        """Get metadata for a specific metric
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryMetrics(self, request, context):
        """Query metrics data using complex query expressions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetricsSummary(self, request, context):
        """Get summary statistics about metrics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MetricsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RecordMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordMetric,
                    request_deserializer=pkg_dot_metrics_dot_proto_dot_record__metric__request__pb2.RecordMetricRequest.FromString,
                    response_serializer=pkg_dot_metrics_dot_proto_dot_record__metric__response__pb2.RecordMetricResponse.SerializeToString,
            ),
            'RecordBatchMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordBatchMetrics,
                    request_deserializer=pkg_dot_metrics_dot_proto_dot_record__metrics__request__pb2.RecordMetricsRequest.FromString,
                    response_serializer=pkg_dot_metrics_dot_proto_dot_record__metrics__response__pb2.RecordMetricsResponse.SerializeToString,
            ),
            'GetMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetrics,
                    request_deserializer=pkg_dot_metrics_dot_proto_dot_get__metrics__request__pb2.MetricsGetMetricsRequest.FromString,
                    response_serializer=pkg_dot_metrics_dot_proto_dot_get__metrics__response__pb2.MetricsGetMetricsResponse.SerializeToString,
            ),
            'StreamMetrics': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamMetrics,
                    request_deserializer=pkg_dot_metrics_dot_proto_dot_stream__metrics__request__pb2.MetricsStreamMetricsRequest.FromString,
                    response_serializer=pkg_dot_metrics_dot_proto_dot_metric__data__pb2.MetricData.SerializeToString,
            ),
            'RegisterMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterMetric,
                    request_deserializer=pkg_dot_metrics_dot_proto_dot_register__metric__request__pb2.RegisterMetricRequest.FromString,
                    response_serializer=pkg_dot_metrics_dot_proto_dot_register__metric__response__pb2.RegisterMetricResponse.SerializeToString,
            ),
            'UnregisterMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.UnregisterMetric,
                    request_deserializer=pkg_dot_metrics_dot_proto_dot_unregister__metric__request__pb2.UnregisterMetricRequest.FromString,
                    response_serializer=pkg_dot_metrics_dot_proto_dot_unregister__metric__response__pb2.UnregisterMetricResponse.SerializeToString,
            ),
            'GetMetricMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetricMetadata,
                    request_deserializer=pkg_dot_metrics_dot_proto_dot_get__metric__metadata__request__pb2.GetMetricMetadataRequest.FromString,
                    response_serializer=pkg_dot_metrics_dot_proto_dot_get__metric__metadata__response__pb2.GetMetricMetadataResponse.SerializeToString,
            ),
            'QueryMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryMetrics,
                    request_deserializer=pkg_dot_metrics_dot_proto_dot_query__metrics__request__pb2.QueryMetricsRequest.FromString,
                    response_serializer=pkg_dot_metrics_dot_proto_dot_query__metrics__response__pb2.QueryMetricsResponse.SerializeToString,
            ),
            'GetMetricsSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetricsSummary,
                    request_deserializer=pkg_dot_metrics_dot_proto_dot_get__metrics__summary__request__pb2.GetMetricsSummaryRequest.FromString,
                    response_serializer=pkg_dot_metrics_dot_proto_dot_get__metrics__summary__response__pb2.GetMetricsSummaryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.metrics.MetricsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.metrics.MetricsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MetricsService(object):
    """*
    MetricsService provides comprehensive metrics collection and querying capabilities.
    Supports counters, gauges, histograms, streaming, and custom metrics aggregation.
    """

    @staticmethod
    def RecordMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.metrics.MetricsService/RecordMetric',
            pkg_dot_metrics_dot_proto_dot_record__metric__request__pb2.RecordMetricRequest.SerializeToString,
            pkg_dot_metrics_dot_proto_dot_record__metric__response__pb2.RecordMetricResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RecordBatchMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.metrics.MetricsService/RecordBatchMetrics',
            pkg_dot_metrics_dot_proto_dot_record__metrics__request__pb2.RecordMetricsRequest.SerializeToString,
            pkg_dot_metrics_dot_proto_dot_record__metrics__response__pb2.RecordMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.metrics.MetricsService/GetMetrics',
            pkg_dot_metrics_dot_proto_dot_get__metrics__request__pb2.MetricsGetMetricsRequest.SerializeToString,
            pkg_dot_metrics_dot_proto_dot_get__metrics__response__pb2.MetricsGetMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/gcommon.v1.metrics.MetricsService/StreamMetrics',
            pkg_dot_metrics_dot_proto_dot_stream__metrics__request__pb2.MetricsStreamMetricsRequest.SerializeToString,
            pkg_dot_metrics_dot_proto_dot_metric__data__pb2.MetricData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.metrics.MetricsService/RegisterMetric',
            pkg_dot_metrics_dot_proto_dot_register__metric__request__pb2.RegisterMetricRequest.SerializeToString,
            pkg_dot_metrics_dot_proto_dot_register__metric__response__pb2.RegisterMetricResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnregisterMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.metrics.MetricsService/UnregisterMetric',
            pkg_dot_metrics_dot_proto_dot_unregister__metric__request__pb2.UnregisterMetricRequest.SerializeToString,
            pkg_dot_metrics_dot_proto_dot_unregister__metric__response__pb2.UnregisterMetricResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetricMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.metrics.MetricsService/GetMetricMetadata',
            pkg_dot_metrics_dot_proto_dot_get__metric__metadata__request__pb2.GetMetricMetadataRequest.SerializeToString,
            pkg_dot_metrics_dot_proto_dot_get__metric__metadata__response__pb2.GetMetricMetadataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.metrics.MetricsService/QueryMetrics',
            pkg_dot_metrics_dot_proto_dot_query__metrics__request__pb2.QueryMetricsRequest.SerializeToString,
            pkg_dot_metrics_dot_proto_dot_query__metrics__response__pb2.QueryMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetricsSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.metrics.MetricsService/GetMetricsSummary',
            pkg_dot_metrics_dot_proto_dot_get__metrics__summary__request__pb2.GetMetricsSummaryRequest.SerializeToString,
            pkg_dot_metrics_dot_proto_dot_get__metrics__summary__response__pb2.GetMetricsSummaryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
