# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pkg.cache.proto import clear_request_pb2 as pkg_dot_cache_dot_proto_dot_clear__request__pb2
from pkg.cache.proto import clear_response_pb2 as pkg_dot_cache_dot_proto_dot_clear__response__pb2
from pkg.cache.proto import decrement_request_pb2 as pkg_dot_cache_dot_proto_dot_decrement__request__pb2
from pkg.cache.proto import decrement_response_pb2 as pkg_dot_cache_dot_proto_dot_decrement__response__pb2
from pkg.cache.proto import delete_multiple_request_pb2 as pkg_dot_cache_dot_proto_dot_delete__multiple__request__pb2
from pkg.cache.proto import delete_multiple_response_pb2 as pkg_dot_cache_dot_proto_dot_delete__multiple__response__pb2
from pkg.cache.proto import delete_request_pb2 as pkg_dot_cache_dot_proto_dot_delete__request__pb2
from pkg.cache.proto import delete_response_pb2 as pkg_dot_cache_dot_proto_dot_delete__response__pb2
from pkg.cache.proto import exists_request_pb2 as pkg_dot_cache_dot_proto_dot_exists__request__pb2
from pkg.cache.proto import exists_response_pb2 as pkg_dot_cache_dot_proto_dot_exists__response__pb2
from pkg.cache.proto import flush_request_pb2 as pkg_dot_cache_dot_proto_dot_flush__request__pb2
from pkg.cache.proto import flush_response_pb2 as pkg_dot_cache_dot_proto_dot_flush__response__pb2
from pkg.cache.proto import get_multiple_request_pb2 as pkg_dot_cache_dot_proto_dot_get__multiple__request__pb2
from pkg.cache.proto import get_multiple_response_pb2 as pkg_dot_cache_dot_proto_dot_get__multiple__response__pb2
from pkg.cache.proto import get_request_pb2 as pkg_dot_cache_dot_proto_dot_get__request__pb2
from pkg.cache.proto import get_response_pb2 as pkg_dot_cache_dot_proto_dot_get__response__pb2
from pkg.cache.proto import get_stats_request_pb2 as pkg_dot_cache_dot_proto_dot_get__stats__request__pb2
from pkg.cache.proto import get_stats_response_pb2 as pkg_dot_cache_dot_proto_dot_get__stats__response__pb2
from pkg.cache.proto import increment_request_pb2 as pkg_dot_cache_dot_proto_dot_increment__request__pb2
from pkg.cache.proto import increment_response_pb2 as pkg_dot_cache_dot_proto_dot_increment__response__pb2
from pkg.cache.proto import keys_request_pb2 as pkg_dot_cache_dot_proto_dot_keys__request__pb2
from pkg.cache.proto import keys_response_pb2 as pkg_dot_cache_dot_proto_dot_keys__response__pb2
from pkg.cache.proto import set_multiple_request_pb2 as pkg_dot_cache_dot_proto_dot_set__multiple__request__pb2
from pkg.cache.proto import set_multiple_response_pb2 as pkg_dot_cache_dot_proto_dot_set__multiple__response__pb2
from pkg.cache.proto import set_request_pb2 as pkg_dot_cache_dot_proto_dot_set__request__pb2
from pkg.cache.proto import set_response_pb2 as pkg_dot_cache_dot_proto_dot_set__response__pb2
from pkg.cache.proto import touch_expiration_request_pb2 as pkg_dot_cache_dot_proto_dot_touch__expiration__request__pb2
from pkg.cache.proto import touch_expiration_response_pb2 as pkg_dot_cache_dot_proto_dot_touch__expiration__response__pb2


class CacheServiceStub(object):
    """*
    CacheService provides comprehensive caching capabilities.
    Supports CRUD operations, batch operations, atomic operations,
    and cache management with flexible expiration policies.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/Get',
                request_serializer=pkg_dot_cache_dot_proto_dot_get__request__pb2.GetRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_get__response__pb2.GetResponse.FromString,
                _registered_method=True)
        self.Set = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/Set',
                request_serializer=pkg_dot_cache_dot_proto_dot_set__request__pb2.SetRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_set__response__pb2.SetResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/Delete',
                request_serializer=pkg_dot_cache_dot_proto_dot_delete__request__pb2.CacheDeleteRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_delete__response__pb2.CacheDeleteResponse.FromString,
                _registered_method=True)
        self.Exists = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/Exists',
                request_serializer=pkg_dot_cache_dot_proto_dot_exists__request__pb2.ExistsRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_exists__response__pb2.ExistsResponse.FromString,
                _registered_method=True)
        self.GetMultiple = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/GetMultiple',
                request_serializer=pkg_dot_cache_dot_proto_dot_get__multiple__request__pb2.GetMultipleRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_get__multiple__response__pb2.GetMultipleResponse.FromString,
                _registered_method=True)
        self.SetMultiple = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/SetMultiple',
                request_serializer=pkg_dot_cache_dot_proto_dot_set__multiple__request__pb2.SetMultipleRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_set__multiple__response__pb2.SetMultipleResponse.FromString,
                _registered_method=True)
        self.DeleteMultiple = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/DeleteMultiple',
                request_serializer=pkg_dot_cache_dot_proto_dot_delete__multiple__request__pb2.DeleteMultipleRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_delete__multiple__response__pb2.DeleteMultipleResponse.FromString,
                _registered_method=True)
        self.Increment = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/Increment',
                request_serializer=pkg_dot_cache_dot_proto_dot_increment__request__pb2.IncrementRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_increment__response__pb2.IncrementResponse.FromString,
                _registered_method=True)
        self.Decrement = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/Decrement',
                request_serializer=pkg_dot_cache_dot_proto_dot_decrement__request__pb2.DecrementRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_decrement__response__pb2.DecrementResponse.FromString,
                _registered_method=True)
        self.Clear = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/Clear',
                request_serializer=pkg_dot_cache_dot_proto_dot_clear__request__pb2.ClearRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_clear__response__pb2.ClearResponse.FromString,
                _registered_method=True)
        self.Keys = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/Keys',
                request_serializer=pkg_dot_cache_dot_proto_dot_keys__request__pb2.KeysRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_keys__response__pb2.KeysResponse.FromString,
                _registered_method=True)
        self.GetStats = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/GetStats',
                request_serializer=pkg_dot_cache_dot_proto_dot_get__stats__request__pb2.CacheGetStatsRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_get__stats__response__pb2.CacheGetStatsResponse.FromString,
                _registered_method=True)
        self.Flush = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/Flush',
                request_serializer=pkg_dot_cache_dot_proto_dot_flush__request__pb2.FlushRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_flush__response__pb2.FlushResponse.FromString,
                _registered_method=True)
        self.TouchExpiration = channel.unary_unary(
                '/gcommon.v1.cache.CacheService/TouchExpiration',
                request_serializer=pkg_dot_cache_dot_proto_dot_touch__expiration__request__pb2.TouchExpirationRequest.SerializeToString,
                response_deserializer=pkg_dot_cache_dot_proto_dot_touch__expiration__response__pb2.TouchExpirationResponse.FromString,
                _registered_method=True)


class CacheServiceServicer(object):
    """*
    CacheService provides comprehensive caching capabilities.
    Supports CRUD operations, batch operations, atomic operations,
    and cache management with flexible expiration policies.
    """

    def Get(self, request, context):
        """Get retrieves a value from the cache by key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Set stores a value in the cache with optional expiration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete removes a value from the cache
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exists(self, request, context):
        """Exists checks if a key exists in the cache
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMultiple(self, request, context):
        """GetMultiple retrieves multiple values from the cache in a single operation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMultiple(self, request, context):
        """SetMultiple stores multiple values in the cache atomically
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMultiple(self, request, context):
        """DeleteMultiple removes multiple values from the cache atomically
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Increment(self, request, context):
        """Increment atomically increments a numeric value
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Decrement(self, request, context):
        """Decrement atomically decrements a numeric value
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Clear(self, request, context):
        """Clear removes all entries from the cache or by pattern
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Keys(self, request, context):
        """Keys returns all keys matching a pattern
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStats(self, request, context):
        """GetStats returns cache statistics and performance metrics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Flush(self, request, context):
        """Flush forces cache persistence if supported by the backend
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TouchExpiration(self, request, context):
        """TouchExpiration updates the expiration time of an existing key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CacheServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_get__request__pb2.GetRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_get__response__pb2.GetResponse.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_set__request__pb2.SetRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_set__response__pb2.SetResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_delete__request__pb2.CacheDeleteRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_delete__response__pb2.CacheDeleteResponse.SerializeToString,
            ),
            'Exists': grpc.unary_unary_rpc_method_handler(
                    servicer.Exists,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_exists__request__pb2.ExistsRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_exists__response__pb2.ExistsResponse.SerializeToString,
            ),
            'GetMultiple': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMultiple,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_get__multiple__request__pb2.GetMultipleRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_get__multiple__response__pb2.GetMultipleResponse.SerializeToString,
            ),
            'SetMultiple': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMultiple,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_set__multiple__request__pb2.SetMultipleRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_set__multiple__response__pb2.SetMultipleResponse.SerializeToString,
            ),
            'DeleteMultiple': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMultiple,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_delete__multiple__request__pb2.DeleteMultipleRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_delete__multiple__response__pb2.DeleteMultipleResponse.SerializeToString,
            ),
            'Increment': grpc.unary_unary_rpc_method_handler(
                    servicer.Increment,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_increment__request__pb2.IncrementRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_increment__response__pb2.IncrementResponse.SerializeToString,
            ),
            'Decrement': grpc.unary_unary_rpc_method_handler(
                    servicer.Decrement,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_decrement__request__pb2.DecrementRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_decrement__response__pb2.DecrementResponse.SerializeToString,
            ),
            'Clear': grpc.unary_unary_rpc_method_handler(
                    servicer.Clear,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_clear__request__pb2.ClearRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_clear__response__pb2.ClearResponse.SerializeToString,
            ),
            'Keys': grpc.unary_unary_rpc_method_handler(
                    servicer.Keys,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_keys__request__pb2.KeysRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_keys__response__pb2.KeysResponse.SerializeToString,
            ),
            'GetStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStats,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_get__stats__request__pb2.CacheGetStatsRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_get__stats__response__pb2.CacheGetStatsResponse.SerializeToString,
            ),
            'Flush': grpc.unary_unary_rpc_method_handler(
                    servicer.Flush,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_flush__request__pb2.FlushRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_flush__response__pb2.FlushResponse.SerializeToString,
            ),
            'TouchExpiration': grpc.unary_unary_rpc_method_handler(
                    servicer.TouchExpiration,
                    request_deserializer=pkg_dot_cache_dot_proto_dot_touch__expiration__request__pb2.TouchExpirationRequest.FromString,
                    response_serializer=pkg_dot_cache_dot_proto_dot_touch__expiration__response__pb2.TouchExpirationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.cache.CacheService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.cache.CacheService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CacheService(object):
    """*
    CacheService provides comprehensive caching capabilities.
    Supports CRUD operations, batch operations, atomic operations,
    and cache management with flexible expiration policies.
    """

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/Get',
            pkg_dot_cache_dot_proto_dot_get__request__pb2.GetRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_get__response__pb2.GetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/Set',
            pkg_dot_cache_dot_proto_dot_set__request__pb2.SetRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_set__response__pb2.SetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/Delete',
            pkg_dot_cache_dot_proto_dot_delete__request__pb2.CacheDeleteRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_delete__response__pb2.CacheDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Exists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/Exists',
            pkg_dot_cache_dot_proto_dot_exists__request__pb2.ExistsRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_exists__response__pb2.ExistsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMultiple(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/GetMultiple',
            pkg_dot_cache_dot_proto_dot_get__multiple__request__pb2.GetMultipleRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_get__multiple__response__pb2.GetMultipleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetMultiple(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/SetMultiple',
            pkg_dot_cache_dot_proto_dot_set__multiple__request__pb2.SetMultipleRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_set__multiple__response__pb2.SetMultipleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMultiple(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/DeleteMultiple',
            pkg_dot_cache_dot_proto_dot_delete__multiple__request__pb2.DeleteMultipleRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_delete__multiple__response__pb2.DeleteMultipleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Increment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/Increment',
            pkg_dot_cache_dot_proto_dot_increment__request__pb2.IncrementRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_increment__response__pb2.IncrementResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Decrement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/Decrement',
            pkg_dot_cache_dot_proto_dot_decrement__request__pb2.DecrementRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_decrement__response__pb2.DecrementResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Clear(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/Clear',
            pkg_dot_cache_dot_proto_dot_clear__request__pb2.ClearRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_clear__response__pb2.ClearResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Keys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/Keys',
            pkg_dot_cache_dot_proto_dot_keys__request__pb2.KeysRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_keys__response__pb2.KeysResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/GetStats',
            pkg_dot_cache_dot_proto_dot_get__stats__request__pb2.CacheGetStatsRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_get__stats__response__pb2.CacheGetStatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Flush(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/Flush',
            pkg_dot_cache_dot_proto_dot_flush__request__pb2.FlushRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_flush__response__pb2.FlushResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TouchExpiration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.cache.CacheService/TouchExpiration',
            pkg_dot_cache_dot_proto_dot_touch__expiration__request__pb2.TouchExpirationRequest.SerializeToString,
            pkg_dot_cache_dot_proto_dot_touch__expiration__response__pb2.TouchExpirationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
