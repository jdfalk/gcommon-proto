# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pkg.queue.proto import get_cluster_info_request_pb2 as pkg_dot_queue_dot_proto_dot_get__cluster__info__request__pb2
from pkg.queue.proto import get_cluster_info_response_pb2 as pkg_dot_queue_dot_proto_dot_get__cluster__info__response__pb2
from pkg.queue.proto import get_queue_health_request_pb2 as pkg_dot_queue_dot_proto_dot_get__queue__health__request__pb2
from pkg.queue.proto import get_queue_health_response_pb2 as pkg_dot_queue_dot_proto_dot_get__queue__health__response__pb2
from pkg.queue.proto import get_queue_stats_request_pb2 as pkg_dot_queue_dot_proto_dot_get__queue__stats__request__pb2
from pkg.queue.proto import metrics_event_pb2 as pkg_dot_queue_dot_proto_dot_metrics__event__pb2
from pkg.queue.proto import queue_stats_response_pb2 as pkg_dot_queue_dot_proto_dot_queue__stats__response__pb2
from pkg.queue.proto import stream_metrics_request_pb2 as pkg_dot_queue_dot_proto_dot_stream__metrics__request__pb2


class QueueMonitoringServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetClusterInfo = channel.unary_unary(
                '/gcommon.v1.queue.QueueMonitoringService/GetClusterInfo',
                request_serializer=pkg_dot_queue_dot_proto_dot_get__cluster__info__request__pb2.GetClusterInfoRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_get__cluster__info__response__pb2.GetClusterInfoResponse.FromString,
                _registered_method=True)
        self.GetQueueHealth = channel.unary_unary(
                '/gcommon.v1.queue.QueueMonitoringService/GetQueueHealth',
                request_serializer=pkg_dot_queue_dot_proto_dot_get__queue__health__request__pb2.GetQueueHealthRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_get__queue__health__response__pb2.GetQueueHealthResponse.FromString,
                _registered_method=True)
        self.GetQueueStats = channel.unary_unary(
                '/gcommon.v1.queue.QueueMonitoringService/GetQueueStats',
                request_serializer=pkg_dot_queue_dot_proto_dot_get__queue__stats__request__pb2.GetQueueStatsRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_queue__stats__response__pb2.QueueStatsResponse.FromString,
                _registered_method=True)
        self.StreamMetrics = channel.unary_stream(
                '/gcommon.v1.queue.QueueMonitoringService/StreamMetrics',
                request_serializer=pkg_dot_queue_dot_proto_dot_stream__metrics__request__pb2.QueueStreamMetricsRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_metrics__event__pb2.MetricsEvent.FromString,
                _registered_method=True)


class QueueMonitoringServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetClusterInfo(self, request, context):
        """Get information about the queue cluster
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQueueHealth(self, request, context):
        """Get health status of all queues
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQueueStats(self, request, context):
        """Get detailed statistics for a specific queue
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamMetrics(self, request, context):
        """Get real-time metrics stream
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueueMonitoringServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetClusterInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClusterInfo,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_get__cluster__info__request__pb2.GetClusterInfoRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_get__cluster__info__response__pb2.GetClusterInfoResponse.SerializeToString,
            ),
            'GetQueueHealth': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQueueHealth,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_get__queue__health__request__pb2.GetQueueHealthRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_get__queue__health__response__pb2.GetQueueHealthResponse.SerializeToString,
            ),
            'GetQueueStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQueueStats,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_get__queue__stats__request__pb2.GetQueueStatsRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_queue__stats__response__pb2.QueueStatsResponse.SerializeToString,
            ),
            'StreamMetrics': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamMetrics,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_stream__metrics__request__pb2.QueueStreamMetricsRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_metrics__event__pb2.MetricsEvent.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.queue.QueueMonitoringService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.queue.QueueMonitoringService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class QueueMonitoringService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetClusterInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.QueueMonitoringService/GetClusterInfo',
            pkg_dot_queue_dot_proto_dot_get__cluster__info__request__pb2.GetClusterInfoRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_get__cluster__info__response__pb2.GetClusterInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetQueueHealth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.QueueMonitoringService/GetQueueHealth',
            pkg_dot_queue_dot_proto_dot_get__queue__health__request__pb2.GetQueueHealthRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_get__queue__health__response__pb2.GetQueueHealthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetQueueStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.QueueMonitoringService/GetQueueStats',
            pkg_dot_queue_dot_proto_dot_get__queue__stats__request__pb2.GetQueueStatsRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_queue__stats__response__pb2.QueueStatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/gcommon.v1.queue.QueueMonitoringService/StreamMetrics',
            pkg_dot_queue_dot_proto_dot_stream__metrics__request__pb2.QueueStreamMetricsRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_metrics__event__pb2.MetricsEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
