# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pkg.queue.proto import create_queue_request_pb2 as pkg_dot_queue_dot_proto_dot_create__queue__request__pb2
from pkg.queue.proto import create_queue_response_pb2 as pkg_dot_queue_dot_proto_dot_create__queue__response__pb2
from pkg.queue.proto import delete_topic_request_pb2 as pkg_dot_queue_dot_proto_dot_delete__topic__request__pb2
from pkg.queue.proto import delete_topic_response_pb2 as pkg_dot_queue_dot_proto_dot_delete__topic__response__pb2
from pkg.queue.proto import get_queue_info_request_pb2 as pkg_dot_queue_dot_proto_dot_get__queue__info__request__pb2
from pkg.queue.proto import get_queue_info_response_pb2 as pkg_dot_queue_dot_proto_dot_get__queue__info__response__pb2
from pkg.queue.proto import pause_queue_request_pb2 as pkg_dot_queue_dot_proto_dot_pause__queue__request__pb2
from pkg.queue.proto import pause_queue_response_pb2 as pkg_dot_queue_dot_proto_dot_pause__queue__response__pb2
from pkg.queue.proto import purge_request_pb2 as pkg_dot_queue_dot_proto_dot_purge__request__pb2
from pkg.queue.proto import purge_response_pb2 as pkg_dot_queue_dot_proto_dot_purge__response__pb2
from pkg.queue.proto import reset_queue_stats_request_pb2 as pkg_dot_queue_dot_proto_dot_reset__queue__stats__request__pb2
from pkg.queue.proto import reset_queue_stats_response_pb2 as pkg_dot_queue_dot_proto_dot_reset__queue__stats__response__pb2
from pkg.queue.proto import resume_queue_request_pb2 as pkg_dot_queue_dot_proto_dot_resume__queue__request__pb2
from pkg.queue.proto import resume_queue_response_pb2 as pkg_dot_queue_dot_proto_dot_resume__queue__response__pb2


class QueueAdminServiceStub(object):
    """Administrative service for queue management operations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateQueue = channel.unary_unary(
                '/gcommon.v1.queue.QueueAdminService/CreateQueue',
                request_serializer=pkg_dot_queue_dot_proto_dot_create__queue__request__pb2.CreateQueueRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_create__queue__response__pb2.CreateQueueResponse.FromString,
                _registered_method=True)
        self.DeleteTopic = channel.unary_unary(
                '/gcommon.v1.queue.QueueAdminService/DeleteTopic',
                request_serializer=pkg_dot_queue_dot_proto_dot_delete__topic__request__pb2.DeleteTopicRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_delete__topic__response__pb2.DeleteTopicResponse.FromString,
                _registered_method=True)
        self.GetQueueInfo = channel.unary_unary(
                '/gcommon.v1.queue.QueueAdminService/GetQueueInfo',
                request_serializer=pkg_dot_queue_dot_proto_dot_get__queue__info__request__pb2.GetQueueInfoRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_get__queue__info__response__pb2.GetQueueInfoResponse.FromString,
                _registered_method=True)
        self.PauseQueue = channel.unary_unary(
                '/gcommon.v1.queue.QueueAdminService/PauseQueue',
                request_serializer=pkg_dot_queue_dot_proto_dot_pause__queue__request__pb2.PauseQueueRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_pause__queue__response__pb2.PauseQueueResponse.FromString,
                _registered_method=True)
        self.ResumeQueue = channel.unary_unary(
                '/gcommon.v1.queue.QueueAdminService/ResumeQueue',
                request_serializer=pkg_dot_queue_dot_proto_dot_resume__queue__request__pb2.ResumeQueueRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_resume__queue__response__pb2.ResumeQueueResponse.FromString,
                _registered_method=True)
        self.PurgeQueue = channel.unary_unary(
                '/gcommon.v1.queue.QueueAdminService/PurgeQueue',
                request_serializer=pkg_dot_queue_dot_proto_dot_purge__request__pb2.PurgeRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_purge__response__pb2.PurgeResponse.FromString,
                _registered_method=True)
        self.ResetQueueStats = channel.unary_unary(
                '/gcommon.v1.queue.QueueAdminService/ResetQueueStats',
                request_serializer=pkg_dot_queue_dot_proto_dot_reset__queue__stats__request__pb2.ResetQueueStatsRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_reset__queue__stats__response__pb2.ResetQueueStatsResponse.FromString,
                _registered_method=True)


class QueueAdminServiceServicer(object):
    """Administrative service for queue management operations
    """

    def CreateQueue(self, request, context):
        """Create a new queue
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTopic(self, request, context):
        """Delete a queue/topic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQueueInfo(self, request, context):
        """Get queue information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseQueue(self, request, context):
        """Pause queue operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeQueue(self, request, context):
        """Resume queue operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PurgeQueue(self, request, context):
        """Purge queue contents
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetQueueStats(self, request, context):
        """Reset queue statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueueAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateQueue,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_create__queue__request__pb2.CreateQueueRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_create__queue__response__pb2.CreateQueueResponse.SerializeToString,
            ),
            'DeleteTopic': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTopic,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_delete__topic__request__pb2.DeleteTopicRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_delete__topic__response__pb2.DeleteTopicResponse.SerializeToString,
            ),
            'GetQueueInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQueueInfo,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_get__queue__info__request__pb2.GetQueueInfoRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_get__queue__info__response__pb2.GetQueueInfoResponse.SerializeToString,
            ),
            'PauseQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseQueue,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_pause__queue__request__pb2.PauseQueueRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_pause__queue__response__pb2.PauseQueueResponse.SerializeToString,
            ),
            'ResumeQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeQueue,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_resume__queue__request__pb2.ResumeQueueRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_resume__queue__response__pb2.ResumeQueueResponse.SerializeToString,
            ),
            'PurgeQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.PurgeQueue,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_purge__request__pb2.PurgeRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_purge__response__pb2.PurgeResponse.SerializeToString,
            ),
            'ResetQueueStats': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetQueueStats,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_reset__queue__stats__request__pb2.ResetQueueStatsRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_reset__queue__stats__response__pb2.ResetQueueStatsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.queue.QueueAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.queue.QueueAdminService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class QueueAdminService(object):
    """Administrative service for queue management operations
    """

    @staticmethod
    def CreateQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.QueueAdminService/CreateQueue',
            pkg_dot_queue_dot_proto_dot_create__queue__request__pb2.CreateQueueRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_create__queue__response__pb2.CreateQueueResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.QueueAdminService/DeleteTopic',
            pkg_dot_queue_dot_proto_dot_delete__topic__request__pb2.DeleteTopicRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_delete__topic__response__pb2.DeleteTopicResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetQueueInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.QueueAdminService/GetQueueInfo',
            pkg_dot_queue_dot_proto_dot_get__queue__info__request__pb2.GetQueueInfoRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_get__queue__info__response__pb2.GetQueueInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PauseQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.QueueAdminService/PauseQueue',
            pkg_dot_queue_dot_proto_dot_pause__queue__request__pb2.PauseQueueRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_pause__queue__response__pb2.PauseQueueResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResumeQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.QueueAdminService/ResumeQueue',
            pkg_dot_queue_dot_proto_dot_resume__queue__request__pb2.ResumeQueueRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_resume__queue__response__pb2.ResumeQueueResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PurgeQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.QueueAdminService/PurgeQueue',
            pkg_dot_queue_dot_proto_dot_purge__request__pb2.PurgeRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_purge__response__pb2.PurgeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetQueueStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.QueueAdminService/ResetQueueStats',
            pkg_dot_queue_dot_proto_dot_reset__queue__stats__request__pb2.ResetQueueStatsRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_reset__queue__stats__response__pb2.ResetQueueStatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
