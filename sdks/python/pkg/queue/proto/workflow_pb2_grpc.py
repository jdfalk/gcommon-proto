# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pkg.queue.proto import start_workflow_request_pb2 as pkg_dot_queue_dot_proto_dot_start__workflow__request__pb2
from pkg.queue.proto import start_workflow_response_pb2 as pkg_dot_queue_dot_proto_dot_start__workflow__response__pb2
from pkg.queue.proto import stop_workflow_request_pb2 as pkg_dot_queue_dot_proto_dot_stop__workflow__request__pb2
from pkg.queue.proto import stop_workflow_response_pb2 as pkg_dot_queue_dot_proto_dot_stop__workflow__response__pb2


class WorkflowServiceStub(object):
    """*
    WorkflowService provides workflow management operations for
    orchestrating complex, multi-step processes.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartWorkflow = channel.unary_unary(
                '/gcommon.v1.queue.WorkflowService/StartWorkflow',
                request_serializer=pkg_dot_queue_dot_proto_dot_start__workflow__request__pb2.StartWorkflowRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_start__workflow__response__pb2.StartWorkflowResponse.FromString,
                _registered_method=True)
        self.StopWorkflow = channel.unary_unary(
                '/gcommon.v1.queue.WorkflowService/StopWorkflow',
                request_serializer=pkg_dot_queue_dot_proto_dot_stop__workflow__request__pb2.StopWorkflowRequest.SerializeToString,
                response_deserializer=pkg_dot_queue_dot_proto_dot_stop__workflow__response__pb2.StopWorkflowResponse.FromString,
                _registered_method=True)


class WorkflowServiceServicer(object):
    """*
    WorkflowService provides workflow management operations for
    orchestrating complex, multi-step processes.
    """

    def StartWorkflow(self, request, context):
        """Start a new workflow execution
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopWorkflow(self, request, context):
        """Stop a running workflow execution
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkflowServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.StartWorkflow,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_start__workflow__request__pb2.StartWorkflowRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_start__workflow__response__pb2.StartWorkflowResponse.SerializeToString,
            ),
            'StopWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.StopWorkflow,
                    request_deserializer=pkg_dot_queue_dot_proto_dot_stop__workflow__request__pb2.StopWorkflowRequest.FromString,
                    response_serializer=pkg_dot_queue_dot_proto_dot_stop__workflow__response__pb2.StopWorkflowResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.queue.WorkflowService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.queue.WorkflowService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class WorkflowService(object):
    """*
    WorkflowService provides workflow management operations for
    orchestrating complex, multi-step processes.
    """

    @staticmethod
    def StartWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.WorkflowService/StartWorkflow',
            pkg_dot_queue_dot_proto_dot_start__workflow__request__pb2.StartWorkflowRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_start__workflow__response__pb2.StartWorkflowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.queue.WorkflowService/StopWorkflow',
            pkg_dot_queue_dot_proto_dot_stop__workflow__request__pb2.StopWorkflowRequest.SerializeToString,
            pkg_dot_queue_dot_proto_dot_stop__workflow__response__pb2.StopWorkflowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
