# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pkg.auth.proto import authenticate_request_pb2 as pkg_dot_auth_dot_proto_dot_authenticate__request__pb2
from pkg.auth.proto import authenticate_response_pb2 as pkg_dot_auth_dot_proto_dot_authenticate__response__pb2
from pkg.auth.proto import change_password_request_pb2 as pkg_dot_auth_dot_proto_dot_change__password__request__pb2
from pkg.auth.proto import change_password_response_pb2 as pkg_dot_auth_dot_proto_dot_change__password__response__pb2
from pkg.auth.proto import complete_password_reset_request_pb2 as pkg_dot_auth_dot_proto_dot_complete__password__reset__request__pb2
from pkg.auth.proto import complete_password_reset_response_pb2 as pkg_dot_auth_dot_proto_dot_complete__password__reset__response__pb2
from pkg.auth.proto import get_user_info_request_pb2 as pkg_dot_auth_dot_proto_dot_get__user__info__request__pb2
from pkg.auth.proto import get_user_info_response_pb2 as pkg_dot_auth_dot_proto_dot_get__user__info__response__pb2
from pkg.auth.proto import initiate_password_reset_request_pb2 as pkg_dot_auth_dot_proto_dot_initiate__password__reset__request__pb2
from pkg.auth.proto import initiate_password_reset_response_pb2 as pkg_dot_auth_dot_proto_dot_initiate__password__reset__response__pb2
from pkg.auth.proto import refresh_token_request_pb2 as pkg_dot_auth_dot_proto_dot_refresh__token__request__pb2
from pkg.auth.proto import refresh_token_response_pb2 as pkg_dot_auth_dot_proto_dot_refresh__token__response__pb2
from pkg.auth.proto import revoke_token_request_pb2 as pkg_dot_auth_dot_proto_dot_revoke__token__request__pb2
from pkg.auth.proto import revoke_token_response_pb2 as pkg_dot_auth_dot_proto_dot_revoke__token__response__pb2
from pkg.auth.proto import validate_token_request_pb2 as pkg_dot_auth_dot_proto_dot_validate__token__request__pb2
from pkg.auth.proto import validate_token_response_pb2 as pkg_dot_auth_dot_proto_dot_validate__token__response__pb2
from pkg.auth.proto import verify_credentials_request_pb2 as pkg_dot_auth_dot_proto_dot_verify__credentials__request__pb2
from pkg.auth.proto import verify_credentials_response_pb2 as pkg_dot_auth_dot_proto_dot_verify__credentials__response__pb2


class AuthServiceStub(object):
    """*
    AuthService provides comprehensive authentication capabilities.
    Handles user authentication, token validation, password management,
    and credential verification for secure access control.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Authenticate = channel.unary_unary(
                '/gcommon.v1.auth.AuthService/Authenticate',
                request_serializer=pkg_dot_auth_dot_proto_dot_authenticate__request__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_authenticate__response__pb2.AuthenticateResponse.FromString,
                _registered_method=True)
        self.ValidateToken = channel.unary_unary(
                '/gcommon.v1.auth.AuthService/ValidateToken',
                request_serializer=pkg_dot_auth_dot_proto_dot_validate__token__request__pb2.ValidateTokenRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_validate__token__response__pb2.ValidateTokenResponse.FromString,
                _registered_method=True)
        self.VerifyCredentials = channel.unary_unary(
                '/gcommon.v1.auth.AuthService/VerifyCredentials',
                request_serializer=pkg_dot_auth_dot_proto_dot_verify__credentials__request__pb2.VerifyCredentialsRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_verify__credentials__response__pb2.VerifyCredentialsResponse.FromString,
                _registered_method=True)
        self.RefreshToken = channel.unary_unary(
                '/gcommon.v1.auth.AuthService/RefreshToken',
                request_serializer=pkg_dot_auth_dot_proto_dot_refresh__token__request__pb2.RefreshTokenRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_refresh__token__response__pb2.RefreshTokenResponse.FromString,
                _registered_method=True)
        self.RevokeToken = channel.unary_unary(
                '/gcommon.v1.auth.AuthService/RevokeToken',
                request_serializer=pkg_dot_auth_dot_proto_dot_revoke__token__request__pb2.RevokeTokenRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_revoke__token__response__pb2.RevokeTokenResponse.FromString,
                _registered_method=True)
        self.GetUserInfo = channel.unary_unary(
                '/gcommon.v1.auth.AuthService/GetUserInfo',
                request_serializer=pkg_dot_auth_dot_proto_dot_get__user__info__request__pb2.GetUserInfoRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_get__user__info__response__pb2.GetUserInfoResponse.FromString,
                _registered_method=True)
        self.InitiatePasswordReset = channel.unary_unary(
                '/gcommon.v1.auth.AuthService/InitiatePasswordReset',
                request_serializer=pkg_dot_auth_dot_proto_dot_initiate__password__reset__request__pb2.InitiatePasswordResetRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_initiate__password__reset__response__pb2.InitiatePasswordResetResponse.FromString,
                _registered_method=True)
        self.CompletePasswordReset = channel.unary_unary(
                '/gcommon.v1.auth.AuthService/CompletePasswordReset',
                request_serializer=pkg_dot_auth_dot_proto_dot_complete__password__reset__request__pb2.CompletePasswordResetRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_complete__password__reset__response__pb2.CompletePasswordResetResponse.FromString,
                _registered_method=True)
        self.ChangePassword = channel.unary_unary(
                '/gcommon.v1.auth.AuthService/ChangePassword',
                request_serializer=pkg_dot_auth_dot_proto_dot_change__password__request__pb2.ChangePasswordRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_change__password__response__pb2.ChangePasswordResponse.FromString,
                _registered_method=True)


class AuthServiceServicer(object):
    """*
    AuthService provides comprehensive authentication capabilities.
    Handles user authentication, token validation, password management,
    and credential verification for secure access control.
    """

    def Authenticate(self, request, context):
        """Authenticate a user with various credential types (password, OAuth, etc.)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateToken(self, request, context):
        """Validate an access token and return token information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyCredentials(self, request, context):
        """Verify user credentials without issuing tokens (for validation only)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshToken(self, request, context):
        """Refresh an access token using a valid refresh token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeToken(self, request, context):
        """Revoke a token (access or refresh) to invalidate it
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserInfo(self, request, context):
        """Get user information from a valid token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitiatePasswordReset(self, request, context):
        """Initiate password reset flow (send reset email/token)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompletePasswordReset(self, request, context):
        """Complete password reset with validation token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangePassword(self, request, context):
        """Change user password (requires current password authentication)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_authenticate__request__pb2.AuthenticateRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_authenticate__response__pb2.AuthenticateResponse.SerializeToString,
            ),
            'ValidateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateToken,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_validate__token__request__pb2.ValidateTokenRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_validate__token__response__pb2.ValidateTokenResponse.SerializeToString,
            ),
            'VerifyCredentials': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyCredentials,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_verify__credentials__request__pb2.VerifyCredentialsRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_verify__credentials__response__pb2.VerifyCredentialsResponse.SerializeToString,
            ),
            'RefreshToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshToken,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_refresh__token__request__pb2.RefreshTokenRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_refresh__token__response__pb2.RefreshTokenResponse.SerializeToString,
            ),
            'RevokeToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeToken,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_revoke__token__request__pb2.RevokeTokenRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_revoke__token__response__pb2.RevokeTokenResponse.SerializeToString,
            ),
            'GetUserInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserInfo,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_get__user__info__request__pb2.GetUserInfoRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_get__user__info__response__pb2.GetUserInfoResponse.SerializeToString,
            ),
            'InitiatePasswordReset': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiatePasswordReset,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_initiate__password__reset__request__pb2.InitiatePasswordResetRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_initiate__password__reset__response__pb2.InitiatePasswordResetResponse.SerializeToString,
            ),
            'CompletePasswordReset': grpc.unary_unary_rpc_method_handler(
                    servicer.CompletePasswordReset,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_complete__password__reset__request__pb2.CompletePasswordResetRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_complete__password__reset__response__pb2.CompletePasswordResetResponse.SerializeToString,
            ),
            'ChangePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePassword,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_change__password__request__pb2.ChangePasswordRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_change__password__response__pb2.ChangePasswordResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.auth.AuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.auth.AuthService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AuthService(object):
    """*
    AuthService provides comprehensive authentication capabilities.
    Handles user authentication, token validation, password management,
    and credential verification for secure access control.
    """

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.AuthService/Authenticate',
            pkg_dot_auth_dot_proto_dot_authenticate__request__pb2.AuthenticateRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_authenticate__response__pb2.AuthenticateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.AuthService/ValidateToken',
            pkg_dot_auth_dot_proto_dot_validate__token__request__pb2.ValidateTokenRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_validate__token__response__pb2.ValidateTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyCredentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.AuthService/VerifyCredentials',
            pkg_dot_auth_dot_proto_dot_verify__credentials__request__pb2.VerifyCredentialsRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_verify__credentials__response__pb2.VerifyCredentialsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RefreshToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.AuthService/RefreshToken',
            pkg_dot_auth_dot_proto_dot_refresh__token__request__pb2.RefreshTokenRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_refresh__token__response__pb2.RefreshTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RevokeToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.AuthService/RevokeToken',
            pkg_dot_auth_dot_proto_dot_revoke__token__request__pb2.RevokeTokenRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_revoke__token__response__pb2.RevokeTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.AuthService/GetUserInfo',
            pkg_dot_auth_dot_proto_dot_get__user__info__request__pb2.GetUserInfoRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_get__user__info__response__pb2.GetUserInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitiatePasswordReset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.AuthService/InitiatePasswordReset',
            pkg_dot_auth_dot_proto_dot_initiate__password__reset__request__pb2.InitiatePasswordResetRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_initiate__password__reset__response__pb2.InitiatePasswordResetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CompletePasswordReset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.AuthService/CompletePasswordReset',
            pkg_dot_auth_dot_proto_dot_complete__password__reset__request__pb2.CompletePasswordResetRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_complete__password__reset__response__pb2.CompletePasswordResetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.AuthService/ChangePassword',
            pkg_dot_auth_dot_proto_dot_change__password__request__pb2.ChangePasswordRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_change__password__response__pb2.ChangePasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
