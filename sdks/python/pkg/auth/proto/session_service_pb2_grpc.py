# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pkg.auth.proto import create_session_request_pb2 as pkg_dot_auth_dot_proto_dot_create__session__request__pb2
from pkg.auth.proto import create_session_response_pb2 as pkg_dot_auth_dot_proto_dot_create__session__response__pb2
from pkg.auth.proto import delete_session_request_pb2 as pkg_dot_auth_dot_proto_dot_delete__session__request__pb2
from pkg.auth.proto import delete_session_response_pb2 as pkg_dot_auth_dot_proto_dot_delete__session__response__pb2
from pkg.auth.proto import get_session_request_pb2 as pkg_dot_auth_dot_proto_dot_get__session__request__pb2
from pkg.auth.proto import get_session_response_pb2 as pkg_dot_auth_dot_proto_dot_get__session__response__pb2
from pkg.auth.proto import list_sessions_request_pb2 as pkg_dot_auth_dot_proto_dot_list__sessions__request__pb2
from pkg.auth.proto import list_sessions_response_pb2 as pkg_dot_auth_dot_proto_dot_list__sessions__response__pb2
from pkg.auth.proto import list_user_sessions_request_pb2 as pkg_dot_auth_dot_proto_dot_list__user__sessions__request__pb2
from pkg.auth.proto import list_user_sessions_response_pb2 as pkg_dot_auth_dot_proto_dot_list__user__sessions__response__pb2
from pkg.auth.proto import terminate_session_request_pb2 as pkg_dot_auth_dot_proto_dot_terminate__session__request__pb2
from pkg.auth.proto import terminate_session_response_pb2 as pkg_dot_auth_dot_proto_dot_terminate__session__response__pb2
from pkg.auth.proto import update_session_request_pb2 as pkg_dot_auth_dot_proto_dot_update__session__request__pb2
from pkg.auth.proto import update_session_response_pb2 as pkg_dot_auth_dot_proto_dot_update__session__response__pb2
from pkg.auth.proto import validate_session_request_pb2 as pkg_dot_auth_dot_proto_dot_validate__session__request__pb2
from pkg.auth.proto import validate_session_response_pb2 as pkg_dot_auth_dot_proto_dot_validate__session__response__pb2


class SessionServiceStub(object):
    """*
    SessionService manages user sessions and session lifecycle.
    Provides session creation, validation, tracking, and termination
    for stateful authentication and user activity monitoring.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateSession = channel.unary_unary(
                '/gcommon.v1.auth.SessionService/CreateSession',
                request_serializer=pkg_dot_auth_dot_proto_dot_create__session__request__pb2.AuthCreateSessionRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_create__session__response__pb2.AuthCreateSessionResponse.FromString,
                _registered_method=True)
        self.GetSession = channel.unary_unary(
                '/gcommon.v1.auth.SessionService/GetSession',
                request_serializer=pkg_dot_auth_dot_proto_dot_get__session__request__pb2.AuthGetSessionRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_get__session__response__pb2.AuthGetSessionResponse.FromString,
                _registered_method=True)
        self.UpdateSession = channel.unary_unary(
                '/gcommon.v1.auth.SessionService/UpdateSession',
                request_serializer=pkg_dot_auth_dot_proto_dot_update__session__request__pb2.AuthUpdateSessionRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_update__session__response__pb2.AuthUpdateSessionResponse.FromString,
                _registered_method=True)
        self.ValidateSession = channel.unary_unary(
                '/gcommon.v1.auth.SessionService/ValidateSession',
                request_serializer=pkg_dot_auth_dot_proto_dot_validate__session__request__pb2.ValidateSessionRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_validate__session__response__pb2.ValidateSessionResponse.FromString,
                _registered_method=True)
        self.TerminateSession = channel.unary_unary(
                '/gcommon.v1.auth.SessionService/TerminateSession',
                request_serializer=pkg_dot_auth_dot_proto_dot_terminate__session__request__pb2.TerminateSessionRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_terminate__session__response__pb2.TerminateSessionResponse.FromString,
                _registered_method=True)
        self.DeleteSession = channel.unary_unary(
                '/gcommon.v1.auth.SessionService/DeleteSession',
                request_serializer=pkg_dot_auth_dot_proto_dot_delete__session__request__pb2.AuthDeleteSessionRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_delete__session__response__pb2.AuthDeleteSessionResponse.FromString,
                _registered_method=True)
        self.ListUserSessions = channel.unary_unary(
                '/gcommon.v1.auth.SessionService/ListUserSessions',
                request_serializer=pkg_dot_auth_dot_proto_dot_list__user__sessions__request__pb2.ListUserSessionsRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_list__user__sessions__response__pb2.ListUserSessionsResponse.FromString,
                _registered_method=True)
        self.ListSessions = channel.unary_unary(
                '/gcommon.v1.auth.SessionService/ListSessions',
                request_serializer=pkg_dot_auth_dot_proto_dot_list__sessions__request__pb2.AuthListSessionsRequest.SerializeToString,
                response_deserializer=pkg_dot_auth_dot_proto_dot_list__sessions__response__pb2.AuthListSessionsResponse.FromString,
                _registered_method=True)


class SessionServiceServicer(object):
    """*
    SessionService manages user sessions and session lifecycle.
    Provides session creation, validation, tracking, and termination
    for stateful authentication and user activity monitoring.
    """

    def CreateSession(self, request, context):
        """Create a new session for an authenticated user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSession(self, request, context):
        """Get detailed information about a specific session
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSession(self, request, context):
        """Update session information (e.g., refresh activity timestamp)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateSession(self, request, context):
        """Validate a session and return session information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TerminateSession(self, request, context):
        """Terminate a session (logout)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSession(self, request, context):
        """Delete a specific session
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserSessions(self, request, context):
        """List all active sessions for a user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSessions(self, request, context):
        """List all sessions (admin only)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SessionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSession,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_create__session__request__pb2.AuthCreateSessionRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_create__session__response__pb2.AuthCreateSessionResponse.SerializeToString,
            ),
            'GetSession': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSession,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_get__session__request__pb2.AuthGetSessionRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_get__session__response__pb2.AuthGetSessionResponse.SerializeToString,
            ),
            'UpdateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSession,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_update__session__request__pb2.AuthUpdateSessionRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_update__session__response__pb2.AuthUpdateSessionResponse.SerializeToString,
            ),
            'ValidateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateSession,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_validate__session__request__pb2.ValidateSessionRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_validate__session__response__pb2.ValidateSessionResponse.SerializeToString,
            ),
            'TerminateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.TerminateSession,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_terminate__session__request__pb2.TerminateSessionRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_terminate__session__response__pb2.TerminateSessionResponse.SerializeToString,
            ),
            'DeleteSession': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSession,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_delete__session__request__pb2.AuthDeleteSessionRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_delete__session__response__pb2.AuthDeleteSessionResponse.SerializeToString,
            ),
            'ListUserSessions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserSessions,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_list__user__sessions__request__pb2.ListUserSessionsRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_list__user__sessions__response__pb2.ListUserSessionsResponse.SerializeToString,
            ),
            'ListSessions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSessions,
                    request_deserializer=pkg_dot_auth_dot_proto_dot_list__sessions__request__pb2.AuthListSessionsRequest.FromString,
                    response_serializer=pkg_dot_auth_dot_proto_dot_list__sessions__response__pb2.AuthListSessionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.auth.SessionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.auth.SessionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SessionService(object):
    """*
    SessionService manages user sessions and session lifecycle.
    Provides session creation, validation, tracking, and termination
    for stateful authentication and user activity monitoring.
    """

    @staticmethod
    def CreateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.SessionService/CreateSession',
            pkg_dot_auth_dot_proto_dot_create__session__request__pb2.AuthCreateSessionRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_create__session__response__pb2.AuthCreateSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.SessionService/GetSession',
            pkg_dot_auth_dot_proto_dot_get__session__request__pb2.AuthGetSessionRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_get__session__response__pb2.AuthGetSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.SessionService/UpdateSession',
            pkg_dot_auth_dot_proto_dot_update__session__request__pb2.AuthUpdateSessionRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_update__session__response__pb2.AuthUpdateSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.SessionService/ValidateSession',
            pkg_dot_auth_dot_proto_dot_validate__session__request__pb2.ValidateSessionRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_validate__session__response__pb2.ValidateSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TerminateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.SessionService/TerminateSession',
            pkg_dot_auth_dot_proto_dot_terminate__session__request__pb2.TerminateSessionRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_terminate__session__response__pb2.TerminateSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.SessionService/DeleteSession',
            pkg_dot_auth_dot_proto_dot_delete__session__request__pb2.AuthDeleteSessionRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_delete__session__response__pb2.AuthDeleteSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListUserSessions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.SessionService/ListUserSessions',
            pkg_dot_auth_dot_proto_dot_list__user__sessions__request__pb2.ListUserSessionsRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_list__user__sessions__response__pb2.ListUserSessionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListSessions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.auth.SessionService/ListSessions',
            pkg_dot_auth_dot_proto_dot_list__sessions__request__pb2.AuthListSessionsRequest.SerializeToString,
            pkg_dot_auth_dot_proto_dot_list__sessions__response__pb2.AuthListSessionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
