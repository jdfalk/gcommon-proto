# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pkg.health.proto import get_health_metrics_request_pb2 as pkg_dot_health_dot_proto_dot_get__health__metrics__request__pb2
from pkg.health.proto import get_health_metrics_response_pb2 as pkg_dot_health_dot_proto_dot_get__health__metrics__response__pb2
from pkg.health.proto import get_service_health_request_pb2 as pkg_dot_health_dot_proto_dot_get__service__health__request__pb2
from pkg.health.proto import get_service_health_response_pb2 as pkg_dot_health_dot_proto_dot_get__service__health__response__pb2
from pkg.health.proto import health_check_all_request_pb2 as pkg_dot_health_dot_proto_dot_health__check__all__request__pb2
from pkg.health.proto import health_check_all_response_pb2 as pkg_dot_health_dot_proto_dot_health__check__all__response__pb2
from pkg.health.proto import health_check_request_pb2 as pkg_dot_health_dot_proto_dot_health__check__request__pb2
from pkg.health.proto import health_check_response_pb2 as pkg_dot_health_dot_proto_dot_health__check__response__pb2
from pkg.health.proto import list_services_request_pb2 as pkg_dot_health_dot_proto_dot_list__services__request__pb2
from pkg.health.proto import list_services_response_pb2 as pkg_dot_health_dot_proto_dot_list__services__response__pb2
from pkg.health.proto import register_check_request_pb2 as pkg_dot_health_dot_proto_dot_register__check__request__pb2
from pkg.health.proto import register_check_response_pb2 as pkg_dot_health_dot_proto_dot_register__check__response__pb2
from pkg.health.proto import unregister_check_request_pb2 as pkg_dot_health_dot_proto_dot_unregister__check__request__pb2
from pkg.health.proto import unregister_check_response_pb2 as pkg_dot_health_dot_proto_dot_unregister__check__response__pb2
from pkg.health.proto import watch_request_pb2 as pkg_dot_health_dot_proto_dot_watch__request__pb2
from pkg.health.proto import watch_response_pb2 as pkg_dot_health_dot_proto_dot_watch__response__pb2


class HealthServiceStub(object):
    """*
    HealthService provides comprehensive health checking capabilities.
    Supports individual check status, system-wide health, and health monitoring.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Check = channel.unary_unary(
                '/gcommon.v1.health.HealthService/Check',
                request_serializer=pkg_dot_health_dot_proto_dot_health__check__request__pb2.HealthHealthCheckRequest.SerializeToString,
                response_deserializer=pkg_dot_health_dot_proto_dot_health__check__response__pb2.HealthHealthCheckResponse.FromString,
                _registered_method=True)
        self.CheckAll = channel.unary_unary(
                '/gcommon.v1.health.HealthService/CheckAll',
                request_serializer=pkg_dot_health_dot_proto_dot_health__check__all__request__pb2.HealthCheckAllRequest.SerializeToString,
                response_deserializer=pkg_dot_health_dot_proto_dot_health__check__all__response__pb2.HealthCheckAllResponse.FromString,
                _registered_method=True)
        self.Watch = channel.unary_stream(
                '/gcommon.v1.health.HealthService/Watch',
                request_serializer=pkg_dot_health_dot_proto_dot_watch__request__pb2.HealthWatchRequest.SerializeToString,
                response_deserializer=pkg_dot_health_dot_proto_dot_watch__response__pb2.WatchResponse.FromString,
                _registered_method=True)
        self.GetServiceHealth = channel.unary_unary(
                '/gcommon.v1.health.HealthService/GetServiceHealth',
                request_serializer=pkg_dot_health_dot_proto_dot_get__service__health__request__pb2.GetServiceHealthRequest.SerializeToString,
                response_deserializer=pkg_dot_health_dot_proto_dot_get__service__health__response__pb2.GetServiceHealthResponse.FromString,
                _registered_method=True)
        self.ListServices = channel.unary_unary(
                '/gcommon.v1.health.HealthService/ListServices',
                request_serializer=pkg_dot_health_dot_proto_dot_list__services__request__pb2.ListServicesRequest.SerializeToString,
                response_deserializer=pkg_dot_health_dot_proto_dot_list__services__response__pb2.ListServicesResponse.FromString,
                _registered_method=True)
        self.RegisterCheck = channel.unary_unary(
                '/gcommon.v1.health.HealthService/RegisterCheck',
                request_serializer=pkg_dot_health_dot_proto_dot_register__check__request__pb2.RegisterCheckRequest.SerializeToString,
                response_deserializer=pkg_dot_health_dot_proto_dot_register__check__response__pb2.RegisterCheckResponse.FromString,
                _registered_method=True)
        self.UnregisterCheck = channel.unary_unary(
                '/gcommon.v1.health.HealthService/UnregisterCheck',
                request_serializer=pkg_dot_health_dot_proto_dot_unregister__check__request__pb2.UnregisterCheckRequest.SerializeToString,
                response_deserializer=pkg_dot_health_dot_proto_dot_unregister__check__response__pb2.UnregisterCheckResponse.FromString,
                _registered_method=True)
        self.GetHealthMetrics = channel.unary_unary(
                '/gcommon.v1.health.HealthService/GetHealthMetrics',
                request_serializer=pkg_dot_health_dot_proto_dot_get__health__metrics__request__pb2.GetHealthMetricsRequest.SerializeToString,
                response_deserializer=pkg_dot_health_dot_proto_dot_get__health__metrics__response__pb2.GetHealthMetricsResponse.FromString,
                _registered_method=True)


class HealthServiceServicer(object):
    """*
    HealthService provides comprehensive health checking capabilities.
    Supports individual check status, system-wide health, and health monitoring.
    """

    def Check(self, request, context):
        """Check performs a health check for a specific service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckAll(self, request, context):
        """CheckAll performs comprehensive health checks for all services
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Watch(self, request, context):
        """Watch returns a stream of health check results
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceHealth(self, request, context):
        """GetServiceHealth returns health status for a service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListServices(self, request, context):
        """ListServices returns all monitored services
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterCheck(self, request, context):
        """RegisterCheck registers a new health check
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnregisterCheck(self, request, context):
        """UnregisterCheck removes a health check
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHealthMetrics(self, request, context):
        """GetHealthMetrics returns health metrics and statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HealthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Check': grpc.unary_unary_rpc_method_handler(
                    servicer.Check,
                    request_deserializer=pkg_dot_health_dot_proto_dot_health__check__request__pb2.HealthHealthCheckRequest.FromString,
                    response_serializer=pkg_dot_health_dot_proto_dot_health__check__response__pb2.HealthHealthCheckResponse.SerializeToString,
            ),
            'CheckAll': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckAll,
                    request_deserializer=pkg_dot_health_dot_proto_dot_health__check__all__request__pb2.HealthCheckAllRequest.FromString,
                    response_serializer=pkg_dot_health_dot_proto_dot_health__check__all__response__pb2.HealthCheckAllResponse.SerializeToString,
            ),
            'Watch': grpc.unary_stream_rpc_method_handler(
                    servicer.Watch,
                    request_deserializer=pkg_dot_health_dot_proto_dot_watch__request__pb2.HealthWatchRequest.FromString,
                    response_serializer=pkg_dot_health_dot_proto_dot_watch__response__pb2.WatchResponse.SerializeToString,
            ),
            'GetServiceHealth': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceHealth,
                    request_deserializer=pkg_dot_health_dot_proto_dot_get__service__health__request__pb2.GetServiceHealthRequest.FromString,
                    response_serializer=pkg_dot_health_dot_proto_dot_get__service__health__response__pb2.GetServiceHealthResponse.SerializeToString,
            ),
            'ListServices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListServices,
                    request_deserializer=pkg_dot_health_dot_proto_dot_list__services__request__pb2.ListServicesRequest.FromString,
                    response_serializer=pkg_dot_health_dot_proto_dot_list__services__response__pb2.ListServicesResponse.SerializeToString,
            ),
            'RegisterCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterCheck,
                    request_deserializer=pkg_dot_health_dot_proto_dot_register__check__request__pb2.RegisterCheckRequest.FromString,
                    response_serializer=pkg_dot_health_dot_proto_dot_register__check__response__pb2.RegisterCheckResponse.SerializeToString,
            ),
            'UnregisterCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.UnregisterCheck,
                    request_deserializer=pkg_dot_health_dot_proto_dot_unregister__check__request__pb2.UnregisterCheckRequest.FromString,
                    response_serializer=pkg_dot_health_dot_proto_dot_unregister__check__response__pb2.UnregisterCheckResponse.SerializeToString,
            ),
            'GetHealthMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHealthMetrics,
                    request_deserializer=pkg_dot_health_dot_proto_dot_get__health__metrics__request__pb2.GetHealthMetricsRequest.FromString,
                    response_serializer=pkg_dot_health_dot_proto_dot_get__health__metrics__response__pb2.GetHealthMetricsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gcommon.v1.health.HealthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gcommon.v1.health.HealthService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class HealthService(object):
    """*
    HealthService provides comprehensive health checking capabilities.
    Supports individual check status, system-wide health, and health monitoring.
    """

    @staticmethod
    def Check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.health.HealthService/Check',
            pkg_dot_health_dot_proto_dot_health__check__request__pb2.HealthHealthCheckRequest.SerializeToString,
            pkg_dot_health_dot_proto_dot_health__check__response__pb2.HealthHealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.health.HealthService/CheckAll',
            pkg_dot_health_dot_proto_dot_health__check__all__request__pb2.HealthCheckAllRequest.SerializeToString,
            pkg_dot_health_dot_proto_dot_health__check__all__response__pb2.HealthCheckAllResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Watch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/gcommon.v1.health.HealthService/Watch',
            pkg_dot_health_dot_proto_dot_watch__request__pb2.HealthWatchRequest.SerializeToString,
            pkg_dot_health_dot_proto_dot_watch__response__pb2.WatchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetServiceHealth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.health.HealthService/GetServiceHealth',
            pkg_dot_health_dot_proto_dot_get__service__health__request__pb2.GetServiceHealthRequest.SerializeToString,
            pkg_dot_health_dot_proto_dot_get__service__health__response__pb2.GetServiceHealthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.health.HealthService/ListServices',
            pkg_dot_health_dot_proto_dot_list__services__request__pb2.ListServicesRequest.SerializeToString,
            pkg_dot_health_dot_proto_dot_list__services__response__pb2.ListServicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.health.HealthService/RegisterCheck',
            pkg_dot_health_dot_proto_dot_register__check__request__pb2.RegisterCheckRequest.SerializeToString,
            pkg_dot_health_dot_proto_dot_register__check__response__pb2.RegisterCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnregisterCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.health.HealthService/UnregisterCheck',
            pkg_dot_health_dot_proto_dot_unregister__check__request__pb2.UnregisterCheckRequest.SerializeToString,
            pkg_dot_health_dot_proto_dot_unregister__check__response__pb2.UnregisterCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetHealthMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gcommon.v1.health.HealthService/GetHealthMetrics',
            pkg_dot_health_dot_proto_dot_get__health__metrics__request__pb2.GetHealthMetricsRequest.SerializeToString,
            pkg_dot_health_dot_proto_dot_get__health__metrics__response__pb2.GetHealthMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
