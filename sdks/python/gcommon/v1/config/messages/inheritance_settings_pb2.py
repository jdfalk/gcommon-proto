# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: gcommon/v1/config/messages/inheritance_settings.proto
# Protobuf Python Version: 5.29.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    3,
    '',
    'gcommon/v1/config/messages/inheritance_settings.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gcommon.v1.config.enums import inheritance_strategy_pb2 as gcommon_dot_v1_dot_config_dot_enums_dot_inheritance__strategy__pb2
from gcommon.v1.config.enums import merge_strategy_pb2 as gcommon_dot_v1_dot_config_dot_enums_dot_merge__strategy__pb2
from gcommon.v1.config.messages import inheritance_filter_pb2 as gcommon_dot_v1_dot_config_dot_messages_dot_inheritance__filter__pb2
from gcommon.v1.config.messages import inheritance_transformation_pb2 as gcommon_dot_v1_dot_config_dot_messages_dot_inheritance__transformation__pb2
from google.protobuf import go_features_pb2 as google_dot_protobuf_dot_go__features__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n5gcommon/v1/config/messages/inheritance_settings.proto\x12\x11gcommon.v1.config\x1a\x32gcommon/v1/config/enums/inheritance_strategy.proto\x1a,gcommon/v1/config/enums/merge_strategy.proto\x1a\x33gcommon/v1/config/messages/inheritance_filter.proto\x1a;gcommon/v1/config/messages/inheritance_transformation.proto\x1a!google/protobuf/go_features.proto\"\xa0\x04\n\x13InheritanceSettings\x12\x18\n\x07\x65nabled\x18\x01 \x01(\x08R\x07\x65nabled\x12\x42\n\x08strategy\x18\x02 \x01(\x0e\x32&.gcommon.v1.config.InheritanceStrategyR\x08strategy\x12\x18\n\x07sources\x18\x03 \x03(\tR\x07sources\x12>\n\x07\x66ilters\x18\x04 \x03(\x0b\x32$.gcommon.v1.config.InheritanceFilterR\x07\x66ilters\x12V\n\x0ftransformations\x18\x05 \x03(\x0b\x32,.gcommon.v1.config.InheritanceTransformationR\x0ftransformations\x12!\n\x0cmerge_values\x18\x06 \x01(\x08R\x0bmergeValues\x12G\n\x0emerge_strategy\x18\x07 \x01(\x0e\x32 .gcommon.v1.config.MergeStrategyR\rmergeStrategy\x12P\n\x08metadata\x18\x08 \x03(\x0b\x32\x34.gcommon.v1.config.InheritanceSettings.MetadataEntryR\x08metadata\x1a;\n\rMetadataEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x42\xdd\x01\n\x15\x63om.gcommon.v1.configB\x18InheritanceSettingsProtoP\x01Z<github.com/jdfalk/gcommon/sdks/go/gcommon/v1/config/messages\xa2\x02\x03GVC\xaa\x02\x11Gcommon.V1.Config\xca\x02\x11Gcommon\\V1\\Config\xe2\x02\x1dGcommon\\V1\\Config\\GPBMetadata\xea\x02\x13Gcommon::V1::Config\x92\x03\x05\xd2>\x02\x10\x03\x62\x08\x65\x64itionsp\xe8\x07')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'gcommon.v1.config.messages.inheritance_settings_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\025com.gcommon.v1.configB\030InheritanceSettingsProtoP\001Z<github.com/jdfalk/gcommon/sdks/go/gcommon/v1/config/messages\242\002\003GVC\252\002\021Gcommon.V1.Config\312\002\021Gcommon\\V1\\Config\342\002\035Gcommon\\V1\\Config\\GPBMetadata\352\002\023Gcommon::V1::Config\222\003\005\322>\002\020\003'
  _globals['_INHERITANCESETTINGS_METADATAENTRY']._loaded_options = None
  _globals['_INHERITANCESETTINGS_METADATAENTRY']._serialized_options = b'8\001'
  _globals['_INHERITANCESETTINGS']._serialized_start=324
  _globals['_INHERITANCESETTINGS']._serialized_end=868
  _globals['_INHERITANCESETTINGS_METADATAENTRY']._serialized_start=809
  _globals['_INHERITANCESETTINGS_METADATAENTRY']._serialized_end=868
# @@protoc_insertion_point(module_scope)
