# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: gcommon/v1/media/create_media_file_response.proto
# Protobuf Python Version: 6.32.0
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    32,
    0,
    "",
    "gcommon/v1/media/create_media_file_response.proto",
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gcommon.v1.media import (
    media_file_pb2 as gcommon_dot_v1_dot_media_dot_media__file__pb2,
)
from google.protobuf import go_features_pb2 as google_dot_protobuf_dot_go__features__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n1gcommon/v1/media/create_media_file_response.proto\x12\x10gcommon.v1.media\x1a!gcommon/v1/media/media_file.proto\x1a!google/protobuf/go_features.proto"U\n\x17\x43reateMediaFileResponse\x12:\n\nmedia_file\x18\x01 \x01(\x0b\x32\x1b.gcommon.v1.media.MediaFileR\tmediaFileB4Z*github.com/jdfalk/gcommon/sdks/go/v1/media\x92\x03\x05\xd2>\x02\x10\x03\x62\x08\x65\x64itionsp\xe8\x07'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(
    DESCRIPTOR, "gcommon.v1.media.create_media_file_response_pb2", _globals
)
if not _descriptor._USE_C_DESCRIPTORS:
    _globals["DESCRIPTOR"]._loaded_options = None
    _globals[
        "DESCRIPTOR"
    ]._serialized_options = (
        b"Z*github.com/jdfalk/gcommon/sdks/go/v1/media\222\003\005\322>\002\020\003"
    )
    _globals["_CREATEMEDIAFILERESPONSE"]._serialized_start = 141
    _globals["_CREATEMEDIAFILERESPONSE"]._serialized_end = 226
# @@protoc_insertion_point(module_scope)
