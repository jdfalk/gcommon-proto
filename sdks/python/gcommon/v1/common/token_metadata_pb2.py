# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: gcommon/v1/common/token_metadata.proto
# Protobuf Python Version: 5.29.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    3,
    '',
    'gcommon/v1/common/token_metadata.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gcommon.v1.common import token_type_pb2 as gcommon_dot_v1_dot_common_dot_token__type__pb2
from google.protobuf import go_features_pb2 as google_dot_protobuf_dot_go__features__pb2
from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&gcommon/v1/common/token_metadata.proto\x12\x11gcommon.v1.common\x1a\"gcommon/v1/common/token_type.proto\x1a!google/protobuf/go_features.proto\x1a\x1b\x62uf/validate/validate.proto\"\xe7\x02\n\rTokenMetadata\x12\"\n\x08token_id\x18\x01 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x07tokenId\x12\x30\n\x04type\x18\x02 \x01(\x0e\x32\x1c.gcommon.v1.common.TokenTypeR\x04type\x12!\n\x07subject\x18\x03 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x07subject\x12$\n\x08\x61udience\x18\x04 \x03(\tB\x08\xbaH\x05\x92\x01\x02\x08\x01R\x08\x61udience\x12 \n\x06scopes\x18\x05 \x03(\tB\x08\xbaH\x05\x92\x01\x02\x08\x01R\x06scopes\x12$\n\tissued_at\x18\x06 \x01(\x03\x42\x07\xbaH\x04\"\x02(\x00R\x08issuedAt\x12&\n\nexpires_at\x18\x07 \x01(\x03\x42\x07\xbaH\x04\"\x02(\x00R\texpiresAt\x12&\n\nnot_before\x18\x08 \x01(\x03\x42\x07\xbaH\x04\"\x02(\x00R\tnotBefore\x12\x1f\n\x06issuer\x18\t \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x06issuerB5Z+github.com/jdfalk/gcommon/sdks/go/v1/common\x92\x03\x05\xd2>\x02\x10\x03\x62\x08\x65\x64itionsp\xe8\x07')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'gcommon.v1.common.token_metadata_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z+github.com/jdfalk/gcommon/sdks/go/v1/common\222\003\005\322>\002\020\003'
  _globals['_TOKENMETADATA'].fields_by_name['token_id']._loaded_options = None
  _globals['_TOKENMETADATA'].fields_by_name['token_id']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_TOKENMETADATA'].fields_by_name['subject']._loaded_options = None
  _globals['_TOKENMETADATA'].fields_by_name['subject']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_TOKENMETADATA'].fields_by_name['audience']._loaded_options = None
  _globals['_TOKENMETADATA'].fields_by_name['audience']._serialized_options = b'\272H\005\222\001\002\010\001'
  _globals['_TOKENMETADATA'].fields_by_name['scopes']._loaded_options = None
  _globals['_TOKENMETADATA'].fields_by_name['scopes']._serialized_options = b'\272H\005\222\001\002\010\001'
  _globals['_TOKENMETADATA'].fields_by_name['issued_at']._loaded_options = None
  _globals['_TOKENMETADATA'].fields_by_name['issued_at']._serialized_options = b'\272H\004\"\002(\000'
  _globals['_TOKENMETADATA'].fields_by_name['expires_at']._loaded_options = None
  _globals['_TOKENMETADATA'].fields_by_name['expires_at']._serialized_options = b'\272H\004\"\002(\000'
  _globals['_TOKENMETADATA'].fields_by_name['not_before']._loaded_options = None
  _globals['_TOKENMETADATA'].fields_by_name['not_before']._serialized_options = b'\272H\004\"\002(\000'
  _globals['_TOKENMETADATA'].fields_by_name['issuer']._loaded_options = None
  _globals['_TOKENMETADATA'].fields_by_name['issuer']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_TOKENMETADATA']._serialized_start=162
  _globals['_TOKENMETADATA']._serialized_end=521
# @@protoc_insertion_point(module_scope)
