# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: gcommon/v1/common/health_config.proto
# Protobuf Python Version: 6.32.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    32,
    0,
    '',
    'gcommon/v1/common/health_config.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import go_features_pb2 as google_dot_protobuf_dot_go__features__pb2
from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n%gcommon/v1/common/health_config.proto\x12\x11gcommon.v1.common\x1a!google/protobuf/go_features.proto\x1a\x1b\x62uf/validate/validate.proto\"\x9b\x03\n\x0cHealthConfig\x12\x18\n\x07\x65nabled\x18\x01 \x01(\x08R\x07\x65nabled\x12#\n\x08\x65ndpoint\x18\x02 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x08\x65ndpoint\x12,\n\rliveness_path\x18\x03 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x0clivenessPath\x12.\n\x0ereadiness_path\x18\x04 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\rreadinessPath\x12*\n\x0cstartup_path\x18\x05 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x0bstartupPath\x12\x30\n\x0ftimeout_seconds\x18\x06 \x01(\x05\x42\x07\xbaH\x04\x1a\x02 \x00R\x0etimeoutSeconds\x12\x32\n\x10interval_seconds\x18\x07 \x01(\x05\x42\x07\xbaH\x04\x1a\x02(\x00R\x0fintervalSeconds\x12\x39\n\x14grace_period_seconds\x18\x08 \x01(\x05\x42\x07\xbaH\x04\x1a\x02(\x00R\x12gracePeriodSeconds\x12!\n\x07retries\x18\t \x01(\x05\x42\x07\xbaH\x04\x1a\x02(\x00R\x07retriesB5Z+github.com/jdfalk/gcommon/sdks/go/v1/common\x92\x03\x05\xd2>\x02\x10\x03\x62\x08\x65\x64itionsp\xe8\x07')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'gcommon.v1.common.health_config_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z+github.com/jdfalk/gcommon/sdks/go/v1/common\222\003\005\322>\002\020\003'
  _globals['_HEALTHCONFIG'].fields_by_name['endpoint']._loaded_options = None
  _globals['_HEALTHCONFIG'].fields_by_name['endpoint']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_HEALTHCONFIG'].fields_by_name['liveness_path']._loaded_options = None
  _globals['_HEALTHCONFIG'].fields_by_name['liveness_path']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_HEALTHCONFIG'].fields_by_name['readiness_path']._loaded_options = None
  _globals['_HEALTHCONFIG'].fields_by_name['readiness_path']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_HEALTHCONFIG'].fields_by_name['startup_path']._loaded_options = None
  _globals['_HEALTHCONFIG'].fields_by_name['startup_path']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_HEALTHCONFIG'].fields_by_name['timeout_seconds']._loaded_options = None
  _globals['_HEALTHCONFIG'].fields_by_name['timeout_seconds']._serialized_options = b'\272H\004\032\002 \000'
  _globals['_HEALTHCONFIG'].fields_by_name['interval_seconds']._loaded_options = None
  _globals['_HEALTHCONFIG'].fields_by_name['interval_seconds']._serialized_options = b'\272H\004\032\002(\000'
  _globals['_HEALTHCONFIG'].fields_by_name['grace_period_seconds']._loaded_options = None
  _globals['_HEALTHCONFIG'].fields_by_name['grace_period_seconds']._serialized_options = b'\272H\004\032\002(\000'
  _globals['_HEALTHCONFIG'].fields_by_name['retries']._loaded_options = None
  _globals['_HEALTHCONFIG'].fields_by_name['retries']._serialized_options = b'\272H\004\032\002(\000'
  _globals['_HEALTHCONFIG']._serialized_start=125
  _globals['_HEALTHCONFIG']._serialized_end=536
# @@protoc_insertion_point(module_scope)
