// file: proto/gcommon/v1/metrics/v1/metric_query.proto
// version: 1.0.0
// guid: b48baa90-492c-496f-bcef-674b2fa2d6d4

edition = "2023";

package gcommon.v1.metrics.v1;

import "google/protobuf/duration.proto";
import "google/protobuf/go_features.proto";
import "proto/gcommon/v1/common/messages/sort_options.proto";
import "proto/gcommon/v1/metrics/v1/time_range.proto";
import "proto/gcommon/v1/metrics/enums/aggregation_type.proto";
import "proto/gcommon/v1/metrics/v1/aggregation_spec.proto";
import "proto/gcommon/v1/metrics/v1/group_by_spec.proto";
import "proto/gcommon/v1/metrics/v1/metric_filter.proto";
import "proto/gcommon/v1/metrics/v1/query_operation.proto";
import "proto/gcommon/v1/metrics/v1/time_range.proto";
import "proto/gcommon/v1/metrics/v1/timestamp_range.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/proto/gcommon/v1/metrics/v1";

message MetricQuery {
  // Unique identifier for this query
  string query_id = 1;

  // Human-readable query name or description
  string name = 2;

  // Query string (PromQL, SQL, or custom query language)
  string query_string = 3;

  // Filter criteria for selecting metrics
  MetricFilter filter = 4;

  // Time range for the query
  MetricsTimeRange time_filter = 5;

  // Aggregation operations to apply
  repeated AggregationSpec aggregations = 6;

  // Group by specifications
  repeated GroupBySpec group_by = 7;

  // Sort criteria
  repeated gcommon.v1.common.SortOptions sort_criteria = 8;

  // Maximum number of results to return
  int32 limit = 9;

  // Offset for pagination
  int32 offset = 10;
}
