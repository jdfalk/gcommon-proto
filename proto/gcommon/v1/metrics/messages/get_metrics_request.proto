// file: proto/gcommon/v1/metrics/v1/get_metrics_request.proto
// version: 1.0.0
// guid: ec242bb6-5817-45b8-88de-7245b2536b35

edition = "2023";

package gcommon.v1.metrics;

import "gcommon/v1/common/messages/pagination_options.proto";
import "gcommon/v1/common/messages/request_metadata.proto";
import "gcommon/v1/metrics/messages/metric_aggregation.proto";
import "gcommon/v1/metrics/messages/metric_filter.proto";
import "gcommon/v1/metrics/messages/output_options.proto";
import "gcommon/v1/metrics/messages/time_range.proto";
import "google/protobuf/go_features.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/sdks/go/gcommon/v1/metrics";

message MetricsGetMetricsRequest {
  // Standard request metadata (tracing, auth, etc.)
  gcommon.v1.common.RequestMetadata metadata = 1;

  // Filter to determine which metrics to retrieve
  MetricFilter filter = 2;

  // Time range for the request
  MetricsTimeRange time_range = 3;

  // Aggregation options for the metrics
  MetricAggregation aggregation = 4;

  // Pagination options
  gcommon.v1.common.PaginationOptions pagination = 5;

  // Optional provider ID to query
  string provider_id = 6;

  // Output format options
  OutputOptions output_options = 7;

  // Whether to include metadata with results
  bool include_metadata = 8;

  // Maximum number of metrics to return
  int32 limit = 9;
}
