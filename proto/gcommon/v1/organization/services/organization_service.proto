// file: proto/gcommon/v1/organization/services/organization_service.proto
// version: 1.0.0
// guid: 7a327e8c-286f-4bf2-9d3d-7917e6de4f86
edition = "2023";

package gcommon.v1.organization;


import "google/protobuf/go_features.proto";
import "gcommon/v1/organization/messages/add_member_request.proto";
import "gcommon/v1/organization/messages/add_member_response.proto";
import "gcommon/v1/organization/messages/create_organization_request.proto";
import "gcommon/v1/organization/messages/create_organization_response.proto";
import "gcommon/v1/organization/messages/delete_organization_request.proto";
import "gcommon/v1/organization/messages/delete_organization_response.proto";
import "gcommon/v1/organization/messages/get_organization_request.proto";
import "gcommon/v1/organization/messages/get_organization_response.proto";
import "gcommon/v1/organization/messages/get_organization_settings_request.proto";
import "gcommon/v1/organization/messages/get_organization_settings_response.proto";
import "gcommon/v1/organization/messages/list_members_request.proto";
import "gcommon/v1/organization/messages/list_members_response.proto";
import "gcommon/v1/organization/messages/list_organizations_request.proto";
import "gcommon/v1/organization/messages/list_organizations_response.proto";
import "gcommon/v1/organization/messages/remove_member_request.proto";
import "gcommon/v1/organization/messages/remove_member_response.proto";
import "gcommon/v1/organization/messages/update_member_request.proto";
import "gcommon/v1/organization/messages/update_member_response.proto";
import "gcommon/v1/organization/messages/update_organization_request.proto";
import "gcommon/v1/organization/messages/update_organization_response.proto";
import "gcommon/v1/organization/messages/update_organization_settings_request.proto";
import "gcommon/v1/organization/messages/update_organization_settings_response.proto";























option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/organization";

/**
 * OrganizationService provides comprehensive organization management capabilities.
 * Handles organization CRUD operations, member management, settings configuration,
 * and organizational structure administration.
 */
service OrganizationService {
  // Create a new organization
  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);

  // Get an organization by ID
  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse);

  // Update an existing organization
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse);

  // Delete an organization (soft delete)
  rpc DeleteOrganization(DeleteOrganizationRequest) returns (DeleteOrganizationResponse);

  // List organizations (with pagination and filtering)
  rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse);

  // Add a member to an organization
  rpc AddMember(AddMemberRequest) returns (AddMemberResponse);

  // Remove a member from an organization
  rpc RemoveMember(RemoveMemberRequest) returns (RemoveMemberResponse);

  // Update a member's information or permissions
  rpc UpdateMember(UpdateMemberRequest) returns (UpdateMemberResponse);

  // List organization members (with pagination and filtering)
  rpc ListMembers(ListMembersRequest) returns (ListMembersResponse);

  // Get organization settings
  rpc GetOrganizationSettings(GetOrganizationSettingsRequest) returns (GetOrganizationSettingsResponse);

  // Update organization settings
  rpc UpdateOrganizationSettings(UpdateOrganizationSettingsRequest) returns (UpdateOrganizationSettingsResponse);
}
