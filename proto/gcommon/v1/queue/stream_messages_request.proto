// file: proto/gcommon/v1/queue/stream_messages_request.proto
// version: 1.0.0
// guid: 8571acf9-5131-45f6-b0ad-b227ce7f2980

edition = "2023";

package gcommon.v1.queue;

import "gcommon/v1/common/ack_level.proto";
import "gcommon/v1/queue/message_filter.proto";
import "gcommon/v1/queue/offset_config.proto";
import "gcommon/v1/queue/stream_config.proto";
import "google/protobuf/go_features.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/sdks/go/v1/queue";

message StreamMessagesRequest {
  // Topic or queue identifier to stream from
  string topic = 1;

  // Consumer group ID for coordinated consumption
  string consumer_group_id = 2;

  // Individual consumer ID within the group
  string consumer_id = 3;

  // Starting offset configuration
  OffsetConfig offset_config = 4;

  // Maximum number of messages to stream
  int64 max_messages = 5;

  // Maximum time to keep stream open (milliseconds)
  int32 stream_timeout_ms = 6;

  // Acknowledgment level required
  AckLevel ack_level = 7;

  // Batch size for message delivery
  int32 batch_size = 8;

  // Message filter criteria
  MessageFilter filter = 9;

  // Auto-acknowledge messages after delivery
  bool auto_acknowledge = 10;

  // Pause stream on error
  bool pause_on_error = 11;

  // Include message metadata in stream
  bool include_metadata = 12;

  // Specific partition IDs to stream from (empty = all partitions)
  repeated int32 partition_ids = 13;

  // Stream configuration options
  StreamConfig stream_config = 14;
}
