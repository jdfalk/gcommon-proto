// file: proto/gcommon/v1/common/messages/cache_policy.proto
// version: 1.0.0
// guid: c37fc88f-0b7c-4fa4-9c60-23736d2bed76
edition = "2023";

package gcommon.v1.common;

import "gcommon/v1/common/enums/eviction_policy.proto";
import "gcommon/v1/common/enums/expiration_policy.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/go_features.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/sdks/go/gcommon/v1/common";

/**
 * Cache policy configuration for cache behavior and performance tuning.
 * Defines expiration, eviction, sizing, and operational policies
 * for consistent cache management across GCommon modules.
 */
message CachePolicy {
  // Cache expiration policy strategy
  gcommon.v1.common.ExpirationPolicy expiration = 1;

  // Eviction policy when cache reaches capacity
  gcommon.v1.common.EvictionPolicy eviction = 2;

  // Maximum cache size in bytes (0 for unlimited)
  int64 max_size_bytes = 3;

  // Maximum number of cache entries (0 for unlimited)
  int64 max_entries = 4;

  // Default time-to-live for cache entries
  google.protobuf.Duration default_ttl = 5;

  // Whether to refresh entries before they expire
  bool refresh_ahead = 6;

  // Whether to collect and expose cache statistics
  bool enable_stats = 7;
}
