// file: proto/gcommon/v1/common/expiration_policy.proto
// version: 1.0.0
// guid: 788be552-a444-4860-9db6-1004f1f1fabf
edition = "2023";

package gcommon.v1.common;

import "google/protobuf/go_features.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/sdks/go/v1/common";

/**
 * Cache expiration policy enumeration for cache management.
 * Defines how cached items expire and when they should be evicted
 * from cache storage across all GCommon modules.
 */
enum ExpirationPolicy {
  // Default value indicating no expiration policy was specified
  EXPIRATION_POLICY_UNSPECIFIED = 0;

  // Time-to-live based expiration - items expire after a fixed duration
  EXPIRATION_POLICY_TTL = 1;

  // Idle time expiration - items expire after being unused for a duration
  EXPIRATION_POLICY_IDLE = 2;

  // Write time expiration - items expire after a duration from last write
  EXPIRATION_POLICY_WRITE = 3;

  // Never expire - items remain in cache until explicitly removed
  EXPIRATION_POLICY_NEVER = 4;
}
