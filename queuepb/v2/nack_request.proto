// file: proto/gcommon/v2/queue/nack_request.proto
// version: 1.1.0
// guid: 5b6c7d8e-9f0a-1b2c-3d4e-5f6a7b8c9d0e

edition = "2023";

package queue.v2;

import "commonpb/v2/request_metadata.proto";
import "queuepb/v2/nack_error.proto";
import "google/protobuf/go_features.proto";
import "buf/validate/validate.proto";


option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/queuepb/v2";

/**
 * Request to negatively acknowledge (NACK) a message.
 * This indicates that the message could not be processed and may need to be requeued.
 */
message NackRequest {
  // Acknowledgment token received with the message
  string ack_token = 1 [(buf.validate.field).string.min_len = 1];

  // Whether the message should be requeued for retry
  bool requeue = 2;

  // Reason for the negative acknowledgment
  string reason = 3 [(buf.validate.field).string.min_len = 1];

  // Error details if processing failed
  NackError error = 4;

  // Delay before requeuing (if requeue is true)
  int64 requeue_delay_seconds = 5 [(buf.validate.field).int64.gte = 0];

  // Maximum number of retry attempts for this message
  int32 max_retries = 6 [(buf.validate.field).int32.gte = 0];

  // Request metadata for tracing and correlation
  common.v2.RequestMetadata metadata = 100;
}
