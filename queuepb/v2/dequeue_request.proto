// file: proto/gcommon/v2/queue/dequeue_request.proto
// version: 1.0.0
// guid: ce6f7a8b-9c0d-1e2f-3a4b-5c6d7e8f9a0b

edition = "2023";

package queue.v2;

import "commonpb/v2/request_metadata.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/go_features.proto";
import "buf/validate/validate.proto";
// Standard imports
// Common types

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "github.com/jdfalk/gcommon/pkg/queuepb/v2";

/**
 * DequeueRequest retrieves one or more messages from a queue.
 * Supports various consumption patterns including polling,
 * long polling, and batch operations.
 *
 * Follows 1-1-1 pattern: one message per file.
 */
message DequeueRequest {
  // Required fields (1-10)

  /**
   * The name/identifier of the queue to receive messages from.
   * Must be a valid existing queue.
   */
  string queue_name = 1 [
      (buf.validate.field).string.min_len = 1,
      (buf.validate.field).string.max_len = 100
    ];

  // Optional fields (11-50)

  /**
   * Standard request metadata including authentication context,
   * tracing information, and client details.
   */
  common.v2.RequestMetadata metadata = 11;

  /**
   * Maximum number of messages to receive in this request.
   * Range: 1-100. Default: 1.
   */
  int32 max_messages = 12;

  /**
   * Visibility timeout - how long the message is hidden from
   * other consumers after being received. Must be acknowledged
   * or rejected within this time. Default: queue configuration.
   */
  google.protobuf.Duration visibility_timeout = 13;

  /**
   * Wait time for long polling. If no messages are available,
   * the request will wait up to this duration for messages
   * to arrive. Set to 0 for immediate return.
   */
  google.protobuf.Duration wait_time = 14;

  /**
   * Message group ID filter. If specified, only messages
   * from this group will be returned. Useful for ordered processing.
   */
  string group_id_filter = 15;

  /**
   * Attribute filters for selective message consumption.
   * Only messages matching all specified attributes will be returned.
   */
  map<string, string> attribute_filters = 16;

  /**
   * Message type filter. If specified, only messages of
   * this type will be returned.
   */
  string message_type_filter = 17;

  /**
   * Consumer ID for tracking and load balancing.
   * Helps with consumer group coordination and metrics.
   */
  string consumer_id = 18;

  /**
   * Include message attributes in the response.
   * Default: true. Set to false to reduce response size.
   */
  bool include_attributes = 19;

  /**
   * Include message metadata (timestamps, delivery count, etc.)
   * in the response. Default: true.
   */
  bool include_metadata = 20;

  /**
   * Peek mode - return messages without removing them from
   * the queue. Useful for inspection. Default: false.
   */
  bool peek_only = 21;

  /**
   * Priority threshold - only return messages with priority
   * greater than or equal to this value. Range: 0-255.
   */
  int32 min_priority = 22;
}
